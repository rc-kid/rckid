#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_92)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_92) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 92 0000
        gbc.setState(0x2da, 0x4588, 0xf520, 0xc089, 0x2187, 0xdce8, 0x0, 0x1);
        gbc.writeMem(0x2da, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4588);
        EXPECT(gbc.pc(), 0x2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0001
        gbc.setState(0x8808, 0xdda6, 0x1030, 0xe0f, 0xec0, 0x55a3, 0x1, 0x1);
        gbc.writeMem(0x8808, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdda6);
        EXPECT(gbc.pc(), 0x880a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8808), 0xcb);
        EXPECT(gbc.readMem(0x8809), 0x92);
        // CB 92 0002
        gbc.setState(0xd407, 0x253a, 0x8590, 0xe660, 0xfd60, 0xab0b, 0x1, 0x0);
        gbc.writeMem(0xd407, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x253a);
        EXPECT(gbc.pc(), 0xd409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd407), 0xcb);
        EXPECT(gbc.readMem(0xd408), 0x92);
        // CB 92 0003
        gbc.setState(0xcbde, 0xc7aa, 0xd3b0, 0x8675, 0x23db, 0xeae9, 0x1, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc7aa);
        EXPECT(gbc.pc(), 0xcbe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbde), 0xcb);
        EXPECT(gbc.readMem(0xcbdf), 0x92);
        // CB 92 0004
        gbc.setState(0x209c, 0xfa56, 0x73b0, 0x894d, 0x3296, 0x65ef, 0x0, 0x0);
        gbc.writeMem(0x209c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfa56);
        EXPECT(gbc.pc(), 0x209e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0005
        gbc.setState(0x1c32, 0x4f5e, 0xc6c0, 0xf796, 0xa689, 0x820e, 0x1, 0x0);
        gbc.writeMem(0x1c32, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4f5e);
        EXPECT(gbc.pc(), 0x1c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0006
        gbc.setState(0x7262, 0xadc2, 0x9350, 0x603b, 0x5043, 0x491b, 0x1, 0x1);
        gbc.writeMem(0x7262, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xadc2);
        EXPECT(gbc.pc(), 0x7264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0007
        gbc.setState(0x6994, 0xba4b, 0xec60, 0x4b63, 0x8cbe, 0xb41e, 0x1, 0x0);
        gbc.writeMem(0x6994, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xba4b);
        EXPECT(gbc.pc(), 0x6996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0008
        gbc.setState(0xc9f8, 0xb4c0, 0x4550, 0x8a99, 0x7f8b, 0xe13, 0x0, 0x1);
        gbc.writeMem(0xc9f8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb4c0);
        EXPECT(gbc.pc(), 0xc9fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f8), 0xcb);
        EXPECT(gbc.readMem(0xc9f9), 0x92);
        // CB 92 0009
        gbc.setState(0xa1c0, 0xde7b, 0xc300, 0x891a, 0xef23, 0xa1f4, 0x0, 0x0);
        gbc.writeMem(0xa1c0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xde7b);
        EXPECT(gbc.pc(), 0xa1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c0), 0xcb);
        EXPECT(gbc.readMem(0xa1c1), 0x92);
        // CB 92 000A
        gbc.setState(0x2d2b, 0xa9c9, 0x6da0, 0x37dd, 0xf50a, 0x518c, 0x1, 0x1);
        gbc.writeMem(0x2d2b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa9c9);
        EXPECT(gbc.pc(), 0x2d2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 000B
        gbc.setState(0x3057, 0x9f0c, 0x6b60, 0xf531, 0xfc0e, 0x9807, 0x1, 0x0);
        gbc.writeMem(0x3057, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9f0c);
        EXPECT(gbc.pc(), 0x3059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 000C
        gbc.setState(0x896, 0x9850, 0x6c30, 0xc4d0, 0x11c2, 0xde04, 0x0, 0x1);
        gbc.writeMem(0x896, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9850);
        EXPECT(gbc.pc(), 0x898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 000D
        gbc.setState(0xd2bc, 0x1e0d, 0x8d00, 0x4815, 0x67ad, 0xb324, 0x1, 0x0);
        gbc.writeMem(0xd2bc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1e0d);
        EXPECT(gbc.pc(), 0xd2be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2bc), 0xcb);
        EXPECT(gbc.readMem(0xd2bd), 0x92);
        // CB 92 000E
        gbc.setState(0x21b5, 0xf8ba, 0x35a0, 0x832b, 0x37b8, 0x2ee7, 0x0, 0x1);
        gbc.writeMem(0x21b5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf8ba);
        EXPECT(gbc.pc(), 0x21b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 000F
        gbc.setState(0x4b23, 0x4808, 0x5ed0, 0x8693, 0x8a83, 0xb7a8, 0x0, 0x1);
        gbc.writeMem(0x4b23, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4808);
        EXPECT(gbc.pc(), 0x4b25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0010
        gbc.setState(0x2929, 0x773, 0x9e0, 0x68ec, 0x3afe, 0xe88d, 0x0, 0x0);
        gbc.writeMem(0x2929, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x773);
        EXPECT(gbc.pc(), 0x292b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0011
        gbc.setState(0x87fb, 0xb63f, 0x9150, 0x5f35, 0x2364, 0xf447, 0x0, 0x1);
        gbc.writeMem(0x87fb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb63f);
        EXPECT(gbc.pc(), 0x87fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87fb), 0xcb);
        EXPECT(gbc.readMem(0x87fc), 0x92);
        // CB 92 0012
        gbc.setState(0xcfdb, 0x4a3d, 0x5900, 0x5838, 0x60c8, 0xaf9d, 0x1, 0x1);
        gbc.writeMem(0xcfdb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4a3d);
        EXPECT(gbc.pc(), 0xcfdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfdb), 0xcb);
        EXPECT(gbc.readMem(0xcfdc), 0x92);
        // CB 92 0013
        gbc.setState(0x438e, 0x4a05, 0x79a0, 0xaa16, 0xdc70, 0xdf5b, 0x1, 0x1);
        gbc.writeMem(0x438e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4a05);
        EXPECT(gbc.pc(), 0x4390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0014
        gbc.setState(0x99ac, 0xf517, 0xee40, 0xa9b, 0xb0b9, 0xde0e, 0x1, 0x0);
        gbc.writeMem(0x99ac, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf517);
        EXPECT(gbc.pc(), 0x99ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ac), 0xcb);
        EXPECT(gbc.readMem(0x99ad), 0x92);
        // CB 92 0015
        gbc.setState(0x8448, 0x45a9, 0xe360, 0x8d6, 0x34c6, 0x3673, 0x0, 0x1);
        gbc.writeMem(0x8448, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x45a9);
        EXPECT(gbc.pc(), 0x844a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8448), 0xcb);
        EXPECT(gbc.readMem(0x8449), 0x92);
        // CB 92 0016
        gbc.setState(0xdb63, 0x674c, 0x2710, 0x3b94, 0x6e76, 0xc5c0, 0x1, 0x1);
        gbc.writeMem(0xdb63, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x674c);
        EXPECT(gbc.pc(), 0xdb65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb63), 0xcb);
        EXPECT(gbc.readMem(0xdb64), 0x92);
        // CB 92 0018
        gbc.setState(0xa905, 0xb9a6, 0x4ae0, 0x901b, 0xe569, 0xba80, 0x1, 0x1);
        gbc.writeMem(0xa905, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb9a6);
        EXPECT(gbc.pc(), 0xa907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa905), 0xcb);
        EXPECT(gbc.readMem(0xa906), 0x92);
        // CB 92 0019
        gbc.setState(0xe927, 0x49f4, 0xfd00, 0x8293, 0x9edc, 0x8607, 0x1, 0x1);
        gbc.writeMem(0xe927, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x49f4);
        EXPECT(gbc.pc(), 0xe929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe927), 0xcb);
        EXPECT(gbc.readMem(0xe928), 0x92);
        // CB 92 001A
        gbc.setState(0x4a8, 0xeab3, 0x68d0, 0x3fd5, 0xb5ae, 0xebca, 0x1, 0x1);
        gbc.writeMem(0x4a8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xeab3);
        EXPECT(gbc.pc(), 0x4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 001B
        gbc.setState(0x3a7c, 0x64a1, 0xf2c0, 0x4274, 0x9120, 0x5952, 0x1, 0x0);
        gbc.writeMem(0x3a7c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x64a1);
        EXPECT(gbc.pc(), 0x3a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 001C
        gbc.setState(0x2ab1, 0x7080, 0x6740, 0xc3b2, 0xa978, 0x181, 0x1, 0x1);
        gbc.writeMem(0x2ab1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7080);
        EXPECT(gbc.pc(), 0x2ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 001D
        gbc.setState(0xb076, 0xce8a, 0x9700, 0xe6c7, 0x5f50, 0x701a, 0x0, 0x1);
        gbc.writeMem(0xb076, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xce8a);
        EXPECT(gbc.pc(), 0xb078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb076), 0xcb);
        EXPECT(gbc.readMem(0xb077), 0x92);
        // CB 92 001E
        gbc.setState(0x9e06, 0x387f, 0x6580, 0x2591, 0xac13, 0x1cb0, 0x0, 0x1);
        gbc.writeMem(0x9e06, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x387f);
        EXPECT(gbc.pc(), 0x9e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e06), 0xcb);
        EXPECT(gbc.readMem(0x9e07), 0x92);
        // CB 92 001F
        gbc.setState(0x346, 0xe26a, 0xb730, 0xc526, 0xe4d3, 0xd18b, 0x0, 0x1);
        gbc.writeMem(0x346, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe26a);
        EXPECT(gbc.pc(), 0x348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0020
        gbc.setState(0xd15a, 0x5b6e, 0xb4e0, 0x16b7, 0x39a0, 0x8932, 0x0, 0x0);
        gbc.writeMem(0xd15a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5b6e);
        EXPECT(gbc.pc(), 0xd15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15a), 0xcb);
        EXPECT(gbc.readMem(0xd15b), 0x92);
        // CB 92 0021
        gbc.setState(0xb001, 0x61c8, 0x4d40, 0x61ad, 0xef3, 0x193, 0x1, 0x1);
        gbc.writeMem(0xb001, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x61c8);
        EXPECT(gbc.pc(), 0xb003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb001), 0xcb);
        EXPECT(gbc.readMem(0xb002), 0x92);
        // CB 92 0022
        gbc.setState(0x7b4e, 0x519b, 0xfca0, 0x1dfe, 0x3fb3, 0x3ee0, 0x0, 0x0);
        gbc.writeMem(0x7b4e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x519b);
        EXPECT(gbc.pc(), 0x7b50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0023
        gbc.setState(0xab9a, 0x4ca7, 0xf900, 0xc4f0, 0xbcaf, 0xc91f, 0x0, 0x1);
        gbc.writeMem(0xab9a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4ca7);
        EXPECT(gbc.pc(), 0xab9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab9a), 0xcb);
        EXPECT(gbc.readMem(0xab9b), 0x92);
        // CB 92 0024
        gbc.setState(0xe357, 0xd3e3, 0x9ca0, 0x309c, 0x6cd, 0xab76, 0x1, 0x1);
        gbc.writeMem(0xe357, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd3e3);
        EXPECT(gbc.pc(), 0xe359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe357), 0xcb);
        EXPECT(gbc.readMem(0xe358), 0x92);
        // CB 92 0025
        gbc.setState(0x121d, 0xc9d, 0x39c0, 0x9d1b, 0x8b20, 0x630b, 0x0, 0x1);
        gbc.writeMem(0x121d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc9d);
        EXPECT(gbc.pc(), 0x121f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0026
        gbc.setState(0xdb97, 0xd795, 0xb7e0, 0x9b80, 0xb7a5, 0x445c, 0x0, 0x0);
        gbc.writeMem(0xdb97, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd795);
        EXPECT(gbc.pc(), 0xdb99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb97), 0xcb);
        EXPECT(gbc.readMem(0xdb98), 0x92);
        // CB 92 0027
        gbc.setState(0xd324, 0x33b, 0x790, 0x37ce, 0xdc3e, 0x2015, 0x1, 0x1);
        gbc.writeMem(0xd324, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x33b);
        EXPECT(gbc.pc(), 0xd326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd324), 0xcb);
        EXPECT(gbc.readMem(0xd325), 0x92);
        // CB 92 0028
        gbc.setState(0xe894, 0x8303, 0xf480, 0xf656, 0x152c, 0x4af, 0x0, 0x1);
        gbc.writeMem(0xe894, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8303);
        EXPECT(gbc.pc(), 0xe896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe894), 0xcb);
        EXPECT(gbc.readMem(0xe895), 0x92);
        // CB 92 0029
        gbc.setState(0xbf57, 0x7164, 0x5e0, 0xecb4, 0xe910, 0x5b36, 0x1, 0x1);
        gbc.writeMem(0xbf57, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7164);
        EXPECT(gbc.pc(), 0xbf59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf57), 0xcb);
        EXPECT(gbc.readMem(0xbf58), 0x92);
        // CB 92 002A
        gbc.setState(0x5954, 0xda7e, 0xfda0, 0x254b, 0xf36b, 0xc14c, 0x0, 0x1);
        gbc.writeMem(0x5954, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xda7e);
        EXPECT(gbc.pc(), 0x5956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 002B
        gbc.setState(0xe9b8, 0x5d40, 0xe5c0, 0x1225, 0x7e69, 0x1a37, 0x0, 0x1);
        gbc.writeMem(0xe9b8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5d40);
        EXPECT(gbc.pc(), 0xe9ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b8), 0xcb);
        EXPECT(gbc.readMem(0xe9b9), 0x92);
        // CB 92 002C
        gbc.setState(0x81c2, 0xc06e, 0xa510, 0xeb77, 0xca8a, 0x9939, 0x0, 0x1);
        gbc.writeMem(0x81c2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc06e);
        EXPECT(gbc.pc(), 0x81c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c2), 0xcb);
        EXPECT(gbc.readMem(0x81c3), 0x92);
        // CB 92 002D
        gbc.setState(0xd0d0, 0x3c6c, 0x5e70, 0x1df3, 0x84ff, 0x68c7, 0x1, 0x0);
        gbc.writeMem(0xd0d0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3c6c);
        EXPECT(gbc.pc(), 0xd0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d0), 0xcb);
        EXPECT(gbc.readMem(0xd0d1), 0x92);
        // CB 92 002E
        gbc.setState(0x2376, 0xe108, 0xa190, 0xe25d, 0xbccf, 0xeb5d, 0x0, 0x1);
        gbc.writeMem(0x2376, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe108);
        EXPECT(gbc.pc(), 0x2378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 002F
        gbc.setState(0x968c, 0xfac, 0xa240, 0x4e16, 0x4e92, 0x376d, 0x1, 0x1);
        gbc.writeMem(0x968c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfac);
        EXPECT(gbc.pc(), 0x968e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968c), 0xcb);
        EXPECT(gbc.readMem(0x968d), 0x92);
        // CB 92 0030
        gbc.setState(0x1db5, 0x1b31, 0x4130, 0xd3f2, 0x964c, 0x429, 0x0, 0x1);
        gbc.writeMem(0x1db5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1b31);
        EXPECT(gbc.pc(), 0x1db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0031
        gbc.setState(0xbac9, 0x2af1, 0x26d0, 0xe041, 0x5b7d, 0x5f25, 0x0, 0x1);
        gbc.writeMem(0xbac9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2af1);
        EXPECT(gbc.pc(), 0xbacb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac9), 0xcb);
        EXPECT(gbc.readMem(0xbaca), 0x92);
        // CB 92 0032
        gbc.setState(0x4ac, 0x1a86, 0x9480, 0xef7f, 0xaddd, 0x73ec, 0x0, 0x0);
        gbc.writeMem(0x4ac, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1a86);
        EXPECT(gbc.pc(), 0x4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0033
        gbc.setState(0xbdb, 0x70a4, 0x4330, 0x4153, 0xf816, 0xdf6d, 0x0, 0x0);
        gbc.writeMem(0xbdb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x70a4);
        EXPECT(gbc.pc(), 0xbdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0034
        gbc.setState(0xe66b, 0xe4ab, 0x6340, 0xec51, 0xcf76, 0xa650, 0x1, 0x0);
        gbc.writeMem(0xe66b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe4ab);
        EXPECT(gbc.pc(), 0xe66d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe66b), 0xcb);
        EXPECT(gbc.readMem(0xe66c), 0x92);
        // CB 92 0035
        gbc.setState(0x6cc6, 0x8f18, 0x82f0, 0xfb74, 0xe90c, 0x8f77, 0x0, 0x0);
        gbc.writeMem(0x6cc6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8f18);
        EXPECT(gbc.pc(), 0x6cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0036
        gbc.setState(0x16ab, 0xc26, 0x6680, 0x13d, 0x5b79, 0x7477, 0x1, 0x1);
        gbc.writeMem(0x16ab, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc26);
        EXPECT(gbc.pc(), 0x16ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0037
        gbc.setState(0x9f2d, 0x78d, 0xb2a0, 0x9ead, 0xfe05, 0x8e93, 0x0, 0x0);
        gbc.writeMem(0x9f2d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x78d);
        EXPECT(gbc.pc(), 0x9f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f2d), 0xcb);
        EXPECT(gbc.readMem(0x9f2e), 0x92);
        // CB 92 0038
        gbc.setState(0xba77, 0xe2f4, 0xfb00, 0x1d85, 0x829c, 0xc790, 0x0, 0x1);
        gbc.writeMem(0xba77, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe2f4);
        EXPECT(gbc.pc(), 0xba79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba77), 0xcb);
        EXPECT(gbc.readMem(0xba78), 0x92);
        // CB 92 003A
        gbc.setState(0x42fa, 0x1277, 0xb380, 0xaf95, 0x8762, 0x5bbc, 0x1, 0x0);
        gbc.writeMem(0x42fa, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1277);
        EXPECT(gbc.pc(), 0x42fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 003B
        gbc.setState(0x750, 0xb77f, 0x6e10, 0xa002, 0x3207, 0x93d7, 0x0, 0x1);
        gbc.writeMem(0x750, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb77f);
        EXPECT(gbc.pc(), 0x752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 003C
        gbc.setState(0xe75f, 0xb202, 0xcc0, 0x8f8c, 0xf264, 0x34e3, 0x1, 0x0);
        gbc.writeMem(0xe75f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb202);
        EXPECT(gbc.pc(), 0xe761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75f), 0xcb);
        EXPECT(gbc.readMem(0xe760), 0x92);
        // CB 92 003D
        gbc.setState(0xf, 0x55d3, 0xd310, 0x308e, 0x93e6, 0xe30b, 0x1, 0x1);
        gbc.writeMem(0xf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x55d3);
        EXPECT(gbc.pc(), 0x11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 003E
        gbc.setState(0x702b, 0xa2e3, 0x5c90, 0x16b3, 0x98a7, 0xf6dd, 0x0, 0x1);
        gbc.writeMem(0x702b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa2e3);
        EXPECT(gbc.pc(), 0x702d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 003F
        gbc.setState(0xb9a1, 0x3eb7, 0xcf60, 0x353c, 0xd62d, 0x7ffc, 0x1, 0x1);
        gbc.writeMem(0xb9a1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3eb7);
        EXPECT(gbc.pc(), 0xb9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9a1), 0xcb);
        EXPECT(gbc.readMem(0xb9a2), 0x92);
        // CB 92 0040
        gbc.setState(0x2a88, 0x705a, 0x45d0, 0xa780, 0xa478, 0x3bc3, 0x1, 0x1);
        gbc.writeMem(0x2a88, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x705a);
        EXPECT(gbc.pc(), 0x2a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0041
        gbc.setState(0xb3cd, 0x48b9, 0x6c50, 0xaee7, 0x7564, 0xc7b6, 0x1, 0x1);
        gbc.writeMem(0xb3cd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x48b9);
        EXPECT(gbc.pc(), 0xb3cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3cd), 0xcb);
        EXPECT(gbc.readMem(0xb3ce), 0x92);
        // CB 92 0042
        gbc.setState(0x1862, 0x76bb, 0xc930, 0xf210, 0x976, 0x9301, 0x0, 0x1);
        gbc.writeMem(0x1862, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x76bb);
        EXPECT(gbc.pc(), 0x1864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0043
        gbc.setState(0x776a, 0xd4cc, 0xecc0, 0xf02, 0xdcf6, 0x1982, 0x0, 0x0);
        gbc.writeMem(0x776a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd4cc);
        EXPECT(gbc.pc(), 0x776c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0044
        gbc.setState(0x7c42, 0x3d17, 0x4560, 0x6654, 0xb2de, 0x103f, 0x0, 0x1);
        gbc.writeMem(0x7c42, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3d17);
        EXPECT(gbc.pc(), 0x7c44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0045
        gbc.setState(0xdd68, 0x951, 0x4980, 0x217e, 0xa7a5, 0x5d3a, 0x1, 0x0);
        gbc.writeMem(0xdd68, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x951);
        EXPECT(gbc.pc(), 0xdd6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd68), 0xcb);
        EXPECT(gbc.readMem(0xdd69), 0x92);
        // CB 92 0046
        gbc.setState(0x6cc2, 0xb9f8, 0x3250, 0x8128, 0x7afe, 0x85df, 0x1, 0x0);
        gbc.writeMem(0x6cc2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb9f8);
        EXPECT(gbc.pc(), 0x6cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0047
        gbc.setState(0x9e8d, 0x1403, 0xa780, 0x8c69, 0xc649, 0x1267, 0x0, 0x0);
        gbc.writeMem(0x9e8d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1403);
        EXPECT(gbc.pc(), 0x9e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8d), 0xcb);
        EXPECT(gbc.readMem(0x9e8e), 0x92);
        // CB 92 0048
        gbc.setState(0xc54, 0x8580, 0xcf10, 0x190a, 0x3a2a, 0x3ff6, 0x0, 0x0);
        gbc.writeMem(0xc54, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8580);
        EXPECT(gbc.pc(), 0xc56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0049
        gbc.setState(0x6cb7, 0xcdb4, 0x69d0, 0xa5e6, 0x38fc, 0xf107, 0x0, 0x1);
        gbc.writeMem(0x6cb7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcdb4);
        EXPECT(gbc.pc(), 0x6cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 004A
        gbc.setState(0x816e, 0x50e9, 0x2df0, 0x9a15, 0x4b46, 0x55d6, 0x1, 0x0);
        gbc.writeMem(0x816e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x50e9);
        EXPECT(gbc.pc(), 0x8170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816e), 0xcb);
        EXPECT(gbc.readMem(0x816f), 0x92);
        // CB 92 004B
        gbc.setState(0xcabb, 0x178, 0xaa70, 0xad45, 0x8bd8, 0xdfa, 0x0, 0x1);
        gbc.writeMem(0xcabb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x178);
        EXPECT(gbc.pc(), 0xcabd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcabb), 0xcb);
        EXPECT(gbc.readMem(0xcabc), 0x92);
        // CB 92 004C
        gbc.setState(0x27f0, 0x28b0, 0x7d20, 0x42cc, 0x77c4, 0xd608, 0x0, 0x1);
        gbc.writeMem(0x27f0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x28b0);
        EXPECT(gbc.pc(), 0x27f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 004D
        gbc.setState(0x830f, 0xf8a0, 0x6c30, 0xa516, 0xec98, 0x7651, 0x1, 0x1);
        gbc.writeMem(0x830f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf8a0);
        EXPECT(gbc.pc(), 0x8311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x830f), 0xcb);
        EXPECT(gbc.readMem(0x8310), 0x92);
        // CB 92 004E
        gbc.setState(0xc990, 0x5172, 0x2720, 0x44c1, 0x8398, 0xff70, 0x0, 0x0);
        gbc.writeMem(0xc990, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5172);
        EXPECT(gbc.pc(), 0xc992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc990), 0xcb);
        EXPECT(gbc.readMem(0xc991), 0x92);
        // CB 92 004F
        gbc.setState(0x5fda, 0xf03, 0x35d0, 0x6d12, 0x2f90, 0x84ae, 0x1, 0x0);
        gbc.writeMem(0x5fda, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf03);
        EXPECT(gbc.pc(), 0x5fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0050
        gbc.setState(0x1c64, 0x1fba, 0x1fc0, 0x6bd, 0x642, 0x5c5a, 0x1, 0x0);
        gbc.writeMem(0x1c64, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1fba);
        EXPECT(gbc.pc(), 0x1c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0051
        gbc.setState(0x79d9, 0x936c, 0xa660, 0x911c, 0x1966, 0x6dd7, 0x0, 0x1);
        gbc.writeMem(0x79d9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x936c);
        EXPECT(gbc.pc(), 0x79db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0052
        gbc.setState(0x7a5c, 0x2b94, 0x4be0, 0xfde3, 0x3be1, 0xd3ed, 0x1, 0x0);
        gbc.writeMem(0x7a5c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2b94);
        EXPECT(gbc.pc(), 0x7a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0053
        gbc.setState(0x33ed, 0xae7f, 0x2ab0, 0xca9, 0x2d20, 0xb48f, 0x0, 0x0);
        gbc.writeMem(0x33ed, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xae7f);
        EXPECT(gbc.pc(), 0x33ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0054
        gbc.setState(0x90a, 0xdf82, 0xecf0, 0x6687, 0xc288, 0x3a3c, 0x1, 0x0);
        gbc.writeMem(0x90a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xdf82);
        EXPECT(gbc.pc(), 0x90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0055
        gbc.setState(0x1dbd, 0x30d2, 0xf490, 0x658c, 0x2ed2, 0xf59c, 0x1, 0x1);
        gbc.writeMem(0x1dbd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x30d2);
        EXPECT(gbc.pc(), 0x1dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0056
        gbc.setState(0x493d, 0x8bf3, 0x33a0, 0xff12, 0x2e25, 0xe324, 0x1, 0x1);
        gbc.writeMem(0x493d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8bf3);
        EXPECT(gbc.pc(), 0x493f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0058
        gbc.setState(0x696c, 0x8de6, 0x2680, 0x6ba5, 0xe02, 0x311d, 0x0, 0x1);
        gbc.writeMem(0x696c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8de6);
        EXPECT(gbc.pc(), 0x696e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0059
        gbc.setState(0x3ddb, 0x95c0, 0x8260, 0x8726, 0x219d, 0x9f8b, 0x1, 0x1);
        gbc.writeMem(0x3ddb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x95c0);
        EXPECT(gbc.pc(), 0x3ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 005A
        gbc.setState(0xd7bb, 0x3a7b, 0xa230, 0x19fe, 0xf793, 0x2990, 0x1, 0x0);
        gbc.writeMem(0xd7bb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3a7b);
        EXPECT(gbc.pc(), 0xd7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bb), 0xcb);
        EXPECT(gbc.readMem(0xd7bc), 0x92);
        // CB 92 005B
        gbc.setState(0xeccf, 0x708e, 0xb170, 0xbc14, 0xe549, 0x224b, 0x0, 0x0);
        gbc.writeMem(0xeccf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x708e);
        EXPECT(gbc.pc(), 0xecd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccf), 0xcb);
        EXPECT(gbc.readMem(0xecd0), 0x92);
        // CB 92 005C
        gbc.setState(0x1276, 0x574b, 0x9120, 0x5181, 0x3738, 0xde4, 0x1, 0x1);
        gbc.writeMem(0x1276, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x574b);
        EXPECT(gbc.pc(), 0x1278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 005D
        gbc.setState(0x72c8, 0xeee2, 0x1d70, 0xc0b1, 0xe5c, 0x24e3, 0x1, 0x0);
        gbc.writeMem(0x72c8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xeee2);
        EXPECT(gbc.pc(), 0x72ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 005E
        gbc.setState(0x873c, 0x16c8, 0xc040, 0x322f, 0xfb66, 0xbb49, 0x1, 0x1);
        gbc.writeMem(0x873c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x16c8);
        EXPECT(gbc.pc(), 0x873e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x873c), 0xcb);
        EXPECT(gbc.readMem(0x873d), 0x92);
        // CB 92 005F
        gbc.setState(0xb757, 0x5d50, 0x9fa0, 0xc605, 0xf200, 0xe523, 0x0, 0x0);
        gbc.writeMem(0xb757, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5d50);
        EXPECT(gbc.pc(), 0xb759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb757), 0xcb);
        EXPECT(gbc.readMem(0xb758), 0x92);
        // CB 92 0060
        gbc.setState(0x694, 0xe378, 0xf220, 0x50f6, 0x214b, 0x4a5a, 0x0, 0x0);
        gbc.writeMem(0x694, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe378);
        EXPECT(gbc.pc(), 0x696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0061
        gbc.setState(0xc950, 0x6377, 0x4fb0, 0x7149, 0x76aa, 0x85fc, 0x1, 0x0);
        gbc.writeMem(0xc950, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6377);
        EXPECT(gbc.pc(), 0xc952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc950), 0xcb);
        EXPECT(gbc.readMem(0xc951), 0x92);
        // CB 92 0062
        gbc.setState(0xd697, 0x6a14, 0xd450, 0x9579, 0xec24, 0x54a0, 0x1, 0x0);
        gbc.writeMem(0xd697, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6a14);
        EXPECT(gbc.pc(), 0xd699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd697), 0xcb);
        EXPECT(gbc.readMem(0xd698), 0x92);
        // CB 92 0063
        gbc.setState(0x876e, 0xde1f, 0xd630, 0xdbb3, 0xb690, 0x723e, 0x0, 0x0);
        gbc.writeMem(0x876e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xde1f);
        EXPECT(gbc.pc(), 0x8770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876e), 0xcb);
        EXPECT(gbc.readMem(0x876f), 0x92);
        // CB 92 0064
        gbc.setState(0xc10f, 0xd3ae, 0x8ca0, 0x94a, 0x3a28, 0x7664, 0x1, 0x1);
        gbc.writeMem(0xc10f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd3ae);
        EXPECT(gbc.pc(), 0xc111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10f), 0xcb);
        EXPECT(gbc.readMem(0xc110), 0x92);
        // CB 92 0065
        gbc.setState(0x7744, 0xf9ed, 0x4450, 0x4091, 0xefd0, 0x1b04, 0x0, 0x0);
        gbc.writeMem(0x7744, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf9ed);
        EXPECT(gbc.pc(), 0x7746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0066
        gbc.setState(0x9f13, 0xb73b, 0x2250, 0x847f, 0x9aa9, 0x434d, 0x0, 0x1);
        gbc.writeMem(0x9f13, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb73b);
        EXPECT(gbc.pc(), 0x9f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f13), 0xcb);
        EXPECT(gbc.readMem(0x9f14), 0x92);
        // CB 92 0067
        gbc.setState(0x2e34, 0xbe83, 0x8380, 0x2224, 0x772, 0x4d92, 0x0, 0x1);
        gbc.writeMem(0x2e34, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbe83);
        EXPECT(gbc.pc(), 0x2e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0068
        gbc.setState(0x7ce3, 0x8ab0, 0xc440, 0x32f5, 0x70f9, 0xfd7, 0x0, 0x0);
        gbc.writeMem(0x7ce3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8ab0);
        EXPECT(gbc.pc(), 0x7ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0069
        gbc.setState(0x78eb, 0x4467, 0x4dd0, 0xd588, 0x8433, 0x7338, 0x1, 0x0);
        gbc.writeMem(0x78eb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4467);
        EXPECT(gbc.pc(), 0x78ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 006A
        gbc.setState(0xa375, 0x2c98, 0xd700, 0x2b3b, 0x4c7, 0x89f0, 0x1, 0x0);
        gbc.writeMem(0xa375, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2c98);
        EXPECT(gbc.pc(), 0xa377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa375), 0xcb);
        EXPECT(gbc.readMem(0xa376), 0x92);
        // CB 92 006B
        gbc.setState(0xa065, 0x9fef, 0x5930, 0x1f0, 0x8913, 0x33ca, 0x1, 0x1);
        gbc.writeMem(0xa065, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9fef);
        EXPECT(gbc.pc(), 0xa067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa065), 0xcb);
        EXPECT(gbc.readMem(0xa066), 0x92);
        // CB 92 006C
        gbc.setState(0x5406, 0xb0fe, 0x7b60, 0x7628, 0xd070, 0xeec0, 0x0, 0x1);
        gbc.writeMem(0x5406, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb0fe);
        EXPECT(gbc.pc(), 0x5408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 006D
        gbc.setState(0xbe29, 0x2625, 0xc680, 0xd803, 0x4864, 0xded7, 0x0, 0x1);
        gbc.writeMem(0xbe29, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2625);
        EXPECT(gbc.pc(), 0xbe2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe29), 0xcb);
        EXPECT(gbc.readMem(0xbe2a), 0x92);
        // CB 92 006E
        gbc.setState(0x6be1, 0xe744, 0x2520, 0x4119, 0x3a38, 0x7137, 0x1, 0x1);
        gbc.writeMem(0x6be1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe744);
        EXPECT(gbc.pc(), 0x6be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 006F
        gbc.setState(0xbec9, 0xa557, 0xabb0, 0xbc7d, 0xeb51, 0x4f52, 0x0, 0x0);
        gbc.writeMem(0xbec9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa557);
        EXPECT(gbc.pc(), 0xbecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbec9), 0xcb);
        EXPECT(gbc.readMem(0xbeca), 0x92);
        // CB 92 0070
        gbc.setState(0x50e9, 0xfdaa, 0x3770, 0xac76, 0x4a1f, 0x8075, 0x1, 0x1);
        gbc.writeMem(0x50e9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfdaa);
        EXPECT(gbc.pc(), 0x50eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0071
        gbc.setState(0xa50d, 0xf0d3, 0x57b0, 0xd542, 0xdf87, 0x7928, 0x1, 0x0);
        gbc.writeMem(0xa50d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf0d3);
        EXPECT(gbc.pc(), 0xa50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa50d), 0xcb);
        EXPECT(gbc.readMem(0xa50e), 0x92);
        // CB 92 0072
        gbc.setState(0xeaae, 0xcc00, 0x2340, 0xd237, 0x90be, 0x516b, 0x1, 0x1);
        gbc.writeMem(0xeaae, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcc00);
        EXPECT(gbc.pc(), 0xeab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaae), 0xcb);
        EXPECT(gbc.readMem(0xeaaf), 0x92);
        // CB 92 0073
        gbc.setState(0xca65, 0x576d, 0x76f0, 0x672b, 0x4f5b, 0xf822, 0x1, 0x0);
        gbc.writeMem(0xca65, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x576d);
        EXPECT(gbc.pc(), 0xca67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca65), 0xcb);
        EXPECT(gbc.readMem(0xca66), 0x92);
        // CB 92 0074
        gbc.setState(0x8d5d, 0xf9ae, 0xde10, 0xa579, 0x27c1, 0xc518, 0x1, 0x1);
        gbc.writeMem(0x8d5d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf9ae);
        EXPECT(gbc.pc(), 0x8d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5d), 0xcb);
        EXPECT(gbc.readMem(0x8d5e), 0x92);
        // CB 92 0075
        gbc.setState(0xca20, 0xee4a, 0xca30, 0xaf84, 0xbf9e, 0xda3d, 0x1, 0x1);
        gbc.writeMem(0xca20, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xee4a);
        EXPECT(gbc.pc(), 0xca22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca20), 0xcb);
        EXPECT(gbc.readMem(0xca21), 0x92);
        // CB 92 0076
        gbc.setState(0xba90, 0xa787, 0xc3d0, 0xa471, 0x9231, 0xf445, 0x1, 0x0);
        gbc.writeMem(0xba90, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa787);
        EXPECT(gbc.pc(), 0xba92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba90), 0xcb);
        EXPECT(gbc.readMem(0xba91), 0x92);
        // CB 92 0077
        gbc.setState(0xdd7a, 0x3f9a, 0x87d0, 0x65df, 0x815a, 0x54bd, 0x0, 0x1);
        gbc.writeMem(0xdd7a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3f9a);
        EXPECT(gbc.pc(), 0xdd7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd7a), 0xcb);
        EXPECT(gbc.readMem(0xdd7b), 0x92);
        // CB 92 0078
        gbc.setState(0x2919, 0xff18, 0xbf50, 0xc73e, 0x85ef, 0x5946, 0x1, 0x1);
        gbc.writeMem(0x2919, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xff18);
        EXPECT(gbc.pc(), 0x291b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0079
        gbc.setState(0xa734, 0x4b8f, 0xdd20, 0xea40, 0x3fd3, 0x8710, 0x1, 0x1);
        gbc.writeMem(0xa734, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4b8f);
        EXPECT(gbc.pc(), 0xa736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa734), 0xcb);
        EXPECT(gbc.readMem(0xa735), 0x92);
        // CB 92 007A
        gbc.setState(0x5aa3, 0x8c81, 0xb040, 0xed0d, 0xbb7d, 0x570d, 0x0, 0x0);
        gbc.writeMem(0x5aa3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8c81);
        EXPECT(gbc.pc(), 0x5aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 007B
        gbc.setState(0xc81c, 0x1f10, 0x59b0, 0x230a, 0x6fc1, 0x4e5b, 0x0, 0x1);
        gbc.writeMem(0xc81c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1f10);
        EXPECT(gbc.pc(), 0xc81e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc81c), 0xcb);
        EXPECT(gbc.readMem(0xc81d), 0x92);
        // CB 92 007C
        gbc.setState(0xed06, 0xd083, 0xca0, 0xa0bb, 0x5425, 0x7623, 0x1, 0x1);
        gbc.writeMem(0xed06, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd083);
        EXPECT(gbc.pc(), 0xed08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed06), 0xcb);
        EXPECT(gbc.readMem(0xed07), 0x92);
        // CB 92 007D
        gbc.setState(0xe947, 0x118b, 0x1000, 0xb191, 0xaed, 0xbeac, 0x0, 0x0);
        gbc.writeMem(0xe947, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x118b);
        EXPECT(gbc.pc(), 0xe949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe947), 0xcb);
        EXPECT(gbc.readMem(0xe948), 0x92);
        // CB 92 007E
        gbc.setState(0xd864, 0xc0bd, 0x4f40, 0x6970, 0xa6ad, 0xd4cf, 0x1, 0x0);
        gbc.writeMem(0xd864, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc0bd);
        EXPECT(gbc.pc(), 0xd866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd864), 0xcb);
        EXPECT(gbc.readMem(0xd865), 0x92);
        // CB 92 007F
        gbc.setState(0x60f4, 0xd616, 0x6d10, 0xfc8f, 0xd6c4, 0x2751, 0x1, 0x1);
        gbc.writeMem(0x60f4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd616);
        EXPECT(gbc.pc(), 0x60f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0081
        gbc.setState(0x6ec0, 0xa2da, 0x1af0, 0xd588, 0x5992, 0x65ab, 0x1, 0x1);
        gbc.writeMem(0x6ec0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa2da);
        EXPECT(gbc.pc(), 0x6ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0082
        gbc.setState(0x235f, 0x7c96, 0xa400, 0x4bd5, 0x5308, 0x5ee7, 0x0, 0x1);
        gbc.writeMem(0x235f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7c96);
        EXPECT(gbc.pc(), 0x2361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0083
        gbc.setState(0x38fa, 0x9013, 0x21c0, 0x5c92, 0xde67, 0xfc1b, 0x1, 0x0);
        gbc.writeMem(0x38fa, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9013);
        EXPECT(gbc.pc(), 0x38fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0084
        gbc.setState(0xb7aa, 0x4a95, 0x6370, 0xae52, 0x8308, 0xab06, 0x0, 0x1);
        gbc.writeMem(0xb7aa, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4a95);
        EXPECT(gbc.pc(), 0xb7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7aa), 0xcb);
        EXPECT(gbc.readMem(0xb7ab), 0x92);
        // CB 92 0086
        gbc.setState(0x81eb, 0x16d2, 0xf400, 0xd5ae, 0xd5bf, 0xd878, 0x0, 0x0);
        gbc.writeMem(0x81eb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x16d2);
        EXPECT(gbc.pc(), 0x81ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81eb), 0xcb);
        EXPECT(gbc.readMem(0x81ec), 0x92);
        // CB 92 0087
        gbc.setState(0xc09d, 0x4064, 0x38e0, 0x51d0, 0xc6a4, 0x7d31, 0x0, 0x0);
        gbc.writeMem(0xc09d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4064);
        EXPECT(gbc.pc(), 0xc09f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc09d), 0xcb);
        EXPECT(gbc.readMem(0xc09e), 0x92);
        // CB 92 0088
        gbc.setState(0x9664, 0xce3f, 0x620, 0xae01, 0x5480, 0x2520, 0x0, 0x0);
        gbc.writeMem(0x9664, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xce3f);
        EXPECT(gbc.pc(), 0x9666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9664), 0xcb);
        EXPECT(gbc.readMem(0x9665), 0x92);
        // CB 92 0089
        gbc.setState(0xa64f, 0xb526, 0x63d0, 0x8855, 0x2cc7, 0xba88, 0x1, 0x0);
        gbc.writeMem(0xa64f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb526);
        EXPECT(gbc.pc(), 0xa651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa64f), 0xcb);
        EXPECT(gbc.readMem(0xa650), 0x92);
        // CB 92 008A
        gbc.setState(0x71a7, 0xb755, 0xb6d0, 0xcfb, 0xb072, 0x4bd5, 0x0, 0x0);
        gbc.writeMem(0x71a7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb755);
        EXPECT(gbc.pc(), 0x71a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 008B
        gbc.setState(0x595d, 0x590f, 0x8cf0, 0xff59, 0xc7e8, 0x89b0, 0x1, 0x1);
        gbc.writeMem(0x595d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x590f);
        EXPECT(gbc.pc(), 0x595f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 008C
        gbc.setState(0xac7e, 0x9f5e, 0x72d0, 0x281e, 0x48e7, 0xf19c, 0x1, 0x1);
        gbc.writeMem(0xac7e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9f5e);
        EXPECT(gbc.pc(), 0xac80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7e), 0xcb);
        EXPECT(gbc.readMem(0xac7f), 0x92);
        // CB 92 008E
        gbc.setState(0x3e69, 0x8, 0xbb80, 0x1597, 0x986, 0xa6dd, 0x1, 0x1);
        gbc.writeMem(0x3e69, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8);
        EXPECT(gbc.pc(), 0x3e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 008F
        gbc.setState(0xb295, 0xdf39, 0x6ec0, 0x3e59, 0xd74, 0xc847, 0x0, 0x0);
        gbc.writeMem(0xb295, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdf39);
        EXPECT(gbc.pc(), 0xb297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb295), 0xcb);
        EXPECT(gbc.readMem(0xb296), 0x92);
        // CB 92 0090
        gbc.setState(0xd49f, 0xa9f8, 0x3ac0, 0xef42, 0x84fa, 0xb69b, 0x1, 0x0);
        gbc.writeMem(0xd49f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa9f8);
        EXPECT(gbc.pc(), 0xd4a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49f), 0xcb);
        EXPECT(gbc.readMem(0xd4a0), 0x92);
        // CB 92 0091
        gbc.setState(0x7576, 0x8ff, 0xc2d0, 0xd1a8, 0xd04e, 0x34ad, 0x0, 0x1);
        gbc.writeMem(0x7576, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8ff);
        EXPECT(gbc.pc(), 0x7578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0092
        gbc.setState(0x78c4, 0xfc85, 0x1f90, 0xe442, 0xe5c4, 0x212c, 0x0, 0x1);
        gbc.writeMem(0x78c4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfc85);
        EXPECT(gbc.pc(), 0x78c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0093
        gbc.setState(0x98d, 0x28e7, 0xfce0, 0xc477, 0x9d2e, 0xc4f3, 0x1, 0x0);
        gbc.writeMem(0x98d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x28e7);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0094
        gbc.setState(0x4d4f, 0x4588, 0x9700, 0x9ef7, 0xdf8, 0x47a4, 0x1, 0x1);
        gbc.writeMem(0x4d4f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4588);
        EXPECT(gbc.pc(), 0x4d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0095
        gbc.setState(0xdb94, 0x2052, 0x68a0, 0x2963, 0xb5d1, 0x8022, 0x1, 0x0);
        gbc.writeMem(0xdb94, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2052);
        EXPECT(gbc.pc(), 0xdb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb94), 0xcb);
        EXPECT(gbc.readMem(0xdb95), 0x92);
        // CB 92 0096
        gbc.setState(0x9c22, 0xd262, 0x1500, 0x6b0a, 0x3fd2, 0xeba9, 0x0, 0x1);
        gbc.writeMem(0x9c22, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd262);
        EXPECT(gbc.pc(), 0x9c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c22), 0xcb);
        EXPECT(gbc.readMem(0x9c23), 0x92);
        // CB 92 0097
        gbc.setState(0x109d, 0xaed9, 0x7270, 0x4a0b, 0x441c, 0x835b, 0x0, 0x1);
        gbc.writeMem(0x109d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xaed9);
        EXPECT(gbc.pc(), 0x109f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0098
        gbc.setState(0xba39, 0x689a, 0xe520, 0xaa5, 0xa83a, 0x4f81, 0x0, 0x0);
        gbc.writeMem(0xba39, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x689a);
        EXPECT(gbc.pc(), 0xba3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba39), 0xcb);
        EXPECT(gbc.readMem(0xba3a), 0x92);
        // CB 92 0099
        gbc.setState(0x5e3b, 0x5921, 0x8f50, 0x15cb, 0x2eec, 0x8824, 0x1, 0x0);
        gbc.writeMem(0x5e3b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5921);
        EXPECT(gbc.pc(), 0x5e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 009A
        gbc.setState(0x2a93, 0x662f, 0x8700, 0xc1da, 0xec36, 0x61a0, 0x1, 0x0);
        gbc.writeMem(0x2a93, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x662f);
        EXPECT(gbc.pc(), 0x2a95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 009B
        gbc.setState(0x780e, 0xcbd8, 0xd80, 0xb90, 0x2736, 0x11c4, 0x0, 0x1);
        gbc.writeMem(0x780e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcbd8);
        EXPECT(gbc.pc(), 0x7810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 009C
        gbc.setState(0x2779, 0xab19, 0xb270, 0x4798, 0x3d33, 0xef92, 0x0, 0x0);
        gbc.writeMem(0x2779, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xab19);
        EXPECT(gbc.pc(), 0x277b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 009D
        gbc.setState(0x2658, 0xe16f, 0x5590, 0x5656, 0xa8b5, 0x2f1f, 0x1, 0x0);
        gbc.writeMem(0x2658, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe16f);
        EXPECT(gbc.pc(), 0x265a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 009E
        gbc.setState(0xc393, 0x3521, 0x6d30, 0xcd88, 0xfb46, 0xbb4e, 0x0, 0x0);
        gbc.writeMem(0xc393, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3521);
        EXPECT(gbc.pc(), 0xc395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc393), 0xcb);
        EXPECT(gbc.readMem(0xc394), 0x92);
        // CB 92 009F
        gbc.setState(0xb3dd, 0x4f0a, 0x8120, 0x854c, 0x81d1, 0x2c94, 0x1, 0x1);
        gbc.writeMem(0xb3dd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4f0a);
        EXPECT(gbc.pc(), 0xb3df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3dd), 0xcb);
        EXPECT(gbc.readMem(0xb3de), 0x92);
        // CB 92 00A0
        gbc.setState(0xc91c, 0xfb23, 0x3ab0, 0x6655, 0x1b80, 0xf662, 0x0, 0x1);
        gbc.writeMem(0xc91c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfb23);
        EXPECT(gbc.pc(), 0xc91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc91c), 0xcb);
        EXPECT(gbc.readMem(0xc91d), 0x92);
        // CB 92 00A1
        gbc.setState(0xb59e, 0x80d2, 0xde90, 0x298b, 0x7964, 0x3152, 0x0, 0x1);
        gbc.writeMem(0xb59e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x80d2);
        EXPECT(gbc.pc(), 0xb5a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59e), 0xcb);
        EXPECT(gbc.readMem(0xb59f), 0x92);
        // CB 92 00A2
        gbc.setState(0xd970, 0x5074, 0xdc40, 0x4482, 0x8abf, 0xf3b1, 0x0, 0x1);
        gbc.writeMem(0xd970, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5074);
        EXPECT(gbc.pc(), 0xd972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd970), 0xcb);
        EXPECT(gbc.readMem(0xd971), 0x92);
        // CB 92 00A3
        gbc.setState(0xbc57, 0xf14d, 0x6b90, 0x532c, 0x3b5c, 0x5db, 0x1, 0x1);
        gbc.writeMem(0xbc57, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf14d);
        EXPECT(gbc.pc(), 0xbc59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc57), 0xcb);
        EXPECT(gbc.readMem(0xbc58), 0x92);
        // CB 92 00A4
        gbc.setState(0xb0e6, 0x88b8, 0x43f0, 0x62e7, 0xb6f7, 0xe880, 0x0, 0x1);
        gbc.writeMem(0xb0e6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x88b8);
        EXPECT(gbc.pc(), 0xb0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e6), 0xcb);
        EXPECT(gbc.readMem(0xb0e7), 0x92);
        // CB 92 00A6
        gbc.setState(0xca12, 0x1971, 0x9210, 0x9b8, 0xe401, 0x12d1, 0x1, 0x0);
        gbc.writeMem(0xca12, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1971);
        EXPECT(gbc.pc(), 0xca14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca12), 0xcb);
        EXPECT(gbc.readMem(0xca13), 0x92);
        // CB 92 00A7
        gbc.setState(0x5da7, 0xdcc0, 0xd700, 0xdb0f, 0x4144, 0xa12e, 0x0, 0x0);
        gbc.writeMem(0x5da7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdcc0);
        EXPECT(gbc.pc(), 0x5da9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00A8
        gbc.setState(0xb65c, 0xf5dd, 0xd7f0, 0xb8a2, 0xf4eb, 0x77b, 0x1, 0x1);
        gbc.writeMem(0xb65c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf5dd);
        EXPECT(gbc.pc(), 0xb65e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb65c), 0xcb);
        EXPECT(gbc.readMem(0xb65d), 0x92);
        // CB 92 00A9
        gbc.setState(0x692f, 0xc7c8, 0xd200, 0x3426, 0x8c65, 0x6fda, 0x0, 0x1);
        gbc.writeMem(0x692f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc7c8);
        EXPECT(gbc.pc(), 0x6931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00AA
        gbc.setState(0xad01, 0xe8be, 0x2810, 0x5c57, 0x30e2, 0x4d8b, 0x0, 0x1);
        gbc.writeMem(0xad01, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe8be);
        EXPECT(gbc.pc(), 0xad03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad01), 0xcb);
        EXPECT(gbc.readMem(0xad02), 0x92);
        // CB 92 00AB
        gbc.setState(0xb901, 0xfea2, 0x720, 0x3d60, 0xb90b, 0xba82, 0x1, 0x0);
        gbc.writeMem(0xb901, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfea2);
        EXPECT(gbc.pc(), 0xb903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb901), 0xcb);
        EXPECT(gbc.readMem(0xb902), 0x92);
        // CB 92 00AD
        gbc.setState(0xb9d8, 0x3680, 0xaaa0, 0xfb04, 0xf2e2, 0x34f5, 0x1, 0x1);
        gbc.writeMem(0xb9d8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3680);
        EXPECT(gbc.pc(), 0xb9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d8), 0xcb);
        EXPECT(gbc.readMem(0xb9d9), 0x92);
        // CB 92 00AE
        gbc.setState(0xca75, 0xf0c0, 0x65f0, 0x2ad0, 0x18c9, 0x3b62, 0x1, 0x0);
        gbc.writeMem(0xca75, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf0c0);
        EXPECT(gbc.pc(), 0xca77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca75), 0xcb);
        EXPECT(gbc.readMem(0xca76), 0x92);
        // CB 92 00AF
        gbc.setState(0x7f3c, 0xe7a3, 0x3d50, 0x1346, 0x39a7, 0xee14, 0x0, 0x1);
        gbc.writeMem(0x7f3c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe7a3);
        EXPECT(gbc.pc(), 0x7f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00B0
        gbc.setState(0x8498, 0xfd65, 0xc0b0, 0x8ba3, 0xfed9, 0x78c, 0x0, 0x1);
        gbc.writeMem(0x8498, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfd65);
        EXPECT(gbc.pc(), 0x849a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8498), 0xcb);
        EXPECT(gbc.readMem(0x8499), 0x92);
        // CB 92 00B1
        gbc.setState(0x2017, 0xdd02, 0x6910, 0xc853, 0x3d5b, 0x8f5c, 0x1, 0x1);
        gbc.writeMem(0x2017, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdd02);
        EXPECT(gbc.pc(), 0x2019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00B2
        gbc.setState(0x5e8, 0x9272, 0x1070, 0x3fcf, 0x1b40, 0x33bb, 0x0, 0x1);
        gbc.writeMem(0x5e8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9272);
        EXPECT(gbc.pc(), 0x5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00B3
        gbc.setState(0x2b25, 0xde95, 0x70d0, 0x9cba, 0x7d3e, 0xbab, 0x0, 0x0);
        gbc.writeMem(0x2b25, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xde95);
        EXPECT(gbc.pc(), 0x2b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00B4
        gbc.setState(0xbd91, 0x21cb, 0xe6d0, 0xf58e, 0x1a01, 0x62f5, 0x0, 0x1);
        gbc.writeMem(0xbd91, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x21cb);
        EXPECT(gbc.pc(), 0xbd93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd91), 0xcb);
        EXPECT(gbc.readMem(0xbd92), 0x92);
        // CB 92 00B5
        gbc.setState(0x7850, 0xa743, 0x61f0, 0x1b82, 0x40bf, 0xd0e3, 0x0, 0x1);
        gbc.writeMem(0x7850, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa743);
        EXPECT(gbc.pc(), 0x7852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00B6
        gbc.setState(0x5384, 0x59ad, 0x5720, 0x68e5, 0x68e6, 0x15d4, 0x0, 0x1);
        gbc.writeMem(0x5384, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x59ad);
        EXPECT(gbc.pc(), 0x5386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00B7
        gbc.setState(0xea79, 0xb6, 0x8c30, 0xacd4, 0xd2b6, 0x73f, 0x0, 0x0);
        gbc.writeMem(0xea79, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb6);
        EXPECT(gbc.pc(), 0xea7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea79), 0xcb);
        EXPECT(gbc.readMem(0xea7a), 0x92);
        // CB 92 00B9
        gbc.setState(0xd73c, 0x4fda, 0x6830, 0xb852, 0xff96, 0x4def, 0x0, 0x1);
        gbc.writeMem(0xd73c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4fda);
        EXPECT(gbc.pc(), 0xd73e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd73c), 0xcb);
        EXPECT(gbc.readMem(0xd73d), 0x92);
        // CB 92 00BA
        gbc.setState(0xd14b, 0x590a, 0xf460, 0x94c4, 0xbd0a, 0x8c2d, 0x1, 0x0);
        gbc.writeMem(0xd14b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x590a);
        EXPECT(gbc.pc(), 0xd14d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14b), 0xcb);
        EXPECT(gbc.readMem(0xd14c), 0x92);
        // CB 92 00BB
        gbc.setState(0xd426, 0xacff, 0xa650, 0xf1d6, 0x282a, 0x4d7b, 0x0, 0x1);
        gbc.writeMem(0xd426, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xacff);
        EXPECT(gbc.pc(), 0xd428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd426), 0xcb);
        EXPECT(gbc.readMem(0xd427), 0x92);
        // CB 92 00BC
        gbc.setState(0xefcf, 0xc4e1, 0x56b0, 0xe8a5, 0x519f, 0x7525, 0x1, 0x1);
        gbc.writeMem(0xefcf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc4e1);
        EXPECT(gbc.pc(), 0xefd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefcf), 0xcb);
        EXPECT(gbc.readMem(0xefd0), 0x92);
        // CB 92 00BD
        gbc.setState(0x3634, 0x1c02, 0xa7b0, 0x9a02, 0x63a5, 0x499b, 0x1, 0x1);
        gbc.writeMem(0x3634, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1c02);
        EXPECT(gbc.pc(), 0x3636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00BE
        gbc.setState(0xb031, 0x49c6, 0xfeb0, 0x6a96, 0x10c3, 0x8c2e, 0x0, 0x0);
        gbc.writeMem(0xb031, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x49c6);
        EXPECT(gbc.pc(), 0xb033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb031), 0xcb);
        EXPECT(gbc.readMem(0xb032), 0x92);
        // CB 92 00BF
        gbc.setState(0x2c9c, 0x5161, 0x4540, 0x2ab3, 0xceab, 0x1770, 0x1, 0x0);
        gbc.writeMem(0x2c9c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5161);
        EXPECT(gbc.pc(), 0x2c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00C0
        gbc.setState(0xa606, 0xacf1, 0x6420, 0xfaf8, 0x106a, 0xcae1, 0x0, 0x0);
        gbc.writeMem(0xa606, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xacf1);
        EXPECT(gbc.pc(), 0xa608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa606), 0xcb);
        EXPECT(gbc.readMem(0xa607), 0x92);
        // CB 92 00C1
        gbc.setState(0xae0f, 0x3947, 0xd700, 0x34de, 0x4bf6, 0xbb77, 0x0, 0x1);
        gbc.writeMem(0xae0f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3947);
        EXPECT(gbc.pc(), 0xae11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae0f), 0xcb);
        EXPECT(gbc.readMem(0xae10), 0x92);
        // CB 92 00C2
        gbc.setState(0x65c1, 0xe73b, 0x1b60, 0x620f, 0xb239, 0xea78, 0x1, 0x0);
        gbc.writeMem(0x65c1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe73b);
        EXPECT(gbc.pc(), 0x65c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00C3
        gbc.setState(0x74a, 0x7764, 0xb8e0, 0x9ecd, 0x5ce, 0x7b7d, 0x0, 0x1);
        gbc.writeMem(0x74a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7764);
        EXPECT(gbc.pc(), 0x74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00C4
        gbc.setState(0xa280, 0xfd65, 0x8e40, 0x76ff, 0xeb2e, 0xacb2, 0x1, 0x0);
        gbc.writeMem(0xa280, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfd65);
        EXPECT(gbc.pc(), 0xa282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa280), 0xcb);
        EXPECT(gbc.readMem(0xa281), 0x92);
        // CB 92 00C5
        gbc.setState(0x26d4, 0x6b5, 0xce80, 0x7d53, 0x2f73, 0x47c6, 0x1, 0x1);
        gbc.writeMem(0x26d4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6b5);
        EXPECT(gbc.pc(), 0x26d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00C6
        gbc.setState(0x684b, 0x8e0e, 0x540, 0x5381, 0x8d1f, 0xf36b, 0x1, 0x0);
        gbc.writeMem(0x684b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8e0e);
        EXPECT(gbc.pc(), 0x684d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00C7
        gbc.setState(0x2af8, 0x62d7, 0xe2b0, 0xd07c, 0x5b6b, 0x5f81, 0x1, 0x0);
        gbc.writeMem(0x2af8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x62d7);
        EXPECT(gbc.pc(), 0x2afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00C8
        gbc.setState(0x58bd, 0x1529, 0xccb0, 0xb5d1, 0xb712, 0x3a63, 0x0, 0x1);
        gbc.writeMem(0x58bd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1529);
        EXPECT(gbc.pc(), 0x58bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00C9
        gbc.setState(0x355c, 0x617c, 0x7b0, 0xe126, 0x1408, 0x8da0, 0x1, 0x0);
        gbc.writeMem(0x355c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x617c);
        EXPECT(gbc.pc(), 0x355e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00CA
        gbc.setState(0x859a, 0x342f, 0xfa40, 0x652b, 0x1db7, 0x38e2, 0x0, 0x0);
        gbc.writeMem(0x859a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x342f);
        EXPECT(gbc.pc(), 0x859c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859a), 0xcb);
        EXPECT(gbc.readMem(0x859b), 0x92);
        // CB 92 00CB
        gbc.setState(0x33af, 0xb49b, 0x18a0, 0x5a82, 0xe7d8, 0xc611, 0x0, 0x0);
        gbc.writeMem(0x33af, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb49b);
        EXPECT(gbc.pc(), 0x33b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00CC
        gbc.setState(0x8887, 0xaf9, 0x29c0, 0x1480, 0x3752, 0xd095, 0x1, 0x1);
        gbc.writeMem(0x8887, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xaf9);
        EXPECT(gbc.pc(), 0x8889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8887), 0xcb);
        EXPECT(gbc.readMem(0x8888), 0x92);
        // CB 92 00CD
        gbc.setState(0x4258, 0x62cb, 0xd630, 0x2a11, 0xa279, 0xf080, 0x1, 0x1);
        gbc.writeMem(0x4258, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x62cb);
        EXPECT(gbc.pc(), 0x425a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00CE
        gbc.setState(0x50e1, 0xe4cf, 0x7220, 0x642f, 0x585a, 0x4e2f, 0x1, 0x0);
        gbc.writeMem(0x50e1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe4cf);
        EXPECT(gbc.pc(), 0x50e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00D0
        gbc.setState(0xa3d3, 0x62d2, 0x5540, 0xaa07, 0x6bef, 0x5a26, 0x0, 0x1);
        gbc.writeMem(0xa3d3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x62d2);
        EXPECT(gbc.pc(), 0xa3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d3), 0xcb);
        EXPECT(gbc.readMem(0xa3d4), 0x92);
        // CB 92 00D1
        gbc.setState(0xd8cd, 0x5b02, 0x2c90, 0x7a85, 0xbe76, 0x7587, 0x0, 0x0);
        gbc.writeMem(0xd8cd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5b02);
        EXPECT(gbc.pc(), 0xd8cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8cd), 0xcb);
        EXPECT(gbc.readMem(0xd8ce), 0x92);
        // CB 92 00D2
        gbc.setState(0xe1b9, 0x69f0, 0x7180, 0x7e66, 0xb0c4, 0xbcb6, 0x0, 0x0);
        gbc.writeMem(0xe1b9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x69f0);
        EXPECT(gbc.pc(), 0xe1bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b9), 0xcb);
        EXPECT(gbc.readMem(0xe1ba), 0x92);
        // CB 92 00D3
        gbc.setState(0x6b95, 0x960e, 0x29e0, 0x4226, 0xdc61, 0xa5b3, 0x0, 0x1);
        gbc.writeMem(0x6b95, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x960e);
        EXPECT(gbc.pc(), 0x6b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00D4
        gbc.setState(0x6dbe, 0xc62b, 0x7de0, 0x7d15, 0x76b2, 0x98f6, 0x0, 0x0);
        gbc.writeMem(0x6dbe, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc62b);
        EXPECT(gbc.pc(), 0x6dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00D5
        gbc.setState(0x8f22, 0x5b1f, 0xdb90, 0xdcb, 0x5ce4, 0x3696, 0x1, 0x0);
        gbc.writeMem(0x8f22, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5b1f);
        EXPECT(gbc.pc(), 0x8f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f22), 0xcb);
        EXPECT(gbc.readMem(0x8f23), 0x92);
        // CB 92 00D6
        gbc.setState(0x5636, 0xc519, 0xe20, 0x55ea, 0x54f1, 0x7302, 0x0, 0x1);
        gbc.writeMem(0x5636, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc519);
        EXPECT(gbc.pc(), 0x5638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00D7
        gbc.setState(0x260b, 0xce22, 0xdaf0, 0x1096, 0xd05d, 0x785a, 0x0, 0x1);
        gbc.writeMem(0x260b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xce22);
        EXPECT(gbc.pc(), 0x260d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00D8
        gbc.setState(0xde71, 0x4e6f, 0xfdc0, 0x1ec8, 0x45d6, 0x24d, 0x1, 0x1);
        gbc.writeMem(0xde71, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4e6f);
        EXPECT(gbc.pc(), 0xde73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde71), 0xcb);
        EXPECT(gbc.readMem(0xde72), 0x92);
        // CB 92 00D9
        gbc.setState(0x5bc2, 0x5f21, 0xd220, 0x8421, 0x794b, 0x5b4b, 0x0, 0x0);
        gbc.writeMem(0x5bc2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5f21);
        EXPECT(gbc.pc(), 0x5bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00DA
        gbc.setState(0x909b, 0x9a, 0x5d10, 0x21f5, 0x5701, 0xb37d, 0x1, 0x0);
        gbc.writeMem(0x909b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9a);
        EXPECT(gbc.pc(), 0x909d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909b), 0xcb);
        EXPECT(gbc.readMem(0x909c), 0x92);
        // CB 92 00DB
        gbc.setState(0x4219, 0x68a, 0xb6a0, 0x4299, 0x3aaf, 0xe6e4, 0x1, 0x0);
        gbc.writeMem(0x4219, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x68a);
        EXPECT(gbc.pc(), 0x421b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00DC
        gbc.setState(0xa4dc, 0x84ba, 0x66b0, 0xfda0, 0x9350, 0x89c8, 0x1, 0x0);
        gbc.writeMem(0xa4dc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x84ba);
        EXPECT(gbc.pc(), 0xa4de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4dc), 0xcb);
        EXPECT(gbc.readMem(0xa4dd), 0x92);
        // CB 92 00DD
        gbc.setState(0x28c, 0x8882, 0xc530, 0x3a33, 0x3df0, 0x573e, 0x1, 0x0);
        gbc.writeMem(0x28c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8882);
        EXPECT(gbc.pc(), 0x28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00DE
        gbc.setState(0x8b3b, 0xbb3e, 0xff30, 0x58ba, 0x22e3, 0x647e, 0x1, 0x1);
        gbc.writeMem(0x8b3b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbb3e);
        EXPECT(gbc.pc(), 0x8b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3b), 0xcb);
        EXPECT(gbc.readMem(0x8b3c), 0x92);
        // CB 92 00DF
        gbc.setState(0x68c6, 0xf497, 0xcfc0, 0xa5e4, 0x27aa, 0x737b, 0x1, 0x0);
        gbc.writeMem(0x68c6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf497);
        EXPECT(gbc.pc(), 0x68c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00E1
        gbc.setState(0xdcf3, 0x71cf, 0x19f0, 0x3a67, 0xf87c, 0x51d5, 0x0, 0x0);
        gbc.writeMem(0xdcf3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x71cf);
        EXPECT(gbc.pc(), 0xdcf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf3), 0xcb);
        EXPECT(gbc.readMem(0xdcf4), 0x92);
        // CB 92 00E2
        gbc.setState(0xcf02, 0xa467, 0xa220, 0xa338, 0xe676, 0xf820, 0x0, 0x0);
        gbc.writeMem(0xcf02, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa467);
        EXPECT(gbc.pc(), 0xcf04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf02), 0xcb);
        EXPECT(gbc.readMem(0xcf03), 0x92);
        // CB 92 00E3
        gbc.setState(0xb53c, 0xfa76, 0xd4a0, 0x2882, 0x66a0, 0x12af, 0x1, 0x1);
        gbc.writeMem(0xb53c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfa76);
        EXPECT(gbc.pc(), 0xb53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb53c), 0xcb);
        EXPECT(gbc.readMem(0xb53d), 0x92);
        // CB 92 00E4
        gbc.setState(0x71fc, 0xffea, 0x2f40, 0x319, 0x84f7, 0x5e8f, 0x0, 0x0);
        gbc.writeMem(0x71fc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xffea);
        EXPECT(gbc.pc(), 0x71fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00E5
        gbc.setState(0x2407, 0x2e1a, 0x6d0, 0x1158, 0xde3, 0x6f10, 0x0, 0x0);
        gbc.writeMem(0x2407, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2e1a);
        EXPECT(gbc.pc(), 0x2409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00E7
        gbc.setState(0xa63e, 0xa8a4, 0xb0d0, 0xf41a, 0xfb43, 0xa7a, 0x1, 0x1);
        gbc.writeMem(0xa63e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa8a4);
        EXPECT(gbc.pc(), 0xa640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63e), 0xcb);
        EXPECT(gbc.readMem(0xa63f), 0x92);
        // CB 92 00E8
        gbc.setState(0xa49a, 0xabae, 0x60a0, 0x8e4a, 0x3f56, 0xae0c, 0x0, 0x1);
        gbc.writeMem(0xa49a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xabae);
        EXPECT(gbc.pc(), 0xa49c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49a), 0xcb);
        EXPECT(gbc.readMem(0xa49b), 0x92);
        // CB 92 00E9
        gbc.setState(0x157, 0xeec7, 0xcd70, 0x8212, 0x503e, 0x9a25, 0x1, 0x1);
        gbc.writeMem(0x157, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xeec7);
        EXPECT(gbc.pc(), 0x159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00EA
        gbc.setState(0x79fa, 0x253c, 0xc1c0, 0x6c48, 0x9857, 0xce3b, 0x1, 0x0);
        gbc.writeMem(0x79fa, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x253c);
        EXPECT(gbc.pc(), 0x79fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00EB
        gbc.setState(0x3ec3, 0x8a84, 0xb7d0, 0xb258, 0x5e97, 0x6bb9, 0x0, 0x0);
        gbc.writeMem(0x3ec3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8a84);
        EXPECT(gbc.pc(), 0x3ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00EC
        gbc.setState(0xe468, 0xf9f4, 0xf250, 0x8536, 0xc0, 0xcf9f, 0x0, 0x1);
        gbc.writeMem(0xe468, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf9f4);
        EXPECT(gbc.pc(), 0xe46a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe468), 0xcb);
        EXPECT(gbc.readMem(0xe469), 0x92);
        // CB 92 00ED
        gbc.setState(0x4e86, 0xaa0f, 0xf4e0, 0xf94b, 0x9033, 0xbd44, 0x0, 0x1);
        gbc.writeMem(0x4e86, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaa0f);
        EXPECT(gbc.pc(), 0x4e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00EE
        gbc.setState(0xd981, 0x7957, 0x48c0, 0x19eb, 0x820c, 0xc9a1, 0x1, 0x1);
        gbc.writeMem(0xd981, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7957);
        EXPECT(gbc.pc(), 0xd983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd981), 0xcb);
        EXPECT(gbc.readMem(0xd982), 0x92);
        // CB 92 00EF
        gbc.setState(0x9da0, 0x1852, 0xf480, 0x4568, 0xca9e, 0xb61b, 0x0, 0x1);
        gbc.writeMem(0x9da0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1852);
        EXPECT(gbc.pc(), 0x9da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da0), 0xcb);
        EXPECT(gbc.readMem(0x9da1), 0x92);
        // CB 92 00F0
        gbc.setState(0xe60e, 0x14f2, 0x98a0, 0x1cef, 0xd074, 0x3564, 0x1, 0x0);
        gbc.writeMem(0xe60e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x14f2);
        EXPECT(gbc.pc(), 0xe610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe60e), 0xcb);
        EXPECT(gbc.readMem(0xe60f), 0x92);
        // CB 92 00F1
        gbc.setState(0xbbe3, 0x1b68, 0x6eb0, 0x6628, 0xad82, 0xe2f2, 0x1, 0x1);
        gbc.writeMem(0xbbe3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1b68);
        EXPECT(gbc.pc(), 0xbbe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe3), 0xcb);
        EXPECT(gbc.readMem(0xbbe4), 0x92);
        // CB 92 00F2
        gbc.setState(0x315b, 0x41e2, 0x98c0, 0x4190, 0x5a7b, 0x1c53, 0x0, 0x1);
        gbc.writeMem(0x315b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x41e2);
        EXPECT(gbc.pc(), 0x315d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00F3
        gbc.setState(0x1e80, 0xb5c, 0x5510, 0x44, 0xf3dc, 0xac60, 0x0, 0x1);
        gbc.writeMem(0x1e80, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb5c);
        EXPECT(gbc.pc(), 0x1e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00F4
        gbc.setState(0x7218, 0xc22e, 0xc620, 0xeefc, 0x92c2, 0x2b07, 0x1, 0x1);
        gbc.writeMem(0x7218, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc22e);
        EXPECT(gbc.pc(), 0x721a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00F5
        gbc.setState(0xddc, 0xcfe2, 0x2d20, 0x31d3, 0xf0ca, 0x960f, 0x0, 0x1);
        gbc.writeMem(0xddc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xcfe2);
        EXPECT(gbc.pc(), 0xdde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00F6
        gbc.setState(0xbd5a, 0x22f0, 0x5b80, 0x3756, 0x2f6d, 0xbe1d, 0x0, 0x0);
        gbc.writeMem(0xbd5a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x22f0);
        EXPECT(gbc.pc(), 0xbd5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd5a), 0xcb);
        EXPECT(gbc.readMem(0xbd5b), 0x92);
        // CB 92 00F7
        gbc.setState(0x2fc, 0xb9db, 0xb300, 0xb75c, 0xfe8f, 0x8425, 0x1, 0x0);
        gbc.writeMem(0x2fc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb9db);
        EXPECT(gbc.pc(), 0x2fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00F8
        gbc.setState(0xb2de, 0x2533, 0x2dd0, 0xd2ff, 0xdff0, 0x492e, 0x0, 0x1);
        gbc.writeMem(0xb2de, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2533);
        EXPECT(gbc.pc(), 0xb2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2de), 0xcb);
        EXPECT(gbc.readMem(0xb2df), 0x92);
        // CB 92 00F9
        gbc.setState(0x7413, 0x968b, 0xf840, 0x424d, 0x23cb, 0xc8e1, 0x0, 0x0);
        gbc.writeMem(0x7413, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x968b);
        EXPECT(gbc.pc(), 0x7415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 00FA
        gbc.setState(0x6887, 0x2e36, 0xeb50, 0xea9d, 0xe310, 0x5381, 0x0, 0x0);
        gbc.writeMem(0x6887, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2e36);
        EXPECT(gbc.pc(), 0x6889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00FB
        gbc.setState(0xa8a7, 0x5397, 0x9d40, 0xe31e, 0xfe7f, 0xae21, 0x1, 0x0);
        gbc.writeMem(0xa8a7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5397);
        EXPECT(gbc.pc(), 0xa8a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a7), 0xcb);
        EXPECT(gbc.readMem(0xa8a8), 0x92);
        // CB 92 00FC
        gbc.setState(0xda7e, 0x7ff9, 0xa4a0, 0xb7ff, 0x7ad9, 0xe015, 0x1, 0x0);
        gbc.writeMem(0xda7e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7ff9);
        EXPECT(gbc.pc(), 0xda80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7e), 0xcb);
        EXPECT(gbc.readMem(0xda7f), 0x92);
        // CB 92 00FD
        gbc.setState(0xc389, 0xe71a, 0xb330, 0xb161, 0xde6f, 0xc9d5, 0x0, 0x1);
        gbc.writeMem(0xc389, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe71a);
        EXPECT(gbc.pc(), 0xc38b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc389), 0xcb);
        EXPECT(gbc.readMem(0xc38a), 0x92);
        // CB 92 00FE
        gbc.setState(0x5386, 0xa49b, 0x7610, 0xb757, 0x9d0a, 0x1814, 0x0, 0x1);
        gbc.writeMem(0x5386, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa49b);
        EXPECT(gbc.pc(), 0x5388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 00FF
        gbc.setState(0x5b39, 0xe83e, 0xaa30, 0x8d67, 0xf061, 0x8ad7, 0x1, 0x1);
        gbc.writeMem(0x5b39, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe83e);
        EXPECT(gbc.pc(), 0x5b3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0100
        gbc.setState(0xcd9a, 0xa535, 0xf270, 0xf3d7, 0xdb2e, 0xc52d, 0x1, 0x1);
        gbc.writeMem(0xcd9a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa535);
        EXPECT(gbc.pc(), 0xcd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd9a), 0xcb);
        EXPECT(gbc.readMem(0xcd9b), 0x92);
        // CB 92 0101
        gbc.setState(0x1941, 0x1e41, 0x4020, 0xa01, 0x3aa7, 0xfb91, 0x1, 0x0);
        gbc.writeMem(0x1941, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1e41);
        EXPECT(gbc.pc(), 0x1943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0102
        gbc.setState(0x8d23, 0xa189, 0xfa10, 0xbc0f, 0xf56f, 0x457b, 0x1, 0x0);
        gbc.writeMem(0x8d23, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa189);
        EXPECT(gbc.pc(), 0x8d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d23), 0xcb);
        EXPECT(gbc.readMem(0x8d24), 0x92);
        // CB 92 0103
        gbc.setState(0x5d76, 0x598f, 0xb80, 0x8c87, 0xa0c9, 0xaa38, 0x0, 0x0);
        gbc.writeMem(0x5d76, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x598f);
        EXPECT(gbc.pc(), 0x5d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0104
        gbc.setState(0xe435, 0xb535, 0x9520, 0xc479, 0xd5c7, 0xd8f7, 0x0, 0x1);
        gbc.writeMem(0xe435, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb535);
        EXPECT(gbc.pc(), 0xe437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe435), 0xcb);
        EXPECT(gbc.readMem(0xe436), 0x92);
        // CB 92 0105
        gbc.setState(0x108, 0x5838, 0xbe40, 0x6ff0, 0xadb4, 0xbda2, 0x0, 0x1);
        gbc.writeMem(0x108, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5838);
        EXPECT(gbc.pc(), 0x10a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0106
        gbc.setState(0x977d, 0xd354, 0x2370, 0xc01d, 0x6167, 0xa6cc, 0x0, 0x0);
        gbc.writeMem(0x977d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd354);
        EXPECT(gbc.pc(), 0x977f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977d), 0xcb);
        EXPECT(gbc.readMem(0x977e), 0x92);
        // CB 92 0107
        gbc.setState(0xd5ae, 0xc7a8, 0x9340, 0x6d2e, 0xa037, 0x4e1a, 0x1, 0x0);
        gbc.writeMem(0xd5ae, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc7a8);
        EXPECT(gbc.pc(), 0xd5b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ae), 0xcb);
        EXPECT(gbc.readMem(0xd5af), 0x92);
        // CB 92 0108
        gbc.setState(0x40c8, 0x9416, 0x3ab0, 0x8cc7, 0xe4e, 0xacd2, 0x1, 0x0);
        gbc.writeMem(0x40c8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9416);
        EXPECT(gbc.pc(), 0x40ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0109
        gbc.setState(0xa2dc, 0xc3b6, 0xdaa0, 0xc113, 0xd090, 0xa4f2, 0x1, 0x0);
        gbc.writeMem(0xa2dc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc3b6);
        EXPECT(gbc.pc(), 0xa2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2dc), 0xcb);
        EXPECT(gbc.readMem(0xa2dd), 0x92);
        // CB 92 010A
        gbc.setState(0xaaa2, 0xbcde, 0x4f30, 0x77a8, 0xbae0, 0x7295, 0x0, 0x0);
        gbc.writeMem(0xaaa2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbcde);
        EXPECT(gbc.pc(), 0xaaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa2), 0xcb);
        EXPECT(gbc.readMem(0xaaa3), 0x92);
        // CB 92 010B
        gbc.setState(0xc3cf, 0xb1ea, 0x1410, 0x4a70, 0xf4f8, 0x48ee, 0x1, 0x1);
        gbc.writeMem(0xc3cf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb1ea);
        EXPECT(gbc.pc(), 0xc3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3cf), 0xcb);
        EXPECT(gbc.readMem(0xc3d0), 0x92);
        // CB 92 010C
        gbc.setState(0x907f, 0x55cb, 0x59f0, 0x7b9c, 0x674a, 0xeaee, 0x1, 0x1);
        gbc.writeMem(0x907f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x55cb);
        EXPECT(gbc.pc(), 0x9081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907f), 0xcb);
        EXPECT(gbc.readMem(0x9080), 0x92);
        // CB 92 010D
        gbc.setState(0x20fc, 0x5157, 0x2830, 0x4b9, 0x383f, 0xad0e, 0x0, 0x0);
        gbc.writeMem(0x20fc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5157);
        EXPECT(gbc.pc(), 0x20fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 010E
        gbc.setState(0x4a8a, 0x7189, 0x8d0, 0xcda7, 0x3d17, 0x4a7b, 0x0, 0x0);
        gbc.writeMem(0x4a8a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7189);
        EXPECT(gbc.pc(), 0x4a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 010F
        gbc.setState(0x5790, 0xbe1b, 0x71d0, 0x943c, 0x1c66, 0x3d86, 0x0, 0x0);
        gbc.writeMem(0x5790, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbe1b);
        EXPECT(gbc.pc(), 0x5792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0110
        gbc.setState(0xc4, 0x675a, 0x8d70, 0x7143, 0xbe3c, 0x566d, 0x1, 0x1);
        gbc.writeMem(0xc4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x675a);
        EXPECT(gbc.pc(), 0xc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0111
        gbc.setState(0x44ca, 0xead4, 0x1ce0, 0x6ca4, 0x2b2a, 0x537, 0x1, 0x0);
        gbc.writeMem(0x44ca, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xead4);
        EXPECT(gbc.pc(), 0x44cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0112
        gbc.setState(0xcd5d, 0x10fc, 0xc590, 0x4da, 0xb594, 0x9082, 0x1, 0x1);
        gbc.writeMem(0xcd5d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x10fc);
        EXPECT(gbc.pc(), 0xcd5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd5d), 0xcb);
        EXPECT(gbc.readMem(0xcd5e), 0x92);
        // CB 92 0113
        gbc.setState(0x72d, 0x8060, 0x7f0, 0x4353, 0xd446, 0xa292, 0x0, 0x1);
        gbc.writeMem(0x72d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8060);
        EXPECT(gbc.pc(), 0x72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0114
        gbc.setState(0x940f, 0xfef, 0x6e20, 0x6cf8, 0xafd0, 0x382, 0x0, 0x1);
        gbc.writeMem(0x940f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfef);
        EXPECT(gbc.pc(), 0x9411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940f), 0xcb);
        EXPECT(gbc.readMem(0x9410), 0x92);
        // CB 92 0115
        gbc.setState(0x963b, 0xbb10, 0x99a0, 0x4b5f, 0x130f, 0x21e9, 0x1, 0x0);
        gbc.writeMem(0x963b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbb10);
        EXPECT(gbc.pc(), 0x963d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963b), 0xcb);
        EXPECT(gbc.readMem(0x963c), 0x92);
        // CB 92 0116
        gbc.setState(0x88fb, 0xd655, 0x7e00, 0x4089, 0x682a, 0x29af, 0x1, 0x1);
        gbc.writeMem(0x88fb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd655);
        EXPECT(gbc.pc(), 0x88fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fb), 0xcb);
        EXPECT(gbc.readMem(0x88fc), 0x92);
        // CB 92 0117
        gbc.setState(0xdf77, 0x8049, 0x3940, 0xfa88, 0x9da8, 0x6e00, 0x1, 0x1);
        gbc.writeMem(0xdf77, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8049);
        EXPECT(gbc.pc(), 0xdf79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf77), 0xcb);
        EXPECT(gbc.readMem(0xdf78), 0x92);
        // CB 92 0118
        gbc.setState(0x382, 0x63c2, 0xb0d0, 0x22a7, 0xc27a, 0x20ac, 0x1, 0x0);
        gbc.writeMem(0x382, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x63c2);
        EXPECT(gbc.pc(), 0x384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0119
        gbc.setState(0xa9f5, 0xba3d, 0xe740, 0x8b28, 0x89b3, 0x25bf, 0x1, 0x1);
        gbc.writeMem(0xa9f5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xba3d);
        EXPECT(gbc.pc(), 0xa9f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f5), 0xcb);
        EXPECT(gbc.readMem(0xa9f6), 0x92);
        // CB 92 011A
        gbc.setState(0x3d46, 0x8bf8, 0x9210, 0x6646, 0x2303, 0x6c4, 0x1, 0x0);
        gbc.writeMem(0x3d46, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8bf8);
        EXPECT(gbc.pc(), 0x3d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 011B
        gbc.setState(0x11f6, 0xcd9a, 0x7db0, 0x3c48, 0x77c6, 0x2b41, 0x0, 0x1);
        gbc.writeMem(0x11f6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcd9a);
        EXPECT(gbc.pc(), 0x11f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 011C
        gbc.setState(0x5cf6, 0x76b4, 0x2ed0, 0x84df, 0xd169, 0x6cf2, 0x0, 0x1);
        gbc.writeMem(0x5cf6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x76b4);
        EXPECT(gbc.pc(), 0x5cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 011D
        gbc.setState(0x6847, 0x7712, 0xaec0, 0x80e8, 0x5852, 0xee1b, 0x1, 0x0);
        gbc.writeMem(0x6847, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7712);
        EXPECT(gbc.pc(), 0x6849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 011E
        gbc.setState(0xace8, 0x86d8, 0x91f0, 0xa6f2, 0x6c7b, 0x59d1, 0x1, 0x1);
        gbc.writeMem(0xace8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x86d8);
        EXPECT(gbc.pc(), 0xacea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace8), 0xcb);
        EXPECT(gbc.readMem(0xace9), 0x92);
        // CB 92 011F
        gbc.setState(0xab6, 0x8ec, 0xe500, 0xcd6b, 0x271, 0x804c, 0x1, 0x0);
        gbc.writeMem(0xab6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8ec);
        EXPECT(gbc.pc(), 0xab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0121
        gbc.setState(0x341f, 0xc6f9, 0xc810, 0xf5a8, 0xd458, 0xd165, 0x0, 0x0);
        gbc.writeMem(0x341f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc6f9);
        EXPECT(gbc.pc(), 0x3421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0122
        gbc.setState(0x689, 0x6a76, 0xacb0, 0x4194, 0x4c72, 0xaae7, 0x1, 0x0);
        gbc.writeMem(0x689, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6a76);
        EXPECT(gbc.pc(), 0x68b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0123
        gbc.setState(0xb776, 0x253f, 0x1330, 0xb09c, 0x78fb, 0x7947, 0x0, 0x1);
        gbc.writeMem(0xb776, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x253f);
        EXPECT(gbc.pc(), 0xb778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb776), 0xcb);
        EXPECT(gbc.readMem(0xb777), 0x92);
        // CB 92 0124
        gbc.setState(0x4864, 0xcbfc, 0x3a00, 0x3ceb, 0x2378, 0xe088, 0x0, 0x0);
        gbc.writeMem(0x4864, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xcbfc);
        EXPECT(gbc.pc(), 0x4866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0125
        gbc.setState(0x2ce5, 0x38d6, 0x54d0, 0x6680, 0xd62f, 0xcb2f, 0x0, 0x0);
        gbc.writeMem(0x2ce5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x38d6);
        EXPECT(gbc.pc(), 0x2ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0126
        gbc.setState(0x10d8, 0xe415, 0x6d70, 0xff62, 0x8f05, 0xe15f, 0x1, 0x1);
        gbc.writeMem(0x10d8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe415);
        EXPECT(gbc.pc(), 0x10da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0127
        gbc.setState(0xe6a5, 0xb744, 0x6990, 0xc13a, 0xdb7, 0x1d1a, 0x1, 0x0);
        gbc.writeMem(0xe6a5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb744);
        EXPECT(gbc.pc(), 0xe6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a5), 0xcb);
        EXPECT(gbc.readMem(0xe6a6), 0x92);
        // CB 92 0128
        gbc.setState(0xd238, 0x4577, 0x5ee0, 0x1a91, 0x249b, 0x78af, 0x1, 0x1);
        gbc.writeMem(0xd238, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4577);
        EXPECT(gbc.pc(), 0xd23a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd238), 0xcb);
        EXPECT(gbc.readMem(0xd239), 0x92);
        // CB 92 012A
        gbc.setState(0x47c4, 0x9fc, 0x8f00, 0x163a, 0xb59, 0xb406, 0x1, 0x0);
        gbc.writeMem(0x47c4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9fc);
        EXPECT(gbc.pc(), 0x47c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 012B
        gbc.setState(0x75bb, 0xeb19, 0xb430, 0xdbc1, 0x8a23, 0x7ce3, 0x1, 0x1);
        gbc.writeMem(0x75bb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xeb19);
        EXPECT(gbc.pc(), 0x75bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 012C
        gbc.setState(0x9509, 0xf895, 0x730, 0x2273, 0xdb7, 0xbb1f, 0x0, 0x0);
        gbc.writeMem(0x9509, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf895);
        EXPECT(gbc.pc(), 0x950b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9509), 0xcb);
        EXPECT(gbc.readMem(0x950a), 0x92);
        // CB 92 012D
        gbc.setState(0x6400, 0xe41b, 0x8c40, 0x66e2, 0x2fc0, 0xe243, 0x1, 0x0);
        gbc.writeMem(0x6400, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe41b);
        EXPECT(gbc.pc(), 0x6402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 012E
        gbc.setState(0x34e0, 0x69bc, 0xb10, 0x114, 0xfd7c, 0x2cb5, 0x0, 0x1);
        gbc.writeMem(0x34e0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x69bc);
        EXPECT(gbc.pc(), 0x34e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 012F
        gbc.setState(0x481d, 0x46cf, 0x6520, 0x269c, 0xd18a, 0xc72b, 0x1, 0x0);
        gbc.writeMem(0x481d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x46cf);
        EXPECT(gbc.pc(), 0x481f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0131
        gbc.setState(0x54bd, 0xe494, 0x4800, 0xcb21, 0x1b4, 0x3e5, 0x1, 0x1);
        gbc.writeMem(0x54bd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe494);
        EXPECT(gbc.pc(), 0x54bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0132
        gbc.setState(0xc61e, 0xb6eb, 0x70c0, 0x4745, 0xf79c, 0xdf31, 0x1, 0x1);
        gbc.writeMem(0xc61e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb6eb);
        EXPECT(gbc.pc(), 0xc620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc61e), 0xcb);
        EXPECT(gbc.readMem(0xc61f), 0x92);
        // CB 92 0133
        gbc.setState(0x6845, 0x292e, 0x4020, 0x2663, 0x5f5a, 0x1aa0, 0x0, 0x0);
        gbc.writeMem(0x6845, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x292e);
        EXPECT(gbc.pc(), 0x6847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0134
        gbc.setState(0x1294, 0x99f7, 0x6330, 0x8f45, 0xf8a6, 0x7272, 0x0, 0x1);
        gbc.writeMem(0x1294, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x99f7);
        EXPECT(gbc.pc(), 0x1296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0135
        gbc.setState(0x9cb, 0x2f73, 0x3930, 0xe0ed, 0x869, 0x9fe5, 0x1, 0x1);
        gbc.writeMem(0x9cb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2f73);
        EXPECT(gbc.pc(), 0x9cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0136
        gbc.setState(0x251f, 0x4f28, 0xf740, 0xa17, 0xd96a, 0xfeb2, 0x1, 0x0);
        gbc.writeMem(0x251f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4f28);
        EXPECT(gbc.pc(), 0x2521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0137
        gbc.setState(0x62bf, 0x3143, 0xad80, 0xb86, 0x9cf0, 0x1a5, 0x0, 0x0);
        gbc.writeMem(0x62bf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3143);
        EXPECT(gbc.pc(), 0x62c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0138
        gbc.setState(0x3638, 0x1380, 0x8c60, 0xb275, 0xe030, 0x4ff8, 0x1, 0x1);
        gbc.writeMem(0x3638, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1380);
        EXPECT(gbc.pc(), 0x363a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0139
        gbc.setState(0x9c9, 0xdde8, 0x7fb0, 0xd7b, 0xf486, 0x88f6, 0x0, 0x0);
        gbc.writeMem(0x9c9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdde8);
        EXPECT(gbc.pc(), 0x9cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 013A
        gbc.setState(0xa3be, 0x4894, 0x5ab0, 0xc236, 0xa7e0, 0x4446, 0x1, 0x1);
        gbc.writeMem(0xa3be, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4894);
        EXPECT(gbc.pc(), 0xa3c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3be), 0xcb);
        EXPECT(gbc.readMem(0xa3bf), 0x92);
        // CB 92 013B
        gbc.setState(0x620b, 0xda7e, 0xbb60, 0xeb80, 0xde22, 0x1bf5, 0x0, 0x0);
        gbc.writeMem(0x620b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xda7e);
        EXPECT(gbc.pc(), 0x620d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 013C
        gbc.setState(0x3228, 0x8ab6, 0x7560, 0x4cf6, 0x934c, 0xe86f, 0x1, 0x1);
        gbc.writeMem(0x3228, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8ab6);
        EXPECT(gbc.pc(), 0x322a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 013D
        gbc.setState(0xb21b, 0xd1f8, 0xc360, 0x3861, 0xe41c, 0x24da, 0x1, 0x0);
        gbc.writeMem(0xb21b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd1f8);
        EXPECT(gbc.pc(), 0xb21d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21b), 0xcb);
        EXPECT(gbc.readMem(0xb21c), 0x92);
        // CB 92 013E
        gbc.setState(0x8b35, 0xae0d, 0x3360, 0x5e5c, 0x8465, 0x1141, 0x0, 0x1);
        gbc.writeMem(0x8b35, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xae0d);
        EXPECT(gbc.pc(), 0x8b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b35), 0xcb);
        EXPECT(gbc.readMem(0x8b36), 0x92);
        // CB 92 013F
        gbc.setState(0x961c, 0x3fcb, 0xe820, 0xb722, 0x61db, 0x3acf, 0x1, 0x0);
        gbc.writeMem(0x961c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3fcb);
        EXPECT(gbc.pc(), 0x961e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x961c), 0xcb);
        EXPECT(gbc.readMem(0x961d), 0x92);
        // CB 92 0140
        gbc.setState(0x7906, 0x65e9, 0x8ac0, 0x5c, 0x8bd3, 0x9891, 0x1, 0x1);
        gbc.writeMem(0x7906, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x65e9);
        EXPECT(gbc.pc(), 0x7908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0141
        gbc.setState(0xd74a, 0xf286, 0x6960, 0x8d1c, 0xb963, 0x7722, 0x0, 0x1);
        gbc.writeMem(0xd74a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf286);
        EXPECT(gbc.pc(), 0xd74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd74a), 0xcb);
        EXPECT(gbc.readMem(0xd74b), 0x92);
        // CB 92 0142
        gbc.setState(0xc2b8, 0x7f24, 0x4900, 0xfc71, 0xbd67, 0xce77, 0x0, 0x0);
        gbc.writeMem(0xc2b8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7f24);
        EXPECT(gbc.pc(), 0xc2ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b8), 0xcb);
        EXPECT(gbc.readMem(0xc2b9), 0x92);
        // CB 92 0143
        gbc.setState(0x1386, 0xb45, 0x8490, 0x6bdc, 0x6116, 0x3cb6, 0x0, 0x0);
        gbc.writeMem(0x1386, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb45);
        EXPECT(gbc.pc(), 0x1388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0144
        gbc.setState(0x5f52, 0x48bf, 0xbfa0, 0xc808, 0x296d, 0x700f, 0x0, 0x0);
        gbc.writeMem(0x5f52, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x48bf);
        EXPECT(gbc.pc(), 0x5f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0145
        gbc.setState(0xbe6a, 0x2190, 0x94c0, 0xa8e3, 0x8559, 0x6fac, 0x0, 0x1);
        gbc.writeMem(0xbe6a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2190);
        EXPECT(gbc.pc(), 0xbe6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe6a), 0xcb);
        EXPECT(gbc.readMem(0xbe6b), 0x92);
        // CB 92 0146
        gbc.setState(0x4b88, 0x6f5c, 0x1ac0, 0x4e1a, 0xab04, 0x9882, 0x0, 0x0);
        gbc.writeMem(0x4b88, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6f5c);
        EXPECT(gbc.pc(), 0x4b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0147
        gbc.setState(0x3a6e, 0xae47, 0xb850, 0xc172, 0x8e10, 0xb6f2, 0x0, 0x0);
        gbc.writeMem(0x3a6e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xae47);
        EXPECT(gbc.pc(), 0x3a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0148
        gbc.setState(0x77b0, 0xab21, 0xcdb0, 0xac8b, 0x164f, 0x9c26, 0x1, 0x1);
        gbc.writeMem(0x77b0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xab21);
        EXPECT(gbc.pc(), 0x77b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0149
        gbc.setState(0x5364, 0x6788, 0x240, 0xf21e, 0x2555, 0x9d92, 0x0, 0x1);
        gbc.writeMem(0x5364, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6788);
        EXPECT(gbc.pc(), 0x5366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 014B
        gbc.setState(0xa442, 0xeade, 0x1390, 0xd3b2, 0xe703, 0x55b9, 0x0, 0x1);
        gbc.writeMem(0xa442, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xeade);
        EXPECT(gbc.pc(), 0xa444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa442), 0xcb);
        EXPECT(gbc.readMem(0xa443), 0x92);
        // CB 92 014C
        gbc.setState(0x41f8, 0x2ede, 0xd30, 0xc5dd, 0xac8, 0x5637, 0x0, 0x1);
        gbc.writeMem(0x41f8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2ede);
        EXPECT(gbc.pc(), 0x41fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 014D
        gbc.setState(0x6fa7, 0xc60f, 0x27b0, 0x2f52, 0xc841, 0x92a8, 0x1, 0x1);
        gbc.writeMem(0x6fa7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc60f);
        EXPECT(gbc.pc(), 0x6fa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 014F
        gbc.setState(0xbd0d, 0xbd11, 0xb4b0, 0xf432, 0xa9ac, 0x8105, 0x0, 0x0);
        gbc.writeMem(0xbd0d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbd11);
        EXPECT(gbc.pc(), 0xbd0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0d), 0xcb);
        EXPECT(gbc.readMem(0xbd0e), 0x92);
        // CB 92 0150
        gbc.setState(0x6b18, 0x1086, 0x7b80, 0x4342, 0xd097, 0x5d86, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1086);
        EXPECT(gbc.pc(), 0x6b1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0151
        gbc.setState(0xcca, 0x1146, 0xfb20, 0x6ef3, 0x89e5, 0xe597, 0x0, 0x1);
        gbc.writeMem(0xcca, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1146);
        EXPECT(gbc.pc(), 0xccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0152
        gbc.setState(0x2d84, 0x318b, 0x9920, 0x2f2d, 0xa1f2, 0x9cc2, 0x0, 0x0);
        gbc.writeMem(0x2d84, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x318b);
        EXPECT(gbc.pc(), 0x2d86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0153
        gbc.setState(0x5362, 0x2bc1, 0x3ef0, 0xf69f, 0x1501, 0xadf2, 0x0, 0x1);
        gbc.writeMem(0x5362, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2bc1);
        EXPECT(gbc.pc(), 0x5364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0154
        gbc.setState(0x1158, 0xe657, 0xa4a0, 0xc306, 0x92d8, 0x60e0, 0x0, 0x0);
        gbc.writeMem(0x1158, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe657);
        EXPECT(gbc.pc(), 0x115a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0155
        gbc.setState(0x6b24, 0xd94, 0x33b0, 0x1f49, 0x62a4, 0xba42, 0x1, 0x0);
        gbc.writeMem(0x6b24, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd94);
        EXPECT(gbc.pc(), 0x6b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0156
        gbc.setState(0x4af, 0xa12f, 0x4150, 0xa8a5, 0x874c, 0xabeb, 0x1, 0x0);
        gbc.writeMem(0x4af, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa12f);
        EXPECT(gbc.pc(), 0x4b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0157
        gbc.setState(0x276a, 0x9da6, 0xd430, 0xa8f5, 0xfc1e, 0x7cab, 0x1, 0x0);
        gbc.writeMem(0x276a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9da6);
        EXPECT(gbc.pc(), 0x276c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0158
        gbc.setState(0xa130, 0x3428, 0xec00, 0xa050, 0x51df, 0xda97, 0x0, 0x0);
        gbc.writeMem(0xa130, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3428);
        EXPECT(gbc.pc(), 0xa132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa130), 0xcb);
        EXPECT(gbc.readMem(0xa131), 0x92);
        // CB 92 0159
        gbc.setState(0xdb0b, 0xf033, 0xee20, 0x33c0, 0x3cc6, 0x36a2, 0x0, 0x0);
        gbc.writeMem(0xdb0b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf033);
        EXPECT(gbc.pc(), 0xdb0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb0b), 0xcb);
        EXPECT(gbc.readMem(0xdb0c), 0x92);
        // CB 92 015A
        gbc.setState(0xd9d2, 0xac39, 0xdb00, 0xd199, 0x881a, 0xefd7, 0x0, 0x1);
        gbc.writeMem(0xd9d2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xac39);
        EXPECT(gbc.pc(), 0xd9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d2), 0xcb);
        EXPECT(gbc.readMem(0xd9d3), 0x92);
        // CB 92 015B
        gbc.setState(0xe8d3, 0x2b11, 0xd120, 0xcec8, 0xf201, 0x7adb, 0x0, 0x1);
        gbc.writeMem(0xe8d3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2b11);
        EXPECT(gbc.pc(), 0xe8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d3), 0xcb);
        EXPECT(gbc.readMem(0xe8d4), 0x92);
        // CB 92 015C
        gbc.setState(0x9619, 0x8368, 0xfdc0, 0xcaa3, 0x480c, 0x930b, 0x0, 0x1);
        gbc.writeMem(0x9619, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8368);
        EXPECT(gbc.pc(), 0x961b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9619), 0xcb);
        EXPECT(gbc.readMem(0x961a), 0x92);
        // CB 92 015D
        gbc.setState(0xa977, 0x7d65, 0x65d0, 0x56c4, 0xe50d, 0x5932, 0x0, 0x0);
        gbc.writeMem(0xa977, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7d65);
        EXPECT(gbc.pc(), 0xa979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa977), 0xcb);
        EXPECT(gbc.readMem(0xa978), 0x92);
        // CB 92 015E
        gbc.setState(0x27c, 0xc5ad, 0x6a70, 0x5ad5, 0x5022, 0xc1f2, 0x0, 0x1);
        gbc.writeMem(0x27c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc5ad);
        EXPECT(gbc.pc(), 0x27e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 015F
        gbc.setState(0x609b, 0xa95e, 0x5470, 0x5476, 0xfb31, 0xa8e6, 0x0, 0x0);
        gbc.writeMem(0x609b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa95e);
        EXPECT(gbc.pc(), 0x609d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0160
        gbc.setState(0x210a, 0xd8d4, 0xff30, 0x9a16, 0x9912, 0x5d07, 0x0, 0x0);
        gbc.writeMem(0x210a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd8d4);
        EXPECT(gbc.pc(), 0x210c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0161
        gbc.setState(0xa314, 0xcc90, 0xdca0, 0x3587, 0xb2e1, 0x6309, 0x1, 0x1);
        gbc.writeMem(0xa314, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xcc90);
        EXPECT(gbc.pc(), 0xa316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa314), 0xcb);
        EXPECT(gbc.readMem(0xa315), 0x92);
        // CB 92 0162
        gbc.setState(0x4514, 0xf03c, 0xcbe0, 0x8ffa, 0x7ec9, 0xfcb5, 0x0, 0x1);
        gbc.writeMem(0x4514, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf03c);
        EXPECT(gbc.pc(), 0x4516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0163
        gbc.setState(0x5c96, 0xcd36, 0x4e90, 0xeda, 0xccc, 0xfb3e, 0x1, 0x0);
        gbc.writeMem(0x5c96, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xcd36);
        EXPECT(gbc.pc(), 0x5c98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0164
        gbc.setState(0x791d, 0x7236, 0x37a0, 0x316, 0x7647, 0x1229, 0x1, 0x0);
        gbc.writeMem(0x791d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7236);
        EXPECT(gbc.pc(), 0x791f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0165
        gbc.setState(0xde7e, 0xf13d, 0x8d60, 0x67ae, 0x312, 0xf257, 0x0, 0x1);
        gbc.writeMem(0xde7e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf13d);
        EXPECT(gbc.pc(), 0xde80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde7e), 0xcb);
        EXPECT(gbc.readMem(0xde7f), 0x92);
        // CB 92 0166
        gbc.setState(0xd935, 0xb1fb, 0x3220, 0xe8e8, 0xdd8b, 0x5d16, 0x0, 0x0);
        gbc.writeMem(0xd935, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb1fb);
        EXPECT(gbc.pc(), 0xd937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd935), 0xcb);
        EXPECT(gbc.readMem(0xd936), 0x92);
        // CB 92 0167
        gbc.setState(0xbd77, 0x4fc6, 0x7e50, 0x14c4, 0xee3, 0x1f26, 0x0, 0x0);
        gbc.writeMem(0xbd77, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4fc6);
        EXPECT(gbc.pc(), 0xbd79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd77), 0xcb);
        EXPECT(gbc.readMem(0xbd78), 0x92);
        // CB 92 0168
        gbc.setState(0x8220, 0xdff, 0x6a50, 0xcb82, 0x331d, 0x3c9c, 0x0, 0x1);
        gbc.writeMem(0x8220, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdff);
        EXPECT(gbc.pc(), 0x8222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8220), 0xcb);
        EXPECT(gbc.readMem(0x8221), 0x92);
        // CB 92 0169
        gbc.setState(0xa051, 0xbc2e, 0x11e0, 0x6cc5, 0xfb20, 0xca2c, 0x0, 0x0);
        gbc.writeMem(0xa051, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbc2e);
        EXPECT(gbc.pc(), 0xa053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa051), 0xcb);
        EXPECT(gbc.readMem(0xa052), 0x92);
        // CB 92 016A
        gbc.setState(0xc870, 0xd0ed, 0x63b0, 0xbebe, 0x8adc, 0xea3c, 0x0, 0x0);
        gbc.writeMem(0xc870, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd0ed);
        EXPECT(gbc.pc(), 0xc872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc870), 0xcb);
        EXPECT(gbc.readMem(0xc871), 0x92);
        // CB 92 016B
        gbc.setState(0x7e49, 0x5796, 0x1ec0, 0xb96b, 0x5c2a, 0x8c58, 0x1, 0x0);
        gbc.writeMem(0x7e49, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5796);
        EXPECT(gbc.pc(), 0x7e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 016C
        gbc.setState(0x5729, 0x6086, 0xf4d0, 0x6fc6, 0x9d44, 0xe492, 0x1, 0x1);
        gbc.writeMem(0x5729, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6086);
        EXPECT(gbc.pc(), 0x572b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 016D
        gbc.setState(0xbb0a, 0xa7de, 0x2d30, 0x5abe, 0x8a26, 0x3273, 0x0, 0x1);
        gbc.writeMem(0xbb0a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa7de);
        EXPECT(gbc.pc(), 0xbb0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0a), 0xcb);
        EXPECT(gbc.readMem(0xbb0b), 0x92);
        // CB 92 016E
        gbc.setState(0x9272, 0xc9f6, 0x95d0, 0xdac1, 0xe35, 0x5131, 0x0, 0x0);
        gbc.writeMem(0x9272, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc9f6);
        EXPECT(gbc.pc(), 0x9274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9272), 0xcb);
        EXPECT(gbc.readMem(0x9273), 0x92);
        // CB 92 016F
        gbc.setState(0xd48e, 0x2b51, 0xc350, 0x292b, 0xcfea, 0x2723, 0x0, 0x1);
        gbc.writeMem(0xd48e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2b51);
        EXPECT(gbc.pc(), 0xd490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48e), 0xcb);
        EXPECT(gbc.readMem(0xd48f), 0x92);
        // CB 92 0170
        gbc.setState(0xd6b9, 0xf23c, 0x4910, 0x55f, 0x50d9, 0x4eb4, 0x1, 0x1);
        gbc.writeMem(0xd6b9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf23c);
        EXPECT(gbc.pc(), 0xd6bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6b9), 0xcb);
        EXPECT(gbc.readMem(0xd6ba), 0x92);
        // CB 92 0171
        gbc.setState(0x2ba2, 0x10de, 0xcab0, 0xecb, 0xbf7e, 0x3e86, 0x1, 0x0);
        gbc.writeMem(0x2ba2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x10de);
        EXPECT(gbc.pc(), 0x2ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0172
        gbc.setState(0x64ad, 0x6d59, 0xc370, 0x1e, 0x1ef2, 0x712, 0x0, 0x1);
        gbc.writeMem(0x64ad, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6d59);
        EXPECT(gbc.pc(), 0x64af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0173
        gbc.setState(0x7b53, 0xccf1, 0x2920, 0x7bd7, 0xc9ea, 0x8e17, 0x1, 0x0);
        gbc.writeMem(0x7b53, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xccf1);
        EXPECT(gbc.pc(), 0x7b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0174
        gbc.setState(0xe8ea, 0x3ede, 0xd7e0, 0x8bf7, 0x6753, 0x9564, 0x1, 0x1);
        gbc.writeMem(0xe8ea, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3ede);
        EXPECT(gbc.pc(), 0xe8ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ea), 0xcb);
        EXPECT(gbc.readMem(0xe8eb), 0x92);
        // CB 92 0175
        gbc.setState(0x1a81, 0xa455, 0x58c0, 0xecc, 0x6ca8, 0x6529, 0x0, 0x1);
        gbc.writeMem(0x1a81, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa455);
        EXPECT(gbc.pc(), 0x1a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0176
        gbc.setState(0x84cd, 0x8f61, 0x9dc0, 0x1afd, 0x232d, 0x1202, 0x1, 0x1);
        gbc.writeMem(0x84cd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8f61);
        EXPECT(gbc.pc(), 0x84cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cd), 0xcb);
        EXPECT(gbc.readMem(0x84ce), 0x92);
        // CB 92 0177
        gbc.setState(0xbd2b, 0x77cc, 0xc1d0, 0x7731, 0x507, 0x502e, 0x0, 0x1);
        gbc.writeMem(0xbd2b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x77cc);
        EXPECT(gbc.pc(), 0xbd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2b), 0xcb);
        EXPECT(gbc.readMem(0xbd2c), 0x92);
        // CB 92 0178
        gbc.setState(0xc682, 0x2cfd, 0xba70, 0x730, 0x64c8, 0xcc1f, 0x0, 0x0);
        gbc.writeMem(0xc682, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2cfd);
        EXPECT(gbc.pc(), 0xc684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc682), 0xcb);
        EXPECT(gbc.readMem(0xc683), 0x92);
        // CB 92 0179
        gbc.setState(0x5df6, 0x94ee, 0x5cd0, 0xc896, 0xebd6, 0x7c63, 0x0, 0x1);
        gbc.writeMem(0x5df6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x94ee);
        EXPECT(gbc.pc(), 0x5df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 017A
        gbc.setState(0x8f20, 0x9d92, 0xbf10, 0xc0f9, 0xa8a9, 0xcf6a, 0x0, 0x0);
        gbc.writeMem(0x8f20, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9d92);
        EXPECT(gbc.pc(), 0x8f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f20), 0xcb);
        EXPECT(gbc.readMem(0x8f21), 0x92);
        // CB 92 017B
        gbc.setState(0x49a8, 0x92a4, 0x9da0, 0x473f, 0xcb0, 0xebbb, 0x0, 0x0);
        gbc.writeMem(0x49a8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x92a4);
        EXPECT(gbc.pc(), 0x49aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 017C
        gbc.setState(0x2d72, 0xe833, 0xe590, 0xf2f6, 0xf763, 0x97d7, 0x1, 0x0);
        gbc.writeMem(0x2d72, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe833);
        EXPECT(gbc.pc(), 0x2d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 017D
        gbc.setState(0x7754, 0x6eb9, 0x2e90, 0xd449, 0x1731, 0x7ddf, 0x1, 0x1);
        gbc.writeMem(0x7754, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6eb9);
        EXPECT(gbc.pc(), 0x7756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 017E
        gbc.setState(0x60b4, 0x10b0, 0xb230, 0xc31e, 0xe561, 0x63f0, 0x1, 0x1);
        gbc.writeMem(0x60b4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x10b0);
        EXPECT(gbc.pc(), 0x60b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 017F
        gbc.setState(0xbff0, 0x75ea, 0x9b30, 0x4d88, 0x8946, 0xa877, 0x0, 0x1);
        gbc.writeMem(0xbff0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x75ea);
        EXPECT(gbc.pc(), 0xbff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff0), 0xcb);
        EXPECT(gbc.readMem(0xbff1), 0x92);
        // CB 92 0181
        gbc.setState(0xbcf3, 0x563a, 0xa3c0, 0xb549, 0xab52, 0xa23f, 0x1, 0x0);
        gbc.writeMem(0xbcf3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x563a);
        EXPECT(gbc.pc(), 0xbcf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf3), 0xcb);
        EXPECT(gbc.readMem(0xbcf4), 0x92);
        // CB 92 0182
        gbc.setState(0x8001, 0xdeb7, 0xe1e0, 0x7c74, 0x4911, 0xfaf0, 0x1, 0x0);
        gbc.writeMem(0x8001, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdeb7);
        EXPECT(gbc.pc(), 0x8003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8001), 0xcb);
        EXPECT(gbc.readMem(0x8002), 0x92);
        // CB 92 0183
        gbc.setState(0xbdbb, 0x3ea, 0x20, 0x133d, 0xe49a, 0x8325, 0x1, 0x1);
        gbc.writeMem(0xbdbb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3ea);
        EXPECT(gbc.pc(), 0xbdbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdbb), 0xcb);
        EXPECT(gbc.readMem(0xbdbc), 0x92);
        // CB 92 0185
        gbc.setState(0xbf2d, 0xe696, 0xc530, 0x4226, 0xa39d, 0x8006, 0x1, 0x0);
        gbc.writeMem(0xbf2d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe696);
        EXPECT(gbc.pc(), 0xbf2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2d), 0xcb);
        EXPECT(gbc.readMem(0xbf2e), 0x92);
        // CB 92 0186
        gbc.setState(0x861b, 0x1b6d, 0xab40, 0x7137, 0xdbfa, 0x4a98, 0x0, 0x1);
        gbc.writeMem(0x861b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1b6d);
        EXPECT(gbc.pc(), 0x861d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861b), 0xcb);
        EXPECT(gbc.readMem(0x861c), 0x92);
        // CB 92 0187
        gbc.setState(0x8f7b, 0xe1c2, 0x9dc0, 0xbdca, 0x509e, 0xf5ac, 0x0, 0x1);
        gbc.writeMem(0x8f7b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe1c2);
        EXPECT(gbc.pc(), 0x8f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f7b), 0xcb);
        EXPECT(gbc.readMem(0x8f7c), 0x92);
        // CB 92 0188
        gbc.setState(0x4a1, 0x42f6, 0xd200, 0xb0a4, 0x72ad, 0xba18, 0x1, 0x1);
        gbc.writeMem(0x4a1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x42f6);
        EXPECT(gbc.pc(), 0x4a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0189
        gbc.setState(0x57ac, 0x2ec5, 0xf030, 0x802f, 0xbde8, 0x9a7a, 0x1, 0x0);
        gbc.writeMem(0x57ac, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2ec5);
        EXPECT(gbc.pc(), 0x57ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 018A
        gbc.setState(0xb07e, 0xed03, 0xeba0, 0x63d3, 0x9d40, 0x644c, 0x0, 0x0);
        gbc.writeMem(0xb07e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xed03);
        EXPECT(gbc.pc(), 0xb080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07e), 0xcb);
        EXPECT(gbc.readMem(0xb07f), 0x92);
        // CB 92 018B
        gbc.setState(0x4084, 0xf815, 0x5140, 0xcb41, 0x145e, 0xcead, 0x0, 0x1);
        gbc.writeMem(0x4084, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf815);
        EXPECT(gbc.pc(), 0x4086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 018C
        gbc.setState(0x7128, 0x36a2, 0xd530, 0x332b, 0x81a8, 0xfba9, 0x0, 0x0);
        gbc.writeMem(0x7128, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x36a2);
        EXPECT(gbc.pc(), 0x712a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 018D
        gbc.setState(0x8bfa, 0x870b, 0xcd60, 0x6f0f, 0xa0e6, 0xfdae, 0x0, 0x1);
        gbc.writeMem(0x8bfa, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x870b);
        EXPECT(gbc.pc(), 0x8bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfa), 0xcb);
        EXPECT(gbc.readMem(0x8bfb), 0x92);
        // CB 92 018E
        gbc.setState(0xe861, 0xa7c0, 0x48d0, 0x7bb2, 0xf9ae, 0x650c, 0x0, 0x1);
        gbc.writeMem(0xe861, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa7c0);
        EXPECT(gbc.pc(), 0xe863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe861), 0xcb);
        EXPECT(gbc.readMem(0xe862), 0x92);
        // CB 92 018F
        gbc.setState(0xe705, 0xb733, 0x51c0, 0xdeed, 0x32e2, 0x7dc2, 0x0, 0x0);
        gbc.writeMem(0xe705, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb733);
        EXPECT(gbc.pc(), 0xe707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe705), 0xcb);
        EXPECT(gbc.readMem(0xe706), 0x92);
        // CB 92 0190
        gbc.setState(0xb851, 0x51cc, 0xcdb0, 0x519f, 0x7e46, 0x17bd, 0x0, 0x0);
        gbc.writeMem(0xb851, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x51cc);
        EXPECT(gbc.pc(), 0xb853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb851), 0xcb);
        EXPECT(gbc.readMem(0xb852), 0x92);
        // CB 92 0191
        gbc.setState(0xa37d, 0x246c, 0x5720, 0xa1c1, 0x844d, 0x6d89, 0x0, 0x1);
        gbc.writeMem(0xa37d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x246c);
        EXPECT(gbc.pc(), 0xa37f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa37d), 0xcb);
        EXPECT(gbc.readMem(0xa37e), 0x92);
        // CB 92 0192
        gbc.setState(0x8543, 0xf12c, 0x61e0, 0x207c, 0x257f, 0x958f, 0x0, 0x1);
        gbc.writeMem(0x8543, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf12c);
        EXPECT(gbc.pc(), 0x8545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8543), 0xcb);
        EXPECT(gbc.readMem(0x8544), 0x92);
        // CB 92 0193
        gbc.setState(0x56b0, 0x7620, 0x3320, 0x3bbc, 0xa1f7, 0x2cb1, 0x1, 0x1);
        gbc.writeMem(0x56b0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7620);
        EXPECT(gbc.pc(), 0x56b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0194
        gbc.setState(0xd1d5, 0x58d0, 0x9fd0, 0xdf13, 0xb909, 0x34a3, 0x0, 0x1);
        gbc.writeMem(0xd1d5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x58d0);
        EXPECT(gbc.pc(), 0xd1d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d5), 0xcb);
        EXPECT(gbc.readMem(0xd1d6), 0x92);
        // CB 92 0195
        gbc.setState(0x4bb, 0x3bb0, 0xad40, 0x7b58, 0x46dc, 0xe5d5, 0x0, 0x1);
        gbc.writeMem(0x4bb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3bb0);
        EXPECT(gbc.pc(), 0x4bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0196
        gbc.setState(0xb841, 0x6555, 0xa140, 0x6ba6, 0xf556, 0x448d, 0x0, 0x0);
        gbc.writeMem(0xb841, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6555);
        EXPECT(gbc.pc(), 0xb843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb841), 0xcb);
        EXPECT(gbc.readMem(0xb842), 0x92);
        // CB 92 0197
        gbc.setState(0x3280, 0xa307, 0x5740, 0x7c14, 0x158f, 0x102f, 0x1, 0x1);
        gbc.writeMem(0x3280, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa307);
        EXPECT(gbc.pc(), 0x3282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0198
        gbc.setState(0x797b, 0xea6c, 0x7610, 0x7407, 0x2fcd, 0x3abc, 0x1, 0x1);
        gbc.writeMem(0x797b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xea6c);
        EXPECT(gbc.pc(), 0x797d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0199
        gbc.setState(0x5960, 0x54b7, 0x5550, 0x72a6, 0x5a5b, 0x9542, 0x1, 0x0);
        gbc.writeMem(0x5960, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x54b7);
        EXPECT(gbc.pc(), 0x5962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 019A
        gbc.setState(0x7d35, 0xb911, 0x9f60, 0xe357, 0xf4bc, 0x7a55, 0x0, 0x1);
        gbc.writeMem(0x7d35, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb911);
        EXPECT(gbc.pc(), 0x7d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 019B
        gbc.setState(0x99a4, 0x486f, 0x5e10, 0xcaac, 0xee16, 0x3f85, 0x1, 0x1);
        gbc.writeMem(0x99a4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x486f);
        EXPECT(gbc.pc(), 0x99a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99a4), 0xcb);
        EXPECT(gbc.readMem(0x99a5), 0x92);
        // CB 92 019C
        gbc.setState(0x945e, 0xb08f, 0xe550, 0xadc2, 0xb172, 0xe6c9, 0x1, 0x1);
        gbc.writeMem(0x945e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb08f);
        EXPECT(gbc.pc(), 0x9460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945e), 0xcb);
        EXPECT(gbc.readMem(0x945f), 0x92);
        // CB 92 019D
        gbc.setState(0x81d2, 0xd7c7, 0x5a60, 0x342f, 0x7453, 0x673b, 0x1, 0x1);
        gbc.writeMem(0x81d2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd7c7);
        EXPECT(gbc.pc(), 0x81d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d2), 0xcb);
        EXPECT(gbc.readMem(0x81d3), 0x92);
        // CB 92 019E
        gbc.setState(0x43e0, 0x12da, 0x95d0, 0x690f, 0xa3a7, 0xbf7, 0x1, 0x1);
        gbc.writeMem(0x43e0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x12da);
        EXPECT(gbc.pc(), 0x43e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 019F
        gbc.setState(0x2571, 0xd93c, 0xd8a0, 0x66b7, 0xa31a, 0x33e1, 0x1, 0x0);
        gbc.writeMem(0x2571, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd93c);
        EXPECT(gbc.pc(), 0x2573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01A0
        gbc.setState(0x36cf, 0x7dcf, 0x6380, 0x6291, 0xd145, 0xae0b, 0x1, 0x1);
        gbc.writeMem(0x36cf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7dcf);
        EXPECT(gbc.pc(), 0x36d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01A2
        gbc.setState(0xab65, 0x78b4, 0x8240, 0xd1c0, 0x35f4, 0x5be6, 0x1, 0x1);
        gbc.writeMem(0xab65, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x78b4);
        EXPECT(gbc.pc(), 0xab67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab65), 0xcb);
        EXPECT(gbc.readMem(0xab66), 0x92);
        // CB 92 01A3
        gbc.setState(0x2564, 0x7e89, 0x9670, 0x6b10, 0x95bf, 0x27b5, 0x0, 0x1);
        gbc.writeMem(0x2564, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7e89);
        EXPECT(gbc.pc(), 0x2566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01A4
        gbc.setState(0x22ac, 0xa83d, 0x6600, 0xb23, 0x75af, 0x695f, 0x1, 0x0);
        gbc.writeMem(0x22ac, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa83d);
        EXPECT(gbc.pc(), 0x22ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01A5
        gbc.setState(0xaf00, 0xebe1, 0xc790, 0x40a, 0x5579, 0xfaba, 0x1, 0x0);
        gbc.writeMem(0xaf00, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xebe1);
        EXPECT(gbc.pc(), 0xaf02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf00), 0xcb);
        EXPECT(gbc.readMem(0xaf01), 0x92);
        // CB 92 01A6
        gbc.setState(0xdd6d, 0x9fa8, 0x27b0, 0xdc20, 0x4f4e, 0x2d91, 0x1, 0x1);
        gbc.writeMem(0xdd6d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9fa8);
        EXPECT(gbc.pc(), 0xdd6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd6d), 0xcb);
        EXPECT(gbc.readMem(0xdd6e), 0x92);
        // CB 92 01A7
        gbc.setState(0xed47, 0xf082, 0x5440, 0xc045, 0xb4af, 0x9d3, 0x0, 0x0);
        gbc.writeMem(0xed47, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf082);
        EXPECT(gbc.pc(), 0xed49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed47), 0xcb);
        EXPECT(gbc.readMem(0xed48), 0x92);
        // CB 92 01A8
        gbc.setState(0x459, 0x6c3d, 0xb880, 0x61a2, 0xf003, 0x85ff, 0x1, 0x0);
        gbc.writeMem(0x459, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6c3d);
        EXPECT(gbc.pc(), 0x45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01A9
        gbc.setState(0x3311, 0xf176, 0xa820, 0x6129, 0x2808, 0xb04b, 0x1, 0x0);
        gbc.writeMem(0x3311, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf176);
        EXPECT(gbc.pc(), 0x3313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01AA
        gbc.setState(0xca5b, 0x90f7, 0xb820, 0xec48, 0xb550, 0xb366, 0x1, 0x1);
        gbc.writeMem(0xca5b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x90f7);
        EXPECT(gbc.pc(), 0xca5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca5b), 0xcb);
        EXPECT(gbc.readMem(0xca5c), 0x92);
        // CB 92 01AB
        gbc.setState(0x9e12, 0x3c5e, 0xe360, 0x1202, 0x7676, 0xa5a0, 0x1, 0x1);
        gbc.writeMem(0x9e12, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3c5e);
        EXPECT(gbc.pc(), 0x9e14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e12), 0xcb);
        EXPECT(gbc.readMem(0x9e13), 0x92);
        // CB 92 01AC
        gbc.setState(0xe675, 0x63af, 0x6070, 0x40bb, 0x796f, 0xde2d, 0x1, 0x1);
        gbc.writeMem(0xe675, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x63af);
        EXPECT(gbc.pc(), 0xe677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe675), 0xcb);
        EXPECT(gbc.readMem(0xe676), 0x92);
        // CB 92 01AD
        gbc.setState(0xb7a1, 0x3ff, 0x2fc0, 0x6ee1, 0x394a, 0x10b1, 0x1, 0x1);
        gbc.writeMem(0xb7a1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3ff);
        EXPECT(gbc.pc(), 0xb7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a1), 0xcb);
        EXPECT(gbc.readMem(0xb7a2), 0x92);
        // CB 92 01AE
        gbc.setState(0xc6cb, 0x5c6f, 0xe560, 0xb106, 0x7e2b, 0x3896, 0x0, 0x1);
        gbc.writeMem(0xc6cb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5c6f);
        EXPECT(gbc.pc(), 0xc6cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cb), 0xcb);
        EXPECT(gbc.readMem(0xc6cc), 0x92);
        // CB 92 01AF
        gbc.setState(0x425c, 0xe7b2, 0x9660, 0xfc02, 0x8cea, 0x140e, 0x1, 0x1);
        gbc.writeMem(0x425c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe7b2);
        EXPECT(gbc.pc(), 0x425e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01B0
        gbc.setState(0x172f, 0x31d9, 0x4dc0, 0xdf01, 0x96cd, 0x1b36, 0x0, 0x0);
        gbc.writeMem(0x172f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x31d9);
        EXPECT(gbc.pc(), 0x1731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01B1
        gbc.setState(0x793a, 0x6f91, 0xa940, 0x1bbe, 0xf65c, 0xed2d, 0x1, 0x1);
        gbc.writeMem(0x793a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6f91);
        EXPECT(gbc.pc(), 0x793c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01B2
        gbc.setState(0x5868, 0x49b5, 0x5c80, 0x9e65, 0xa6a7, 0xce54, 0x1, 0x0);
        gbc.writeMem(0x5868, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x49b5);
        EXPECT(gbc.pc(), 0x586a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01B3
        gbc.setState(0x9dda, 0xc25, 0xf6e0, 0x61c1, 0x81c9, 0x6f0b, 0x1, 0x1);
        gbc.writeMem(0x9dda, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc25);
        EXPECT(gbc.pc(), 0x9ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dda), 0xcb);
        EXPECT(gbc.readMem(0x9ddb), 0x92);
        // CB 92 01B4
        gbc.setState(0xc452, 0x1b00, 0x7210, 0x94bd, 0x559, 0x540, 0x1, 0x0);
        gbc.writeMem(0xc452, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1b00);
        EXPECT(gbc.pc(), 0xc454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc452), 0xcb);
        EXPECT(gbc.readMem(0xc453), 0x92);
        // CB 92 01B5
        gbc.setState(0x37e8, 0xeeef, 0x66f0, 0x8375, 0x826c, 0x6323, 0x0, 0x0);
        gbc.writeMem(0x37e8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xeeef);
        EXPECT(gbc.pc(), 0x37ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01B6
        gbc.setState(0xa8f9, 0x3f19, 0xe5c0, 0xb247, 0x718, 0xb518, 0x0, 0x1);
        gbc.writeMem(0xa8f9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3f19);
        EXPECT(gbc.pc(), 0xa8fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f9), 0xcb);
        EXPECT(gbc.readMem(0xa8fa), 0x92);
        // CB 92 01B7
        gbc.setState(0xb4b9, 0xe220, 0x6340, 0x515e, 0xead2, 0x308, 0x0, 0x0);
        gbc.writeMem(0xb4b9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe220);
        EXPECT(gbc.pc(), 0xb4bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b9), 0xcb);
        EXPECT(gbc.readMem(0xb4ba), 0x92);
        // CB 92 01B8
        gbc.setState(0x457d, 0x1bb3, 0x28a0, 0xcb15, 0xa852, 0x2bbc, 0x1, 0x0);
        gbc.writeMem(0x457d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1bb3);
        EXPECT(gbc.pc(), 0x457f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01B9
        gbc.setState(0xbea4, 0x1719, 0xa610, 0x8376, 0xa8cb, 0x2779, 0x0, 0x0);
        gbc.writeMem(0xbea4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1719);
        EXPECT(gbc.pc(), 0xbea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea4), 0xcb);
        EXPECT(gbc.readMem(0xbea5), 0x92);
        // CB 92 01BA
        gbc.setState(0x5743, 0xe4eb, 0xd0, 0x58a5, 0xb6de, 0xe702, 0x1, 0x0);
        gbc.writeMem(0x5743, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe4eb);
        EXPECT(gbc.pc(), 0x5745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01BB
        gbc.setState(0xa094, 0x4d42, 0x5540, 0x7653, 0x9ef2, 0x8a49, 0x1, 0x1);
        gbc.writeMem(0xa094, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4d42);
        EXPECT(gbc.pc(), 0xa096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa094), 0xcb);
        EXPECT(gbc.readMem(0xa095), 0x92);
        // CB 92 01BC
        gbc.setState(0x7345, 0x3800, 0xa2f0, 0x8bbd, 0xbf69, 0x769b, 0x0, 0x1);
        gbc.writeMem(0x7345, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3800);
        EXPECT(gbc.pc(), 0x7347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01BD
        gbc.setState(0x8fc1, 0x37dd, 0x7ea0, 0xc0c4, 0x1021, 0xb167, 0x0, 0x0);
        gbc.writeMem(0x8fc1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x37dd);
        EXPECT(gbc.pc(), 0x8fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc1), 0xcb);
        EXPECT(gbc.readMem(0x8fc2), 0x92);
        // CB 92 01BE
        gbc.setState(0x82b1, 0x4a67, 0x1080, 0xee4e, 0x3130, 0x66e0, 0x1, 0x1);
        gbc.writeMem(0x82b1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4a67);
        EXPECT(gbc.pc(), 0x82b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b1), 0xcb);
        EXPECT(gbc.readMem(0x82b2), 0x92);
        // CB 92 01BF
        gbc.setState(0xd8f1, 0x4e9c, 0x60a0, 0x9ddb, 0x333e, 0x8124, 0x1, 0x0);
        gbc.writeMem(0xd8f1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4e9c);
        EXPECT(gbc.pc(), 0xd8f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f1), 0xcb);
        EXPECT(gbc.readMem(0xd8f2), 0x92);
        // CB 92 01C0
        gbc.setState(0xcc8b, 0x59da, 0x37d0, 0x6d66, 0xfdc8, 0xdcce, 0x1, 0x1);
        gbc.writeMem(0xcc8b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x59da);
        EXPECT(gbc.pc(), 0xcc8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc8b), 0xcb);
        EXPECT(gbc.readMem(0xcc8c), 0x92);
        // CB 92 01C2
        gbc.setState(0x87ae, 0x6a36, 0xa250, 0x31ff, 0x2f08, 0x9556, 0x0, 0x1);
        gbc.writeMem(0x87ae, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6a36);
        EXPECT(gbc.pc(), 0x87b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ae), 0xcb);
        EXPECT(gbc.readMem(0x87af), 0x92);
        // CB 92 01C3
        gbc.setState(0x67c0, 0x85cf, 0x15c0, 0x7fba, 0xb521, 0xa8b6, 0x1, 0x0);
        gbc.writeMem(0x67c0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x85cf);
        EXPECT(gbc.pc(), 0x67c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01C4
        gbc.setState(0x9844, 0xefb8, 0x5cb0, 0xc553, 0xb9cc, 0x6bbe, 0x1, 0x0);
        gbc.writeMem(0x9844, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xefb8);
        EXPECT(gbc.pc(), 0x9846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9844), 0xcb);
        EXPECT(gbc.readMem(0x9845), 0x92);
        // CB 92 01C5
        gbc.setState(0xb69c, 0x9bab, 0xc3d0, 0xa6b8, 0x41f5, 0xf6ba, 0x1, 0x0);
        gbc.writeMem(0xb69c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9bab);
        EXPECT(gbc.pc(), 0xb69e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb69c), 0xcb);
        EXPECT(gbc.readMem(0xb69d), 0x92);
        // CB 92 01C6
        gbc.setState(0x59e4, 0x311a, 0x4ae0, 0x2727, 0x3435, 0xc1ca, 0x1, 0x1);
        gbc.writeMem(0x59e4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x311a);
        EXPECT(gbc.pc(), 0x59e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01C7
        gbc.setState(0x5a0f, 0xb08a, 0xbe00, 0xd118, 0x27fa, 0x7d2e, 0x1, 0x1);
        gbc.writeMem(0x5a0f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb08a);
        EXPECT(gbc.pc(), 0x5a11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01C8
        gbc.setState(0x225f, 0xbd67, 0xdd0, 0x585e, 0xacac, 0xf0a6, 0x0, 0x1);
        gbc.writeMem(0x225f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbd67);
        EXPECT(gbc.pc(), 0x2261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01C9
        gbc.setState(0x1e67, 0xb187, 0xaf00, 0x1752, 0xc53d, 0xfd07, 0x1, 0x0);
        gbc.writeMem(0x1e67, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb187);
        EXPECT(gbc.pc(), 0x1e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01CB
        gbc.setState(0xa0ad, 0xec7a, 0x9800, 0xaff9, 0x37ad, 0xe58e, 0x0, 0x1);
        gbc.writeMem(0xa0ad, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xec7a);
        EXPECT(gbc.pc(), 0xa0af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ad), 0xcb);
        EXPECT(gbc.readMem(0xa0ae), 0x92);
        // CB 92 01CC
        gbc.setState(0xcd9b, 0x5166, 0xb4a0, 0xf70b, 0x213b, 0x926f, 0x0, 0x1);
        gbc.writeMem(0xcd9b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5166);
        EXPECT(gbc.pc(), 0xcd9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9b), 0xcb);
        EXPECT(gbc.readMem(0xcd9c), 0x92);
        // CB 92 01CD
        gbc.setState(0x18b1, 0xa207, 0x2840, 0x40fd, 0xe0e3, 0x2f8e, 0x1, 0x1);
        gbc.writeMem(0x18b1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa207);
        EXPECT(gbc.pc(), 0x18b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01CE
        gbc.setState(0x87cf, 0xf465, 0x52a0, 0xf6f0, 0xa6d4, 0x8fc4, 0x0, 0x1);
        gbc.writeMem(0x87cf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf465);
        EXPECT(gbc.pc(), 0x87d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cf), 0xcb);
        EXPECT(gbc.readMem(0x87d0), 0x92);
        // CB 92 01CF
        gbc.setState(0xbd74, 0xe9bd, 0x8770, 0xa014, 0xe627, 0x5e07, 0x0, 0x1);
        gbc.writeMem(0xbd74, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe9bd);
        EXPECT(gbc.pc(), 0xbd76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd74), 0xcb);
        EXPECT(gbc.readMem(0xbd75), 0x92);
        // CB 92 01D0
        gbc.setState(0x6138, 0xce03, 0x1520, 0x8efa, 0x9aa2, 0x5d77, 0x0, 0x1);
        gbc.writeMem(0x6138, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xce03);
        EXPECT(gbc.pc(), 0x613a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01D1
        gbc.setState(0x930b, 0x5fb, 0x2e50, 0xfacf, 0xb727, 0x3cef, 0x0, 0x1);
        gbc.writeMem(0x930b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5fb);
        EXPECT(gbc.pc(), 0x930d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930b), 0xcb);
        EXPECT(gbc.readMem(0x930c), 0x92);
        // CB 92 01D2
        gbc.setState(0x37ff, 0xedd9, 0x6f70, 0xc83a, 0xcca3, 0xc9d6, 0x1, 0x1);
        gbc.writeMem(0x37ff, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xedd9);
        EXPECT(gbc.pc(), 0x3801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01D3
        gbc.setState(0x2267, 0x6f36, 0x9d40, 0xe010, 0xf21b, 0x283c, 0x1, 0x1);
        gbc.writeMem(0x2267, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6f36);
        EXPECT(gbc.pc(), 0x2269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01D4
        gbc.setState(0xcb0d, 0x28d4, 0x5160, 0x942e, 0xeaf3, 0x31a4, 0x0, 0x0);
        gbc.writeMem(0xcb0d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x28d4);
        EXPECT(gbc.pc(), 0xcb0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0d), 0xcb);
        EXPECT(gbc.readMem(0xcb0e), 0x92);
        // CB 92 01D5
        gbc.setState(0x9a19, 0xb1ef, 0x3b70, 0xb6c, 0xc712, 0xda03, 0x0, 0x1);
        gbc.writeMem(0x9a19, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb1ef);
        EXPECT(gbc.pc(), 0x9a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a19), 0xcb);
        EXPECT(gbc.readMem(0x9a1a), 0x92);
        // CB 92 01D6
        gbc.setState(0xe504, 0xe880, 0xe240, 0xe1b, 0xe654, 0xe737, 0x0, 0x1);
        gbc.writeMem(0xe504, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe880);
        EXPECT(gbc.pc(), 0xe506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe504), 0xcb);
        EXPECT(gbc.readMem(0xe505), 0x92);
        // CB 92 01D7
        gbc.setState(0x25e7, 0xfdd, 0x1f90, 0x5d91, 0x63ce, 0xfeb2, 0x0, 0x0);
        gbc.writeMem(0x25e7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfdd);
        EXPECT(gbc.pc(), 0x25e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01D8
        gbc.setState(0xd02b, 0x60df, 0x72a0, 0x2ccf, 0x258, 0x1b5b, 0x1, 0x1);
        gbc.writeMem(0xd02b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x60df);
        EXPECT(gbc.pc(), 0xd02d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02b), 0xcb);
        EXPECT(gbc.readMem(0xd02c), 0x92);
        // CB 92 01D9
        gbc.setState(0x8a2f, 0x18da, 0x1c10, 0xaada, 0x5690, 0xf49d, 0x0, 0x0);
        gbc.writeMem(0x8a2f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x18da);
        EXPECT(gbc.pc(), 0x8a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2f), 0xcb);
        EXPECT(gbc.readMem(0x8a30), 0x92);
        // CB 92 01DA
        gbc.setState(0xdb3e, 0xb4a1, 0xc720, 0x86a, 0x7d39, 0x990f, 0x0, 0x0);
        gbc.writeMem(0xdb3e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb4a1);
        EXPECT(gbc.pc(), 0xdb40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb3e), 0xcb);
        EXPECT(gbc.readMem(0xdb3f), 0x92);
        // CB 92 01DB
        gbc.setState(0xb2da, 0x67f2, 0x4c0, 0x7669, 0xca45, 0xcca, 0x1, 0x1);
        gbc.writeMem(0xb2da, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x67f2);
        EXPECT(gbc.pc(), 0xb2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2da), 0xcb);
        EXPECT(gbc.readMem(0xb2db), 0x92);
        // CB 92 01DC
        gbc.setState(0x1677, 0xf891, 0xad40, 0xe280, 0xc45a, 0x602b, 0x1, 0x1);
        gbc.writeMem(0x1677, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf891);
        EXPECT(gbc.pc(), 0x1679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01DD
        gbc.setState(0x1a27, 0xb1f8, 0xfe90, 0x14a1, 0xd0d3, 0x185, 0x0, 0x0);
        gbc.writeMem(0x1a27, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb1f8);
        EXPECT(gbc.pc(), 0x1a29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01DE
        gbc.setState(0xee69, 0x9da, 0x18a0, 0x272a, 0x4ea6, 0xfa14, 0x0, 0x0);
        gbc.writeMem(0xee69, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9da);
        EXPECT(gbc.pc(), 0xee6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee69), 0xcb);
        EXPECT(gbc.readMem(0xee6a), 0x92);
        // CB 92 01DF
        gbc.setState(0xa4a2, 0xb94f, 0x6e30, 0xccf7, 0x201e, 0xe5d9, 0x1, 0x1);
        gbc.writeMem(0xa4a2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb94f);
        EXPECT(gbc.pc(), 0xa4a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a2), 0xcb);
        EXPECT(gbc.readMem(0xa4a3), 0x92);
        // CB 92 01E0
        gbc.setState(0x229, 0xca10, 0x9a40, 0x614c, 0xe127, 0x2434, 0x1, 0x0);
        gbc.writeMem(0x229, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xca10);
        EXPECT(gbc.pc(), 0x22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01E1
        gbc.setState(0x6f6c, 0xa099, 0xfdb0, 0x4598, 0x6aee, 0x3a2d, 0x0, 0x0);
        gbc.writeMem(0x6f6c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa099);
        EXPECT(gbc.pc(), 0x6f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01E2
        gbc.setState(0x3d7, 0xa142, 0x1fa0, 0x5a8, 0x2d2a, 0x3d9c, 0x0, 0x0);
        gbc.writeMem(0x3d7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa142);
        EXPECT(gbc.pc(), 0x3d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01E3
        gbc.setState(0x324b, 0xac85, 0x5120, 0x9147, 0xcfcc, 0x42be, 0x1, 0x1);
        gbc.writeMem(0x324b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xac85);
        EXPECT(gbc.pc(), 0x324d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01E4
        gbc.setState(0x882f, 0xc5b8, 0xd790, 0xbdb4, 0xa74a, 0xa792, 0x0, 0x1);
        gbc.writeMem(0x882f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc5b8);
        EXPECT(gbc.pc(), 0x8831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x882f), 0xcb);
        EXPECT(gbc.readMem(0x8830), 0x92);
        // CB 92 01E5
        gbc.setState(0x76ed, 0xd211, 0xa60, 0xfd75, 0x8d77, 0x4352, 0x0, 0x0);
        gbc.writeMem(0x76ed, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd211);
        EXPECT(gbc.pc(), 0x76ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01E6
        gbc.setState(0x7d86, 0x56ba, 0x48c0, 0x201b, 0x9b9e, 0x1ac6, 0x1, 0x1);
        gbc.writeMem(0x7d86, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x56ba);
        EXPECT(gbc.pc(), 0x7d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01E7
        gbc.setState(0x57e2, 0xd969, 0xcdd0, 0xc95d, 0x40c1, 0xe283, 0x0, 0x0);
        gbc.writeMem(0x57e2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd969);
        EXPECT(gbc.pc(), 0x57e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01E8
        gbc.setState(0x5b4c, 0x659f, 0x40a0, 0xcd77, 0xee27, 0xb68e, 0x1, 0x1);
        gbc.writeMem(0x5b4c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x659f);
        EXPECT(gbc.pc(), 0x5b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01E9
        gbc.setState(0xbfe0, 0xa1ce, 0xdc40, 0x71e7, 0x8d0b, 0x55fb, 0x1, 0x1);
        gbc.writeMem(0xbfe0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa1ce);
        EXPECT(gbc.pc(), 0xbfe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfe0), 0xcb);
        EXPECT(gbc.readMem(0xbfe1), 0x92);
        // CB 92 01EA
        gbc.setState(0xe197, 0x7bb2, 0xdc60, 0xb827, 0xf5c6, 0x124d, 0x0, 0x0);
        gbc.writeMem(0xe197, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7bb2);
        EXPECT(gbc.pc(), 0xe199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe197), 0xcb);
        EXPECT(gbc.readMem(0xe198), 0x92);
        // CB 92 01EB
        gbc.setState(0x82d, 0x1c53, 0xc00, 0x7bf0, 0xf59f, 0x6c4b, 0x1, 0x1);
        gbc.writeMem(0x82d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1c53);
        EXPECT(gbc.pc(), 0x82f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01EC
        gbc.setState(0x1428, 0xf1ed, 0xe510, 0xbc94, 0x4c1, 0x6e55, 0x1, 0x0);
        gbc.writeMem(0x1428, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf1ed);
        EXPECT(gbc.pc(), 0x142a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01ED
        gbc.setState(0xa05d, 0x8e2b, 0x7e0, 0xeee5, 0x40a1, 0x2af4, 0x0, 0x1);
        gbc.writeMem(0xa05d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8e2b);
        EXPECT(gbc.pc(), 0xa05f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa05d), 0xcb);
        EXPECT(gbc.readMem(0xa05e), 0x92);
        // CB 92 01EE
        gbc.setState(0xc1f1, 0x7755, 0x4560, 0x68d6, 0x8f0a, 0xa894, 0x0, 0x1);
        gbc.writeMem(0xc1f1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7755);
        EXPECT(gbc.pc(), 0xc1f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f1), 0xcb);
        EXPECT(gbc.readMem(0xc1f2), 0x92);
        // CB 92 01EF
        gbc.setState(0xa8c3, 0x6790, 0x9780, 0x7b26, 0x45f5, 0xab0f, 0x0, 0x0);
        gbc.writeMem(0xa8c3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6790);
        EXPECT(gbc.pc(), 0xa8c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c3), 0xcb);
        EXPECT(gbc.readMem(0xa8c4), 0x92);
        // CB 92 01F0
        gbc.setState(0x86ea, 0x1c9, 0x62d0, 0x8277, 0x46c5, 0x8a66, 0x0, 0x1);
        gbc.writeMem(0x86ea, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1c9);
        EXPECT(gbc.pc(), 0x86ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ea), 0xcb);
        EXPECT(gbc.readMem(0x86eb), 0x92);
        // CB 92 01F1
        gbc.setState(0x8a5c, 0x761e, 0x7ec0, 0xb4e0, 0x973, 0x4cf8, 0x1, 0x1);
        gbc.writeMem(0x8a5c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x761e);
        EXPECT(gbc.pc(), 0x8a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5c), 0xcb);
        EXPECT(gbc.readMem(0x8a5d), 0x92);
        // CB 92 01F2
        gbc.setState(0x620b, 0x454a, 0xfa10, 0x835f, 0x2cd5, 0x1afa, 0x1, 0x0);
        gbc.writeMem(0x620b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x454a);
        EXPECT(gbc.pc(), 0x620d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01F3
        gbc.setState(0x2a70, 0x79f9, 0xaa60, 0xc0a5, 0xe65c, 0xb5a7, 0x0, 0x0);
        gbc.writeMem(0x2a70, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x79f9);
        EXPECT(gbc.pc(), 0x2a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01F4
        gbc.setState(0x6c7, 0xe979, 0xef40, 0x605f, 0xb894, 0x3131, 0x1, 0x1);
        gbc.writeMem(0x6c7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe979);
        EXPECT(gbc.pc(), 0x6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01F6
        gbc.setState(0x9dbe, 0x5bff, 0xfd80, 0xdacd, 0xdae9, 0xc6a6, 0x1, 0x0);
        gbc.writeMem(0x9dbe, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5bff);
        EXPECT(gbc.pc(), 0x9dc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbe), 0xcb);
        EXPECT(gbc.readMem(0x9dbf), 0x92);
        // CB 92 01F7
        gbc.setState(0x1197, 0x5bfc, 0xa740, 0x6f6e, 0x330, 0x21df, 0x0, 0x1);
        gbc.writeMem(0x1197, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5bfc);
        EXPECT(gbc.pc(), 0x1199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01F8
        gbc.setState(0x4bc9, 0x1d4c, 0xe220, 0x21c6, 0x47ac, 0x43f1, 0x0, 0x0);
        gbc.writeMem(0x4bc9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1d4c);
        EXPECT(gbc.pc(), 0x4bcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01F9
        gbc.setState(0x83fc, 0xafa9, 0xa5f0, 0xb4e4, 0x1636, 0x60b, 0x1, 0x0);
        gbc.writeMem(0x83fc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xafa9);
        EXPECT(gbc.pc(), 0x83fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fc), 0xcb);
        EXPECT(gbc.readMem(0x83fd), 0x92);
        // CB 92 01FA
        gbc.setState(0xedb, 0xdf17, 0x2660, 0x96f7, 0xc30a, 0x32d3, 0x0, 0x0);
        gbc.writeMem(0xedb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdf17);
        EXPECT(gbc.pc(), 0xedd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01FB
        gbc.setState(0x388b, 0xc670, 0x8d70, 0xe9e9, 0x3393, 0x1b52, 0x0, 0x0);
        gbc.writeMem(0x388b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc670);
        EXPECT(gbc.pc(), 0x388d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01FD
        gbc.setState(0x1f3a, 0xd31d, 0x9010, 0x35e4, 0x1937, 0x9311, 0x0, 0x1);
        gbc.writeMem(0x1f3a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd31d);
        EXPECT(gbc.pc(), 0x1f3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 01FE
        gbc.setState(0x2d97, 0xfd6e, 0x9b40, 0x28c, 0xb714, 0xc157, 0x1, 0x1);
        gbc.writeMem(0x2d97, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfd6e);
        EXPECT(gbc.pc(), 0x2d99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 01FF
        gbc.setState(0x507e, 0x2f1e, 0xdd60, 0xf028, 0x837f, 0x720, 0x1, 0x0);
        gbc.writeMem(0x507e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2f1e);
        EXPECT(gbc.pc(), 0x5080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0200
        gbc.setState(0xfef, 0xd22b, 0x3000, 0xc2b0, 0x386a, 0xde03, 0x0, 0x0);
        gbc.writeMem(0xfef, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd22b);
        EXPECT(gbc.pc(), 0xff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0201
        gbc.setState(0x860f, 0x6884, 0x4570, 0x231, 0x9817, 0x6b0, 0x0, 0x1);
        gbc.writeMem(0x860f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6884);
        EXPECT(gbc.pc(), 0x8611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x860f), 0xcb);
        EXPECT(gbc.readMem(0x8610), 0x92);
        // CB 92 0202
        gbc.setState(0xe630, 0x9498, 0x8d00, 0x7729, 0xba17, 0xe49b, 0x0, 0x1);
        gbc.writeMem(0xe630, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9498);
        EXPECT(gbc.pc(), 0xe632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe630), 0xcb);
        EXPECT(gbc.readMem(0xe631), 0x92);
        // CB 92 0203
        gbc.setState(0xcae1, 0x810d, 0xcc50, 0x22d5, 0x3549, 0x5f27, 0x0, 0x1);
        gbc.writeMem(0xcae1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x810d);
        EXPECT(gbc.pc(), 0xcae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae1), 0xcb);
        EXPECT(gbc.readMem(0xcae2), 0x92);
        // CB 92 0204
        gbc.setState(0x7aa9, 0x8600, 0x7a00, 0x1da7, 0xce3c, 0x117, 0x0, 0x1);
        gbc.writeMem(0x7aa9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8600);
        EXPECT(gbc.pc(), 0x7aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0205
        gbc.setState(0xa56f, 0x3211, 0x660, 0x4355, 0x81fe, 0x28a0, 0x1, 0x0);
        gbc.writeMem(0xa56f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3211);
        EXPECT(gbc.pc(), 0xa571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56f), 0xcb);
        EXPECT(gbc.readMem(0xa570), 0x92);
        // CB 92 0206
        gbc.setState(0xece2, 0x5273, 0xb950, 0x76d7, 0x6d4c, 0xae05, 0x1, 0x0);
        gbc.writeMem(0xece2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5273);
        EXPECT(gbc.pc(), 0xece4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece2), 0xcb);
        EXPECT(gbc.readMem(0xece3), 0x92);
        // CB 92 0207
        gbc.setState(0xb8b3, 0xb6fd, 0x3d50, 0x949e, 0x4020, 0x3c25, 0x0, 0x0);
        gbc.writeMem(0xb8b3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb6fd);
        EXPECT(gbc.pc(), 0xb8b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b3), 0xcb);
        EXPECT(gbc.readMem(0xb8b4), 0x92);
        // CB 92 0208
        gbc.setState(0x659b, 0x4809, 0xc5c0, 0x6b49, 0x2377, 0xbb4f, 0x1, 0x1);
        gbc.writeMem(0x659b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4809);
        EXPECT(gbc.pc(), 0x659d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0209
        gbc.setState(0x3b49, 0x7c82, 0x4ad0, 0x6f51, 0xc15e, 0x4f7b, 0x0, 0x1);
        gbc.writeMem(0x3b49, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7c82);
        EXPECT(gbc.pc(), 0x3b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 020A
        gbc.setState(0x2b25, 0x80b8, 0xc280, 0xb3f7, 0x763d, 0xf4da, 0x1, 0x0);
        gbc.writeMem(0x2b25, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x80b8);
        EXPECT(gbc.pc(), 0x2b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 020B
        gbc.setState(0xdc9, 0xa8aa, 0x2d50, 0x5523, 0x5479, 0x75d, 0x1, 0x1);
        gbc.writeMem(0xdc9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa8aa);
        EXPECT(gbc.pc(), 0xdcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 020C
        gbc.setState(0x8c76, 0x740a, 0x57f0, 0x6c79, 0xbd48, 0x6e65, 0x0, 0x1);
        gbc.writeMem(0x8c76, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x740a);
        EXPECT(gbc.pc(), 0x8c78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c76), 0xcb);
        EXPECT(gbc.readMem(0x8c77), 0x92);
        // CB 92 020D
        gbc.setState(0x91f6, 0xbbc6, 0xcaa0, 0xd1f2, 0xe635, 0x77db, 0x0, 0x0);
        gbc.writeMem(0x91f6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbbc6);
        EXPECT(gbc.pc(), 0x91f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f6), 0xcb);
        EXPECT(gbc.readMem(0x91f7), 0x92);
        // CB 92 020E
        gbc.setState(0xcba, 0x8cd7, 0xc6e0, 0x89ab, 0xc14d, 0xe965, 0x0, 0x1);
        gbc.writeMem(0xcba, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8cd7);
        EXPECT(gbc.pc(), 0xcbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 020F
        gbc.setState(0x7cb4, 0x9100, 0xc180, 0xb6f7, 0x6120, 0xf1b7, 0x0, 0x0);
        gbc.writeMem(0x7cb4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9100);
        EXPECT(gbc.pc(), 0x7cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0210
        gbc.setState(0x1a82, 0x1c0f, 0x9580, 0xfdb9, 0xf859, 0x66c, 0x1, 0x0);
        gbc.writeMem(0x1a82, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1c0f);
        EXPECT(gbc.pc(), 0x1a84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0211
        gbc.setState(0x132a, 0x71a1, 0xe820, 0x8c47, 0xca3d, 0x53eb, 0x1, 0x0);
        gbc.writeMem(0x132a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x71a1);
        EXPECT(gbc.pc(), 0x132c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0212
        gbc.setState(0x3206, 0x68d0, 0x320, 0xbd8f, 0x8b60, 0xf7f7, 0x0, 0x1);
        gbc.writeMem(0x3206, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x68d0);
        EXPECT(gbc.pc(), 0x3208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0213
        gbc.setState(0x9e38, 0x93db, 0x8990, 0xea39, 0x286f, 0xb089, 0x1, 0x0);
        gbc.writeMem(0x9e38, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x93db);
        EXPECT(gbc.pc(), 0x9e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e38), 0xcb);
        EXPECT(gbc.readMem(0x9e39), 0x92);
        // CB 92 0214
        gbc.setState(0x9b1a, 0xd58c, 0x4230, 0xc16, 0x9958, 0xd840, 0x0, 0x1);
        gbc.writeMem(0x9b1a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd58c);
        EXPECT(gbc.pc(), 0x9b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1a), 0xcb);
        EXPECT(gbc.readMem(0x9b1b), 0x92);
        // CB 92 0215
        gbc.setState(0x571b, 0xff5d, 0x6d0, 0x3d3b, 0x7841, 0x522e, 0x0, 0x0);
        gbc.writeMem(0x571b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xff5d);
        EXPECT(gbc.pc(), 0x571d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0216
        gbc.setState(0xc8bd, 0xeb2a, 0xefb0, 0x4cfc, 0x5611, 0x4c34, 0x0, 0x1);
        gbc.writeMem(0xc8bd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xeb2a);
        EXPECT(gbc.pc(), 0xc8bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bd), 0xcb);
        EXPECT(gbc.readMem(0xc8be), 0x92);
        // CB 92 0217
        gbc.setState(0x1ef, 0x6621, 0x6fb0, 0x4f0e, 0xef02, 0x5cd4, 0x0, 0x0);
        gbc.writeMem(0x1ef, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6621);
        EXPECT(gbc.pc(), 0x1f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0218
        gbc.setState(0xce7c, 0x43ab, 0xc480, 0x37e0, 0x23ca, 0x4edb, 0x1, 0x1);
        gbc.writeMem(0xce7c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x43ab);
        EXPECT(gbc.pc(), 0xce7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7c), 0xcb);
        EXPECT(gbc.readMem(0xce7d), 0x92);
        // CB 92 0219
        gbc.setState(0xc53a, 0x43d0, 0xc080, 0x3a52, 0x18e8, 0x8fa1, 0x1, 0x0);
        gbc.writeMem(0xc53a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x43d0);
        EXPECT(gbc.pc(), 0xc53c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc53a), 0xcb);
        EXPECT(gbc.readMem(0xc53b), 0x92);
        // CB 92 021A
        gbc.setState(0x1e8, 0x4ba5, 0xe1c0, 0x104, 0x8137, 0x58aa, 0x0, 0x1);
        gbc.writeMem(0x1e8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4ba5);
        EXPECT(gbc.pc(), 0x1ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 021B
        gbc.setState(0x46c9, 0x977f, 0x3e10, 0x2680, 0x377f, 0x3c96, 0x1, 0x0);
        gbc.writeMem(0x46c9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x977f);
        EXPECT(gbc.pc(), 0x46cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 021D
        gbc.setState(0xb551, 0x1a46, 0x90d0, 0xc021, 0xf96a, 0x8450, 0x0, 0x1);
        gbc.writeMem(0xb551, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1a46);
        EXPECT(gbc.pc(), 0xb553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb551), 0xcb);
        EXPECT(gbc.readMem(0xb552), 0x92);
        // CB 92 021E
        gbc.setState(0x8860, 0xa9ad, 0xe580, 0x97f0, 0xe6e2, 0x816e, 0x1, 0x1);
        gbc.writeMem(0x8860, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa9ad);
        EXPECT(gbc.pc(), 0x8862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8860), 0xcb);
        EXPECT(gbc.readMem(0x8861), 0x92);
        // CB 92 021F
        gbc.setState(0xc1df, 0x92dc, 0x7810, 0xac1f, 0x29bc, 0xb22f, 0x0, 0x0);
        gbc.writeMem(0xc1df, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x92dc);
        EXPECT(gbc.pc(), 0xc1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1df), 0xcb);
        EXPECT(gbc.readMem(0xc1e0), 0x92);
        // CB 92 0220
        gbc.setState(0xe394, 0xbc99, 0xe1a0, 0xcf2a, 0xc186, 0xfca9, 0x0, 0x0);
        gbc.writeMem(0xe394, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xbc99);
        EXPECT(gbc.pc(), 0xe396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe394), 0xcb);
        EXPECT(gbc.readMem(0xe395), 0x92);
        // CB 92 0221
        gbc.setState(0x4622, 0x27d5, 0x2e40, 0x489c, 0xdb79, 0x9630, 0x1, 0x0);
        gbc.writeMem(0x4622, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x27d5);
        EXPECT(gbc.pc(), 0x4624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0222
        gbc.setState(0x339e, 0xb7b5, 0xd620, 0x11ad, 0xfc75, 0x1c0e, 0x1, 0x1);
        gbc.writeMem(0x339e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb7b5);
        EXPECT(gbc.pc(), 0x33a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0223
        gbc.setState(0x881f, 0xddcb, 0x1c90, 0x82c4, 0xbf9e, 0xc2bf, 0x0, 0x1);
        gbc.writeMem(0x881f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xddcb);
        EXPECT(gbc.pc(), 0x8821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x881f), 0xcb);
        EXPECT(gbc.readMem(0x8820), 0x92);
        // CB 92 0224
        gbc.setState(0xa4b0, 0xa12f, 0x6460, 0xd61e, 0x6dd6, 0xa853, 0x1, 0x1);
        gbc.writeMem(0xa4b0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa12f);
        EXPECT(gbc.pc(), 0xa4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b0), 0xcb);
        EXPECT(gbc.readMem(0xa4b1), 0x92);
        // CB 92 0225
        gbc.setState(0x3d4c, 0x2f32, 0xaba0, 0x4bce, 0x5bff, 0x5afd, 0x1, 0x1);
        gbc.writeMem(0x3d4c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2f32);
        EXPECT(gbc.pc(), 0x3d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0226
        gbc.setState(0x3627, 0x78, 0x8ae0, 0x4e0c, 0x374d, 0xe221, 0x1, 0x1);
        gbc.writeMem(0x3627, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x78);
        EXPECT(gbc.pc(), 0x3629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0227
        gbc.setState(0x80bb, 0x2ded, 0xdd60, 0x71d4, 0xb513, 0x89a8, 0x1, 0x0);
        gbc.writeMem(0x80bb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2ded);
        EXPECT(gbc.pc(), 0x80bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bb), 0xcb);
        EXPECT(gbc.readMem(0x80bc), 0x92);
        // CB 92 0228
        gbc.setState(0xc4d9, 0xea5e, 0x15b0, 0x8b82, 0x493c, 0x62eb, 0x0, 0x0);
        gbc.writeMem(0xc4d9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xea5e);
        EXPECT(gbc.pc(), 0xc4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d9), 0xcb);
        EXPECT(gbc.readMem(0xc4da), 0x92);
        // CB 92 0229
        gbc.setState(0x4d10, 0x1ce0, 0x7dc0, 0x9f8c, 0xf8c0, 0xc334, 0x0, 0x0);
        gbc.writeMem(0x4d10, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1ce0);
        EXPECT(gbc.pc(), 0x4d12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 022A
        gbc.setState(0x17e8, 0xf425, 0xed00, 0xa1cb, 0x5a45, 0x424d, 0x1, 0x0);
        gbc.writeMem(0x17e8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf425);
        EXPECT(gbc.pc(), 0x17ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 022B
        gbc.setState(0x8fdf, 0xd06b, 0xfab0, 0xd4bf, 0xb1b6, 0x56f6, 0x1, 0x1);
        gbc.writeMem(0x8fdf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd06b);
        EXPECT(gbc.pc(), 0x8fe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fdf), 0xcb);
        EXPECT(gbc.readMem(0x8fe0), 0x92);
        // CB 92 022D
        gbc.setState(0xc21b, 0x5b5d, 0x6490, 0x99e0, 0x7fc1, 0x8837, 0x1, 0x1);
        gbc.writeMem(0xc21b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5b5d);
        EXPECT(gbc.pc(), 0xc21d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc21b), 0xcb);
        EXPECT(gbc.readMem(0xc21c), 0x92);
        // CB 92 022E
        gbc.setState(0x9321, 0x9451, 0x72c0, 0x6cdf, 0xcfe6, 0x4390, 0x0, 0x1);
        gbc.writeMem(0x9321, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9451);
        EXPECT(gbc.pc(), 0x9323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9321), 0xcb);
        EXPECT(gbc.readMem(0x9322), 0x92);
        // CB 92 022F
        gbc.setState(0xd51c, 0xb22d, 0xde80, 0x5aa6, 0x70e1, 0x8632, 0x1, 0x1);
        gbc.writeMem(0xd51c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb22d);
        EXPECT(gbc.pc(), 0xd51e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51c), 0xcb);
        EXPECT(gbc.readMem(0xd51d), 0x92);
        // CB 92 0230
        gbc.setState(0xa5f9, 0xa26a, 0x2350, 0x3de6, 0x58a4, 0x6a5f, 0x1, 0x1);
        gbc.writeMem(0xa5f9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa26a);
        EXPECT(gbc.pc(), 0xa5fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f9), 0xcb);
        EXPECT(gbc.readMem(0xa5fa), 0x92);
        // CB 92 0231
        gbc.setState(0x5d59, 0xe32a, 0x38e0, 0x4a6c, 0xf362, 0xe280, 0x1, 0x1);
        gbc.writeMem(0x5d59, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe32a);
        EXPECT(gbc.pc(), 0x5d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0232
        gbc.setState(0x2566, 0x4bc3, 0xaa90, 0xe57a, 0x8835, 0x7bee, 0x0, 0x1);
        gbc.writeMem(0x2566, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4bc3);
        EXPECT(gbc.pc(), 0x2568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0233
        gbc.setState(0x7746, 0x3683, 0x7e40, 0x75a, 0x5d78, 0x7c94, 0x1, 0x0);
        gbc.writeMem(0x7746, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3683);
        EXPECT(gbc.pc(), 0x7748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0234
        gbc.setState(0x9095, 0xa935, 0xca40, 0x3006, 0x73bf, 0x2d58, 0x1, 0x0);
        gbc.writeMem(0x9095, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa935);
        EXPECT(gbc.pc(), 0x9097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9095), 0xcb);
        EXPECT(gbc.readMem(0x9096), 0x92);
        // CB 92 0235
        gbc.setState(0x2bd5, 0xd5e5, 0xba70, 0xdfb4, 0x776f, 0xa3d8, 0x0, 0x1);
        gbc.writeMem(0x2bd5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd5e5);
        EXPECT(gbc.pc(), 0x2bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0236
        gbc.setState(0xac28, 0x2abb, 0xb5a0, 0x556e, 0x8ac4, 0x9318, 0x0, 0x0);
        gbc.writeMem(0xac28, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2abb);
        EXPECT(gbc.pc(), 0xac2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac28), 0xcb);
        EXPECT(gbc.readMem(0xac29), 0x92);
        // CB 92 0237
        gbc.setState(0xc206, 0xbcf8, 0x77f0, 0x390c, 0x4309, 0xf6a7, 0x0, 0x1);
        gbc.writeMem(0xc206, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbcf8);
        EXPECT(gbc.pc(), 0xc208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc206), 0xcb);
        EXPECT(gbc.readMem(0xc207), 0x92);
        // CB 92 0238
        gbc.setState(0x2d01, 0x497a, 0xa690, 0x2e00, 0x7948, 0xc232, 0x1, 0x0);
        gbc.writeMem(0x2d01, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x497a);
        EXPECT(gbc.pc(), 0x2d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0239
        gbc.setState(0x258d, 0xa3e4, 0x7470, 0x66f9, 0x9fff, 0xefd4, 0x1, 0x1);
        gbc.writeMem(0x258d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa3e4);
        EXPECT(gbc.pc(), 0x258f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 023A
        gbc.setState(0x32e4, 0xa132, 0x9300, 0x6641, 0xfa99, 0x76c9, 0x1, 0x0);
        gbc.writeMem(0x32e4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa132);
        EXPECT(gbc.pc(), 0x32e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 023B
        gbc.setState(0x71e7, 0xed74, 0xfc80, 0xa8bc, 0x608c, 0x6b66, 0x0, 0x1);
        gbc.writeMem(0x71e7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xed74);
        EXPECT(gbc.pc(), 0x71e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 023C
        gbc.setState(0xf9a, 0x6354, 0xec70, 0xbfdf, 0xc8b6, 0x3436, 0x0, 0x1);
        gbc.writeMem(0xf9a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6354);
        EXPECT(gbc.pc(), 0xf9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 023D
        gbc.setState(0x424e, 0xb3ec, 0x5dc0, 0x3ca1, 0x5583, 0x9e2d, 0x1, 0x0);
        gbc.writeMem(0x424e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb3ec);
        EXPECT(gbc.pc(), 0x4250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 023E
        gbc.setState(0x1881, 0xe2b7, 0xee80, 0xc06f, 0x15b9, 0xf58f, 0x1, 0x1);
        gbc.writeMem(0x1881, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe2b7);
        EXPECT(gbc.pc(), 0x1883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 023F
        gbc.setState(0x8f9b, 0x4134, 0x4510, 0xc424, 0x97c2, 0x13d5, 0x1, 0x0);
        gbc.writeMem(0x8f9b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4134);
        EXPECT(gbc.pc(), 0x8f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f9b), 0xcb);
        EXPECT(gbc.readMem(0x8f9c), 0x92);
        // CB 92 0240
        gbc.setState(0x4bba, 0x69f5, 0x6f40, 0xe6b4, 0xf2c1, 0xd56e, 0x1, 0x0);
        gbc.writeMem(0x4bba, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x69f5);
        EXPECT(gbc.pc(), 0x4bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0241
        gbc.setState(0x3073, 0x1647, 0xf3d0, 0x8052, 0xc56, 0xde42, 0x0, 0x0);
        gbc.writeMem(0x3073, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1647);
        EXPECT(gbc.pc(), 0x3075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0242
        gbc.setState(0x1256, 0xa107, 0xc030, 0x80b4, 0x1b87, 0xa352, 0x1, 0x1);
        gbc.writeMem(0x1256, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa107);
        EXPECT(gbc.pc(), 0x1258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0243
        gbc.setState(0x41ca, 0x500c, 0x1160, 0xb2cd, 0xe825, 0x1271, 0x1, 0x0);
        gbc.writeMem(0x41ca, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x500c);
        EXPECT(gbc.pc(), 0x41cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0244
        gbc.setState(0xcb5f, 0xab96, 0x2410, 0x27ac, 0x5a22, 0xfc8c, 0x1, 0x0);
        gbc.writeMem(0xcb5f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xab96);
        EXPECT(gbc.pc(), 0xcb61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb5f), 0xcb);
        EXPECT(gbc.readMem(0xcb60), 0x92);
        // CB 92 0245
        gbc.setState(0xc3a9, 0x45b0, 0xbd80, 0x2abc, 0x1cfa, 0x4f8b, 0x1, 0x0);
        gbc.writeMem(0xc3a9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x45b0);
        EXPECT(gbc.pc(), 0xc3ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a9), 0xcb);
        EXPECT(gbc.readMem(0xc3aa), 0x92);
        // CB 92 0246
        gbc.setState(0x6155, 0x2d9f, 0x3230, 0x59d, 0x4234, 0xa1fb, 0x1, 0x0);
        gbc.writeMem(0x6155, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2d9f);
        EXPECT(gbc.pc(), 0x6157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0247
        gbc.setState(0x948c, 0x8d88, 0x20f0, 0x16c8, 0x2b9e, 0xd58a, 0x1, 0x0);
        gbc.writeMem(0x948c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8d88);
        EXPECT(gbc.pc(), 0x948e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x948c), 0xcb);
        EXPECT(gbc.readMem(0x948d), 0x92);
        // CB 92 0248
        gbc.setState(0xda8e, 0x13d9, 0x1ae0, 0x240f, 0x9acf, 0xe190, 0x1, 0x0);
        gbc.writeMem(0xda8e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x13d9);
        EXPECT(gbc.pc(), 0xda90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8e), 0xcb);
        EXPECT(gbc.readMem(0xda8f), 0x92);
        // CB 92 0249
        gbc.setState(0x44a, 0xdd5f, 0x3480, 0x12ad, 0x8352, 0xe7d0, 0x1, 0x0);
        gbc.writeMem(0x44a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdd5f);
        EXPECT(gbc.pc(), 0x44c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 024A
        gbc.setState(0x7e82, 0x669b, 0x8f20, 0x8a16, 0x13d8, 0x92e1, 0x1, 0x0);
        gbc.writeMem(0x7e82, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x669b);
        EXPECT(gbc.pc(), 0x7e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 024B
        gbc.setState(0xcd9b, 0xa95c, 0xcce0, 0x511c, 0x1795, 0x7b81, 0x1, 0x1);
        gbc.writeMem(0xcd9b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa95c);
        EXPECT(gbc.pc(), 0xcd9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9b), 0xcb);
        EXPECT(gbc.readMem(0xcd9c), 0x92);
        // CB 92 024C
        gbc.setState(0x58d1, 0x92ba, 0x8550, 0xb10, 0x5d89, 0x17f6, 0x1, 0x1);
        gbc.writeMem(0x58d1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x92ba);
        EXPECT(gbc.pc(), 0x58d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 024D
        gbc.setState(0x5566, 0x45e6, 0x5550, 0x6d0e, 0xbf4a, 0x8334, 0x0, 0x0);
        gbc.writeMem(0x5566, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x45e6);
        EXPECT(gbc.pc(), 0x5568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 024E
        gbc.setState(0xc2eb, 0x5581, 0x6440, 0x7d0, 0xdd23, 0x8a68, 0x1, 0x1);
        gbc.writeMem(0xc2eb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5581);
        EXPECT(gbc.pc(), 0xc2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2eb), 0xcb);
        EXPECT(gbc.readMem(0xc2ec), 0x92);
        // CB 92 024F
        gbc.setState(0x8729, 0xd849, 0xdfa0, 0x5ed1, 0x159c, 0xfa2f, 0x0, 0x1);
        gbc.writeMem(0x8729, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd849);
        EXPECT(gbc.pc(), 0x872b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8729), 0xcb);
        EXPECT(gbc.readMem(0x872a), 0x92);
        // CB 92 0250
        gbc.setState(0xee0e, 0xe87c, 0x8e60, 0x1f6a, 0x14e0, 0x951f, 0x1, 0x1);
        gbc.writeMem(0xee0e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe87c);
        EXPECT(gbc.pc(), 0xee10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee0e), 0xcb);
        EXPECT(gbc.readMem(0xee0f), 0x92);
        // CB 92 0251
        gbc.setState(0x3637, 0x8c4b, 0xb170, 0x9082, 0xdce8, 0xa2c0, 0x0, 0x1);
        gbc.writeMem(0x3637, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8c4b);
        EXPECT(gbc.pc(), 0x3639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0252
        gbc.setState(0xcb9f, 0x1de0, 0xbef0, 0xd11, 0x9e80, 0x82a, 0x1, 0x0);
        gbc.writeMem(0xcb9f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1de0);
        EXPECT(gbc.pc(), 0xcba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb9f), 0xcb);
        EXPECT(gbc.readMem(0xcba0), 0x92);
        // CB 92 0253
        gbc.setState(0xb497, 0x6b06, 0xd130, 0xe406, 0xefe7, 0x468f, 0x1, 0x0);
        gbc.writeMem(0xb497, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6b06);
        EXPECT(gbc.pc(), 0xb499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb497), 0xcb);
        EXPECT(gbc.readMem(0xb498), 0x92);
        // CB 92 0254
        gbc.setState(0x21de, 0xd4a6, 0x6ef0, 0x565a, 0x773a, 0x23, 0x0, 0x0);
        gbc.writeMem(0x21de, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd4a6);
        EXPECT(gbc.pc(), 0x21e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0255
        gbc.setState(0x6f87, 0x25b9, 0xf110, 0xc82c, 0x6fa0, 0x48ce, 0x1, 0x0);
        gbc.writeMem(0x6f87, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x25b9);
        EXPECT(gbc.pc(), 0x6f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0256
        gbc.setState(0x45b3, 0xdfe4, 0xa500, 0x6ebb, 0x96de, 0xe97f, 0x1, 0x0);
        gbc.writeMem(0x45b3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdfe4);
        EXPECT(gbc.pc(), 0x45b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0257
        gbc.setState(0xa192, 0x87fb, 0x5100, 0xd193, 0x6770, 0x2237, 0x1, 0x0);
        gbc.writeMem(0xa192, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x87fb);
        EXPECT(gbc.pc(), 0xa194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa192), 0xcb);
        EXPECT(gbc.readMem(0xa193), 0x92);
        // CB 92 0258
        gbc.setState(0x9b6d, 0x8260, 0x7880, 0x5001, 0x9ad7, 0xbd83, 0x0, 0x0);
        gbc.writeMem(0x9b6d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8260);
        EXPECT(gbc.pc(), 0x9b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b6d), 0xcb);
        EXPECT(gbc.readMem(0x9b6e), 0x92);
        // CB 92 0259
        gbc.setState(0x1ddc, 0xfd7b, 0x5350, 0x7d69, 0x4c95, 0x304, 0x1, 0x0);
        gbc.writeMem(0x1ddc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfd7b);
        EXPECT(gbc.pc(), 0x1dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 025A
        gbc.setState(0x43d0, 0x4d66, 0xdac0, 0xbd37, 0x7343, 0xac47, 0x0, 0x1);
        gbc.writeMem(0x43d0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4d66);
        EXPECT(gbc.pc(), 0x43d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 025B
        gbc.setState(0xcf48, 0x7c8b, 0x360, 0x4dfa, 0xf270, 0x70b8, 0x1, 0x1);
        gbc.writeMem(0xcf48, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7c8b);
        EXPECT(gbc.pc(), 0xcf4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf48), 0xcb);
        EXPECT(gbc.readMem(0xcf49), 0x92);
        // CB 92 025D
        gbc.setState(0x7bf9, 0x2ee8, 0x1900, 0x5d90, 0x9e1c, 0x53fb, 0x0, 0x0);
        gbc.writeMem(0x7bf9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2ee8);
        EXPECT(gbc.pc(), 0x7bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 025E
        gbc.setState(0x76aa, 0x709d, 0xaff0, 0xc50f, 0xbb37, 0x9364, 0x1, 0x0);
        gbc.writeMem(0x76aa, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x709d);
        EXPECT(gbc.pc(), 0x76ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 025F
        gbc.setState(0x8b54, 0xa8d0, 0x6790, 0xbeab, 0x2d2f, 0x64eb, 0x1, 0x0);
        gbc.writeMem(0x8b54, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa8d0);
        EXPECT(gbc.pc(), 0x8b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b54), 0xcb);
        EXPECT(gbc.readMem(0x8b55), 0x92);
        // CB 92 0260
        gbc.setState(0xcf00, 0x2a44, 0xee40, 0xc875, 0x29ab, 0xcad4, 0x1, 0x0);
        gbc.writeMem(0xcf00, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2a44);
        EXPECT(gbc.pc(), 0xcf02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf00), 0xcb);
        EXPECT(gbc.readMem(0xcf01), 0x92);
        // CB 92 0261
        gbc.setState(0xd6c6, 0x3628, 0xb860, 0x2374, 0x101f, 0x133e, 0x1, 0x1);
        gbc.writeMem(0xd6c6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3628);
        EXPECT(gbc.pc(), 0xd6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c6), 0xcb);
        EXPECT(gbc.readMem(0xd6c7), 0x92);
        // CB 92 0262
        gbc.setState(0x8130, 0x6b23, 0x79c0, 0x2373, 0xcb, 0x8f70, 0x1, 0x1);
        gbc.writeMem(0x8130, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6b23);
        EXPECT(gbc.pc(), 0x8132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8130), 0xcb);
        EXPECT(gbc.readMem(0x8131), 0x92);
        // CB 92 0263
        gbc.setState(0x60db, 0x39b7, 0xdc60, 0xe09e, 0x5271, 0x8e07, 0x0, 0x0);
        gbc.writeMem(0x60db, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x39b7);
        EXPECT(gbc.pc(), 0x60dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0264
        gbc.setState(0x54cb, 0x181, 0x6a0, 0x3f8, 0xa8dc, 0x5f3f, 0x0, 0x1);
        gbc.writeMem(0x54cb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x181);
        EXPECT(gbc.pc(), 0x54cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0265
        gbc.setState(0xee5b, 0xf21a, 0xced0, 0xafff, 0xd2cc, 0x71b0, 0x0, 0x1);
        gbc.writeMem(0xee5b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf21a);
        EXPECT(gbc.pc(), 0xee5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5b), 0xcb);
        EXPECT(gbc.readMem(0xee5c), 0x92);
        // CB 92 0266
        gbc.setState(0x6be4, 0x77d2, 0xbc00, 0xde34, 0x79b1, 0x7991, 0x1, 0x0);
        gbc.writeMem(0x6be4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x77d2);
        EXPECT(gbc.pc(), 0x6be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0267
        gbc.setState(0x2685, 0x8be3, 0x8ef0, 0x7fe, 0x2cd4, 0xb3b5, 0x1, 0x0);
        gbc.writeMem(0x2685, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8be3);
        EXPECT(gbc.pc(), 0x2687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0268
        gbc.setState(0x5e58, 0xa481, 0xca60, 0x8d99, 0x14de, 0xd608, 0x1, 0x1);
        gbc.writeMem(0x5e58, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa481);
        EXPECT(gbc.pc(), 0x5e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0269
        gbc.setState(0x4a66, 0x352c, 0xe080, 0xcfe6, 0xa745, 0xe4f2, 0x1, 0x0);
        gbc.writeMem(0x4a66, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x352c);
        EXPECT(gbc.pc(), 0x4a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 026A
        gbc.setState(0x71d7, 0x2caf, 0x9f0, 0x9e00, 0x8263, 0xbfc9, 0x1, 0x0);
        gbc.writeMem(0x71d7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2caf);
        EXPECT(gbc.pc(), 0x71d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 026B
        gbc.setState(0x7d09, 0x9829, 0x3f60, 0x224d, 0x19a5, 0x12f2, 0x1, 0x1);
        gbc.writeMem(0x7d09, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9829);
        EXPECT(gbc.pc(), 0x7d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 026D
        gbc.setState(0xedf4, 0xfff0, 0xe560, 0x4fcc, 0xb7d9, 0x7ad2, 0x1, 0x0);
        gbc.writeMem(0xedf4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfff0);
        EXPECT(gbc.pc(), 0xedf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf4), 0xcb);
        EXPECT(gbc.readMem(0xedf5), 0x92);
        // CB 92 026E
        gbc.setState(0x275c, 0x228d, 0xacb0, 0x637, 0xd6f3, 0x6136, 0x0, 0x1);
        gbc.writeMem(0x275c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x228d);
        EXPECT(gbc.pc(), 0x275e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 026F
        gbc.setState(0xaca1, 0x9f86, 0xfb00, 0xbd7f, 0x9604, 0x982d, 0x0, 0x1);
        gbc.writeMem(0xaca1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9f86);
        EXPECT(gbc.pc(), 0xaca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca1), 0xcb);
        EXPECT(gbc.readMem(0xaca2), 0x92);
        // CB 92 0270
        gbc.setState(0x7295, 0x3a9e, 0x94e0, 0x2b03, 0xcb44, 0x55b9, 0x0, 0x0);
        gbc.writeMem(0x7295, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3a9e);
        EXPECT(gbc.pc(), 0x7297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0271
        gbc.setState(0xb276, 0x182b, 0x8980, 0x702a, 0x590c, 0x1f04, 0x1, 0x0);
        gbc.writeMem(0xb276, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x182b);
        EXPECT(gbc.pc(), 0xb278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb276), 0xcb);
        EXPECT(gbc.readMem(0xb277), 0x92);
        // CB 92 0272
        gbc.setState(0x8c99, 0x3d49, 0xffb0, 0xdcff, 0x7622, 0x1d49, 0x0, 0x1);
        gbc.writeMem(0x8c99, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3d49);
        EXPECT(gbc.pc(), 0x8c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c99), 0xcb);
        EXPECT(gbc.readMem(0x8c9a), 0x92);
        // CB 92 0273
        gbc.setState(0x1461, 0x3c4a, 0x8160, 0x1f3e, 0x983a, 0x4e98, 0x0, 0x1);
        gbc.writeMem(0x1461, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3c4a);
        EXPECT(gbc.pc(), 0x1463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0274
        gbc.setState(0xd860, 0xb9ab, 0x22c0, 0x1592, 0x604, 0x616d, 0x1, 0x1);
        gbc.writeMem(0xd860, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb9ab);
        EXPECT(gbc.pc(), 0xd862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd860), 0xcb);
        EXPECT(gbc.readMem(0xd861), 0x92);
        // CB 92 0275
        gbc.setState(0x36be, 0xa928, 0xc0d0, 0x7e24, 0x890a, 0x6ccd, 0x1, 0x0);
        gbc.writeMem(0x36be, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa928);
        EXPECT(gbc.pc(), 0x36c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0276
        gbc.setState(0x1a2f, 0x90f4, 0x28f0, 0xf689, 0x480a, 0xb417, 0x1, 0x1);
        gbc.writeMem(0x1a2f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x90f4);
        EXPECT(gbc.pc(), 0x1a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0277
        gbc.setState(0xd7e6, 0xe72e, 0x8ed0, 0xd774, 0xaa6e, 0xec2, 0x0, 0x1);
        gbc.writeMem(0xd7e6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe72e);
        EXPECT(gbc.pc(), 0xd7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e6), 0xcb);
        EXPECT(gbc.readMem(0xd7e7), 0x92);
        // CB 92 0278
        gbc.setState(0x1532, 0xd3d7, 0x1ee0, 0x1312, 0x1ad, 0x4cfa, 0x0, 0x0);
        gbc.writeMem(0x1532, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd3d7);
        EXPECT(gbc.pc(), 0x1534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0279
        gbc.setState(0x3f77, 0x62f9, 0x66a0, 0xcd84, 0x7b1, 0x592b, 0x0, 0x1);
        gbc.writeMem(0x3f77, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x62f9);
        EXPECT(gbc.pc(), 0x3f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 027A
        gbc.setState(0xdb50, 0x52af, 0x9ca0, 0x60c3, 0x566a, 0x9243, 0x0, 0x0);
        gbc.writeMem(0xdb50, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x52af);
        EXPECT(gbc.pc(), 0xdb52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb50), 0xcb);
        EXPECT(gbc.readMem(0xdb51), 0x92);
        // CB 92 027B
        gbc.setState(0x1840, 0x597b, 0x4430, 0x5395, 0xaa95, 0x1f9a, 0x0, 0x1);
        gbc.writeMem(0x1840, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x597b);
        EXPECT(gbc.pc(), 0x1842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 027C
        gbc.setState(0x13b4, 0x6760, 0x41e0, 0xdd5c, 0x4c5a, 0xd412, 0x1, 0x0);
        gbc.writeMem(0x13b4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6760);
        EXPECT(gbc.pc(), 0x13b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 027D
        gbc.setState(0xd2fb, 0x6303, 0x7470, 0x296d, 0xd886, 0xb1a7, 0x0, 0x0);
        gbc.writeMem(0xd2fb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6303);
        EXPECT(gbc.pc(), 0xd2fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2fb), 0xcb);
        EXPECT(gbc.readMem(0xd2fc), 0x92);
        // CB 92 027E
        gbc.setState(0x1bb8, 0x7473, 0xe900, 0xe025, 0x5db2, 0x32d4, 0x1, 0x1);
        gbc.writeMem(0x1bb8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7473);
        EXPECT(gbc.pc(), 0x1bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 027F
        gbc.setState(0x77f6, 0xe29, 0xab0, 0xd5c8, 0x7154, 0x476a, 0x1, 0x0);
        gbc.writeMem(0x77f6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe29);
        EXPECT(gbc.pc(), 0x77f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0280
        gbc.setState(0x4cbb, 0x7248, 0x3450, 0xe38d, 0x177b, 0x4f94, 0x0, 0x1);
        gbc.writeMem(0x4cbb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7248);
        EXPECT(gbc.pc(), 0x4cbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0281
        gbc.setState(0x1bd7, 0x87c0, 0x49c0, 0x61a1, 0x512, 0x24c8, 0x1, 0x0);
        gbc.writeMem(0x1bd7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x87c0);
        EXPECT(gbc.pc(), 0x1bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0282
        gbc.setState(0xa13b, 0xa0ed, 0xc2e0, 0xb86f, 0x33d3, 0xa9, 0x1, 0x0);
        gbc.writeMem(0xa13b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa0ed);
        EXPECT(gbc.pc(), 0xa13d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa13b), 0xcb);
        EXPECT(gbc.readMem(0xa13c), 0x92);
        // CB 92 0283
        gbc.setState(0xe56a, 0x4a4f, 0xc580, 0xb164, 0x69be, 0xaf19, 0x0, 0x0);
        gbc.writeMem(0xe56a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4a4f);
        EXPECT(gbc.pc(), 0xe56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe56a), 0xcb);
        EXPECT(gbc.readMem(0xe56b), 0x92);
        // CB 92 0284
        gbc.setState(0xd573, 0xfc7b, 0x5880, 0xbd89, 0xd20, 0xb5e6, 0x1, 0x0);
        gbc.writeMem(0xd573, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfc7b);
        EXPECT(gbc.pc(), 0xd575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd573), 0xcb);
        EXPECT(gbc.readMem(0xd574), 0x92);
        // CB 92 0285
        gbc.setState(0xcc4, 0x5415, 0x6520, 0x9f17, 0x2a51, 0xd37b, 0x0, 0x1);
        gbc.writeMem(0xcc4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5415);
        EXPECT(gbc.pc(), 0xcc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0286
        gbc.setState(0xdbb3, 0x5fa5, 0xc640, 0x7666, 0xa060, 0x7470, 0x0, 0x0);
        gbc.writeMem(0xdbb3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5fa5);
        EXPECT(gbc.pc(), 0xdbb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb3), 0xcb);
        EXPECT(gbc.readMem(0xdbb4), 0x92);
        // CB 92 0287
        gbc.setState(0x4986, 0xf6dd, 0x2170, 0xda92, 0xf138, 0xcf33, 0x1, 0x0);
        gbc.writeMem(0x4986, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf6dd);
        EXPECT(gbc.pc(), 0x4988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0288
        gbc.setState(0x3a9e, 0x3c66, 0x530, 0x805f, 0x41a9, 0x2f3, 0x0, 0x0);
        gbc.writeMem(0x3a9e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3c66);
        EXPECT(gbc.pc(), 0x3aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0289
        gbc.setState(0x9d4d, 0x1dff, 0x820, 0x4bce, 0xf61a, 0xbc35, 0x0, 0x1);
        gbc.writeMem(0x9d4d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1dff);
        EXPECT(gbc.pc(), 0x9d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d4d), 0xcb);
        EXPECT(gbc.readMem(0x9d4e), 0x92);
        // CB 92 028A
        gbc.setState(0x94de, 0xc8c6, 0x4160, 0x9fd8, 0xcbd, 0x4bd2, 0x0, 0x0);
        gbc.writeMem(0x94de, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc8c6);
        EXPECT(gbc.pc(), 0x94e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94de), 0xcb);
        EXPECT(gbc.readMem(0x94df), 0x92);
        // CB 92 028B
        gbc.setState(0xbaad, 0x9511, 0x9a50, 0x4c, 0xf58c, 0x28f1, 0x1, 0x1);
        gbc.writeMem(0xbaad, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9511);
        EXPECT(gbc.pc(), 0xbaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaad), 0xcb);
        EXPECT(gbc.readMem(0xbaae), 0x92);
        // CB 92 028C
        gbc.setState(0xc02f, 0xaa3, 0x3920, 0xce71, 0x42cb, 0x2828, 0x0, 0x0);
        gbc.writeMem(0xc02f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaa3);
        EXPECT(gbc.pc(), 0xc031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02f), 0xcb);
        EXPECT(gbc.readMem(0xc030), 0x92);
        // CB 92 028E
        gbc.setState(0xccd8, 0x9733, 0xd8f0, 0xd627, 0xf4fd, 0xa23c, 0x0, 0x1);
        gbc.writeMem(0xccd8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9733);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd8), 0xcb);
        EXPECT(gbc.readMem(0xccd9), 0x92);
        // CB 92 028F
        gbc.setState(0xcecd, 0x698f, 0x4770, 0xbd82, 0xc8c7, 0x2055, 0x1, 0x0);
        gbc.writeMem(0xcecd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x698f);
        EXPECT(gbc.pc(), 0xcecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcecd), 0xcb);
        EXPECT(gbc.readMem(0xcece), 0x92);
        // CB 92 0290
        gbc.setState(0xe899, 0x6ff9, 0xdb90, 0x3920, 0x55f2, 0xfbc5, 0x1, 0x1);
        gbc.writeMem(0xe899, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6ff9);
        EXPECT(gbc.pc(), 0xe89b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe899), 0xcb);
        EXPECT(gbc.readMem(0xe89a), 0x92);
        // CB 92 0292
        gbc.setState(0xa436, 0x2ea5, 0x7d20, 0x5252, 0x9c8, 0xfccc, 0x0, 0x1);
        gbc.writeMem(0xa436, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2ea5);
        EXPECT(gbc.pc(), 0xa438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa436), 0xcb);
        EXPECT(gbc.readMem(0xa437), 0x92);
        // CB 92 0293
        gbc.setState(0xc563, 0xfac4, 0xa180, 0x8a2a, 0x142f, 0xea9d, 0x1, 0x0);
        gbc.writeMem(0xc563, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfac4);
        EXPECT(gbc.pc(), 0xc565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc563), 0xcb);
        EXPECT(gbc.readMem(0xc564), 0x92);
        // CB 92 0294
        gbc.setState(0x2a1f, 0x2a27, 0xb690, 0x18cb, 0xa46c, 0x6fd, 0x0, 0x0);
        gbc.writeMem(0x2a1f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2a27);
        EXPECT(gbc.pc(), 0x2a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0295
        gbc.setState(0x7c23, 0x84c6, 0x8d20, 0x98a4, 0xd253, 0xa29, 0x1, 0x0);
        gbc.writeMem(0x7c23, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x84c6);
        EXPECT(gbc.pc(), 0x7c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0296
        gbc.setState(0x4ba9, 0x5f0b, 0x62a0, 0x84a7, 0xed82, 0xcd9b, 0x1, 0x1);
        gbc.writeMem(0x4ba9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5f0b);
        EXPECT(gbc.pc(), 0x4bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0297
        gbc.setState(0xb66c, 0xc40d, 0xff30, 0x2354, 0xfee4, 0x3682, 0x0, 0x0);
        gbc.writeMem(0xb66c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc40d);
        EXPECT(gbc.pc(), 0xb66e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb66c), 0xcb);
        EXPECT(gbc.readMem(0xb66d), 0x92);
        // CB 92 0298
        gbc.setState(0x85db, 0xdcb1, 0x3660, 0x4e9a, 0x732b, 0x3675, 0x0, 0x1);
        gbc.writeMem(0x85db, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdcb1);
        EXPECT(gbc.pc(), 0x85dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85db), 0xcb);
        EXPECT(gbc.readMem(0x85dc), 0x92);
        // CB 92 0299
        gbc.setState(0x8d46, 0x5149, 0x8070, 0x37eb, 0x99eb, 0x2818, 0x1, 0x1);
        gbc.writeMem(0x8d46, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5149);
        EXPECT(gbc.pc(), 0x8d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d46), 0xcb);
        EXPECT(gbc.readMem(0x8d47), 0x92);
        // CB 92 029A
        gbc.setState(0xedb3, 0x1a71, 0x1d30, 0xa343, 0x16b8, 0x1882, 0x0, 0x0);
        gbc.writeMem(0xedb3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1a71);
        EXPECT(gbc.pc(), 0xedb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb3), 0xcb);
        EXPECT(gbc.readMem(0xedb4), 0x92);
        // CB 92 029B
        gbc.setState(0xd103, 0xe289, 0xfb60, 0x5d6e, 0x860e, 0xa637, 0x0, 0x0);
        gbc.writeMem(0xd103, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe289);
        EXPECT(gbc.pc(), 0xd105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd103), 0xcb);
        EXPECT(gbc.readMem(0xd104), 0x92);
        // CB 92 029C
        gbc.setState(0x1d07, 0xd451, 0xb150, 0x58bc, 0x2c6a, 0x80eb, 0x0, 0x1);
        gbc.writeMem(0x1d07, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd451);
        EXPECT(gbc.pc(), 0x1d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 029D
        gbc.setState(0x4d50, 0x4cfa, 0xf9d0, 0x3be, 0xa5f9, 0xbbb8, 0x0, 0x0);
        gbc.writeMem(0x4d50, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4cfa);
        EXPECT(gbc.pc(), 0x4d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 029E
        gbc.setState(0x838b, 0x7c98, 0x90d0, 0x2e4b, 0x8332, 0xf9a2, 0x1, 0x1);
        gbc.writeMem(0x838b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7c98);
        EXPECT(gbc.pc(), 0x838d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838b), 0xcb);
        EXPECT(gbc.readMem(0x838c), 0x92);
        // CB 92 029F
        gbc.setState(0x10b8, 0x133d, 0x9c80, 0x39a2, 0xab09, 0xeab3, 0x0, 0x0);
        gbc.writeMem(0x10b8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x133d);
        EXPECT(gbc.pc(), 0x10ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02A0
        gbc.setState(0xd526, 0xb3be, 0xf030, 0xcb59, 0x8231, 0x520f, 0x1, 0x0);
        gbc.writeMem(0xd526, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb3be);
        EXPECT(gbc.pc(), 0xd528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd526), 0xcb);
        EXPECT(gbc.readMem(0xd527), 0x92);
        // CB 92 02A1
        gbc.setState(0x1a8d, 0xb4f3, 0xaa60, 0x8020, 0x21a2, 0x37e6, 0x1, 0x0);
        gbc.writeMem(0x1a8d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb4f3);
        EXPECT(gbc.pc(), 0x1a8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02A2
        gbc.setState(0x8648, 0xc019, 0x3740, 0x20e, 0xc760, 0x8569, 0x0, 0x0);
        gbc.writeMem(0x8648, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc019);
        EXPECT(gbc.pc(), 0x864a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8648), 0xcb);
        EXPECT(gbc.readMem(0x8649), 0x92);
        // CB 92 02A3
        gbc.setState(0x4de9, 0x9332, 0xf900, 0xb6e0, 0x3623, 0x1db1, 0x0, 0x1);
        gbc.writeMem(0x4de9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9332);
        EXPECT(gbc.pc(), 0x4deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02A4
        gbc.setState(0x8d81, 0x8e73, 0x7e60, 0x1297, 0x9d98, 0xe359, 0x1, 0x1);
        gbc.writeMem(0x8d81, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8e73);
        EXPECT(gbc.pc(), 0x8d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d81), 0xcb);
        EXPECT(gbc.readMem(0x8d82), 0x92);
        // CB 92 02A5
        gbc.setState(0xcd69, 0x6484, 0xa230, 0x49db, 0x2a5, 0x9648, 0x1, 0x0);
        gbc.writeMem(0xcd69, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6484);
        EXPECT(gbc.pc(), 0xcd6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd69), 0xcb);
        EXPECT(gbc.readMem(0xcd6a), 0x92);
        // CB 92 02A6
        gbc.setState(0x8ea6, 0xdb43, 0xcd60, 0xc098, 0x5804, 0x6a8d, 0x0, 0x1);
        gbc.writeMem(0x8ea6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdb43);
        EXPECT(gbc.pc(), 0x8ea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea6), 0xcb);
        EXPECT(gbc.readMem(0x8ea7), 0x92);
        // CB 92 02A7
        gbc.setState(0xe3f9, 0xf7ff, 0xbc80, 0xe3f7, 0x953c, 0xd096, 0x1, 0x1);
        gbc.writeMem(0xe3f9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf7ff);
        EXPECT(gbc.pc(), 0xe3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f9), 0xcb);
        EXPECT(gbc.readMem(0xe3fa), 0x92);
        // CB 92 02A8
        gbc.setState(0x5a9e, 0x7d7b, 0x5410, 0x517f, 0xb8d1, 0x9a4c, 0x1, 0x0);
        gbc.writeMem(0x5a9e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7d7b);
        EXPECT(gbc.pc(), 0x5aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02A9
        gbc.setState(0x5190, 0xa894, 0xbc0, 0xdd87, 0x680f, 0x5f51, 0x1, 0x0);
        gbc.writeMem(0x5190, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa894);
        EXPECT(gbc.pc(), 0x5192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02AA
        gbc.setState(0x3776, 0xeacb, 0xc770, 0x6999, 0x88ec, 0xa61c, 0x1, 0x1);
        gbc.writeMem(0x3776, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xeacb);
        EXPECT(gbc.pc(), 0x3778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02AB
        gbc.setState(0xdf03, 0xb980, 0xea40, 0xf9bb, 0xf892, 0x553d, 0x1, 0x1);
        gbc.writeMem(0xdf03, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb980);
        EXPECT(gbc.pc(), 0xdf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf03), 0xcb);
        EXPECT(gbc.readMem(0xdf04), 0x92);
        // CB 92 02AC
        gbc.setState(0x7d0b, 0x37d7, 0x1820, 0xc7b, 0x8698, 0x2a9, 0x1, 0x0);
        gbc.writeMem(0x7d0b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x37d7);
        EXPECT(gbc.pc(), 0x7d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02AD
        gbc.setState(0xd6e5, 0xb5a8, 0xe7e0, 0x6226, 0x8694, 0x8f3a, 0x1, 0x0);
        gbc.writeMem(0xd6e5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb5a8);
        EXPECT(gbc.pc(), 0xd6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e5), 0xcb);
        EXPECT(gbc.readMem(0xd6e6), 0x92);
        // CB 92 02AE
        gbc.setState(0x4b58, 0xd897, 0xd950, 0x2767, 0xd841, 0x6c59, 0x1, 0x1);
        gbc.writeMem(0x4b58, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd897);
        EXPECT(gbc.pc(), 0x4b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02AF
        gbc.setState(0x3f6f, 0x330, 0xf490, 0x3cf3, 0xaf87, 0xaf7, 0x0, 0x1);
        gbc.writeMem(0x3f6f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x330);
        EXPECT(gbc.pc(), 0x3f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02B0
        gbc.setState(0xf48, 0x19b7, 0x83a0, 0x13b5, 0xbe6a, 0x8e78, 0x1, 0x1);
        gbc.writeMem(0xf48, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x19b7);
        EXPECT(gbc.pc(), 0xf4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02B1
        gbc.setState(0x2a0b, 0x6bde, 0xab30, 0x19c9, 0x9e0a, 0x52fe, 0x1, 0x0);
        gbc.writeMem(0x2a0b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6bde);
        EXPECT(gbc.pc(), 0x2a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02B2
        gbc.setState(0xafd0, 0x75d, 0xc580, 0x5e99, 0x51ba, 0x4936, 0x1, 0x1);
        gbc.writeMem(0xafd0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x75d);
        EXPECT(gbc.pc(), 0xafd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd0), 0xcb);
        EXPECT(gbc.readMem(0xafd1), 0x92);
        // CB 92 02B3
        gbc.setState(0x58f4, 0x9ad, 0x19c0, 0x8a70, 0x2d86, 0x88b3, 0x1, 0x0);
        gbc.writeMem(0x58f4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9ad);
        EXPECT(gbc.pc(), 0x58f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02B5
        gbc.setState(0xe10c, 0x329f, 0x3660, 0x9ea8, 0x6db6, 0xc64b, 0x0, 0x1);
        gbc.writeMem(0xe10c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x329f);
        EXPECT(gbc.pc(), 0xe10e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe10c), 0xcb);
        EXPECT(gbc.readMem(0xe10d), 0x92);
        // CB 92 02B6
        gbc.setState(0x1264, 0x4797, 0xb110, 0x85b6, 0xf016, 0x6951, 0x1, 0x1);
        gbc.writeMem(0x1264, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4797);
        EXPECT(gbc.pc(), 0x1266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02B7
        gbc.setState(0x116, 0x94e2, 0xb60, 0xf263, 0xf28d, 0xcc12, 0x0, 0x0);
        gbc.writeMem(0x116, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x94e2);
        EXPECT(gbc.pc(), 0x118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02B8
        gbc.setState(0xc326, 0xf10d, 0x1280, 0x45e4, 0xbae8, 0xb175, 0x1, 0x1);
        gbc.writeMem(0xc326, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf10d);
        EXPECT(gbc.pc(), 0xc328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc326), 0xcb);
        EXPECT(gbc.readMem(0xc327), 0x92);
        // CB 92 02B9
        gbc.setState(0x9ea5, 0x1fc7, 0x25e0, 0xd726, 0x23f8, 0xd8a8, 0x0, 0x0);
        gbc.writeMem(0x9ea5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1fc7);
        EXPECT(gbc.pc(), 0x9ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea5), 0xcb);
        EXPECT(gbc.readMem(0x9ea6), 0x92);
        // CB 92 02BA
        gbc.setState(0x359c, 0x95af, 0xb170, 0x4c12, 0x6625, 0x17f2, 0x1, 0x0);
        gbc.writeMem(0x359c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x95af);
        EXPECT(gbc.pc(), 0x359e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02BC
        gbc.setState(0xc24e, 0x9f2b, 0xf190, 0x79f7, 0x1d18, 0x229, 0x0, 0x0);
        gbc.writeMem(0xc24e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9f2b);
        EXPECT(gbc.pc(), 0xc250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24e), 0xcb);
        EXPECT(gbc.readMem(0xc24f), 0x92);
        // CB 92 02BD
        gbc.setState(0x25fd, 0x142e, 0x6a00, 0xeaaf, 0x396c, 0x6f1, 0x1, 0x0);
        gbc.writeMem(0x25fd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x142e);
        EXPECT(gbc.pc(), 0x25ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02BE
        gbc.setState(0xe7ed, 0x29d6, 0x5900, 0x793b, 0xb409, 0xcb40, 0x0, 0x0);
        gbc.writeMem(0xe7ed, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x29d6);
        EXPECT(gbc.pc(), 0xe7ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ed), 0xcb);
        EXPECT(gbc.readMem(0xe7ee), 0x92);
        // CB 92 02BF
        gbc.setState(0xc5e1, 0x7e3e, 0x34b0, 0x32a6, 0x3c52, 0xfc0b, 0x0, 0x0);
        gbc.writeMem(0xc5e1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7e3e);
        EXPECT(gbc.pc(), 0xc5e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e1), 0xcb);
        EXPECT(gbc.readMem(0xc5e2), 0x92);
        // CB 92 02C0
        gbc.setState(0x698e, 0xb6a8, 0x4c20, 0xd91d, 0x6d2e, 0x90e4, 0x1, 0x0);
        gbc.writeMem(0x698e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb6a8);
        EXPECT(gbc.pc(), 0x6990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02C1
        gbc.setState(0x6a21, 0x6cd8, 0xbca0, 0x23f3, 0x4b10, 0xed9d, 0x0, 0x1);
        gbc.writeMem(0x6a21, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6cd8);
        EXPECT(gbc.pc(), 0x6a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02C2
        gbc.setState(0x773e, 0xc4ee, 0x7410, 0xe4c0, 0xc21c, 0x42e5, 0x0, 0x1);
        gbc.writeMem(0x773e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc4ee);
        EXPECT(gbc.pc(), 0x7740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02C3
        gbc.setState(0x2773, 0xada0, 0x1bd0, 0x14cc, 0x72a, 0x9f81, 0x0, 0x1);
        gbc.writeMem(0x2773, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xada0);
        EXPECT(gbc.pc(), 0x2775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02C4
        gbc.setState(0x97e9, 0xfa57, 0x450, 0x8f1c, 0x4975, 0x27fa, 0x0, 0x1);
        gbc.writeMem(0x97e9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfa57);
        EXPECT(gbc.pc(), 0x97eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e9), 0xcb);
        EXPECT(gbc.readMem(0x97ea), 0x92);
        // CB 92 02C5
        gbc.setState(0x8e90, 0xb7f1, 0x9f70, 0xd4b6, 0x2a30, 0x2518, 0x1, 0x0);
        gbc.writeMem(0x8e90, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb7f1);
        EXPECT(gbc.pc(), 0x8e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e90), 0xcb);
        EXPECT(gbc.readMem(0x8e91), 0x92);
        // CB 92 02C6
        gbc.setState(0x104c, 0xf7fb, 0xb1b0, 0x3b36, 0x2dd9, 0x8410, 0x1, 0x0);
        gbc.writeMem(0x104c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf7fb);
        EXPECT(gbc.pc(), 0x104e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02C7
        gbc.setState(0xe45f, 0x820, 0x7710, 0x7ed7, 0x57bc, 0x6009, 0x1, 0x0);
        gbc.writeMem(0xe45f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x820);
        EXPECT(gbc.pc(), 0xe461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe45f), 0xcb);
        EXPECT(gbc.readMem(0xe460), 0x92);
        // CB 92 02C8
        gbc.setState(0x122, 0xe3bc, 0x8a10, 0xf401, 0xecad, 0x71ec, 0x1, 0x0);
        gbc.writeMem(0x122, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe3bc);
        EXPECT(gbc.pc(), 0x124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02C9
        gbc.setState(0x8946, 0x2263, 0x7b90, 0x260c, 0x79de, 0xbfac, 0x0, 0x1);
        gbc.writeMem(0x8946, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2263);
        EXPECT(gbc.pc(), 0x8948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8946), 0xcb);
        EXPECT(gbc.readMem(0x8947), 0x92);
        // CB 92 02CA
        gbc.setState(0xe3e1, 0xa271, 0x1c80, 0x2e53, 0x2a68, 0x20fc, 0x1, 0x0);
        gbc.writeMem(0xe3e1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa271);
        EXPECT(gbc.pc(), 0xe3e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e1), 0xcb);
        EXPECT(gbc.readMem(0xe3e2), 0x92);
        // CB 92 02CB
        gbc.setState(0xc5e1, 0xd7ec, 0x19a0, 0x4202, 0xb3ab, 0x9d9d, 0x0, 0x1);
        gbc.writeMem(0xc5e1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd7ec);
        EXPECT(gbc.pc(), 0xc5e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e1), 0xcb);
        EXPECT(gbc.readMem(0xc5e2), 0x92);
        // CB 92 02CC
        gbc.setState(0xa76a, 0x8ea8, 0xd090, 0xfb26, 0x3887, 0xf978, 0x0, 0x1);
        gbc.writeMem(0xa76a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8ea8);
        EXPECT(gbc.pc(), 0xa76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76a), 0xcb);
        EXPECT(gbc.readMem(0xa76b), 0x92);
        // CB 92 02CD
        gbc.setState(0x5500, 0x6742, 0xa570, 0xd635, 0x77b3, 0x90e8, 0x0, 0x0);
        gbc.writeMem(0x5500, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6742);
        EXPECT(gbc.pc(), 0x5502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02CE
        gbc.setState(0x45bf, 0x80e8, 0x5a00, 0x150f, 0x4c36, 0xb7ec, 0x1, 0x0);
        gbc.writeMem(0x45bf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x80e8);
        EXPECT(gbc.pc(), 0x45c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02CF
        gbc.setState(0x3b96, 0x5778, 0xb670, 0x5298, 0xefe, 0x59db, 0x1, 0x0);
        gbc.writeMem(0x3b96, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5778);
        EXPECT(gbc.pc(), 0x3b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02D0
        gbc.setState(0x3702, 0x341d, 0xe60, 0xc5b3, 0xba, 0xd64e, 0x1, 0x1);
        gbc.writeMem(0x3702, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x341d);
        EXPECT(gbc.pc(), 0x3704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02D1
        gbc.setState(0xa7a5, 0x42f0, 0x4740, 0x1244, 0xe297, 0x5f41, 0x1, 0x1);
        gbc.writeMem(0xa7a5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x42f0);
        EXPECT(gbc.pc(), 0xa7a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a5), 0xcb);
        EXPECT(gbc.readMem(0xa7a6), 0x92);
        // CB 92 02D2
        gbc.setState(0x1d1e, 0x17d8, 0x5100, 0x1f83, 0xb9c1, 0x1477, 0x0, 0x1);
        gbc.writeMem(0x1d1e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x17d8);
        EXPECT(gbc.pc(), 0x1d20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02D3
        gbc.setState(0x7dab, 0xed6c, 0x9490, 0x737f, 0x9156, 0xd374, 0x0, 0x0);
        gbc.writeMem(0x7dab, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xed6c);
        EXPECT(gbc.pc(), 0x7dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02D4
        gbc.setState(0x6e9e, 0xe367, 0x1500, 0xc1b3, 0xd7e6, 0x4d1c, 0x0, 0x0);
        gbc.writeMem(0x6e9e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe367);
        EXPECT(gbc.pc(), 0x6ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02D5
        gbc.setState(0xeb1d, 0xd0ef, 0x3850, 0x8c32, 0x997b, 0xbbd3, 0x1, 0x1);
        gbc.writeMem(0xeb1d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd0ef);
        EXPECT(gbc.pc(), 0xeb1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1d), 0xcb);
        EXPECT(gbc.readMem(0xeb1e), 0x92);
        // CB 92 02D6
        gbc.setState(0x7611, 0xaf9, 0xe810, 0x3f3e, 0xa49, 0x61cb, 0x0, 0x0);
        gbc.writeMem(0x7611, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xaf9);
        EXPECT(gbc.pc(), 0x7613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02D7
        gbc.setState(0x534a, 0xc2fd, 0xfb0, 0x6cfd, 0x75c7, 0xa422, 0x0, 0x1);
        gbc.writeMem(0x534a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc2fd);
        EXPECT(gbc.pc(), 0x534c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02D8
        gbc.setState(0x23f4, 0xa2c8, 0xcf50, 0xa87d, 0xa341, 0x7f50, 0x0, 0x0);
        gbc.writeMem(0x23f4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa2c8);
        EXPECT(gbc.pc(), 0x23f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02D9
        gbc.setState(0xde85, 0x515d, 0x8ce0, 0x7caa, 0x48a, 0x21e, 0x1, 0x1);
        gbc.writeMem(0xde85, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x515d);
        EXPECT(gbc.pc(), 0xde87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde85), 0xcb);
        EXPECT(gbc.readMem(0xde86), 0x92);
        // CB 92 02DB
        gbc.setState(0xabd9, 0x86fe, 0x8fe0, 0xc680, 0x4f49, 0xf690, 0x1, 0x1);
        gbc.writeMem(0xabd9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x86fe);
        EXPECT(gbc.pc(), 0xabdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd9), 0xcb);
        EXPECT(gbc.readMem(0xabda), 0x92);
        // CB 92 02DC
        gbc.setState(0xe2c7, 0xa36d, 0xd9e0, 0xbcc4, 0x1f56, 0x7bd, 0x1, 0x0);
        gbc.writeMem(0xe2c7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa36d);
        EXPECT(gbc.pc(), 0xe2c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c7), 0xcb);
        EXPECT(gbc.readMem(0xe2c8), 0x92);
        // CB 92 02DD
        gbc.setState(0xd9a2, 0x773b, 0xd210, 0x8da7, 0xd990, 0xeadf, 0x0, 0x1);
        gbc.writeMem(0xd9a2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x773b);
        EXPECT(gbc.pc(), 0xd9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a2), 0xcb);
        EXPECT(gbc.readMem(0xd9a3), 0x92);
        // CB 92 02DE
        gbc.setState(0x54c8, 0x6a36, 0xc300, 0x147e, 0x5321, 0x4725, 0x1, 0x0);
        gbc.writeMem(0x54c8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6a36);
        EXPECT(gbc.pc(), 0x54ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02DF
        gbc.setState(0x3d65, 0x4a4e, 0xead0, 0x6345, 0x4d55, 0xa19c, 0x1, 0x1);
        gbc.writeMem(0x3d65, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4a4e);
        EXPECT(gbc.pc(), 0x3d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02E0
        gbc.setState(0x7047, 0x7cf8, 0xc060, 0xd19e, 0xa511, 0x8cab, 0x0, 0x0);
        gbc.writeMem(0x7047, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7cf8);
        EXPECT(gbc.pc(), 0x7049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02E1
        gbc.setState(0xcbbe, 0xaa6c, 0x6d60, 0xe433, 0x2fcf, 0xdd62, 0x0, 0x0);
        gbc.writeMem(0xcbbe, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xaa6c);
        EXPECT(gbc.pc(), 0xcbc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbbe), 0xcb);
        EXPECT(gbc.readMem(0xcbbf), 0x92);
        // CB 92 02E2
        gbc.setState(0xaf46, 0x7fa2, 0x99b0, 0xa739, 0x3d41, 0xa710, 0x0, 0x0);
        gbc.writeMem(0xaf46, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7fa2);
        EXPECT(gbc.pc(), 0xaf48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf46), 0xcb);
        EXPECT(gbc.readMem(0xaf47), 0x92);
        // CB 92 02E3
        gbc.setState(0x4298, 0xbc3, 0x22b0, 0xc1c9, 0xbe18, 0xd9a4, 0x1, 0x1);
        gbc.writeMem(0x4298, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbc3);
        EXPECT(gbc.pc(), 0x429a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02E4
        gbc.setState(0xb72d, 0xae25, 0x2dd0, 0x1a59, 0x6f04, 0x6d68, 0x1, 0x0);
        gbc.writeMem(0xb72d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xae25);
        EXPECT(gbc.pc(), 0xb72f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72d), 0xcb);
        EXPECT(gbc.readMem(0xb72e), 0x92);
        // CB 92 02E5
        gbc.setState(0xe357, 0x59d2, 0x7d0, 0x3bd5, 0x2264, 0xce92, 0x1, 0x1);
        gbc.writeMem(0xe357, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x59d2);
        EXPECT(gbc.pc(), 0xe359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe357), 0xcb);
        EXPECT(gbc.readMem(0xe358), 0x92);
        // CB 92 02E6
        gbc.setState(0xa209, 0x55af, 0xbc0, 0x1bea, 0xb8b9, 0xcc04, 0x0, 0x0);
        gbc.writeMem(0xa209, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x55af);
        EXPECT(gbc.pc(), 0xa20b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa209), 0xcb);
        EXPECT(gbc.readMem(0xa20a), 0x92);
        // CB 92 02E7
        gbc.setState(0x6b65, 0x3c07, 0xc470, 0xabea, 0xbaa1, 0x11d9, 0x1, 0x0);
        gbc.writeMem(0x6b65, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3c07);
        EXPECT(gbc.pc(), 0x6b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02E8
        gbc.setState(0x1742, 0x94be, 0x6850, 0x2e08, 0xc521, 0x7e73, 0x1, 0x0);
        gbc.writeMem(0x1742, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x94be);
        EXPECT(gbc.pc(), 0x1744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02E9
        gbc.setState(0xa500, 0xbf0e, 0xf250, 0xe05a, 0x9a5c, 0x944c, 0x1, 0x0);
        gbc.writeMem(0xa500, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbf0e);
        EXPECT(gbc.pc(), 0xa502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa500), 0xcb);
        EXPECT(gbc.readMem(0xa501), 0x92);
        // CB 92 02EA
        gbc.setState(0xa4a4, 0xf319, 0xc960, 0x2f75, 0xdf40, 0xe01f, 0x0, 0x0);
        gbc.writeMem(0xa4a4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf319);
        EXPECT(gbc.pc(), 0xa4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a4), 0xcb);
        EXPECT(gbc.readMem(0xa4a5), 0x92);
        // CB 92 02EB
        gbc.setState(0xaf59, 0xd8af, 0x3660, 0xce0c, 0xcd46, 0x1369, 0x1, 0x1);
        gbc.writeMem(0xaf59, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd8af);
        EXPECT(gbc.pc(), 0xaf5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf59), 0xcb);
        EXPECT(gbc.readMem(0xaf5a), 0x92);
        // CB 92 02EC
        gbc.setState(0x474, 0x3dc, 0xd2f0, 0xe6c3, 0xdfaa, 0x8a14, 0x0, 0x0);
        gbc.writeMem(0x474, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3dc);
        EXPECT(gbc.pc(), 0x476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02ED
        gbc.setState(0xcfc7, 0xe458, 0x4df0, 0x2ed9, 0xa6d5, 0xcd2b, 0x0, 0x1);
        gbc.writeMem(0xcfc7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe458);
        EXPECT(gbc.pc(), 0xcfc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc7), 0xcb);
        EXPECT(gbc.readMem(0xcfc8), 0x92);
        // CB 92 02EE
        gbc.setState(0x6486, 0x6545, 0x98e0, 0x1588, 0x3bf9, 0x373d, 0x0, 0x1);
        gbc.writeMem(0x6486, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6545);
        EXPECT(gbc.pc(), 0x6488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02EF
        gbc.setState(0x259e, 0x75cc, 0x2e00, 0x61d1, 0x10db, 0x2b0f, 0x0, 0x0);
        gbc.writeMem(0x259e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x75cc);
        EXPECT(gbc.pc(), 0x25a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02F0
        gbc.setState(0x7136, 0xd4e4, 0x2b10, 0xad6e, 0xd570, 0x92be, 0x0, 0x1);
        gbc.writeMem(0x7136, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd4e4);
        EXPECT(gbc.pc(), 0x7138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02F1
        gbc.setState(0x4e1f, 0xd76, 0xb1b0, 0x3496, 0x55cd, 0xdf3, 0x0, 0x0);
        gbc.writeMem(0x4e1f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd76);
        EXPECT(gbc.pc(), 0x4e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02F2
        gbc.setState(0xe5a8, 0x9ef8, 0xb9b0, 0x3e9b, 0x96e1, 0x8afd, 0x1, 0x0);
        gbc.writeMem(0xe5a8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9ef8);
        EXPECT(gbc.pc(), 0xe5aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a8), 0xcb);
        EXPECT(gbc.readMem(0xe5a9), 0x92);
        // CB 92 02F3
        gbc.setState(0x8cc7, 0x9f4d, 0x9c80, 0x43c4, 0x3e6b, 0x214d, 0x1, 0x1);
        gbc.writeMem(0x8cc7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9f4d);
        EXPECT(gbc.pc(), 0x8cc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc7), 0xcb);
        EXPECT(gbc.readMem(0x8cc8), 0x92);
        // CB 92 02F4
        gbc.setState(0x203b, 0x6a84, 0xbd70, 0x53e8, 0xf7e2, 0x38ab, 0x1, 0x1);
        gbc.writeMem(0x203b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6a84);
        EXPECT(gbc.pc(), 0x203d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02F5
        gbc.setState(0x7233, 0x3ee2, 0xca0, 0xb85a, 0x1d19, 0x518c, 0x1, 0x1);
        gbc.writeMem(0x7233, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3ee2);
        EXPECT(gbc.pc(), 0x7235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02F6
        gbc.setState(0x2309, 0x36, 0x3070, 0x16cc, 0xe7a7, 0xa1af, 0x1, 0x1);
        gbc.writeMem(0x2309, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x36);
        EXPECT(gbc.pc(), 0x230b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 02F7
        gbc.setState(0xe008, 0x75fc, 0x230, 0x26c1, 0x5736, 0xe2e2, 0x1, 0x0);
        gbc.writeMem(0xe008, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x75fc);
        EXPECT(gbc.pc(), 0xe00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe008), 0xcb);
        EXPECT(gbc.readMem(0xe009), 0x92);
        // CB 92 02F8
        gbc.setState(0x48f3, 0xa3ea, 0xd2e0, 0x5ba2, 0x7cb0, 0xa906, 0x0, 0x0);
        gbc.writeMem(0x48f3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa3ea);
        EXPECT(gbc.pc(), 0x48f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02F9
        gbc.setState(0xc2e, 0x68fd, 0x180, 0x3912, 0x5a06, 0x15e7, 0x0, 0x0);
        gbc.writeMem(0xc2e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x68fd);
        EXPECT(gbc.pc(), 0xc30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02FA
        gbc.setState(0xe835, 0xc66c, 0xba40, 0x398b, 0x77f9, 0x96c2, 0x1, 0x0);
        gbc.writeMem(0xe835, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc66c);
        EXPECT(gbc.pc(), 0xe837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe835), 0xcb);
        EXPECT(gbc.readMem(0xe836), 0x92);
        // CB 92 02FB
        gbc.setState(0x8eb, 0x5699, 0x7ee0, 0xc674, 0xa7f8, 0xa0b9, 0x1, 0x0);
        gbc.writeMem(0x8eb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5699);
        EXPECT(gbc.pc(), 0x8ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02FC
        gbc.setState(0x33a0, 0xe0b0, 0x7340, 0xce76, 0x2325, 0xae24, 0x0, 0x1);
        gbc.writeMem(0x33a0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe0b0);
        EXPECT(gbc.pc(), 0x33a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 02FD
        gbc.setState(0x9cb4, 0x7fb3, 0x56d0, 0x7535, 0x4d14, 0xbaff, 0x1, 0x0);
        gbc.writeMem(0x9cb4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7fb3);
        EXPECT(gbc.pc(), 0x9cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb4), 0xcb);
        EXPECT(gbc.readMem(0x9cb5), 0x92);
        // CB 92 02FE
        gbc.setState(0xa5e6, 0x2861, 0xdbc0, 0x165, 0xc19e, 0x5711, 0x0, 0x1);
        gbc.writeMem(0xa5e6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2861);
        EXPECT(gbc.pc(), 0xa5e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e6), 0xcb);
        EXPECT(gbc.readMem(0xa5e7), 0x92);
        // CB 92 02FF
        gbc.setState(0xeaf9, 0x7ce4, 0xd9d0, 0x1c15, 0x3b2d, 0x4aa8, 0x1, 0x0);
        gbc.writeMem(0xeaf9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7ce4);
        EXPECT(gbc.pc(), 0xeafb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaf9), 0xcb);
        EXPECT(gbc.readMem(0xeafa), 0x92);
        // CB 92 0300
        gbc.setState(0x2d0d, 0x533b, 0xc880, 0x8da4, 0x9d15, 0x68d2, 0x0, 0x0);
        gbc.writeMem(0x2d0d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x533b);
        EXPECT(gbc.pc(), 0x2d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0301
        gbc.setState(0x86b1, 0x8d24, 0xd800, 0xdf4, 0xcf9c, 0x3106, 0x1, 0x1);
        gbc.writeMem(0x86b1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8d24);
        EXPECT(gbc.pc(), 0x86b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b1), 0xcb);
        EXPECT(gbc.readMem(0x86b2), 0x92);
        // CB 92 0302
        gbc.setState(0xbaf6, 0x34d3, 0x7f80, 0xe94b, 0x8037, 0x714, 0x1, 0x1);
        gbc.writeMem(0xbaf6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x34d3);
        EXPECT(gbc.pc(), 0xbaf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf6), 0xcb);
        EXPECT(gbc.readMem(0xbaf7), 0x92);
        // CB 92 0303
        gbc.setState(0x1044, 0x13e0, 0x1fd0, 0xdc72, 0x4b86, 0xa21, 0x0, 0x0);
        gbc.writeMem(0x1044, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x13e0);
        EXPECT(gbc.pc(), 0x1046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0304
        gbc.setState(0xbd54, 0xbfd3, 0x9270, 0x47fa, 0xc372, 0xc81b, 0x1, 0x0);
        gbc.writeMem(0xbd54, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbfd3);
        EXPECT(gbc.pc(), 0xbd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd54), 0xcb);
        EXPECT(gbc.readMem(0xbd55), 0x92);
        // CB 92 0305
        gbc.setState(0x8059, 0x4112, 0x6d90, 0x6e8a, 0x99e7, 0x398f, 0x1, 0x0);
        gbc.writeMem(0x8059, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4112);
        EXPECT(gbc.pc(), 0x805b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8059), 0xcb);
        EXPECT(gbc.readMem(0x805a), 0x92);
        // CB 92 0306
        gbc.setState(0x8fb1, 0x35b2, 0x2500, 0x4b50, 0xcf0d, 0x93f2, 0x1, 0x0);
        gbc.writeMem(0x8fb1, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x35b2);
        EXPECT(gbc.pc(), 0x8fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb1), 0xcb);
        EXPECT(gbc.readMem(0x8fb2), 0x92);
        // CB 92 0308
        gbc.setState(0x122c, 0xd243, 0xcc70, 0xb210, 0xbcfd, 0x579c, 0x1, 0x0);
        gbc.writeMem(0x122c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd243);
        EXPECT(gbc.pc(), 0x122e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0309
        gbc.setState(0xd605, 0xd0c8, 0xdec0, 0xedab, 0x813, 0x9b19, 0x1, 0x1);
        gbc.writeMem(0xd605, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd0c8);
        EXPECT(gbc.pc(), 0xd607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd605), 0xcb);
        EXPECT(gbc.readMem(0xd606), 0x92);
        // CB 92 030A
        gbc.setState(0x3e1a, 0x928, 0x5310, 0xad8f, 0x63dd, 0xac18, 0x1, 0x1);
        gbc.writeMem(0x3e1a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x928);
        EXPECT(gbc.pc(), 0x3e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 030B
        gbc.setState(0x1af0, 0xa6c9, 0xe0d0, 0x8da8, 0x4ddc, 0x6f23, 0x0, 0x1);
        gbc.writeMem(0x1af0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa6c9);
        EXPECT(gbc.pc(), 0x1af2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 030C
        gbc.setState(0x4617, 0x868b, 0x98f0, 0x993f, 0x87e4, 0x4158, 0x0, 0x0);
        gbc.writeMem(0x4617, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x868b);
        EXPECT(gbc.pc(), 0x4619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 030D
        gbc.setState(0x3f51, 0x82a0, 0x2dc0, 0x7c15, 0x6681, 0xe6d3, 0x0, 0x0);
        gbc.writeMem(0x3f51, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0x3f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 030E
        gbc.setState(0x91b8, 0x68ae, 0x8590, 0x922b, 0x6786, 0x8001, 0x0, 0x0);
        gbc.writeMem(0x91b8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x68ae);
        EXPECT(gbc.pc(), 0x91ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b8), 0xcb);
        EXPECT(gbc.readMem(0x91b9), 0x92);
        // CB 92 030F
        gbc.setState(0xd4fe, 0xc326, 0xa8b0, 0x2559, 0xac3c, 0x248d, 0x1, 0x0);
        gbc.writeMem(0xd4fe, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc326);
        EXPECT(gbc.pc(), 0xd500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4fe), 0xcb);
        EXPECT(gbc.readMem(0xd4ff), 0x92);
        // CB 92 0310
        gbc.setState(0x1ae2, 0x7e8b, 0xa830, 0x2a4c, 0xc367, 0xf1ac, 0x1, 0x1);
        gbc.writeMem(0x1ae2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7e8b);
        EXPECT(gbc.pc(), 0x1ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0311
        gbc.setState(0x9bfc, 0xac74, 0x4510, 0x4863, 0x23c9, 0x6dea, 0x0, 0x1);
        gbc.writeMem(0x9bfc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xac74);
        EXPECT(gbc.pc(), 0x9bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bfc), 0xcb);
        EXPECT(gbc.readMem(0x9bfd), 0x92);
        // CB 92 0312
        gbc.setState(0x97bc, 0x415f, 0xbf40, 0x9616, 0x1158, 0x693f, 0x0, 0x1);
        gbc.writeMem(0x97bc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x415f);
        EXPECT(gbc.pc(), 0x97be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97bc), 0xcb);
        EXPECT(gbc.readMem(0x97bd), 0x92);
        // CB 92 0313
        gbc.setState(0x6984, 0x7ef6, 0x8ea0, 0xf041, 0x9f47, 0x3ad6, 0x0, 0x1);
        gbc.writeMem(0x6984, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7ef6);
        EXPECT(gbc.pc(), 0x6986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0314
        gbc.setState(0x8887, 0x66d1, 0x9f10, 0x366f, 0x598, 0x565d, 0x1, 0x0);
        gbc.writeMem(0x8887, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x66d1);
        EXPECT(gbc.pc(), 0x8889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8887), 0xcb);
        EXPECT(gbc.readMem(0x8888), 0x92);
        // CB 92 0315
        gbc.setState(0x1625, 0x5033, 0xa990, 0x68f3, 0x4b8e, 0xd0d0, 0x1, 0x1);
        gbc.writeMem(0x1625, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5033);
        EXPECT(gbc.pc(), 0x1627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0316
        gbc.setState(0xae3d, 0xc071, 0x31d0, 0xe80e, 0xcb0d, 0x2632, 0x1, 0x1);
        gbc.writeMem(0xae3d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc071);
        EXPECT(gbc.pc(), 0xae3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae3d), 0xcb);
        EXPECT(gbc.readMem(0xae3e), 0x92);
        // CB 92 0317
        gbc.setState(0xc57f, 0x270e, 0xfb0, 0x634a, 0xe901, 0xafa3, 0x1, 0x0);
        gbc.writeMem(0xc57f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x270e);
        EXPECT(gbc.pc(), 0xc581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc57f), 0xcb);
        EXPECT(gbc.readMem(0xc580), 0x92);
        // CB 92 0318
        gbc.setState(0xeafa, 0x7cf6, 0x2670, 0x8c18, 0x84c6, 0xbd5, 0x0, 0x1);
        gbc.writeMem(0xeafa, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7cf6);
        EXPECT(gbc.pc(), 0xeafc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeafa), 0xcb);
        EXPECT(gbc.readMem(0xeafb), 0x92);
        // CB 92 0319
        gbc.setState(0xed98, 0xbb8d, 0x1a40, 0xcaec, 0x6213, 0x2805, 0x1, 0x1);
        gbc.writeMem(0xed98, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbb8d);
        EXPECT(gbc.pc(), 0xed9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed98), 0xcb);
        EXPECT(gbc.readMem(0xed99), 0x92);
        // CB 92 031A
        gbc.setState(0x9438, 0x6ba4, 0x3a30, 0x16cf, 0xd09c, 0x97d, 0x0, 0x1);
        gbc.writeMem(0x9438, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6ba4);
        EXPECT(gbc.pc(), 0x943a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9438), 0xcb);
        EXPECT(gbc.readMem(0x9439), 0x92);
        // CB 92 031B
        gbc.setState(0x7a7f, 0xc7d, 0x630, 0xeac7, 0x8ac, 0x1d57, 0x1, 0x0);
        gbc.writeMem(0x7a7f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc7d);
        EXPECT(gbc.pc(), 0x7a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 031C
        gbc.setState(0xc6f8, 0x9272, 0xa8c0, 0x51fa, 0xaf5d, 0x698e, 0x1, 0x1);
        gbc.writeMem(0xc6f8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9272);
        EXPECT(gbc.pc(), 0xc6fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f8), 0xcb);
        EXPECT(gbc.readMem(0xc6f9), 0x92);
        // CB 92 031D
        gbc.setState(0x3611, 0xf053, 0xe200, 0x9494, 0xb216, 0xa96b, 0x0, 0x0);
        gbc.writeMem(0x3611, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf053);
        EXPECT(gbc.pc(), 0x3613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 031E
        gbc.setState(0xa096, 0x5968, 0x2050, 0x2283, 0x5061, 0x1d8d, 0x0, 0x1);
        gbc.writeMem(0xa096, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5968);
        EXPECT(gbc.pc(), 0xa098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa096), 0xcb);
        EXPECT(gbc.readMem(0xa097), 0x92);
        // CB 92 031F
        gbc.setState(0x2a09, 0x4db8, 0x2da0, 0x4209, 0x6fc0, 0x1d08, 0x1, 0x0);
        gbc.writeMem(0x2a09, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4db8);
        EXPECT(gbc.pc(), 0x2a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0320
        gbc.setState(0x7668, 0xb24e, 0xbc50, 0x2318, 0x6793, 0x5807, 0x0, 0x0);
        gbc.writeMem(0x7668, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb24e);
        EXPECT(gbc.pc(), 0x766a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0321
        gbc.setState(0x4074, 0xfb08, 0x8560, 0x563c, 0x485c, 0x992d, 0x0, 0x0);
        gbc.writeMem(0x4074, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfb08);
        EXPECT(gbc.pc(), 0x4076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0322
        gbc.setState(0x5276, 0x9b66, 0x57a0, 0x4142, 0x975b, 0x68d2, 0x1, 0x0);
        gbc.writeMem(0x5276, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9b66);
        EXPECT(gbc.pc(), 0x5278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0323
        gbc.setState(0x58f4, 0xf5c7, 0x87a0, 0x60ea, 0xbd51, 0xc33f, 0x1, 0x1);
        gbc.writeMem(0x58f4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf5c7);
        EXPECT(gbc.pc(), 0x58f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0324
        gbc.setState(0xcc0, 0xa9f3, 0x170, 0x4545, 0xb12e, 0x9be6, 0x1, 0x1);
        gbc.writeMem(0xcc0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa9f3);
        EXPECT(gbc.pc(), 0xcc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0325
        gbc.setState(0xf31, 0x24b0, 0x4490, 0x1dd8, 0x1461, 0x25ac, 0x0, 0x1);
        gbc.writeMem(0xf31, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x24b0);
        EXPECT(gbc.pc(), 0xf33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0326
        gbc.setState(0xa69, 0x958e, 0xc650, 0xc152, 0xa28e, 0x9bea, 0x0, 0x1);
        gbc.writeMem(0xa69, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x958e);
        EXPECT(gbc.pc(), 0xa6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0327
        gbc.setState(0xcdea, 0xa7f7, 0x4b90, 0x7d01, 0x9d53, 0x7ce8, 0x1, 0x0);
        gbc.writeMem(0xcdea, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa7f7);
        EXPECT(gbc.pc(), 0xcdec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdea), 0xcb);
        EXPECT(gbc.readMem(0xcdeb), 0x92);
        // CB 92 0328
        gbc.setState(0xb615, 0xb10f, 0x93a0, 0x62e5, 0xc4ed, 0x191, 0x1, 0x0);
        gbc.writeMem(0xb615, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb10f);
        EXPECT(gbc.pc(), 0xb617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb615), 0xcb);
        EXPECT(gbc.readMem(0xb616), 0x92);
        // CB 92 0329
        gbc.setState(0x6618, 0x986b, 0x8b90, 0xfab6, 0x7a3f, 0x9ff6, 0x1, 0x1);
        gbc.writeMem(0x6618, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x986b);
        EXPECT(gbc.pc(), 0x661a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 032A
        gbc.setState(0xd03a, 0xd530, 0xbd00, 0x915b, 0x42c5, 0x709b, 0x1, 0x0);
        gbc.writeMem(0xd03a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd530);
        EXPECT(gbc.pc(), 0xd03c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd03a), 0xcb);
        EXPECT(gbc.readMem(0xd03b), 0x92);
        // CB 92 032B
        gbc.setState(0x4b65, 0x1db, 0x35b0, 0x4249, 0xb1e8, 0x59ba, 0x1, 0x1);
        gbc.writeMem(0x4b65, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1db);
        EXPECT(gbc.pc(), 0x4b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 032C
        gbc.setState(0x4a2a, 0x96be, 0x4c50, 0xfedd, 0x8a7, 0x3f60, 0x1, 0x0);
        gbc.writeMem(0x4a2a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x96be);
        EXPECT(gbc.pc(), 0x4a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 032D
        gbc.setState(0x97f8, 0xe6a7, 0xc730, 0x9f96, 0xf246, 0xf6df, 0x0, 0x1);
        gbc.writeMem(0x97f8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe6a7);
        EXPECT(gbc.pc(), 0x97fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f8), 0xcb);
        EXPECT(gbc.readMem(0x97f9), 0x92);
        // CB 92 032E
        gbc.setState(0x21cf, 0x82a2, 0xda50, 0xb4bd, 0xad35, 0x5e1b, 0x1, 0x0);
        gbc.writeMem(0x21cf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x82a2);
        EXPECT(gbc.pc(), 0x21d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 032F
        gbc.setState(0xa3eb, 0x5de2, 0xc3c0, 0xd16d, 0x3fce, 0x915e, 0x0, 0x0);
        gbc.writeMem(0xa3eb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5de2);
        EXPECT(gbc.pc(), 0xa3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3eb), 0xcb);
        EXPECT(gbc.readMem(0xa3ec), 0x92);
        // CB 92 0330
        gbc.setState(0xa597, 0x931e, 0x3140, 0xbc23, 0xa688, 0xddc7, 0x0, 0x1);
        gbc.writeMem(0xa597, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x931e);
        EXPECT(gbc.pc(), 0xa599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa597), 0xcb);
        EXPECT(gbc.readMem(0xa598), 0x92);
        // CB 92 0331
        gbc.setState(0x76a9, 0xddce, 0x7fc0, 0xc8d0, 0x5c14, 0x9d1c, 0x1, 0x1);
        gbc.writeMem(0x76a9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xddce);
        EXPECT(gbc.pc(), 0x76ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0332
        gbc.setState(0x978a, 0xf7dd, 0xd390, 0x56ea, 0x56b0, 0x7eb4, 0x0, 0x0);
        gbc.writeMem(0x978a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf7dd);
        EXPECT(gbc.pc(), 0x978c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978a), 0xcb);
        EXPECT(gbc.readMem(0x978b), 0x92);
        // CB 92 0333
        gbc.setState(0xe188, 0x9cc1, 0x7fd0, 0xd101, 0xb1c3, 0x9690, 0x0, 0x0);
        gbc.writeMem(0xe188, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9cc1);
        EXPECT(gbc.pc(), 0xe18a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe188), 0xcb);
        EXPECT(gbc.readMem(0xe189), 0x92);
        // CB 92 0334
        gbc.setState(0x484f, 0xfd88, 0xfea0, 0x89be, 0xab4f, 0xbc6f, 0x1, 0x0);
        gbc.writeMem(0x484f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfd88);
        EXPECT(gbc.pc(), 0x4851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0335
        gbc.setState(0x24cf, 0x5631, 0xebb0, 0x7812, 0x9ace, 0x1000, 0x1, 0x0);
        gbc.writeMem(0x24cf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5631);
        EXPECT(gbc.pc(), 0x24d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0336
        gbc.setState(0x13bc, 0x8c1f, 0xb490, 0x7bd1, 0xd32b, 0x82e9, 0x0, 0x1);
        gbc.writeMem(0x13bc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8c1f);
        EXPECT(gbc.pc(), 0x13be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0338
        gbc.setState(0xb0b7, 0x1468, 0x85a0, 0xc43, 0xe1c4, 0xdd44, 0x0, 0x0);
        gbc.writeMem(0xb0b7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1468);
        EXPECT(gbc.pc(), 0xb0b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b7), 0xcb);
        EXPECT(gbc.readMem(0xb0b8), 0x92);
        // CB 92 0339
        gbc.setState(0x1b0e, 0x4cbd, 0xd680, 0x49ae, 0x7d9a, 0xfea7, 0x0, 0x0);
        gbc.writeMem(0x1b0e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4cbd);
        EXPECT(gbc.pc(), 0x1b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 033B
        gbc.setState(0x1784, 0xa07e, 0x27d0, 0x76a6, 0x66d9, 0x1ce, 0x1, 0x0);
        gbc.writeMem(0x1784, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa07e);
        EXPECT(gbc.pc(), 0x1786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 033C
        gbc.setState(0xccc4, 0x5433, 0x8e60, 0x826e, 0x543a, 0x82ed, 0x0, 0x0);
        gbc.writeMem(0xccc4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5433);
        EXPECT(gbc.pc(), 0xccc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc4), 0xcb);
        EXPECT(gbc.readMem(0xccc5), 0x92);
        // CB 92 033D
        gbc.setState(0x206e, 0x6d23, 0x1c90, 0xea3c, 0x6061, 0x8815, 0x1, 0x0);
        gbc.writeMem(0x206e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6d23);
        EXPECT(gbc.pc(), 0x2070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 033E
        gbc.setState(0x1a7, 0x5eab, 0x33a0, 0xa973, 0xb361, 0xaf39, 0x0, 0x1);
        gbc.writeMem(0x1a7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5eab);
        EXPECT(gbc.pc(), 0x1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 033F
        gbc.setState(0xa565, 0x83ce, 0xc730, 0x44e8, 0x5843, 0xe976, 0x1, 0x1);
        gbc.writeMem(0xa565, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x83ce);
        EXPECT(gbc.pc(), 0xa567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa565), 0xcb);
        EXPECT(gbc.readMem(0xa566), 0x92);
        // CB 92 0340
        gbc.setState(0x8cd4, 0xd959, 0xa500, 0x721e, 0x861e, 0xbf07, 0x1, 0x1);
        gbc.writeMem(0x8cd4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd959);
        EXPECT(gbc.pc(), 0x8cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd4), 0xcb);
        EXPECT(gbc.readMem(0x8cd5), 0x92);
        // CB 92 0341
        gbc.setState(0x7819, 0x9e9c, 0x2550, 0xab3, 0x2e45, 0x97b8, 0x1, 0x1);
        gbc.writeMem(0x7819, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9e9c);
        EXPECT(gbc.pc(), 0x781b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0342
        gbc.setState(0xd52f, 0x703b, 0xaec0, 0x98e6, 0xc3dc, 0x7396, 0x1, 0x0);
        gbc.writeMem(0xd52f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x703b);
        EXPECT(gbc.pc(), 0xd531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52f), 0xcb);
        EXPECT(gbc.readMem(0xd530), 0x92);
        // CB 92 0344
        gbc.setState(0x2393, 0x5c1c, 0xee50, 0xaec9, 0x20ae, 0x4b10, 0x0, 0x0);
        gbc.writeMem(0x2393, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5c1c);
        EXPECT(gbc.pc(), 0x2395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0345
        gbc.setState(0x7057, 0xe051, 0x9640, 0xd62e, 0xa7c5, 0xaa0, 0x0, 0x1);
        gbc.writeMem(0x7057, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe051);
        EXPECT(gbc.pc(), 0x7059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0346
        gbc.setState(0x2328, 0x5d01, 0x8b80, 0xe0b3, 0xf5f4, 0xadf5, 0x0, 0x1);
        gbc.writeMem(0x2328, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5d01);
        EXPECT(gbc.pc(), 0x232a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0347
        gbc.setState(0x6c5d, 0x4ebe, 0x6d80, 0xeeb7, 0x7558, 0xddb7, 0x1, 0x0);
        gbc.writeMem(0x6c5d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4ebe);
        EXPECT(gbc.pc(), 0x6c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0348
        gbc.setState(0xac7a, 0xebe5, 0xfa90, 0x5aaf, 0xc7e2, 0xd47e, 0x1, 0x0);
        gbc.writeMem(0xac7a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xebe5);
        EXPECT(gbc.pc(), 0xac7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7a), 0xcb);
        EXPECT(gbc.readMem(0xac7b), 0x92);
        // CB 92 034A
        gbc.setState(0xc9ac, 0x7f9, 0xc810, 0x5baf, 0x63ee, 0x3c6a, 0x1, 0x0);
        gbc.writeMem(0xc9ac, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7f9);
        EXPECT(gbc.pc(), 0xc9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ac), 0xcb);
        EXPECT(gbc.readMem(0xc9ad), 0x92);
        // CB 92 034B
        gbc.setState(0xd89c, 0xd6f, 0x5590, 0xf3bb, 0xfbfc, 0xcde0, 0x0, 0x1);
        gbc.writeMem(0xd89c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd6f);
        EXPECT(gbc.pc(), 0xd89e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89c), 0xcb);
        EXPECT(gbc.readMem(0xd89d), 0x92);
        // CB 92 034C
        gbc.setState(0x3720, 0x56eb, 0xdb50, 0xa14c, 0x66a6, 0x74, 0x1, 0x0);
        gbc.writeMem(0x3720, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x56eb);
        EXPECT(gbc.pc(), 0x3722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 034D
        gbc.setState(0x817a, 0xe4f2, 0xdd20, 0x64c4, 0xc2b7, 0x21e9, 0x0, 0x1);
        gbc.writeMem(0x817a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe4f2);
        EXPECT(gbc.pc(), 0x817c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817a), 0xcb);
        EXPECT(gbc.readMem(0x817b), 0x92);
        // CB 92 034E
        gbc.setState(0x3afd, 0xe1c7, 0x1ec0, 0x2e42, 0xdd92, 0x2ed8, 0x1, 0x1);
        gbc.writeMem(0x3afd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe1c7);
        EXPECT(gbc.pc(), 0x3aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 034F
        gbc.setState(0xcea8, 0x77f1, 0x74e0, 0x1c7d, 0xdb0a, 0x7c55, 0x1, 0x1);
        gbc.writeMem(0xcea8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x77f1);
        EXPECT(gbc.pc(), 0xceaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea8), 0xcb);
        EXPECT(gbc.readMem(0xcea9), 0x92);
        // CB 92 0350
        gbc.setState(0x84cd, 0x1ab6, 0xbfc0, 0x807d, 0x8776, 0x9d58, 0x1, 0x0);
        gbc.writeMem(0x84cd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1ab6);
        EXPECT(gbc.pc(), 0x84cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cd), 0xcb);
        EXPECT(gbc.readMem(0x84ce), 0x92);
        // CB 92 0351
        gbc.setState(0xbf79, 0xf73d, 0xc630, 0xaeeb, 0xea4d, 0x3d3e, 0x1, 0x1);
        gbc.writeMem(0xbf79, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf73d);
        EXPECT(gbc.pc(), 0xbf7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf79), 0xcb);
        EXPECT(gbc.readMem(0xbf7a), 0x92);
        // CB 92 0352
        gbc.setState(0x3eb6, 0x5c6b, 0x8d70, 0x857b, 0x934a, 0x131e, 0x0, 0x1);
        gbc.writeMem(0x3eb6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5c6b);
        EXPECT(gbc.pc(), 0x3eb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0353
        gbc.setState(0xd516, 0xc28c, 0x2d50, 0x7971, 0xee6, 0x94b9, 0x1, 0x1);
        gbc.writeMem(0xd516, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc28c);
        EXPECT(gbc.pc(), 0xd518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd516), 0xcb);
        EXPECT(gbc.readMem(0xd517), 0x92);
        // CB 92 0354
        gbc.setState(0x70e, 0xf748, 0xdee0, 0xd814, 0x1a05, 0xd79c, 0x1, 0x1);
        gbc.writeMem(0x70e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf748);
        EXPECT(gbc.pc(), 0x710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0355
        gbc.setState(0x37bc, 0x282d, 0x3170, 0x803f, 0xef84, 0x2931, 0x1, 0x0);
        gbc.writeMem(0x37bc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x282d);
        EXPECT(gbc.pc(), 0x37be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0356
        gbc.setState(0x77e4, 0xcb2a, 0x7480, 0x152b, 0x2720, 0x9ca5, 0x1, 0x1);
        gbc.writeMem(0x77e4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcb2a);
        EXPECT(gbc.pc(), 0x77e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0357
        gbc.setState(0xe6d6, 0xe4e1, 0x41c0, 0x65a7, 0x4af2, 0xc54d, 0x1, 0x1);
        gbc.writeMem(0xe6d6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe4e1);
        EXPECT(gbc.pc(), 0xe6d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d6), 0xcb);
        EXPECT(gbc.readMem(0xe6d7), 0x92);
        // CB 92 0358
        gbc.setState(0x3ab, 0x9caf, 0x570, 0x5495, 0xdc23, 0x336d, 0x1, 0x0);
        gbc.writeMem(0x3ab, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9caf);
        EXPECT(gbc.pc(), 0x3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0359
        gbc.setState(0x1f08, 0x2046, 0x8230, 0x535, 0x4686, 0x5468, 0x0, 0x1);
        gbc.writeMem(0x1f08, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2046);
        EXPECT(gbc.pc(), 0x1f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 035A
        gbc.setState(0xb02, 0x5a73, 0x6ab0, 0x70f9, 0x34cf, 0xae6, 0x0, 0x0);
        gbc.writeMem(0xb02, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5a73);
        EXPECT(gbc.pc(), 0xb04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 035B
        gbc.setState(0x3ecf, 0xf678, 0xa840, 0x468c, 0x6ead, 0x1b5b, 0x1, 0x1);
        gbc.writeMem(0x3ecf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf678);
        EXPECT(gbc.pc(), 0x3ed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 035C
        gbc.setState(0xa440, 0x29cc, 0x9fa0, 0x7f9d, 0xc2c1, 0x884d, 0x1, 0x0);
        gbc.writeMem(0xa440, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x29cc);
        EXPECT(gbc.pc(), 0xa442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa440), 0xcb);
        EXPECT(gbc.readMem(0xa441), 0x92);
        // CB 92 035D
        gbc.setState(0xa438, 0xd9e9, 0xf8b0, 0xd54f, 0x6e23, 0xbb96, 0x0, 0x0);
        gbc.writeMem(0xa438, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd9e9);
        EXPECT(gbc.pc(), 0xa43a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa438), 0xcb);
        EXPECT(gbc.readMem(0xa439), 0x92);
        // CB 92 035E
        gbc.setState(0x4d42, 0xe939, 0xeaf0, 0x81ef, 0xd132, 0x3f43, 0x0, 0x1);
        gbc.writeMem(0x4d42, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe939);
        EXPECT(gbc.pc(), 0x4d44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 035F
        gbc.setState(0x6c8b, 0x71c0, 0x59d0, 0xdc2c, 0x7300, 0xf7df, 0x1, 0x0);
        gbc.writeMem(0x6c8b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x71c0);
        EXPECT(gbc.pc(), 0x6c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0360
        gbc.setState(0xcb2c, 0x39d1, 0x4310, 0xd752, 0xbc22, 0xbbea, 0x1, 0x1);
        gbc.writeMem(0xcb2c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x39d1);
        EXPECT(gbc.pc(), 0xcb2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2c), 0xcb);
        EXPECT(gbc.readMem(0xcb2d), 0x92);
        // CB 92 0361
        gbc.setState(0x2f53, 0xc38c, 0x7c20, 0xf6aa, 0xf6d7, 0xb2f5, 0x1, 0x1);
        gbc.writeMem(0x2f53, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc38c);
        EXPECT(gbc.pc(), 0x2f55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0362
        gbc.setState(0xd7a0, 0x3685, 0x7960, 0x389f, 0x2cec, 0x5d27, 0x1, 0x1);
        gbc.writeMem(0xd7a0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3685);
        EXPECT(gbc.pc(), 0xd7a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a0), 0xcb);
        EXPECT(gbc.readMem(0xd7a1), 0x92);
        // CB 92 0363
        gbc.setState(0xc574, 0x2e23, 0x1a00, 0xcb6c, 0x3590, 0xcf0e, 0x0, 0x0);
        gbc.writeMem(0xc574, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2e23);
        EXPECT(gbc.pc(), 0xc576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc574), 0xcb);
        EXPECT(gbc.readMem(0xc575), 0x92);
        // CB 92 0364
        gbc.setState(0xab1b, 0xdc86, 0x3c30, 0xfdbb, 0xa461, 0x7d87, 0x0, 0x0);
        gbc.writeMem(0xab1b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdc86);
        EXPECT(gbc.pc(), 0xab1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1b), 0xcb);
        EXPECT(gbc.readMem(0xab1c), 0x92);
        // CB 92 0365
        gbc.setState(0x4fac, 0xc67b, 0x3c20, 0x38c3, 0xadb4, 0x1045, 0x0, 0x0);
        gbc.writeMem(0x4fac, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc67b);
        EXPECT(gbc.pc(), 0x4fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0366
        gbc.setState(0xd696, 0xdcc5, 0x81f0, 0xf419, 0x67de, 0x7a50, 0x1, 0x1);
        gbc.writeMem(0xd696, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdcc5);
        EXPECT(gbc.pc(), 0xd698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd696), 0xcb);
        EXPECT(gbc.readMem(0xd697), 0x92);
        // CB 92 0367
        gbc.setState(0x9915, 0x300c, 0x4af0, 0x65fa, 0x4329, 0xa9be, 0x0, 0x1);
        gbc.writeMem(0x9915, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x300c);
        EXPECT(gbc.pc(), 0x9917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9915), 0xcb);
        EXPECT(gbc.readMem(0x9916), 0x92);
        // CB 92 0368
        gbc.setState(0x8b14, 0x65f6, 0xc600, 0x6985, 0x2626, 0x8e5e, 0x0, 0x1);
        gbc.writeMem(0x8b14, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x65f6);
        EXPECT(gbc.pc(), 0x8b16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b14), 0xcb);
        EXPECT(gbc.readMem(0x8b15), 0x92);
        // CB 92 0369
        gbc.setState(0xb1b4, 0x5699, 0x7b00, 0x88c2, 0x9bc5, 0x5a8b, 0x1, 0x1);
        gbc.writeMem(0xb1b4, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5699);
        EXPECT(gbc.pc(), 0xb1b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b4), 0xcb);
        EXPECT(gbc.readMem(0xb1b5), 0x92);
        // CB 92 036A
        gbc.setState(0x3695, 0x9123, 0x77b0, 0xefd9, 0x9204, 0x4289, 0x0, 0x1);
        gbc.writeMem(0x3695, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9123);
        EXPECT(gbc.pc(), 0x3697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 036B
        gbc.setState(0x253a, 0xd983, 0xab30, 0xe85, 0xcb4f, 0xc978, 0x1, 0x1);
        gbc.writeMem(0x253a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd983);
        EXPECT(gbc.pc(), 0x253c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 036C
        gbc.setState(0x5190, 0x9349, 0x8100, 0x5587, 0xac19, 0xbddf, 0x1, 0x0);
        gbc.writeMem(0x5190, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9349);
        EXPECT(gbc.pc(), 0x5192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 036D
        gbc.setState(0xe380, 0x4098, 0xa230, 0xd9e, 0x2167, 0x40f7, 0x1, 0x0);
        gbc.writeMem(0xe380, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4098);
        EXPECT(gbc.pc(), 0xe382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe380), 0xcb);
        EXPECT(gbc.readMem(0xe381), 0x92);
        // CB 92 036E
        gbc.setState(0xa449, 0x7fdb, 0x7010, 0xed67, 0x3132, 0xa4a4, 0x0, 0x0);
        gbc.writeMem(0xa449, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7fdb);
        EXPECT(gbc.pc(), 0xa44b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa449), 0xcb);
        EXPECT(gbc.readMem(0xa44a), 0x92);
        // CB 92 036F
        gbc.setState(0x5fd7, 0x1ed1, 0xb640, 0x529a, 0xd257, 0x3663, 0x0, 0x1);
        gbc.writeMem(0x5fd7, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1ed1);
        EXPECT(gbc.pc(), 0x5fd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0370
        gbc.setState(0x4e49, 0x1b1, 0x7d90, 0xf5ab, 0xa5f9, 0x9ca8, 0x0, 0x1);
        gbc.writeMem(0x4e49, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1b1);
        EXPECT(gbc.pc(), 0x4e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0371
        gbc.setState(0xc2f6, 0x1aec, 0x6700, 0xa246, 0x4b90, 0x7bad, 0x0, 0x1);
        gbc.writeMem(0xc2f6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1aec);
        EXPECT(gbc.pc(), 0xc2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f6), 0xcb);
        EXPECT(gbc.readMem(0xc2f7), 0x92);
        // CB 92 0372
        gbc.setState(0x87a0, 0x725e, 0x8c50, 0x9d1d, 0x673a, 0x2ce3, 0x0, 0x1);
        gbc.writeMem(0x87a0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x725e);
        EXPECT(gbc.pc(), 0x87a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a0), 0xcb);
        EXPECT(gbc.readMem(0x87a1), 0x92);
        // CB 92 0373
        gbc.setState(0xb7b5, 0xa15a, 0x4000, 0x330d, 0x3cbd, 0xd5fa, 0x1, 0x1);
        gbc.writeMem(0xb7b5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa15a);
        EXPECT(gbc.pc(), 0xb7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b5), 0xcb);
        EXPECT(gbc.readMem(0xb7b6), 0x92);
        // CB 92 0374
        gbc.setState(0x6a9e, 0xcc3d, 0xa8f0, 0x4f5d, 0xe3c2, 0xc4c1, 0x0, 0x0);
        gbc.writeMem(0x6a9e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcc3d);
        EXPECT(gbc.pc(), 0x6aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0375
        gbc.setState(0xa167, 0x9f36, 0xd340, 0x6d7d, 0x2e38, 0x189e, 0x0, 0x0);
        gbc.writeMem(0xa167, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9f36);
        EXPECT(gbc.pc(), 0xa169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa167), 0xcb);
        EXPECT(gbc.readMem(0xa168), 0x92);
        // CB 92 0376
        gbc.setState(0x7c0, 0xca15, 0xe8d0, 0xe1e8, 0x9793, 0x8a0d, 0x0, 0x1);
        gbc.writeMem(0x7c0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xca15);
        EXPECT(gbc.pc(), 0x7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0377
        gbc.setState(0xe39, 0x79b1, 0x1160, 0x8c2b, 0xb216, 0xb436, 0x0, 0x1);
        gbc.writeMem(0xe39, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x79b1);
        EXPECT(gbc.pc(), 0xe3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0378
        gbc.setState(0x5882, 0xf27c, 0xf140, 0x2dd, 0xf24a, 0x70dc, 0x0, 0x0);
        gbc.writeMem(0x5882, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf27c);
        EXPECT(gbc.pc(), 0x5884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0379
        gbc.setState(0x1b3, 0x4f95, 0xba30, 0xf5ce, 0xc41a, 0xa6f7, 0x0, 0x1);
        gbc.writeMem(0x1b3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4f95);
        EXPECT(gbc.pc(), 0x1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 037A
        gbc.setState(0x5be2, 0x707e, 0x5f20, 0xe4aa, 0x2c93, 0x54b5, 0x0, 0x0);
        gbc.writeMem(0x5be2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x707e);
        EXPECT(gbc.pc(), 0x5be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 037B
        gbc.setState(0xe4bc, 0x64a2, 0xa4c0, 0x31, 0x20b1, 0x5cc3, 0x0, 0x1);
        gbc.writeMem(0xe4bc, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x64a2);
        EXPECT(gbc.pc(), 0xe4be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4bc), 0xcb);
        EXPECT(gbc.readMem(0xe4bd), 0x92);
        // CB 92 037C
        gbc.setState(0x899a, 0xaf3b, 0x58b0, 0xf765, 0xb678, 0x9b99, 0x0, 0x0);
        gbc.writeMem(0x899a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xaf3b);
        EXPECT(gbc.pc(), 0x899c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x899a), 0xcb);
        EXPECT(gbc.readMem(0x899b), 0x92);
        // CB 92 037D
        gbc.setState(0xe14, 0x178f, 0xf520, 0x8d3a, 0xbea5, 0x4fad, 0x0, 0x1);
        gbc.writeMem(0xe14, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x178f);
        EXPECT(gbc.pc(), 0xe16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 037E
        gbc.setState(0xbe66, 0x58e2, 0x55e0, 0x993c, 0xac50, 0xed68, 0x1, 0x1);
        gbc.writeMem(0xbe66, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x58e2);
        EXPECT(gbc.pc(), 0xbe68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe66), 0xcb);
        EXPECT(gbc.readMem(0xbe67), 0x92);
        // CB 92 037F
        gbc.setState(0xc332, 0xc55a, 0x1e20, 0x3639, 0x8fbf, 0x7c98, 0x1, 0x0);
        gbc.writeMem(0xc332, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc55a);
        EXPECT(gbc.pc(), 0xc334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc332), 0xcb);
        EXPECT(gbc.readMem(0xc333), 0x92);
        // CB 92 0380
        gbc.setState(0x693, 0x6e56, 0x1dd0, 0xde19, 0x7c9d, 0x6c03, 0x0, 0x1);
        gbc.writeMem(0x693, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6e56);
        EXPECT(gbc.pc(), 0x695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0381
        gbc.setState(0x9c76, 0xe8ec, 0x5860, 0xd5a2, 0xaf30, 0x1674, 0x1, 0x0);
        gbc.writeMem(0x9c76, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe8ec);
        EXPECT(gbc.pc(), 0x9c78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c76), 0xcb);
        EXPECT(gbc.readMem(0x9c77), 0x92);
        // CB 92 0382
        gbc.setState(0x658, 0x9432, 0x1060, 0x9c12, 0x1921, 0xaf, 0x0, 0x1);
        gbc.writeMem(0x658, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9432);
        EXPECT(gbc.pc(), 0x65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0383
        gbc.setState(0x6acb, 0xea79, 0xbd90, 0x2c01, 0xe5ba, 0xfca0, 0x0, 0x0);
        gbc.writeMem(0x6acb, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xea79);
        EXPECT(gbc.pc(), 0x6acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0384
        gbc.setState(0x1d86, 0x7ea4, 0x8200, 0x2f57, 0x8a73, 0x2a94, 0x0, 0x0);
        gbc.writeMem(0x1d86, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7ea4);
        EXPECT(gbc.pc(), 0x1d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0385
        gbc.setState(0x36cf, 0x1a4e, 0x8dd0, 0x3df4, 0x4703, 0xb975, 0x0, 0x1);
        gbc.writeMem(0x36cf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1a4e);
        EXPECT(gbc.pc(), 0x36d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0386
        gbc.setState(0x9014, 0xe209, 0x54d0, 0x9d3c, 0xdea1, 0x1ddd, 0x0, 0x1);
        gbc.writeMem(0x9014, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe209);
        EXPECT(gbc.pc(), 0x9016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9014), 0xcb);
        EXPECT(gbc.readMem(0x9015), 0x92);
        // CB 92 0387
        gbc.setState(0x45cf, 0xa31a, 0x3b80, 0x6af8, 0x6b06, 0x1ab7, 0x0, 0x1);
        gbc.writeMem(0x45cf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa31a);
        EXPECT(gbc.pc(), 0x45d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0388
        gbc.setState(0xcdf8, 0xea35, 0x34f0, 0x665f, 0xa83b, 0x467e, 0x1, 0x1);
        gbc.writeMem(0xcdf8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xea35);
        EXPECT(gbc.pc(), 0xcdfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf8), 0xcb);
        EXPECT(gbc.readMem(0xcdf9), 0x92);
        // CB 92 0389
        gbc.setState(0xb77a, 0x3e0c, 0x5d00, 0xc946, 0xc7e9, 0x6931, 0x1, 0x0);
        gbc.writeMem(0xb77a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3e0c);
        EXPECT(gbc.pc(), 0xb77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77a), 0xcb);
        EXPECT(gbc.readMem(0xb77b), 0x92);
        // CB 92 038A
        gbc.setState(0xa39a, 0x3e7b, 0x4110, 0x6ce2, 0x73c8, 0x1b68, 0x1, 0x0);
        gbc.writeMem(0xa39a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3e7b);
        EXPECT(gbc.pc(), 0xa39c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa39a), 0xcb);
        EXPECT(gbc.readMem(0xa39b), 0x92);
        // CB 92 038B
        gbc.setState(0x3191, 0x8d58, 0x8830, 0xf27b, 0xaf97, 0xb6ee, 0x1, 0x1);
        gbc.writeMem(0x3191, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8d58);
        EXPECT(gbc.pc(), 0x3193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 038C
        gbc.setState(0x2f0c, 0x9dc1, 0x4350, 0xed52, 0xda8b, 0xd290, 0x0, 0x0);
        gbc.writeMem(0x2f0c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9dc1);
        EXPECT(gbc.pc(), 0x2f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 038D
        gbc.setState(0xb548, 0xf08, 0x5910, 0x2b51, 0x351, 0x97cc, 0x0, 0x0);
        gbc.writeMem(0xb548, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf08);
        EXPECT(gbc.pc(), 0xb54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb548), 0xcb);
        EXPECT(gbc.readMem(0xb549), 0x92);
        // CB 92 038E
        gbc.setState(0x370, 0xc379, 0xc590, 0x19f7, 0x303c, 0xb352, 0x0, 0x0);
        gbc.writeMem(0x370, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc379);
        EXPECT(gbc.pc(), 0x372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0390
        gbc.setState(0xd032, 0x54f, 0xbad0, 0x7e98, 0x351d, 0x9e49, 0x1, 0x0);
        gbc.writeMem(0xd032, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x54f);
        EXPECT(gbc.pc(), 0xd034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd032), 0xcb);
        EXPECT(gbc.readMem(0xd033), 0x92);
        // CB 92 0391
        gbc.setState(0x5f3f, 0xcde0, 0xba50, 0xf59d, 0x76ac, 0x79c5, 0x0, 0x0);
        gbc.writeMem(0x5f3f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcde0);
        EXPECT(gbc.pc(), 0x5f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0392
        gbc.setState(0x42a9, 0x57ff, 0x70d0, 0x84b3, 0xfbf3, 0xc271, 0x0, 0x0);
        gbc.writeMem(0x42a9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x57ff);
        EXPECT(gbc.pc(), 0x42ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0393
        gbc.setState(0x95f6, 0x8a06, 0xd2d0, 0xe9c1, 0x3756, 0xf28e, 0x1, 0x1);
        gbc.writeMem(0x95f6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8a06);
        EXPECT(gbc.pc(), 0x95f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f6), 0xcb);
        EXPECT(gbc.readMem(0x95f7), 0x92);
        // CB 92 0394
        gbc.setState(0x834a, 0x55c0, 0xb120, 0x8210, 0xdb58, 0x2bb2, 0x1, 0x0);
        gbc.writeMem(0x834a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x55c0);
        EXPECT(gbc.pc(), 0x834c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x834a), 0xcb);
        EXPECT(gbc.readMem(0x834b), 0x92);
        // CB 92 0395
        gbc.setState(0x677f, 0x52b7, 0x30, 0x5ffa, 0x1db9, 0x23b1, 0x0, 0x1);
        gbc.writeMem(0x677f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x52b7);
        EXPECT(gbc.pc(), 0x6781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0396
        gbc.setState(0x56d0, 0xb005, 0xcc30, 0x3c7b, 0xbed2, 0x40db, 0x0, 0x1);
        gbc.writeMem(0x56d0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb005);
        EXPECT(gbc.pc(), 0x56d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0397
        gbc.setState(0x3f99, 0x5c6e, 0xc90, 0x3e05, 0x6eaa, 0x1019, 0x1, 0x0);
        gbc.writeMem(0x3f99, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5c6e);
        EXPECT(gbc.pc(), 0x3f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 0398
        gbc.setState(0x767a, 0x9e97, 0x69e0, 0xd6a7, 0xa22d, 0x48c6, 0x1, 0x0);
        gbc.writeMem(0x767a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9e97);
        EXPECT(gbc.pc(), 0x767c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 0399
        gbc.setState(0x1fe3, 0x2668, 0xd130, 0x6cf7, 0xa4db, 0x16ff, 0x0, 0x0);
        gbc.writeMem(0x1fe3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2668);
        EXPECT(gbc.pc(), 0x1fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 039A
        gbc.setState(0x9869, 0x3256, 0xae90, 0xd26d, 0xf527, 0x75ec, 0x1, 0x0);
        gbc.writeMem(0x9869, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3256);
        EXPECT(gbc.pc(), 0x986b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9869), 0xcb);
        EXPECT(gbc.readMem(0x986a), 0x92);
        // CB 92 039B
        gbc.setState(0x41f3, 0xc7f5, 0x9aa0, 0xac4c, 0x9dd8, 0xa3ae, 0x1, 0x1);
        gbc.writeMem(0x41f3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc7f5);
        EXPECT(gbc.pc(), 0x41f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 039C
        gbc.setState(0x79fd, 0xb40b, 0x6630, 0x6e66, 0xa3c3, 0xcdc6, 0x1, 0x0);
        gbc.writeMem(0x79fd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb40b);
        EXPECT(gbc.pc(), 0x79ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 039D
        gbc.setState(0x8fe2, 0x33c1, 0xb120, 0xa15e, 0x59b0, 0xe74c, 0x1, 0x1);
        gbc.writeMem(0x8fe2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x33c1);
        EXPECT(gbc.pc(), 0x8fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe2), 0xcb);
        EXPECT(gbc.readMem(0x8fe3), 0x92);
        // CB 92 039E
        gbc.setState(0x8f19, 0x2d3c, 0x1320, 0xacd1, 0xe398, 0xa387, 0x1, 0x0);
        gbc.writeMem(0x8f19, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2d3c);
        EXPECT(gbc.pc(), 0x8f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f19), 0xcb);
        EXPECT(gbc.readMem(0x8f1a), 0x92);
        // CB 92 039F
        gbc.setState(0xe9b, 0x362a, 0xa260, 0x2d91, 0xbb58, 0xdc2a, 0x1, 0x0);
        gbc.writeMem(0xe9b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x362a);
        EXPECT(gbc.pc(), 0xe9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03A0
        gbc.setState(0xa916, 0x2065, 0xf290, 0x3832, 0x8767, 0xf451, 0x0, 0x1);
        gbc.writeMem(0xa916, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2065);
        EXPECT(gbc.pc(), 0xa918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa916), 0xcb);
        EXPECT(gbc.readMem(0xa917), 0x92);
        // CB 92 03A1
        gbc.setState(0x696e, 0xbc9, 0x4740, 0x6bbd, 0x7459, 0xc76d, 0x1, 0x0);
        gbc.writeMem(0x696e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xbc9);
        EXPECT(gbc.pc(), 0x6970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03A4
        gbc.setState(0x1de, 0x9027, 0x21a0, 0x5e6, 0x56e1, 0x84ac, 0x0, 0x1);
        gbc.writeMem(0x1de, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9027);
        EXPECT(gbc.pc(), 0x1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03A5
        gbc.setState(0xd9b2, 0x814b, 0xdb70, 0x57c6, 0x4fee, 0xa438, 0x1, 0x0);
        gbc.writeMem(0xd9b2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x814b);
        EXPECT(gbc.pc(), 0xd9b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9b2), 0xcb);
        EXPECT(gbc.readMem(0xd9b3), 0x92);
        // CB 92 03A6
        gbc.setState(0xc87c, 0x7962, 0xa0f0, 0x3a61, 0xe63e, 0xfae2, 0x0, 0x1);
        gbc.writeMem(0xc87c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7962);
        EXPECT(gbc.pc(), 0xc87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87c), 0xcb);
        EXPECT(gbc.readMem(0xc87d), 0x92);
        // CB 92 03A7
        gbc.setState(0x1191, 0x146e, 0x980, 0x652, 0x14a, 0xe64a, 0x0, 0x0);
        gbc.writeMem(0x1191, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x146e);
        EXPECT(gbc.pc(), 0x1193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03A8
        gbc.setState(0x871c, 0xf138, 0x2760, 0x80c7, 0x371e, 0xeb0c, 0x0, 0x1);
        gbc.writeMem(0x871c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf138);
        EXPECT(gbc.pc(), 0x871e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x871c), 0xcb);
        EXPECT(gbc.readMem(0x871d), 0x92);
        // CB 92 03A9
        gbc.setState(0x59ad, 0x2f13, 0x6cf0, 0x4ad, 0x6a9, 0xfaf4, 0x1, 0x1);
        gbc.writeMem(0x59ad, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2f13);
        EXPECT(gbc.pc(), 0x59af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03AA
        gbc.setState(0x6837, 0xbb16, 0xabd0, 0x4fb7, 0xa4a5, 0xde0b, 0x1, 0x1);
        gbc.writeMem(0x6837, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbb16);
        EXPECT(gbc.pc(), 0x6839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03AB
        gbc.setState(0x2c4a, 0xea58, 0xc0f0, 0xc0a, 0xcb06, 0xd46c, 0x0, 0x0);
        gbc.writeMem(0x2c4a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xea58);
        EXPECT(gbc.pc(), 0x2c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03AC
        gbc.setState(0x869c, 0xba64, 0xe680, 0xfdff, 0x78bc, 0x8690, 0x1, 0x1);
        gbc.writeMem(0x869c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xba64);
        EXPECT(gbc.pc(), 0x869e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869c), 0xcb);
        EXPECT(gbc.readMem(0x869d), 0x92);
        // CB 92 03AD
        gbc.setState(0xd687, 0xf5c4, 0x5f70, 0x97d9, 0x434, 0x137f, 0x0, 0x0);
        gbc.writeMem(0xd687, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf5c4);
        EXPECT(gbc.pc(), 0xd689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd687), 0xcb);
        EXPECT(gbc.readMem(0xd688), 0x92);
        // CB 92 03AE
        gbc.setState(0x471e, 0x6bf3, 0x3440, 0xca5e, 0x8482, 0xa91e, 0x0, 0x0);
        gbc.writeMem(0x471e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6bf3);
        EXPECT(gbc.pc(), 0x4720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03B0
        gbc.setState(0xc1b5, 0x4f22, 0x33f0, 0xcf20, 0x74cc, 0xd080, 0x1, 0x1);
        gbc.writeMem(0xc1b5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4f22);
        EXPECT(gbc.pc(), 0xc1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b5), 0xcb);
        EXPECT(gbc.readMem(0xc1b6), 0x92);
        // CB 92 03B2
        gbc.setState(0x2f9e, 0x261e, 0x4b00, 0x9e48, 0x9162, 0x3059, 0x1, 0x0);
        gbc.writeMem(0x2f9e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x261e);
        EXPECT(gbc.pc(), 0x2fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03B3
        gbc.setState(0x6659, 0x95da, 0x7d90, 0x482b, 0xdd32, 0x1843, 0x0, 0x0);
        gbc.writeMem(0x6659, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x95da);
        EXPECT(gbc.pc(), 0x665b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03B4
        gbc.setState(0x6b9, 0x23b8, 0x5160, 0xb369, 0xd6d0, 0x926c, 0x0, 0x0);
        gbc.writeMem(0x6b9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x23b8);
        EXPECT(gbc.pc(), 0x6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03B5
        gbc.setState(0x864e, 0xcb66, 0x69b0, 0x70fa, 0x1430, 0xbd81, 0x0, 0x0);
        gbc.writeMem(0x864e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcb66);
        EXPECT(gbc.pc(), 0x8650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x864e), 0xcb);
        EXPECT(gbc.readMem(0x864f), 0x92);
        // CB 92 03B6
        gbc.setState(0xb26e, 0x25c9, 0x8b90, 0x81d7, 0xc787, 0xd8eb, 0x0, 0x1);
        gbc.writeMem(0xb26e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x25c9);
        EXPECT(gbc.pc(), 0xb270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26e), 0xcb);
        EXPECT(gbc.readMem(0xb26f), 0x92);
        // CB 92 03B7
        gbc.setState(0xbe0a, 0x4354, 0x9070, 0x68d8, 0xa4e4, 0x5ac9, 0x0, 0x1);
        gbc.writeMem(0xbe0a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4354);
        EXPECT(gbc.pc(), 0xbe0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0a), 0xcb);
        EXPECT(gbc.readMem(0xbe0b), 0x92);
        // CB 92 03B8
        gbc.setState(0x21b8, 0x31b0, 0x57f0, 0x4cf8, 0x1016, 0xef6d, 0x1, 0x1);
        gbc.writeMem(0x21b8, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x31b0);
        EXPECT(gbc.pc(), 0x21ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03B9
        gbc.setState(0x94fd, 0x32ab, 0xb40, 0x9afd, 0x4e5b, 0x9223, 0x0, 0x1);
        gbc.writeMem(0x94fd, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x32ab);
        EXPECT(gbc.pc(), 0x94ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94fd), 0xcb);
        EXPECT(gbc.readMem(0x94fe), 0x92);
        // CB 92 03BA
        gbc.setState(0x8730, 0xb42f, 0xc160, 0xb15a, 0x21c9, 0xc643, 0x1, 0x1);
        gbc.writeMem(0x8730, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb42f);
        EXPECT(gbc.pc(), 0x8732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8730), 0xcb);
        EXPECT(gbc.readMem(0x8731), 0x92);
        // CB 92 03BB
        gbc.setState(0xc6e9, 0xf2ea, 0xa270, 0x36e6, 0x187c, 0x9053, 0x1, 0x1);
        gbc.writeMem(0xc6e9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf2ea);
        EXPECT(gbc.pc(), 0xc6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e9), 0xcb);
        EXPECT(gbc.readMem(0xc6ea), 0x92);
        // CB 92 03BC
        gbc.setState(0x7a53, 0x195e, 0xa5e0, 0x9624, 0x366a, 0x7e40, 0x1, 0x0);
        gbc.writeMem(0x7a53, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x195e);
        EXPECT(gbc.pc(), 0x7a55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03BF
        gbc.setState(0x4e81, 0xce48, 0x9460, 0xa91d, 0x1eb3, 0xafcf, 0x1, 0x1);
        gbc.writeMem(0x4e81, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xce48);
        EXPECT(gbc.pc(), 0x4e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03C0
        gbc.setState(0x7315, 0xfb8c, 0x3840, 0x1004, 0x3e62, 0x3077, 0x0, 0x1);
        gbc.writeMem(0x7315, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfb8c);
        EXPECT(gbc.pc(), 0x7317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03C1
        gbc.setState(0x2258, 0x181c, 0x7a60, 0xa286, 0xc0f3, 0xc591, 0x0, 0x0);
        gbc.writeMem(0x2258, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x181c);
        EXPECT(gbc.pc(), 0x225a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03C2
        gbc.setState(0xc7fa, 0x9c97, 0x9400, 0xae95, 0x918a, 0x2260, 0x1, 0x0);
        gbc.writeMem(0xc7fa, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9c97);
        EXPECT(gbc.pc(), 0xc7fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fa), 0xcb);
        EXPECT(gbc.readMem(0xc7fb), 0x92);
        // CB 92 03C3
        gbc.setState(0xce43, 0xe878, 0xb730, 0xe908, 0x274e, 0x3292, 0x1, 0x0);
        gbc.writeMem(0xce43, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe878);
        EXPECT(gbc.pc(), 0xce45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce43), 0xcb);
        EXPECT(gbc.readMem(0xce44), 0x92);
        // CB 92 03C4
        gbc.setState(0x977c, 0x2d9d, 0xbd70, 0x841e, 0x2ef6, 0x9e52, 0x1, 0x1);
        gbc.writeMem(0x977c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2d9d);
        EXPECT(gbc.pc(), 0x977e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977c), 0xcb);
        EXPECT(gbc.readMem(0x977d), 0x92);
        // CB 92 03C5
        gbc.setState(0x78c9, 0xafdd, 0x85a0, 0xb21, 0x2eff, 0x1f6b, 0x0, 0x1);
        gbc.writeMem(0x78c9, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xafdd);
        EXPECT(gbc.pc(), 0x78cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03C6
        gbc.setState(0x4702, 0xc64b, 0xa480, 0x2ac7, 0x1208, 0x4d7f, 0x1, 0x0);
        gbc.writeMem(0x4702, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc64b);
        EXPECT(gbc.pc(), 0x4704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03C7
        gbc.setState(0x879a, 0xac17, 0x6900, 0xf2df, 0xcfe9, 0xf5ab, 0x0, 0x1);
        gbc.writeMem(0x879a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xac17);
        EXPECT(gbc.pc(), 0x879c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879a), 0xcb);
        EXPECT(gbc.readMem(0x879b), 0x92);
        // CB 92 03C8
        gbc.setState(0x2f18, 0xbcfb, 0x4230, 0x7267, 0xdb18, 0x3196, 0x0, 0x0);
        gbc.writeMem(0x2f18, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbcfb);
        EXPECT(gbc.pc(), 0x2f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03C9
        gbc.setState(0xf0a, 0x6a21, 0x8c60, 0x362f, 0xad5a, 0x3e83, 0x1, 0x1);
        gbc.writeMem(0xf0a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6a21);
        EXPECT(gbc.pc(), 0xf0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03CA
        gbc.setState(0x4c16, 0xa9d0, 0x8e40, 0xb031, 0xb748, 0x543e, 0x0, 0x1);
        gbc.writeMem(0x4c16, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa9d0);
        EXPECT(gbc.pc(), 0x4c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03CB
        gbc.setState(0x719a, 0x6f3f, 0xb90, 0x9282, 0xb211, 0x34cd, 0x0, 0x0);
        gbc.writeMem(0x719a, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6f3f);
        EXPECT(gbc.pc(), 0x719c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03CC
        gbc.setState(0x1e16, 0x68a4, 0x3f0, 0x8503, 0x108d, 0x806a, 0x0, 0x0);
        gbc.writeMem(0x1e16, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x68a4);
        EXPECT(gbc.pc(), 0x1e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03CE
        gbc.setState(0x595b, 0x7f80, 0xcad0, 0x1197, 0xcf4a, 0xcc2a, 0x0, 0x1);
        gbc.writeMem(0x595b, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7f80);
        EXPECT(gbc.pc(), 0x595d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03CF
        gbc.setState(0x8b9d, 0xe7b9, 0xf10, 0x1e76, 0xe2fa, 0x7c61, 0x0, 0x0);
        gbc.writeMem(0x8b9d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe7b9);
        EXPECT(gbc.pc(), 0x8b9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b9d), 0xcb);
        EXPECT(gbc.readMem(0x8b9e), 0x92);
        // CB 92 03D0
        gbc.setState(0x448c, 0xd0a8, 0x8a40, 0xd3a7, 0xbb90, 0xa38e, 0x1, 0x1);
        gbc.writeMem(0x448c, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd0a8);
        EXPECT(gbc.pc(), 0x448e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03D1
        gbc.setState(0x117, 0x221c, 0x35b0, 0xde9e, 0xcefc, 0x337a, 0x1, 0x1);
        gbc.writeMem(0x117, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x221c);
        EXPECT(gbc.pc(), 0x119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03D2
        gbc.setState(0x19ff, 0x9b8f, 0x620, 0xcaea, 0x1864, 0xf159, 0x1, 0x0);
        gbc.writeMem(0x19ff, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9b8f);
        EXPECT(gbc.pc(), 0x1a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03D3
        gbc.setState(0x38ff, 0x610b, 0x41b0, 0x9dae, 0x1210, 0x5eb3, 0x1, 0x0);
        gbc.writeMem(0x38ff, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x610b);
        EXPECT(gbc.pc(), 0x3901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03D4
        gbc.setState(0x92a5, 0xb9b8, 0x2fb0, 0x12bd, 0xc13, 0xaaf9, 0x1, 0x1);
        gbc.writeMem(0x92a5, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb9b8);
        EXPECT(gbc.pc(), 0x92a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a5), 0xcb);
        EXPECT(gbc.readMem(0x92a6), 0x92);
        // CB 92 03D5
        gbc.setState(0xdecf, 0x3512, 0xeab0, 0xb281, 0xffa7, 0xc8c0, 0x1, 0x0);
        gbc.writeMem(0xdecf, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3512);
        EXPECT(gbc.pc(), 0xded1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdecf), 0xcb);
        EXPECT(gbc.readMem(0xded0), 0x92);
        // CB 92 03D6
        gbc.setState(0xc006, 0x746a, 0x61f0, 0xd72f, 0xd5f5, 0xdea4, 0x0, 0x0);
        gbc.writeMem(0xc006, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x746a);
        EXPECT(gbc.pc(), 0xc008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc006), 0xcb);
        EXPECT(gbc.readMem(0xc007), 0x92);
        // CB 92 03D7
        gbc.setState(0x9647, 0x41f, 0x28a0, 0x66ac, 0x3d4e, 0xe404, 0x1, 0x0);
        gbc.writeMem(0x9647, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x41f);
        EXPECT(gbc.pc(), 0x9649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9647), 0xcb);
        EXPECT(gbc.readMem(0x9648), 0x92);
        // CB 92 03D8
        gbc.setState(0x56a3, 0x3779, 0xff80, 0xd7f4, 0xb07e, 0x69c2, 0x1, 0x0);
        gbc.writeMem(0x56a3, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3779);
        EXPECT(gbc.pc(), 0x56a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03D9
        gbc.setState(0x3f5d, 0xbcc1, 0xccb0, 0xc93c, 0xcd0a, 0xcff9, 0x1, 0x1);
        gbc.writeMem(0x3f5d, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbcc1);
        EXPECT(gbc.pc(), 0x3f5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03DA
        gbc.setState(0xa2e6, 0x5e47, 0xa8f0, 0x28e0, 0xa0f6, 0x84e8, 0x1, 0x1);
        gbc.writeMem(0xa2e6, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5e47);
        EXPECT(gbc.pc(), 0xa2e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e6), 0xcb);
        EXPECT(gbc.readMem(0xa2e7), 0x92);
        // CB 92 03DB
        gbc.setState(0x84e0, 0xc94b, 0xcb20, 0x53a9, 0x807d, 0x777f, 0x0, 0x1);
        gbc.writeMem(0x84e0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc94b);
        EXPECT(gbc.pc(), 0x84e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e0), 0xcb);
        EXPECT(gbc.readMem(0x84e1), 0x92);
        // CB 92 03DC
        gbc.setState(0x929e, 0x4f72, 0x6510, 0xb2ee, 0xdd79, 0x94aa, 0x1, 0x0);
        gbc.writeMem(0x929e, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4f72);
        EXPECT(gbc.pc(), 0x92a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929e), 0xcb);
        EXPECT(gbc.readMem(0x929f), 0x92);
        // CB 92 03DD
        gbc.setState(0x1223, 0xc718, 0xb770, 0x5b68, 0xe422, 0x246a, 0x1, 0x0);
        gbc.writeMem(0x1223, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc718);
        EXPECT(gbc.pc(), 0x1225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03DE
        gbc.setState(0xbe28, 0x92d7, 0x24d0, 0x7f06, 0x7b53, 0xa9f0, 0x1, 0x1);
        gbc.writeMem(0xbe28, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x92d7);
        EXPECT(gbc.pc(), 0xbe2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe28), 0xcb);
        EXPECT(gbc.readMem(0xbe29), 0x92);
        // CB 92 03DF
        gbc.setState(0xee78, 0xdd61, 0x2860, 0x4657, 0xbec1, 0x56e9, 0x0, 0x0);
        gbc.writeMem(0xee78, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdd61);
        EXPECT(gbc.pc(), 0xee7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee78), 0xcb);
        EXPECT(gbc.readMem(0xee79), 0x92);
        // CB 92 03E0
        gbc.setState(0xd9e0, 0x69fd, 0x1700, 0x3412, 0x298a, 0xb605, 0x0, 0x0);
        gbc.writeMem(0xd9e0, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x69fd);
        EXPECT(gbc.pc(), 0xd9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e0), 0xcb);
        EXPECT(gbc.readMem(0xd9e1), 0x92);
        // CB 92 03E1
        gbc.setState(0xac58, 0x5f57, 0xd340, 0x5bcb, 0xceef, 0x8b96, 0x1, 0x0);
        gbc.writeMem(0xac58, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5f57);
        EXPECT(gbc.pc(), 0xac5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac58), 0xcb);
        EXPECT(gbc.readMem(0xac59), 0x92);
        // CB 92 03E2
        gbc.setState(0x5997, 0xeac, 0x1430, 0xd77b, 0xebca, 0x9383, 0x0, 0x1);
        gbc.writeMem(0x5997, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xeac);
        EXPECT(gbc.pc(), 0x5999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 92 03E3
        gbc.setState(0x391, 0x4c69, 0x5a20, 0xe94e, 0xac95, 0x1456, 0x1, 0x1);
        gbc.writeMem(0x391, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4c69);
        EXPECT(gbc.pc(), 0x393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03E4
        gbc.setState(0x32d2, 0x78db, 0xb020, 0xe7db, 0x482a, 0x5f9c, 0x0, 0x0);
        gbc.writeMem(0x32d2, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x78db);
        EXPECT(gbc.pc(), 0x32d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03E5
        gbc.setState(0x61df, 0xd421, 0x3540, 0xfaec, 0x4a52, 0xd8d1, 0x1, 0x1);
        gbc.writeMem(0x61df, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd421);
        EXPECT(gbc.pc(), 0x61e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 92 03E6
        gbc.setState(0xad9f, 0x821d, 0xa7e0, 0xf815, 0xa11e, 0x95e4, 0x1, 0x1);
        gbc.writeMem(0xad9f, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x821d);
        EXPECT(gbc.pc(), 0xada1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9f), 0xcb);
        EXPECT(gbc.readMem(0xada0), 0x92);
        // CB 92 03E7
        gbc.setState(0x9a06, 0xb946, 0xc60, 0xedde, 0x465a, 0xd64e, 0x0, 0x1);
        gbc.writeMem(0x9a06, { 0xcb, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb946);
        EXPECT(gbc.pc(), 0x9a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a06), 0xcb);
        EXPECT(gbc.readMem(0x9a07), 0x92);
    }
}
#endif
