    TEST(gbcemu, opcode_cb_17) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 17 0000
        gbc.setState(0x3175, 0x9f62, 0xd120, 0x4ec0, 0xeffc, 0xcdec, 0x0, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9f62, gbc.sp());
        EXPECT(0x3177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0001
        gbc.setState(0x4cfd, 0x60fc, 0xd810, 0xa218, 0xdf0e, 0x744b, 0x1, 0x1);
        gbc.writeMem(0x4cfd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x60fc, gbc.sp());
        EXPECT(0x4cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0002
        gbc.setState(0xafd1, 0x4072, 0xb8b0, 0x5f23, 0xfde4, 0x5921, 0x0, 0x0);
        gbc.writeMem(0xafd1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4072, gbc.sp());
        EXPECT(0xafd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd1));
        EXPECT(0x17, gbc.readMem(0xafd2));
        // CB 17 0003
        gbc.setState(0xbc5e, 0x2f8f, 0x63e0, 0xbd54, 0xdd12, 0x9626, 0x0, 0x0);
        gbc.writeMem(0xbc5e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2f8f, gbc.sp());
        EXPECT(0xbc60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5e));
        EXPECT(0x17, gbc.readMem(0xbc5f));
        // CB 17 0004
        gbc.setState(0x3524, 0x53f3, 0x9870, 0x5009, 0xfe17, 0x70b9, 0x1, 0x0);
        gbc.writeMem(0x3524, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x53f3, gbc.sp());
        EXPECT(0x3526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0005
        gbc.setState(0x7e0e, 0x9c72, 0x9bd0, 0xe013, 0xd09, 0x5b71, 0x1, 0x0);
        gbc.writeMem(0x7e0e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9c72, gbc.sp());
        EXPECT(0x7e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0006
        gbc.setState(0xa672, 0xab81, 0x3940, 0xa7c8, 0xe217, 0x354a, 0x0, 0x1);
        gbc.writeMem(0xa672, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xab81, gbc.sp());
        EXPECT(0xa674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa672));
        EXPECT(0x17, gbc.readMem(0xa673));
        // CB 17 0007
        gbc.setState(0xdccb, 0xb78f, 0x4400, 0x2c99, 0x36ec, 0x2e54, 0x0, 0x1);
        gbc.writeMem(0xdccb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb78f, gbc.sp());
        EXPECT(0xdccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccb));
        EXPECT(0x17, gbc.readMem(0xdccc));
        // CB 17 0008
        gbc.setState(0xa883, 0x720f, 0x6090, 0xe67e, 0x6465, 0x90db, 0x0, 0x0);
        gbc.writeMem(0xa883, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x720f, gbc.sp());
        EXPECT(0xa885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa883));
        EXPECT(0x17, gbc.readMem(0xa884));
        // CB 17 0009
        gbc.setState(0x1ac, 0xe8a3, 0xe90, 0x12e1, 0x6e18, 0x3223, 0x0, 0x0);
        gbc.writeMem(0x1ac, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe8a3, gbc.sp());
        EXPECT(0x1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 000A
        gbc.setState(0x743b, 0xf2ae, 0x9f20, 0xe273, 0x876d, 0x10b6, 0x0, 0x1);
        gbc.writeMem(0x743b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf2ae, gbc.sp());
        EXPECT(0x743d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 000B
        gbc.setState(0x49c0, 0x1016, 0x51a0, 0xba5, 0xd7c9, 0x60d1, 0x0, 0x0);
        gbc.writeMem(0x49c0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1016, gbc.sp());
        EXPECT(0x49c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 000C
        gbc.setState(0x128e, 0x8074, 0xcfa0, 0xde34, 0x25d9, 0x5ae0, 0x1, 0x1);
        gbc.writeMem(0x128e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8074, gbc.sp());
        EXPECT(0x1290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 000D
        gbc.setState(0x93db, 0xf2b1, 0x5920, 0xd3b1, 0xdebb, 0x1522, 0x0, 0x1);
        gbc.writeMem(0x93db, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf2b1, gbc.sp());
        EXPECT(0x93dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93db));
        EXPECT(0x17, gbc.readMem(0x93dc));
        // CB 17 000F
        gbc.setState(0x5eba, 0x8f45, 0x18b0, 0x3a39, 0xc879, 0xe048, 0x0, 0x0);
        gbc.writeMem(0x5eba, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8f45, gbc.sp());
        EXPECT(0x5ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0011
        gbc.setState(0xef5d, 0x7627, 0x970, 0xdc07, 0x3172, 0xf652, 0x0, 0x0);
        gbc.writeMem(0xef5d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7627, gbc.sp());
        EXPECT(0xef5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5d));
        EXPECT(0x17, gbc.readMem(0xef5e));
        // CB 17 0012
        gbc.setState(0xb6b, 0xf935, 0xd6e0, 0x9109, 0x8dce, 0x83bc, 0x0, 0x0);
        gbc.writeMem(0xb6b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf935, gbc.sp());
        EXPECT(0xb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0013
        gbc.setState(0x2779, 0x5f32, 0xbda0, 0xe32e, 0x6efd, 0xfda7, 0x0, 0x1);
        gbc.writeMem(0x2779, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5f32, gbc.sp());
        EXPECT(0x277b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0014
        gbc.setState(0x639c, 0xf380, 0x72e0, 0x90f, 0x1ae9, 0x766f, 0x0, 0x1);
        gbc.writeMem(0x639c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf380, gbc.sp());
        EXPECT(0x639e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0015
        gbc.setState(0x87f4, 0xdc91, 0x3a20, 0x8147, 0xf00f, 0x9143, 0x0, 0x0);
        gbc.writeMem(0x87f4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdc91, gbc.sp());
        EXPECT(0x87f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f4));
        EXPECT(0x17, gbc.readMem(0x87f5));
        // CB 17 0016
        gbc.setState(0x8432, 0xf183, 0xc370, 0x9407, 0x2cd6, 0x5878, 0x1, 0x0);
        gbc.writeMem(0x8432, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf183, gbc.sp());
        EXPECT(0x8434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8432));
        EXPECT(0x17, gbc.readMem(0x8433));
        // CB 17 0017
        gbc.setState(0xc5c6, 0x6d30, 0x8a50, 0x6ea3, 0xe1d4, 0x8698, 0x0, 0x0);
        gbc.writeMem(0xc5c6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6d30, gbc.sp());
        EXPECT(0xc5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c6));
        EXPECT(0x17, gbc.readMem(0xc5c7));
        // CB 17 0019
        gbc.setState(0x6471, 0x59a1, 0x4d20, 0x2f58, 0x5976, 0xd6b1, 0x0, 0x0);
        gbc.writeMem(0x6471, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x59a1, gbc.sp());
        EXPECT(0x6473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 001A
        gbc.setState(0x6c12, 0xa2b1, 0x14c0, 0xe89a, 0xa14c, 0xaa6b, 0x1, 0x1);
        gbc.writeMem(0x6c12, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa2b1, gbc.sp());
        EXPECT(0x6c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 001B
        gbc.setState(0x5258, 0x4259, 0x7b90, 0xe04a, 0xbce4, 0xf28, 0x0, 0x0);
        gbc.writeMem(0x5258, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4259, gbc.sp());
        EXPECT(0x525a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 001C
        gbc.setState(0x660a, 0xc18d, 0xea70, 0x78b6, 0xbe72, 0x3492, 0x0, 0x1);
        gbc.writeMem(0x660a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc18d, gbc.sp());
        EXPECT(0x660c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 001D
        gbc.setState(0x8c18, 0xd8f5, 0xcba0, 0xfeee, 0xe972, 0x3b8e, 0x1, 0x1);
        gbc.writeMem(0x8c18, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd8f5, gbc.sp());
        EXPECT(0x8c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c18));
        EXPECT(0x17, gbc.readMem(0x8c19));
        // CB 17 001F
        gbc.setState(0xe73b, 0x1d55, 0x8330, 0xa3f2, 0x6f19, 0x10b8, 0x0, 0x0);
        gbc.writeMem(0xe73b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1d55, gbc.sp());
        EXPECT(0xe73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73b));
        EXPECT(0x17, gbc.readMem(0xe73c));
        // CB 17 0020
        gbc.setState(0x2d78, 0x7f36, 0x6a80, 0xed18, 0xa519, 0xb292, 0x1, 0x1);
        gbc.writeMem(0x2d78, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7f36, gbc.sp());
        EXPECT(0x2d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0021
        gbc.setState(0x5a4a, 0x1339, 0xddc0, 0x1256, 0x5631, 0x249c, 0x1, 0x1);
        gbc.writeMem(0x5a4a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1339, gbc.sp());
        EXPECT(0x5a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0022
        gbc.setState(0x61ec, 0xce49, 0xfb20, 0x5cb9, 0x476e, 0xa4ac, 0x1, 0x1);
        gbc.writeMem(0x61ec, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xce49, gbc.sp());
        EXPECT(0x61ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0023
        gbc.setState(0xb2ba, 0x689, 0xd4b0, 0x865d, 0x9eb2, 0xee84, 0x0, 0x0);
        gbc.writeMem(0xb2ba, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x689, gbc.sp());
        EXPECT(0xb2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ba));
        EXPECT(0x17, gbc.readMem(0xb2bb));
        // CB 17 0024
        gbc.setState(0xdea6, 0xd497, 0x8c80, 0x6249, 0x7559, 0xabc6, 0x1, 0x1);
        gbc.writeMem(0xdea6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd497, gbc.sp());
        EXPECT(0xdea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea6));
        EXPECT(0x17, gbc.readMem(0xdea7));
        // CB 17 0025
        gbc.setState(0x1db1, 0xf473, 0x96a0, 0x1279, 0x1a52, 0xcac7, 0x1, 0x0);
        gbc.writeMem(0x1db1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf473, gbc.sp());
        EXPECT(0x1db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0026
        gbc.setState(0x17c6, 0x5980, 0x2650, 0xf7e5, 0x5d5d, 0x39ea, 0x0, 0x1);
        gbc.writeMem(0x17c6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5980, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0027
        gbc.setState(0x81fb, 0x44df, 0x8f40, 0x936d, 0x852c, 0x7908, 0x1, 0x0);
        gbc.writeMem(0x81fb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x44df, gbc.sp());
        EXPECT(0x81fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81fb));
        EXPECT(0x17, gbc.readMem(0x81fc));
        // CB 17 0028
        gbc.setState(0x7e61, 0xd7f4, 0xe930, 0x376d, 0xd323, 0x1c8a, 0x0, 0x0);
        gbc.writeMem(0x7e61, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd7f4, gbc.sp());
        EXPECT(0x7e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0029
        gbc.setState(0xddca, 0xd842, 0xc8d0, 0xbaa5, 0x464c, 0xb83, 0x1, 0x0);
        gbc.writeMem(0xddca, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd842, gbc.sp());
        EXPECT(0xddcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddca));
        EXPECT(0x17, gbc.readMem(0xddcb));
        // CB 17 002A
        gbc.setState(0x331c, 0xd0fc, 0x2bb0, 0x766b, 0xbad7, 0x1a59, 0x0, 0x1);
        gbc.writeMem(0x331c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd0fc, gbc.sp());
        EXPECT(0x331e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 002B
        gbc.setState(0xe033, 0xe2a8, 0x7640, 0x8a27, 0xf75e, 0x3130, 0x1, 0x0);
        gbc.writeMem(0xe033, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe2a8, gbc.sp());
        EXPECT(0xe035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe033));
        EXPECT(0x17, gbc.readMem(0xe034));
        // CB 17 002C
        gbc.setState(0xcffe, 0x8fd5, 0x7b90, 0xe4f5, 0x74da, 0x447a, 0x0, 0x1);
        gbc.writeMem(0xcffe, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8fd5, gbc.sp());
        EXPECT(0xd000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcffe));
        EXPECT(0x17, gbc.readMem(0xcfff));
        // CB 17 002D
        gbc.setState(0xe556, 0x5b7f, 0xd2b0, 0xb2c0, 0xe8b4, 0x4923, 0x1, 0x1);
        gbc.writeMem(0xe556, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5b7f, gbc.sp());
        EXPECT(0xe558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe556));
        EXPECT(0x17, gbc.readMem(0xe557));
        // CB 17 002E
        gbc.setState(0x5e45, 0xb893, 0x10b0, 0x9e00, 0xe7d0, 0xa4a, 0x0, 0x1);
        gbc.writeMem(0x5e45, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb893, gbc.sp());
        EXPECT(0x5e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 002F
        gbc.setState(0xa60c, 0x55e0, 0xe400, 0x49da, 0xe1fa, 0x27e6, 0x0, 0x0);
        gbc.writeMem(0xa60c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x55e0, gbc.sp());
        EXPECT(0xa60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60c));
        EXPECT(0x17, gbc.readMem(0xa60d));
        // CB 17 0030
        gbc.setState(0x3957, 0x3199, 0xf540, 0x318, 0xbeb0, 0x2dd6, 0x0, 0x0);
        gbc.writeMem(0x3957, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3199, gbc.sp());
        EXPECT(0x3959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0031
        gbc.setState(0xb4a4, 0x4a8d, 0x60, 0x1f9, 0xac14, 0x3ee4, 0x1, 0x1);
        gbc.writeMem(0xb4a4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4a8d, gbc.sp());
        EXPECT(0xb4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a4));
        EXPECT(0x17, gbc.readMem(0xb4a5));
        // CB 17 0033
        gbc.setState(0x7c74, 0xc1f, 0x6010, 0x9bab, 0x1e7e, 0x8149, 0x0, 0x0);
        gbc.writeMem(0x7c74, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc1f, gbc.sp());
        EXPECT(0x7c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0034
        gbc.setState(0xed4d, 0xe978, 0xce30, 0xa268, 0x7f16, 0x1464, 0x1, 0x1);
        gbc.writeMem(0xed4d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe978, gbc.sp());
        EXPECT(0xed4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed4d));
        EXPECT(0x17, gbc.readMem(0xed4e));
        // CB 17 0036
        gbc.setState(0xed29, 0xda36, 0x2d90, 0x583, 0xb050, 0xc434, 0x0, 0x0);
        gbc.writeMem(0xed29, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xda36, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed29));
        EXPECT(0x17, gbc.readMem(0xed2a));
        // CB 17 0037
        gbc.setState(0xaa89, 0x3b72, 0xb9f0, 0x4f20, 0x5d85, 0xce78, 0x1, 0x1);
        gbc.writeMem(0xaa89, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3b72, gbc.sp());
        EXPECT(0xaa8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa89));
        EXPECT(0x17, gbc.readMem(0xaa8a));
        // CB 17 0039
        gbc.setState(0x23ab, 0x5cc6, 0xb940, 0xc620, 0x9d67, 0x5c65, 0x1, 0x0);
        gbc.writeMem(0x23ab, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5cc6, gbc.sp());
        EXPECT(0x23ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 003A
        gbc.setState(0x1de0, 0x959, 0x63e0, 0x6202, 0x7213, 0x7574, 0x0, 0x1);
        gbc.writeMem(0x1de0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x959, gbc.sp());
        EXPECT(0x1de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 003B
        gbc.setState(0xbc5e, 0x73, 0xc920, 0x5bd1, 0x3f9b, 0x70e2, 0x1, 0x1);
        gbc.writeMem(0xbc5e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x73, gbc.sp());
        EXPECT(0xbc60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5e));
        EXPECT(0x17, gbc.readMem(0xbc5f));
        // CB 17 003C
        gbc.setState(0xc253, 0x47b1, 0xba30, 0xb233, 0xaeeb, 0xac69, 0x1, 0x0);
        gbc.writeMem(0xc253, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x47b1, gbc.sp());
        EXPECT(0xc255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc253));
        EXPECT(0x17, gbc.readMem(0xc254));
        // CB 17 003D
        gbc.setState(0x3369, 0x7422, 0xe60, 0xb028, 0x8c4, 0x9cd0, 0x1, 0x1);
        gbc.writeMem(0x3369, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7422, gbc.sp());
        EXPECT(0x336b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 003E
        gbc.setState(0xe654, 0x159a, 0x9cb0, 0xc265, 0x2413, 0x4b76, 0x1, 0x0);
        gbc.writeMem(0xe654, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0xe656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe654));
        EXPECT(0x17, gbc.readMem(0xe655));
        // CB 17 003F
        gbc.setState(0x2b46, 0x2a46, 0xc460, 0xa25f, 0x781, 0xf66b, 0x1, 0x1);
        gbc.writeMem(0x2b46, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2a46, gbc.sp());
        EXPECT(0x2b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0040
        gbc.setState(0xa3a5, 0x67fc, 0x9ff0, 0xd14a, 0x70d, 0xab95, 0x1, 0x1);
        gbc.writeMem(0xa3a5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x67fc, gbc.sp());
        EXPECT(0xa3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a5));
        EXPECT(0x17, gbc.readMem(0xa3a6));
        // CB 17 0041
        gbc.setState(0x19e3, 0x53a7, 0x8eb0, 0x7310, 0xcf54, 0x51b1, 0x1, 0x1);
        gbc.writeMem(0x19e3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x53a7, gbc.sp());
        EXPECT(0x19e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0042
        gbc.setState(0x40a4, 0x40cc, 0x3390, 0xfc40, 0x86ac, 0xdf7e, 0x0, 0x0);
        gbc.writeMem(0x40a4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x40cc, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0043
        gbc.setState(0x91c7, 0x2316, 0xd460, 0xbc5b, 0x89ab, 0x8e43, 0x0, 0x0);
        gbc.writeMem(0x91c7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2316, gbc.sp());
        EXPECT(0x91c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c7));
        EXPECT(0x17, gbc.readMem(0x91c8));
        // CB 17 0044
        gbc.setState(0x7705, 0x5ca6, 0x4080, 0xd170, 0xd19c, 0x4130, 0x0, 0x0);
        gbc.writeMem(0x7705, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5ca6, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0046
        gbc.setState(0xd9ce, 0x3024, 0x8810, 0x2426, 0x455a, 0x1ba2, 0x0, 0x1);
        gbc.writeMem(0xd9ce, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3024, gbc.sp());
        EXPECT(0xd9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ce));
        EXPECT(0x17, gbc.readMem(0xd9cf));
        // CB 17 0047
        gbc.setState(0x4c9f, 0x1e88, 0xed80, 0x8e73, 0x797, 0x5f45, 0x0, 0x0);
        gbc.writeMem(0x4c9f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1e88, gbc.sp());
        EXPECT(0x4ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0048
        gbc.setState(0xb115, 0x3d2e, 0xf880, 0x8e1e, 0xf959, 0x8933, 0x1, 0x1);
        gbc.writeMem(0xb115, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3d2e, gbc.sp());
        EXPECT(0xb117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb115));
        EXPECT(0x17, gbc.readMem(0xb116));
        // CB 17 0049
        gbc.setState(0x34dd, 0xd4d, 0x8150, 0x86f4, 0x51c4, 0x4b0a, 0x0, 0x0);
        gbc.writeMem(0x34dd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd4d, gbc.sp());
        EXPECT(0x34df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 004A
        gbc.setState(0x5a7f, 0x2f79, 0x31a0, 0x8261, 0x7bf7, 0xbe4f, 0x0, 0x0);
        gbc.writeMem(0x5a7f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2f79, gbc.sp());
        EXPECT(0x5a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 004B
        gbc.setState(0x48c6, 0xa1e, 0xee30, 0x7d21, 0xaaf3, 0x1878, 0x1, 0x1);
        gbc.writeMem(0x48c6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa1e, gbc.sp());
        EXPECT(0x48c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 004C
        gbc.setState(0xa256, 0x8e22, 0xc840, 0xa3dd, 0x7db6, 0x123e, 0x0, 0x1);
        gbc.writeMem(0xa256, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8e22, gbc.sp());
        EXPECT(0xa258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa256));
        EXPECT(0x17, gbc.readMem(0xa257));
        // CB 17 004D
        gbc.setState(0xfc9, 0xda3f, 0x9df0, 0x3a67, 0x3e9a, 0x34c0, 0x0, 0x0);
        gbc.writeMem(0xfc9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xda3f, gbc.sp());
        EXPECT(0xfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 004E
        gbc.setState(0xd259, 0x5f32, 0x3110, 0x2e59, 0xb3b6, 0x16f1, 0x1, 0x0);
        gbc.writeMem(0xd259, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5f32, gbc.sp());
        EXPECT(0xd25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd259));
        EXPECT(0x17, gbc.readMem(0xd25a));
        // CB 17 004F
        gbc.setState(0x60a0, 0x9f72, 0xc000, 0x8b33, 0x5bc, 0x5b3a, 0x1, 0x1);
        gbc.writeMem(0x60a0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9f72, gbc.sp());
        EXPECT(0x60a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0050
        gbc.setState(0x5b6a, 0x3432, 0x6000, 0x7aa2, 0x7848, 0xb6f, 0x1, 0x0);
        gbc.writeMem(0x5b6a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3432, gbc.sp());
        EXPECT(0x5b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0051
        gbc.setState(0x2ba7, 0x9d94, 0x44b0, 0x6cf, 0xc32d, 0x4e65, 0x1, 0x1);
        gbc.writeMem(0x2ba7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9d94, gbc.sp());
        EXPECT(0x2ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0052
        gbc.setState(0xceab, 0xcf43, 0xab10, 0xecf6, 0xcfcc, 0x9500, 0x1, 0x1);
        gbc.writeMem(0xceab, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcf43, gbc.sp());
        EXPECT(0xcead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceab));
        EXPECT(0x17, gbc.readMem(0xceac));
        // CB 17 0053
        gbc.setState(0x5dd1, 0x4f84, 0x8170, 0xc2c, 0x1f5f, 0xa34c, 0x1, 0x1);
        gbc.writeMem(0x5dd1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4f84, gbc.sp());
        EXPECT(0x5dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0054
        gbc.setState(0x928c, 0x2986, 0x8130, 0x255b, 0xd9e7, 0x397b, 0x1, 0x0);
        gbc.writeMem(0x928c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2986, gbc.sp());
        EXPECT(0x928e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928c));
        EXPECT(0x17, gbc.readMem(0x928d));
        // CB 17 0055
        gbc.setState(0x4d2d, 0x215f, 0xabd0, 0xd43e, 0x92a2, 0xda37, 0x0, 0x0);
        gbc.writeMem(0x4d2d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x215f, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0056
        gbc.setState(0x9f5b, 0xcd98, 0x4d80, 0x8eae, 0x6ea9, 0x87cb, 0x0, 0x0);
        gbc.writeMem(0x9f5b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcd98, gbc.sp());
        EXPECT(0x9f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5b));
        EXPECT(0x17, gbc.readMem(0x9f5c));
        // CB 17 0057
        gbc.setState(0x8296, 0xc317, 0xffc0, 0x8963, 0x2cd8, 0xa557, 0x0, 0x0);
        gbc.writeMem(0x8296, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc317, gbc.sp());
        EXPECT(0x8298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8296));
        EXPECT(0x17, gbc.readMem(0x8297));
        // CB 17 0059
        gbc.setState(0x3ede, 0xd8a2, 0x7170, 0x3ba3, 0x5b8f, 0x26b7, 0x1, 0x0);
        gbc.writeMem(0x3ede, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd8a2, gbc.sp());
        EXPECT(0x3ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 005A
        gbc.setState(0xacbb, 0x3b22, 0x5840, 0x8ba9, 0xa3bb, 0xfdb4, 0x0, 0x1);
        gbc.writeMem(0xacbb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3b22, gbc.sp());
        EXPECT(0xacbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbb));
        EXPECT(0x17, gbc.readMem(0xacbc));
        // CB 17 005B
        gbc.setState(0xaede, 0x6876, 0x84a0, 0x43f2, 0x62b7, 0xc598, 0x0, 0x0);
        gbc.writeMem(0xaede, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6876, gbc.sp());
        EXPECT(0xaee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaede));
        EXPECT(0x17, gbc.readMem(0xaedf));
        // CB 17 005C
        gbc.setState(0xabf3, 0x4c9b, 0xb0f0, 0xba05, 0xc36, 0x4b7, 0x0, 0x0);
        gbc.writeMem(0xabf3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4c9b, gbc.sp());
        EXPECT(0xabf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf3));
        EXPECT(0x17, gbc.readMem(0xabf4));
        // CB 17 005D
        gbc.setState(0x33f0, 0xcd40, 0x5500, 0x1e43, 0x64a, 0x43fb, 0x1, 0x1);
        gbc.writeMem(0x33f0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcd40, gbc.sp());
        EXPECT(0x33f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 005E
        gbc.setState(0x51d7, 0x5c0d, 0x2960, 0x2547, 0xa17b, 0xab40, 0x0, 0x0);
        gbc.writeMem(0x51d7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5c0d, gbc.sp());
        EXPECT(0x51d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 005F
        gbc.setState(0x3206, 0x306d, 0xa730, 0xba62, 0xf451, 0xe2d, 0x0, 0x1);
        gbc.writeMem(0x3206, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x306d, gbc.sp());
        EXPECT(0x3208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0060
        gbc.setState(0xd19b, 0x131c, 0x6b0, 0x126, 0xc588, 0xb9f7, 0x0, 0x0);
        gbc.writeMem(0xd19b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x131c, gbc.sp());
        EXPECT(0xd19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19b));
        EXPECT(0x17, gbc.readMem(0xd19c));
        // CB 17 0061
        gbc.setState(0x4261, 0xca42, 0x20c0, 0xaed2, 0xb062, 0x59b2, 0x0, 0x1);
        gbc.writeMem(0x4261, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xca42, gbc.sp());
        EXPECT(0x4263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0062
        gbc.setState(0x327a, 0xa608, 0x9d0, 0x8669, 0x8613, 0x99ae, 0x1, 0x0);
        gbc.writeMem(0x327a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa608, gbc.sp());
        EXPECT(0x327c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0063
        gbc.setState(0x6d43, 0x97ec, 0xa310, 0x3317, 0x3684, 0xf298, 0x0, 0x0);
        gbc.writeMem(0x6d43, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x97ec, gbc.sp());
        EXPECT(0x6d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0064
        gbc.setState(0xdb9d, 0x453e, 0xf440, 0x75d7, 0xe90c, 0xc6ce, 0x1, 0x1);
        gbc.writeMem(0xdb9d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x453e, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9d));
        EXPECT(0x17, gbc.readMem(0xdb9e));
        // CB 17 0065
        gbc.setState(0x83ab, 0x8c93, 0x1690, 0x7ad8, 0xcc47, 0x6412, 0x1, 0x1);
        gbc.writeMem(0x83ab, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8c93, gbc.sp());
        EXPECT(0x83ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ab));
        EXPECT(0x17, gbc.readMem(0x83ac));
        // CB 17 0066
        gbc.setState(0x4cc2, 0x4604, 0x2f20, 0x8244, 0xd742, 0x9c18, 0x1, 0x0);
        gbc.writeMem(0x4cc2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4604, gbc.sp());
        EXPECT(0x4cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0067
        gbc.setState(0x35f, 0x117f, 0xded0, 0x22fa, 0xaabf, 0xd67, 0x0, 0x1);
        gbc.writeMem(0x35f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x117f, gbc.sp());
        EXPECT(0x361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0068
        gbc.setState(0x6b84, 0xcc92, 0xfee0, 0xc73b, 0xe599, 0xdf18, 0x0, 0x0);
        gbc.writeMem(0x6b84, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0x6b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0069
        gbc.setState(0xb93e, 0x578, 0x4270, 0xd156, 0x48ef, 0x5b68, 0x1, 0x0);
        gbc.writeMem(0xb93e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x578, gbc.sp());
        EXPECT(0xb940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93e));
        EXPECT(0x17, gbc.readMem(0xb93f));
        // CB 17 006A
        gbc.setState(0x5ed2, 0x2a5f, 0x5900, 0x93dc, 0x63b6, 0x88c6, 0x1, 0x0);
        gbc.writeMem(0x5ed2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2a5f, gbc.sp());
        EXPECT(0x5ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 006B
        gbc.setState(0xad4b, 0xe0d, 0x8520, 0x8d41, 0x428f, 0xe46c, 0x1, 0x1);
        gbc.writeMem(0xad4b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe0d, gbc.sp());
        EXPECT(0xad4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4b));
        EXPECT(0x17, gbc.readMem(0xad4c));
        // CB 17 006C
        gbc.setState(0x44fc, 0xfc5d, 0xade0, 0x95cf, 0x9e37, 0x77c4, 0x1, 0x0);
        gbc.writeMem(0x44fc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfc5d, gbc.sp());
        EXPECT(0x44fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 006D
        gbc.setState(0x9787, 0xf6d6, 0xd350, 0x513b, 0x81bb, 0x70c8, 0x0, 0x0);
        gbc.writeMem(0x9787, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf6d6, gbc.sp());
        EXPECT(0x9789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9787));
        EXPECT(0x17, gbc.readMem(0x9788));
        // CB 17 006F
        gbc.setState(0xd38e, 0x8814, 0xe120, 0x8198, 0x2b2a, 0xff6f, 0x1, 0x0);
        gbc.writeMem(0xd38e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8814, gbc.sp());
        EXPECT(0xd390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38e));
        EXPECT(0x17, gbc.readMem(0xd38f));
        // CB 17 0070
        gbc.setState(0x6e7d, 0x4ebd, 0x2710, 0x4ba1, 0x9b6, 0xe104, 0x0, 0x1);
        gbc.writeMem(0x6e7d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4ebd, gbc.sp());
        EXPECT(0x6e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0071
        gbc.setState(0x3f19, 0x70cd, 0x49f0, 0x48bb, 0x49cf, 0x5082, 0x0, 0x0);
        gbc.writeMem(0x3f19, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x70cd, gbc.sp());
        EXPECT(0x3f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0072
        gbc.setState(0x7c24, 0x9c60, 0x8fe0, 0x6b76, 0xa0da, 0xcac5, 0x1, 0x1);
        gbc.writeMem(0x7c24, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9c60, gbc.sp());
        EXPECT(0x7c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0073
        gbc.setState(0x4a73, 0xbd6b, 0xc1a0, 0x7eb4, 0xa9bb, 0x6a09, 0x0, 0x0);
        gbc.writeMem(0x4a73, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0x4a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0074
        gbc.setState(0x2301, 0xa706, 0xba80, 0x2fdd, 0x765e, 0xd404, 0x1, 0x1);
        gbc.writeMem(0x2301, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa706, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0075
        gbc.setState(0x4564, 0xe11b, 0xa060, 0x67cb, 0x14d1, 0x1abf, 0x1, 0x0);
        gbc.writeMem(0x4564, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe11b, gbc.sp());
        EXPECT(0x4566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0076
        gbc.setState(0x70cf, 0xe11, 0x7d50, 0xe374, 0xf50a, 0xd938, 0x0, 0x1);
        gbc.writeMem(0x70cf, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe11, gbc.sp());
        EXPECT(0x70d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0077
        gbc.setState(0x58ed, 0x20f8, 0xb620, 0x62c7, 0xb5d5, 0xf608, 0x1, 0x0);
        gbc.writeMem(0x58ed, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x20f8, gbc.sp());
        EXPECT(0x58ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0078
        gbc.setState(0xa4c, 0xaf92, 0x1300, 0xfbf2, 0x968c, 0x164c, 0x0, 0x0);
        gbc.writeMem(0xa4c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xaf92, gbc.sp());
        EXPECT(0xa4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0079
        gbc.setState(0xaccb, 0xf421, 0xa9f0, 0xf03c, 0x9158, 0xe503, 0x1, 0x1);
        gbc.writeMem(0xaccb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf421, gbc.sp());
        EXPECT(0xaccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaccb));
        EXPECT(0x17, gbc.readMem(0xaccc));
        // CB 17 007A
        gbc.setState(0x3bce, 0xc889, 0x8030, 0x5c52, 0x5996, 0xd9d3, 0x0, 0x0);
        gbc.writeMem(0x3bce, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc889, gbc.sp());
        EXPECT(0x3bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 007B
        gbc.setState(0xeed7, 0xbb8a, 0xc730, 0xb658, 0x1d02, 0xf102, 0x1, 0x1);
        gbc.writeMem(0xeed7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbb8a, gbc.sp());
        EXPECT(0xeed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed7));
        EXPECT(0x17, gbc.readMem(0xeed8));
        // CB 17 007C
        gbc.setState(0x9f7, 0xf5b6, 0x51b0, 0xad9a, 0x651a, 0x372c, 0x1, 0x0);
        gbc.writeMem(0x9f7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf5b6, gbc.sp());
        EXPECT(0x9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 007D
        gbc.setState(0x1fb1, 0x14f1, 0x32f0, 0x4d41, 0x511b, 0xa421, 0x1, 0x0);
        gbc.writeMem(0x1fb1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x14f1, gbc.sp());
        EXPECT(0x1fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 007E
        gbc.setState(0x5a72, 0x145e, 0xa820, 0xbbbe, 0xc6e6, 0x6444, 0x0, 0x1);
        gbc.writeMem(0x5a72, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x145e, gbc.sp());
        EXPECT(0x5a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 007F
        gbc.setState(0x8b6b, 0x22b9, 0x6ff0, 0xb59f, 0xe606, 0x4af3, 0x1, 0x0);
        gbc.writeMem(0x8b6b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x22b9, gbc.sp());
        EXPECT(0x8b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6b));
        EXPECT(0x17, gbc.readMem(0x8b6c));
        // CB 17 0080
        gbc.setState(0x36cc, 0xeb38, 0xab80, 0x233c, 0x6c2a, 0x22be, 0x1, 0x1);
        gbc.writeMem(0x36cc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xeb38, gbc.sp());
        EXPECT(0x36ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0081
        gbc.setState(0x8871, 0x50aa, 0x7b0, 0xc713, 0x35cb, 0xa7db, 0x0, 0x0);
        gbc.writeMem(0x8871, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x50aa, gbc.sp());
        EXPECT(0x8873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8871));
        EXPECT(0x17, gbc.readMem(0x8872));
        // CB 17 0082
        gbc.setState(0xc939, 0x9ce, 0x89e0, 0xcbb7, 0x625d, 0x5796, 0x1, 0x0);
        gbc.writeMem(0xc939, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9ce, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc939));
        EXPECT(0x17, gbc.readMem(0xc93a));
        // CB 17 0083
        gbc.setState(0x272d, 0x99f3, 0xfa60, 0x4ed, 0x699b, 0x986b, 0x0, 0x1);
        gbc.writeMem(0x272d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x99f3, gbc.sp());
        EXPECT(0x272f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0084
        gbc.setState(0x89dc, 0x582, 0x7940, 0x77bb, 0xcec, 0xc9c8, 0x0, 0x1);
        gbc.writeMem(0x89dc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x582, gbc.sp());
        EXPECT(0x89de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89dc));
        EXPECT(0x17, gbc.readMem(0x89dd));
        // CB 17 0085
        gbc.setState(0x587f, 0x151b, 0xb220, 0x1126, 0x3464, 0xc762, 0x1, 0x1);
        gbc.writeMem(0x587f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x151b, gbc.sp());
        EXPECT(0x5881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0086
        gbc.setState(0x3be8, 0x9428, 0x630, 0x365f, 0xce81, 0xb84c, 0x1, 0x1);
        gbc.writeMem(0x3be8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9428, gbc.sp());
        EXPECT(0x3bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0087
        gbc.setState(0xadc5, 0x8452, 0xe5d0, 0x3f34, 0x3153, 0x9867, 0x0, 0x0);
        gbc.writeMem(0xadc5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8452, gbc.sp());
        EXPECT(0xadc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc5));
        EXPECT(0x17, gbc.readMem(0xadc6));
        // CB 17 0088
        gbc.setState(0xa128, 0x8ed0, 0xce00, 0x88b5, 0x82dd, 0xb3cd, 0x1, 0x0);
        gbc.writeMem(0xa128, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8ed0, gbc.sp());
        EXPECT(0xa12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa128));
        EXPECT(0x17, gbc.readMem(0xa129));
        // CB 17 0089
        gbc.setState(0x6233, 0x4d89, 0x6570, 0xfcf8, 0x1c4c, 0xe110, 0x1, 0x0);
        gbc.writeMem(0x6233, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4d89, gbc.sp());
        EXPECT(0x6235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 008A
        gbc.setState(0xc92b, 0xfc3f, 0xd560, 0x44fb, 0xcea6, 0x24f, 0x1, 0x1);
        gbc.writeMem(0xc92b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfc3f, gbc.sp());
        EXPECT(0xc92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92b));
        EXPECT(0x17, gbc.readMem(0xc92c));
        // CB 17 008B
        gbc.setState(0xd663, 0xcca, 0x2140, 0xe44a, 0x1e7b, 0xd8a, 0x1, 0x0);
        gbc.writeMem(0xd663, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcca, gbc.sp());
        EXPECT(0xd665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd663));
        EXPECT(0x17, gbc.readMem(0xd664));
        // CB 17 008C
        gbc.setState(0x9894, 0x958c, 0x3270, 0x3fc0, 0x5ba6, 0xc8d, 0x0, 0x1);
        gbc.writeMem(0x9894, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x958c, gbc.sp());
        EXPECT(0x9896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9894));
        EXPECT(0x17, gbc.readMem(0x9895));
        // CB 17 008D
        gbc.setState(0x1fc9, 0x89d8, 0x69a0, 0x6a1d, 0x1d36, 0x54d2, 0x1, 0x0);
        gbc.writeMem(0x1fc9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x89d8, gbc.sp());
        EXPECT(0x1fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 008E
        gbc.setState(0x9cf6, 0x4fd1, 0x3e70, 0x6080, 0xbeb9, 0x6b2c, 0x0, 0x1);
        gbc.writeMem(0x9cf6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4fd1, gbc.sp());
        EXPECT(0x9cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf6));
        EXPECT(0x17, gbc.readMem(0x9cf7));
        // CB 17 008F
        gbc.setState(0x4c00, 0xf6f7, 0xbd80, 0x18a8, 0x3ec6, 0x671e, 0x1, 0x1);
        gbc.writeMem(0x4c00, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf6f7, gbc.sp());
        EXPECT(0x4c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0090
        gbc.setState(0x74d6, 0x15ff, 0xd380, 0x5d54, 0x2e19, 0x63ed, 0x1, 0x1);
        gbc.writeMem(0x74d6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x15ff, gbc.sp());
        EXPECT(0x74d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0092
        gbc.setState(0xbf62, 0x9d4c, 0x6500, 0xf99c, 0xd7a7, 0x7d76, 0x0, 0x1);
        gbc.writeMem(0xbf62, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9d4c, gbc.sp());
        EXPECT(0xbf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf62));
        EXPECT(0x17, gbc.readMem(0xbf63));
        // CB 17 0094
        gbc.setState(0x9c5b, 0xfd3e, 0xe4d0, 0x5930, 0x6a55, 0xd47e, 0x1, 0x0);
        gbc.writeMem(0x9c5b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfd3e, gbc.sp());
        EXPECT(0x9c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5b));
        EXPECT(0x17, gbc.readMem(0x9c5c));
        // CB 17 0095
        gbc.setState(0x94f4, 0x56a7, 0x1ff0, 0xb667, 0xcceb, 0x8357, 0x1, 0x1);
        gbc.writeMem(0x94f4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x56a7, gbc.sp());
        EXPECT(0x94f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f4));
        EXPECT(0x17, gbc.readMem(0x94f5));
        // CB 17 0096
        gbc.setState(0x6158, 0xa14f, 0x7e50, 0x6863, 0x3dbb, 0x978d, 0x0, 0x1);
        gbc.writeMem(0x6158, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa14f, gbc.sp());
        EXPECT(0x615a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0097
        gbc.setState(0x5ae0, 0x746e, 0x85c0, 0xbe0e, 0x9beb, 0x6de1, 0x1, 0x0);
        gbc.writeMem(0x5ae0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x746e, gbc.sp());
        EXPECT(0x5ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0098
        gbc.setState(0x340f, 0xed56, 0x9290, 0x391d, 0x8a72, 0x8e5a, 0x1, 0x0);
        gbc.writeMem(0x340f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xed56, gbc.sp());
        EXPECT(0x3411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0099
        gbc.setState(0xa963, 0x6b66, 0x2f20, 0x383e, 0x961d, 0x16e7, 0x0, 0x0);
        gbc.writeMem(0xa963, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6b66, gbc.sp());
        EXPECT(0xa965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa963));
        EXPECT(0x17, gbc.readMem(0xa964));
        // CB 17 009A
        gbc.setState(0x8dc1, 0x25e4, 0x6570, 0xea68, 0xaf99, 0x77ad, 0x0, 0x1);
        gbc.writeMem(0x8dc1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x25e4, gbc.sp());
        EXPECT(0x8dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc1));
        EXPECT(0x17, gbc.readMem(0x8dc2));
        // CB 17 009B
        gbc.setState(0x376e, 0xf2a2, 0x10a0, 0xe008, 0x8cd4, 0x91aa, 0x0, 0x0);
        gbc.writeMem(0x376e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf2a2, gbc.sp());
        EXPECT(0x3770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 009D
        gbc.setState(0x518e, 0x152d, 0x8bc0, 0x99b7, 0x37ec, 0x6224, 0x1, 0x1);
        gbc.writeMem(0x518e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x152d, gbc.sp());
        EXPECT(0x5190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 009F
        gbc.setState(0x67f5, 0xdfa1, 0xbbc0, 0xfde1, 0x805, 0x12eb, 0x1, 0x1);
        gbc.writeMem(0x67f5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdfa1, gbc.sp());
        EXPECT(0x67f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00A0
        gbc.setState(0x5be7, 0x2911, 0x5990, 0x6af8, 0xc21a, 0xdc92, 0x0, 0x0);
        gbc.writeMem(0x5be7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2911, gbc.sp());
        EXPECT(0x5be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00A1
        gbc.setState(0x43d9, 0xe991, 0x1460, 0xbfaa, 0x7158, 0x5882, 0x0, 0x1);
        gbc.writeMem(0x43d9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe991, gbc.sp());
        EXPECT(0x43db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00A2
        gbc.setState(0xe2b2, 0x723b, 0x7380, 0xd98a, 0xb484, 0x92, 0x1, 0x0);
        gbc.writeMem(0xe2b2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x723b, gbc.sp());
        EXPECT(0xe2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b2));
        EXPECT(0x17, gbc.readMem(0xe2b3));
        // CB 17 00A3
        gbc.setState(0x79eb, 0xa378, 0xd310, 0xfa2f, 0xbd57, 0xff95, 0x0, 0x0);
        gbc.writeMem(0x79eb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa378, gbc.sp());
        EXPECT(0x79ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00A4
        gbc.setState(0x434a, 0x457b, 0x7b90, 0xeab, 0xc28, 0x347, 0x1, 0x1);
        gbc.writeMem(0x434a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x457b, gbc.sp());
        EXPECT(0x434c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00A6
        gbc.setState(0xe9a, 0x4fbd, 0x6820, 0x24a6, 0x8152, 0x5589, 0x1, 0x0);
        gbc.writeMem(0xe9a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4fbd, gbc.sp());
        EXPECT(0xe9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00A7
        gbc.setState(0xe211, 0xff7b, 0x5200, 0x440c, 0x3814, 0x26a5, 0x1, 0x1);
        gbc.writeMem(0xe211, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xff7b, gbc.sp());
        EXPECT(0xe213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe211));
        EXPECT(0x17, gbc.readMem(0xe212));
        // CB 17 00A8
        gbc.setState(0x52a4, 0x4c70, 0xe850, 0xc128, 0x312, 0x1aa4, 0x1, 0x0);
        gbc.writeMem(0x52a4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4c70, gbc.sp());
        EXPECT(0x52a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00A9
        gbc.setState(0x9927, 0xc8aa, 0x6f10, 0xe9ef, 0x3e14, 0xd58c, 0x1, 0x0);
        gbc.writeMem(0x9927, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc8aa, gbc.sp());
        EXPECT(0x9929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9927));
        EXPECT(0x17, gbc.readMem(0x9928));
        // CB 17 00AA
        gbc.setState(0x3633, 0xb7f2, 0x7d70, 0x2752, 0x18be, 0x7e3d, 0x1, 0x0);
        gbc.writeMem(0x3633, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb7f2, gbc.sp());
        EXPECT(0x3635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00AB
        gbc.setState(0x9e93, 0xf5f0, 0xd2c0, 0xe3fa, 0xc457, 0xfc86, 0x0, 0x0);
        gbc.writeMem(0x9e93, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf5f0, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e93));
        EXPECT(0x17, gbc.readMem(0x9e94));
        // CB 17 00AC
        gbc.setState(0x7bf2, 0xd0fd, 0x9030, 0x44c5, 0x7387, 0x42a4, 0x0, 0x0);
        gbc.writeMem(0x7bf2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd0fd, gbc.sp());
        EXPECT(0x7bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00AD
        gbc.setState(0xb2b7, 0xe4b4, 0x8f20, 0xa002, 0x3c7f, 0x8a78, 0x0, 0x1);
        gbc.writeMem(0xb2b7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe4b4, gbc.sp());
        EXPECT(0xb2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b7));
        EXPECT(0x17, gbc.readMem(0xb2b8));
        // CB 17 00AE
        gbc.setState(0x95af, 0x81a3, 0x2aa0, 0xa69c, 0xd1bd, 0x67f8, 0x0, 0x0);
        gbc.writeMem(0x95af, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x81a3, gbc.sp());
        EXPECT(0x95b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95af));
        EXPECT(0x17, gbc.readMem(0x95b0));
        // CB 17 00AF
        gbc.setState(0x20e, 0xce35, 0xd900, 0x6f35, 0x6ff4, 0xdc39, 0x0, 0x0);
        gbc.writeMem(0x20e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xce35, gbc.sp());
        EXPECT(0x210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00B0
        gbc.setState(0x1de4, 0x1408, 0x930, 0x53f0, 0xed30, 0xdb49, 0x1, 0x0);
        gbc.writeMem(0x1de4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1408, gbc.sp());
        EXPECT(0x1de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00B1
        gbc.setState(0xaae3, 0xf9f0, 0x9cf0, 0x7ce4, 0xb461, 0x80be, 0x0, 0x1);
        gbc.writeMem(0xaae3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf9f0, gbc.sp());
        EXPECT(0xaae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae3));
        EXPECT(0x17, gbc.readMem(0xaae4));
        // CB 17 00B2
        gbc.setState(0x3220, 0xa2e0, 0x6950, 0xc66e, 0xd67d, 0x5ed4, 0x1, 0x1);
        gbc.writeMem(0x3220, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa2e0, gbc.sp());
        EXPECT(0x3222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00B3
        gbc.setState(0xd3cf, 0x463f, 0x4390, 0xe482, 0x4862, 0xc76a, 0x1, 0x1);
        gbc.writeMem(0xd3cf, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x463f, gbc.sp());
        EXPECT(0xd3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3cf));
        EXPECT(0x17, gbc.readMem(0xd3d0));
        // CB 17 00B4
        gbc.setState(0x27ad, 0xcd8e, 0xcf50, 0x400, 0x2bcd, 0xf356, 0x1, 0x1);
        gbc.writeMem(0x27ad, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcd8e, gbc.sp());
        EXPECT(0x27af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00B5
        gbc.setState(0x54ff, 0x32d3, 0xbe50, 0xec51, 0xd021, 0xd7f3, 0x1, 0x0);
        gbc.writeMem(0x54ff, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x32d3, gbc.sp());
        EXPECT(0x5501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00B6
        gbc.setState(0xeef, 0x7c51, 0x5920, 0x5232, 0xc82f, 0xcfa8, 0x0, 0x0);
        gbc.writeMem(0xeef, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7c51, gbc.sp());
        EXPECT(0xef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00B7
        gbc.setState(0x8e87, 0xda0a, 0x2c90, 0xa61b, 0x9f4b, 0x7d4e, 0x0, 0x1);
        gbc.writeMem(0x8e87, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xda0a, gbc.sp());
        EXPECT(0x8e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e87));
        EXPECT(0x17, gbc.readMem(0x8e88));
        // CB 17 00B8
        gbc.setState(0xd70, 0x72d2, 0x9f70, 0x916, 0xff0f, 0x3767, 0x0, 0x0);
        gbc.writeMem(0xd70, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x72d2, gbc.sp());
        EXPECT(0xd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00B9
        gbc.setState(0xb3af, 0x43c5, 0xe5c0, 0xa0c9, 0x9531, 0x595c, 0x1, 0x0);
        gbc.writeMem(0xb3af, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x43c5, gbc.sp());
        EXPECT(0xb3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3af));
        EXPECT(0x17, gbc.readMem(0xb3b0));
        // CB 17 00BA
        gbc.setState(0x1234, 0xca79, 0xb590, 0xd45f, 0x496e, 0xb1f8, 0x1, 0x0);
        gbc.writeMem(0x1234, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xca79, gbc.sp());
        EXPECT(0x1236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00BB
        gbc.setState(0x4656, 0x7b85, 0xdc00, 0x4ed6, 0x804d, 0x56d8, 0x1, 0x1);
        gbc.writeMem(0x4656, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7b85, gbc.sp());
        EXPECT(0x4658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00BC
        gbc.setState(0x661f, 0xbba4, 0x3550, 0xd56f, 0x4be6, 0x4e2d, 0x0, 0x0);
        gbc.writeMem(0x661f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbba4, gbc.sp());
        EXPECT(0x6621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00BD
        gbc.setState(0xe149, 0xcd05, 0xa860, 0xd70, 0xc450, 0x447e, 0x1, 0x0);
        gbc.writeMem(0xe149, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcd05, gbc.sp());
        EXPECT(0xe14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe149));
        EXPECT(0x17, gbc.readMem(0xe14a));
        // CB 17 00BE
        gbc.setState(0xd56d, 0x1a56, 0x7ea0, 0x7eaa, 0xe293, 0x39d3, 0x1, 0x1);
        gbc.writeMem(0xd56d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1a56, gbc.sp());
        EXPECT(0xd56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56d));
        EXPECT(0x17, gbc.readMem(0xd56e));
        // CB 17 00BF
        gbc.setState(0xbcd9, 0xb99d, 0x460, 0x20a4, 0x34, 0x8163, 0x1, 0x1);
        gbc.writeMem(0xbcd9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb99d, gbc.sp());
        EXPECT(0xbcdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd9));
        EXPECT(0x17, gbc.readMem(0xbcda));
        // CB 17 00C0
        gbc.setState(0xdad8, 0x8378, 0x93b0, 0x7bf6, 0xdc40, 0x285a, 0x0, 0x0);
        gbc.writeMem(0xdad8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8378, gbc.sp());
        EXPECT(0xdada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad8));
        EXPECT(0x17, gbc.readMem(0xdad9));
        // CB 17 00C1
        gbc.setState(0x3507, 0xd0b5, 0xee70, 0x2692, 0x1a5b, 0x748f, 0x0, 0x1);
        gbc.writeMem(0x3507, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd0b5, gbc.sp());
        EXPECT(0x3509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00C2
        gbc.setState(0x154e, 0x8d7d, 0xc60, 0x43fe, 0x95f, 0x656, 0x0, 0x1);
        gbc.writeMem(0x154e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8d7d, gbc.sp());
        EXPECT(0x1550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00C3
        gbc.setState(0xb917, 0x8740, 0x2010, 0x27b9, 0xf87c, 0x10f6, 0x1, 0x0);
        gbc.writeMem(0xb917, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8740, gbc.sp());
        EXPECT(0xb919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb917));
        EXPECT(0x17, gbc.readMem(0xb918));
        // CB 17 00C4
        gbc.setState(0xd1ad, 0x5841, 0x97b0, 0x23a4, 0x99f6, 0x53c, 0x1, 0x1);
        gbc.writeMem(0xd1ad, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5841, gbc.sp());
        EXPECT(0xd1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ad));
        EXPECT(0x17, gbc.readMem(0xd1ae));
        // CB 17 00C5
        gbc.setState(0x9dfc, 0x692e, 0xbaf0, 0x71e, 0x315d, 0x414b, 0x1, 0x1);
        gbc.writeMem(0x9dfc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x692e, gbc.sp());
        EXPECT(0x9dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dfc));
        EXPECT(0x17, gbc.readMem(0x9dfd));
        // CB 17 00C7
        gbc.setState(0x5263, 0x2a78, 0x8ae0, 0x4bc8, 0xaa31, 0xcbbc, 0x1, 0x0);
        gbc.writeMem(0x5263, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2a78, gbc.sp());
        EXPECT(0x5265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00C8
        gbc.setState(0x5c17, 0xb1ab, 0x420, 0x1b66, 0x3c1c, 0xc5a5, 0x0, 0x1);
        gbc.writeMem(0x5c17, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb1ab, gbc.sp());
        EXPECT(0x5c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00C9
        gbc.setState(0x6bb1, 0x6c68, 0x910, 0x2cf9, 0xf291, 0xec60, 0x0, 0x1);
        gbc.writeMem(0x6bb1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6c68, gbc.sp());
        EXPECT(0x6bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00CA
        gbc.setState(0x398b, 0x87e8, 0xa750, 0x3f30, 0x4dd9, 0xf03f, 0x1, 0x1);
        gbc.writeMem(0x398b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x87e8, gbc.sp());
        EXPECT(0x398d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00CB
        gbc.setState(0xacdf, 0xc5ae, 0x7900, 0xf707, 0xf2a9, 0xb3f2, 0x0, 0x0);
        gbc.writeMem(0xacdf, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc5ae, gbc.sp());
        EXPECT(0xace1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdf));
        EXPECT(0x17, gbc.readMem(0xace0));
        // CB 17 00CD
        gbc.setState(0x7c9f, 0x5dfb, 0xe740, 0x9c2a, 0xe811, 0x3d7f, 0x0, 0x1);
        gbc.writeMem(0x7c9f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5dfb, gbc.sp());
        EXPECT(0x7ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00CE
        gbc.setState(0x470e, 0x88a8, 0x8c80, 0xfa12, 0x4982, 0x1fc5, 0x0, 0x0);
        gbc.writeMem(0x470e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x88a8, gbc.sp());
        EXPECT(0x4710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00CF
        gbc.setState(0xcd4, 0x2488, 0xdaa0, 0x8f90, 0x8638, 0x6e77, 0x0, 0x1);
        gbc.writeMem(0xcd4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2488, gbc.sp());
        EXPECT(0xcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00D0
        gbc.setState(0x12f6, 0xeaaf, 0x3e50, 0x4fb2, 0xd37f, 0xcf4b, 0x1, 0x0);
        gbc.writeMem(0x12f6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xeaaf, gbc.sp());
        EXPECT(0x12f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00D1
        gbc.setState(0xae3a, 0x9d57, 0xbe90, 0x9703, 0x9a79, 0x2be2, 0x1, 0x1);
        gbc.writeMem(0xae3a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9d57, gbc.sp());
        EXPECT(0xae3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3a));
        EXPECT(0x17, gbc.readMem(0xae3b));
        // CB 17 00D2
        gbc.setState(0x801a, 0xfe99, 0xb120, 0xd96c, 0xe109, 0xf517, 0x0, 0x1);
        gbc.writeMem(0x801a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfe99, gbc.sp());
        EXPECT(0x801c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801a));
        EXPECT(0x17, gbc.readMem(0x801b));
        // CB 17 00D3
        gbc.setState(0x117e, 0xe181, 0xc750, 0xa46e, 0x8d4e, 0xf029, 0x0, 0x1);
        gbc.writeMem(0x117e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe181, gbc.sp());
        EXPECT(0x1180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00D4
        gbc.setState(0x7947, 0xfa6b, 0x3cd0, 0xfbca, 0x7a66, 0x23da, 0x1, 0x1);
        gbc.writeMem(0x7947, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfa6b, gbc.sp());
        EXPECT(0x7949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00D6
        gbc.setState(0xea02, 0xe64b, 0xc6a0, 0x43ad, 0xd143, 0xad12, 0x1, 0x1);
        gbc.writeMem(0xea02, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe64b, gbc.sp());
        EXPECT(0xea04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea02));
        EXPECT(0x17, gbc.readMem(0xea03));
        // CB 17 00D7
        gbc.setState(0x6b91, 0xf6c5, 0x44b0, 0x957f, 0xd134, 0xd013, 0x0, 0x0);
        gbc.writeMem(0x6b91, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf6c5, gbc.sp());
        EXPECT(0x6b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00D9
        gbc.setState(0xc87f, 0xddae, 0xb3c0, 0xc25, 0xfabd, 0xe14e, 0x0, 0x1);
        gbc.writeMem(0xc87f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xddae, gbc.sp());
        EXPECT(0xc881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87f));
        EXPECT(0x17, gbc.readMem(0xc880));
        // CB 17 00DA
        gbc.setState(0xa31f, 0x854a, 0x5e40, 0xbfde, 0x6b31, 0x5cdd, 0x0, 0x0);
        gbc.writeMem(0xa31f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x854a, gbc.sp());
        EXPECT(0xa321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31f));
        EXPECT(0x17, gbc.readMem(0xa320));
        // CB 17 00DB
        gbc.setState(0x1d1e, 0xb578, 0x4350, 0xbdb6, 0xee5e, 0xf67, 0x0, 0x1);
        gbc.writeMem(0x1d1e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb578, gbc.sp());
        EXPECT(0x1d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00DC
        gbc.setState(0xda49, 0x8808, 0x280, 0x6307, 0xfee1, 0x8538, 0x1, 0x0);
        gbc.writeMem(0xda49, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8808, gbc.sp());
        EXPECT(0xda4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda49));
        EXPECT(0x17, gbc.readMem(0xda4a));
        // CB 17 00DD
        gbc.setState(0x33fa, 0x9c9d, 0x1ac0, 0xcf16, 0x1318, 0xdbf2, 0x0, 0x0);
        gbc.writeMem(0x33fa, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9c9d, gbc.sp());
        EXPECT(0x33fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00DE
        gbc.setState(0x71e5, 0x8ae0, 0x8f00, 0x1dd9, 0x9209, 0x2216, 0x1, 0x0);
        gbc.writeMem(0x71e5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8ae0, gbc.sp());
        EXPECT(0x71e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00DF
        gbc.setState(0x2b77, 0xffc4, 0x5530, 0x3734, 0x29c2, 0x52de, 0x1, 0x1);
        gbc.writeMem(0x2b77, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xffc4, gbc.sp());
        EXPECT(0x2b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00E0
        gbc.setState(0xdec, 0x9996, 0x4b10, 0xef46, 0xfd32, 0x609f, 0x0, 0x0);
        gbc.writeMem(0xdec, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9996, gbc.sp());
        EXPECT(0xdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00E1
        gbc.setState(0x42c8, 0xd8be, 0x9260, 0xce50, 0x15a5, 0x3b90, 0x1, 0x0);
        gbc.writeMem(0x42c8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd8be, gbc.sp());
        EXPECT(0x42ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00E2
        gbc.setState(0xa9b0, 0x6058, 0xe940, 0xfbc, 0x6d98, 0x40f1, 0x0, 0x0);
        gbc.writeMem(0xa9b0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6058, gbc.sp());
        EXPECT(0xa9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b0));
        EXPECT(0x17, gbc.readMem(0xa9b1));
        // CB 17 00E3
        gbc.setState(0xa2f, 0xf42a, 0x98a0, 0x6c28, 0x9da3, 0x455a, 0x0, 0x0);
        gbc.writeMem(0xa2f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf42a, gbc.sp());
        EXPECT(0xa31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00E4
        gbc.setState(0x872, 0xd12a, 0x8730, 0xc919, 0x9a9d, 0xdc8a, 0x0, 0x1);
        gbc.writeMem(0x872, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd12a, gbc.sp());
        EXPECT(0x874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00E5
        gbc.setState(0xb313, 0xaad4, 0x14a0, 0xc6e1, 0x2d0d, 0xee4f, 0x1, 0x1);
        gbc.writeMem(0xb313, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaad4, gbc.sp());
        EXPECT(0xb315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb313));
        EXPECT(0x17, gbc.readMem(0xb314));
        // CB 17 00E6
        gbc.setState(0x9729, 0x27bc, 0xeab0, 0xd1ea, 0x9489, 0x847a, 0x1, 0x1);
        gbc.writeMem(0x9729, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x27bc, gbc.sp());
        EXPECT(0x972b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9729));
        EXPECT(0x17, gbc.readMem(0x972a));
        // CB 17 00E7
        gbc.setState(0xbd9c, 0x26e6, 0xed90, 0x65ce, 0x3c11, 0x7581, 0x1, 0x0);
        gbc.writeMem(0xbd9c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x26e6, gbc.sp());
        EXPECT(0xbd9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9c));
        EXPECT(0x17, gbc.readMem(0xbd9d));
        // CB 17 00E8
        gbc.setState(0x9a1b, 0x5210, 0xdf80, 0xc8cd, 0x28a7, 0x1ff6, 0x1, 0x1);
        gbc.writeMem(0x9a1b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5210, gbc.sp());
        EXPECT(0x9a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1b));
        EXPECT(0x17, gbc.readMem(0x9a1c));
        // CB 17 00E9
        gbc.setState(0x47b2, 0xb560, 0xdfa0, 0x19e1, 0xbf6f, 0xa68a, 0x1, 0x1);
        gbc.writeMem(0x47b2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb560, gbc.sp());
        EXPECT(0x47b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00EA
        gbc.setState(0x6eee, 0x659b, 0xb150, 0xdada, 0x452b, 0x96fc, 0x1, 0x1);
        gbc.writeMem(0x6eee, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x659b, gbc.sp());
        EXPECT(0x6ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00EB
        gbc.setState(0x43ed, 0x7ed8, 0x1460, 0xc6dc, 0xce08, 0x13a, 0x1, 0x0);
        gbc.writeMem(0x43ed, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7ed8, gbc.sp());
        EXPECT(0x43ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00EC
        gbc.setState(0xd707, 0xdf61, 0xa580, 0x4a3f, 0x99cb, 0xe227, 0x1, 0x0);
        gbc.writeMem(0xd707, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdf61, gbc.sp());
        EXPECT(0xd709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd707));
        EXPECT(0x17, gbc.readMem(0xd708));
        // CB 17 00ED
        gbc.setState(0x3519, 0x8798, 0x81e0, 0xdb99, 0x1e77, 0xfe78, 0x1, 0x1);
        gbc.writeMem(0x3519, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8798, gbc.sp());
        EXPECT(0x351b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00EE
        gbc.setState(0x1ebd, 0xf49, 0xee60, 0x89ed, 0x6fc2, 0xaeb2, 0x1, 0x0);
        gbc.writeMem(0x1ebd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf49, gbc.sp());
        EXPECT(0x1ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00EF
        gbc.setState(0x8e9, 0x2a85, 0x74d0, 0xa31e, 0x687a, 0x9b69, 0x1, 0x1);
        gbc.writeMem(0x8e9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2a85, gbc.sp());
        EXPECT(0x8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00F0
        gbc.setState(0xb45d, 0x1d5f, 0x7860, 0xf44e, 0xb541, 0xd233, 0x0, 0x0);
        gbc.writeMem(0xb45d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1d5f, gbc.sp());
        EXPECT(0xb45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45d));
        EXPECT(0x17, gbc.readMem(0xb45e));
        // CB 17 00F2
        gbc.setState(0x1d82, 0x28f2, 0xeee0, 0x9380, 0xfbde, 0x4d49, 0x0, 0x0);
        gbc.writeMem(0x1d82, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x28f2, gbc.sp());
        EXPECT(0x1d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 00F3
        gbc.setState(0xed4c, 0x20a, 0xc890, 0x9baa, 0xa112, 0xd986, 0x1, 0x0);
        gbc.writeMem(0xed4c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x20a, gbc.sp());
        EXPECT(0xed4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed4c));
        EXPECT(0x17, gbc.readMem(0xed4d));
        // CB 17 00F4
        gbc.setState(0xedba, 0xf4af, 0x8070, 0x7991, 0x4d79, 0xdf90, 0x1, 0x0);
        gbc.writeMem(0xedba, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf4af, gbc.sp());
        EXPECT(0xedbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedba));
        EXPECT(0x17, gbc.readMem(0xedbb));
        // CB 17 00F5
        gbc.setState(0x3bba, 0x11c3, 0x7810, 0xca24, 0x2c61, 0x90b3, 0x0, 0x1);
        gbc.writeMem(0x3bba, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x11c3, gbc.sp());
        EXPECT(0x3bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00F6
        gbc.setState(0xda73, 0xfd72, 0xdc00, 0x5d1e, 0x7135, 0xe1fc, 0x0, 0x0);
        gbc.writeMem(0xda73, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0xda75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda73));
        EXPECT(0x17, gbc.readMem(0xda74));
        // CB 17 00F7
        gbc.setState(0xb19b, 0x2b02, 0xf10, 0x28b9, 0xc28e, 0x7a0d, 0x0, 0x0);
        gbc.writeMem(0xb19b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2b02, gbc.sp());
        EXPECT(0xb19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19b));
        EXPECT(0x17, gbc.readMem(0xb19c));
        // CB 17 00F9
        gbc.setState(0xd75d, 0xf47c, 0xd6a0, 0xa90e, 0xeea0, 0xd588, 0x1, 0x1);
        gbc.writeMem(0xd75d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf47c, gbc.sp());
        EXPECT(0xd75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75d));
        EXPECT(0x17, gbc.readMem(0xd75e));
        // CB 17 00FA
        gbc.setState(0xb565, 0x1525, 0x4f20, 0xa8ad, 0xce4b, 0x2dee, 0x1, 0x1);
        gbc.writeMem(0xb565, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1525, gbc.sp());
        EXPECT(0xb567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb565));
        EXPECT(0x17, gbc.readMem(0xb566));
        // CB 17 00FB
        gbc.setState(0xc88d, 0x7c50, 0x4b0, 0xbd4f, 0xa09c, 0xae0c, 0x1, 0x0);
        gbc.writeMem(0xc88d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7c50, gbc.sp());
        EXPECT(0xc88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88d));
        EXPECT(0x17, gbc.readMem(0xc88e));
        // CB 17 00FC
        gbc.setState(0x5dc, 0x50e7, 0x1310, 0x9eba, 0x2375, 0xc21f, 0x1, 0x0);
        gbc.writeMem(0x5dc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x50e7, gbc.sp());
        EXPECT(0x5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00FD
        gbc.setState(0xd4b5, 0x671, 0xd0b0, 0x4ab1, 0xaa3, 0x15d3, 0x1, 0x1);
        gbc.writeMem(0xd4b5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x671, gbc.sp());
        EXPECT(0xd4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b5));
        EXPECT(0x17, gbc.readMem(0xd4b6));
        // CB 17 00FE
        gbc.setState(0x1677, 0x1226, 0x6960, 0xd128, 0xed18, 0x99c6, 0x1, 0x0);
        gbc.writeMem(0x1677, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1226, gbc.sp());
        EXPECT(0x1679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 00FF
        gbc.setState(0x388, 0xfbeb, 0x45d0, 0x0, 0xcde7, 0x52e6, 0x0, 0x1);
        gbc.writeMem(0x388, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfbeb, gbc.sp());
        EXPECT(0x38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0100
        gbc.setState(0xd209, 0xfb77, 0xa1d0, 0xc1e9, 0xdaf7, 0xe16c, 0x1, 0x0);
        gbc.writeMem(0xd209, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfb77, gbc.sp());
        EXPECT(0xd20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd209));
        EXPECT(0x17, gbc.readMem(0xd20a));
        // CB 17 0101
        gbc.setState(0xf51, 0x2003, 0x8b00, 0xf676, 0x5cfd, 0xd7c3, 0x0, 0x1);
        gbc.writeMem(0xf51, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2003, gbc.sp());
        EXPECT(0xf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0102
        gbc.setState(0x1ee6, 0x6e1f, 0x5f60, 0xeb83, 0x1257, 0x8b32, 0x0, 0x0);
        gbc.writeMem(0x1ee6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6e1f, gbc.sp());
        EXPECT(0x1ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0103
        gbc.setState(0xcd86, 0x4a11, 0x60e0, 0x6f93, 0x9102, 0xf695, 0x1, 0x1);
        gbc.writeMem(0xcd86, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4a11, gbc.sp());
        EXPECT(0xcd88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd86));
        EXPECT(0x17, gbc.readMem(0xcd87));
        // CB 17 0104
        gbc.setState(0x1ec0, 0x7980, 0x9940, 0xc02f, 0xc85d, 0xc949, 0x0, 0x1);
        gbc.writeMem(0x1ec0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7980, gbc.sp());
        EXPECT(0x1ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0105
        gbc.setState(0x1c91, 0x575b, 0xfb70, 0xf611, 0xfeb1, 0xf943, 0x1, 0x0);
        gbc.writeMem(0x1c91, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x575b, gbc.sp());
        EXPECT(0x1c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0107
        gbc.setState(0x3141, 0x7288, 0x4490, 0x2535, 0xe98, 0x4f3c, 0x0, 0x0);
        gbc.writeMem(0x3141, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7288, gbc.sp());
        EXPECT(0x3143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0108
        gbc.setState(0x1ea4, 0x632d, 0x89e0, 0xc495, 0x5235, 0x8d2d, 0x1, 0x0);
        gbc.writeMem(0x1ea4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x632d, gbc.sp());
        EXPECT(0x1ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0109
        gbc.setState(0x5fa9, 0x9349, 0x2620, 0x7ced, 0x1e60, 0xdbb9, 0x1, 0x0);
        gbc.writeMem(0x5fa9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9349, gbc.sp());
        EXPECT(0x5fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 010A
        gbc.setState(0x1851, 0x89e1, 0xaf70, 0xa9a5, 0x1e3f, 0x5df0, 0x1, 0x0);
        gbc.writeMem(0x1851, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x89e1, gbc.sp());
        EXPECT(0x1853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 010B
        gbc.setState(0x32ad, 0xdb3d, 0xbc70, 0xdd24, 0xa4ca, 0x38fa, 0x1, 0x1);
        gbc.writeMem(0x32ad, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdb3d, gbc.sp());
        EXPECT(0x32af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 010C
        gbc.setState(0x6c07, 0xf6f4, 0x2100, 0xcabf, 0x6cff, 0xe6f2, 0x1, 0x0);
        gbc.writeMem(0x6c07, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf6f4, gbc.sp());
        EXPECT(0x6c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 010D
        gbc.setState(0x3bd1, 0x3be6, 0x4c70, 0x9b76, 0xc790, 0x8ce3, 0x1, 0x1);
        gbc.writeMem(0x3bd1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3be6, gbc.sp());
        EXPECT(0x3bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 010E
        gbc.setState(0x4126, 0xe61b, 0xd700, 0xeb85, 0xc431, 0x8aba, 0x1, 0x1);
        gbc.writeMem(0x4126, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe61b, gbc.sp());
        EXPECT(0x4128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 010F
        gbc.setState(0x6a25, 0x4804, 0x8550, 0x6732, 0x3000, 0x1564, 0x0, 0x0);
        gbc.writeMem(0x6a25, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4804, gbc.sp());
        EXPECT(0x6a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0110
        gbc.setState(0x36fd, 0xc6bf, 0x1430, 0x3351, 0xcb45, 0x5000, 0x1, 0x1);
        gbc.writeMem(0x36fd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc6bf, gbc.sp());
        EXPECT(0x36ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0111
        gbc.setState(0x5e32, 0xf7f, 0x96f0, 0xc60, 0x2063, 0x2800, 0x1, 0x1);
        gbc.writeMem(0x5e32, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf7f, gbc.sp());
        EXPECT(0x5e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0112
        gbc.setState(0x8ea9, 0xb342, 0x4ba0, 0xef5e, 0x9892, 0x4649, 0x1, 0x1);
        gbc.writeMem(0x8ea9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb342, gbc.sp());
        EXPECT(0x8eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea9));
        EXPECT(0x17, gbc.readMem(0x8eaa));
        // CB 17 0113
        gbc.setState(0x53e2, 0xcc32, 0xbb00, 0xb5f0, 0x6ce3, 0xdb55, 0x0, 0x0);
        gbc.writeMem(0x53e2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcc32, gbc.sp());
        EXPECT(0x53e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0114
        gbc.setState(0x9a0, 0x5be1, 0xe120, 0x588a, 0x305f, 0x9b6f, 0x1, 0x0);
        gbc.writeMem(0x9a0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5be1, gbc.sp());
        EXPECT(0x9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0115
        gbc.setState(0xb823, 0x6256, 0x42b0, 0x1d48, 0xacf9, 0x136a, 0x1, 0x1);
        gbc.writeMem(0xb823, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6256, gbc.sp());
        EXPECT(0xb825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb823));
        EXPECT(0x17, gbc.readMem(0xb824));
        // CB 17 0116
        gbc.setState(0x42e7, 0xdc8b, 0x7400, 0x9b16, 0x8395, 0xe78d, 0x1, 0x0);
        gbc.writeMem(0x42e7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdc8b, gbc.sp());
        EXPECT(0x42e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0117
        gbc.setState(0x481d, 0xc873, 0xc630, 0xd381, 0xa1e4, 0x58a7, 0x0, 0x1);
        gbc.writeMem(0x481d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc873, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0118
        gbc.setState(0xc61a, 0xcc76, 0x2140, 0x6fba, 0xbd77, 0x34ea, 0x0, 0x1);
        gbc.writeMem(0xc61a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcc76, gbc.sp());
        EXPECT(0xc61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61a));
        EXPECT(0x17, gbc.readMem(0xc61b));
        // CB 17 0119
        gbc.setState(0x6317, 0xeafe, 0xf8d0, 0x7956, 0x17e4, 0xa492, 0x0, 0x1);
        gbc.writeMem(0x6317, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xeafe, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 011A
        gbc.setState(0x4790, 0x9761, 0x8260, 0xcbf1, 0x874a, 0x1ded, 0x1, 0x0);
        gbc.writeMem(0x4790, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9761, gbc.sp());
        EXPECT(0x4792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 011B
        gbc.setState(0x7537, 0x97bc, 0x9200, 0x65e5, 0xab3c, 0x50f8, 0x0, 0x1);
        gbc.writeMem(0x7537, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x97bc, gbc.sp());
        EXPECT(0x7539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 011C
        gbc.setState(0x21b4, 0xc2e9, 0x5280, 0xc2c1, 0x1974, 0x986, 0x0, 0x1);
        gbc.writeMem(0x21b4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc2e9, gbc.sp());
        EXPECT(0x21b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 011D
        gbc.setState(0x8ecb, 0x21ae, 0x1c60, 0xd701, 0x95c6, 0x8964, 0x0, 0x0);
        gbc.writeMem(0x8ecb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x21ae, gbc.sp());
        EXPECT(0x8ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecb));
        EXPECT(0x17, gbc.readMem(0x8ecc));
        // CB 17 011E
        gbc.setState(0x1175, 0x385c, 0x8940, 0xd507, 0x79b3, 0xad38, 0x0, 0x0);
        gbc.writeMem(0x1175, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x385c, gbc.sp());
        EXPECT(0x1177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0120
        gbc.setState(0x4b51, 0x5a23, 0x6230, 0x320e, 0x34ae, 0x5a62, 0x1, 0x0);
        gbc.writeMem(0x4b51, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5a23, gbc.sp());
        EXPECT(0x4b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0121
        gbc.setState(0xb97d, 0xa674, 0x1970, 0x8e69, 0x2a27, 0x4d50, 0x0, 0x0);
        gbc.writeMem(0xb97d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa674, gbc.sp());
        EXPECT(0xb97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97d));
        EXPECT(0x17, gbc.readMem(0xb97e));
        // CB 17 0122
        gbc.setState(0x6155, 0x6a1b, 0x4b00, 0xb2a, 0x9282, 0xe8fc, 0x1, 0x1);
        gbc.writeMem(0x6155, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6a1b, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0123
        gbc.setState(0xb1d, 0x43d3, 0x8e30, 0x30c2, 0x18c9, 0xd038, 0x0, 0x1);
        gbc.writeMem(0xb1d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x43d3, gbc.sp());
        EXPECT(0xb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0124
        gbc.setState(0xb7e, 0xe020, 0x3c90, 0x4600, 0x71a5, 0x1225, 0x1, 0x1);
        gbc.writeMem(0xb7e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe020, gbc.sp());
        EXPECT(0xb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0125
        gbc.setState(0xa716, 0x4171, 0x6140, 0xd6ee, 0xb46b, 0xe6cf, 0x1, 0x0);
        gbc.writeMem(0xa716, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4171, gbc.sp());
        EXPECT(0xa718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa716));
        EXPECT(0x17, gbc.readMem(0xa717));
        // CB 17 0126
        gbc.setState(0x9bbc, 0xc15d, 0x6360, 0xa13, 0xd089, 0x5f16, 0x1, 0x0);
        gbc.writeMem(0x9bbc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc15d, gbc.sp());
        EXPECT(0x9bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbc));
        EXPECT(0x17, gbc.readMem(0x9bbd));
        // CB 17 0127
        gbc.setState(0x6c9c, 0xdcfc, 0x88d0, 0xadf3, 0xbb3b, 0xe8e3, 0x1, 0x0);
        gbc.writeMem(0x6c9c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdcfc, gbc.sp());
        EXPECT(0x6c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0128
        gbc.setState(0xeaee, 0x2784, 0x76f0, 0x24cf, 0x84ea, 0x175, 0x1, 0x1);
        gbc.writeMem(0xeaee, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2784, gbc.sp());
        EXPECT(0xeaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaee));
        EXPECT(0x17, gbc.readMem(0xeaef));
        // CB 17 0129
        gbc.setState(0xcc2e, 0x7030, 0x32e0, 0x6f86, 0xe020, 0xc8e6, 0x1, 0x0);
        gbc.writeMem(0xcc2e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7030, gbc.sp());
        EXPECT(0xcc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2e));
        EXPECT(0x17, gbc.readMem(0xcc2f));
        // CB 17 012A
        gbc.setState(0xd2b1, 0xd996, 0x9240, 0x7a00, 0x4ab0, 0x8e7f, 0x1, 0x1);
        gbc.writeMem(0xd2b1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd996, gbc.sp());
        EXPECT(0xd2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b1));
        EXPECT(0x17, gbc.readMem(0xd2b2));
        // CB 17 012B
        gbc.setState(0x6709, 0xdf8b, 0xb6b0, 0x9521, 0x53a2, 0xa105, 0x1, 0x0);
        gbc.writeMem(0x6709, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdf8b, gbc.sp());
        EXPECT(0x670b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 012C
        gbc.setState(0x1c0b, 0x910d, 0xdcb0, 0x6a66, 0xa309, 0x6870, 0x0, 0x0);
        gbc.writeMem(0x1c0b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x910d, gbc.sp());
        EXPECT(0x1c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 012D
        gbc.setState(0x86cc, 0xb15b, 0xc2d0, 0x6ae, 0xcdb5, 0x6f56, 0x0, 0x1);
        gbc.writeMem(0x86cc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0x86ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86cc));
        EXPECT(0x17, gbc.readMem(0x86cd));
        // CB 17 012E
        gbc.setState(0x92e8, 0x6c63, 0xb7e0, 0xe908, 0x8925, 0x9e74, 0x1, 0x0);
        gbc.writeMem(0x92e8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6c63, gbc.sp());
        EXPECT(0x92ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e8));
        EXPECT(0x17, gbc.readMem(0x92e9));
        // CB 17 012F
        gbc.setState(0xa0ef, 0x7b63, 0x9030, 0x4c39, 0x679c, 0xeafc, 0x1, 0x0);
        gbc.writeMem(0xa0ef, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7b63, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ef));
        EXPECT(0x17, gbc.readMem(0xa0f0));
        // CB 17 0130
        gbc.setState(0xbe4c, 0x957a, 0x5b80, 0xfeea, 0xc33a, 0xc194, 0x0, 0x1);
        gbc.writeMem(0xbe4c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x957a, gbc.sp());
        EXPECT(0xbe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4c));
        EXPECT(0x17, gbc.readMem(0xbe4d));
        // CB 17 0131
        gbc.setState(0x5d7c, 0x2f16, 0x6750, 0xace9, 0x2383, 0xa677, 0x0, 0x1);
        gbc.writeMem(0x5d7c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2f16, gbc.sp());
        EXPECT(0x5d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0132
        gbc.setState(0xedb6, 0x962f, 0x27f0, 0xaee3, 0x9c01, 0xd220, 0x1, 0x0);
        gbc.writeMem(0xedb6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x962f, gbc.sp());
        EXPECT(0xedb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb6));
        EXPECT(0x17, gbc.readMem(0xedb7));
        // CB 17 0133
        gbc.setState(0x8727, 0x462d, 0x86e0, 0x90b3, 0xcafd, 0x96a8, 0x0, 0x1);
        gbc.writeMem(0x8727, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x462d, gbc.sp());
        EXPECT(0x8729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8727));
        EXPECT(0x17, gbc.readMem(0x8728));
        // CB 17 0134
        gbc.setState(0xab9, 0x908e, 0x10c0, 0x784a, 0xb999, 0xe6d2, 0x1, 0x1);
        gbc.writeMem(0xab9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x908e, gbc.sp());
        EXPECT(0xabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0135
        gbc.setState(0x2bd, 0x834a, 0x6f80, 0xef79, 0xea7e, 0xb850, 0x0, 0x1);
        gbc.writeMem(0x2bd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x834a, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0136
        gbc.setState(0x75b8, 0x6818, 0xa2f0, 0x4753, 0x7d52, 0xd7df, 0x0, 0x0);
        gbc.writeMem(0x75b8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6818, gbc.sp());
        EXPECT(0x75ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0137
        gbc.setState(0x4f0, 0x224d, 0xc3e0, 0xcf4, 0x2b28, 0xefd5, 0x0, 0x0);
        gbc.writeMem(0x4f0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x224d, gbc.sp());
        EXPECT(0x4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0138
        gbc.setState(0x64f4, 0x7cd0, 0x8fb0, 0x11f8, 0xaef3, 0xc085, 0x0, 0x1);
        gbc.writeMem(0x64f4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7cd0, gbc.sp());
        EXPECT(0x64f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0139
        gbc.setState(0xe321, 0x886d, 0xb300, 0x1e6a, 0xabcd, 0x1054, 0x0, 0x0);
        gbc.writeMem(0xe321, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x886d, gbc.sp());
        EXPECT(0xe323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe321));
        EXPECT(0x17, gbc.readMem(0xe322));
        // CB 17 013A
        gbc.setState(0xd969, 0x285d, 0x9550, 0x3463, 0xc2b8, 0x5f82, 0x1, 0x1);
        gbc.writeMem(0xd969, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x285d, gbc.sp());
        EXPECT(0xd96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd969));
        EXPECT(0x17, gbc.readMem(0xd96a));
        // CB 17 013B
        gbc.setState(0x990, 0x9382, 0xc670, 0xb900, 0x7b60, 0xbafe, 0x1, 0x1);
        gbc.writeMem(0x990, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9382, gbc.sp());
        EXPECT(0x992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 013C
        gbc.setState(0x2a76, 0x715b, 0xee0, 0xd098, 0x1efc, 0x2613, 0x1, 0x0);
        gbc.writeMem(0x2a76, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x715b, gbc.sp());
        EXPECT(0x2a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 013E
        gbc.setState(0x909f, 0xbb1b, 0x3430, 0x51a0, 0x7a8b, 0xed5, 0x0, 0x0);
        gbc.writeMem(0x909f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbb1b, gbc.sp());
        EXPECT(0x90a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909f));
        EXPECT(0x17, gbc.readMem(0x90a0));
        // CB 17 013F
        gbc.setState(0x7823, 0x7d5a, 0xb280, 0xa8bd, 0xdbb4, 0xc344, 0x1, 0x1);
        gbc.writeMem(0x7823, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7d5a, gbc.sp());
        EXPECT(0x7825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0140
        gbc.setState(0x88b8, 0x2b71, 0x1b40, 0xf876, 0x7e12, 0x16fa, 0x0, 0x1);
        gbc.writeMem(0x88b8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2b71, gbc.sp());
        EXPECT(0x88ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b8));
        EXPECT(0x17, gbc.readMem(0x88b9));
        // CB 17 0141
        gbc.setState(0x252e, 0x8547, 0x4990, 0xc0f8, 0x74f3, 0x56b1, 0x0, 0x0);
        gbc.writeMem(0x252e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8547, gbc.sp());
        EXPECT(0x2530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0142
        gbc.setState(0xea0d, 0x8f44, 0x2b90, 0x6e5a, 0x6931, 0xc7ff, 0x0, 0x0);
        gbc.writeMem(0xea0d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8f44, gbc.sp());
        EXPECT(0xea0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0d));
        EXPECT(0x17, gbc.readMem(0xea0e));
        // CB 17 0143
        gbc.setState(0x9ac6, 0x7fd, 0x8ab0, 0xde54, 0xbc2b, 0x6a5a, 0x0, 0x0);
        gbc.writeMem(0x9ac6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7fd, gbc.sp());
        EXPECT(0x9ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac6));
        EXPECT(0x17, gbc.readMem(0x9ac7));
        // CB 17 0144
        gbc.setState(0x80db, 0xecae, 0xcaa0, 0xf4c8, 0x3701, 0xfc94, 0x1, 0x0);
        gbc.writeMem(0x80db, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xecae, gbc.sp());
        EXPECT(0x80dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80db));
        EXPECT(0x17, gbc.readMem(0x80dc));
        // CB 17 0145
        gbc.setState(0xdf85, 0xa99, 0x2690, 0x718e, 0xdec, 0xa463, 0x1, 0x0);
        gbc.writeMem(0xdf85, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa99, gbc.sp());
        EXPECT(0xdf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf85));
        EXPECT(0x17, gbc.readMem(0xdf86));
        // CB 17 0146
        gbc.setState(0x1435, 0xc36a, 0x50f0, 0x78f3, 0x8d40, 0x693f, 0x1, 0x1);
        gbc.writeMem(0x1435, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc36a, gbc.sp());
        EXPECT(0x1437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0147
        gbc.setState(0xfca, 0xdc5f, 0xa360, 0x78ef, 0xddbb, 0xc2c8, 0x0, 0x1);
        gbc.writeMem(0xfca, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdc5f, gbc.sp());
        EXPECT(0xfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0148
        gbc.setState(0x76e5, 0x7c20, 0x4940, 0x5baf, 0x116d, 0xb1a3, 0x0, 0x0);
        gbc.writeMem(0x76e5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7c20, gbc.sp());
        EXPECT(0x76e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0149
        gbc.setState(0xabdb, 0xe754, 0xf9c0, 0x469a, 0x6e9c, 0xda44, 0x0, 0x0);
        gbc.writeMem(0xabdb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe754, gbc.sp());
        EXPECT(0xabdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabdb));
        EXPECT(0x17, gbc.readMem(0xabdc));
        // CB 17 014A
        gbc.setState(0xc54f, 0x3b6a, 0xb050, 0x4ba3, 0xde8c, 0x737c, 0x1, 0x0);
        gbc.writeMem(0xc54f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3b6a, gbc.sp());
        EXPECT(0xc551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54f));
        EXPECT(0x17, gbc.readMem(0xc550));
        // CB 17 014B
        gbc.setState(0xb90e, 0x8899, 0x1e20, 0x64f6, 0xd95f, 0x7c6d, 0x1, 0x1);
        gbc.writeMem(0xb90e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8899, gbc.sp());
        EXPECT(0xb910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90e));
        EXPECT(0x17, gbc.readMem(0xb90f));
        // CB 17 014C
        gbc.setState(0x1df7, 0x858d, 0x19d0, 0x97fc, 0xa121, 0x9db5, 0x1, 0x0);
        gbc.writeMem(0x1df7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x858d, gbc.sp());
        EXPECT(0x1df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 014D
        gbc.setState(0x63d, 0x2d51, 0xe140, 0x1615, 0x135c, 0xd411, 0x0, 0x1);
        gbc.writeMem(0x63d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2d51, gbc.sp());
        EXPECT(0x63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 014E
        gbc.setState(0x86fb, 0xe33c, 0x57c0, 0x89d6, 0x3670, 0xd94b, 0x0, 0x1);
        gbc.writeMem(0x86fb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe33c, gbc.sp());
        EXPECT(0x86fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fb));
        EXPECT(0x17, gbc.readMem(0x86fc));
        // CB 17 014F
        gbc.setState(0x56e0, 0x1643, 0x57b0, 0x8b2a, 0xf3b8, 0xa466, 0x0, 0x0);
        gbc.writeMem(0x56e0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1643, gbc.sp());
        EXPECT(0x56e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0150
        gbc.setState(0xbbe7, 0xfe75, 0x25f0, 0x9102, 0xbf65, 0x2d3e, 0x1, 0x0);
        gbc.writeMem(0xbbe7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfe75, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe7));
        EXPECT(0x17, gbc.readMem(0xbbe8));
        // CB 17 0151
        gbc.setState(0x5c8a, 0x379c, 0x9930, 0x2ad5, 0xf2e4, 0xb20d, 0x0, 0x0);
        gbc.writeMem(0x5c8a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x379c, gbc.sp());
        EXPECT(0x5c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0152
        gbc.setState(0x890e, 0xa028, 0xb790, 0x6f23, 0xc401, 0x4454, 0x0, 0x1);
        gbc.writeMem(0x890e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa028, gbc.sp());
        EXPECT(0x8910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890e));
        EXPECT(0x17, gbc.readMem(0x890f));
        // CB 17 0153
        gbc.setState(0x9a64, 0xc401, 0x96f0, 0xcebc, 0x1d8b, 0x7ba7, 0x1, 0x0);
        gbc.writeMem(0x9a64, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc401, gbc.sp());
        EXPECT(0x9a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a64));
        EXPECT(0x17, gbc.readMem(0x9a65));
        // CB 17 0154
        gbc.setState(0x5b2e, 0x281d, 0x4f20, 0xcb59, 0x264b, 0x3540, 0x1, 0x0);
        gbc.writeMem(0x5b2e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x281d, gbc.sp());
        EXPECT(0x5b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0155
        gbc.setState(0x15b6, 0x7949, 0x1ab0, 0x767c, 0x56cf, 0x657d, 0x0, 0x0);
        gbc.writeMem(0x15b6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7949, gbc.sp());
        EXPECT(0x15b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0156
        gbc.setState(0x608e, 0x3c8a, 0x1f60, 0xc757, 0x7a13, 0x540a, 0x0, 0x0);
        gbc.writeMem(0x608e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3c8a, gbc.sp());
        EXPECT(0x6090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0158
        gbc.setState(0x4b7a, 0x951e, 0x3950, 0xdf04, 0xf16d, 0x3e8a, 0x1, 0x1);
        gbc.writeMem(0x4b7a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x951e, gbc.sp());
        EXPECT(0x4b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0159
        gbc.setState(0x110c, 0x4ca6, 0x6850, 0x979f, 0x188a, 0xcf30, 0x0, 0x1);
        gbc.writeMem(0x110c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4ca6, gbc.sp());
        EXPECT(0x110e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 015A
        gbc.setState(0x4e73, 0x81c3, 0x49c0, 0xc63f, 0xfc96, 0x1881, 0x0, 0x0);
        gbc.writeMem(0x4e73, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x81c3, gbc.sp());
        EXPECT(0x4e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 015B
        gbc.setState(0x5adb, 0x3cc4, 0x5010, 0x50c6, 0xa868, 0xf795, 0x0, 0x0);
        gbc.writeMem(0x5adb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3cc4, gbc.sp());
        EXPECT(0x5add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 015C
        gbc.setState(0xe675, 0x860, 0xe1f0, 0xbfd2, 0x74db, 0xd351, 0x1, 0x1);
        gbc.writeMem(0xe675, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x860, gbc.sp());
        EXPECT(0xe677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe675));
        EXPECT(0x17, gbc.readMem(0xe676));
        // CB 17 015D
        gbc.setState(0x9db4, 0x3c71, 0x860, 0x28f7, 0x84fa, 0x4eeb, 0x1, 0x1);
        gbc.writeMem(0x9db4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3c71, gbc.sp());
        EXPECT(0x9db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db4));
        EXPECT(0x17, gbc.readMem(0x9db5));
        // CB 17 015E
        gbc.setState(0x9c2b, 0xe962, 0x66e0, 0xcbf, 0x558e, 0xc20f, 0x1, 0x1);
        gbc.writeMem(0x9c2b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe962, gbc.sp());
        EXPECT(0x9c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2b));
        EXPECT(0x17, gbc.readMem(0x9c2c));
        // CB 17 015F
        gbc.setState(0x8fcd, 0xfbee, 0x6cd0, 0x77b6, 0xbebe, 0x980a, 0x1, 0x1);
        gbc.writeMem(0x8fcd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfbee, gbc.sp());
        EXPECT(0x8fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcd));
        EXPECT(0x17, gbc.readMem(0x8fce));
        // CB 17 0160
        gbc.setState(0x81d1, 0x98de, 0xe210, 0x1820, 0xd727, 0xcd61, 0x1, 0x1);
        gbc.writeMem(0x81d1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x98de, gbc.sp());
        EXPECT(0x81d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d1));
        EXPECT(0x17, gbc.readMem(0x81d2));
        // CB 17 0161
        gbc.setState(0xcace, 0x785f, 0x8f10, 0x343b, 0xee74, 0xd3c8, 0x0, 0x1);
        gbc.writeMem(0xcace, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x785f, gbc.sp());
        EXPECT(0xcad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcace));
        EXPECT(0x17, gbc.readMem(0xcacf));
        // CB 17 0162
        gbc.setState(0xba97, 0x11cc, 0x1810, 0x755c, 0x7155, 0xe0f, 0x1, 0x1);
        gbc.writeMem(0xba97, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x11cc, gbc.sp());
        EXPECT(0xba99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba97));
        EXPECT(0x17, gbc.readMem(0xba98));
        // CB 17 0163
        gbc.setState(0x2ba0, 0xaec0, 0x4fc0, 0x762b, 0xd7ca, 0x9932, 0x0, 0x1);
        gbc.writeMem(0x2ba0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaec0, gbc.sp());
        EXPECT(0x2ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0164
        gbc.setState(0x983, 0x4a30, 0x190, 0xcfc1, 0xf808, 0x59db, 0x0, 0x0);
        gbc.writeMem(0x983, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4a30, gbc.sp());
        EXPECT(0x985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0165
        gbc.setState(0xc95, 0x6bae, 0xa9a0, 0x16df, 0x5a5f, 0xc6b7, 0x0, 0x1);
        gbc.writeMem(0xc95, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6bae, gbc.sp());
        EXPECT(0xc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0166
        gbc.setState(0x7cda, 0x5d9f, 0x65f0, 0x60b3, 0xe1f4, 0x1d2b, 0x0, 0x0);
        gbc.writeMem(0x7cda, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5d9f, gbc.sp());
        EXPECT(0x7cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0168
        gbc.setState(0xa2f1, 0x1ac4, 0xcbb0, 0x73c6, 0xfee1, 0x1b58, 0x0, 0x1);
        gbc.writeMem(0xa2f1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1ac4, gbc.sp());
        EXPECT(0xa2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f1));
        EXPECT(0x17, gbc.readMem(0xa2f2));
        // CB 17 016A
        gbc.setState(0x38b0, 0xd2e, 0x2df0, 0xc72d, 0x88cd, 0xa128, 0x1, 0x1);
        gbc.writeMem(0x38b0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd2e, gbc.sp());
        EXPECT(0x38b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 016B
        gbc.setState(0xc0bf, 0x632c, 0xbba0, 0xb88e, 0x47bd, 0xf9e4, 0x0, 0x0);
        gbc.writeMem(0xc0bf, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x632c, gbc.sp());
        EXPECT(0xc0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0bf));
        EXPECT(0x17, gbc.readMem(0xc0c0));
        // CB 17 016C
        gbc.setState(0x915e, 0x39b2, 0x2d50, 0xf635, 0x7067, 0x1b14, 0x1, 0x0);
        gbc.writeMem(0x915e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x39b2, gbc.sp());
        EXPECT(0x9160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915e));
        EXPECT(0x17, gbc.readMem(0x915f));
        // CB 17 016E
        gbc.setState(0x4fc0, 0x32d, 0xf470, 0xf4b2, 0xb845, 0x9fe8, 0x0, 0x1);
        gbc.writeMem(0x4fc0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x32d, gbc.sp());
        EXPECT(0x4fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 016F
        gbc.setState(0x5f7b, 0x9636, 0x9f10, 0x52b9, 0xa915, 0x98a6, 0x1, 0x1);
        gbc.writeMem(0x5f7b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9636, gbc.sp());
        EXPECT(0x5f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0170
        gbc.setState(0x8b45, 0x8a40, 0x8bc0, 0xc2c8, 0x1693, 0x495a, 0x0, 0x0);
        gbc.writeMem(0x8b45, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8a40, gbc.sp());
        EXPECT(0x8b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b45));
        EXPECT(0x17, gbc.readMem(0x8b46));
        // CB 17 0171
        gbc.setState(0xe7ff, 0x93ec, 0xe5a0, 0x14d2, 0x2651, 0xc7c1, 0x0, 0x1);
        gbc.writeMem(0xe7ff, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x93ec, gbc.sp());
        EXPECT(0xe801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ff));
        EXPECT(0x17, gbc.readMem(0xe800));
        // CB 17 0172
        gbc.setState(0xb2f0, 0x7bd3, 0x8380, 0x85d8, 0xb649, 0x8f8a, 0x1, 0x1);
        gbc.writeMem(0xb2f0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7bd3, gbc.sp());
        EXPECT(0xb2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f0));
        EXPECT(0x17, gbc.readMem(0xb2f1));
        // CB 17 0174
        gbc.setState(0x312, 0xa3fd, 0xea40, 0x8c94, 0xdfd5, 0xc27b, 0x0, 0x1);
        gbc.writeMem(0x312, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa3fd, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0175
        gbc.setState(0x398e, 0x5153, 0x1300, 0xbee8, 0x1595, 0x2b77, 0x0, 0x1);
        gbc.writeMem(0x398e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5153, gbc.sp());
        EXPECT(0x3990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0176
        gbc.setState(0x156e, 0xf204, 0xd400, 0x821b, 0xdb8, 0x66bb, 0x1, 0x1);
        gbc.writeMem(0x156e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0x1570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0177
        gbc.setState(0x30ed, 0x7823, 0x3720, 0xb979, 0x24d4, 0xbdd1, 0x1, 0x0);
        gbc.writeMem(0x30ed, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7823, gbc.sp());
        EXPECT(0x30ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0178
        gbc.setState(0x3f9d, 0x44fe, 0x22e0, 0xa9f1, 0x847a, 0x6e5b, 0x1, 0x0);
        gbc.writeMem(0x3f9d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x44fe, gbc.sp());
        EXPECT(0x3f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 017A
        gbc.setState(0x423c, 0xc166, 0x7750, 0x18c5, 0xf102, 0xd60c, 0x0, 0x1);
        gbc.writeMem(0x423c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc166, gbc.sp());
        EXPECT(0x423e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 017B
        gbc.setState(0x68dd, 0xef6b, 0x9f50, 0x18c8, 0x1956, 0xf4a4, 0x1, 0x1);
        gbc.writeMem(0x68dd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xef6b, gbc.sp());
        EXPECT(0x68df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 017C
        gbc.setState(0xbe4, 0x25c6, 0xf060, 0x4f47, 0xbfdb, 0x90fd, 0x1, 0x1);
        gbc.writeMem(0xbe4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x25c6, gbc.sp());
        EXPECT(0xbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 017D
        gbc.setState(0x7b53, 0x2d8f, 0x8360, 0x8cd4, 0x2d99, 0x4a71, 0x1, 0x0);
        gbc.writeMem(0x7b53, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2d8f, gbc.sp());
        EXPECT(0x7b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 017E
        gbc.setState(0x16aa, 0xc05e, 0x8d20, 0xafcc, 0x1529, 0x4f88, 0x0, 0x1);
        gbc.writeMem(0x16aa, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc05e, gbc.sp());
        EXPECT(0x16ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 017F
        gbc.setState(0xca2f, 0xa290, 0xd510, 0x6f73, 0x7b30, 0x5c11, 0x1, 0x1);
        gbc.writeMem(0xca2f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa290, gbc.sp());
        EXPECT(0xca31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2f));
        EXPECT(0x17, gbc.readMem(0xca30));
        // CB 17 0180
        gbc.setState(0x8506, 0x3e52, 0xc8b0, 0x57d2, 0x26d3, 0xad67, 0x1, 0x1);
        gbc.writeMem(0x8506, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3e52, gbc.sp());
        EXPECT(0x8508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8506));
        EXPECT(0x17, gbc.readMem(0x8507));
        // CB 17 0181
        gbc.setState(0x20ba, 0x38b2, 0xda10, 0xf20a, 0x7cf6, 0x2bf0, 0x1, 0x1);
        gbc.writeMem(0x20ba, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x38b2, gbc.sp());
        EXPECT(0x20bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0182
        gbc.setState(0xed70, 0xf1a9, 0x8030, 0x513d, 0xeffb, 0x5d17, 0x0, 0x1);
        gbc.writeMem(0xed70, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf1a9, gbc.sp());
        EXPECT(0xed72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed70));
        EXPECT(0x17, gbc.readMem(0xed71));
        // CB 17 0183
        gbc.setState(0xbbbb, 0x6366, 0xccd0, 0x2ed2, 0x51ae, 0x1342, 0x0, 0x1);
        gbc.writeMem(0xbbbb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6366, gbc.sp());
        EXPECT(0xbbbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbb));
        EXPECT(0x17, gbc.readMem(0xbbbc));
        // CB 17 0184
        gbc.setState(0xc989, 0xf893, 0xbc50, 0x3de3, 0x7f8, 0x5f0c, 0x1, 0x0);
        gbc.writeMem(0xc989, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf893, gbc.sp());
        EXPECT(0xc98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc989));
        EXPECT(0x17, gbc.readMem(0xc98a));
        // CB 17 0185
        gbc.setState(0x6ae, 0xd2d3, 0xcd40, 0xa8d9, 0x9ee5, 0xd5c8, 0x1, 0x0);
        gbc.writeMem(0x6ae, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd2d3, gbc.sp());
        EXPECT(0x6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0186
        gbc.setState(0x5e99, 0xe54a, 0x5c10, 0x9719, 0x9a7d, 0x150e, 0x0, 0x0);
        gbc.writeMem(0x5e99, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe54a, gbc.sp());
        EXPECT(0x5e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0187
        gbc.setState(0x118a, 0x2776, 0xecb0, 0x6ac8, 0x3382, 0x2dac, 0x0, 0x0);
        gbc.writeMem(0x118a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2776, gbc.sp());
        EXPECT(0x118c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0188
        gbc.setState(0x5207, 0x508a, 0xd490, 0x9d90, 0xe710, 0xa10c, 0x1, 0x1);
        gbc.writeMem(0x5207, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x508a, gbc.sp());
        EXPECT(0x5209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0189
        gbc.setState(0xd775, 0xedbb, 0xc980, 0xebe0, 0xbda0, 0x5aec, 0x0, 0x0);
        gbc.writeMem(0xd775, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xedbb, gbc.sp());
        EXPECT(0xd777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd775));
        EXPECT(0x17, gbc.readMem(0xd776));
        // CB 17 018A
        gbc.setState(0x6462, 0x69b6, 0x6970, 0x6f70, 0x1d20, 0x884b, 0x0, 0x1);
        gbc.writeMem(0x6462, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x69b6, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 018B
        gbc.setState(0x3993, 0x8fd, 0x960, 0xfce3, 0x700f, 0x87c0, 0x1, 0x1);
        gbc.writeMem(0x3993, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8fd, gbc.sp());
        EXPECT(0x3995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 018C
        gbc.setState(0xc7cc, 0x2aea, 0xed70, 0x4445, 0x89a5, 0x677e, 0x0, 0x1);
        gbc.writeMem(0xc7cc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2aea, gbc.sp());
        EXPECT(0xc7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7cc));
        EXPECT(0x17, gbc.readMem(0xc7cd));
        // CB 17 018D
        gbc.setState(0x40f7, 0xfebf, 0x42b0, 0xbbde, 0x9583, 0x5ead, 0x0, 0x1);
        gbc.writeMem(0x40f7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfebf, gbc.sp());
        EXPECT(0x40f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 018E
        gbc.setState(0x8d7d, 0x570e, 0x75b0, 0xd8ea, 0x8b4c, 0xdc8c, 0x0, 0x0);
        gbc.writeMem(0x8d7d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x570e, gbc.sp());
        EXPECT(0x8d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7d));
        EXPECT(0x17, gbc.readMem(0x8d7e));
        // CB 17 0190
        gbc.setState(0x56a5, 0xb17e, 0x98c0, 0x50f8, 0xfeec, 0x4cf, 0x1, 0x0);
        gbc.writeMem(0x56a5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb17e, gbc.sp());
        EXPECT(0x56a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0191
        gbc.setState(0x935e, 0xa942, 0x6220, 0x10e3, 0xb1fd, 0xe3c3, 0x1, 0x0);
        gbc.writeMem(0x935e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa942, gbc.sp());
        EXPECT(0x9360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935e));
        EXPECT(0x17, gbc.readMem(0x935f));
        // CB 17 0192
        gbc.setState(0xcb9a, 0x625, 0x660, 0xbdf4, 0x1f6a, 0x57e9, 0x1, 0x1);
        gbc.writeMem(0xcb9a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x625, gbc.sp());
        EXPECT(0xcb9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9a));
        EXPECT(0x17, gbc.readMem(0xcb9b));
        // CB 17 0193
        gbc.setState(0x29bd, 0x10c5, 0x6e80, 0x2d01, 0xc530, 0xc6fb, 0x0, 0x1);
        gbc.writeMem(0x29bd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x10c5, gbc.sp());
        EXPECT(0x29bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0194
        gbc.setState(0x50aa, 0x6a21, 0xe880, 0x778b, 0x327f, 0xdf6, 0x0, 0x1);
        gbc.writeMem(0x50aa, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6a21, gbc.sp());
        EXPECT(0x50ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0195
        gbc.setState(0x5b28, 0x4c03, 0xd070, 0xb55e, 0xa448, 0x3a1, 0x1, 0x0);
        gbc.writeMem(0x5b28, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4c03, gbc.sp());
        EXPECT(0x5b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0196
        gbc.setState(0x91fb, 0x2cc7, 0xfb40, 0x58df, 0x1865, 0x82e5, 0x1, 0x1);
        gbc.writeMem(0x91fb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2cc7, gbc.sp());
        EXPECT(0x91fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fb));
        EXPECT(0x17, gbc.readMem(0x91fc));
        // CB 17 0197
        gbc.setState(0x15f9, 0xcbc9, 0xd750, 0x137a, 0xd4d8, 0xeb17, 0x1, 0x0);
        gbc.writeMem(0x15f9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcbc9, gbc.sp());
        EXPECT(0x15fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0198
        gbc.setState(0xce1c, 0xbb98, 0xc9c0, 0xc18e, 0x4475, 0xe183, 0x1, 0x0);
        gbc.writeMem(0xce1c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbb98, gbc.sp());
        EXPECT(0xce1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1c));
        EXPECT(0x17, gbc.readMem(0xce1d));
        // CB 17 0199
        gbc.setState(0xed14, 0xbb74, 0x91d0, 0x44a7, 0x6db7, 0xa93b, 0x1, 0x1);
        gbc.writeMem(0xed14, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbb74, gbc.sp());
        EXPECT(0xed16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed14));
        EXPECT(0x17, gbc.readMem(0xed15));
        // CB 17 019A
        gbc.setState(0x8ca, 0x79a8, 0x59d0, 0x2c06, 0x99cc, 0x6745, 0x1, 0x0);
        gbc.writeMem(0x8ca, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x79a8, gbc.sp());
        EXPECT(0x8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 019B
        gbc.setState(0x6608, 0xcf90, 0xf220, 0x74c2, 0x955e, 0xf1be, 0x0, 0x0);
        gbc.writeMem(0x6608, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcf90, gbc.sp());
        EXPECT(0x660a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 019C
        gbc.setState(0x27fc, 0x5b83, 0x9ff0, 0x3af7, 0xa21b, 0xb7a6, 0x1, 0x1);
        gbc.writeMem(0x27fc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5b83, gbc.sp());
        EXPECT(0x27fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 019D
        gbc.setState(0xb6aa, 0xde7f, 0x6fb0, 0x82a9, 0x2c74, 0x3a9d, 0x0, 0x0);
        gbc.writeMem(0xb6aa, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xde7f, gbc.sp());
        EXPECT(0xb6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6aa));
        EXPECT(0x17, gbc.readMem(0xb6ab));
        // CB 17 019E
        gbc.setState(0x8d93, 0xa399, 0x4e10, 0x7fbc, 0x59bf, 0xaaea, 0x1, 0x1);
        gbc.writeMem(0x8d93, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa399, gbc.sp());
        EXPECT(0x8d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d93));
        EXPECT(0x17, gbc.readMem(0x8d94));
        // CB 17 019F
        gbc.setState(0x4cf5, 0xf5fa, 0x9e00, 0xbbe5, 0x421b, 0xf9ea, 0x1, 0x1);
        gbc.writeMem(0x4cf5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf5fa, gbc.sp());
        EXPECT(0x4cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01A0
        gbc.setState(0x1169, 0xe303, 0x8c60, 0x9ed2, 0xa4d6, 0xbe21, 0x0, 0x1);
        gbc.writeMem(0x1169, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe303, gbc.sp());
        EXPECT(0x116b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01A1
        gbc.setState(0xc3e2, 0xbd0b, 0x4c80, 0xaa15, 0xc68f, 0xb2e6, 0x1, 0x1);
        gbc.writeMem(0xc3e2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbd0b, gbc.sp());
        EXPECT(0xc3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e2));
        EXPECT(0x17, gbc.readMem(0xc3e3));
        // CB 17 01A2
        gbc.setState(0x71a2, 0x3fa4, 0x1380, 0x8bd9, 0x52f7, 0xf87, 0x1, 0x0);
        gbc.writeMem(0x71a2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3fa4, gbc.sp());
        EXPECT(0x71a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01A3
        gbc.setState(0x8f94, 0xb20b, 0xf900, 0x4358, 0xf887, 0x7b1, 0x1, 0x1);
        gbc.writeMem(0x8f94, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb20b, gbc.sp());
        EXPECT(0x8f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f94));
        EXPECT(0x17, gbc.readMem(0x8f95));
        // CB 17 01A4
        gbc.setState(0x5e65, 0xd939, 0xc7f0, 0x8281, 0x37be, 0x7557, 0x1, 0x1);
        gbc.writeMem(0x5e65, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd939, gbc.sp());
        EXPECT(0x5e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01A6
        gbc.setState(0xefd, 0x34db, 0xae00, 0x51a7, 0x3056, 0x9194, 0x0, 0x1);
        gbc.writeMem(0xefd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x34db, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01A7
        gbc.setState(0x5067, 0x7c5b, 0x3910, 0x2439, 0x6f02, 0x45c2, 0x1, 0x1);
        gbc.writeMem(0x5067, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7c5b, gbc.sp());
        EXPECT(0x5069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01A8
        gbc.setState(0xe02f, 0xc2e1, 0x3fc0, 0x8c65, 0x7bc, 0x9275, 0x1, 0x0);
        gbc.writeMem(0xe02f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc2e1, gbc.sp());
        EXPECT(0xe031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02f));
        EXPECT(0x17, gbc.readMem(0xe030));
        // CB 17 01A9
        gbc.setState(0x334f, 0xa5f2, 0xdbc0, 0xbf3e, 0xd433, 0x2847, 0x1, 0x1);
        gbc.writeMem(0x334f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0x3351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01AA
        gbc.setState(0xab2f, 0x150f, 0xcf60, 0x98ba, 0x5c8d, 0xe1e7, 0x0, 0x1);
        gbc.writeMem(0xab2f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x150f, gbc.sp());
        EXPECT(0xab31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2f));
        EXPECT(0x17, gbc.readMem(0xab30));
        // CB 17 01AB
        gbc.setState(0x1872, 0x196a, 0xee30, 0xa1b4, 0x897f, 0x19a7, 0x1, 0x1);
        gbc.writeMem(0x1872, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x196a, gbc.sp());
        EXPECT(0x1874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01AC
        gbc.setState(0x93e7, 0x4515, 0x88c0, 0x33cb, 0x647a, 0xb751, 0x0, 0x1);
        gbc.writeMem(0x93e7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4515, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e7));
        EXPECT(0x17, gbc.readMem(0x93e8));
        // CB 17 01AD
        gbc.setState(0xe0d3, 0xfe6c, 0x76e0, 0x5206, 0x5ed7, 0x513b, 0x1, 0x1);
        gbc.writeMem(0xe0d3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfe6c, gbc.sp());
        EXPECT(0xe0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d3));
        EXPECT(0x17, gbc.readMem(0xe0d4));
        // CB 17 01AE
        gbc.setState(0xcb73, 0x6122, 0x68c0, 0xcc74, 0xa733, 0x8872, 0x0, 0x0);
        gbc.writeMem(0xcb73, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0xcb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb73));
        EXPECT(0x17, gbc.readMem(0xcb74));
        // CB 17 01AF
        gbc.setState(0x792e, 0x272f, 0xa630, 0x48a1, 0x206d, 0xb569, 0x0, 0x0);
        gbc.writeMem(0x792e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x272f, gbc.sp());
        EXPECT(0x7930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01B0
        gbc.setState(0x209d, 0xe74c, 0x6690, 0x1307, 0x659c, 0xaed4, 0x0, 0x0);
        gbc.writeMem(0x209d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe74c, gbc.sp());
        EXPECT(0x209f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01B1
        gbc.setState(0x7f57, 0x591a, 0x7a10, 0x12f4, 0x35da, 0x963a, 0x1, 0x1);
        gbc.writeMem(0x7f57, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x591a, gbc.sp());
        EXPECT(0x7f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01B4
        gbc.setState(0xb77a, 0xc9f, 0xac00, 0x138e, 0x6d9e, 0xf7e8, 0x0, 0x1);
        gbc.writeMem(0xb77a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc9f, gbc.sp());
        EXPECT(0xb77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77a));
        EXPECT(0x17, gbc.readMem(0xb77b));
        // CB 17 01B5
        gbc.setState(0xe50e, 0xfaa6, 0xde50, 0xccc2, 0x20eb, 0xccd, 0x1, 0x1);
        gbc.writeMem(0xe50e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfaa6, gbc.sp());
        EXPECT(0xe510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50e));
        EXPECT(0x17, gbc.readMem(0xe50f));
        // CB 17 01B6
        gbc.setState(0xa1d9, 0xcf66, 0x1d30, 0xf128, 0xf84d, 0x5e43, 0x1, 0x1);
        gbc.writeMem(0xa1d9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcf66, gbc.sp());
        EXPECT(0xa1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d9));
        EXPECT(0x17, gbc.readMem(0xa1da));
        // CB 17 01B7
        gbc.setState(0x59b4, 0xeb2e, 0x4e40, 0x99f6, 0xa3b7, 0x8bb8, 0x0, 0x0);
        gbc.writeMem(0x59b4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xeb2e, gbc.sp());
        EXPECT(0x59b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01B8
        gbc.setState(0x43b5, 0x8998, 0x5bc0, 0xa5d3, 0xa499, 0xcb4f, 0x1, 0x1);
        gbc.writeMem(0x43b5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8998, gbc.sp());
        EXPECT(0x43b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01B9
        gbc.setState(0x5c6a, 0x43be, 0x550, 0x4e17, 0xe0e0, 0x4657, 0x0, 0x1);
        gbc.writeMem(0x5c6a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x43be, gbc.sp());
        EXPECT(0x5c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01BA
        gbc.setState(0xc3fb, 0x7365, 0x1e10, 0x1e3f, 0x794b, 0xc086, 0x1, 0x0);
        gbc.writeMem(0xc3fb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7365, gbc.sp());
        EXPECT(0xc3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fb));
        EXPECT(0x17, gbc.readMem(0xc3fc));
        // CB 17 01BB
        gbc.setState(0xc2d4, 0x8ae8, 0x550, 0xf425, 0xf162, 0xd3b1, 0x1, 0x1);
        gbc.writeMem(0xc2d4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8ae8, gbc.sp());
        EXPECT(0xc2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d4));
        EXPECT(0x17, gbc.readMem(0xc2d5));
        // CB 17 01BC
        gbc.setState(0x478, 0x5600, 0x6080, 0xfb86, 0x7bb0, 0x10b, 0x1, 0x0);
        gbc.writeMem(0x478, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5600, gbc.sp());
        EXPECT(0x47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01BD
        gbc.setState(0x36da, 0x7cd9, 0x86b0, 0xeaf1, 0xedc5, 0x6373, 0x0, 0x0);
        gbc.writeMem(0x36da, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7cd9, gbc.sp());
        EXPECT(0x36dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01BE
        gbc.setState(0x360c, 0x2167, 0x57a0, 0xfffb, 0xf781, 0xf563, 0x0, 0x0);
        gbc.writeMem(0x360c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2167, gbc.sp());
        EXPECT(0x360e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01BF
        gbc.setState(0xcc46, 0x50fd, 0x37d0, 0xf541, 0x8958, 0xe87c, 0x1, 0x0);
        gbc.writeMem(0xcc46, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x50fd, gbc.sp());
        EXPECT(0xcc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc46));
        EXPECT(0x17, gbc.readMem(0xcc47));
        // CB 17 01C0
        gbc.setState(0x7e18, 0x9794, 0xb1b0, 0xbba3, 0x57f7, 0xb6fd, 0x1, 0x1);
        gbc.writeMem(0x7e18, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9794, gbc.sp());
        EXPECT(0x7e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01C1
        gbc.setState(0x72f4, 0xc5a0, 0x9080, 0x2301, 0xa355, 0x9cda, 0x0, 0x1);
        gbc.writeMem(0x72f4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc5a0, gbc.sp());
        EXPECT(0x72f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01C3
        gbc.setState(0xb198, 0xfd7, 0xe670, 0x2fba, 0x1f54, 0xef79, 0x0, 0x1);
        gbc.writeMem(0xb198, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfd7, gbc.sp());
        EXPECT(0xb19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb198));
        EXPECT(0x17, gbc.readMem(0xb199));
        // CB 17 01C4
        gbc.setState(0xafda, 0x7329, 0x6ae0, 0x4878, 0xe1fa, 0xb7e4, 0x0, 0x0);
        gbc.writeMem(0xafda, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7329, gbc.sp());
        EXPECT(0xafdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafda));
        EXPECT(0x17, gbc.readMem(0xafdb));
        // CB 17 01C5
        gbc.setState(0x7102, 0xce82, 0xef60, 0xa181, 0xa1a0, 0xc29f, 0x1, 0x0);
        gbc.writeMem(0x7102, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xce82, gbc.sp());
        EXPECT(0x7104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01C6
        gbc.setState(0xc3fd, 0xd8ee, 0x86c0, 0xbf9a, 0xc332, 0x5327, 0x0, 0x1);
        gbc.writeMem(0xc3fd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd8ee, gbc.sp());
        EXPECT(0xc3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fd));
        EXPECT(0x17, gbc.readMem(0xc3fe));
        // CB 17 01C7
        gbc.setState(0xb8b3, 0x47c5, 0x3f10, 0xda1b, 0x58c0, 0xbe09, 0x1, 0x0);
        gbc.writeMem(0xb8b3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x47c5, gbc.sp());
        EXPECT(0xb8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b3));
        EXPECT(0x17, gbc.readMem(0xb8b4));
        // CB 17 01C8
        gbc.setState(0x93e7, 0x33a4, 0xdea0, 0x4e68, 0xf0bc, 0x5421, 0x1, 0x1);
        gbc.writeMem(0x93e7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x33a4, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e7));
        EXPECT(0x17, gbc.readMem(0x93e8));
        // CB 17 01C9
        gbc.setState(0x45b5, 0x8308, 0xaa80, 0x9201, 0x98ee, 0x3d14, 0x1, 0x1);
        gbc.writeMem(0x45b5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8308, gbc.sp());
        EXPECT(0x45b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01CA
        gbc.setState(0x266e, 0xc369, 0xf240, 0x16ac, 0x3e78, 0x6afe, 0x0, 0x1);
        gbc.writeMem(0x266e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc369, gbc.sp());
        EXPECT(0x2670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01CB
        gbc.setState(0xd477, 0x26dd, 0x5520, 0xb009, 0xdf54, 0xe804, 0x0, 0x1);
        gbc.writeMem(0xd477, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x26dd, gbc.sp());
        EXPECT(0xd479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd477));
        EXPECT(0x17, gbc.readMem(0xd478));
        // CB 17 01CD
        gbc.setState(0xc214, 0x1ab9, 0xb150, 0xd1a4, 0x1865, 0x2d3a, 0x1, 0x1);
        gbc.writeMem(0xc214, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1ab9, gbc.sp());
        EXPECT(0xc216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc214));
        EXPECT(0x17, gbc.readMem(0xc215));
        // CB 17 01CE
        gbc.setState(0x839f, 0x5376, 0xa3a0, 0x6c67, 0x682f, 0xd654, 0x0, 0x0);
        gbc.writeMem(0x839f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5376, gbc.sp());
        EXPECT(0x83a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x839f));
        EXPECT(0x17, gbc.readMem(0x83a0));
        // CB 17 01D0
        gbc.setState(0x150f, 0x5062, 0x8810, 0x575f, 0xc17c, 0xfa6b, 0x0, 0x1);
        gbc.writeMem(0x150f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5062, gbc.sp());
        EXPECT(0x1511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01D1
        gbc.setState(0x1d17, 0x373, 0xd570, 0x49f9, 0x56fb, 0x26aa, 0x1, 0x1);
        gbc.writeMem(0x1d17, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0x1d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01D2
        gbc.setState(0x87dd, 0x4ba2, 0x4f80, 0x6fc5, 0xeb30, 0x86ab, 0x1, 0x1);
        gbc.writeMem(0x87dd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4ba2, gbc.sp());
        EXPECT(0x87df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87dd));
        EXPECT(0x17, gbc.readMem(0x87de));
        // CB 17 01D3
        gbc.setState(0xd412, 0xae9b, 0xf050, 0xf52, 0x1654, 0xffa8, 0x1, 0x0);
        gbc.writeMem(0xd412, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xae9b, gbc.sp());
        EXPECT(0xd414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd412));
        EXPECT(0x17, gbc.readMem(0xd413));
        // CB 17 01D5
        gbc.setState(0x664, 0xfbd0, 0x49b0, 0xa833, 0xb6a, 0xfc3f, 0x1, 0x1);
        gbc.writeMem(0x664, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfbd0, gbc.sp());
        EXPECT(0x666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01D6
        gbc.setState(0xab2b, 0x2547, 0xf800, 0xe932, 0x10ec, 0x97cf, 0x1, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2547, gbc.sp());
        EXPECT(0xab2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2b));
        EXPECT(0x17, gbc.readMem(0xab2c));
        // CB 17 01D7
        gbc.setState(0x897, 0xbcfb, 0x7a20, 0xf82c, 0x8171, 0x2b96, 0x0, 0x1);
        gbc.writeMem(0x897, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbcfb, gbc.sp());
        EXPECT(0x899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01D8
        gbc.setState(0x6fee, 0xc2d6, 0x6650, 0xb13, 0x33b1, 0x63f0, 0x1, 0x0);
        gbc.writeMem(0x6fee, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc2d6, gbc.sp());
        EXPECT(0x6ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01D9
        gbc.setState(0xda00, 0x5418, 0xaf30, 0xbb6e, 0xf8ca, 0xd8d4, 0x1, 0x1);
        gbc.writeMem(0xda00, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5418, gbc.sp());
        EXPECT(0xda02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda00));
        EXPECT(0x17, gbc.readMem(0xda01));
        // CB 17 01DA
        gbc.setState(0x4711, 0x7ddd, 0xd3c0, 0x11c4, 0x3f12, 0x7c0b, 0x1, 0x1);
        gbc.writeMem(0x4711, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7ddd, gbc.sp());
        EXPECT(0x4713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01DB
        gbc.setState(0x3926, 0x696f, 0xc460, 0x9d67, 0x7d21, 0x8f32, 0x1, 0x0);
        gbc.writeMem(0x3926, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x696f, gbc.sp());
        EXPECT(0x3928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01DC
        gbc.setState(0x4ada, 0xec9c, 0x66a0, 0xfb71, 0x7c07, 0xe927, 0x1, 0x1);
        gbc.writeMem(0x4ada, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xec9c, gbc.sp());
        EXPECT(0x4adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01DD
        gbc.setState(0x9152, 0xe11f, 0xd440, 0xc61f, 0x7238, 0x9b4d, 0x1, 0x0);
        gbc.writeMem(0x9152, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe11f, gbc.sp());
        EXPECT(0x9154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9152));
        EXPECT(0x17, gbc.readMem(0x9153));
        // CB 17 01DE
        gbc.setState(0x310a, 0x35d1, 0x6080, 0xd12f, 0xa132, 0x2a51, 0x1, 0x1);
        gbc.writeMem(0x310a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x35d1, gbc.sp());
        EXPECT(0x310c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01E0
        gbc.setState(0x158a, 0x8571, 0xc410, 0x1d64, 0xe604, 0x8271, 0x0, 0x1);
        gbc.writeMem(0x158a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8571, gbc.sp());
        EXPECT(0x158c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01E1
        gbc.setState(0x6213, 0x2735, 0x70d0, 0xbf89, 0xde8a, 0x94c8, 0x0, 0x0);
        gbc.writeMem(0x6213, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2735, gbc.sp());
        EXPECT(0x6215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01E2
        gbc.setState(0x6535, 0xc9, 0xe440, 0x3b00, 0x1f7b, 0x44f6, 0x1, 0x0);
        gbc.writeMem(0x6535, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc9, gbc.sp());
        EXPECT(0x6537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01E3
        gbc.setState(0x229a, 0x5e97, 0xf760, 0x8ad8, 0x71b3, 0xf19f, 0x1, 0x1);
        gbc.writeMem(0x229a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5e97, gbc.sp());
        EXPECT(0x229c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01E4
        gbc.setState(0xe15c, 0x1501, 0x90a0, 0xb206, 0x9b9e, 0x2b75, 0x0, 0x1);
        gbc.writeMem(0xe15c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1501, gbc.sp());
        EXPECT(0xe15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15c));
        EXPECT(0x17, gbc.readMem(0xe15d));
        // CB 17 01E5
        gbc.setState(0x50e2, 0xecdc, 0x6b70, 0xb0a5, 0x33e, 0x6070, 0x1, 0x0);
        gbc.writeMem(0x50e2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xecdc, gbc.sp());
        EXPECT(0x50e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01E6
        gbc.setState(0x4036, 0xf520, 0x40c0, 0xcd99, 0xb236, 0xcb56, 0x0, 0x0);
        gbc.writeMem(0x4036, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf520, gbc.sp());
        EXPECT(0x4038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01E7
        gbc.setState(0x808a, 0x5d14, 0xff00, 0x40, 0x9e1b, 0x975f, 0x0, 0x1);
        gbc.writeMem(0x808a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5d14, gbc.sp());
        EXPECT(0x808c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808a));
        EXPECT(0x17, gbc.readMem(0x808b));
        // CB 17 01E8
        gbc.setState(0x7f75, 0x4a4b, 0xd0e0, 0x6bb3, 0x5eb, 0x9be1, 0x1, 0x0);
        gbc.writeMem(0x7f75, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4a4b, gbc.sp());
        EXPECT(0x7f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01E9
        gbc.setState(0xd360, 0xb239, 0x2c60, 0x61e4, 0x8d84, 0x6181, 0x0, 0x0);
        gbc.writeMem(0xd360, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb239, gbc.sp());
        EXPECT(0xd362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd360));
        EXPECT(0x17, gbc.readMem(0xd361));
        // CB 17 01EA
        gbc.setState(0x61bc, 0x3d5a, 0x3a50, 0x5646, 0xb4d, 0xfa6c, 0x0, 0x0);
        gbc.writeMem(0x61bc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3d5a, gbc.sp());
        EXPECT(0x61be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01EB
        gbc.setState(0xa937, 0xe5b, 0xbb10, 0xfbd3, 0x2ca7, 0x1318, 0x1, 0x0);
        gbc.writeMem(0xa937, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe5b, gbc.sp());
        EXPECT(0xa939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa937));
        EXPECT(0x17, gbc.readMem(0xa938));
        // CB 17 01EC
        gbc.setState(0xba19, 0x5d66, 0x5a10, 0xe611, 0x59ff, 0x176d, 0x0, 0x0);
        gbc.writeMem(0xba19, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5d66, gbc.sp());
        EXPECT(0xba1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba19));
        EXPECT(0x17, gbc.readMem(0xba1a));
        // CB 17 01EE
        gbc.setState(0x8921, 0x579d, 0xfe30, 0xe32f, 0x93e0, 0x10bd, 0x0, 0x0);
        gbc.writeMem(0x8921, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x579d, gbc.sp());
        EXPECT(0x8923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8921));
        EXPECT(0x17, gbc.readMem(0x8922));
        // CB 17 01EF
        gbc.setState(0xb438, 0xdf55, 0x1330, 0x75e3, 0xf7a, 0xc090, 0x0, 0x1);
        gbc.writeMem(0xb438, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdf55, gbc.sp());
        EXPECT(0xb43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb438));
        EXPECT(0x17, gbc.readMem(0xb439));
        // CB 17 01F0
        gbc.setState(0x84f3, 0xc635, 0x310, 0xc758, 0xe11e, 0x8006, 0x0, 0x0);
        gbc.writeMem(0x84f3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc635, gbc.sp());
        EXPECT(0x84f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f3));
        EXPECT(0x17, gbc.readMem(0x84f4));
        // CB 17 01F2
        gbc.setState(0x5a1f, 0xab9, 0x9fb0, 0x25a9, 0x8e4b, 0x3174, 0x0, 0x1);
        gbc.writeMem(0x5a1f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xab9, gbc.sp());
        EXPECT(0x5a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01F3
        gbc.setState(0x20c8, 0x406, 0xeee0, 0x6885, 0xada1, 0x4de2, 0x0, 0x1);
        gbc.writeMem(0x20c8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0x20ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01F4
        gbc.setState(0x435b, 0x8cec, 0xba40, 0xe09, 0xe208, 0xa88c, 0x0, 0x1);
        gbc.writeMem(0x435b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8cec, gbc.sp());
        EXPECT(0x435d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01F6
        gbc.setState(0x46ce, 0xd8a8, 0x1590, 0x944d, 0x44af, 0xf9da, 0x1, 0x1);
        gbc.writeMem(0x46ce, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd8a8, gbc.sp());
        EXPECT(0x46d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01F7
        gbc.setState(0xd386, 0x83dd, 0xa1c0, 0x8856, 0x5d55, 0xbc5b, 0x1, 0x1);
        gbc.writeMem(0xd386, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x83dd, gbc.sp());
        EXPECT(0xd388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd386));
        EXPECT(0x17, gbc.readMem(0xd387));
        // CB 17 01F8
        gbc.setState(0xa563, 0xb938, 0x5db0, 0xec5f, 0x71bf, 0x9b75, 0x1, 0x0);
        gbc.writeMem(0xa563, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb938, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa563));
        EXPECT(0x17, gbc.readMem(0xa564));
        // CB 17 01F9
        gbc.setState(0x230d, 0x6d83, 0x6ec0, 0x5965, 0xcfaa, 0x632b, 0x0, 0x1);
        gbc.writeMem(0x230d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6d83, gbc.sp());
        EXPECT(0x230f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01FA
        gbc.setState(0x1b77, 0xd610, 0xd2d0, 0xbd36, 0xfb31, 0x9451, 0x0, 0x1);
        gbc.writeMem(0x1b77, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd610, gbc.sp());
        EXPECT(0x1b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01FB
        gbc.setState(0x7bbb, 0x794d, 0xaeb0, 0xbf26, 0x6783, 0xbd39, 0x0, 0x1);
        gbc.writeMem(0x7bbb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x794d, gbc.sp());
        EXPECT(0x7bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 01FD
        gbc.setState(0x7171, 0x8006, 0x1170, 0xc660, 0x7d5b, 0x9f89, 0x1, 0x0);
        gbc.writeMem(0x7171, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8006, gbc.sp());
        EXPECT(0x7173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 01FF
        gbc.setState(0xbf4a, 0x5e5f, 0x9e50, 0x5389, 0x4e9a, 0x1747, 0x1, 0x1);
        gbc.writeMem(0xbf4a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5e5f, gbc.sp());
        EXPECT(0xbf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4a));
        EXPECT(0x17, gbc.readMem(0xbf4b));
        // CB 17 0200
        gbc.setState(0xb111, 0xb972, 0xc050, 0xcdb6, 0x5731, 0x3fff, 0x0, 0x1);
        gbc.writeMem(0xb111, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb972, gbc.sp());
        EXPECT(0xb113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb111));
        EXPECT(0x17, gbc.readMem(0xb112));
        // CB 17 0201
        gbc.setState(0x7f92, 0xb57, 0x6ad0, 0x3452, 0x7085, 0x7f80, 0x1, 0x0);
        gbc.writeMem(0x7f92, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb57, gbc.sp());
        EXPECT(0x7f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0202
        gbc.setState(0x8f19, 0x7b02, 0xfb60, 0x2c6b, 0xd07f, 0x9ffd, 0x1, 0x1);
        gbc.writeMem(0x8f19, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7b02, gbc.sp());
        EXPECT(0x8f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f19));
        EXPECT(0x17, gbc.readMem(0x8f1a));
        // CB 17 0203
        gbc.setState(0x137c, 0x1e96, 0xd1a0, 0x33e1, 0x42f2, 0x9181, 0x1, 0x1);
        gbc.writeMem(0x137c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1e96, gbc.sp());
        EXPECT(0x137e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0204
        gbc.setState(0x5cee, 0x6ff6, 0xa920, 0x4382, 0xe7ac, 0xbac7, 0x0, 0x1);
        gbc.writeMem(0x5cee, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6ff6, gbc.sp());
        EXPECT(0x5cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0205
        gbc.setState(0xabaf, 0xabe8, 0xc320, 0x553e, 0x3135, 0x5ee9, 0x1, 0x1);
        gbc.writeMem(0xabaf, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xabe8, gbc.sp());
        EXPECT(0xabb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabaf));
        EXPECT(0x17, gbc.readMem(0xabb0));
        // CB 17 0206
        gbc.setState(0x75c5, 0xd980, 0xa670, 0xbfb8, 0x39eb, 0x9cd4, 0x0, 0x1);
        gbc.writeMem(0x75c5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd980, gbc.sp());
        EXPECT(0x75c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0207
        gbc.setState(0xa665, 0x2979, 0x7a80, 0x67c7, 0xe685, 0x3dce, 0x1, 0x0);
        gbc.writeMem(0xa665, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2979, gbc.sp());
        EXPECT(0xa667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa665));
        EXPECT(0x17, gbc.readMem(0xa666));
        // CB 17 0208
        gbc.setState(0x3892, 0xb117, 0xb100, 0xc1aa, 0xbe7b, 0x5f4e, 0x1, 0x1);
        gbc.writeMem(0x3892, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb117, gbc.sp());
        EXPECT(0x3894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0209
        gbc.setState(0xd12, 0xe951, 0x8d0, 0x900b, 0x9b81, 0x358, 0x1, 0x1);
        gbc.writeMem(0xd12, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe951, gbc.sp());
        EXPECT(0xd14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 020A
        gbc.setState(0x282c, 0x7fe7, 0x8e10, 0x1220, 0x3d6b, 0x3dc1, 0x1, 0x0);
        gbc.writeMem(0x282c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7fe7, gbc.sp());
        EXPECT(0x282e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 020B
        gbc.setState(0x2420, 0x9f40, 0x1370, 0xcdfa, 0x47d4, 0xc832, 0x1, 0x0);
        gbc.writeMem(0x2420, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9f40, gbc.sp());
        EXPECT(0x2422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 020C
        gbc.setState(0x99dd, 0xdbc2, 0x6740, 0x55e0, 0xce58, 0x54f9, 0x1, 0x1);
        gbc.writeMem(0x99dd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdbc2, gbc.sp());
        EXPECT(0x99df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99dd));
        EXPECT(0x17, gbc.readMem(0x99de));
        // CB 17 020D
        gbc.setState(0xacd4, 0x294f, 0xbc00, 0x7105, 0xb276, 0x8907, 0x1, 0x0);
        gbc.writeMem(0xacd4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x294f, gbc.sp());
        EXPECT(0xacd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd4));
        EXPECT(0x17, gbc.readMem(0xacd5));
        // CB 17 020E
        gbc.setState(0xa0fd, 0xc2c8, 0x7940, 0xf213, 0x4df8, 0xc7c, 0x0, 0x1);
        gbc.writeMem(0xa0fd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0xa0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fd));
        EXPECT(0x17, gbc.readMem(0xa0fe));
        // CB 17 020F
        gbc.setState(0x91ca, 0x69e3, 0x1760, 0x85d1, 0x83c8, 0xeca8, 0x1, 0x1);
        gbc.writeMem(0x91ca, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x69e3, gbc.sp());
        EXPECT(0x91cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ca));
        EXPECT(0x17, gbc.readMem(0x91cb));
        // CB 17 0210
        gbc.setState(0xa471, 0xcd93, 0x43e0, 0xd930, 0x7e7d, 0x3da2, 0x1, 0x1);
        gbc.writeMem(0xa471, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcd93, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa471));
        EXPECT(0x17, gbc.readMem(0xa472));
        // CB 17 0211
        gbc.setState(0x8116, 0xf82e, 0xc4e0, 0x15ed, 0x7abd, 0x5c82, 0x1, 0x1);
        gbc.writeMem(0x8116, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf82e, gbc.sp());
        EXPECT(0x8118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8116));
        EXPECT(0x17, gbc.readMem(0x8117));
        // CB 17 0212
        gbc.setState(0xd5e9, 0x98b5, 0xb060, 0x9498, 0xd47d, 0xf22d, 0x1, 0x1);
        gbc.writeMem(0xd5e9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x98b5, gbc.sp());
        EXPECT(0xd5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e9));
        EXPECT(0x17, gbc.readMem(0xd5ea));
        // CB 17 0214
        gbc.setState(0x26d2, 0x7fa2, 0x2070, 0x5709, 0x1d3d, 0xc35a, 0x0, 0x1);
        gbc.writeMem(0x26d2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7fa2, gbc.sp());
        EXPECT(0x26d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0215
        gbc.setState(0x7738, 0x2475, 0x4e60, 0x5fbf, 0xd6b9, 0xdc74, 0x1, 0x0);
        gbc.writeMem(0x7738, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2475, gbc.sp());
        EXPECT(0x773a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0216
        gbc.setState(0x4b04, 0xe243, 0x6b20, 0x890a, 0x5241, 0xdaa7, 0x0, 0x0);
        gbc.writeMem(0x4b04, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe243, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0217
        gbc.setState(0xb8bb, 0x58a8, 0xf900, 0x1d87, 0xca94, 0x6227, 0x0, 0x1);
        gbc.writeMem(0xb8bb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x58a8, gbc.sp());
        EXPECT(0xb8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8bb));
        EXPECT(0x17, gbc.readMem(0xb8bc));
        // CB 17 0218
        gbc.setState(0x8360, 0x583f, 0x100, 0x317b, 0x98bd, 0xac33, 0x1, 0x1);
        gbc.writeMem(0x8360, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x583f, gbc.sp());
        EXPECT(0x8362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8360));
        EXPECT(0x17, gbc.readMem(0x8361));
        // CB 17 0219
        gbc.setState(0xd8b4, 0xa31d, 0x20e0, 0x602a, 0x39d4, 0x2709, 0x0, 0x0);
        gbc.writeMem(0xd8b4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa31d, gbc.sp());
        EXPECT(0xd8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b4));
        EXPECT(0x17, gbc.readMem(0xd8b5));
        // CB 17 021A
        gbc.setState(0xf8c, 0x6a46, 0x5330, 0x6e43, 0xd83f, 0x9890, 0x0, 0x1);
        gbc.writeMem(0xf8c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6a46, gbc.sp());
        EXPECT(0xf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 021B
        gbc.setState(0x627c, 0x9387, 0xfb0, 0xf7b, 0x46e9, 0x3b4b, 0x0, 0x1);
        gbc.writeMem(0x627c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9387, gbc.sp());
        EXPECT(0x627e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 021C
        gbc.setState(0xf7, 0x8f15, 0xe5d0, 0x6706, 0xd5d7, 0x5807, 0x0, 0x1);
        gbc.writeMem(0xf7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8f15, gbc.sp());
        EXPECT(0xf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 021D
        gbc.setState(0xe5f5, 0x3fcb, 0x3f50, 0xd39a, 0x20d5, 0x7d8b, 0x1, 0x0);
        gbc.writeMem(0xe5f5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3fcb, gbc.sp());
        EXPECT(0xe5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f5));
        EXPECT(0x17, gbc.readMem(0xe5f6));
        // CB 17 021E
        gbc.setState(0xaef4, 0x95ea, 0xd960, 0xb31f, 0x3984, 0x10f7, 0x0, 0x1);
        gbc.writeMem(0xaef4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x95ea, gbc.sp());
        EXPECT(0xaef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef4));
        EXPECT(0x17, gbc.readMem(0xaef5));
        // CB 17 021F
        gbc.setState(0xafed, 0xc3f9, 0xe630, 0x320e, 0xef3, 0xc207, 0x1, 0x0);
        gbc.writeMem(0xafed, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc3f9, gbc.sp());
        EXPECT(0xafef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafed));
        EXPECT(0x17, gbc.readMem(0xafee));
        // CB 17 0220
        gbc.setState(0x9af1, 0xc61, 0xacf0, 0x541d, 0x7876, 0x8ea2, 0x1, 0x0);
        gbc.writeMem(0x9af1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc61, gbc.sp());
        EXPECT(0x9af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af1));
        EXPECT(0x17, gbc.readMem(0x9af2));
        // CB 17 0221
        gbc.setState(0xaa69, 0x1918, 0x37a0, 0xe72d, 0x85a8, 0xf26b, 0x0, 0x0);
        gbc.writeMem(0xaa69, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1918, gbc.sp());
        EXPECT(0xaa6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa69));
        EXPECT(0x17, gbc.readMem(0xaa6a));
        // CB 17 0222
        gbc.setState(0x9009, 0xa88f, 0x470, 0x9b3b, 0x809d, 0xf63d, 0x0, 0x1);
        gbc.writeMem(0x9009, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa88f, gbc.sp());
        EXPECT(0x900b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9009));
        EXPECT(0x17, gbc.readMem(0x900a));
        // CB 17 0223
        gbc.setState(0xe06e, 0x7111, 0xa100, 0x2783, 0x47f8, 0xd1d7, 0x0, 0x0);
        gbc.writeMem(0xe06e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7111, gbc.sp());
        EXPECT(0xe070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06e));
        EXPECT(0x17, gbc.readMem(0xe06f));
        // CB 17 0224
        gbc.setState(0x73a, 0x7816, 0x3710, 0x36f9, 0x8e6b, 0xc781, 0x1, 0x0);
        gbc.writeMem(0x73a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7816, gbc.sp());
        EXPECT(0x73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0225
        gbc.setState(0xd83a, 0xc49f, 0x8b50, 0x8b6b, 0x491d, 0x6ea1, 0x1, 0x1);
        gbc.writeMem(0xd83a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc49f, gbc.sp());
        EXPECT(0xd83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd83a));
        EXPECT(0x17, gbc.readMem(0xd83b));
        // CB 17 0226
        gbc.setState(0xa83a, 0x42f, 0xabc0, 0x2a60, 0xe402, 0x3575, 0x1, 0x1);
        gbc.writeMem(0xa83a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x42f, gbc.sp());
        EXPECT(0xa83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83a));
        EXPECT(0x17, gbc.readMem(0xa83b));
        // CB 17 0227
        gbc.setState(0x53a0, 0x1b61, 0x4580, 0x7f4c, 0x73ab, 0x6e4b, 0x1, 0x1);
        gbc.writeMem(0x53a0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1b61, gbc.sp());
        EXPECT(0x53a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0229
        gbc.setState(0x253d, 0x80ad, 0xa70, 0x8b15, 0xb98c, 0x3acd, 0x0, 0x1);
        gbc.writeMem(0x253d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x80ad, gbc.sp());
        EXPECT(0x253f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 022A
        gbc.setState(0xdc65, 0xc8a6, 0xa870, 0x1bcc, 0xfae0, 0xc57c, 0x1, 0x0);
        gbc.writeMem(0xdc65, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc8a6, gbc.sp());
        EXPECT(0xdc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc65));
        EXPECT(0x17, gbc.readMem(0xdc66));
        // CB 17 022B
        gbc.setState(0xcf8d, 0x3ca9, 0x2570, 0xf103, 0xaf2e, 0xc620, 0x1, 0x0);
        gbc.writeMem(0xcf8d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3ca9, gbc.sp());
        EXPECT(0xcf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8d));
        EXPECT(0x17, gbc.readMem(0xcf8e));
        // CB 17 022C
        gbc.setState(0xe89f, 0xd26f, 0xd490, 0xca73, 0x13ac, 0x75a9, 0x0, 0x1);
        gbc.writeMem(0xe89f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd26f, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89f));
        EXPECT(0x17, gbc.readMem(0xe8a0));
        // CB 17 022D
        gbc.setState(0x80a8, 0xc3af, 0xe820, 0x5ecb, 0x8edb, 0xe965, 0x1, 0x1);
        gbc.writeMem(0x80a8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc3af, gbc.sp());
        EXPECT(0x80aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a8));
        EXPECT(0x17, gbc.readMem(0x80a9));
        // CB 17 022E
        gbc.setState(0x787e, 0x25ec, 0xed10, 0xdeb1, 0x9a44, 0xc2d8, 0x1, 0x1);
        gbc.writeMem(0x787e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x25ec, gbc.sp());
        EXPECT(0x7880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 022F
        gbc.setState(0xd13c, 0xd422, 0x55f0, 0xb5de, 0x9b14, 0xe3d5, 0x0, 0x0);
        gbc.writeMem(0xd13c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd422, gbc.sp());
        EXPECT(0xd13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13c));
        EXPECT(0x17, gbc.readMem(0xd13d));
        // CB 17 0230
        gbc.setState(0x9ff4, 0xe4d5, 0x1bb0, 0xb210, 0x5bc, 0x5a86, 0x0, 0x1);
        gbc.writeMem(0x9ff4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe4d5, gbc.sp());
        EXPECT(0x9ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff4));
        EXPECT(0x17, gbc.readMem(0x9ff5));
        // CB 17 0232
        gbc.setState(0xcb0, 0x950a, 0x6ab0, 0x322f, 0x899, 0xb2f, 0x1, 0x0);
        gbc.writeMem(0xcb0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0xcb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0234
        gbc.setState(0xd9c7, 0x11e9, 0x4340, 0x358f, 0x1073, 0x825f, 0x1, 0x1);
        gbc.writeMem(0xd9c7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x11e9, gbc.sp());
        EXPECT(0xd9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c7));
        EXPECT(0x17, gbc.readMem(0xd9c8));
        // CB 17 0235
        gbc.setState(0x7466, 0xabfe, 0xb2d0, 0xacf7, 0x92e1, 0x6c75, 0x1, 0x0);
        gbc.writeMem(0x7466, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xabfe, gbc.sp());
        EXPECT(0x7468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0236
        gbc.setState(0x4334, 0xa676, 0x2130, 0x3ddd, 0x6a19, 0xa209, 0x0, 0x0);
        gbc.writeMem(0x4334, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa676, gbc.sp());
        EXPECT(0x4336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0237
        gbc.setState(0x1482, 0x82e5, 0xdea0, 0xa3a3, 0xb6a3, 0x3e88, 0x0, 0x0);
        gbc.writeMem(0x1482, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x82e5, gbc.sp());
        EXPECT(0x1484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0238
        gbc.setState(0x2fe4, 0xabdb, 0xc610, 0x8a49, 0xc1a2, 0x2d7, 0x1, 0x0);
        gbc.writeMem(0x2fe4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xabdb, gbc.sp());
        EXPECT(0x2fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0239
        gbc.setState(0xa861, 0x107a, 0x6b0, 0xf078, 0xbe29, 0xf253, 0x1, 0x0);
        gbc.writeMem(0xa861, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x107a, gbc.sp());
        EXPECT(0xa863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa861));
        EXPECT(0x17, gbc.readMem(0xa862));
        // CB 17 023A
        gbc.setState(0x8ee9, 0x3374, 0x2460, 0x97d2, 0x8339, 0x15cf, 0x0, 0x0);
        gbc.writeMem(0x8ee9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3374, gbc.sp());
        EXPECT(0x8eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee9));
        EXPECT(0x17, gbc.readMem(0x8eea));
        // CB 17 023B
        gbc.setState(0x62f6, 0xafb, 0x2ec0, 0x14af, 0xe500, 0x4ed3, 0x0, 0x0);
        gbc.writeMem(0x62f6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xafb, gbc.sp());
        EXPECT(0x62f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 023C
        gbc.setState(0x32c4, 0x5593, 0xf7d0, 0x12da, 0x699e, 0xd4f7, 0x0, 0x1);
        gbc.writeMem(0x32c4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0x32c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 023D
        gbc.setState(0x20bc, 0x275e, 0x2720, 0x44e8, 0x34f9, 0x2b12, 0x0, 0x1);
        gbc.writeMem(0x20bc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x275e, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 023E
        gbc.setState(0xdb01, 0xb343, 0x95c0, 0x4c8a, 0xb88f, 0x4c78, 0x1, 0x0);
        gbc.writeMem(0xdb01, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb343, gbc.sp());
        EXPECT(0xdb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb01));
        EXPECT(0x17, gbc.readMem(0xdb02));
        // CB 17 023F
        gbc.setState(0x633c, 0x7769, 0x4eb0, 0x85be, 0x226d, 0x13eb, 0x0, 0x0);
        gbc.writeMem(0x633c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7769, gbc.sp());
        EXPECT(0x633e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0240
        gbc.setState(0xb419, 0x3b59, 0xcff0, 0x9dd1, 0xe70, 0x51d4, 0x1, 0x1);
        gbc.writeMem(0xb419, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3b59, gbc.sp());
        EXPECT(0xb41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb419));
        EXPECT(0x17, gbc.readMem(0xb41a));
        // CB 17 0241
        gbc.setState(0xb46a, 0x1a7b, 0xcdb0, 0x570f, 0x3c82, 0xfae4, 0x0, 0x1);
        gbc.writeMem(0xb46a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1a7b, gbc.sp());
        EXPECT(0xb46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46a));
        EXPECT(0x17, gbc.readMem(0xb46b));
        // CB 17 0242
        gbc.setState(0x52f3, 0x3c39, 0xa310, 0x8237, 0x1313, 0xd156, 0x1, 0x0);
        gbc.writeMem(0x52f3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3c39, gbc.sp());
        EXPECT(0x52f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0243
        gbc.setState(0xc1e8, 0xa799, 0x6f30, 0xe467, 0xef61, 0x4f09, 0x1, 0x0);
        gbc.writeMem(0xc1e8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa799, gbc.sp());
        EXPECT(0xc1ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e8));
        EXPECT(0x17, gbc.readMem(0xc1e9));
        // CB 17 0244
        gbc.setState(0xdfa5, 0xbc2e, 0x9470, 0x8796, 0x915a, 0xbd5d, 0x0, 0x0);
        gbc.writeMem(0xdfa5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbc2e, gbc.sp());
        EXPECT(0xdfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa5));
        EXPECT(0x17, gbc.readMem(0xdfa6));
        // CB 17 0246
        gbc.setState(0x400c, 0x60b1, 0x5c60, 0x8c37, 0xe315, 0xc69e, 0x1, 0x1);
        gbc.writeMem(0x400c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x60b1, gbc.sp());
        EXPECT(0x400e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0247
        gbc.setState(0xa6ba, 0x7e2f, 0x250, 0x3f1b, 0x94eb, 0x1e60, 0x1, 0x0);
        gbc.writeMem(0xa6ba, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7e2f, gbc.sp());
        EXPECT(0xa6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ba));
        EXPECT(0x17, gbc.readMem(0xa6bb));
        // CB 17 0248
        gbc.setState(0x122, 0x80db, 0x53a0, 0x694d, 0x70df, 0x728b, 0x1, 0x0);
        gbc.writeMem(0x122, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x80db, gbc.sp());
        EXPECT(0x124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0249
        gbc.setState(0xbc5a, 0x7828, 0xa0a0, 0xbd53, 0xdd06, 0x8e0d, 0x1, 0x1);
        gbc.writeMem(0xbc5a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7828, gbc.sp());
        EXPECT(0xbc5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5a));
        EXPECT(0x17, gbc.readMem(0xbc5b));
        // CB 17 024A
        gbc.setState(0x1b18, 0xe554, 0xc650, 0x8768, 0x706f, 0x590, 0x0, 0x1);
        gbc.writeMem(0x1b18, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe554, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 024B
        gbc.setState(0x3490, 0xf1a5, 0x34b0, 0x3a96, 0x1cef, 0x75d2, 0x1, 0x0);
        gbc.writeMem(0x3490, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf1a5, gbc.sp());
        EXPECT(0x3492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 024C
        gbc.setState(0x9510, 0xb994, 0x45a0, 0x10dc, 0xabaf, 0x275b, 0x0, 0x0);
        gbc.writeMem(0x9510, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb994, gbc.sp());
        EXPECT(0x9512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9510));
        EXPECT(0x17, gbc.readMem(0x9511));
        // CB 17 024D
        gbc.setState(0xd54, 0x4d9f, 0xfe20, 0x3a3e, 0x174f, 0x4e0b, 0x1, 0x1);
        gbc.writeMem(0xd54, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4d9f, gbc.sp());
        EXPECT(0xd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 024E
        gbc.setState(0x3b9b, 0xe5ac, 0x9200, 0xaa77, 0xb614, 0x81ce, 0x1, 0x0);
        gbc.writeMem(0x3b9b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe5ac, gbc.sp());
        EXPECT(0x3b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 024F
        gbc.setState(0x4a30, 0x52d7, 0x1f10, 0x2094, 0x7d20, 0x808, 0x1, 0x1);
        gbc.writeMem(0x4a30, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x52d7, gbc.sp());
        EXPECT(0x4a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0250
        gbc.setState(0xe5ac, 0xee4f, 0xa890, 0x56a1, 0x6ec7, 0x9e1f, 0x1, 0x0);
        gbc.writeMem(0xe5ac, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xee4f, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ac));
        EXPECT(0x17, gbc.readMem(0xe5ad));
        // CB 17 0252
        gbc.setState(0x9b33, 0x6f01, 0x3bd0, 0x7b8a, 0x7828, 0xa28a, 0x0, 0x1);
        gbc.writeMem(0x9b33, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6f01, gbc.sp());
        EXPECT(0x9b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b33));
        EXPECT(0x17, gbc.readMem(0x9b34));
        // CB 17 0253
        gbc.setState(0x8487, 0xb4e2, 0x3a50, 0xd37a, 0x98a7, 0x2249, 0x1, 0x1);
        gbc.writeMem(0x8487, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb4e2, gbc.sp());
        EXPECT(0x8489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8487));
        EXPECT(0x17, gbc.readMem(0x8488));
        // CB 17 0254
        gbc.setState(0xb0a0, 0x89d1, 0x2bf0, 0x1f35, 0x21b2, 0xf95f, 0x1, 0x0);
        gbc.writeMem(0xb0a0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x89d1, gbc.sp());
        EXPECT(0xb0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a0));
        EXPECT(0x17, gbc.readMem(0xb0a1));
        // CB 17 0255
        gbc.setState(0x8aa, 0x4a0a, 0x1320, 0x760, 0x1258, 0xe7a4, 0x1, 0x0);
        gbc.writeMem(0x8aa, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4a0a, gbc.sp());
        EXPECT(0x8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0256
        gbc.setState(0xbde7, 0x5ef9, 0xf640, 0x5755, 0x3c2, 0xe2fa, 0x0, 0x0);
        gbc.writeMem(0xbde7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5ef9, gbc.sp());
        EXPECT(0xbde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde7));
        EXPECT(0x17, gbc.readMem(0xbde8));
        // CB 17 0257
        gbc.setState(0x65aa, 0xc116, 0xcc0, 0x235c, 0x6fed, 0xb579, 0x0, 0x0);
        gbc.writeMem(0x65aa, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc116, gbc.sp());
        EXPECT(0x65ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0258
        gbc.setState(0x2cf9, 0x3883, 0xf1a0, 0x6faa, 0xcbf1, 0xd773, 0x0, 0x1);
        gbc.writeMem(0x2cf9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3883, gbc.sp());
        EXPECT(0x2cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0259
        gbc.setState(0xb8a6, 0xe477, 0xcf10, 0xeb94, 0x9c81, 0xf88a, 0x0, 0x1);
        gbc.writeMem(0xb8a6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe477, gbc.sp());
        EXPECT(0xb8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a6));
        EXPECT(0x17, gbc.readMem(0xb8a7));
        // CB 17 025A
        gbc.setState(0x78e7, 0xde08, 0x6130, 0xd1c5, 0x3720, 0x3d2e, 0x1, 0x0);
        gbc.writeMem(0x78e7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xde08, gbc.sp());
        EXPECT(0x78e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 025B
        gbc.setState(0x47a3, 0xfc55, 0x18e0, 0x4820, 0x696d, 0x819e, 0x0, 0x1);
        gbc.writeMem(0x47a3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0x47a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 025C
        gbc.setState(0xee75, 0x40e8, 0x4a60, 0x742c, 0xf8a7, 0x809e, 0x1, 0x1);
        gbc.writeMem(0xee75, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x40e8, gbc.sp());
        EXPECT(0xee77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee75));
        EXPECT(0x17, gbc.readMem(0xee76));
        // CB 17 025D
        gbc.setState(0x40d8, 0xc9f7, 0x4f50, 0xb8ca, 0xdc1, 0x287, 0x1, 0x0);
        gbc.writeMem(0x40d8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc9f7, gbc.sp());
        EXPECT(0x40da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 025E
        gbc.setState(0x2c71, 0xa697, 0xa490, 0xcb1, 0xb7c, 0x15f7, 0x1, 0x1);
        gbc.writeMem(0x2c71, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa697, gbc.sp());
        EXPECT(0x2c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 025F
        gbc.setState(0x1d04, 0xa53d, 0x3ea0, 0x6f7a, 0x9f5f, 0x3002, 0x1, 0x0);
        gbc.writeMem(0x1d04, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa53d, gbc.sp());
        EXPECT(0x1d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0260
        gbc.setState(0xc6a0, 0xaf61, 0x4910, 0x3ded, 0xa2e, 0xe1c6, 0x0, 0x0);
        gbc.writeMem(0xc6a0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaf61, gbc.sp());
        EXPECT(0xc6a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a0));
        EXPECT(0x17, gbc.readMem(0xc6a1));
        // CB 17 0261
        gbc.setState(0x4d23, 0x8592, 0xcad0, 0x98f3, 0xacaa, 0x73ca, 0x0, 0x0);
        gbc.writeMem(0x4d23, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8592, gbc.sp());
        EXPECT(0x4d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0262
        gbc.setState(0x4949, 0x40ea, 0x22b0, 0x6b89, 0x9bc0, 0x8878, 0x0, 0x0);
        gbc.writeMem(0x4949, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x40ea, gbc.sp());
        EXPECT(0x494b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0263
        gbc.setState(0xcdea, 0x8b4b, 0x13d0, 0x9531, 0x266d, 0x5b7, 0x1, 0x1);
        gbc.writeMem(0xcdea, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8b4b, gbc.sp());
        EXPECT(0xcdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdea));
        EXPECT(0x17, gbc.readMem(0xcdeb));
        // CB 17 0264
        gbc.setState(0x4fce, 0x2189, 0x1720, 0x6d88, 0xc057, 0xde5f, 0x0, 0x0);
        gbc.writeMem(0x4fce, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2189, gbc.sp());
        EXPECT(0x4fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0265
        gbc.setState(0x955e, 0x2b37, 0x28d0, 0xf23b, 0xfc97, 0x205d, 0x0, 0x1);
        gbc.writeMem(0x955e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2b37, gbc.sp());
        EXPECT(0x9560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x955e));
        EXPECT(0x17, gbc.readMem(0x955f));
        // CB 17 0266
        gbc.setState(0x2033, 0xd80, 0x67b0, 0xadbf, 0x4a3, 0xba5e, 0x0, 0x1);
        gbc.writeMem(0x2033, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd80, gbc.sp());
        EXPECT(0x2035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0267
        gbc.setState(0x945e, 0xf979, 0x4cb0, 0x1087, 0x38a2, 0xb450, 0x1, 0x0);
        gbc.writeMem(0x945e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf979, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945e));
        EXPECT(0x17, gbc.readMem(0x945f));
        // CB 17 0268
        gbc.setState(0x9fb1, 0xc6fd, 0xc3f0, 0x218, 0x6512, 0x725e, 0x1, 0x0);
        gbc.writeMem(0x9fb1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc6fd, gbc.sp());
        EXPECT(0x9fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb1));
        EXPECT(0x17, gbc.readMem(0x9fb2));
        // CB 17 0269
        gbc.setState(0x9118, 0x814b, 0x64b0, 0xe7a2, 0x1569, 0x2e57, 0x0, 0x1);
        gbc.writeMem(0x9118, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x814b, gbc.sp());
        EXPECT(0x911a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9118));
        EXPECT(0x17, gbc.readMem(0x9119));
        // CB 17 026A
        gbc.setState(0x920f, 0xe910, 0x3e80, 0x808e, 0x6fe1, 0xb66c, 0x1, 0x0);
        gbc.writeMem(0x920f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe910, gbc.sp());
        EXPECT(0x9211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920f));
        EXPECT(0x17, gbc.readMem(0x9210));
        // CB 17 026B
        gbc.setState(0x7d36, 0x9159, 0xdb10, 0xea25, 0xc5b6, 0x1f1e, 0x0, 0x0);
        gbc.writeMem(0x7d36, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9159, gbc.sp());
        EXPECT(0x7d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 026C
        gbc.setState(0x73d7, 0x3161, 0x9c70, 0x2fb8, 0xf803, 0x3e77, 0x0, 0x0);
        gbc.writeMem(0x73d7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3161, gbc.sp());
        EXPECT(0x73d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 026D
        gbc.setState(0x6913, 0xb05, 0x49b0, 0x9435, 0x7427, 0x8da3, 0x1, 0x1);
        gbc.writeMem(0x6913, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb05, gbc.sp());
        EXPECT(0x6915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 026E
        gbc.setState(0xed29, 0xce0, 0x54a0, 0x71db, 0xd041, 0xab22, 0x1, 0x0);
        gbc.writeMem(0xed29, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xce0, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed29));
        EXPECT(0x17, gbc.readMem(0xed2a));
        // CB 17 026F
        gbc.setState(0xba48, 0x763c, 0x2610, 0xf68, 0xd769, 0xadcd, 0x0, 0x0);
        gbc.writeMem(0xba48, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x763c, gbc.sp());
        EXPECT(0xba4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba48));
        EXPECT(0x17, gbc.readMem(0xba49));
        // CB 17 0270
        gbc.setState(0xa15d, 0xcf0, 0xa420, 0xe1b2, 0x10f0, 0x6b8e, 0x0, 0x1);
        gbc.writeMem(0xa15d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcf0, gbc.sp());
        EXPECT(0xa15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15d));
        EXPECT(0x17, gbc.readMem(0xa15e));
        // CB 17 0271
        gbc.setState(0xe969, 0xb477, 0xabf0, 0xb93c, 0x6685, 0x39c7, 0x0, 0x0);
        gbc.writeMem(0xe969, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb477, gbc.sp());
        EXPECT(0xe96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe969));
        EXPECT(0x17, gbc.readMem(0xe96a));
        // CB 17 0272
        gbc.setState(0x9ac4, 0xf59d, 0x57d0, 0xdddf, 0x59fd, 0x6b97, 0x0, 0x1);
        gbc.writeMem(0x9ac4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf59d, gbc.sp());
        EXPECT(0x9ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac4));
        EXPECT(0x17, gbc.readMem(0x9ac5));
        // CB 17 0273
        gbc.setState(0xbb24, 0xc5d0, 0xdc80, 0x8dcb, 0x5ae4, 0xfb4, 0x1, 0x1);
        gbc.writeMem(0xbb24, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0xbb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb24));
        EXPECT(0x17, gbc.readMem(0xbb25));
        // CB 17 0274
        gbc.setState(0x8f5a, 0xbd2b, 0x3bf0, 0xf69d, 0x54c2, 0x11b, 0x1, 0x0);
        gbc.writeMem(0x8f5a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbd2b, gbc.sp());
        EXPECT(0x8f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5a));
        EXPECT(0x17, gbc.readMem(0x8f5b));
        // CB 17 0275
        gbc.setState(0x8f2d, 0xd9b0, 0x6380, 0xc71e, 0x8eca, 0x861a, 0x1, 0x0);
        gbc.writeMem(0x8f2d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd9b0, gbc.sp());
        EXPECT(0x8f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2d));
        EXPECT(0x17, gbc.readMem(0x8f2e));
        // CB 17 0276
        gbc.setState(0xd113, 0x615d, 0x3f70, 0x60d8, 0x93fd, 0x1b33, 0x1, 0x1);
        gbc.writeMem(0xd113, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x615d, gbc.sp());
        EXPECT(0xd115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd113));
        EXPECT(0x17, gbc.readMem(0xd114));
        // CB 17 0277
        gbc.setState(0x529, 0xc94c, 0x81b0, 0x150a, 0x3f4f, 0xe9ba, 0x1, 0x1);
        gbc.writeMem(0x529, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc94c, gbc.sp());
        EXPECT(0x52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0278
        gbc.setState(0x825a, 0x6b48, 0x46c0, 0x64b, 0xbeb1, 0xd6c0, 0x0, 0x0);
        gbc.writeMem(0x825a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6b48, gbc.sp());
        EXPECT(0x825c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825a));
        EXPECT(0x17, gbc.readMem(0x825b));
        // CB 17 0279
        gbc.setState(0x7535, 0x3a71, 0xccd0, 0xbf8a, 0x5cba, 0xb160, 0x0, 0x1);
        gbc.writeMem(0x7535, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3a71, gbc.sp());
        EXPECT(0x7537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 027A
        gbc.setState(0x5c6b, 0xfee4, 0x77f0, 0x241b, 0xa2c, 0x207, 0x0, 0x1);
        gbc.writeMem(0x5c6b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfee4, gbc.sp());
        EXPECT(0x5c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 027B
        gbc.setState(0x6935, 0xeb4b, 0xd610, 0xec84, 0x2421, 0xcef4, 0x0, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xeb4b, gbc.sp());
        EXPECT(0x6937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 027C
        gbc.setState(0x7c57, 0x284f, 0x1b20, 0xf70a, 0x5a31, 0x4443, 0x0, 0x0);
        gbc.writeMem(0x7c57, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x284f, gbc.sp());
        EXPECT(0x7c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 027D
        gbc.setState(0x4a3, 0x9bcd, 0x90c0, 0x3eed, 0xe2c9, 0xadae, 0x1, 0x0);
        gbc.writeMem(0x4a3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9bcd, gbc.sp());
        EXPECT(0x4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 027E
        gbc.setState(0xafe1, 0x94eb, 0x9b80, 0x8d42, 0x3411, 0xea68, 0x1, 0x0);
        gbc.writeMem(0xafe1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x94eb, gbc.sp());
        EXPECT(0xafe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe1));
        EXPECT(0x17, gbc.readMem(0xafe2));
        // CB 17 027F
        gbc.setState(0x887e, 0x4484, 0xb50, 0x92c8, 0xbc67, 0x2be2, 0x1, 0x1);
        gbc.writeMem(0x887e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4484, gbc.sp());
        EXPECT(0x8880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887e));
        EXPECT(0x17, gbc.readMem(0x887f));
        // CB 17 0281
        gbc.setState(0x1bcc, 0xadde, 0xcc60, 0x8ea7, 0x98da, 0x3d00, 0x0, 0x0);
        gbc.writeMem(0x1bcc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xadde, gbc.sp());
        EXPECT(0x1bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0283
        gbc.setState(0xc0fe, 0xf235, 0x840, 0x3aa5, 0x1275, 0xf809, 0x1, 0x0);
        gbc.writeMem(0xc0fe, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf235, gbc.sp());
        EXPECT(0xc100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fe));
        EXPECT(0x17, gbc.readMem(0xc0ff));
        // CB 17 0284
        gbc.setState(0xcff6, 0x1de6, 0x8d20, 0xd3c8, 0x8843, 0x1ceb, 0x0, 0x1);
        gbc.writeMem(0xcff6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1de6, gbc.sp());
        EXPECT(0xcff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff6));
        EXPECT(0x17, gbc.readMem(0xcff7));
        // CB 17 0285
        gbc.setState(0x4852, 0x7e14, 0x2d10, 0xaaa8, 0xe824, 0x4e63, 0x0, 0x0);
        gbc.writeMem(0x4852, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7e14, gbc.sp());
        EXPECT(0x4854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0286
        gbc.setState(0xc12b, 0x70a7, 0x6ad0, 0xe87b, 0x6bc4, 0xd383, 0x1, 0x1);
        gbc.writeMem(0xc12b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x70a7, gbc.sp());
        EXPECT(0xc12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12b));
        EXPECT(0x17, gbc.readMem(0xc12c));
        // CB 17 0287
        gbc.setState(0xb90b, 0xfa9d, 0x95f0, 0xdf70, 0x3bc9, 0x8725, 0x1, 0x1);
        gbc.writeMem(0xb90b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0xb90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90b));
        EXPECT(0x17, gbc.readMem(0xb90c));
        // CB 17 0288
        gbc.setState(0x891e, 0x248b, 0xa640, 0x82cc, 0xd1cb, 0x922, 0x1, 0x0);
        gbc.writeMem(0x891e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0x8920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891e));
        EXPECT(0x17, gbc.readMem(0x891f));
        // CB 17 0289
        gbc.setState(0xda26, 0xb0b7, 0xe310, 0x79ee, 0xca13, 0xf962, 0x1, 0x0);
        gbc.writeMem(0xda26, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb0b7, gbc.sp());
        EXPECT(0xda28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda26));
        EXPECT(0x17, gbc.readMem(0xda27));
        // CB 17 028B
        gbc.setState(0xde66, 0xbcd4, 0x2810, 0xfdf2, 0x659e, 0x5457, 0x1, 0x0);
        gbc.writeMem(0xde66, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0xde68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde66));
        EXPECT(0x17, gbc.readMem(0xde67));
        // CB 17 028C
        gbc.setState(0xb345, 0x50e6, 0x5e10, 0x5ce6, 0x6b49, 0x73e8, 0x0, 0x1);
        gbc.writeMem(0xb345, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x50e6, gbc.sp());
        EXPECT(0xb347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb345));
        EXPECT(0x17, gbc.readMem(0xb346));
        // CB 17 028D
        gbc.setState(0xacb5, 0xc69b, 0xd380, 0x6a1e, 0xa083, 0x9b85, 0x1, 0x0);
        gbc.writeMem(0xacb5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc69b, gbc.sp());
        EXPECT(0xacb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb5));
        EXPECT(0x17, gbc.readMem(0xacb6));
        // CB 17 028E
        gbc.setState(0x2f3, 0x7e62, 0xc630, 0x39e5, 0x7f6, 0x497a, 0x1, 0x0);
        gbc.writeMem(0x2f3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7e62, gbc.sp());
        EXPECT(0x2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 028F
        gbc.setState(0xd5b3, 0x133a, 0x51b0, 0xbd11, 0xff0f, 0xdc44, 0x0, 0x0);
        gbc.writeMem(0xd5b3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x133a, gbc.sp());
        EXPECT(0xd5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b3));
        EXPECT(0x17, gbc.readMem(0xd5b4));
        // CB 17 0290
        gbc.setState(0x514e, 0xeed3, 0xe930, 0xccd3, 0x6c77, 0x5c7, 0x0, 0x1);
        gbc.writeMem(0x514e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xeed3, gbc.sp());
        EXPECT(0x5150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0291
        gbc.setState(0x3c50, 0xf224, 0x8180, 0x3cd9, 0x8483, 0x9d9c, 0x0, 0x1);
        gbc.writeMem(0x3c50, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf224, gbc.sp());
        EXPECT(0x3c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0292
        gbc.setState(0x232f, 0x5c51, 0x8d80, 0x2b7c, 0x6169, 0x6858, 0x1, 0x1);
        gbc.writeMem(0x232f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5c51, gbc.sp());
        EXPECT(0x2331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0293
        gbc.setState(0x8eb0, 0x3b58, 0xcba0, 0xca7, 0xd73, 0x1eea, 0x1, 0x0);
        gbc.writeMem(0x8eb0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x8eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb0));
        EXPECT(0x17, gbc.readMem(0x8eb1));
        // CB 17 0294
        gbc.setState(0xdad8, 0x1f08, 0x1410, 0xbf22, 0x92ed, 0xb1a3, 0x0, 0x1);
        gbc.writeMem(0xdad8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1f08, gbc.sp());
        EXPECT(0xdada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad8));
        EXPECT(0x17, gbc.readMem(0xdad9));
        // CB 17 0295
        gbc.setState(0xcf7, 0x4a69, 0x3de0, 0xdf45, 0xf1ca, 0x2c2e, 0x1, 0x0);
        gbc.writeMem(0xcf7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4a69, gbc.sp());
        EXPECT(0xcf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0296
        gbc.setState(0x33f7, 0xbb62, 0xafa0, 0x6d4d, 0xe643, 0xbaca, 0x1, 0x0);
        gbc.writeMem(0x33f7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbb62, gbc.sp());
        EXPECT(0x33f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0297
        gbc.setState(0x81fc, 0xabf8, 0x58e0, 0xdb8, 0xad50, 0xca, 0x0, 0x1);
        gbc.writeMem(0x81fc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xabf8, gbc.sp());
        EXPECT(0x81fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81fc));
        EXPECT(0x17, gbc.readMem(0x81fd));
        // CB 17 0298
        gbc.setState(0x2df4, 0x3774, 0x7d0, 0xb699, 0xb9f2, 0xb77e, 0x0, 0x0);
        gbc.writeMem(0x2df4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3774, gbc.sp());
        EXPECT(0x2df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0299
        gbc.setState(0x43fc, 0xe692, 0xecc0, 0xaf9b, 0xd5d6, 0xff3d, 0x1, 0x0);
        gbc.writeMem(0x43fc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe692, gbc.sp());
        EXPECT(0x43fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 029B
        gbc.setState(0xf3a, 0x2b35, 0x6550, 0xf840, 0x743a, 0x6919, 0x1, 0x0);
        gbc.writeMem(0xf3a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2b35, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 029C
        gbc.setState(0x4c78, 0xcf0b, 0x2de0, 0x98c1, 0x5dda, 0x3682, 0x1, 0x0);
        gbc.writeMem(0x4c78, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcf0b, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 029D
        gbc.setState(0x3c05, 0x9a9b, 0x540, 0x6797, 0x3dae, 0xfeb6, 0x0, 0x1);
        gbc.writeMem(0x3c05, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9a9b, gbc.sp());
        EXPECT(0x3c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 029E
        gbc.setState(0x37cf, 0x46d8, 0x64a0, 0x93a, 0xa1b, 0x720f, 0x0, 0x0);
        gbc.writeMem(0x37cf, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x46d8, gbc.sp());
        EXPECT(0x37d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 029F
        gbc.setState(0x2ee, 0x3f4, 0x1810, 0x89e3, 0xc5d0, 0x76c0, 0x1, 0x1);
        gbc.writeMem(0x2ee, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3f4, gbc.sp());
        EXPECT(0x2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02A0
        gbc.setState(0xd3bd, 0xbe88, 0xaa90, 0xc23f, 0x1c9e, 0x2aec, 0x1, 0x1);
        gbc.writeMem(0xd3bd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbe88, gbc.sp());
        EXPECT(0xd3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3bd));
        EXPECT(0x17, gbc.readMem(0xd3be));
        // CB 17 02A1
        gbc.setState(0x4ac3, 0xd64b, 0xcbc0, 0xf6c2, 0xfa42, 0x4f3c, 0x0, 0x1);
        gbc.writeMem(0x4ac3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd64b, gbc.sp());
        EXPECT(0x4ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02A2
        gbc.setState(0xc7ef, 0x8434, 0xbd10, 0xec82, 0xb1eb, 0x960c, 0x1, 0x0);
        gbc.writeMem(0xc7ef, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8434, gbc.sp());
        EXPECT(0xc7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ef));
        EXPECT(0x17, gbc.readMem(0xc7f0));
        // CB 17 02A3
        gbc.setState(0xbcf7, 0xe0c6, 0x44c0, 0xe57, 0x71eb, 0xb8ee, 0x1, 0x1);
        gbc.writeMem(0xbcf7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe0c6, gbc.sp());
        EXPECT(0xbcf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf7));
        EXPECT(0x17, gbc.readMem(0xbcf8));
        // CB 17 02A4
        gbc.setState(0x93da, 0xf0f4, 0x4de0, 0xf50e, 0xaea0, 0x56f2, 0x1, 0x0);
        gbc.writeMem(0x93da, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf0f4, gbc.sp());
        EXPECT(0x93dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93da));
        EXPECT(0x17, gbc.readMem(0x93db));
        // CB 17 02A5
        gbc.setState(0xc61f, 0x258b, 0x5f60, 0x2a4, 0xbb7d, 0x75a8, 0x1, 0x0);
        gbc.writeMem(0xc61f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x258b, gbc.sp());
        EXPECT(0xc621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61f));
        EXPECT(0x17, gbc.readMem(0xc620));
        // CB 17 02A6
        gbc.setState(0xc7fb, 0xd003, 0x8380, 0xf3f5, 0x7307, 0x7e59, 0x1, 0x0);
        gbc.writeMem(0xc7fb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd003, gbc.sp());
        EXPECT(0xc7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fb));
        EXPECT(0x17, gbc.readMem(0xc7fc));
        // CB 17 02A7
        gbc.setState(0xb6cb, 0xa532, 0x2010, 0xc0c1, 0x2a81, 0x34f1, 0x0, 0x1);
        gbc.writeMem(0xb6cb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa532, gbc.sp());
        EXPECT(0xb6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cb));
        EXPECT(0x17, gbc.readMem(0xb6cc));
        // CB 17 02A8
        gbc.setState(0x6001, 0xb29f, 0xda80, 0xc654, 0x1644, 0x7e1, 0x0, 0x0);
        gbc.writeMem(0x6001, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb29f, gbc.sp());
        EXPECT(0x6003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02A9
        gbc.setState(0x318e, 0x7da0, 0x8ed0, 0xefff, 0x200f, 0x87d3, 0x1, 0x1);
        gbc.writeMem(0x318e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7da0, gbc.sp());
        EXPECT(0x3190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02AA
        gbc.setState(0x9c8f, 0x5216, 0xf1c0, 0x4d47, 0xd96f, 0x9d7d, 0x1, 0x1);
        gbc.writeMem(0x9c8f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5216, gbc.sp());
        EXPECT(0x9c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c8f));
        EXPECT(0x17, gbc.readMem(0x9c90));
        // CB 17 02AB
        gbc.setState(0x2645, 0xe98, 0x5d50, 0x58f0, 0x993c, 0xb7ae, 0x0, 0x0);
        gbc.writeMem(0x2645, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe98, gbc.sp());
        EXPECT(0x2647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02AC
        gbc.setState(0x2b28, 0xa063, 0xd4e0, 0xb55, 0x46e4, 0x3e9c, 0x0, 0x0);
        gbc.writeMem(0x2b28, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa063, gbc.sp());
        EXPECT(0x2b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02AD
        gbc.setState(0x9c02, 0xb132, 0x6870, 0x864e, 0x2181, 0xc803, 0x1, 0x0);
        gbc.writeMem(0x9c02, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb132, gbc.sp());
        EXPECT(0x9c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c02));
        EXPECT(0x17, gbc.readMem(0x9c03));
        // CB 17 02AE
        gbc.setState(0xc499, 0x7776, 0x78a0, 0x45d8, 0x4baf, 0xae42, 0x0, 0x1);
        gbc.writeMem(0xc499, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7776, gbc.sp());
        EXPECT(0xc49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc499));
        EXPECT(0x17, gbc.readMem(0xc49a));
        // CB 17 02AF
        gbc.setState(0x6cf4, 0x5be9, 0x5c40, 0x820c, 0xdb2d, 0x42ba, 0x0, 0x1);
        gbc.writeMem(0x6cf4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5be9, gbc.sp());
        EXPECT(0x6cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02B1
        gbc.setState(0xde66, 0x87a9, 0x4120, 0x31d3, 0x7dbd, 0xe615, 0x0, 0x0);
        gbc.writeMem(0xde66, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x87a9, gbc.sp());
        EXPECT(0xde68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde66));
        EXPECT(0x17, gbc.readMem(0xde67));
        // CB 17 02B2
        gbc.setState(0x3af1, 0xdf7e, 0x1c40, 0xffcc, 0x26cb, 0x9e14, 0x0, 0x0);
        gbc.writeMem(0x3af1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdf7e, gbc.sp());
        EXPECT(0x3af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02B3
        gbc.setState(0xa252, 0xa718, 0xf930, 0x5e06, 0x78b0, 0xf100, 0x0, 0x1);
        gbc.writeMem(0xa252, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa718, gbc.sp());
        EXPECT(0xa254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa252));
        EXPECT(0x17, gbc.readMem(0xa253));
        // CB 17 02B4
        gbc.setState(0xdc90, 0xba54, 0x5eb0, 0xfd42, 0x17cf, 0x6f04, 0x0, 0x1);
        gbc.writeMem(0xdc90, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xba54, gbc.sp());
        EXPECT(0xdc92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc90));
        EXPECT(0x17, gbc.readMem(0xdc91));
        // CB 17 02B6
        gbc.setState(0x973d, 0xe260, 0x4170, 0xdd1f, 0x54dd, 0x3a3b, 0x1, 0x0);
        gbc.writeMem(0x973d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe260, gbc.sp());
        EXPECT(0x973f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973d));
        EXPECT(0x17, gbc.readMem(0x973e));
        // CB 17 02B7
        gbc.setState(0x6ed8, 0x1a4, 0x2ba0, 0x77dd, 0x5183, 0xd0f6, 0x1, 0x0);
        gbc.writeMem(0x6ed8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1a4, gbc.sp());
        EXPECT(0x6eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02B8
        gbc.setState(0x160e, 0xafe, 0xc650, 0x40ee, 0x89ea, 0x928d, 0x0, 0x0);
        gbc.writeMem(0x160e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xafe, gbc.sp());
        EXPECT(0x1610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02B9
        gbc.setState(0xcf5c, 0x88f2, 0x3180, 0x3345, 0xc19d, 0x398a, 0x1, 0x1);
        gbc.writeMem(0xcf5c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x88f2, gbc.sp());
        EXPECT(0xcf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5c));
        EXPECT(0x17, gbc.readMem(0xcf5d));
        // CB 17 02BA
        gbc.setState(0xe0ce, 0x59a1, 0x7490, 0x7cb5, 0x6f17, 0x107c, 0x0, 0x1);
        gbc.writeMem(0xe0ce, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x59a1, gbc.sp());
        EXPECT(0xe0d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ce));
        EXPECT(0x17, gbc.readMem(0xe0cf));
        // CB 17 02BB
        gbc.setState(0x21d, 0x3d9c, 0xe2a0, 0x213e, 0xd394, 0xa8ee, 0x0, 0x0);
        gbc.writeMem(0x21d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3d9c, gbc.sp());
        EXPECT(0x21f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02BC
        gbc.setState(0xc58d, 0xcdbe, 0xbdb0, 0xc774, 0x2ff0, 0x423b, 0x1, 0x1);
        gbc.writeMem(0xc58d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0xc58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58d));
        EXPECT(0x17, gbc.readMem(0xc58e));
        // CB 17 02BD
        gbc.setState(0x60e9, 0xa611, 0xe100, 0xd7f1, 0x80ac, 0x2e46, 0x0, 0x1);
        gbc.writeMem(0x60e9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa611, gbc.sp());
        EXPECT(0x60eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02BE
        gbc.setState(0x33fc, 0x48cc, 0x2e30, 0x15f2, 0xc843, 0x4605, 0x0, 0x0);
        gbc.writeMem(0x33fc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x48cc, gbc.sp());
        EXPECT(0x33fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02BF
        gbc.setState(0x5253, 0x6497, 0x5d40, 0x5b64, 0x7247, 0xade3, 0x1, 0x0);
        gbc.writeMem(0x5253, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6497, gbc.sp());
        EXPECT(0x5255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02C0
        gbc.setState(0xad13, 0x5472, 0x9320, 0x76e5, 0x28af, 0x9d65, 0x0, 0x0);
        gbc.writeMem(0xad13, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0xad15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad13));
        EXPECT(0x17, gbc.readMem(0xad14));
        // CB 17 02C1
        gbc.setState(0xebe1, 0x6035, 0x7860, 0xd6da, 0x6515, 0xdaf4, 0x0, 0x1);
        gbc.writeMem(0xebe1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6035, gbc.sp());
        EXPECT(0xebe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe1));
        EXPECT(0x17, gbc.readMem(0xebe2));
        // CB 17 02C2
        gbc.setState(0x6038, 0xbedc, 0xb9f0, 0xfa89, 0x48b7, 0xae43, 0x1, 0x1);
        gbc.writeMem(0x6038, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbedc, gbc.sp());
        EXPECT(0x603a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02C3
        gbc.setState(0xcd8, 0x6900, 0xaa90, 0x1d91, 0x905d, 0x4a2a, 0x0, 0x0);
        gbc.writeMem(0xcd8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6900, gbc.sp());
        EXPECT(0xcda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02C4
        gbc.setState(0x58dd, 0x44d1, 0xee80, 0x720f, 0x33b2, 0xf5a0, 0x0, 0x0);
        gbc.writeMem(0x58dd, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x44d1, gbc.sp());
        EXPECT(0x58df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02C5
        gbc.setState(0x82e, 0x6061, 0x660, 0xf681, 0x908, 0xecb1, 0x1, 0x1);
        gbc.writeMem(0x82e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6061, gbc.sp());
        EXPECT(0x830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02C6
        gbc.setState(0xedc3, 0xe9d4, 0x2aa0, 0x8b0, 0x5684, 0xc8d4, 0x0, 0x1);
        gbc.writeMem(0xedc3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe9d4, gbc.sp());
        EXPECT(0xedc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc3));
        EXPECT(0x17, gbc.readMem(0xedc4));
        // CB 17 02C7
        gbc.setState(0xe1f1, 0x2800, 0xf060, 0x4b61, 0xcf4f, 0x9f6c, 0x1, 0x1);
        gbc.writeMem(0xe1f1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2800, gbc.sp());
        EXPECT(0xe1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f1));
        EXPECT(0x17, gbc.readMem(0xe1f2));
        // CB 17 02C8
        gbc.setState(0x8ce7, 0x25db, 0x5a10, 0x9c55, 0xc670, 0xa4e4, 0x0, 0x0);
        gbc.writeMem(0x8ce7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x25db, gbc.sp());
        EXPECT(0x8ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce7));
        EXPECT(0x17, gbc.readMem(0x8ce8));
        // CB 17 02C9
        gbc.setState(0xa3f7, 0xe4c3, 0x3290, 0x810, 0xead4, 0xf75c, 0x1, 0x1);
        gbc.writeMem(0xa3f7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe4c3, gbc.sp());
        EXPECT(0xa3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f7));
        EXPECT(0x17, gbc.readMem(0xa3f8));
        // CB 17 02CA
        gbc.setState(0xbcc4, 0x4cc9, 0x9a40, 0x8eae, 0xf1f4, 0xff92, 0x0, 0x0);
        gbc.writeMem(0xbcc4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4cc9, gbc.sp());
        EXPECT(0xbcc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc4));
        EXPECT(0x17, gbc.readMem(0xbcc5));
        // CB 17 02CB
        gbc.setState(0xc92a, 0xbdf7, 0xeb0, 0x2509, 0x6702, 0xb447, 0x1, 0x1);
        gbc.writeMem(0xc92a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbdf7, gbc.sp());
        EXPECT(0xc92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92a));
        EXPECT(0x17, gbc.readMem(0xc92b));
        // CB 17 02CC
        gbc.setState(0xbf80, 0xc9de, 0x9220, 0xbc1, 0xc448, 0x9d4a, 0x1, 0x1);
        gbc.writeMem(0xbf80, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc9de, gbc.sp());
        EXPECT(0xbf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf80));
        EXPECT(0x17, gbc.readMem(0xbf81));
        // CB 17 02CD
        gbc.setState(0x5653, 0xdd97, 0x9e10, 0x2de8, 0x5c71, 0x69a4, 0x1, 0x0);
        gbc.writeMem(0x5653, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdd97, gbc.sp());
        EXPECT(0x5655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02CE
        gbc.setState(0x272c, 0x503, 0x95d0, 0x198b, 0xc2c5, 0xb241, 0x1, 0x0);
        gbc.writeMem(0x272c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x503, gbc.sp());
        EXPECT(0x272e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02CF
        gbc.setState(0x3d3d, 0xf050, 0x9b90, 0xdf9e, 0x9dce, 0xbceb, 0x1, 0x1);
        gbc.writeMem(0x3d3d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf050, gbc.sp());
        EXPECT(0x3d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02D0
        gbc.setState(0xcabe, 0xa1c7, 0x11b0, 0x61c6, 0x1027, 0xeabe, 0x0, 0x0);
        gbc.writeMem(0xcabe, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa1c7, gbc.sp());
        EXPECT(0xcac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabe));
        EXPECT(0x17, gbc.readMem(0xcabf));
        // CB 17 02D1
        gbc.setState(0x1a0, 0xcbad, 0x1b70, 0x6ebb, 0x7933, 0x74bf, 0x0, 0x1);
        gbc.writeMem(0x1a0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcbad, gbc.sp());
        EXPECT(0x1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02D2
        gbc.setState(0x7aa1, 0xc1fe, 0x7970, 0xc32d, 0x6eb5, 0x8935, 0x0, 0x1);
        gbc.writeMem(0x7aa1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc1fe, gbc.sp());
        EXPECT(0x7aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02D3
        gbc.setState(0xea31, 0x9afd, 0x9710, 0x724c, 0xcb03, 0x532d, 0x1, 0x0);
        gbc.writeMem(0xea31, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9afd, gbc.sp());
        EXPECT(0xea33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea31));
        EXPECT(0x17, gbc.readMem(0xea32));
        // CB 17 02D4
        gbc.setState(0x7718, 0xad6, 0xa910, 0x1488, 0xae4b, 0x419, 0x1, 0x0);
        gbc.writeMem(0x7718, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xad6, gbc.sp());
        EXPECT(0x771a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02D5
        gbc.setState(0xc0b6, 0x7ebf, 0xb0f0, 0x5d7f, 0x94f, 0xbecc, 0x0, 0x0);
        gbc.writeMem(0xc0b6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7ebf, gbc.sp());
        EXPECT(0xc0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b6));
        EXPECT(0x17, gbc.readMem(0xc0b7));
        // CB 17 02D7
        gbc.setState(0x4317, 0xf327, 0x38d0, 0xff07, 0xb1ce, 0xf5dd, 0x0, 0x0);
        gbc.writeMem(0x4317, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf327, gbc.sp());
        EXPECT(0x4319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02D8
        gbc.setState(0x4f2f, 0xf7e1, 0xb7f0, 0x23d, 0x25e7, 0x7366, 0x1, 0x0);
        gbc.writeMem(0x4f2f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf7e1, gbc.sp());
        EXPECT(0x4f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02D9
        gbc.setState(0x6454, 0xdb74, 0xec80, 0x3f2f, 0x2b1f, 0x8b1a, 0x1, 0x1);
        gbc.writeMem(0x6454, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdb74, gbc.sp());
        EXPECT(0x6456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02DA
        gbc.setState(0x579a, 0xe64d, 0x1d90, 0xc5bf, 0x9e8f, 0x3d11, 0x1, 0x0);
        gbc.writeMem(0x579a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe64d, gbc.sp());
        EXPECT(0x579c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02DB
        gbc.setState(0x86f0, 0xd352, 0x75f0, 0x7c4, 0xd60a, 0x58df, 0x0, 0x1);
        gbc.writeMem(0x86f0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd352, gbc.sp());
        EXPECT(0x86f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f0));
        EXPECT(0x17, gbc.readMem(0x86f1));
        // CB 17 02DC
        gbc.setState(0xec31, 0x2bda, 0xa2c0, 0xe36c, 0x8b6e, 0x6838, 0x0, 0x1);
        gbc.writeMem(0xec31, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2bda, gbc.sp());
        EXPECT(0xec33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec31));
        EXPECT(0x17, gbc.readMem(0xec32));
        // CB 17 02DD
        gbc.setState(0x77ed, 0xafc3, 0xff20, 0x3708, 0xbfef, 0xe9b5, 0x1, 0x0);
        gbc.writeMem(0x77ed, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xafc3, gbc.sp());
        EXPECT(0x77ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02DE
        gbc.setState(0x7a28, 0x2424, 0xb450, 0xdcc0, 0x70c6, 0x6631, 0x1, 0x1);
        gbc.writeMem(0x7a28, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2424, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02DF
        gbc.setState(0xad0a, 0x9339, 0x49c0, 0x6b1e, 0x972e, 0x4bea, 0x0, 0x1);
        gbc.writeMem(0xad0a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9339, gbc.sp());
        EXPECT(0xad0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0a));
        EXPECT(0x17, gbc.readMem(0xad0b));
        // CB 17 02E0
        gbc.setState(0x2e4b, 0xc1c6, 0x71c0, 0x2f85, 0xed26, 0xdb6c, 0x1, 0x1);
        gbc.writeMem(0x2e4b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc1c6, gbc.sp());
        EXPECT(0x2e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02E1
        gbc.setState(0xdeff, 0x1390, 0x8260, 0xb0bc, 0xd429, 0xd36, 0x1, 0x1);
        gbc.writeMem(0xdeff, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1390, gbc.sp());
        EXPECT(0xdf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeff));
        EXPECT(0x17, gbc.readMem(0xdf00));
        // CB 17 02E2
        gbc.setState(0xb3e1, 0x13c8, 0x2630, 0x52e3, 0x98e9, 0xade, 0x1, 0x1);
        gbc.writeMem(0xb3e1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x13c8, gbc.sp());
        EXPECT(0xb3e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e1));
        EXPECT(0x17, gbc.readMem(0xb3e2));
        // CB 17 02E3
        gbc.setState(0x64d8, 0x98db, 0x6160, 0x1c6, 0xfea, 0x5811, 0x1, 0x1);
        gbc.writeMem(0x64d8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x98db, gbc.sp());
        EXPECT(0x64da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02E4
        gbc.setState(0xc1a8, 0xf31, 0x5890, 0xfb2e, 0x271e, 0xd0e, 0x1, 0x1);
        gbc.writeMem(0xc1a8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf31, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a8));
        EXPECT(0x17, gbc.readMem(0xc1a9));
        // CB 17 02E5
        gbc.setState(0xa038, 0xac36, 0xce90, 0x2d1c, 0x224d, 0xac40, 0x1, 0x1);
        gbc.writeMem(0xa038, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xac36, gbc.sp());
        EXPECT(0xa03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa038));
        EXPECT(0x17, gbc.readMem(0xa039));
        // CB 17 02E6
        gbc.setState(0x3b6c, 0x72b, 0x54e0, 0x1c2, 0xdc4, 0xabf0, 0x0, 0x0);
        gbc.writeMem(0x3b6c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x72b, gbc.sp());
        EXPECT(0x3b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02E7
        gbc.setState(0x6be6, 0x81a8, 0xe820, 0x5d40, 0xa3f5, 0xa4b5, 0x1, 0x0);
        gbc.writeMem(0x6be6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x81a8, gbc.sp());
        EXPECT(0x6be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02EA
        gbc.setState(0xa003, 0x79ef, 0x7030, 0xe4cd, 0x7aee, 0x6920, 0x1, 0x1);
        gbc.writeMem(0xa003, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0xa005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa003));
        EXPECT(0x17, gbc.readMem(0xa004));
        // CB 17 02EB
        gbc.setState(0x99a8, 0xcb38, 0x1060, 0x2fcf, 0x8632, 0x71e5, 0x1, 0x0);
        gbc.writeMem(0x99a8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcb38, gbc.sp());
        EXPECT(0x99aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a8));
        EXPECT(0x17, gbc.readMem(0x99a9));
        // CB 17 02EC
        gbc.setState(0x1798, 0x37bc, 0x25d0, 0x77a6, 0x29e9, 0xc517, 0x0, 0x0);
        gbc.writeMem(0x1798, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x37bc, gbc.sp());
        EXPECT(0x179a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02ED
        gbc.setState(0x1d47, 0x1efa, 0x6d50, 0x46b9, 0xadf0, 0x30f6, 0x1, 0x1);
        gbc.writeMem(0x1d47, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0x1d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02EE
        gbc.setState(0xe6e3, 0x729a, 0xc140, 0x8a89, 0xfcff, 0xcb36, 0x0, 0x0);
        gbc.writeMem(0xe6e3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x729a, gbc.sp());
        EXPECT(0xe6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e3));
        EXPECT(0x17, gbc.readMem(0xe6e4));
        // CB 17 02EF
        gbc.setState(0x4944, 0x98f4, 0x5650, 0x7dc8, 0xa81d, 0xfd01, 0x0, 0x0);
        gbc.writeMem(0x4944, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x98f4, gbc.sp());
        EXPECT(0x4946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02F1
        gbc.setState(0xee99, 0x5a37, 0x8e80, 0xc66b, 0xf7d7, 0x3bb9, 0x1, 0x0);
        gbc.writeMem(0xee99, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0xee9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee99));
        EXPECT(0x17, gbc.readMem(0xee9a));
        // CB 17 02F2
        gbc.setState(0x98c6, 0x3b98, 0x8510, 0x992c, 0xb2ae, 0xb655, 0x0, 0x1);
        gbc.writeMem(0x98c6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3b98, gbc.sp());
        EXPECT(0x98c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c6));
        EXPECT(0x17, gbc.readMem(0x98c7));
        // CB 17 02F3
        gbc.setState(0x98b4, 0xe06a, 0x9eb0, 0x75a4, 0x908d, 0xa076, 0x0, 0x1);
        gbc.writeMem(0x98b4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe06a, gbc.sp());
        EXPECT(0x98b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b4));
        EXPECT(0x17, gbc.readMem(0x98b5));
        // CB 17 02F4
        gbc.setState(0xc682, 0x753b, 0xdb90, 0x45ab, 0x4330, 0xd56a, 0x0, 0x1);
        gbc.writeMem(0xc682, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x753b, gbc.sp());
        EXPECT(0xc684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc682));
        EXPECT(0x17, gbc.readMem(0xc683));
        // CB 17 02F5
        gbc.setState(0xa236, 0xcd37, 0xb1a0, 0xc8e5, 0xe2f2, 0x18c8, 0x0, 0x0);
        gbc.writeMem(0xa236, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcd37, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa236));
        EXPECT(0x17, gbc.readMem(0xa237));
        // CB 17 02F6
        gbc.setState(0xc07b, 0xd13, 0xf9b0, 0x87c4, 0x52d4, 0x6361, 0x1, 0x1);
        gbc.writeMem(0xc07b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd13, gbc.sp());
        EXPECT(0xc07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07b));
        EXPECT(0x17, gbc.readMem(0xc07c));
        // CB 17 02F7
        gbc.setState(0x88f3, 0x61e7, 0x59b0, 0x40d0, 0x4102, 0x7827, 0x1, 0x1);
        gbc.writeMem(0x88f3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x61e7, gbc.sp());
        EXPECT(0x88f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f3));
        EXPECT(0x17, gbc.readMem(0x88f4));
        // CB 17 02F8
        gbc.setState(0x4eae, 0x2e10, 0xe300, 0xec00, 0xc5d7, 0x2b75, 0x0, 0x1);
        gbc.writeMem(0x4eae, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2e10, gbc.sp());
        EXPECT(0x4eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02F9
        gbc.setState(0x45b6, 0xd016, 0xd40, 0xcbf5, 0xc347, 0xb5ff, 0x0, 0x0);
        gbc.writeMem(0x45b6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd016, gbc.sp());
        EXPECT(0x45b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02FA
        gbc.setState(0x92f, 0x6b5b, 0x4840, 0x3d40, 0xc94, 0x4480, 0x0, 0x0);
        gbc.writeMem(0x92f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6b5b, gbc.sp());
        EXPECT(0x931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 02FB
        gbc.setState(0xe934, 0x25e3, 0x6ef0, 0xa49c, 0x94a3, 0xa2ad, 0x1, 0x0);
        gbc.writeMem(0xe934, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x25e3, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe934));
        EXPECT(0x17, gbc.readMem(0xe935));
        // CB 17 02FC
        gbc.setState(0xb3be, 0x51f4, 0x8660, 0xa3f3, 0xd4be, 0xa2ce, 0x0, 0x1);
        gbc.writeMem(0xb3be, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x51f4, gbc.sp());
        EXPECT(0xb3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3be));
        EXPECT(0x17, gbc.readMem(0xb3bf));
        // CB 17 02FD
        gbc.setState(0xcd9b, 0x8947, 0x1650, 0x7867, 0x3773, 0xe517, 0x1, 0x1);
        gbc.writeMem(0xcd9b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8947, gbc.sp());
        EXPECT(0xcd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9b));
        EXPECT(0x17, gbc.readMem(0xcd9c));
        // CB 17 02FE
        gbc.setState(0x7103, 0x2ce5, 0xeda0, 0xc32a, 0x1dfd, 0xc5f7, 0x0, 0x0);
        gbc.writeMem(0x7103, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2ce5, gbc.sp());
        EXPECT(0x7105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 02FF
        gbc.setState(0xd718, 0xda92, 0x3cb0, 0x6b9e, 0x587e, 0xa8b3, 0x1, 0x0);
        gbc.writeMem(0xd718, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xda92, gbc.sp());
        EXPECT(0xd71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd718));
        EXPECT(0x17, gbc.readMem(0xd719));
        // CB 17 0300
        gbc.setState(0x45b9, 0xb34f, 0xf160, 0x73c6, 0x38d8, 0x39bd, 0x0, 0x0);
        gbc.writeMem(0x45b9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb34f, gbc.sp());
        EXPECT(0x45bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0301
        gbc.setState(0x37c0, 0x8530, 0x8c90, 0xbfe0, 0xe5c2, 0x25d3, 0x0, 0x0);
        gbc.writeMem(0x37c0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8530, gbc.sp());
        EXPECT(0x37c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0302
        gbc.setState(0x84c4, 0x40f6, 0x20f0, 0xf27e, 0xd1de, 0x68ad, 0x1, 0x0);
        gbc.writeMem(0x84c4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x40f6, gbc.sp());
        EXPECT(0x84c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c4));
        EXPECT(0x17, gbc.readMem(0x84c5));
        // CB 17 0303
        gbc.setState(0xed62, 0x4d83, 0xebc0, 0xd9a, 0x9d13, 0x8234, 0x1, 0x1);
        gbc.writeMem(0xed62, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4d83, gbc.sp());
        EXPECT(0xed64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed62));
        EXPECT(0x17, gbc.readMem(0xed63));
        // CB 17 0304
        gbc.setState(0x511c, 0xc337, 0xd8e0, 0xbad6, 0xb178, 0x78b3, 0x1, 0x0);
        gbc.writeMem(0x511c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc337, gbc.sp());
        EXPECT(0x511e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0305
        gbc.setState(0x79aa, 0x659c, 0x81d0, 0xe50e, 0xa3ab, 0x8222, 0x1, 0x0);
        gbc.writeMem(0x79aa, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x659c, gbc.sp());
        EXPECT(0x79ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0306
        gbc.setState(0xdab, 0x42a8, 0x5260, 0xa34a, 0xca0, 0xb65c, 0x1, 0x0);
        gbc.writeMem(0xdab, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x42a8, gbc.sp());
        EXPECT(0xdad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0307
        gbc.setState(0x85b3, 0x8d5c, 0x5420, 0x4d01, 0xbb77, 0x4852, 0x1, 0x0);
        gbc.writeMem(0x85b3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d5c, gbc.sp());
        EXPECT(0x85b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b3));
        EXPECT(0x17, gbc.readMem(0x85b4));
        // CB 17 0308
        gbc.setState(0x601e, 0xed2e, 0xdff0, 0x907, 0xce1b, 0x63e0, 0x0, 0x0);
        gbc.writeMem(0x601e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xed2e, gbc.sp());
        EXPECT(0x6020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0309
        gbc.setState(0x2771, 0xe55f, 0x6110, 0x6f08, 0x11bf, 0x601c, 0x1, 0x0);
        gbc.writeMem(0x2771, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe55f, gbc.sp());
        EXPECT(0x2773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 030A
        gbc.setState(0x4cda, 0xfe18, 0x580, 0xd8df, 0x33d7, 0xd826, 0x1, 0x1);
        gbc.writeMem(0x4cda, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfe18, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 030B
        gbc.setState(0x6cd3, 0x3c4b, 0x14d0, 0x6421, 0xa524, 0xd5b5, 0x0, 0x0);
        gbc.writeMem(0x6cd3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3c4b, gbc.sp());
        EXPECT(0x6cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 030C
        gbc.setState(0xaeab, 0xec96, 0x59f0, 0xf93a, 0xb2b8, 0x5c9c, 0x0, 0x1);
        gbc.writeMem(0xaeab, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xec96, gbc.sp());
        EXPECT(0xaead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeab));
        EXPECT(0x17, gbc.readMem(0xaeac));
        // CB 17 030D
        gbc.setState(0x2b79, 0xefa6, 0xfe50, 0x2573, 0x7bd5, 0x7f7a, 0x1, 0x1);
        gbc.writeMem(0x2b79, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xefa6, gbc.sp());
        EXPECT(0x2b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 030E
        gbc.setState(0x372b, 0x481a, 0xee40, 0x9614, 0xb6, 0x137c, 0x0, 0x1);
        gbc.writeMem(0x372b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x481a, gbc.sp());
        EXPECT(0x372d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 030F
        gbc.setState(0x6c25, 0x928d, 0x8460, 0xe643, 0x124d, 0x87cd, 0x1, 0x1);
        gbc.writeMem(0x6c25, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x928d, gbc.sp());
        EXPECT(0x6c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0310
        gbc.setState(0xead8, 0xa499, 0xcb60, 0xdecb, 0xa878, 0x9e2e, 0x0, 0x1);
        gbc.writeMem(0xead8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa499, gbc.sp());
        EXPECT(0xeada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead8));
        EXPECT(0x17, gbc.readMem(0xead9));
        // CB 17 0312
        gbc.setState(0x950a, 0xf6b2, 0x1d50, 0xc72c, 0xbc61, 0xf6b0, 0x1, 0x1);
        gbc.writeMem(0x950a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf6b2, gbc.sp());
        EXPECT(0x950c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950a));
        EXPECT(0x17, gbc.readMem(0x950b));
        // CB 17 0313
        gbc.setState(0x58f0, 0x226f, 0x8ec0, 0xdc7d, 0x8ee8, 0x2b0e, 0x1, 0x0);
        gbc.writeMem(0x58f0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x226f, gbc.sp());
        EXPECT(0x58f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0314
        gbc.setState(0x2897, 0x8be, 0x8bd0, 0x1e4, 0x6eed, 0xe65e, 0x1, 0x1);
        gbc.writeMem(0x2897, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8be, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0315
        gbc.setState(0x7109, 0x2925, 0xfe10, 0x1221, 0x51f8, 0x4db7, 0x1, 0x0);
        gbc.writeMem(0x7109, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2925, gbc.sp());
        EXPECT(0x710b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0316
        gbc.setState(0x44da, 0x6ef3, 0xf0c0, 0xb501, 0xdf31, 0xf6f1, 0x0, 0x0);
        gbc.writeMem(0x44da, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6ef3, gbc.sp());
        EXPECT(0x44dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0317
        gbc.setState(0xbf54, 0x2828, 0xe840, 0x959c, 0xf4ca, 0x1728, 0x0, 0x0);
        gbc.writeMem(0xbf54, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2828, gbc.sp());
        EXPECT(0xbf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf54));
        EXPECT(0x17, gbc.readMem(0xbf55));
        // CB 17 0318
        gbc.setState(0x15ce, 0x7aa6, 0x7a60, 0xc8fb, 0xc257, 0x7cd5, 0x1, 0x0);
        gbc.writeMem(0x15ce, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7aa6, gbc.sp());
        EXPECT(0x15d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0319
        gbc.setState(0x1da8, 0x4343, 0xb140, 0x3241, 0xfe3d, 0x3b9a, 0x1, 0x0);
        gbc.writeMem(0x1da8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4343, gbc.sp());
        EXPECT(0x1daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 031A
        gbc.setState(0xc420, 0x5349, 0x4850, 0x7ac8, 0x9284, 0x593d, 0x0, 0x1);
        gbc.writeMem(0xc420, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5349, gbc.sp());
        EXPECT(0xc422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc420));
        EXPECT(0x17, gbc.readMem(0xc421));
        // CB 17 031B
        gbc.setState(0x8ba4, 0x2d7b, 0x9d40, 0xc1db, 0xe30d, 0x9af0, 0x1, 0x1);
        gbc.writeMem(0x8ba4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2d7b, gbc.sp());
        EXPECT(0x8ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba4));
        EXPECT(0x17, gbc.readMem(0x8ba5));
        // CB 17 031C
        gbc.setState(0x7996, 0x1c20, 0xfa70, 0xbb5f, 0xe80, 0x88c3, 0x1, 0x1);
        gbc.writeMem(0x7996, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1c20, gbc.sp());
        EXPECT(0x7998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 031D
        gbc.setState(0x6432, 0x4924, 0xfe10, 0x7d41, 0x3049, 0x879a, 0x0, 0x0);
        gbc.writeMem(0x6432, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4924, gbc.sp());
        EXPECT(0x6434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 031E
        gbc.setState(0x94f3, 0xb026, 0x6d00, 0xfa2, 0x230c, 0x451, 0x1, 0x1);
        gbc.writeMem(0x94f3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb026, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f3));
        EXPECT(0x17, gbc.readMem(0x94f4));
        // CB 17 0320
        gbc.setState(0xd01, 0xf894, 0x41c0, 0x16b7, 0x725c, 0x77b7, 0x1, 0x0);
        gbc.writeMem(0xd01, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf894, gbc.sp());
        EXPECT(0xd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0321
        gbc.setState(0x7261, 0xc277, 0x8280, 0xbafa, 0x23d9, 0x5e10, 0x0, 0x1);
        gbc.writeMem(0x7261, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc277, gbc.sp());
        EXPECT(0x7263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0322
        gbc.setState(0x8753, 0x34bf, 0xc2f0, 0x40ce, 0x2974, 0xadb0, 0x0, 0x1);
        gbc.writeMem(0x8753, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x34bf, gbc.sp());
        EXPECT(0x8755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8753));
        EXPECT(0x17, gbc.readMem(0x8754));
        // CB 17 0323
        gbc.setState(0xc154, 0xf07, 0xe780, 0xc894, 0xe89, 0x980d, 0x0, 0x1);
        gbc.writeMem(0xc154, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf07, gbc.sp());
        EXPECT(0xc156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc154));
        EXPECT(0x17, gbc.readMem(0xc155));
        // CB 17 0324
        gbc.setState(0x2728, 0x4ea2, 0x42a0, 0xf03c, 0xc059, 0x2733, 0x0, 0x0);
        gbc.writeMem(0x2728, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4ea2, gbc.sp());
        EXPECT(0x272a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0325
        gbc.setState(0x815d, 0xbe2c, 0x6570, 0x3d07, 0x7901, 0xa42a, 0x0, 0x1);
        gbc.writeMem(0x815d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbe2c, gbc.sp());
        EXPECT(0x815f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815d));
        EXPECT(0x17, gbc.readMem(0x815e));
        // CB 17 0326
        gbc.setState(0x86ef, 0x6ddc, 0xb2e0, 0x9cf2, 0x84b, 0x1262, 0x1, 0x0);
        gbc.writeMem(0x86ef, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6ddc, gbc.sp());
        EXPECT(0x86f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ef));
        EXPECT(0x17, gbc.readMem(0x86f0));
        // CB 17 0327
        gbc.setState(0xa44f, 0xcf55, 0x7c30, 0xcb4f, 0x685c, 0x5a49, 0x0, 0x0);
        gbc.writeMem(0xa44f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0xa451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44f));
        EXPECT(0x17, gbc.readMem(0xa450));
        // CB 17 0328
        gbc.setState(0x6850, 0xed68, 0x6fc0, 0xa14f, 0xdad5, 0x45b, 0x1, 0x0);
        gbc.writeMem(0x6850, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xed68, gbc.sp());
        EXPECT(0x6852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0329
        gbc.setState(0x5f5f, 0x102e, 0xf2d0, 0xfd70, 0x8d81, 0x5856, 0x1, 0x0);
        gbc.writeMem(0x5f5f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x102e, gbc.sp());
        EXPECT(0x5f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 032A
        gbc.setState(0x3cd2, 0x3e8a, 0xd950, 0x1f43, 0x4a0b, 0xf381, 0x0, 0x1);
        gbc.writeMem(0x3cd2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3e8a, gbc.sp());
        EXPECT(0x3cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 032B
        gbc.setState(0x1c71, 0x21cc, 0x5aa0, 0xa92a, 0xd983, 0x5479, 0x1, 0x1);
        gbc.writeMem(0x1c71, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x21cc, gbc.sp());
        EXPECT(0x1c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 032C
        gbc.setState(0x7a40, 0x114c, 0x8bb0, 0x32de, 0xbb67, 0x9bab, 0x1, 0x1);
        gbc.writeMem(0x7a40, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x114c, gbc.sp());
        EXPECT(0x7a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 032D
        gbc.setState(0x6df3, 0xf351, 0xa060, 0x4fe6, 0xf5b0, 0x4f96, 0x1, 0x0);
        gbc.writeMem(0x6df3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf351, gbc.sp());
        EXPECT(0x6df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 032E
        gbc.setState(0xc123, 0x908d, 0x4020, 0x8dea, 0x8a78, 0xd6cd, 0x0, 0x1);
        gbc.writeMem(0xc123, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x908d, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc123));
        EXPECT(0x17, gbc.readMem(0xc124));
        // CB 17 032F
        gbc.setState(0xb, 0x22f1, 0xd3a0, 0x2e4e, 0xcb5, 0xe8c4, 0x0, 0x1);
        gbc.writeMem(0xb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x22f1, gbc.sp());
        EXPECT(0xd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0330
        gbc.setState(0xbc09, 0x5640, 0x3800, 0x6fe4, 0x4268, 0x3a92, 0x0, 0x0);
        gbc.writeMem(0xbc09, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5640, gbc.sp());
        EXPECT(0xbc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc09));
        EXPECT(0x17, gbc.readMem(0xbc0a));
        // CB 17 0331
        gbc.setState(0x5170, 0x451e, 0x29c0, 0xf831, 0x644b, 0x7495, 0x0, 0x0);
        gbc.writeMem(0x5170, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x451e, gbc.sp());
        EXPECT(0x5172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0332
        gbc.setState(0xaad0, 0x5c1, 0x5be0, 0x389f, 0x3aa4, 0xd0ea, 0x1, 0x1);
        gbc.writeMem(0xaad0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5c1, gbc.sp());
        EXPECT(0xaad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad0));
        EXPECT(0x17, gbc.readMem(0xaad1));
        // CB 17 0333
        gbc.setState(0x7838, 0xa28d, 0xa670, 0xde31, 0x53a3, 0x96df, 0x0, 0x1);
        gbc.writeMem(0x7838, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa28d, gbc.sp());
        EXPECT(0x783a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0334
        gbc.setState(0x2234, 0xbdfe, 0xfc10, 0x3958, 0xe803, 0x3baf, 0x0, 0x1);
        gbc.writeMem(0x2234, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbdfe, gbc.sp());
        EXPECT(0x2236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0335
        gbc.setState(0x5771, 0x6982, 0x7730, 0x464b, 0x6e5e, 0x9bb2, 0x1, 0x1);
        gbc.writeMem(0x5771, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6982, gbc.sp());
        EXPECT(0x5773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0336
        gbc.setState(0x1c47, 0x3478, 0x2840, 0x3040, 0xcde2, 0x316c, 0x0, 0x0);
        gbc.writeMem(0x1c47, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3478, gbc.sp());
        EXPECT(0x1c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0337
        gbc.setState(0x4be5, 0x1c17, 0xe890, 0x73a0, 0x15e8, 0x4264, 0x0, 0x1);
        gbc.writeMem(0x4be5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1c17, gbc.sp());
        EXPECT(0x4be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0338
        gbc.setState(0x1af1, 0x2709, 0xd770, 0x6c0f, 0x7f2e, 0xed68, 0x1, 0x0);
        gbc.writeMem(0x1af1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0x1af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 033A
        gbc.setState(0xa79c, 0xe088, 0x1290, 0xe0a, 0xe63f, 0xb885, 0x0, 0x1);
        gbc.writeMem(0xa79c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe088, gbc.sp());
        EXPECT(0xa79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79c));
        EXPECT(0x17, gbc.readMem(0xa79d));
        // CB 17 033B
        gbc.setState(0xe5bc, 0x1af1, 0x7ee0, 0xf4b7, 0xa6ef, 0x61e, 0x1, 0x1);
        gbc.writeMem(0xe5bc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1af1, gbc.sp());
        EXPECT(0xe5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bc));
        EXPECT(0x17, gbc.readMem(0xe5bd));
        // CB 17 033C
        gbc.setState(0x1c90, 0xee2e, 0x3370, 0xff63, 0xda65, 0x43bf, 0x0, 0x1);
        gbc.writeMem(0x1c90, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xee2e, gbc.sp());
        EXPECT(0x1c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 033D
        gbc.setState(0x5d2c, 0x63e1, 0xab90, 0xf050, 0x6b41, 0x3dfe, 0x1, 0x0);
        gbc.writeMem(0x5d2c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x63e1, gbc.sp());
        EXPECT(0x5d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 033E
        gbc.setState(0x3d53, 0x26ff, 0x6f0, 0xd1b8, 0x976d, 0x610c, 0x0, 0x0);
        gbc.writeMem(0x3d53, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x26ff, gbc.sp());
        EXPECT(0x3d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 033F
        gbc.setState(0xd16e, 0x2dcf, 0x7af0, 0x87da, 0x70e0, 0xb020, 0x0, 0x1);
        gbc.writeMem(0xd16e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2dcf, gbc.sp());
        EXPECT(0xd170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16e));
        EXPECT(0x17, gbc.readMem(0xd16f));
        // CB 17 0340
        gbc.setState(0x2581, 0xb56b, 0x96c0, 0xea66, 0x4e68, 0x3cbe, 0x0, 0x0);
        gbc.writeMem(0x2581, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb56b, gbc.sp());
        EXPECT(0x2583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0341
        gbc.setState(0xbbf8, 0x4e9d, 0xcac0, 0x8a1c, 0xd527, 0x31b0, 0x0, 0x0);
        gbc.writeMem(0xbbf8, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4e9d, gbc.sp());
        EXPECT(0xbbfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf8));
        EXPECT(0x17, gbc.readMem(0xbbf9));
        // CB 17 0342
        gbc.setState(0x9403, 0xeda, 0x3bd0, 0x8d39, 0x8894, 0x7d2e, 0x0, 0x1);
        gbc.writeMem(0x9403, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xeda, gbc.sp());
        EXPECT(0x9405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9403));
        EXPECT(0x17, gbc.readMem(0x9404));
        // CB 17 0343
        gbc.setState(0x34b2, 0x4c66, 0x8a30, 0x41d3, 0xe31b, 0x8c7b, 0x0, 0x0);
        gbc.writeMem(0x34b2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4c66, gbc.sp());
        EXPECT(0x34b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0344
        gbc.setState(0x5ce4, 0xfe17, 0x8490, 0x77ec, 0xbead, 0x102d, 0x1, 0x0);
        gbc.writeMem(0x5ce4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfe17, gbc.sp());
        EXPECT(0x5ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0345
        gbc.setState(0x999c, 0x10de, 0x9800, 0xf378, 0x8c60, 0x621a, 0x0, 0x0);
        gbc.writeMem(0x999c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x10de, gbc.sp());
        EXPECT(0x999e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999c));
        EXPECT(0x17, gbc.readMem(0x999d));
        // CB 17 0346
        gbc.setState(0xcaf3, 0xfbac, 0x13e0, 0x24bb, 0xd8aa, 0x8feb, 0x1, 0x0);
        gbc.writeMem(0xcaf3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfbac, gbc.sp());
        EXPECT(0xcaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf3));
        EXPECT(0x17, gbc.readMem(0xcaf4));
        // CB 17 0347
        gbc.setState(0xa7eb, 0xdb8b, 0xe2b0, 0xf43d, 0x1819, 0x1fbc, 0x1, 0x1);
        gbc.writeMem(0xa7eb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdb8b, gbc.sp());
        EXPECT(0xa7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7eb));
        EXPECT(0x17, gbc.readMem(0xa7ec));
        // CB 17 0348
        gbc.setState(0xbe96, 0x9472, 0x7e0, 0xe0b0, 0x328c, 0x90ef, 0x0, 0x1);
        gbc.writeMem(0xbe96, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9472, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe96));
        EXPECT(0x17, gbc.readMem(0xbe97));
        // CB 17 0349
        gbc.setState(0x49d6, 0x2636, 0x3ac0, 0x3104, 0x175c, 0xe88, 0x1, 0x1);
        gbc.writeMem(0x49d6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0x49d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 034A
        gbc.setState(0xe266, 0x9739, 0xd930, 0xed3b, 0x4f15, 0x312d, 0x0, 0x0);
        gbc.writeMem(0xe266, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9739, gbc.sp());
        EXPECT(0xe268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe266));
        EXPECT(0x17, gbc.readMem(0xe267));
        // CB 17 034B
        gbc.setState(0x597f, 0x5d46, 0xcab0, 0xa41, 0x84ab, 0x5be7, 0x1, 0x0);
        gbc.writeMem(0x597f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5d46, gbc.sp());
        EXPECT(0x5981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 034C
        gbc.setState(0x20a5, 0xcd3c, 0xaad0, 0xb406, 0xd6bf, 0x3d2f, 0x0, 0x0);
        gbc.writeMem(0x20a5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcd3c, gbc.sp());
        EXPECT(0x20a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 034D
        gbc.setState(0xb116, 0xd99a, 0xf280, 0x6149, 0x542b, 0xa821, 0x0, 0x0);
        gbc.writeMem(0xb116, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd99a, gbc.sp());
        EXPECT(0xb118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb116));
        EXPECT(0x17, gbc.readMem(0xb117));
        // CB 17 034E
        gbc.setState(0xcef5, 0xe1b0, 0xad0, 0x4c49, 0x737e, 0x2c5, 0x0, 0x0);
        gbc.writeMem(0xcef5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe1b0, gbc.sp());
        EXPECT(0xcef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef5));
        EXPECT(0x17, gbc.readMem(0xcef6));
        // CB 17 034F
        gbc.setState(0x8593, 0xc9a3, 0xc660, 0xd4b9, 0xf71f, 0x8ec0, 0x0, 0x1);
        gbc.writeMem(0x8593, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc9a3, gbc.sp());
        EXPECT(0x8595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8593));
        EXPECT(0x17, gbc.readMem(0x8594));
        // CB 17 0350
        gbc.setState(0x2e78, 0xabd2, 0x6b80, 0x53e5, 0xad42, 0x67d2, 0x1, 0x1);
        gbc.writeMem(0x2e78, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xabd2, gbc.sp());
        EXPECT(0x2e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0351
        gbc.setState(0xccb4, 0x5a53, 0x3130, 0xfedb, 0x290a, 0xbb36, 0x0, 0x0);
        gbc.writeMem(0xccb4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5a53, gbc.sp());
        EXPECT(0xccb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb4));
        EXPECT(0x17, gbc.readMem(0xccb5));
        // CB 17 0352
        gbc.setState(0xaaeb, 0x8880, 0x6050, 0xabd1, 0x262b, 0x22ea, 0x0, 0x1);
        gbc.writeMem(0xaaeb, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8880, gbc.sp());
        EXPECT(0xaaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaeb));
        EXPECT(0x17, gbc.readMem(0xaaec));
        // CB 17 0354
        gbc.setState(0x73e9, 0xe2a0, 0x6b40, 0x771a, 0xe28f, 0x6888, 0x0, 0x1);
        gbc.writeMem(0x73e9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe2a0, gbc.sp());
        EXPECT(0x73eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0355
        gbc.setState(0x8c1b, 0x43cf, 0x8560, 0x82ec, 0xa89f, 0xdfc6, 0x1, 0x1);
        gbc.writeMem(0x8c1b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x43cf, gbc.sp());
        EXPECT(0x8c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1b));
        EXPECT(0x17, gbc.readMem(0x8c1c));
        // CB 17 0356
        gbc.setState(0x9090, 0x68d1, 0x7320, 0x2319, 0xcef2, 0xec46, 0x0, 0x0);
        gbc.writeMem(0x9090, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x68d1, gbc.sp());
        EXPECT(0x9092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9090));
        EXPECT(0x17, gbc.readMem(0x9091));
        // CB 17 0357
        gbc.setState(0x9aae, 0xd947, 0xf6e0, 0xb0f8, 0xa0c8, 0x3a25, 0x1, 0x1);
        gbc.writeMem(0x9aae, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd947, gbc.sp());
        EXPECT(0x9ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aae));
        EXPECT(0x17, gbc.readMem(0x9aaf));
        // CB 17 0358
        gbc.setState(0x5574, 0x5482, 0xdc90, 0x7587, 0xb658, 0x99e1, 0x1, 0x1);
        gbc.writeMem(0x5574, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5482, gbc.sp());
        EXPECT(0x5576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0359
        gbc.setState(0xcc5, 0x3e0e, 0xa410, 0x8b7b, 0xc144, 0x48f2, 0x0, 0x0);
        gbc.writeMem(0xcc5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3e0e, gbc.sp());
        EXPECT(0xcc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 035A
        gbc.setState(0x3b2d, 0x3fd1, 0x15f0, 0x5845, 0x4c86, 0x4ee9, 0x1, 0x0);
        gbc.writeMem(0x3b2d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3fd1, gbc.sp());
        EXPECT(0x3b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 035B
        gbc.setState(0xa641, 0xc2b6, 0x250, 0x7674, 0xd568, 0x892d, 0x0, 0x1);
        gbc.writeMem(0xa641, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc2b6, gbc.sp());
        EXPECT(0xa643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa641));
        EXPECT(0x17, gbc.readMem(0xa642));
        // CB 17 035C
        gbc.setState(0xcb2e, 0x9437, 0x49c0, 0x1698, 0xf373, 0xa78f, 0x1, 0x0);
        gbc.writeMem(0xcb2e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9437, gbc.sp());
        EXPECT(0xcb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2e));
        EXPECT(0x17, gbc.readMem(0xcb2f));
        // CB 17 035D
        gbc.setState(0x28c0, 0x2cb4, 0x7e30, 0x37d7, 0x930f, 0x6ec0, 0x0, 0x1);
        gbc.writeMem(0x28c0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2cb4, gbc.sp());
        EXPECT(0x28c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 035E
        gbc.setState(0xb936, 0x2271, 0xd940, 0xd059, 0x6fd8, 0x22e7, 0x0, 0x1);
        gbc.writeMem(0xb936, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2271, gbc.sp());
        EXPECT(0xb938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb936));
        EXPECT(0x17, gbc.readMem(0xb937));
        // CB 17 035F
        gbc.setState(0x3f06, 0x8bb1, 0x6760, 0xc0c5, 0x2caf, 0x83a5, 0x0, 0x1);
        gbc.writeMem(0x3f06, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8bb1, gbc.sp());
        EXPECT(0x3f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0360
        gbc.setState(0x8d97, 0x229c, 0xc460, 0xae9b, 0xa9ea, 0xb3ed, 0x1, 0x0);
        gbc.writeMem(0x8d97, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x229c, gbc.sp());
        EXPECT(0x8d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d97));
        EXPECT(0x17, gbc.readMem(0x8d98));
        // CB 17 0361
        gbc.setState(0x6f52, 0x55fb, 0x5fb0, 0xd5bf, 0x9516, 0x87f9, 0x0, 0x0);
        gbc.writeMem(0x6f52, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x55fb, gbc.sp());
        EXPECT(0x6f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0362
        gbc.setState(0xafc1, 0xad6c, 0x5000, 0x8ca8, 0xa18e, 0x58ac, 0x1, 0x1);
        gbc.writeMem(0xafc1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xad6c, gbc.sp());
        EXPECT(0xafc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc1));
        EXPECT(0x17, gbc.readMem(0xafc2));
        // CB 17 0363
        gbc.setState(0x89af, 0x9ed0, 0x88f0, 0x52ed, 0xc767, 0xbee8, 0x0, 0x0);
        gbc.writeMem(0x89af, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9ed0, gbc.sp());
        EXPECT(0x89b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89af));
        EXPECT(0x17, gbc.readMem(0x89b0));
        // CB 17 0364
        gbc.setState(0x6ee7, 0x6c00, 0x9d20, 0x2d71, 0x645f, 0x78b7, 0x0, 0x1);
        gbc.writeMem(0x6ee7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6c00, gbc.sp());
        EXPECT(0x6ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0365
        gbc.setState(0x4521, 0x3286, 0xd7e0, 0x5bd3, 0xc5d4, 0xade2, 0x1, 0x1);
        gbc.writeMem(0x4521, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3286, gbc.sp());
        EXPECT(0x4523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0366
        gbc.setState(0x6fe3, 0xfcc0, 0x3d10, 0x4daa, 0x478a, 0xde86, 0x1, 0x0);
        gbc.writeMem(0x6fe3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfcc0, gbc.sp());
        EXPECT(0x6fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0367
        gbc.setState(0xe98d, 0xa41d, 0xeb70, 0xc546, 0xc01d, 0x41ed, 0x1, 0x1);
        gbc.writeMem(0xe98d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa41d, gbc.sp());
        EXPECT(0xe98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98d));
        EXPECT(0x17, gbc.readMem(0xe98e));
        // CB 17 0368
        gbc.setState(0xe52b, 0x8d78, 0x4840, 0x3a94, 0x193f, 0xcc39, 0x1, 0x0);
        gbc.writeMem(0xe52b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8d78, gbc.sp());
        EXPECT(0xe52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe52b));
        EXPECT(0x17, gbc.readMem(0xe52c));
        // CB 17 0369
        gbc.setState(0xbd7a, 0x1d39, 0xa0b0, 0x96f5, 0x67a3, 0xe582, 0x0, 0x1);
        gbc.writeMem(0xbd7a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1d39, gbc.sp());
        EXPECT(0xbd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd7a));
        EXPECT(0x17, gbc.readMem(0xbd7b));
        // CB 17 036A
        gbc.setState(0x2577, 0x9e49, 0xbbe0, 0xffbd, 0xd5bf, 0x16d1, 0x0, 0x0);
        gbc.writeMem(0x2577, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9e49, gbc.sp());
        EXPECT(0x2579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 036B
        gbc.setState(0x92a, 0x8e17, 0x2410, 0xe4dc, 0x93c, 0xfbb3, 0x1, 0x0);
        gbc.writeMem(0x92a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8e17, gbc.sp());
        EXPECT(0x92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 036C
        gbc.setState(0xd9a4, 0x1b71, 0x86b0, 0x6868, 0x542c, 0xb694, 0x1, 0x1);
        gbc.writeMem(0xd9a4, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1b71, gbc.sp());
        EXPECT(0xd9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a4));
        EXPECT(0x17, gbc.readMem(0xd9a5));
        // CB 17 036D
        gbc.setState(0x932e, 0x881f, 0xff20, 0xa0e0, 0x8088, 0xf359, 0x1, 0x1);
        gbc.writeMem(0x932e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x881f, gbc.sp());
        EXPECT(0x9330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932e));
        EXPECT(0x17, gbc.readMem(0x932f));
        // CB 17 036E
        gbc.setState(0xc657, 0x6e1d, 0x2010, 0x756, 0x4842, 0x9bfd, 0x1, 0x1);
        gbc.writeMem(0xc657, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6e1d, gbc.sp());
        EXPECT(0xc659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc657));
        EXPECT(0x17, gbc.readMem(0xc658));
        // CB 17 036F
        gbc.setState(0xbd9a, 0xef3b, 0xb00, 0x77d8, 0xbf01, 0x1adf, 0x0, 0x0);
        gbc.writeMem(0xbd9a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xef3b, gbc.sp());
        EXPECT(0xbd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9a));
        EXPECT(0x17, gbc.readMem(0xbd9b));
        // CB 17 0370
        gbc.setState(0x2b09, 0xad27, 0x4ec0, 0xe35b, 0x2848, 0x760a, 0x0, 0x1);
        gbc.writeMem(0x2b09, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xad27, gbc.sp());
        EXPECT(0x2b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0371
        gbc.setState(0x427c, 0x1c9a, 0xfc20, 0xd42d, 0xaf4f, 0xbdb9, 0x0, 0x0);
        gbc.writeMem(0x427c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1c9a, gbc.sp());
        EXPECT(0x427e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0372
        gbc.setState(0x9b23, 0x8260, 0x59a0, 0x9dec, 0x8153, 0x2780, 0x0, 0x1);
        gbc.writeMem(0x9b23, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8260, gbc.sp());
        EXPECT(0x9b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b23));
        EXPECT(0x17, gbc.readMem(0x9b24));
        // CB 17 0373
        gbc.setState(0x1a56, 0x3404, 0x9190, 0x6e64, 0x731e, 0x7bea, 0x0, 0x0);
        gbc.writeMem(0x1a56, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3404, gbc.sp());
        EXPECT(0x1a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0374
        gbc.setState(0xc177, 0xa43e, 0x61c0, 0x82c9, 0xa168, 0x7087, 0x0, 0x0);
        gbc.writeMem(0xc177, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa43e, gbc.sp());
        EXPECT(0xc179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc177));
        EXPECT(0x17, gbc.readMem(0xc178));
        // CB 17 0375
        gbc.setState(0x2ebc, 0x5050, 0xe420, 0x9dde, 0x3e12, 0xc7a7, 0x1, 0x1);
        gbc.writeMem(0x2ebc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5050, gbc.sp());
        EXPECT(0x2ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0376
        gbc.setState(0xc115, 0x9934, 0xbfb0, 0xac7d, 0xa7b, 0x755, 0x0, 0x0);
        gbc.writeMem(0xc115, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9934, gbc.sp());
        EXPECT(0xc117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc115));
        EXPECT(0x17, gbc.readMem(0xc116));
        // CB 17 0377
        gbc.setState(0x7504, 0x17cd, 0x9270, 0xebb, 0x30e2, 0xef21, 0x0, 0x0);
        gbc.writeMem(0x7504, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x17cd, gbc.sp());
        EXPECT(0x7506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0378
        gbc.setState(0x83ac, 0xdb37, 0x7c10, 0x67cc, 0x9e36, 0x3d3f, 0x0, 0x0);
        gbc.writeMem(0x83ac, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdb37, gbc.sp());
        EXPECT(0x83ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ac));
        EXPECT(0x17, gbc.readMem(0x83ad));
        // CB 17 0379
        gbc.setState(0x9aa2, 0x3e84, 0x9e80, 0x58d6, 0xb056, 0x70d9, 0x1, 0x0);
        gbc.writeMem(0x9aa2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3e84, gbc.sp());
        EXPECT(0x9aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa2));
        EXPECT(0x17, gbc.readMem(0x9aa3));
        // CB 17 037A
        gbc.setState(0xa718, 0x77e3, 0xa0, 0x65b7, 0xc847, 0xbb46, 0x0, 0x0);
        gbc.writeMem(0xa718, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x77e3, gbc.sp());
        EXPECT(0xa71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa718));
        EXPECT(0x17, gbc.readMem(0xa719));
        // CB 17 037B
        gbc.setState(0x3752, 0xc5c, 0x9820, 0xc854, 0xfbfd, 0xc101, 0x1, 0x1);
        gbc.writeMem(0x3752, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc5c, gbc.sp());
        EXPECT(0x3754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 037C
        gbc.setState(0xcba1, 0x7ce0, 0x3500, 0xa0e8, 0x9c95, 0xbfb2, 0x0, 0x0);
        gbc.writeMem(0xcba1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7ce0, gbc.sp());
        EXPECT(0xcba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba1));
        EXPECT(0x17, gbc.readMem(0xcba2));
        // CB 17 037D
        gbc.setState(0x147e, 0x4074, 0x3940, 0x6c4, 0x5d0a, 0x7b20, 0x1, 0x1);
        gbc.writeMem(0x147e, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4074, gbc.sp());
        EXPECT(0x1480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 037E
        gbc.setState(0x2bc, 0x711f, 0xf680, 0x9088, 0x15db, 0x8727, 0x0, 0x0);
        gbc.writeMem(0x2bc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x711f, gbc.sp());
        EXPECT(0x2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 037F
        gbc.setState(0x6c11, 0x979f, 0x2fb0, 0x2cca, 0xf2ea, 0x9e1d, 0x0, 0x1);
        gbc.writeMem(0x6c11, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x979f, gbc.sp());
        EXPECT(0x6c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0380
        gbc.setState(0x78ac, 0xa842, 0x60c0, 0xc64f, 0x6932, 0xf33e, 0x0, 0x1);
        gbc.writeMem(0x78ac, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa842, gbc.sp());
        EXPECT(0x78ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0381
        gbc.setState(0x5f1c, 0x53c1, 0xd450, 0x66cb, 0xb317, 0x9218, 0x0, 0x1);
        gbc.writeMem(0x5f1c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x53c1, gbc.sp());
        EXPECT(0x5f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0382
        gbc.setState(0x63bc, 0x2931, 0xf740, 0xf93d, 0xc80c, 0x42f7, 0x1, 0x0);
        gbc.writeMem(0x63bc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2931, gbc.sp());
        EXPECT(0x63be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0383
        gbc.setState(0x41f6, 0xd335, 0x1f50, 0x4c3a, 0x81f4, 0x829c, 0x0, 0x0);
        gbc.writeMem(0x41f6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd335, gbc.sp());
        EXPECT(0x41f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0384
        gbc.setState(0xafa9, 0xeb8f, 0x68f0, 0x69fc, 0xa1b, 0x8ac1, 0x0, 0x0);
        gbc.writeMem(0xafa9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeb8f, gbc.sp());
        EXPECT(0xafab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa9));
        EXPECT(0x17, gbc.readMem(0xafaa));
        // CB 17 0385
        gbc.setState(0x3e3c, 0xa5f0, 0x3000, 0xb640, 0x4598, 0x8c5d, 0x1, 0x0);
        gbc.writeMem(0x3e3c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa5f0, gbc.sp());
        EXPECT(0x3e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 0387
        gbc.setState(0x8cf3, 0x56e7, 0xf9f0, 0xe397, 0x219a, 0x80be, 0x0, 0x0);
        gbc.writeMem(0x8cf3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x56e7, gbc.sp());
        EXPECT(0x8cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf3));
        EXPECT(0x17, gbc.readMem(0x8cf4));
        // CB 17 0388
        gbc.setState(0x5810, 0x5e29, 0x2e00, 0xda05, 0xedf1, 0x2a41, 0x1, 0x0);
        gbc.writeMem(0x5810, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5e29, gbc.sp());
        EXPECT(0x5812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 038B
        gbc.setState(0x6591, 0x3c8c, 0xd060, 0x441b, 0x1a9d, 0x61cc, 0x0, 0x1);
        gbc.writeMem(0x6591, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3c8c, gbc.sp());
        EXPECT(0x6593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 038C
        gbc.setState(0x1160, 0x8eb3, 0x58c0, 0x66d6, 0x65fb, 0x1f5a, 0x0, 0x0);
        gbc.writeMem(0x1160, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8eb3, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 038D
        gbc.setState(0x4479, 0xc442, 0xe020, 0x7cb4, 0x395c, 0x386d, 0x0, 0x1);
        gbc.writeMem(0x4479, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc442, gbc.sp());
        EXPECT(0x447b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 038E
        gbc.setState(0xd052, 0x51f0, 0x2390, 0x375b, 0x2f23, 0x7752, 0x1, 0x0);
        gbc.writeMem(0xd052, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x51f0, gbc.sp());
        EXPECT(0xd054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd052));
        EXPECT(0x17, gbc.readMem(0xd053));
        // CB 17 038F
        gbc.setState(0x99ee, 0x11a, 0x2fa0, 0x522, 0x6b1c, 0x9677, 0x0, 0x0);
        gbc.writeMem(0x99ee, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x11a, gbc.sp());
        EXPECT(0x99f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ee));
        EXPECT(0x17, gbc.readMem(0x99ef));
        // CB 17 0390
        gbc.setState(0xe54a, 0x68ba, 0x7960, 0x6239, 0xd047, 0xd5d5, 0x1, 0x0);
        gbc.writeMem(0xe54a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x68ba, gbc.sp());
        EXPECT(0xe54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54a));
        EXPECT(0x17, gbc.readMem(0xe54b));
        // CB 17 0391
        gbc.setState(0x1f05, 0x3c80, 0xe020, 0x8c75, 0xa915, 0x2e8c, 0x1, 0x0);
        gbc.writeMem(0x1f05, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3c80, gbc.sp());
        EXPECT(0x1f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0392
        gbc.setState(0x2bf6, 0x5f06, 0xd710, 0x2a72, 0xe7e2, 0x3994, 0x1, 0x1);
        gbc.writeMem(0x2bf6, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5f06, gbc.sp());
        EXPECT(0x2bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0393
        gbc.setState(0x8783, 0x7dcf, 0xe2a0, 0xc61c, 0xe426, 0xd8c6, 0x0, 0x0);
        gbc.writeMem(0x8783, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7dcf, gbc.sp());
        EXPECT(0x8785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8783));
        EXPECT(0x17, gbc.readMem(0x8784));
        // CB 17 0394
        gbc.setState(0x35c7, 0xd893, 0x9930, 0xd380, 0xe7b7, 0xc971, 0x0, 0x0);
        gbc.writeMem(0x35c7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd893, gbc.sp());
        EXPECT(0x35c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0395
        gbc.setState(0xafad, 0xfea3, 0x1460, 0xbdee, 0x9cbe, 0xa83c, 0x0, 0x1);
        gbc.writeMem(0xafad, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfea3, gbc.sp());
        EXPECT(0xafaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafad));
        EXPECT(0x17, gbc.readMem(0xafae));
        // CB 17 0396
        gbc.setState(0x1f61, 0x1f24, 0xbc60, 0x41f, 0x4dbf, 0x999, 0x1, 0x0);
        gbc.writeMem(0x1f61, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1f24, gbc.sp());
        EXPECT(0x1f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0397
        gbc.setState(0x28db, 0x8803, 0xa070, 0x5e19, 0xcd23, 0xcb6a, 0x0, 0x1);
        gbc.writeMem(0x28db, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8803, gbc.sp());
        EXPECT(0x28dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 0398
        gbc.setState(0xcc85, 0xa44b, 0x6b80, 0x4fd1, 0x72f2, 0x77e1, 0x1, 0x1);
        gbc.writeMem(0xcc85, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa44b, gbc.sp());
        EXPECT(0xcc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc85));
        EXPECT(0x17, gbc.readMem(0xcc86));
        // CB 17 0399
        gbc.setState(0xb6cc, 0x343d, 0xd8a0, 0x3b9, 0x4625, 0x3c40, 0x1, 0x1);
        gbc.writeMem(0xb6cc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x343d, gbc.sp());
        EXPECT(0xb6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cc));
        EXPECT(0x17, gbc.readMem(0xb6cd));
        // CB 17 039A
        gbc.setState(0x7e4c, 0x8492, 0xba50, 0xd790, 0x6ab5, 0x3444, 0x0, 0x0);
        gbc.writeMem(0x7e4c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8492, gbc.sp());
        EXPECT(0x7e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 039B
        gbc.setState(0x3c3c, 0x3100, 0xfd20, 0xfc2b, 0x372b, 0x58a4, 0x0, 0x0);
        gbc.writeMem(0x3c3c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3100, gbc.sp());
        EXPECT(0x3c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 039C
        gbc.setState(0x31af, 0x63c1, 0x9d00, 0x8ba1, 0x820a, 0x3860, 0x1, 0x1);
        gbc.writeMem(0x31af, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x63c1, gbc.sp());
        EXPECT(0x31b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 039D
        gbc.setState(0xac52, 0x5cb2, 0x5eb0, 0xbd09, 0x67b6, 0x3925, 0x0, 0x0);
        gbc.writeMem(0xac52, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5cb2, gbc.sp());
        EXPECT(0xac54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac52));
        EXPECT(0x17, gbc.readMem(0xac53));
        // CB 17 039E
        gbc.setState(0xbe54, 0xaf0f, 0xb8a0, 0xdb0, 0x9e63, 0xf735, 0x0, 0x1);
        gbc.writeMem(0xbe54, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaf0f, gbc.sp());
        EXPECT(0xbe56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe54));
        EXPECT(0x17, gbc.readMem(0xbe55));
        // CB 17 039F
        gbc.setState(0x3e03, 0xde87, 0x50b0, 0x8500, 0x95c8, 0xf1ef, 0x1, 0x0);
        gbc.writeMem(0x3e03, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xde87, gbc.sp());
        EXPECT(0x3e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03A0
        gbc.setState(0x68a, 0xd6de, 0xdb90, 0x1a2e, 0x74a6, 0xb1f2, 0x0, 0x1);
        gbc.writeMem(0x68a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd6de, gbc.sp());
        EXPECT(0x68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03A2
        gbc.setState(0x4101, 0xdb04, 0xb980, 0x2b70, 0xab1d, 0x46e0, 0x0, 0x0);
        gbc.writeMem(0x4101, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdb04, gbc.sp());
        EXPECT(0x4103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03A3
        gbc.setState(0x84d, 0x9a86, 0x5210, 0x1602, 0xe1f0, 0x836f, 0x0, 0x0);
        gbc.writeMem(0x84d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9a86, gbc.sp());
        EXPECT(0x84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03A4
        gbc.setState(0x849, 0xdde4, 0xd100, 0x15a1, 0x2d8, 0xf8ca, 0x1, 0x0);
        gbc.writeMem(0x849, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdde4, gbc.sp());
        EXPECT(0x84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03A5
        gbc.setState(0xe6b9, 0xe9de, 0xc600, 0x1d1f, 0x7529, 0xe505, 0x1, 0x1);
        gbc.writeMem(0xe6b9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe9de, gbc.sp());
        EXPECT(0xe6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b9));
        EXPECT(0x17, gbc.readMem(0xe6ba));
        // CB 17 03A6
        gbc.setState(0xce23, 0xd1b4, 0xec00, 0xdfed, 0x3a23, 0x73e2, 0x1, 0x1);
        gbc.writeMem(0xce23, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd1b4, gbc.sp());
        EXPECT(0xce25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce23));
        EXPECT(0x17, gbc.readMem(0xce24));
        // CB 17 03A7
        gbc.setState(0xeb0, 0xa0f4, 0xdb90, 0xcf04, 0x632, 0x47ff, 0x0, 0x0);
        gbc.writeMem(0xeb0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa0f4, gbc.sp());
        EXPECT(0xeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03A8
        gbc.setState(0x48ba, 0x34b1, 0xd820, 0x8cc5, 0xdcb4, 0xc499, 0x0, 0x0);
        gbc.writeMem(0x48ba, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x34b1, gbc.sp());
        EXPECT(0x48bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03A9
        gbc.setState(0x597c, 0xb8ec, 0x9940, 0xbe61, 0x6236, 0x253f, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb8ec, gbc.sp());
        EXPECT(0x597e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03AA
        gbc.setState(0x8f4a, 0xc894, 0x1580, 0xa9f, 0xad73, 0xa2da, 0x1, 0x0);
        gbc.writeMem(0x8f4a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc894, gbc.sp());
        EXPECT(0x8f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4a));
        EXPECT(0x17, gbc.readMem(0x8f4b));
        // CB 17 03AB
        gbc.setState(0xcb25, 0x73a7, 0xd300, 0x58bf, 0x75af, 0xd0cb, 0x1, 0x1);
        gbc.writeMem(0xcb25, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x73a7, gbc.sp());
        EXPECT(0xcb27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb25));
        EXPECT(0x17, gbc.readMem(0xcb26));
        // CB 17 03AC
        gbc.setState(0x261d, 0x7fb6, 0xb050, 0x34db, 0xb48e, 0x6654, 0x0, 0x1);
        gbc.writeMem(0x261d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7fb6, gbc.sp());
        EXPECT(0x261f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03AD
        gbc.setState(0x2471, 0x6a87, 0x4260, 0xd683, 0x1e0c, 0x3e49, 0x0, 0x1);
        gbc.writeMem(0x2471, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6a87, gbc.sp());
        EXPECT(0x2473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03AE
        gbc.setState(0x2f84, 0xbeaa, 0x2210, 0x897b, 0xf9c5, 0xa16, 0x1, 0x0);
        gbc.writeMem(0x2f84, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbeaa, gbc.sp());
        EXPECT(0x2f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03AF
        gbc.setState(0x3ba, 0x5947, 0x9f10, 0x3770, 0xec68, 0xe4b2, 0x0, 0x1);
        gbc.writeMem(0x3ba, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5947, gbc.sp());
        EXPECT(0x3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03B0
        gbc.setState(0xa553, 0x736f, 0xd400, 0x97f1, 0x24dc, 0xb7c2, 0x1, 0x0);
        gbc.writeMem(0xa553, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x736f, gbc.sp());
        EXPECT(0xa555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa553));
        EXPECT(0x17, gbc.readMem(0xa554));
        // CB 17 03B1
        gbc.setState(0xbace, 0x80af, 0xef20, 0x10d8, 0xab49, 0x2ff9, 0x1, 0x1);
        gbc.writeMem(0xbace, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x80af, gbc.sp());
        EXPECT(0xbad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbace));
        EXPECT(0x17, gbc.readMem(0xbacf));
        // CB 17 03B2
        gbc.setState(0x69dc, 0xafd2, 0xd650, 0xc799, 0x166d, 0x726e, 0x0, 0x1);
        gbc.writeMem(0x69dc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xafd2, gbc.sp());
        EXPECT(0x69de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03B3
        gbc.setState(0xc11f, 0xcc35, 0xa050, 0x90ea, 0x1286, 0x9630, 0x1, 0x1);
        gbc.writeMem(0xc11f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcc35, gbc.sp());
        EXPECT(0xc121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11f));
        EXPECT(0x17, gbc.readMem(0xc120));
        // CB 17 03B4
        gbc.setState(0x7f4d, 0xa3ff, 0xaa00, 0xbe0b, 0x2bae, 0x977c, 0x0, 0x1);
        gbc.writeMem(0x7f4d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa3ff, gbc.sp());
        EXPECT(0x7f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03B5
        gbc.setState(0x609d, 0x2a17, 0x1040, 0x9ca9, 0x96e1, 0x342, 0x1, 0x0);
        gbc.writeMem(0x609d, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2a17, gbc.sp());
        EXPECT(0x609f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03B6
        gbc.setState(0x964, 0xf23c, 0xaa70, 0xd33d, 0x8bcd, 0x6691, 0x1, 0x1);
        gbc.writeMem(0x964, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf23c, gbc.sp());
        EXPECT(0x966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03B7
        gbc.setState(0xd785, 0xee46, 0x2e20, 0xff0f, 0x26cf, 0x7704, 0x1, 0x0);
        gbc.writeMem(0xd785, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xee46, gbc.sp());
        EXPECT(0xd787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd785));
        EXPECT(0x17, gbc.readMem(0xd786));
        // CB 17 03B9
        gbc.setState(0xed88, 0xedaf, 0x8930, 0x19dd, 0x3a2c, 0x8780, 0x0, 0x0);
        gbc.writeMem(0xed88, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xedaf, gbc.sp());
        EXPECT(0xed8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed88));
        EXPECT(0x17, gbc.readMem(0xed89));
        // CB 17 03BA
        gbc.setState(0x96d3, 0xbf35, 0x2f10, 0x62eb, 0xb02, 0x717c, 0x1, 0x0);
        gbc.writeMem(0x96d3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbf35, gbc.sp());
        EXPECT(0x96d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d3));
        EXPECT(0x17, gbc.readMem(0x96d4));
        // CB 17 03BB
        gbc.setState(0xd4d0, 0xc6f9, 0x1420, 0xc6d6, 0xddd5, 0xd992, 0x1, 0x1);
        gbc.writeMem(0xd4d0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc6f9, gbc.sp());
        EXPECT(0xd4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d0));
        EXPECT(0x17, gbc.readMem(0xd4d1));
        // CB 17 03BC
        gbc.setState(0x4cd9, 0x98b0, 0x6410, 0x7843, 0xdadf, 0xd6f6, 0x1, 0x0);
        gbc.writeMem(0x4cd9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x98b0, gbc.sp());
        EXPECT(0x4cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03BD
        gbc.setState(0x666a, 0xc53a, 0x4ff0, 0x2d60, 0x729c, 0x6f3d, 0x0, 0x0);
        gbc.writeMem(0x666a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc53a, gbc.sp());
        EXPECT(0x666c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03BE
        gbc.setState(0xc342, 0x3daf, 0xe920, 0xfd2e, 0x442c, 0x9cda, 0x0, 0x0);
        gbc.writeMem(0xc342, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3daf, gbc.sp());
        EXPECT(0xc344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc342));
        EXPECT(0x17, gbc.readMem(0xc343));
        // CB 17 03BF
        gbc.setState(0x35f1, 0x7f6b, 0x9250, 0xf8cd, 0xf90, 0x6a43, 0x1, 0x1);
        gbc.writeMem(0x35f1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7f6b, gbc.sp());
        EXPECT(0x35f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03C0
        gbc.setState(0x13a1, 0x37df, 0x9b60, 0xc844, 0x69c4, 0xf697, 0x1, 0x0);
        gbc.writeMem(0x13a1, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x37df, gbc.sp());
        EXPECT(0x13a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03C1
        gbc.setState(0xd73f, 0x3932, 0x8bb0, 0x82b1, 0xc601, 0xd470, 0x1, 0x0);
        gbc.writeMem(0xd73f, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3932, gbc.sp());
        EXPECT(0xd741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73f));
        EXPECT(0x17, gbc.readMem(0xd740));
        // CB 17 03C2
        gbc.setState(0xac5a, 0x5026, 0x3b40, 0xe45a, 0x2c10, 0x308, 0x0, 0x0);
        gbc.writeMem(0xac5a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5026, gbc.sp());
        EXPECT(0xac5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5a));
        EXPECT(0x17, gbc.readMem(0xac5b));
        // CB 17 03C3
        gbc.setState(0xda57, 0xde4e, 0xd2e0, 0x95fd, 0x394b, 0x9518, 0x0, 0x0);
        gbc.writeMem(0xda57, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xde4e, gbc.sp());
        EXPECT(0xda59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda57));
        EXPECT(0x17, gbc.readMem(0xda58));
        // CB 17 03C4
        gbc.setState(0xebe2, 0x8180, 0x8230, 0x1ba6, 0x2549, 0x6f1d, 0x1, 0x0);
        gbc.writeMem(0xebe2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8180, gbc.sp());
        EXPECT(0xebe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe2));
        EXPECT(0x17, gbc.readMem(0xebe3));
        // CB 17 03C5
        gbc.setState(0x69f3, 0x81f2, 0x1c00, 0xeedb, 0x3220, 0x964a, 0x1, 0x0);
        gbc.writeMem(0x69f3, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x81f2, gbc.sp());
        EXPECT(0x69f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03C6
        gbc.setState(0x1971, 0x883c, 0xddf0, 0x7f37, 0x628d, 0x76cb, 0x0, 0x1);
        gbc.writeMem(0x1971, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x883c, gbc.sp());
        EXPECT(0x1973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03C7
        gbc.setState(0x9205, 0x90e6, 0xdbd0, 0xe26e, 0xfaca, 0x8a07, 0x1, 0x1);
        gbc.writeMem(0x9205, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x90e6, gbc.sp());
        EXPECT(0x9207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9205));
        EXPECT(0x17, gbc.readMem(0x9206));
        // CB 17 03C8
        gbc.setState(0x2740, 0x553f, 0x7860, 0x35a8, 0xd766, 0x7efd, 0x1, 0x1);
        gbc.writeMem(0x2740, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x553f, gbc.sp());
        EXPECT(0x2742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03C9
        gbc.setState(0x8a86, 0xcea6, 0x1130, 0x6c6f, 0xda4c, 0xc154, 0x1, 0x0);
        gbc.writeMem(0x8a86, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcea6, gbc.sp());
        EXPECT(0x8a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a86));
        EXPECT(0x17, gbc.readMem(0x8a87));
        // CB 17 03CA
        gbc.setState(0x2761, 0x538d, 0x6b80, 0x8349, 0xbfd4, 0x6bda, 0x1, 0x0);
        gbc.writeMem(0x2761, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x538d, gbc.sp());
        EXPECT(0x2763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03CB
        gbc.setState(0xcba0, 0xbb6a, 0x6360, 0x465e, 0x7372, 0x38ba, 0x0, 0x1);
        gbc.writeMem(0xcba0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbb6a, gbc.sp());
        EXPECT(0xcba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba0));
        EXPECT(0x17, gbc.readMem(0xcba1));
        // CB 17 03CC
        gbc.setState(0xd60c, 0x71ab, 0x3430, 0x1188, 0x9d0a, 0x64e6, 0x1, 0x1);
        gbc.writeMem(0xd60c, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x71ab, gbc.sp());
        EXPECT(0xd60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60c));
        EXPECT(0x17, gbc.readMem(0xd60d));
        // CB 17 03CD
        gbc.setState(0xd0c9, 0x7790, 0x9fc0, 0x2f31, 0x969f, 0xa5b5, 0x0, 0x0);
        gbc.writeMem(0xd0c9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7790, gbc.sp());
        EXPECT(0xd0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c9));
        EXPECT(0x17, gbc.readMem(0xd0ca));
        // CB 17 03CE
        gbc.setState(0xd44, 0xb68c, 0xc8b0, 0x9473, 0x4acb, 0x9648, 0x1, 0x1);
        gbc.writeMem(0xd44, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb68c, gbc.sp());
        EXPECT(0xd46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03CF
        gbc.setState(0x3028, 0x7f18, 0xc2d0, 0xc598, 0xc015, 0xab3e, 0x1, 0x0);
        gbc.writeMem(0x3028, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7f18, gbc.sp());
        EXPECT(0x302a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03D0
        gbc.setState(0x9cf5, 0x388a, 0xbc00, 0x2979, 0x2283, 0xd679, 0x0, 0x0);
        gbc.writeMem(0x9cf5, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x388a, gbc.sp());
        EXPECT(0x9cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf5));
        EXPECT(0x17, gbc.readMem(0x9cf6));
        // CB 17 03D1
        gbc.setState(0x6ac9, 0x1ec7, 0xcd0, 0x7dc1, 0xdd4e, 0x844, 0x1, 0x0);
        gbc.writeMem(0x6ac9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1ec7, gbc.sp());
        EXPECT(0x6acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03D2
        gbc.setState(0x9078, 0x7ef5, 0xda50, 0xed88, 0x347a, 0xe0a4, 0x1, 0x1);
        gbc.writeMem(0x9078, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7ef5, gbc.sp());
        EXPECT(0x907a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9078));
        EXPECT(0x17, gbc.readMem(0x9079));
        // CB 17 03D3
        gbc.setState(0xadf0, 0xd82, 0xc90, 0xc1ff, 0xf27f, 0x7e3a, 0x0, 0x1);
        gbc.writeMem(0xadf0, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0xadf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf0));
        EXPECT(0x17, gbc.readMem(0xadf1));
        // CB 17 03D4
        gbc.setState(0xb0af, 0xdfd0, 0x54b0, 0x9e1d, 0x98e, 0x6cde, 0x1, 0x1);
        gbc.writeMem(0xb0af, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdfd0, gbc.sp());
        EXPECT(0xb0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0af));
        EXPECT(0x17, gbc.readMem(0xb0b0));
        // CB 17 03D5
        gbc.setState(0x871b, 0x860e, 0xbb60, 0xae7f, 0xe77b, 0x71e6, 0x0, 0x0);
        gbc.writeMem(0x871b, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x860e, gbc.sp());
        EXPECT(0x871d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871b));
        EXPECT(0x17, gbc.readMem(0x871c));
        // CB 17 03D6
        gbc.setState(0x93ba, 0x649, 0xe9f0, 0xf1d6, 0x73a8, 0x1c82, 0x0, 0x1);
        gbc.writeMem(0x93ba, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x649, gbc.sp());
        EXPECT(0x93bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ba));
        EXPECT(0x17, gbc.readMem(0x93bb));
        // CB 17 03D7
        gbc.setState(0xae27, 0xd831, 0x24e0, 0x480a, 0x289e, 0xa39f, 0x1, 0x0);
        gbc.writeMem(0xae27, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd831, gbc.sp());
        EXPECT(0xae29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae27));
        EXPECT(0x17, gbc.readMem(0xae28));
        // CB 17 03D8
        gbc.setState(0x6f30, 0x94c8, 0x2a40, 0x6e93, 0x8800, 0x174e, 0x0, 0x0);
        gbc.writeMem(0x6f30, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x94c8, gbc.sp());
        EXPECT(0x6f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03D9
        gbc.setState(0x7755, 0x2c50, 0xec20, 0x3be2, 0x30dd, 0x249a, 0x0, 0x0);
        gbc.writeMem(0x7755, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2c50, gbc.sp());
        EXPECT(0x7757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03DA
        gbc.setState(0xc02, 0x3d2f, 0x74c0, 0xdff3, 0x957d, 0x4ce0, 0x1, 0x1);
        gbc.writeMem(0xc02, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3d2f, gbc.sp());
        EXPECT(0xc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03DB
        gbc.setState(0x61c9, 0x8c85, 0xa1c0, 0xfbc7, 0x1c63, 0x9edf, 0x1, 0x1);
        gbc.writeMem(0x61c9, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8c85, gbc.sp());
        EXPECT(0x61cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03DC
        gbc.setState(0x1954, 0x4d1f, 0x4e30, 0x19e0, 0x2764, 0x8c36, 0x0, 0x0);
        gbc.writeMem(0x1954, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4d1f, gbc.sp());
        EXPECT(0x1956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03DD
        gbc.setState(0x9812, 0x9ab0, 0x7f40, 0x853c, 0x7949, 0xca28, 0x1, 0x1);
        gbc.writeMem(0x9812, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9ab0, gbc.sp());
        EXPECT(0x9814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9812));
        EXPECT(0x17, gbc.readMem(0x9813));
        // CB 17 03DE
        gbc.setState(0x5657, 0xafe7, 0xe600, 0xc54, 0x8e1f, 0x2b49, 0x0, 0x1);
        gbc.writeMem(0x5657, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xafe7, gbc.sp());
        EXPECT(0x5659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03DF
        gbc.setState(0x6d00, 0x1361, 0xcd40, 0x2e17, 0x4f36, 0x3fb3, 0x0, 0x0);
        gbc.writeMem(0x6d00, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1361, gbc.sp());
        EXPECT(0x6d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03E0
        gbc.setState(0x42cc, 0x4ff4, 0xe330, 0x241f, 0xa205, 0x2cda, 0x1, 0x1);
        gbc.writeMem(0x42cc, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4ff4, gbc.sp());
        EXPECT(0x42ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03E1
        gbc.setState(0xc778, 0x7fdf, 0x8c70, 0x4494, 0xe5dd, 0xf36f, 0x0, 0x0);
        gbc.writeMem(0xc778, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7fdf, gbc.sp());
        EXPECT(0xc77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc778));
        EXPECT(0x17, gbc.readMem(0xc779));
        // CB 17 03E2
        gbc.setState(0xa0ae, 0xc340, 0xfe80, 0x7552, 0xbc8f, 0x1f1, 0x0, 0x0);
        gbc.writeMem(0xa0ae, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc340, gbc.sp());
        EXPECT(0xa0b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ae));
        EXPECT(0x17, gbc.readMem(0xa0af));
        // CB 17 03E3
        gbc.setState(0x548a, 0x1bbd, 0x4990, 0x2319, 0x6cfe, 0xbac4, 0x0, 0x0);
        gbc.writeMem(0x548a, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1bbd, gbc.sp());
        EXPECT(0x548c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 17 03E6
        gbc.setState(0x16e7, 0xae5f, 0x9a60, 0xdcb3, 0xc0f1, 0xe131, 0x0, 0x1);
        gbc.writeMem(0x16e7, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xae5f, gbc.sp());
        EXPECT(0x16e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 17 03E7
        gbc.setState(0x5eb2, 0x5284, 0x2d00, 0x7348, 0xf140, 0xf27e, 0x1, 0x0);
        gbc.writeMem(0x5eb2, { 0xcb, 0x17 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5284, gbc.sp());
        EXPECT(0x5eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
