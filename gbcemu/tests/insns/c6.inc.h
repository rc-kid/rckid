    TEST(gbcemu, opcode_c6) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // C6 0000
        gbc.setState(0xe9c6, 0xd5ee, 0xc5d0, 0x42df, 0x83be, 0xbb41, 0x0, 0x0);
        gbc.writeMem(0xe9c6, { 0xc6, 0xcf });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd5ee, gbc.sp());
        EXPECT(0xe9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe9c6));
        EXPECT(0xcf, gbc.readMem(0xe9c7));
        // C6 0001
        gbc.setState(0xd991, 0x42a5, 0x2da0, 0xb7f6, 0x1eb0, 0xc9da, 0x0, 0x1);
        gbc.writeMem(0xd991, { 0xc6, 0x62 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x42a5, gbc.sp());
        EXPECT(0xd993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd991));
        EXPECT(0x62, gbc.readMem(0xd992));
        // C6 0002
        gbc.setState(0xa117, 0xe87c, 0x7140, 0x1574, 0xbe29, 0xfd9b, 0x0, 0x1);
        gbc.writeMem(0xa117, { 0xc6, 0x3e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe87c, gbc.sp());
        EXPECT(0xa119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa117));
        EXPECT(0x3e, gbc.readMem(0xa118));
        // C6 0003
        gbc.setState(0xbbce, 0xa478, 0xd220, 0x99bf, 0x7aef, 0x106c, 0x0, 0x0);
        gbc.writeMem(0xbbce, { 0xc6, 0xa9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa478, gbc.sp());
        EXPECT(0xbbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbbce));
        EXPECT(0xa9, gbc.readMem(0xbbcf));
        // C6 0004
        gbc.setState(0x217b, 0xbe9b, 0x8ab0, 0xd75a, 0x952d, 0x8247, 0x1, 0x0);
        gbc.writeMem(0x217b, { 0xc6, 0x6d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbe9b, gbc.sp());
        EXPECT(0x217d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0005
        gbc.setState(0xdbb, 0xcc9a, 0xcff0, 0x8547, 0x6832, 0x74f, 0x0, 0x0);
        gbc.writeMem(0xdbb, { 0xc6, 0x75 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcc9a, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0006
        gbc.setState(0x6289, 0x93c7, 0x8de0, 0xbf7e, 0x4d, 0xedc4, 0x1, 0x1);
        gbc.writeMem(0x6289, { 0xc6, 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x93c7, gbc.sp());
        EXPECT(0x628b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0007
        gbc.setState(0x9cd, 0xabc1, 0x4000, 0xab01, 0x60bf, 0x3d40, 0x0, 0x0);
        gbc.writeMem(0x9cd, { 0xc6, 0x3d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xabc1, gbc.sp());
        EXPECT(0x9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0008
        gbc.setState(0xc379, 0x709f, 0xe2f0, 0x69c0, 0x8162, 0xf301, 0x1, 0x1);
        gbc.writeMem(0xc379, { 0xc6, 0xf7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x709f, gbc.sp());
        EXPECT(0xc37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc379));
        EXPECT(0xf7, gbc.readMem(0xc37a));
        // C6 0009
        gbc.setState(0x10f2, 0x115c, 0x6020, 0x9f03, 0x1f79, 0x3419, 0x1, 0x0);
        gbc.writeMem(0x10f2, { 0xc6, 0xfc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x115c, gbc.sp());
        EXPECT(0x10f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 000A
        gbc.setState(0x2c25, 0x3994, 0x4c70, 0x6e93, 0x20b, 0x5d67, 0x0, 0x1);
        gbc.writeMem(0x2c25, { 0xc6, 0x5a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3994, gbc.sp());
        EXPECT(0x2c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 000B
        gbc.setState(0xb13c, 0x8fe0, 0xbf50, 0x6846, 0xf36f, 0x37e7, 0x0, 0x1);
        gbc.writeMem(0xb13c, { 0xc6, 0x41 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8fe0, gbc.sp());
        EXPECT(0xb13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb13c));
        EXPECT(0x41, gbc.readMem(0xb13d));
        // C6 000C
        gbc.setState(0x5139, 0xd03, 0x1a60, 0x2cd3, 0x949a, 0x1b99, 0x0, 0x1);
        gbc.writeMem(0x5139, { 0xc6, 0x83 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd03, gbc.sp());
        EXPECT(0x513b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 000D
        gbc.setState(0x8254, 0x6727, 0x4240, 0x7ff5, 0x8ee1, 0xfbe7, 0x1, 0x1);
        gbc.writeMem(0x8254, { 0xc6, 0x2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6727, gbc.sp());
        EXPECT(0x8256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8254));
        EXPECT(0x2, gbc.readMem(0x8255));
        // C6 000E
        gbc.setState(0xd6e6, 0x97e5, 0x2930, 0xb7f, 0x9831, 0xad12, 0x1, 0x1);
        gbc.writeMem(0xd6e6, { 0xc6, 0x98 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x97e5, gbc.sp());
        EXPECT(0xd6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd6e6));
        EXPECT(0x98, gbc.readMem(0xd6e7));
        // C6 000F
        gbc.setState(0x7967, 0x1a3d, 0xc270, 0xd1a8, 0x71db, 0x4927, 0x1, 0x0);
        gbc.writeMem(0x7967, { 0xc6, 0x1a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1a3d, gbc.sp());
        EXPECT(0x7969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0010
        gbc.setState(0xc40f, 0xcdf3, 0x5230, 0x77cf, 0x8062, 0xc848, 0x1, 0x0);
        gbc.writeMem(0xc40f, { 0xc6, 0xf0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcdf3, gbc.sp());
        EXPECT(0xc411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc40f));
        EXPECT(0xf0, gbc.readMem(0xc410));
        // C6 0011
        gbc.setState(0xad4c, 0x8d47, 0x13e0, 0x75c, 0x933d, 0xa311, 0x1, 0x1);
        gbc.writeMem(0xad4c, { 0xc6, 0x8f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8d47, gbc.sp());
        EXPECT(0xad4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xad4c));
        EXPECT(0x8f, gbc.readMem(0xad4d));
        // C6 0012
        gbc.setState(0x7f25, 0x5343, 0x4180, 0xfc29, 0x873f, 0x2cbb, 0x1, 0x0);
        gbc.writeMem(0x7f25, { 0xc6, 0xde });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5343, gbc.sp());
        EXPECT(0x7f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0013
        gbc.setState(0xa3b4, 0x3176, 0x7c30, 0xa5f5, 0xbc62, 0x468f, 0x0, 0x1);
        gbc.writeMem(0xa3b4, { 0xc6, 0xb8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3176, gbc.sp());
        EXPECT(0xa3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa3b4));
        EXPECT(0xb8, gbc.readMem(0xa3b5));
        // C6 0015
        gbc.setState(0x406e, 0xb80f, 0x6c0, 0xf3f5, 0x8d3d, 0xd6e0, 0x0, 0x1);
        gbc.writeMem(0x406e, { 0xc6, 0x69 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb80f, gbc.sp());
        EXPECT(0x4070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0016
        gbc.setState(0x10be, 0x7043, 0x8530, 0xbb7a, 0xbf37, 0x35b1, 0x1, 0x1);
        gbc.writeMem(0x10be, { 0xc6, 0x72 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7043, gbc.sp());
        EXPECT(0x10c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0017
        gbc.setState(0x39c5, 0x22a4, 0x4650, 0x12aa, 0x64e1, 0x2546, 0x1, 0x0);
        gbc.writeMem(0x39c5, { 0xc6, 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x22a4, gbc.sp());
        EXPECT(0x39c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0018
        gbc.setState(0x5fa9, 0x6b50, 0xd20, 0xb584, 0x7b47, 0xec43, 0x1, 0x1);
        gbc.writeMem(0x5fa9, { 0xc6, 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6b50, gbc.sp());
        EXPECT(0x5fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0019
        gbc.setState(0x3104, 0x2812, 0xb540, 0x4d04, 0x2597, 0xe860, 0x1, 0x1);
        gbc.writeMem(0x3104, { 0xc6, 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2812, gbc.sp());
        EXPECT(0x3106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 001A
        gbc.setState(0x600, 0x4ba1, 0x1a40, 0x9af9, 0xda78, 0x671f, 0x0, 0x0);
        gbc.writeMem(0x600, { 0xc6, 0x1c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4ba1, gbc.sp());
        EXPECT(0x602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 001B
        gbc.setState(0x359b, 0xfb87, 0x8630, 0x6432, 0xfb8e, 0xc599, 0x0, 0x0);
        gbc.writeMem(0x359b, { 0xc6, 0x3c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfb87, gbc.sp());
        EXPECT(0x359d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 001C
        gbc.setState(0x19ad, 0x668f, 0xe980, 0x47fb, 0xf38e, 0x2fb9, 0x0, 0x1);
        gbc.writeMem(0x19ad, { 0xc6, 0xe1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x668f, gbc.sp());
        EXPECT(0x19af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 001D
        gbc.setState(0x87c6, 0xb173, 0x7b60, 0x5d8, 0x9b3e, 0x8f6d, 0x1, 0x1);
        gbc.writeMem(0x87c6, { 0xc6, 0x4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb173, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x87c6));
        EXPECT(0x4, gbc.readMem(0x87c7));
        // C6 001E
        gbc.setState(0x5c17, 0x7870, 0xb9b0, 0x1f30, 0x15b1, 0x4fa9, 0x1, 0x0);
        gbc.writeMem(0x5c17, { 0xc6, 0xa8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7870, gbc.sp());
        EXPECT(0x5c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 001F
        gbc.setState(0xc2c5, 0x4759, 0x9a20, 0x558f, 0x9015, 0x956e, 0x0, 0x0);
        gbc.writeMem(0xc2c5, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4759, gbc.sp());
        EXPECT(0xc2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc2c5));
        EXPECT(0x84, gbc.readMem(0xc2c6));
        // C6 0020
        gbc.setState(0x726f, 0x5391, 0x1180, 0xfb68, 0x51e4, 0xb4c1, 0x0, 0x1);
        gbc.writeMem(0x726f, { 0xc6, 0x91 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5391, gbc.sp());
        EXPECT(0x7271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0021
        gbc.setState(0x1cec, 0xf255, 0x5c10, 0x10b5, 0x5130, 0xcdaa, 0x0, 0x1);
        gbc.writeMem(0x1cec, { 0xc6, 0xbe });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf255, gbc.sp());
        EXPECT(0x1cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0022
        gbc.setState(0x50c4, 0xd6fa, 0xd7f0, 0xbac, 0xbfaa, 0x48c7, 0x1, 0x0);
        gbc.writeMem(0x50c4, { 0xc6, 0x5a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd6fa, gbc.sp());
        EXPECT(0x50c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0023
        gbc.setState(0x26b4, 0x2031, 0x14b0, 0x38f4, 0xa47f, 0xec6, 0x0, 0x0);
        gbc.writeMem(0x26b4, { 0xc6, 0xf9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2031, gbc.sp());
        EXPECT(0x26b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0024
        gbc.setState(0xd905, 0xa4c5, 0x6430, 0x5ac5, 0x521b, 0xcff1, 0x1, 0x1);
        gbc.writeMem(0xd905, { 0xc6, 0xcc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa4c5, gbc.sp());
        EXPECT(0xd907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd905));
        EXPECT(0xcc, gbc.readMem(0xd906));
        // C6 0025
        gbc.setState(0xb9e5, 0xc603, 0x81d0, 0xd0f0, 0xf189, 0x957a, 0x0, 0x1);
        gbc.writeMem(0xb9e5, { 0xc6, 0x19 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc603, gbc.sp());
        EXPECT(0xb9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb9e5));
        EXPECT(0x19, gbc.readMem(0xb9e6));
        // C6 0026
        gbc.setState(0x65bc, 0x1dcd, 0xd4b0, 0x7623, 0x3a53, 0xe867, 0x1, 0x1);
        gbc.writeMem(0x65bc, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1dcd, gbc.sp());
        EXPECT(0x65be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0027
        gbc.setState(0xb2f0, 0x4af2, 0x4b90, 0x9f0a, 0x33f1, 0xf603, 0x1, 0x1);
        gbc.writeMem(0xb2f0, { 0xc6, 0x18 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4af2, gbc.sp());
        EXPECT(0xb2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb2f0));
        EXPECT(0x18, gbc.readMem(0xb2f1));
        // C6 0028
        gbc.setState(0x1196, 0xd2ca, 0x390, 0x12d7, 0xe0aa, 0xa6ad, 0x1, 0x0);
        gbc.writeMem(0x1196, { 0xc6, 0x19 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd2ca, gbc.sp());
        EXPECT(0x1198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0029
        gbc.setState(0x390f, 0xbf1b, 0xcbd0, 0x2c5f, 0x46ff, 0x35b8, 0x0, 0x1);
        gbc.writeMem(0x390f, { 0xc6, 0x1b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbf1b, gbc.sp());
        EXPECT(0x3911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 002B
        gbc.setState(0x994, 0x9337, 0x9440, 0x3be5, 0x52fe, 0x8672, 0x1, 0x1);
        gbc.writeMem(0x994, { 0xc6, 0x57 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9337, gbc.sp());
        EXPECT(0x996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 002C
        gbc.setState(0x45c5, 0xec58, 0x10f0, 0xe23d, 0x79ac, 0x6c55, 0x0, 0x1);
        gbc.writeMem(0x45c5, { 0xc6, 0xb8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xec58, gbc.sp());
        EXPECT(0x45c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 002D
        gbc.setState(0xe544, 0x76a1, 0xf230, 0x8820, 0x1379, 0x5bd0, 0x1, 0x1);
        gbc.writeMem(0xe544, { 0xc6, 0xc4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x76a1, gbc.sp());
        EXPECT(0xe546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe544));
        EXPECT(0xc4, gbc.readMem(0xe545));
        // C6 002E
        gbc.setState(0xd8fd, 0xfc07, 0xf970, 0x718e, 0xbed3, 0xc155, 0x0, 0x0);
        gbc.writeMem(0xd8fd, { 0xc6, 0x8b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfc07, gbc.sp());
        EXPECT(0xd8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd8fd));
        EXPECT(0x8b, gbc.readMem(0xd8fe));
        // C6 002F
        gbc.setState(0xb015, 0xd808, 0xc7c0, 0xe9a0, 0xd4bf, 0x7517, 0x0, 0x0);
        gbc.writeMem(0xb015, { 0xc6, 0xe0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd808, gbc.sp());
        EXPECT(0xb017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb015));
        EXPECT(0xe0, gbc.readMem(0xb016));
        // C6 0030
        gbc.setState(0x7333, 0x3b59, 0xce80, 0x6896, 0x85ae, 0x4a2f, 0x1, 0x0);
        gbc.writeMem(0x7333, { 0xc6, 0x9d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3b59, gbc.sp());
        EXPECT(0x7335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0031
        gbc.setState(0xc772, 0x497f, 0x3960, 0x4342, 0xaae7, 0x45a9, 0x0, 0x1);
        gbc.writeMem(0xc772, { 0xc6, 0x95 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x497f, gbc.sp());
        EXPECT(0xc774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc772));
        EXPECT(0x95, gbc.readMem(0xc773));
        // C6 0032
        gbc.setState(0x86ab, 0x685, 0x6550, 0xcc29, 0xd148, 0x9b34, 0x0, 0x1);
        gbc.writeMem(0x86ab, { 0xc6, 0x1f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x685, gbc.sp());
        EXPECT(0x86ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x86ab));
        EXPECT(0x1f, gbc.readMem(0x86ac));
        // C6 0033
        gbc.setState(0x3329, 0xf0c0, 0x45a0, 0x71ca, 0x7b7e, 0xb017, 0x0, 0x0);
        gbc.writeMem(0x3329, { 0xc6, 0xde });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf0c0, gbc.sp());
        EXPECT(0x332b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0034
        gbc.setState(0x8245, 0x2db6, 0x3a0, 0x72b, 0xb2fa, 0xda3e, 0x0, 0x0);
        gbc.writeMem(0x8245, { 0xc6, 0x11 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2db6, gbc.sp());
        EXPECT(0x8247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8245));
        EXPECT(0x11, gbc.readMem(0x8246));
        // C6 0035
        gbc.setState(0x7423, 0x4447, 0xa9a0, 0x1c98, 0x8561, 0x8c6, 0x1, 0x1);
        gbc.writeMem(0x7423, { 0xc6, 0xc3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4447, gbc.sp());
        EXPECT(0x7425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0037
        gbc.setState(0xef10, 0x3149, 0xd870, 0x57a3, 0x80a, 0xe128, 0x0, 0x1);
        gbc.writeMem(0xef10, { 0xc6, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3149, gbc.sp());
        EXPECT(0xef12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xef10));
        EXPECT(0x2f, gbc.readMem(0xef11));
        // C6 0038
        gbc.setState(0xc6a3, 0xca96, 0x1b40, 0x7c66, 0xee90, 0xc72a, 0x1, 0x1);
        gbc.writeMem(0xc6a3, { 0xc6, 0x17 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xca96, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc6a3));
        EXPECT(0x17, gbc.readMem(0xc6a4));
        // C6 0039
        gbc.setState(0xb4e0, 0x8e81, 0x5d50, 0xa739, 0xd6f2, 0x82b9, 0x1, 0x1);
        gbc.writeMem(0xb4e0, { 0xc6, 0x32 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8e81, gbc.sp());
        EXPECT(0xb4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb4e0));
        EXPECT(0x32, gbc.readMem(0xb4e1));
        // C6 003B
        gbc.setState(0xb878, 0x6961, 0xcd40, 0x1c7b, 0xefe8, 0x2112, 0x1, 0x1);
        gbc.writeMem(0xb878, { 0xc6, 0x71 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6961, gbc.sp());
        EXPECT(0xb87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb878));
        EXPECT(0x71, gbc.readMem(0xb879));
        // C6 003C
        gbc.setState(0xce44, 0x3a7b, 0x7ad0, 0xc273, 0x81ff, 0x63d4, 0x0, 0x1);
        gbc.writeMem(0xce44, { 0xc6, 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3a7b, gbc.sp());
        EXPECT(0xce46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xce44));
        EXPECT(0x9b, gbc.readMem(0xce45));
        // C6 003D
        gbc.setState(0xa8c2, 0x9c21, 0xbce0, 0x2c59, 0x7354, 0xa883, 0x1, 0x1);
        gbc.writeMem(0xa8c2, { 0xc6, 0xe8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9c21, gbc.sp());
        EXPECT(0xa8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa8c2));
        EXPECT(0xe8, gbc.readMem(0xa8c3));
        // C6 003F
        gbc.setState(0x529c, 0x53e0, 0xeb50, 0x8764, 0x7ce8, 0xd77, 0x1, 0x1);
        gbc.writeMem(0x529c, { 0xc6, 0x15 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x53e0, gbc.sp());
        EXPECT(0x529e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0040
        gbc.setState(0xbec7, 0x4591, 0xd840, 0x4e9e, 0x1758, 0x4065, 0x1, 0x1);
        gbc.writeMem(0xbec7, { 0xc6, 0x6e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0xbec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbec7));
        EXPECT(0x6e, gbc.readMem(0xbec8));
        // C6 0041
        gbc.setState(0x4dc1, 0x3ef8, 0xab90, 0x9c09, 0x4b36, 0xe0b2, 0x0, 0x1);
        gbc.writeMem(0x4dc1, { 0xc6, 0x20 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3ef8, gbc.sp());
        EXPECT(0x4dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0042
        gbc.setState(0xb4dc, 0x20fd, 0x1a40, 0xc2a8, 0x3557, 0x1c51, 0x1, 0x0);
        gbc.writeMem(0xb4dc, { 0xc6, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x20fd, gbc.sp());
        EXPECT(0xb4de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb4dc));
        EXPECT(0x0, gbc.readMem(0xb4dd));
        // C6 0043
        gbc.setState(0x2103, 0x102, 0xc3d0, 0x9958, 0x61d, 0x9073, 0x0, 0x0);
        gbc.writeMem(0x2103, { 0xc6, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x102, gbc.sp());
        EXPECT(0x2105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0044
        gbc.setState(0x10be, 0x7cdf, 0x380, 0x3403, 0xab4c, 0xe9a1, 0x0, 0x0);
        gbc.writeMem(0x10be, { 0xc6, 0x72 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7cdf, gbc.sp());
        EXPECT(0x10c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0045
        gbc.setState(0x6f08, 0x710, 0x7650, 0x6603, 0x15b2, 0xd843, 0x1, 0x1);
        gbc.writeMem(0x6f08, { 0xc6, 0xf6 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x710, gbc.sp());
        EXPECT(0x6f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0046
        gbc.setState(0xee65, 0x5150, 0x7f70, 0x9b99, 0x5780, 0x7dbf, 0x1, 0x0);
        gbc.writeMem(0xee65, { 0xc6, 0x57 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5150, gbc.sp());
        EXPECT(0xee67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xee65));
        EXPECT(0x57, gbc.readMem(0xee66));
        // C6 0047
        gbc.setState(0x4683, 0xdf37, 0x4f90, 0x334c, 0x8492, 0xbcb2, 0x0, 0x1);
        gbc.writeMem(0x4683, { 0xc6, 0xc0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdf37, gbc.sp());
        EXPECT(0x4685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0048
        gbc.setState(0x4157, 0xd727, 0xc3c0, 0x7203, 0xeb82, 0x836b, 0x1, 0x1);
        gbc.writeMem(0x4157, { 0xc6, 0x40 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd727, gbc.sp());
        EXPECT(0x4159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0049
        gbc.setState(0x804d, 0xaabc, 0x6da0, 0xce82, 0xe02f, 0xbaa4, 0x1, 0x1);
        gbc.writeMem(0x804d, { 0xc6, 0xc4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaabc, gbc.sp());
        EXPECT(0x804f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x804d));
        EXPECT(0xc4, gbc.readMem(0x804e));
        // C6 004A
        gbc.setState(0xb29d, 0x3c65, 0x8600, 0x9e5, 0xe302, 0xf18, 0x0, 0x1);
        gbc.writeMem(0xb29d, { 0xc6, 0xc2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3c65, gbc.sp());
        EXPECT(0xb29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb29d));
        EXPECT(0xc2, gbc.readMem(0xb29e));
        // C6 004B
        gbc.setState(0x9284, 0x52a8, 0x4f30, 0xfd09, 0xdcb0, 0xcfa0, 0x0, 0x0);
        gbc.writeMem(0x9284, { 0xc6, 0xd0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0x9286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9284));
        EXPECT(0xd0, gbc.readMem(0x9285));
        // C6 004C
        gbc.setState(0x222d, 0xf80f, 0x6f10, 0x357d, 0xfc4c, 0x1194, 0x0, 0x1);
        gbc.writeMem(0x222d, { 0xc6, 0x8b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf80f, gbc.sp());
        EXPECT(0x222f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 004D
        gbc.setState(0xc8b1, 0xd8e8, 0x5950, 0x370e, 0x3f2b, 0xbd69, 0x1, 0x1);
        gbc.writeMem(0xc8b1, { 0xc6, 0xb2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd8e8, gbc.sp());
        EXPECT(0xc8b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc8b1));
        EXPECT(0xb2, gbc.readMem(0xc8b2));
        // C6 004E
        gbc.setState(0x65d4, 0x1841, 0xbce0, 0xc17a, 0x5588, 0x4aa0, 0x0, 0x1);
        gbc.writeMem(0x65d4, { 0xc6, 0x39 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1841, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 004F
        gbc.setState(0xe1bd, 0x8fac, 0x8fc0, 0x2937, 0x94bf, 0xec52, 0x0, 0x1);
        gbc.writeMem(0xe1bd, { 0xc6, 0x44 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8fac, gbc.sp());
        EXPECT(0xe1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe1bd));
        EXPECT(0x44, gbc.readMem(0xe1be));
        // C6 0050
        gbc.setState(0x141a, 0xfe1f, 0xace0, 0xbdcc, 0xc0df, 0xa99d, 0x1, 0x1);
        gbc.writeMem(0x141a, { 0xc6, 0xc4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfe1f, gbc.sp());
        EXPECT(0x141c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0051
        gbc.setState(0x7495, 0xaec9, 0x2bc0, 0x51e3, 0xb283, 0xa601, 0x1, 0x1);
        gbc.writeMem(0x7495, { 0xc6, 0x71 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaec9, gbc.sp());
        EXPECT(0x7497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0052
        gbc.setState(0x68ca, 0xcf08, 0xa3c0, 0xc8c0, 0x7252, 0xa703, 0x0, 0x1);
        gbc.writeMem(0x68ca, { 0xc6, 0x46 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcf08, gbc.sp());
        EXPECT(0x68cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0053
        gbc.setState(0xd9bc, 0x4d47, 0x3700, 0x5054, 0xceb1, 0x74cf, 0x0, 0x1);
        gbc.writeMem(0xd9bc, { 0xc6, 0xb7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4d47, gbc.sp());
        EXPECT(0xd9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd9bc));
        EXPECT(0xb7, gbc.readMem(0xd9bd));
        // C6 0054
        gbc.setState(0xdffc, 0x2bea, 0xbf0, 0x5329, 0xe62, 0x66b1, 0x0, 0x1);
        gbc.writeMem(0xdffc, { 0xc6, 0x10 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2bea, gbc.sp());
        EXPECT(0xdffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdffc));
        EXPECT(0x10, gbc.readMem(0xdffd));
        // C6 0055
        gbc.setState(0x5a72, 0x25f8, 0x7ec0, 0xaba0, 0xc21b, 0xc7d7, 0x0, 0x0);
        gbc.writeMem(0x5a72, { 0xc6, 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x25f8, gbc.sp());
        EXPECT(0x5a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0056
        gbc.setState(0xd845, 0x18f5, 0x74a0, 0x922e, 0xe73a, 0x4f81, 0x0, 0x0);
        gbc.writeMem(0xd845, { 0xc6, 0xd0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x18f5, gbc.sp());
        EXPECT(0xd847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd845));
        EXPECT(0xd0, gbc.readMem(0xd846));
        // C6 0057
        gbc.setState(0x323d, 0xb94, 0x7330, 0x5434, 0x696b, 0xd59b, 0x0, 0x0);
        gbc.writeMem(0x323d, { 0xc6, 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb94, gbc.sp());
        EXPECT(0x323f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0058
        gbc.setState(0x5fb1, 0x8e5e, 0x2ef0, 0xa09c, 0xde77, 0x4376, 0x0, 0x1);
        gbc.writeMem(0x5fb1, { 0xc6, 0x77 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8e5e, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0059
        gbc.setState(0x1381, 0x449c, 0x4bf0, 0x5aed, 0x8cec, 0xce59, 0x0, 0x1);
        gbc.writeMem(0x1381, { 0xc6, 0x7b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x449c, gbc.sp());
        EXPECT(0x1383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 005A
        gbc.setState(0x8cd4, 0x51f7, 0x10a0, 0x90ac, 0x5186, 0xf050, 0x0, 0x1);
        gbc.writeMem(0x8cd4, { 0xc6, 0x2a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x51f7, gbc.sp());
        EXPECT(0x8cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8cd4));
        EXPECT(0x2a, gbc.readMem(0x8cd5));
        // C6 005B
        gbc.setState(0xd41f, 0xa84d, 0xcee0, 0xc2e1, 0xa4a1, 0xd967, 0x1, 0x0);
        gbc.writeMem(0xd41f, { 0xc6, 0xe1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa84d, gbc.sp());
        EXPECT(0xd421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd41f));
        EXPECT(0xe1, gbc.readMem(0xd420));
        // C6 005C
        gbc.setState(0x50b5, 0x7ba6, 0x3060, 0x85a1, 0x3b61, 0x4d49, 0x1, 0x0);
        gbc.writeMem(0x50b5, { 0xc6, 0xad });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7ba6, gbc.sp());
        EXPECT(0x50b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 005D
        gbc.setState(0x6583, 0x3ab7, 0x4c10, 0x6358, 0x4b5, 0x384b, 0x1, 0x0);
        gbc.writeMem(0x6583, { 0xc6, 0xee });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3ab7, gbc.sp());
        EXPECT(0x6585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 005E
        gbc.setState(0x5551, 0xf86a, 0x50b0, 0xbec, 0xe7b8, 0x1c88, 0x0, 0x0);
        gbc.writeMem(0x5551, { 0xc6, 0xfa });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf86a, gbc.sp());
        EXPECT(0x5553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 005F
        gbc.setState(0x81c8, 0x479e, 0x3690, 0x2d83, 0x129, 0xfeaf, 0x0, 0x1);
        gbc.writeMem(0x81c8, { 0xc6, 0x5f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x479e, gbc.sp());
        EXPECT(0x81ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x81c8));
        EXPECT(0x5f, gbc.readMem(0x81c9));
        // C6 0060
        gbc.setState(0x5037, 0x36db, 0x97f0, 0xc130, 0xcca2, 0x7d4f, 0x0, 0x0);
        gbc.writeMem(0x5037, { 0xc6, 0x56 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x36db, gbc.sp());
        EXPECT(0x5039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0061
        gbc.setState(0x1b9f, 0x66be, 0x8400, 0xebdd, 0x6c9, 0xc386, 0x0, 0x0);
        gbc.writeMem(0x1b9f, { 0xc6, 0x38 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x66be, gbc.sp());
        EXPECT(0x1ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0062
        gbc.setState(0x3d6e, 0x68a1, 0x5f60, 0xf89b, 0xfcd, 0x78fc, 0x0, 0x0);
        gbc.writeMem(0x3d6e, { 0xc6, 0xcb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x68a1, gbc.sp());
        EXPECT(0x3d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0063
        gbc.setState(0xc487, 0x9819, 0xb8a0, 0xa541, 0x3f5f, 0x9a26, 0x0, 0x1);
        gbc.writeMem(0xc487, { 0xc6, 0xae });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9819, gbc.sp());
        EXPECT(0xc489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc487));
        EXPECT(0xae, gbc.readMem(0xc488));
        // C6 0064
        gbc.setState(0x672c, 0x5400, 0x3a30, 0xee20, 0xe7fc, 0xafc6, 0x1, 0x0);
        gbc.writeMem(0x672c, { 0xc6, 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5400, gbc.sp());
        EXPECT(0x672e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0065
        gbc.setState(0xb037, 0x7374, 0x9a20, 0x3227, 0x1028, 0x30fd, 0x1, 0x0);
        gbc.writeMem(0xb037, { 0xc6, 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7374, gbc.sp());
        EXPECT(0xb039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb037));
        EXPECT(0xe9, gbc.readMem(0xb038));
        // C6 0066
        gbc.setState(0x5a50, 0x9ec8, 0xa7a0, 0x9706, 0x62fb, 0x3629, 0x1, 0x0);
        gbc.writeMem(0x5a50, { 0xc6, 0x35 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9ec8, gbc.sp());
        EXPECT(0x5a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0067
        gbc.setState(0x2043, 0x254b, 0x84a0, 0x4236, 0xe152, 0x5c6c, 0x1, 0x0);
        gbc.writeMem(0x2043, { 0xc6, 0xb5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0x2045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0068
        gbc.setState(0x64a, 0xf039, 0xe0c0, 0x12fd, 0x5bc, 0x3763, 0x1, 0x1);
        gbc.writeMem(0x64a, { 0xc6, 0xf9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf039, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0069
        gbc.setState(0x4a7e, 0x7bbe, 0x5130, 0x5ae5, 0xb499, 0x9e0b, 0x0, 0x1);
        gbc.writeMem(0x4a7e, { 0xc6, 0x50 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7bbe, gbc.sp());
        EXPECT(0x4a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 006A
        gbc.setState(0x59f, 0x86dd, 0xed0, 0x75cb, 0x43e1, 0xd464, 0x1, 0x0);
        gbc.writeMem(0x59f, { 0xc6, 0x45 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x86dd, gbc.sp());
        EXPECT(0x5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 006B
        gbc.setState(0x526e, 0xfb7c, 0x2f00, 0x61af, 0xc614, 0xb4d8, 0x0, 0x1);
        gbc.writeMem(0x526e, { 0xc6, 0x37 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfb7c, gbc.sp());
        EXPECT(0x5270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 006C
        gbc.setState(0x91aa, 0x1a20, 0x5f40, 0x3179, 0xc559, 0x6654, 0x1, 0x1);
        gbc.writeMem(0x91aa, { 0xc6, 0x7f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1a20, gbc.sp());
        EXPECT(0x91ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x91aa));
        EXPECT(0x7f, gbc.readMem(0x91ab));
        // C6 006D
        gbc.setState(0xedde, 0xb81d, 0xcc0, 0xc6c, 0xb010, 0xe0fc, 0x0, 0x0);
        gbc.writeMem(0xedde, { 0xc6, 0x4f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb81d, gbc.sp());
        EXPECT(0xede0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xedde));
        EXPECT(0x4f, gbc.readMem(0xeddf));
        // C6 006E
        gbc.setState(0x13c, 0xfdc2, 0xbe30, 0x2eb, 0xc64a, 0x5033, 0x0, 0x1);
        gbc.writeMem(0x13c, { 0xc6, 0xb0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0x13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 006F
        gbc.setState(0x1b91, 0x5552, 0x14c0, 0x6c9e, 0xa7e3, 0x74a5, 0x1, 0x1);
        gbc.writeMem(0x1b91, { 0xc6, 0x75 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5552, gbc.sp());
        EXPECT(0x1b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0070
        gbc.setState(0x1206, 0x3fe3, 0x6b50, 0x35e8, 0xd4e6, 0x8634, 0x0, 0x0);
        gbc.writeMem(0x1206, { 0xc6, 0xf8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3fe3, gbc.sp());
        EXPECT(0x1208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0071
        gbc.setState(0xe930, 0xd8b4, 0xd220, 0x504c, 0x2c05, 0x4718, 0x1, 0x0);
        gbc.writeMem(0xe930, { 0xc6, 0xc5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd8b4, gbc.sp());
        EXPECT(0xe932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe930));
        EXPECT(0xc5, gbc.readMem(0xe931));
        // C6 0072
        gbc.setState(0x2db9, 0xc2f9, 0x4310, 0x8bcf, 0x847, 0xc4ee, 0x0, 0x0);
        gbc.writeMem(0x2db9, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc2f9, gbc.sp());
        EXPECT(0x2dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0073
        gbc.setState(0x269a, 0xd42b, 0x8e0, 0x80d6, 0x8067, 0x6890, 0x1, 0x1);
        gbc.writeMem(0x269a, { 0xc6, 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd42b, gbc.sp());
        EXPECT(0x269c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0074
        gbc.setState(0x2f9, 0xc5d9, 0x1cc0, 0x7df4, 0xbcb9, 0xe874, 0x0, 0x0);
        gbc.writeMem(0x2f9, { 0xc6, 0x4d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc5d9, gbc.sp());
        EXPECT(0x2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0075
        gbc.setState(0x171b, 0xbe1d, 0x41b0, 0x6a2c, 0x4333, 0xad98, 0x0, 0x0);
        gbc.writeMem(0x171b, { 0xc6, 0xcf });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbe1d, gbc.sp());
        EXPECT(0x171d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0076
        gbc.setState(0xb107, 0x127f, 0xe6a0, 0x6a86, 0x11a3, 0x90ff, 0x1, 0x0);
        gbc.writeMem(0xb107, { 0xc6, 0xbe });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x127f, gbc.sp());
        EXPECT(0xb109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb107));
        EXPECT(0xbe, gbc.readMem(0xb108));
        // C6 0077
        gbc.setState(0xaf95, 0xc956, 0xb980, 0x8d3b, 0x94eb, 0xeb40, 0x0, 0x0);
        gbc.writeMem(0xaf95, { 0xc6, 0x26 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc956, gbc.sp());
        EXPECT(0xaf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaf95));
        EXPECT(0x26, gbc.readMem(0xaf96));
        // C6 0078
        gbc.setState(0x27e8, 0xe1c9, 0xf8e0, 0xa6f2, 0x5a31, 0x3600, 0x1, 0x1);
        gbc.writeMem(0x27e8, { 0xc6, 0xd6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe1c9, gbc.sp());
        EXPECT(0x27ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0079
        gbc.setState(0x937d, 0x57bd, 0xd5d0, 0x604a, 0x1c9f, 0xf244, 0x0, 0x0);
        gbc.writeMem(0x937d, { 0xc6, 0x6b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x57bd, gbc.sp());
        EXPECT(0x937f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x937d));
        EXPECT(0x6b, gbc.readMem(0x937e));
        // C6 007A
        gbc.setState(0x8628, 0x3b7e, 0xedf0, 0x30e9, 0x508d, 0x5ba4, 0x1, 0x1);
        gbc.writeMem(0x8628, { 0xc6, 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3b7e, gbc.sp());
        EXPECT(0x862a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8628));
        EXPECT(0xb9, gbc.readMem(0x8629));
        // C6 007B
        gbc.setState(0xc1b8, 0xd420, 0xa0e0, 0x93d4, 0xcebe, 0xca86, 0x0, 0x1);
        gbc.writeMem(0xc1b8, { 0xc6, 0x90 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd420, gbc.sp());
        EXPECT(0xc1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc1b8));
        EXPECT(0x90, gbc.readMem(0xc1b9));
        // C6 007C
        gbc.setState(0x7cb0, 0xdab, 0x1eb0, 0xe8b1, 0xe8d5, 0x8ba6, 0x1, 0x1);
        gbc.writeMem(0x7cb0, { 0xc6, 0xda });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0x7cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 007D
        gbc.setState(0xc27f, 0x153d, 0x7340, 0x967f, 0x6090, 0xf4e9, 0x1, 0x0);
        gbc.writeMem(0xc27f, { 0xc6, 0xb0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x153d, gbc.sp());
        EXPECT(0xc281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc27f));
        EXPECT(0xb0, gbc.readMem(0xc280));
        // C6 007E
        gbc.setState(0x20a2, 0x39a1, 0xc420, 0x7107, 0x5269, 0x6717, 0x1, 0x0);
        gbc.writeMem(0x20a2, { 0xc6, 0xe1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x39a1, gbc.sp());
        EXPECT(0x20a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 007F
        gbc.setState(0x935a, 0x4e4a, 0x4e90, 0xc614, 0x18b0, 0xafb5, 0x0, 0x0);
        gbc.writeMem(0x935a, { 0xc6, 0xbb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4e4a, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x935a));
        EXPECT(0xbb, gbc.readMem(0x935b));
        // C6 0080
        gbc.setState(0x7a2f, 0xf5b9, 0xbbe0, 0xb0b2, 0xe24e, 0x60e6, 0x0, 0x1);
        gbc.writeMem(0x7a2f, { 0xc6, 0x95 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf5b9, gbc.sp());
        EXPECT(0x7a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0082
        gbc.setState(0xea1e, 0x37ac, 0x3a50, 0xa5e1, 0x1bfb, 0xc61a, 0x0, 0x0);
        gbc.writeMem(0xea1e, { 0xc6, 0xd6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x37ac, gbc.sp());
        EXPECT(0xea20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xea1e));
        EXPECT(0xd6, gbc.readMem(0xea1f));
        // C6 0083
        gbc.setState(0x2159, 0x187, 0xf730, 0xfe30, 0xceac, 0x402f, 0x1, 0x0);
        gbc.writeMem(0x2159, { 0xc6, 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x187, gbc.sp());
        EXPECT(0x215b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0084
        gbc.setState(0x44d, 0x9bb8, 0xf060, 0x8e96, 0x5551, 0xdfe0, 0x1, 0x0);
        gbc.writeMem(0x44d, { 0xc6, 0xb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9bb8, gbc.sp());
        EXPECT(0x44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0085
        gbc.setState(0x7ef6, 0xfd05, 0x7ed0, 0x6a8b, 0x765f, 0x5d2c, 0x1, 0x0);
        gbc.writeMem(0x7ef6, { 0xc6, 0x95 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfd05, gbc.sp());
        EXPECT(0x7ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0086
        gbc.setState(0x7060, 0x245d, 0xaee0, 0x6b44, 0xe5e1, 0x5873, 0x1, 0x1);
        gbc.writeMem(0x7060, { 0xc6, 0x92 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x245d, gbc.sp());
        EXPECT(0x7062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0087
        gbc.setState(0x8415, 0x99de, 0x22a0, 0x29bf, 0x170e, 0xa4c1, 0x0, 0x1);
        gbc.writeMem(0x8415, { 0xc6, 0x63 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x99de, gbc.sp());
        EXPECT(0x8417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8415));
        EXPECT(0x63, gbc.readMem(0x8416));
        // C6 0088
        gbc.setState(0x52e7, 0xd5ae, 0x5e60, 0xbf6b, 0xacb3, 0xa684, 0x0, 0x1);
        gbc.writeMem(0x52e7, { 0xc6, 0xf3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd5ae, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0089
        gbc.setState(0x9403, 0x1e23, 0x8e0, 0x774a, 0xfeec, 0x6265, 0x0, 0x0);
        gbc.writeMem(0x9403, { 0xc6, 0xe2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1e23, gbc.sp());
        EXPECT(0x9405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9403));
        EXPECT(0xe2, gbc.readMem(0x9404));
        // C6 008A
        gbc.setState(0x7bb6, 0xfeb2, 0xd490, 0xe1bf, 0x586, 0xc3d5, 0x0, 0x1);
        gbc.writeMem(0x7bb6, { 0xc6, 0x1a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfeb2, gbc.sp());
        EXPECT(0x7bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 008B
        gbc.setState(0xbcf6, 0xd9f9, 0x52e0, 0xaaea, 0xa58d, 0xed84, 0x0, 0x0);
        gbc.writeMem(0xbcf6, { 0xc6, 0xa1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd9f9, gbc.sp());
        EXPECT(0xbcf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbcf6));
        EXPECT(0xa1, gbc.readMem(0xbcf7));
        // C6 008C
        gbc.setState(0x68f7, 0x695, 0xeb00, 0xdec, 0xe8ba, 0x8647, 0x0, 0x1);
        gbc.writeMem(0x68f7, { 0xc6, 0x38 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x695, gbc.sp());
        EXPECT(0x68f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 008D
        gbc.setState(0xda41, 0xe6b, 0x2cb0, 0x765c, 0xef0e, 0x194, 0x0, 0x1);
        gbc.writeMem(0xda41, { 0xc6, 0x77 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe6b, gbc.sp());
        EXPECT(0xda43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xda41));
        EXPECT(0x77, gbc.readMem(0xda42));
        // C6 008E
        gbc.setState(0x2751, 0xeb85, 0x3d70, 0x57bf, 0x35b0, 0x5b34, 0x1, 0x1);
        gbc.writeMem(0x2751, { 0xc6, 0xc6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xeb85, gbc.sp());
        EXPECT(0x2753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 008F
        gbc.setState(0x1a35, 0x1c40, 0x29d0, 0x6e37, 0xf110, 0xff1c, 0x0, 0x0);
        gbc.writeMem(0x1a35, { 0xc6, 0xf4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1c40, gbc.sp());
        EXPECT(0x1a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0090
        gbc.setState(0x742f, 0x1ae6, 0xe870, 0xb65, 0x2a81, 0x4010, 0x0, 0x1);
        gbc.writeMem(0x742f, { 0xc6, 0x16 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1ae6, gbc.sp());
        EXPECT(0x7431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0091
        gbc.setState(0x2094, 0xcfc9, 0xa120, 0x4dd7, 0x67cd, 0xcef9, 0x1, 0x0);
        gbc.writeMem(0x2094, { 0xc6, 0xc8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcfc9, gbc.sp());
        EXPECT(0x2096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0092
        gbc.setState(0xe251, 0x7db6, 0x8c60, 0x38fb, 0xcfe2, 0x81cb, 0x1, 0x0);
        gbc.writeMem(0xe251, { 0xc6, 0xa2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7db6, gbc.sp());
        EXPECT(0xe253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe251));
        EXPECT(0xa2, gbc.readMem(0xe252));
        // C6 0093
        gbc.setState(0xed07, 0xd469, 0x7a40, 0x3d01, 0xebfc, 0x8596, 0x1, 0x1);
        gbc.writeMem(0xed07, { 0xc6, 0x54 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd469, gbc.sp());
        EXPECT(0xed09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xed07));
        EXPECT(0x54, gbc.readMem(0xed08));
        // C6 0094
        gbc.setState(0xecfc, 0x128b, 0x4f00, 0xd75c, 0xe3ef, 0x9a67, 0x0, 0x1);
        gbc.writeMem(0xecfc, { 0xc6, 0xd4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x128b, gbc.sp());
        EXPECT(0xecfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xecfc));
        EXPECT(0xd4, gbc.readMem(0xecfd));
        // C6 0095
        gbc.setState(0xb347, 0xdd55, 0xee40, 0x4dd1, 0x8eec, 0x8cd5, 0x0, 0x1);
        gbc.writeMem(0xb347, { 0xc6, 0x47 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdd55, gbc.sp());
        EXPECT(0xb349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb347));
        EXPECT(0x47, gbc.readMem(0xb348));
        // C6 0096
        gbc.setState(0x7c5, 0xae3e, 0x1760, 0x7a5f, 0xe3b1, 0xaa91, 0x0, 0x0);
        gbc.writeMem(0x7c5, { 0xc6, 0xa2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0x7c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0097
        gbc.setState(0x5d1b, 0x1eea, 0x2d00, 0x8037, 0x13ee, 0xa9da, 0x0, 0x1);
        gbc.writeMem(0x5d1b, { 0xc6, 0x54 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0x5d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0098
        gbc.setState(0x51a0, 0x9acf, 0xcb80, 0xdb2f, 0x83f4, 0xffb1, 0x1, 0x1);
        gbc.writeMem(0x51a0, { 0xc6, 0xb1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9acf, gbc.sp());
        EXPECT(0x51a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0099
        gbc.setState(0xdfa7, 0xf239, 0xf4b0, 0x58c2, 0xc0af, 0xd2f6, 0x0, 0x0);
        gbc.writeMem(0xdfa7, { 0xc6, 0xaa });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf239, gbc.sp());
        EXPECT(0xdfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdfa7));
        EXPECT(0xaa, gbc.readMem(0xdfa8));
        // C6 009B
        gbc.setState(0x3b94, 0xe75a, 0x6e50, 0x37fc, 0xad3e, 0xdcf3, 0x1, 0x0);
        gbc.writeMem(0x3b94, { 0xc6, 0x4c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe75a, gbc.sp());
        EXPECT(0x3b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 009C
        gbc.setState(0xe22f, 0xa4e8, 0xddc0, 0xe8c0, 0x22cf, 0x5e2f, 0x0, 0x0);
        gbc.writeMem(0xe22f, { 0xc6, 0x29 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa4e8, gbc.sp());
        EXPECT(0xe231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe22f));
        EXPECT(0x29, gbc.readMem(0xe230));
        // C6 009D
        gbc.setState(0xd311, 0x68a3, 0x3060, 0x8d23, 0x426a, 0xd0f6, 0x0, 0x1);
        gbc.writeMem(0xd311, { 0xc6, 0x54 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x68a3, gbc.sp());
        EXPECT(0xd313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd311));
        EXPECT(0x54, gbc.readMem(0xd312));
        // C6 009F
        gbc.setState(0x18e8, 0x9f90, 0xa640, 0x9798, 0x44f5, 0x11fa, 0x1, 0x0);
        gbc.writeMem(0x18e8, { 0xc6, 0xba });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9f90, gbc.sp());
        EXPECT(0x18ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00A0
        gbc.setState(0x7526, 0x5ece, 0x6da0, 0x9409, 0x8808, 0xef26, 0x1, 0x0);
        gbc.writeMem(0x7526, { 0xc6, 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5ece, gbc.sp());
        EXPECT(0x7528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00A1
        gbc.setState(0x5f57, 0xf402, 0x2c30, 0x7b85, 0x3920, 0x445d, 0x0, 0x1);
        gbc.writeMem(0x5f57, { 0xc6, 0x23 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf402, gbc.sp());
        EXPECT(0x5f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00A2
        gbc.setState(0x5cfb, 0x8ced, 0xb5f0, 0x1ff4, 0x38ad, 0x920e, 0x1, 0x1);
        gbc.writeMem(0x5cfb, { 0xc6, 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8ced, gbc.sp());
        EXPECT(0x5cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00A3
        gbc.setState(0xb6ad, 0x3e26, 0x86f0, 0x9977, 0x408a, 0x2666, 0x1, 0x1);
        gbc.writeMem(0xb6ad, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3e26, gbc.sp());
        EXPECT(0xb6af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb6ad));
        EXPECT(0x64, gbc.readMem(0xb6ae));
        // C6 00A4
        gbc.setState(0xad55, 0x28eb, 0x4da0, 0x19a1, 0x6f09, 0x1dee, 0x1, 0x0);
        gbc.writeMem(0xad55, { 0xc6, 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x28eb, gbc.sp());
        EXPECT(0xad57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xad55));
        EXPECT(0x76, gbc.readMem(0xad56));
        // C6 00A5
        gbc.setState(0xb79c, 0x8434, 0xc940, 0xf455, 0x7c95, 0x66bb, 0x1, 0x1);
        gbc.writeMem(0xb79c, { 0xc6, 0xcf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8434, gbc.sp());
        EXPECT(0xb79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb79c));
        EXPECT(0xcf, gbc.readMem(0xb79d));
        // C6 00A6
        gbc.setState(0xc382, 0xbc8e, 0x10b0, 0x589f, 0x9b28, 0x3228, 0x0, 0x0);
        gbc.writeMem(0xc382, { 0xc6, 0x4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbc8e, gbc.sp());
        EXPECT(0xc384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc382));
        EXPECT(0x4, gbc.readMem(0xc383));
        // C6 00A7
        gbc.setState(0x129c, 0xe7c8, 0x67f0, 0x4e86, 0xe1a8, 0xd192, 0x0, 0x1);
        gbc.writeMem(0x129c, { 0xc6, 0xe6 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe7c8, gbc.sp());
        EXPECT(0x129e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00A8
        gbc.setState(0x4fb7, 0x7836, 0x5680, 0x48a9, 0xa315, 0xfbeb, 0x0, 0x0);
        gbc.writeMem(0x4fb7, { 0xc6, 0xc9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7836, gbc.sp());
        EXPECT(0x4fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00A9
        gbc.setState(0x799a, 0xc93b, 0x4d60, 0x4456, 0x9ffb, 0x9e81, 0x1, 0x1);
        gbc.writeMem(0x799a, { 0xc6, 0x27 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc93b, gbc.sp());
        EXPECT(0x799c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00AB
        gbc.setState(0x58e3, 0x8ebe, 0x5680, 0xc487, 0x6468, 0xdce5, 0x0, 0x0);
        gbc.writeMem(0x58e3, { 0xc6, 0x4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8ebe, gbc.sp());
        EXPECT(0x58e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00AC
        gbc.setState(0x1705, 0xdfb0, 0x2be0, 0xfa8a, 0x95b1, 0x6899, 0x0, 0x1);
        gbc.writeMem(0x1705, { 0xc6, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdfb0, gbc.sp());
        EXPECT(0x1707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00AD
        gbc.setState(0xe76, 0xf059, 0x1fd0, 0x2217, 0x6d29, 0xec47, 0x0, 0x1);
        gbc.writeMem(0xe76, { 0xc6, 0x18 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf059, gbc.sp());
        EXPECT(0xe78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00AE
        gbc.setState(0x130a, 0x1204, 0x3590, 0x7b40, 0x8ae9, 0x1779, 0x0, 0x0);
        gbc.writeMem(0x130a, { 0xc6, 0x12 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1204, gbc.sp());
        EXPECT(0x130c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00AF
        gbc.setState(0x9140, 0xbf99, 0xf50, 0xf470, 0xe361, 0xa353, 0x1, 0x0);
        gbc.writeMem(0x9140, { 0xc6, 0xf6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbf99, gbc.sp());
        EXPECT(0x9142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9140));
        EXPECT(0xf6, gbc.readMem(0x9141));
        // C6 00B0
        gbc.setState(0x62b7, 0xf5f8, 0x9980, 0xb628, 0x9770, 0xd0c2, 0x1, 0x1);
        gbc.writeMem(0x62b7, { 0xc6, 0x59 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf5f8, gbc.sp());
        EXPECT(0x62b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00B1
        gbc.setState(0xdc6c, 0x2f48, 0x3c50, 0x18c, 0xc3b0, 0x6f9, 0x1, 0x1);
        gbc.writeMem(0xdc6c, { 0xc6, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2f48, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdc6c));
        EXPECT(0x57, gbc.readMem(0xdc6d));
        // C6 00B2
        gbc.setState(0xebae, 0x6f7d, 0x9cf0, 0xdf90, 0x67c9, 0x8309, 0x1, 0x1);
        gbc.writeMem(0xebae, { 0xc6, 0xca });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6f7d, gbc.sp());
        EXPECT(0xebb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xebae));
        EXPECT(0xca, gbc.readMem(0xebaf));
        // C6 00B3
        gbc.setState(0x568b, 0x3baf, 0x3a0, 0x10b3, 0x9153, 0xb0d0, 0x0, 0x0);
        gbc.writeMem(0x568b, { 0xc6, 0xd1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3baf, gbc.sp());
        EXPECT(0x568d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00B4
        gbc.setState(0x4591, 0x983d, 0xa410, 0xb64c, 0xc50b, 0x9f00, 0x0, 0x0);
        gbc.writeMem(0x4591, { 0xc6, 0x67 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x983d, gbc.sp());
        EXPECT(0x4593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00B5
        gbc.setState(0x688b, 0x8d06, 0xdef0, 0xaf32, 0x338e, 0x85a1, 0x0, 0x1);
        gbc.writeMem(0x688b, { 0xc6, 0x7f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8d06, gbc.sp());
        EXPECT(0x688d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00B6
        gbc.setState(0xc7b0, 0x44f4, 0xe290, 0xa581, 0xf7bd, 0xbddd, 0x0, 0x0);
        gbc.writeMem(0xc7b0, { 0xc6, 0x2e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x44f4, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc7b0));
        EXPECT(0x2e, gbc.readMem(0xc7b1));
        // C6 00B7
        gbc.setState(0xd3a9, 0xd68, 0xec60, 0x640e, 0x4153, 0xbc30, 0x0, 0x0);
        gbc.writeMem(0xd3a9, { 0xc6, 0x7f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd68, gbc.sp());
        EXPECT(0xd3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd3a9));
        EXPECT(0x7f, gbc.readMem(0xd3aa));
        // C6 00B8
        gbc.setState(0x6184, 0x8461, 0x2550, 0x77aa, 0xf984, 0x686b, 0x0, 0x1);
        gbc.writeMem(0x6184, { 0xc6, 0xc7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8461, gbc.sp());
        EXPECT(0x6186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00B9
        gbc.setState(0xe5a2, 0x9e53, 0x46a0, 0xf280, 0x6661, 0x8de4, 0x1, 0x0);
        gbc.writeMem(0xe5a2, { 0xc6, 0xf1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9e53, gbc.sp());
        EXPECT(0xe5a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe5a2));
        EXPECT(0xf1, gbc.readMem(0xe5a3));
        // C6 00BA
        gbc.setState(0x5b7a, 0x98f8, 0x600, 0xdc4e, 0x710b, 0xd363, 0x1, 0x1);
        gbc.writeMem(0x5b7a, { 0xc6, 0x45 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x98f8, gbc.sp());
        EXPECT(0x5b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00BB
        gbc.setState(0x489a, 0xe048, 0x5e50, 0x4ae3, 0x5387, 0x454c, 0x0, 0x0);
        gbc.writeMem(0x489a, { 0xc6, 0x93 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe048, gbc.sp());
        EXPECT(0x489c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00BC
        gbc.setState(0x2a76, 0x74bc, 0x1850, 0x84e9, 0x8ab0, 0xc965, 0x1, 0x1);
        gbc.writeMem(0x2a76, { 0xc6, 0x18 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x74bc, gbc.sp());
        EXPECT(0x2a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00BD
        gbc.setState(0xa572, 0x9100, 0xe030, 0x69d8, 0x11db, 0xde81, 0x0, 0x1);
        gbc.writeMem(0xa572, { 0xc6, 0xf5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9100, gbc.sp());
        EXPECT(0xa574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa572));
        EXPECT(0xf5, gbc.readMem(0xa573));
        // C6 00BE
        gbc.setState(0xa407, 0x25c7, 0x3190, 0xa584, 0xb852, 0xb4ef, 0x0, 0x1);
        gbc.writeMem(0xa407, { 0xc6, 0xad });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x25c7, gbc.sp());
        EXPECT(0xa409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa407));
        EXPECT(0xad, gbc.readMem(0xa408));
        // C6 00BF
        gbc.setState(0x92f1, 0x9ae5, 0x5c30, 0x6c01, 0x187e, 0x9671, 0x0, 0x0);
        gbc.writeMem(0x92f1, { 0xc6, 0xee });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9ae5, gbc.sp());
        EXPECT(0x92f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x92f1));
        EXPECT(0xee, gbc.readMem(0x92f2));
        // C6 00C0
        gbc.setState(0xc31c, 0xaeb4, 0x72b0, 0x4e4f, 0x2873, 0xe030, 0x1, 0x1);
        gbc.writeMem(0xc31c, { 0xc6, 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaeb4, gbc.sp());
        EXPECT(0xc31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc31c));
        EXPECT(0x37, gbc.readMem(0xc31d));
        // C6 00C1
        gbc.setState(0xcdc9, 0x81cd, 0xad80, 0x2418, 0x24f0, 0x8b9f, 0x1, 0x1);
        gbc.writeMem(0xcdc9, { 0xc6, 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x81cd, gbc.sp());
        EXPECT(0xcdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcdc9));
        EXPECT(0x9b, gbc.readMem(0xcdca));
        // C6 00C2
        gbc.setState(0x38bb, 0x7d69, 0xa3e0, 0x62a8, 0xc5e4, 0x6d92, 0x0, 0x0);
        gbc.writeMem(0x38bb, { 0xc6, 0x62 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7d69, gbc.sp());
        EXPECT(0x38bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00C3
        gbc.setState(0xcd7c, 0x4d34, 0x1320, 0xf7e8, 0x9f2f, 0xc7ed, 0x0, 0x0);
        gbc.writeMem(0xcd7c, { 0xc6, 0xae });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4d34, gbc.sp());
        EXPECT(0xcd7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcd7c));
        EXPECT(0xae, gbc.readMem(0xcd7d));
        // C6 00C4
        gbc.setState(0x670e, 0x38ea, 0x2440, 0xe6da, 0x35ed, 0x966b, 0x0, 0x1);
        gbc.writeMem(0x670e, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x38ea, gbc.sp());
        EXPECT(0x6710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00C6
        gbc.setState(0x4651, 0xd602, 0xca80, 0x8944, 0xe869, 0xa3eb, 0x0, 0x0);
        gbc.writeMem(0x4651, { 0xc6, 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd602, gbc.sp());
        EXPECT(0x4653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00C7
        gbc.setState(0x3a5f, 0x81b6, 0x7350, 0xe42a, 0xa4f2, 0x44b6, 0x0, 0x0);
        gbc.writeMem(0x3a5f, { 0xc6, 0xc0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x81b6, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00C8
        gbc.setState(0xa240, 0x190d, 0xf240, 0x2dc4, 0x3605, 0x7b5b, 0x1, 0x0);
        gbc.writeMem(0xa240, { 0xc6, 0x65 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x190d, gbc.sp());
        EXPECT(0xa242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa240));
        EXPECT(0x65, gbc.readMem(0xa241));
        // C6 00C9
        gbc.setState(0xd8e6, 0xc7e2, 0x8b10, 0xb76f, 0x361f, 0x40a4, 0x1, 0x0);
        gbc.writeMem(0xd8e6, { 0xc6, 0x86 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc7e2, gbc.sp());
        EXPECT(0xd8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd8e6));
        EXPECT(0x86, gbc.readMem(0xd8e7));
        // C6 00CA
        gbc.setState(0xa9b4, 0xb4c1, 0x74c0, 0x9544, 0xb63a, 0x70b8, 0x1, 0x1);
        gbc.writeMem(0xa9b4, { 0xc6, 0xe8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb4c1, gbc.sp());
        EXPECT(0xa9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa9b4));
        EXPECT(0xe8, gbc.readMem(0xa9b5));
        // C6 00CB
        gbc.setState(0x8a08, 0x85f2, 0xe100, 0x14dc, 0x860a, 0xd0b8, 0x0, 0x0);
        gbc.writeMem(0x8a08, { 0xc6, 0xdb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x85f2, gbc.sp());
        EXPECT(0x8a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8a08));
        EXPECT(0xdb, gbc.readMem(0x8a09));
        // C6 00CD
        gbc.setState(0x356c, 0xaa69, 0x3a20, 0x662, 0xe7df, 0x6b38, 0x0, 0x1);
        gbc.writeMem(0x356c, { 0xc6, 0xe7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaa69, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00CE
        gbc.setState(0x4a9f, 0x3634, 0x830, 0x3bdf, 0xcfb6, 0x3220, 0x1, 0x1);
        gbc.writeMem(0x4a9f, { 0xc6, 0x7e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3634, gbc.sp());
        EXPECT(0x4aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00CF
        gbc.setState(0x9b89, 0x7870, 0x6bb0, 0x35f2, 0x99ec, 0x323c, 0x1, 0x0);
        gbc.writeMem(0x9b89, { 0xc6, 0xe8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7870, gbc.sp());
        EXPECT(0x9b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9b89));
        EXPECT(0xe8, gbc.readMem(0x9b8a));
        // C6 00D0
        gbc.setState(0x491b, 0x7779, 0xe710, 0x24ef, 0xef7, 0x7b1, 0x1, 0x1);
        gbc.writeMem(0x491b, { 0xc6, 0x4f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7779, gbc.sp());
        EXPECT(0x491d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00D1
        gbc.setState(0x56d8, 0x60f4, 0xbd60, 0x5299, 0xc59e, 0x4c73, 0x0, 0x0);
        gbc.writeMem(0x56d8, { 0xc6, 0xa2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x60f4, gbc.sp());
        EXPECT(0x56da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00D2
        gbc.setState(0x89cc, 0x6d4d, 0xd760, 0xf02e, 0x9f76, 0x1b32, 0x1, 0x1);
        gbc.writeMem(0x89cc, { 0xc6, 0xdf });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6d4d, gbc.sp());
        EXPECT(0x89ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x89cc));
        EXPECT(0xdf, gbc.readMem(0x89cd));
        // C6 00D3
        gbc.setState(0x5847, 0x5e9d, 0x9a20, 0xb12c, 0x8a8c, 0x1b1f, 0x0, 0x0);
        gbc.writeMem(0x5847, { 0xc6, 0x46 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5e9d, gbc.sp());
        EXPECT(0x5849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00D4
        gbc.setState(0x1069, 0x4bf6, 0x7cb0, 0x5a0c, 0x300b, 0x769, 0x0, 0x1);
        gbc.writeMem(0x1069, { 0xc6, 0xa1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4bf6, gbc.sp());
        EXPECT(0x106b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00D5
        gbc.setState(0x55a6, 0x3fbe, 0xea60, 0xec63, 0xe73e, 0x782d, 0x1, 0x0);
        gbc.writeMem(0x55a6, { 0xc6, 0x42 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3fbe, gbc.sp());
        EXPECT(0x55a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00D6
        gbc.setState(0x250f, 0x5319, 0xf4e0, 0x4481, 0x453e, 0xd4, 0x1, 0x0);
        gbc.writeMem(0x250f, { 0xc6, 0xbc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5319, gbc.sp());
        EXPECT(0x2511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00D7
        gbc.setState(0x291e, 0x3a98, 0xe140, 0xfb7f, 0x70ec, 0xab7, 0x0, 0x0);
        gbc.writeMem(0x291e, { 0xc6, 0xfa });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3a98, gbc.sp());
        EXPECT(0x2920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00D8
        gbc.setState(0xc2ad, 0xced2, 0x4670, 0xbcb2, 0xcdc3, 0xa4b4, 0x0, 0x0);
        gbc.writeMem(0xc2ad, { 0xc6, 0x80 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xced2, gbc.sp());
        EXPECT(0xc2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc2ad));
        EXPECT(0x80, gbc.readMem(0xc2ae));
        // C6 00D9
        gbc.setState(0x7a26, 0xa55f, 0x2b40, 0xd30, 0x1ce4, 0x10e7, 0x0, 0x0);
        gbc.writeMem(0x7a26, { 0xc6, 0x8e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa55f, gbc.sp());
        EXPECT(0x7a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00DA
        gbc.setState(0x2deb, 0x747e, 0xa6e0, 0x4566, 0x290f, 0xf436, 0x0, 0x0);
        gbc.writeMem(0x2deb, { 0xc6, 0x2d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x747e, gbc.sp());
        EXPECT(0x2ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00DB
        gbc.setState(0x146, 0x1bde, 0xe810, 0x2b6e, 0xd8c3, 0x5cc2, 0x0, 0x0);
        gbc.writeMem(0x146, { 0xc6, 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1bde, gbc.sp());
        EXPECT(0x148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00DC
        gbc.setState(0xc24d, 0x1825, 0x33c0, 0x2ac0, 0x5e22, 0xba98, 0x1, 0x1);
        gbc.writeMem(0xc24d, { 0xc6, 0x12 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1825, gbc.sp());
        EXPECT(0xc24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc24d));
        EXPECT(0x12, gbc.readMem(0xc24e));
        // C6 00DD
        gbc.setState(0x727e, 0x800f, 0xd0b0, 0x9a2, 0xf8d9, 0x9ea1, 0x0, 0x1);
        gbc.writeMem(0x727e, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x800f, gbc.sp());
        EXPECT(0x7280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00DE
        gbc.setState(0x10c5, 0xac4, 0xfd0, 0x8dc7, 0xe134, 0xa558, 0x1, 0x1);
        gbc.writeMem(0x10c5, { 0xc6, 0xa9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xac4, gbc.sp());
        EXPECT(0x10c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00E0
        gbc.setState(0x5357, 0xbf55, 0xaca0, 0x68b4, 0xddbc, 0xb1c4, 0x1, 0x1);
        gbc.writeMem(0x5357, { 0xc6, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbf55, gbc.sp());
        EXPECT(0x5359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00E1
        gbc.setState(0x2478, 0x2cbd, 0xe2b0, 0xf858, 0x99a5, 0x6ea0, 0x1, 0x1);
        gbc.writeMem(0x2478, { 0xc6, 0xb4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2cbd, gbc.sp());
        EXPECT(0x247a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00E2
        gbc.setState(0xdd1f, 0x56b2, 0xbfe0, 0x5d52, 0x364f, 0x8a05, 0x0, 0x1);
        gbc.writeMem(0xdd1f, { 0xc6, 0x87 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x56b2, gbc.sp());
        EXPECT(0xdd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdd1f));
        EXPECT(0x87, gbc.readMem(0xdd20));
        // C6 00E3
        gbc.setState(0x1b2b, 0x8ba1, 0x8a0, 0x1812, 0xe32a, 0xc6bc, 0x0, 0x1);
        gbc.writeMem(0x1b2b, { 0xc6, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8ba1, gbc.sp());
        EXPECT(0x1b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00E4
        gbc.setState(0xe222, 0x6ef6, 0x7c50, 0xe6d7, 0xa94a, 0x4598, 0x0, 0x1);
        gbc.writeMem(0xe222, { 0xc6, 0xa2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6ef6, gbc.sp());
        EXPECT(0xe224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe222));
        EXPECT(0xa2, gbc.readMem(0xe223));
        // C6 00E5
        gbc.setState(0x66f5, 0x2bf1, 0x6790, 0x863a, 0x7518, 0xeb3d, 0x0, 0x1);
        gbc.writeMem(0x66f5, { 0xc6, 0x62 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2bf1, gbc.sp());
        EXPECT(0x66f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00E6
        gbc.setState(0x1e54, 0xf7d3, 0x4d90, 0x3421, 0xdc39, 0x165d, 0x0, 0x0);
        gbc.writeMem(0x1e54, { 0xc6, 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf7d3, gbc.sp());
        EXPECT(0x1e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00E7
        gbc.setState(0x262a, 0x5776, 0xf490, 0xb0f9, 0x2833, 0x289f, 0x1, 0x1);
        gbc.writeMem(0x262a, { 0xc6, 0x6d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5776, gbc.sp());
        EXPECT(0x262c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00E8
        gbc.setState(0x19c6, 0x7c31, 0x4330, 0x2891, 0x55ba, 0x3a74, 0x0, 0x1);
        gbc.writeMem(0x19c6, { 0xc6, 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7c31, gbc.sp());
        EXPECT(0x19c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00E9
        gbc.setState(0x1f9e, 0xda73, 0xbab0, 0x6588, 0xad38, 0x5660, 0x0, 0x1);
        gbc.writeMem(0x1f9e, { 0xc6, 0xba });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xda73, gbc.sp());
        EXPECT(0x1fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00EA
        gbc.setState(0x8486, 0xbd36, 0xa8a0, 0x6182, 0x384f, 0x76e4, 0x0, 0x1);
        gbc.writeMem(0x8486, { 0xc6, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbd36, gbc.sp());
        EXPECT(0x8488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8486));
        EXPECT(0x0, gbc.readMem(0x8487));
        // C6 00EB
        gbc.setState(0x495d, 0x4e0a, 0x7540, 0x4487, 0x78cc, 0xc99f, 0x1, 0x0);
        gbc.writeMem(0x495d, { 0xc6, 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4e0a, gbc.sp());
        EXPECT(0x495f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00EC
        gbc.setState(0xd8bc, 0x6c45, 0x52d0, 0x5b3c, 0xdf61, 0x9084, 0x1, 0x0);
        gbc.writeMem(0xd8bc, { 0xc6, 0x45 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6c45, gbc.sp());
        EXPECT(0xd8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd8bc));
        EXPECT(0x45, gbc.readMem(0xd8bd));
        // C6 00ED
        gbc.setState(0x3a58, 0xeb70, 0xf30, 0x81dd, 0xdbc3, 0x589e, 0x0, 0x1);
        gbc.writeMem(0x3a58, { 0xc6, 0xb8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xeb70, gbc.sp());
        EXPECT(0x3a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00EE
        gbc.setState(0x7ebd, 0xcdf2, 0x1e10, 0x77a7, 0xfc5d, 0x7629, 0x1, 0x1);
        gbc.writeMem(0x7ebd, { 0xc6, 0x79 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcdf2, gbc.sp());
        EXPECT(0x7ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00EF
        gbc.setState(0x34a2, 0x4739, 0x340, 0xe8ee, 0x61a2, 0x6a9d, 0x1, 0x0);
        gbc.writeMem(0x34a2, { 0xc6, 0xe5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4739, gbc.sp());
        EXPECT(0x34a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00F0
        gbc.setState(0x16b5, 0xb74d, 0x68e0, 0xed98, 0xbf8f, 0x4ce2, 0x1, 0x0);
        gbc.writeMem(0x16b5, { 0xc6, 0x7f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb74d, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00F1
        gbc.setState(0xa965, 0xdc51, 0x450, 0x81eb, 0xdf30, 0xc227, 0x0, 0x0);
        gbc.writeMem(0xa965, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdc51, gbc.sp());
        EXPECT(0xa967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa965));
        EXPECT(0x33, gbc.readMem(0xa966));
        // C6 00F2
        gbc.setState(0x1783, 0x1695, 0xf440, 0xacb8, 0x2da2, 0x336f, 0x0, 0x1);
        gbc.writeMem(0x1783, { 0xc6, 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1695, gbc.sp());
        EXPECT(0x1785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00F3
        gbc.setState(0x2cc8, 0x6cbc, 0xceb0, 0x9df9, 0xf10b, 0x5090, 0x0, 0x0);
        gbc.writeMem(0x2cc8, { 0xc6, 0x50 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6cbc, gbc.sp());
        EXPECT(0x2cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00F4
        gbc.setState(0x6b0a, 0xe04, 0x1ef0, 0x685e, 0x397f, 0xc2b2, 0x0, 0x0);
        gbc.writeMem(0x6b0a, { 0xc6, 0x3a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe04, gbc.sp());
        EXPECT(0x6b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00F5
        gbc.setState(0x72ec, 0xb931, 0xe9d0, 0x508e, 0x518a, 0x5f17, 0x1, 0x1);
        gbc.writeMem(0x72ec, { 0xc6, 0xe0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb931, gbc.sp());
        EXPECT(0x72ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00F6
        gbc.setState(0x6b16, 0xc748, 0x1c40, 0xabde, 0x3559, 0x6c8c, 0x1, 0x1);
        gbc.writeMem(0x6b16, { 0xc6, 0x5f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc748, gbc.sp());
        EXPECT(0x6b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00F7
        gbc.setState(0xd358, 0xc063, 0x1780, 0x458f, 0x7d3d, 0x95ea, 0x0, 0x0);
        gbc.writeMem(0xd358, { 0xc6, 0xbe });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc063, gbc.sp());
        EXPECT(0xd35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd358));
        EXPECT(0xbe, gbc.readMem(0xd359));
        // C6 00F8
        gbc.setState(0xb7af, 0xb270, 0xe50, 0xf806, 0xdeb2, 0xbeea, 0x1, 0x1);
        gbc.writeMem(0xb7af, { 0xc6, 0x91 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb270, gbc.sp());
        EXPECT(0xb7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb7af));
        EXPECT(0x91, gbc.readMem(0xb7b0));
        // C6 00F9
        gbc.setState(0x6f62, 0x5ef4, 0x4050, 0x3b8d, 0x70bd, 0xf9e5, 0x1, 0x1);
        gbc.writeMem(0x6f62, { 0xc6, 0x56 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5ef4, gbc.sp());
        EXPECT(0x6f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00FA
        gbc.setState(0x6e09, 0x3fe6, 0x5410, 0xd059, 0x3cec, 0x9e2, 0x0, 0x1);
        gbc.writeMem(0x6e09, { 0xc6, 0x5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3fe6, gbc.sp());
        EXPECT(0x6e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00FB
        gbc.setState(0x91a9, 0xe235, 0x2e0, 0xe52a, 0xb204, 0x7820, 0x1, 0x0);
        gbc.writeMem(0x91a9, { 0xc6, 0x46 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe235, gbc.sp());
        EXPECT(0x91ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x91a9));
        EXPECT(0x46, gbc.readMem(0x91aa));
        // C6 00FC
        gbc.setState(0x7903, 0x287a, 0x4670, 0xb5e9, 0xdb82, 0xb926, 0x0, 0x0);
        gbc.writeMem(0x7903, { 0xc6, 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x287a, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 00FD
        gbc.setState(0x72f5, 0x6ef6, 0xb900, 0x7b3d, 0xbf79, 0x3336, 0x0, 0x1);
        gbc.writeMem(0x72f5, { 0xc6, 0xc6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6ef6, gbc.sp());
        EXPECT(0x72f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00FE
        gbc.setState(0x59d8, 0x72e4, 0x43f0, 0x6778, 0x2c35, 0x58a6, 0x1, 0x0);
        gbc.writeMem(0x59d8, { 0xc6, 0xe0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x72e4, gbc.sp());
        EXPECT(0x59da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 00FF
        gbc.setState(0x4ecb, 0xc369, 0xe590, 0x60bb, 0x17b8, 0xd77, 0x1, 0x0);
        gbc.writeMem(0x4ecb, { 0xc6, 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc369, gbc.sp());
        EXPECT(0x4ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0101
        gbc.setState(0xc8c, 0x4481, 0xfc30, 0x13ff, 0x1904, 0xb5c2, 0x1, 0x0);
        gbc.writeMem(0xc8c, { 0xc6, 0xe0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4481, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0102
        gbc.setState(0xb89, 0xd55d, 0x3ba0, 0xf7bb, 0xe7ee, 0x545e, 0x0, 0x0);
        gbc.writeMem(0xb89, { 0xc6, 0x5b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd55d, gbc.sp());
        EXPECT(0xb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0103
        gbc.setState(0xd2be, 0xa63a, 0xf220, 0x68eb, 0xb72a, 0x4d59, 0x0, 0x1);
        gbc.writeMem(0xd2be, { 0xc6, 0x63 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa63a, gbc.sp());
        EXPECT(0xd2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd2be));
        EXPECT(0x63, gbc.readMem(0xd2bf));
        // C6 0104
        gbc.setState(0x278, 0x7870, 0x8e80, 0x2e7b, 0x8f9d, 0x1de0, 0x1, 0x0);
        gbc.writeMem(0x278, { 0xc6, 0x2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7870, gbc.sp());
        EXPECT(0x27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0105
        gbc.setState(0xe95, 0x1c4b, 0x87f0, 0xbc79, 0xd888, 0x9560, 0x1, 0x1);
        gbc.writeMem(0xe95, { 0xc6, 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1c4b, gbc.sp());
        EXPECT(0xe97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0106
        gbc.setState(0x5b52, 0x587, 0xc6c0, 0xfab5, 0x9cc3, 0x109c, 0x0, 0x1);
        gbc.writeMem(0x5b52, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x587, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0107
        gbc.setState(0x7b0f, 0x390f, 0x5ec0, 0x7403, 0xb373, 0x78f2, 0x0, 0x0);
        gbc.writeMem(0x7b0f, { 0xc6, 0xf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x390f, gbc.sp());
        EXPECT(0x7b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0108
        gbc.setState(0x61fb, 0x5dec, 0x7cc0, 0xad64, 0xff3b, 0x225, 0x0, 0x0);
        gbc.writeMem(0x61fb, { 0xc6, 0x40 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5dec, gbc.sp());
        EXPECT(0x61fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0109
        gbc.setState(0xc4bf, 0xec7e, 0xcd60, 0xdec0, 0x7338, 0xf2fa, 0x0, 0x1);
        gbc.writeMem(0xc4bf, { 0xc6, 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xec7e, gbc.sp());
        EXPECT(0xc4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc4bf));
        EXPECT(0x89, gbc.readMem(0xc4c0));
        // C6 010A
        gbc.setState(0x5a11, 0xe1da, 0x8850, 0x112b, 0x5593, 0xaab6, 0x1, 0x0);
        gbc.writeMem(0x5a11, { 0xc6, 0x3f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe1da, gbc.sp());
        EXPECT(0x5a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 010C
        gbc.setState(0x3d86, 0xc992, 0xd420, 0x85fd, 0x9cab, 0xe439, 0x1, 0x0);
        gbc.writeMem(0x3d86, { 0xc6, 0x45 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc992, gbc.sp());
        EXPECT(0x3d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 010D
        gbc.setState(0x8ea0, 0xe669, 0xe630, 0x93ab, 0x4014, 0x9ef2, 0x1, 0x0);
        gbc.writeMem(0x8ea0, { 0xc6, 0xad });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe669, gbc.sp());
        EXPECT(0x8ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8ea0));
        EXPECT(0xad, gbc.readMem(0x8ea1));
        // C6 010E
        gbc.setState(0x7ec1, 0xaba, 0x2070, 0xe7ca, 0xcb0c, 0x80ed, 0x1, 0x0);
        gbc.writeMem(0x7ec1, { 0xc6, 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaba, gbc.sp());
        EXPECT(0x7ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 010F
        gbc.setState(0x6140, 0xaedb, 0xfc30, 0xeee5, 0x4f99, 0x5f7, 0x0, 0x0);
        gbc.writeMem(0x6140, { 0xc6, 0xc5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaedb, gbc.sp());
        EXPECT(0x6142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0110
        gbc.setState(0x8b06, 0x4a66, 0x1d70, 0x96d4, 0x96f1, 0xeea8, 0x1, 0x0);
        gbc.writeMem(0x8b06, { 0xc6, 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4a66, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8b06));
        EXPECT(0x9b, gbc.readMem(0x8b07));
        // C6 0111
        gbc.setState(0x62ef, 0xa04d, 0xb00, 0x333, 0x25b4, 0x97e, 0x1, 0x1);
        gbc.writeMem(0x62ef, { 0xc6, 0x10 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa04d, gbc.sp());
        EXPECT(0x62f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0112
        gbc.setState(0xdc0b, 0x64ba, 0xdff0, 0xd13a, 0x484d, 0x4a2c, 0x1, 0x1);
        gbc.writeMem(0xdc0b, { 0xc6, 0x2c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x64ba, gbc.sp());
        EXPECT(0xdc0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdc0b));
        EXPECT(0x2c, gbc.readMem(0xdc0c));
        // C6 0113
        gbc.setState(0xc4a6, 0x891f, 0x2ea0, 0x6149, 0x3e57, 0xf142, 0x1, 0x1);
        gbc.writeMem(0xc4a6, { 0xc6, 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x891f, gbc.sp());
        EXPECT(0xc4a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc4a6));
        EXPECT(0x95, gbc.readMem(0xc4a7));
        // C6 0114
        gbc.setState(0x479, 0x74d1, 0xbc40, 0xcd34, 0x7ee6, 0x2c7, 0x0, 0x1);
        gbc.writeMem(0x479, { 0xc6, 0xf0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x74d1, gbc.sp());
        EXPECT(0x47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0115
        gbc.setState(0xe314, 0x9eba, 0x8b80, 0x582c, 0x3506, 0x8fa6, 0x0, 0x0);
        gbc.writeMem(0xe314, { 0xc6, 0x90 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9eba, gbc.sp());
        EXPECT(0xe316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe314));
        EXPECT(0x90, gbc.readMem(0xe315));
        // C6 0116
        gbc.setState(0x1ed5, 0xcf3, 0x30e0, 0x6e66, 0xe592, 0xce0, 0x0, 0x1);
        gbc.writeMem(0x1ed5, { 0xc6, 0x16 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcf3, gbc.sp());
        EXPECT(0x1ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0117
        gbc.setState(0xb522, 0xd124, 0x6530, 0xc71c, 0x3895, 0xf04, 0x1, 0x0);
        gbc.writeMem(0xb522, { 0xc6, 0x7d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd124, gbc.sp());
        EXPECT(0xb524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb522));
        EXPECT(0x7d, gbc.readMem(0xb523));
        // C6 0118
        gbc.setState(0x4a45, 0x43bf, 0xe370, 0x606, 0x3f4, 0xfc9c, 0x0, 0x1);
        gbc.writeMem(0x4a45, { 0xc6, 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x43bf, gbc.sp());
        EXPECT(0x4a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0119
        gbc.setState(0x161d, 0x79c7, 0xbbf0, 0x3224, 0xffd5, 0xd1cb, 0x0, 0x0);
        gbc.writeMem(0x161d, { 0xc6, 0xf8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x79c7, gbc.sp());
        EXPECT(0x161f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 011A
        gbc.setState(0x7ecf, 0xddc4, 0x5eb0, 0xd533, 0x3475, 0xd87f, 0x0, 0x1);
        gbc.writeMem(0x7ecf, { 0xc6, 0xdd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xddc4, gbc.sp());
        EXPECT(0x7ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 011B
        gbc.setState(0xe6d8, 0x2b4b, 0x16d0, 0xefc, 0x2cf3, 0x88d, 0x0, 0x0);
        gbc.writeMem(0xe6d8, { 0xc6, 0xca });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2b4b, gbc.sp());
        EXPECT(0xe6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe6d8));
        EXPECT(0xca, gbc.readMem(0xe6d9));
        // C6 011C
        gbc.setState(0x2be6, 0x245b, 0x66a0, 0x77ca, 0xa0af, 0x4782, 0x0, 0x0);
        gbc.writeMem(0x2be6, { 0xc6, 0x6a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x245b, gbc.sp());
        EXPECT(0x2be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 011D
        gbc.setState(0x7ae7, 0xab33, 0xfd80, 0x20db, 0xaaaf, 0x9c21, 0x0, 0x0);
        gbc.writeMem(0x7ae7, { 0xc6, 0xa5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xab33, gbc.sp());
        EXPECT(0x7ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 011E
        gbc.setState(0x53dc, 0xc515, 0xe310, 0x63bd, 0xc42c, 0x4a11, 0x0, 0x0);
        gbc.writeMem(0x53dc, { 0xc6, 0xa2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc515, gbc.sp());
        EXPECT(0x53de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 011F
        gbc.setState(0x2ae, 0x9454, 0xb620, 0xc410, 0x7546, 0x530d, 0x1, 0x1);
        gbc.writeMem(0x2ae, { 0xc6, 0xb0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9454, gbc.sp());
        EXPECT(0x2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0120
        gbc.setState(0xbe0, 0xbd7c, 0x9b90, 0x53f7, 0x8109, 0x6430, 0x1, 0x0);
        gbc.writeMem(0xbe0, { 0xc6, 0xeb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbd7c, gbc.sp());
        EXPECT(0xbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0121
        gbc.setState(0x37f1, 0x9771, 0xe280, 0xc583, 0xf796, 0xf8aa, 0x1, 0x0);
        gbc.writeMem(0x37f1, { 0xc6, 0xe0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9771, gbc.sp());
        EXPECT(0x37f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0122
        gbc.setState(0x61d2, 0x70e4, 0x1bd0, 0xab7d, 0x6cf3, 0xdb84, 0x0, 0x1);
        gbc.writeMem(0x61d2, { 0xc6, 0x75 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x70e4, gbc.sp());
        EXPECT(0x61d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0123
        gbc.setState(0xec9f, 0x901b, 0x9950, 0xb5e1, 0xfbaf, 0xd481, 0x1, 0x0);
        gbc.writeMem(0xec9f, { 0xc6, 0x36 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x901b, gbc.sp());
        EXPECT(0xeca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xec9f));
        EXPECT(0x36, gbc.readMem(0xeca0));
        // C6 0124
        gbc.setState(0x7729, 0x2a0d, 0x7560, 0x849e, 0xbc37, 0x3cc7, 0x1, 0x0);
        gbc.writeMem(0x7729, { 0xc6, 0x7b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2a0d, gbc.sp());
        EXPECT(0x772b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0125
        gbc.setState(0x39d5, 0xa773, 0xfd70, 0xc963, 0x7dce, 0xdd2e, 0x1, 0x0);
        gbc.writeMem(0x39d5, { 0xc6, 0x62 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa773, gbc.sp());
        EXPECT(0x39d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0126
        gbc.setState(0xc534, 0x59f3, 0x5d70, 0x5879, 0xe0c5, 0x5d3, 0x0, 0x1);
        gbc.writeMem(0xc534, { 0xc6, 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x59f3, gbc.sp());
        EXPECT(0xc536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc534));
        EXPECT(0xa3, gbc.readMem(0xc535));
        // C6 0127
        gbc.setState(0x9a17, 0x3387, 0x69b0, 0xe8f8, 0x273e, 0x9f0c, 0x0, 0x0);
        gbc.writeMem(0x9a17, { 0xc6, 0x4d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3387, gbc.sp());
        EXPECT(0x9a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9a17));
        EXPECT(0x4d, gbc.readMem(0x9a18));
        // C6 0128
        gbc.setState(0x4865, 0x490e, 0xc7a0, 0x5cd3, 0x895f, 0xa4e0, 0x1, 0x0);
        gbc.writeMem(0x4865, { 0xc6, 0x12 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x490e, gbc.sp());
        EXPECT(0x4867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0129
        gbc.setState(0x95fc, 0xc75a, 0x6c40, 0x270b, 0x20f9, 0x3b13, 0x0, 0x1);
        gbc.writeMem(0x95fc, { 0xc6, 0x30 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc75a, gbc.sp());
        EXPECT(0x95fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x95fc));
        EXPECT(0x30, gbc.readMem(0x95fd));
        // C6 012A
        gbc.setState(0x70ba, 0xdb67, 0xdc50, 0xcb7c, 0xf7eb, 0x5cec, 0x1, 0x1);
        gbc.writeMem(0x70ba, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdb67, gbc.sp());
        EXPECT(0x70bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 012B
        gbc.setState(0x229a, 0xfd7, 0x8220, 0x597a, 0x4db6, 0x337a, 0x0, 0x1);
        gbc.writeMem(0x229a, { 0xc6, 0x19 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfd7, gbc.sp());
        EXPECT(0x229c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 012C
        gbc.setState(0xb903, 0x2c86, 0x8120, 0xb45e, 0x76d9, 0xae30, 0x0, 0x0);
        gbc.writeMem(0xb903, { 0xc6, 0xf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2c86, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb903));
        EXPECT(0xf, gbc.readMem(0xb904));
        // C6 012D
        gbc.setState(0x4e6c, 0x92, 0xdf40, 0xa898, 0x992a, 0xb88e, 0x1, 0x1);
        gbc.writeMem(0x4e6c, { 0xc6, 0xc6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x92, gbc.sp());
        EXPECT(0x4e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 012E
        gbc.setState(0x5444, 0x9eb9, 0x4820, 0xcce6, 0x661b, 0xc62d, 0x0, 0x0);
        gbc.writeMem(0x5444, { 0xc6, 0x11 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9eb9, gbc.sp());
        EXPECT(0x5446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 012F
        gbc.setState(0x78b, 0x99cd, 0x230, 0x3f36, 0x65cd, 0x55f9, 0x1, 0x0);
        gbc.writeMem(0x78b, { 0xc6, 0x6d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x99cd, gbc.sp());
        EXPECT(0x78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0130
        gbc.setState(0x6f27, 0x379b, 0xc770, 0xc79a, 0xe2fa, 0xb461, 0x0, 0x0);
        gbc.writeMem(0x6f27, { 0xc6, 0x11 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x379b, gbc.sp());
        EXPECT(0x6f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0131
        gbc.setState(0x5926, 0xe091, 0x580, 0x68cc, 0xe9bd, 0x85eb, 0x1, 0x0);
        gbc.writeMem(0x5926, { 0xc6, 0xa6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe091, gbc.sp());
        EXPECT(0x5928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0132
        gbc.setState(0x7d5c, 0x7051, 0x8170, 0x50a4, 0x7a1, 0x445b, 0x1, 0x0);
        gbc.writeMem(0x7d5c, { 0xc6, 0xb3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7051, gbc.sp());
        EXPECT(0x7d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0133
        gbc.setState(0x9ec6, 0x76cb, 0xea20, 0xda7c, 0x6d49, 0xe483, 0x1, 0x1);
        gbc.writeMem(0x9ec6, { 0xc6, 0x6a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x76cb, gbc.sp());
        EXPECT(0x9ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9ec6));
        EXPECT(0x6a, gbc.readMem(0x9ec7));
        // C6 0134
        gbc.setState(0xe6cd, 0xf26f, 0x6cc0, 0xf5e4, 0x9582, 0xa942, 0x0, 0x1);
        gbc.writeMem(0xe6cd, { 0xc6, 0xf0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf26f, gbc.sp());
        EXPECT(0xe6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe6cd));
        EXPECT(0xf0, gbc.readMem(0xe6ce));
        // C6 0136
        gbc.setState(0xed03, 0xcbe2, 0xdf50, 0xa220, 0x70aa, 0xc217, 0x1, 0x1);
        gbc.writeMem(0xed03, { 0xc6, 0xcf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcbe2, gbc.sp());
        EXPECT(0xed05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xed03));
        EXPECT(0xcf, gbc.readMem(0xed04));
        // C6 0137
        gbc.setState(0x30fd, 0x3a1b, 0xb360, 0x40e1, 0xe52e, 0x665, 0x1, 0x0);
        gbc.writeMem(0x30fd, { 0xc6, 0x3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3a1b, gbc.sp());
        EXPECT(0x30ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0138
        gbc.setState(0x3f6c, 0x1461, 0x5220, 0x66e8, 0xc835, 0xca95, 0x0, 0x0);
        gbc.writeMem(0x3f6c, { 0xc6, 0xc3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1461, gbc.sp());
        EXPECT(0x3f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0139
        gbc.setState(0xaed1, 0x6e3a, 0x8600, 0xde1, 0x3990, 0x97b9, 0x0, 0x0);
        gbc.writeMem(0xaed1, { 0xc6, 0x82 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6e3a, gbc.sp());
        EXPECT(0xaed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaed1));
        EXPECT(0x82, gbc.readMem(0xaed2));
        // C6 013B
        gbc.setState(0x2884, 0x3b58, 0x5c50, 0x9e69, 0x3676, 0x58a0, 0x0, 0x0);
        gbc.writeMem(0x2884, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x2886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 013C
        gbc.setState(0xe399, 0xe3b5, 0xff20, 0x1d74, 0xd053, 0xef91, 0x0, 0x1);
        gbc.writeMem(0xe399, { 0xc6, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe3b5, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe399));
        EXPECT(0xb8, gbc.readMem(0xe39a));
        // C6 013D
        gbc.setState(0x8d3c, 0x2090, 0x6170, 0x6b9f, 0x5d6a, 0x7349, 0x0, 0x0);
        gbc.writeMem(0x8d3c, { 0xc6, 0xeb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2090, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8d3c));
        EXPECT(0xeb, gbc.readMem(0x8d3d));
        // C6 013E
        gbc.setState(0x1d14, 0xf2dd, 0x3560, 0xfa48, 0xb37c, 0xd6ce, 0x0, 0x1);
        gbc.writeMem(0x1d14, { 0xc6, 0x11 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0x1d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 013F
        gbc.setState(0x599e, 0xdb7f, 0xa4f0, 0x557d, 0x23ad, 0x7bd4, 0x0, 0x1);
        gbc.writeMem(0x599e, { 0xc6, 0x5a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdb7f, gbc.sp());
        EXPECT(0x59a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0140
        gbc.setState(0xda71, 0x523a, 0x9ef0, 0x84b1, 0xca10, 0x9a5c, 0x0, 0x0);
        gbc.writeMem(0xda71, { 0xc6, 0x6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x523a, gbc.sp());
        EXPECT(0xda73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xda71));
        EXPECT(0x6, gbc.readMem(0xda72));
        // C6 0141
        gbc.setState(0xe02c, 0x5cc0, 0xd190, 0xf08e, 0x4343, 0x22e3, 0x0, 0x1);
        gbc.writeMem(0xe02c, { 0xc6, 0xc4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5cc0, gbc.sp());
        EXPECT(0xe02e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe02c));
        EXPECT(0xc4, gbc.readMem(0xe02d));
        // C6 0142
        gbc.setState(0xa687, 0xd5c1, 0xc4a0, 0x5b34, 0x3174, 0x7593, 0x0, 0x1);
        gbc.writeMem(0xa687, { 0xc6, 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd5c1, gbc.sp());
        EXPECT(0xa689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa687));
        EXPECT(0x4b, gbc.readMem(0xa688));
        // C6 0143
        gbc.setState(0xe503, 0xd8a5, 0xb950, 0x7332, 0xb828, 0xe0fe, 0x0, 0x1);
        gbc.writeMem(0xe503, { 0xc6, 0x7b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd8a5, gbc.sp());
        EXPECT(0xe505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe503));
        EXPECT(0x7b, gbc.readMem(0xe504));
        // C6 0144
        gbc.setState(0x3947, 0x7159, 0xde90, 0x8baa, 0x9800, 0x4b4, 0x1, 0x1);
        gbc.writeMem(0x3947, { 0xc6, 0xc8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7159, gbc.sp());
        EXPECT(0x3949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0145
        gbc.setState(0x6a32, 0xfb19, 0xff50, 0xb4b7, 0x1f75, 0xda75, 0x1, 0x0);
        gbc.writeMem(0x6a32, { 0xc6, 0xf4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfb19, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0146
        gbc.setState(0x9afd, 0x1e34, 0x3110, 0x362c, 0x54b2, 0x96a, 0x0, 0x0);
        gbc.writeMem(0x9afd, { 0xc6, 0x24 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1e34, gbc.sp());
        EXPECT(0x9aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9afd));
        EXPECT(0x24, gbc.readMem(0x9afe));
        // C6 0147
        gbc.setState(0x7ff3, 0x1621, 0x17a0, 0xa6d, 0xa07a, 0x7770, 0x0, 0x0);
        gbc.writeMem(0x7ff3, { 0xc6, 0xcb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1621, gbc.sp());
        EXPECT(0x7ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0148
        gbc.setState(0xe17a, 0xbf89, 0xd220, 0x7e63, 0xf1da, 0xb97b, 0x1, 0x1);
        gbc.writeMem(0xe17a, { 0xc6, 0x40 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbf89, gbc.sp());
        EXPECT(0xe17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe17a));
        EXPECT(0x40, gbc.readMem(0xe17b));
        // C6 0149
        gbc.setState(0x93eb, 0xff9f, 0x8b10, 0xd24, 0x4517, 0x78ab, 0x1, 0x1);
        gbc.writeMem(0x93eb, { 0xc6, 0x7d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xff9f, gbc.sp());
        EXPECT(0x93ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x93eb));
        EXPECT(0x7d, gbc.readMem(0x93ec));
        // C6 014B
        gbc.setState(0x3d4b, 0xffe3, 0x6c90, 0x8c6d, 0x603a, 0xa80b, 0x1, 0x1);
        gbc.writeMem(0x3d4b, { 0xc6, 0xb4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xffe3, gbc.sp());
        EXPECT(0x3d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 014C
        gbc.setState(0xa179, 0x4e4e, 0x46c0, 0xf3d4, 0x7926, 0xe1f, 0x1, 0x0);
        gbc.writeMem(0xa179, { 0xc6, 0x86 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4e4e, gbc.sp());
        EXPECT(0xa17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa179));
        EXPECT(0x86, gbc.readMem(0xa17a));
        // C6 014D
        gbc.setState(0xa496, 0xf1c, 0x3910, 0xac60, 0xbd35, 0xa67f, 0x1, 0x0);
        gbc.writeMem(0xa496, { 0xc6, 0xa3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf1c, gbc.sp());
        EXPECT(0xa498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa496));
        EXPECT(0xa3, gbc.readMem(0xa497));
        // C6 014E
        gbc.setState(0x6dd1, 0xc99d, 0x7e40, 0xab27, 0x6c00, 0xb670, 0x1, 0x0);
        gbc.writeMem(0x6dd1, { 0xc6, 0x8e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0x6dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 014F
        gbc.setState(0xa345, 0x42ac, 0x410, 0xd611, 0xe091, 0xc85f, 0x1, 0x0);
        gbc.writeMem(0xa345, { 0xc6, 0xbf });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x42ac, gbc.sp());
        EXPECT(0xa347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa345));
        EXPECT(0xbf, gbc.readMem(0xa346));
        // C6 0150
        gbc.setState(0xb7a4, 0x2d65, 0x73d0, 0x6b9a, 0x74f4, 0xedb4, 0x0, 0x0);
        gbc.writeMem(0xb7a4, { 0xc6, 0xdf });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0xb7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb7a4));
        EXPECT(0xdf, gbc.readMem(0xb7a5));
        // C6 0151
        gbc.setState(0xeaad, 0x951e, 0xdaf0, 0x20e3, 0x726d, 0x7244, 0x0, 0x1);
        gbc.writeMem(0xeaad, { 0xc6, 0xd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x951e, gbc.sp());
        EXPECT(0xeaaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xeaad));
        EXPECT(0xd, gbc.readMem(0xeaae));
        // C6 0152
        gbc.setState(0x393d, 0x3b6f, 0xd490, 0x4c21, 0x5db0, 0xbfd5, 0x0, 0x0);
        gbc.writeMem(0x393d, { 0xc6, 0xdc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3b6f, gbc.sp());
        EXPECT(0x393f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0153
        gbc.setState(0x2b35, 0x216a, 0x1c40, 0x2de0, 0x55a6, 0xa379, 0x0, 0x0);
        gbc.writeMem(0x2b35, { 0xc6, 0xfd });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x216a, gbc.sp());
        EXPECT(0x2b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0154
        gbc.setState(0x8565, 0x1b98, 0x28d0, 0x2b69, 0x8812, 0x699f, 0x0, 0x1);
        gbc.writeMem(0x8565, { 0xc6, 0x4f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1b98, gbc.sp());
        EXPECT(0x8567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8565));
        EXPECT(0x4f, gbc.readMem(0x8566));
        // C6 0155
        gbc.setState(0xc6be, 0xb34d, 0xb830, 0xc5b5, 0x32f1, 0xb26a, 0x0, 0x0);
        gbc.writeMem(0xc6be, { 0xc6, 0x1f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb34d, gbc.sp());
        EXPECT(0xc6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc6be));
        EXPECT(0x1f, gbc.readMem(0xc6bf));
        // C6 0156
        gbc.setState(0x72db, 0xf4cd, 0x1070, 0x8d2e, 0x9c6d, 0x70c0, 0x1, 0x1);
        gbc.writeMem(0x72db, { 0xc6, 0xce });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf4cd, gbc.sp());
        EXPECT(0x72dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0157
        gbc.setState(0x3b2, 0x5c4b, 0x3f20, 0x7828, 0x4d1f, 0x6227, 0x0, 0x1);
        gbc.writeMem(0x3b2, { 0xc6, 0xae });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5c4b, gbc.sp());
        EXPECT(0x3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0158
        gbc.setState(0x5dae, 0x9a91, 0xa010, 0x39a8, 0x956a, 0x6c36, 0x1, 0x1);
        gbc.writeMem(0x5dae, { 0xc6, 0x65 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9a91, gbc.sp());
        EXPECT(0x5db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0159
        gbc.setState(0x972e, 0x6aba, 0x67e0, 0x47b5, 0x52ac, 0x2d11, 0x0, 0x1);
        gbc.writeMem(0x972e, { 0xc6, 0x55 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6aba, gbc.sp());
        EXPECT(0x9730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x972e));
        EXPECT(0x55, gbc.readMem(0x972f));
        // C6 015A
        gbc.setState(0xc577, 0x9067, 0xcdc0, 0xa1a1, 0x32c0, 0x70a3, 0x1, 0x0);
        gbc.writeMem(0xc577, { 0xc6, 0x62 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9067, gbc.sp());
        EXPECT(0xc579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc577));
        EXPECT(0x62, gbc.readMem(0xc578));
        // C6 015B
        gbc.setState(0x1c9a, 0x5d93, 0x12f0, 0x8562, 0x328f, 0xe0ff, 0x0, 0x0);
        gbc.writeMem(0x1c9a, { 0xc6, 0xd3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5d93, gbc.sp());
        EXPECT(0x1c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 015C
        gbc.setState(0x7ba5, 0xdc45, 0xf8b0, 0x26c6, 0x176a, 0x416d, 0x0, 0x1);
        gbc.writeMem(0x7ba5, { 0xc6, 0xf });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdc45, gbc.sp());
        EXPECT(0x7ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 015D
        gbc.setState(0xc505, 0x23e2, 0x7dd0, 0x57bd, 0x81b9, 0xa4ab, 0x0, 0x0);
        gbc.writeMem(0xc505, { 0xc6, 0x7c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x23e2, gbc.sp());
        EXPECT(0xc507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc505));
        EXPECT(0x7c, gbc.readMem(0xc506));
        // C6 015E
        gbc.setState(0xdc13, 0xe071, 0xebf0, 0x35ad, 0xe65c, 0xdb77, 0x0, 0x1);
        gbc.writeMem(0xdc13, { 0xc6, 0x65 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0xdc15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdc13));
        EXPECT(0x65, gbc.readMem(0xdc14));
        // C6 015F
        gbc.setState(0xb7ab, 0x546b, 0x20a0, 0x1b79, 0xc13e, 0xc588, 0x0, 0x1);
        gbc.writeMem(0xb7ab, { 0xc6, 0x7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x546b, gbc.sp());
        EXPECT(0xb7ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb7ab));
        EXPECT(0x7, gbc.readMem(0xb7ac));
        // C6 0160
        gbc.setState(0x704f, 0xfde2, 0x4750, 0x8cf4, 0x2d30, 0xebd2, 0x1, 0x1);
        gbc.writeMem(0x704f, { 0xc6, 0x7e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfde2, gbc.sp());
        EXPECT(0x7051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0161
        gbc.setState(0x9f2a, 0xc99a, 0x9b80, 0x78b8, 0x2b22, 0x3450, 0x1, 0x1);
        gbc.writeMem(0x9f2a, { 0xc6, 0xc2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc99a, gbc.sp());
        EXPECT(0x9f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9f2a));
        EXPECT(0xc2, gbc.readMem(0x9f2b));
        // C6 0162
        gbc.setState(0x1214, 0xe32b, 0xa9e0, 0xf2d2, 0xc08c, 0xf4d0, 0x0, 0x1);
        gbc.writeMem(0x1214, { 0xc6, 0x1a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe32b, gbc.sp());
        EXPECT(0x1216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0163
        gbc.setState(0x6663, 0xadf9, 0x9a20, 0x1699, 0xf619, 0x56f3, 0x1, 0x1);
        gbc.writeMem(0x6663, { 0xc6, 0xb4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xadf9, gbc.sp());
        EXPECT(0x6665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0164
        gbc.setState(0x1b21, 0x234d, 0x8df0, 0xf1ca, 0x957e, 0xcc71, 0x1, 0x1);
        gbc.writeMem(0x1b21, { 0xc6, 0xb8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x234d, gbc.sp());
        EXPECT(0x1b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0165
        gbc.setState(0xbf88, 0xe400, 0x4180, 0x48b0, 0x57, 0x3c7b, 0x0, 0x0);
        gbc.writeMem(0xbf88, { 0xc6, 0x77 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe400, gbc.sp());
        EXPECT(0xbf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbf88));
        EXPECT(0x77, gbc.readMem(0xbf89));
        // C6 0166
        gbc.setState(0x9b3c, 0x8b36, 0x2400, 0xe15d, 0x6d6f, 0x5020, 0x0, 0x1);
        gbc.writeMem(0x9b3c, { 0xc6, 0x62 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8b36, gbc.sp());
        EXPECT(0x9b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9b3c));
        EXPECT(0x62, gbc.readMem(0x9b3d));
        // C6 0167
        gbc.setState(0x1bca, 0xec4e, 0xb2c0, 0x7a5c, 0x8129, 0xf289, 0x0, 0x0);
        gbc.writeMem(0x1bca, { 0xc6, 0x29 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xec4e, gbc.sp());
        EXPECT(0x1bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0168
        gbc.setState(0x5143, 0x9ae7, 0x6090, 0xfb19, 0x1a88, 0xcfd5, 0x0, 0x1);
        gbc.writeMem(0x5143, { 0xc6, 0xc6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9ae7, gbc.sp());
        EXPECT(0x5145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0169
        gbc.setState(0x6a6e, 0xb9a9, 0x8140, 0xe153, 0x39a2, 0x26cc, 0x1, 0x1);
        gbc.writeMem(0x6a6e, { 0xc6, 0x99 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb9a9, gbc.sp());
        EXPECT(0x6a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 016A
        gbc.setState(0x2825, 0xd330, 0x5a20, 0x787b, 0xa232, 0xa1d6, 0x0, 0x1);
        gbc.writeMem(0x2825, { 0xc6, 0xc3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd330, gbc.sp());
        EXPECT(0x2827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 016B
        gbc.setState(0xa901, 0xfca3, 0xda90, 0x9c6b, 0xb602, 0x4692, 0x0, 0x0);
        gbc.writeMem(0xa901, { 0xc6, 0xe5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfca3, gbc.sp());
        EXPECT(0xa903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa901));
        EXPECT(0xe5, gbc.readMem(0xa902));
        // C6 016C
        gbc.setState(0x505a, 0xbb27, 0x7ec0, 0x403a, 0xbea1, 0x28c4, 0x1, 0x0);
        gbc.writeMem(0x505a, { 0xc6, 0x9c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbb27, gbc.sp());
        EXPECT(0x505c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 016D
        gbc.setState(0x6238, 0xc858, 0x1460, 0xa76a, 0x556f, 0xde58, 0x1, 0x0);
        gbc.writeMem(0x6238, { 0xc6, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc858, gbc.sp());
        EXPECT(0x623a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 016E
        gbc.setState(0x47a, 0xd9da, 0xab00, 0x57ef, 0xa096, 0x44c8, 0x1, 0x0);
        gbc.writeMem(0x47a, { 0xc6, 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd9da, gbc.sp());
        EXPECT(0x47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 016F
        gbc.setState(0x1cf6, 0x6932, 0xc120, 0xb863, 0xd88e, 0x6f83, 0x0, 0x1);
        gbc.writeMem(0x1cf6, { 0xc6, 0xdd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6932, gbc.sp());
        EXPECT(0x1cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0170
        gbc.setState(0x105, 0x3125, 0x2830, 0xd7e0, 0xc008, 0x45fd, 0x0, 0x1);
        gbc.writeMem(0x105, { 0xc6, 0x34 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3125, gbc.sp());
        EXPECT(0x107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0171
        gbc.setState(0x930f, 0xb5fc, 0x74d0, 0x748e, 0x41b2, 0xcc67, 0x1, 0x0);
        gbc.writeMem(0x930f, { 0xc6, 0x75 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb5fc, gbc.sp());
        EXPECT(0x9311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x930f));
        EXPECT(0x75, gbc.readMem(0x9310));
        // C6 0172
        gbc.setState(0xec9b, 0x33c, 0x2120, 0x6ce6, 0x2690, 0x87f0, 0x1, 0x1);
        gbc.writeMem(0xec9b, { 0xc6, 0x74 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x33c, gbc.sp());
        EXPECT(0xec9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xec9b));
        EXPECT(0x74, gbc.readMem(0xec9c));
        // C6 0173
        gbc.setState(0x58ad, 0x7827, 0xf9b0, 0xc352, 0xf439, 0xccfa, 0x1, 0x1);
        gbc.writeMem(0x58ad, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7827, gbc.sp());
        EXPECT(0x58af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0174
        gbc.setState(0x640f, 0xbfb9, 0xf480, 0x8874, 0xa9d3, 0x663d, 0x1, 0x1);
        gbc.writeMem(0x640f, { 0xc6, 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbfb9, gbc.sp());
        EXPECT(0x6411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0176
        gbc.setState(0xb503, 0xad2a, 0x4360, 0x279, 0xee2d, 0xd20e, 0x1, 0x0);
        gbc.writeMem(0xb503, { 0xc6, 0x47 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xad2a, gbc.sp());
        EXPECT(0xb505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb503));
        EXPECT(0x47, gbc.readMem(0xb504));
        // C6 0177
        gbc.setState(0x1063, 0xd8a2, 0xbd50, 0xd72, 0xda02, 0x897e, 0x0, 0x1);
        gbc.writeMem(0x1063, { 0xc6, 0x36 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd8a2, gbc.sp());
        EXPECT(0x1065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0178
        gbc.setState(0x9ab5, 0x90e0, 0xac70, 0xfe5a, 0x17ef, 0x7857, 0x1, 0x0);
        gbc.writeMem(0x9ab5, { 0xc6, 0xc1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x90e0, gbc.sp());
        EXPECT(0x9ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9ab5));
        EXPECT(0xc1, gbc.readMem(0x9ab6));
        // C6 0179
        gbc.setState(0x223a, 0xf8f6, 0xd640, 0x6fd5, 0x3816, 0xef26, 0x1, 0x1);
        gbc.writeMem(0x223a, { 0xc6, 0x99 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf8f6, gbc.sp());
        EXPECT(0x223c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 017B
        gbc.setState(0x35d2, 0x19d1, 0xd7a0, 0x390e, 0xa727, 0xdb2e, 0x0, 0x0);
        gbc.writeMem(0x35d2, { 0xc6, 0xd4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x19d1, gbc.sp());
        EXPECT(0x35d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 017C
        gbc.setState(0x7b30, 0x225b, 0x760, 0x2861, 0x6fdc, 0x9604, 0x1, 0x0);
        gbc.writeMem(0x7b30, { 0xc6, 0x53 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x225b, gbc.sp());
        EXPECT(0x7b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 017D
        gbc.setState(0x7a7f, 0x2f33, 0xac60, 0x8ae5, 0xe8fc, 0xe0b2, 0x1, 0x1);
        gbc.writeMem(0x7a7f, { 0xc6, 0x69 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2f33, gbc.sp());
        EXPECT(0x7a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 017E
        gbc.setState(0x6824, 0xe73e, 0xc9a0, 0x7467, 0xdcd2, 0xbd12, 0x1, 0x0);
        gbc.writeMem(0x6824, { 0xc6, 0x3f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe73e, gbc.sp());
        EXPECT(0x6826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 017F
        gbc.setState(0x95b, 0x734, 0x31b0, 0x943a, 0x487e, 0xb538, 0x1, 0x1);
        gbc.writeMem(0x95b, { 0xc6, 0xd7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x734, gbc.sp());
        EXPECT(0x95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0180
        gbc.setState(0x3359, 0x681b, 0x79c0, 0x8ecf, 0xd1ba, 0xd2aa, 0x0, 0x0);
        gbc.writeMem(0x3359, { 0xc6, 0x20 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x681b, gbc.sp());
        EXPECT(0x335b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0181
        gbc.setState(0x4971, 0x520d, 0x6e50, 0x364e, 0x5e01, 0xd8f4, 0x0, 0x0);
        gbc.writeMem(0x4971, { 0xc6, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x520d, gbc.sp());
        EXPECT(0x4973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0182
        gbc.setState(0xa514, 0xe6c7, 0x660, 0xfae5, 0xd80a, 0xb977, 0x0, 0x0);
        gbc.writeMem(0xa514, { 0xc6, 0xe5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe6c7, gbc.sp());
        EXPECT(0xa516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa514));
        EXPECT(0xe5, gbc.readMem(0xa515));
        // C6 0183
        gbc.setState(0xb361, 0xcbb8, 0x8480, 0x4813, 0x75cd, 0x38cf, 0x0, 0x1);
        gbc.writeMem(0xb361, { 0xc6, 0x32 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcbb8, gbc.sp());
        EXPECT(0xb363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb361));
        EXPECT(0x32, gbc.readMem(0xb362));
        // C6 0184
        gbc.setState(0x5499, 0x897a, 0x1f20, 0xa010, 0xf24c, 0x4e8, 0x0, 0x1);
        gbc.writeMem(0x5499, { 0xc6, 0x91 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x897a, gbc.sp());
        EXPECT(0x549b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0185
        gbc.setState(0x14ad, 0xf904, 0x8a40, 0x7a72, 0x6886, 0x2c17, 0x1, 0x0);
        gbc.writeMem(0x14ad, { 0xc6, 0x4e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf904, gbc.sp());
        EXPECT(0x14af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0186
        gbc.setState(0xc72c, 0x39f3, 0x7670, 0x239f, 0x4bcc, 0x2498, 0x0, 0x0);
        gbc.writeMem(0xc72c, { 0xc6, 0x22 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x39f3, gbc.sp());
        EXPECT(0xc72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc72c));
        EXPECT(0x22, gbc.readMem(0xc72d));
        // C6 0187
        gbc.setState(0x1590, 0x1203, 0x7ef0, 0x826f, 0xfdeb, 0xeb9e, 0x1, 0x0);
        gbc.writeMem(0x1590, { 0xc6, 0x9c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1203, gbc.sp());
        EXPECT(0x1592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0188
        gbc.setState(0x7b85, 0xc5d1, 0xacc0, 0x9081, 0xbde6, 0x557d, 0x1, 0x1);
        gbc.writeMem(0x7b85, { 0xc6, 0x9f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc5d1, gbc.sp());
        EXPECT(0x7b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0189
        gbc.setState(0x790a, 0x97d4, 0xa520, 0xd2a0, 0xcbed, 0x4058, 0x0, 0x1);
        gbc.writeMem(0x790a, { 0xc6, 0x16 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x97d4, gbc.sp());
        EXPECT(0x790c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 018A
        gbc.setState(0x2489, 0xbfd5, 0x57b0, 0xa4a9, 0xf360, 0x7d08, 0x1, 0x0);
        gbc.writeMem(0x2489, { 0xc6, 0xa1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbfd5, gbc.sp());
        EXPECT(0x248b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 018B
        gbc.setState(0xc059, 0x515a, 0x4f50, 0x87bd, 0xb085, 0x8da7, 0x1, 0x0);
        gbc.writeMem(0xc059, { 0xc6, 0x26 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x515a, gbc.sp());
        EXPECT(0xc05b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc059));
        EXPECT(0x26, gbc.readMem(0xc05a));
        // C6 018C
        gbc.setState(0xbf7e, 0x95c5, 0x5c40, 0x28e3, 0xc91d, 0x1d84, 0x0, 0x1);
        gbc.writeMem(0xbf7e, { 0xc6, 0x41 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x95c5, gbc.sp());
        EXPECT(0xbf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbf7e));
        EXPECT(0x41, gbc.readMem(0xbf7f));
        // C6 018D
        gbc.setState(0x5581, 0x917, 0xd0c0, 0x19b, 0x853, 0x4fd5, 0x0, 0x1);
        gbc.writeMem(0x5581, { 0xc6, 0x97 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x917, gbc.sp());
        EXPECT(0x5583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 018E
        gbc.setState(0x350d, 0x5d9d, 0xd210, 0x441f, 0xeb1, 0xd478, 0x0, 0x0);
        gbc.writeMem(0x350d, { 0xc6, 0x5f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5d9d, gbc.sp());
        EXPECT(0x350f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 018F
        gbc.setState(0xba6e, 0x6d60, 0x2ab0, 0x170a, 0x9b50, 0x2bb0, 0x0, 0x1);
        gbc.writeMem(0xba6e, { 0xc6, 0x80 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6d60, gbc.sp());
        EXPECT(0xba70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xba6e));
        EXPECT(0x80, gbc.readMem(0xba6f));
        // C6 0190
        gbc.setState(0xaecd, 0xd83d, 0xab0, 0x5ef0, 0xe75b, 0x1d9b, 0x0, 0x1);
        gbc.writeMem(0xaecd, { 0xc6, 0x12 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd83d, gbc.sp());
        EXPECT(0xaecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaecd));
        EXPECT(0x12, gbc.readMem(0xaece));
        // C6 0191
        gbc.setState(0x5ea2, 0xdf0d, 0xb0a0, 0x36bd, 0xbc6a, 0xc819, 0x1, 0x0);
        gbc.writeMem(0x5ea2, { 0xc6, 0xe4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdf0d, gbc.sp());
        EXPECT(0x5ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0192
        gbc.setState(0xafca, 0x381f, 0x3750, 0xca2b, 0x6cff, 0xf0c8, 0x1, 0x0);
        gbc.writeMem(0xafca, { 0xc6, 0x1b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x381f, gbc.sp());
        EXPECT(0xafcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xafca));
        EXPECT(0x1b, gbc.readMem(0xafcb));
        // C6 0193
        gbc.setState(0x9753, 0xfa7, 0x6cb0, 0xec42, 0x73d4, 0xbcb0, 0x1, 0x0);
        gbc.writeMem(0x9753, { 0xc6, 0x1c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfa7, gbc.sp());
        EXPECT(0x9755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9753));
        EXPECT(0x1c, gbc.readMem(0x9754));
        // C6 0194
        gbc.setState(0xa835, 0x96e0, 0x4a20, 0xe4b9, 0xaccc, 0xb389, 0x0, 0x0);
        gbc.writeMem(0xa835, { 0xc6, 0xc3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x96e0, gbc.sp());
        EXPECT(0xa837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa835));
        EXPECT(0xc3, gbc.readMem(0xa836));
        // C6 0195
        gbc.setState(0xb37c, 0x839f, 0xc360, 0x2c9b, 0x3a85, 0x84d7, 0x1, 0x0);
        gbc.writeMem(0xb37c, { 0xc6, 0x95 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x839f, gbc.sp());
        EXPECT(0xb37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb37c));
        EXPECT(0x95, gbc.readMem(0xb37d));
        // C6 0196
        gbc.setState(0xb18, 0x132c, 0xe60, 0xfca5, 0x2eb3, 0x559c, 0x1, 0x0);
        gbc.writeMem(0xb18, { 0xc6, 0xaa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x132c, gbc.sp());
        EXPECT(0xb1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0197
        gbc.setState(0x751a, 0x4f2f, 0xa6d0, 0xa4f0, 0x20da, 0x2a8a, 0x1, 0x1);
        gbc.writeMem(0x751a, { 0xc6, 0x6f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4f2f, gbc.sp());
        EXPECT(0x751c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0198
        gbc.setState(0x19f5, 0x3f86, 0x3ab0, 0x7aea, 0x9506, 0x6057, 0x0, 0x1);
        gbc.writeMem(0x19f5, { 0xc6, 0x1d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3f86, gbc.sp());
        EXPECT(0x19f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 019A
        gbc.setState(0x57df, 0x128d, 0xa2b0, 0x43bb, 0x612f, 0x8b6, 0x1, 0x1);
        gbc.writeMem(0x57df, { 0xc6, 0xbf });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x128d, gbc.sp());
        EXPECT(0x57e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 019B
        gbc.setState(0x8219, 0x8b4c, 0x9ef0, 0xb736, 0x8926, 0x5096, 0x1, 0x0);
        gbc.writeMem(0x8219, { 0xc6, 0x7a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8b4c, gbc.sp());
        EXPECT(0x821b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8219));
        EXPECT(0x7a, gbc.readMem(0x821a));
        // C6 019C
        gbc.setState(0x8816, 0x43b1, 0x1de0, 0xefe1, 0xf80c, 0xb020, 0x1, 0x0);
        gbc.writeMem(0x8816, { 0xc6, 0xae });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x43b1, gbc.sp());
        EXPECT(0x8818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8816));
        EXPECT(0xae, gbc.readMem(0x8817));
        // C6 019D
        gbc.setState(0xaaac, 0x1870, 0xd890, 0x8e0f, 0x29b4, 0x4726, 0x1, 0x1);
        gbc.writeMem(0xaaac, { 0xc6, 0xa4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1870, gbc.sp());
        EXPECT(0xaaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaaac));
        EXPECT(0xa4, gbc.readMem(0xaaad));
        // C6 019E
        gbc.setState(0xc4e0, 0xe7da, 0x8140, 0xddd9, 0xd707, 0x4959, 0x1, 0x0);
        gbc.writeMem(0xc4e0, { 0xc6, 0x38 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe7da, gbc.sp());
        EXPECT(0xc4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc4e0));
        EXPECT(0x38, gbc.readMem(0xc4e1));
        // C6 019F
        gbc.setState(0x1364, 0x8ebd, 0xc870, 0xd91c, 0x689, 0x7589, 0x0, 0x1);
        gbc.writeMem(0x1364, { 0xc6, 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8ebd, gbc.sp());
        EXPECT(0x1366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01A0
        gbc.setState(0x924c, 0x7508, 0x1b10, 0xb775, 0x246d, 0x12df, 0x0, 0x1);
        gbc.writeMem(0x924c, { 0xc6, 0xfa });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7508, gbc.sp());
        EXPECT(0x924e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x924c));
        EXPECT(0xfa, gbc.readMem(0x924d));
        // C6 01A1
        gbc.setState(0xc00e, 0x478d, 0x7ad0, 0x68fa, 0x8c07, 0x2e3e, 0x1, 0x1);
        gbc.writeMem(0xc00e, { 0xc6, 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x478d, gbc.sp());
        EXPECT(0xc010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc00e));
        EXPECT(0xa6, gbc.readMem(0xc00f));
        // C6 01A2
        gbc.setState(0x84d2, 0xf01b, 0x47b0, 0x807b, 0xc678, 0xb394, 0x1, 0x0);
        gbc.writeMem(0x84d2, { 0xc6, 0x3f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf01b, gbc.sp());
        EXPECT(0x84d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x84d2));
        EXPECT(0x3f, gbc.readMem(0x84d3));
        // C6 01A3
        gbc.setState(0xfb7, 0xcfb8, 0xc70, 0x3d4d, 0xfb4b, 0x75ef, 0x0, 0x1);
        gbc.writeMem(0xfb7, { 0xc6, 0x1a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcfb8, gbc.sp());
        EXPECT(0xfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01A4
        gbc.setState(0x359b, 0x3a6d, 0x470, 0xef45, 0xdc66, 0x7331, 0x1, 0x0);
        gbc.writeMem(0x359b, { 0xc6, 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3a6d, gbc.sp());
        EXPECT(0x359d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01A5
        gbc.setState(0x384d, 0x32fa, 0xb520, 0x98ba, 0xdabc, 0x4882, 0x0, 0x0);
        gbc.writeMem(0x384d, { 0xc6, 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x32fa, gbc.sp());
        EXPECT(0x384f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01A7
        gbc.setState(0xe5fa, 0x26f, 0x6110, 0x16fb, 0x546e, 0x5c1a, 0x0, 0x0);
        gbc.writeMem(0xe5fa, { 0xc6, 0x5f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x26f, gbc.sp());
        EXPECT(0xe5fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe5fa));
        EXPECT(0x5f, gbc.readMem(0xe5fb));
        // C6 01A8
        gbc.setState(0x984a, 0xbad1, 0xf4e0, 0x8602, 0x5e89, 0x471, 0x0, 0x1);
        gbc.writeMem(0x984a, { 0xc6, 0x26 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbad1, gbc.sp());
        EXPECT(0x984c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x984a));
        EXPECT(0x26, gbc.readMem(0x984b));
        // C6 01A9
        gbc.setState(0x5e05, 0x7674, 0x6cc0, 0xdef1, 0xe096, 0x345f, 0x0, 0x1);
        gbc.writeMem(0x5e05, { 0xc6, 0xe8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7674, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01AA
        gbc.setState(0xd55b, 0xebe2, 0x520, 0xf3c3, 0x8cbb, 0xe64e, 0x0, 0x0);
        gbc.writeMem(0xd55b, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xebe2, gbc.sp());
        EXPECT(0xd55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd55b));
        EXPECT(0x84, gbc.readMem(0xd55c));
        // C6 01AB
        gbc.setState(0x3ea8, 0x9fdd, 0x7f30, 0xd125, 0xadf3, 0xb36e, 0x1, 0x0);
        gbc.writeMem(0x3ea8, { 0xc6, 0xf0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0x3eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01AC
        gbc.setState(0x63d8, 0x3097, 0x56d0, 0x45d2, 0x60ca, 0x8fae, 0x1, 0x1);
        gbc.writeMem(0x63d8, { 0xc6, 0x80 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3097, gbc.sp());
        EXPECT(0x63da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01AD
        gbc.setState(0x75aa, 0x37a8, 0x2a90, 0x2850, 0x5e32, 0xcc4b, 0x1, 0x0);
        gbc.writeMem(0x75aa, { 0xc6, 0xce });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0x75ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01AF
        gbc.setState(0x5d02, 0x7253, 0xb170, 0x5ae6, 0xe7e8, 0xaad4, 0x0, 0x0);
        gbc.writeMem(0x5d02, { 0xc6, 0x41 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7253, gbc.sp());
        EXPECT(0x5d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01B0
        gbc.setState(0xc5ef, 0x81e9, 0x5250, 0x121e, 0x9f7, 0x2303, 0x1, 0x1);
        gbc.writeMem(0xc5ef, { 0xc6, 0xa6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x81e9, gbc.sp());
        EXPECT(0xc5f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc5ef));
        EXPECT(0xa6, gbc.readMem(0xc5f0));
        // C6 01B1
        gbc.setState(0x21ad, 0x5d5b, 0x1620, 0xb17c, 0x94e0, 0xcbbb, 0x0, 0x0);
        gbc.writeMem(0x21ad, { 0xc6, 0xab });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5d5b, gbc.sp());
        EXPECT(0x21af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01B2
        gbc.setState(0x30eb, 0xb6cd, 0xbe60, 0xdcd5, 0x62f8, 0x341, 0x0, 0x0);
        gbc.writeMem(0x30eb, { 0xc6, 0x4e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb6cd, gbc.sp());
        EXPECT(0x30ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01B3
        gbc.setState(0xc515, 0xcddf, 0xed00, 0xec4a, 0xdf8, 0x6bd3, 0x0, 0x1);
        gbc.writeMem(0xc515, { 0xc6, 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcddf, gbc.sp());
        EXPECT(0xc517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc515));
        EXPECT(0x94, gbc.readMem(0xc516));
        // C6 01B4
        gbc.setState(0xa8d7, 0x1f07, 0xa360, 0x1700, 0x11b6, 0x7df9, 0x0, 0x0);
        gbc.writeMem(0xa8d7, { 0xc6, 0xd8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1f07, gbc.sp());
        EXPECT(0xa8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa8d7));
        EXPECT(0xd8, gbc.readMem(0xa8d8));
        // C6 01B5
        gbc.setState(0xa0fb, 0x1c4d, 0x6110, 0xd186, 0xb8c9, 0x5aad, 0x1, 0x1);
        gbc.writeMem(0xa0fb, { 0xc6, 0x45 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1c4d, gbc.sp());
        EXPECT(0xa0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa0fb));
        EXPECT(0x45, gbc.readMem(0xa0fc));
        // C6 01B7
        gbc.setState(0x2822, 0x1fca, 0xd450, 0xd49b, 0x65e7, 0x2282, 0x0, 0x1);
        gbc.writeMem(0x2822, { 0xc6, 0xd8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1fca, gbc.sp());
        EXPECT(0x2824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01B8
        gbc.setState(0x2e51, 0x9b46, 0xfa10, 0x26c1, 0xe437, 0xd184, 0x0, 0x1);
        gbc.writeMem(0x2e51, { 0xc6, 0xaf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9b46, gbc.sp());
        EXPECT(0x2e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01B9
        gbc.setState(0x606f, 0x7042, 0xaee0, 0x4df7, 0x95ef, 0xb533, 0x1, 0x1);
        gbc.writeMem(0x606f, { 0xc6, 0x7b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7042, gbc.sp());
        EXPECT(0x6071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01BA
        gbc.setState(0x7b09, 0x74bc, 0x9b70, 0x268c, 0xa49a, 0xcaab, 0x1, 0x0);
        gbc.writeMem(0x7b09, { 0xc6, 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x74bc, gbc.sp());
        EXPECT(0x7b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01BB
        gbc.setState(0xdcae, 0x9bcc, 0x4640, 0xb059, 0x4857, 0xeff6, 0x0, 0x1);
        gbc.writeMem(0xdcae, { 0xc6, 0x97 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9bcc, gbc.sp());
        EXPECT(0xdcb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdcae));
        EXPECT(0x97, gbc.readMem(0xdcaf));
        // C6 01BC
        gbc.setState(0x5775, 0x2ea2, 0xdc70, 0x55e8, 0x4626, 0x6733, 0x0, 0x0);
        gbc.writeMem(0x5775, { 0xc6, 0xa2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2ea2, gbc.sp());
        EXPECT(0x5777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01BD
        gbc.setState(0xab46, 0xa51c, 0xd940, 0x2029, 0x6759, 0xaafb, 0x0, 0x0);
        gbc.writeMem(0xab46, { 0xc6, 0x5a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa51c, gbc.sp());
        EXPECT(0xab48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xab46));
        EXPECT(0x5a, gbc.readMem(0xab47));
        // C6 01BE
        gbc.setState(0x6e85, 0xe36b, 0x8e30, 0x29ad, 0xd6cb, 0x2383, 0x0, 0x1);
        gbc.writeMem(0x6e85, { 0xc6, 0xba });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe36b, gbc.sp());
        EXPECT(0x6e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01BF
        gbc.setState(0x7d75, 0x33ca, 0x6df0, 0x48d0, 0xb076, 0xc473, 0x0, 0x0);
        gbc.writeMem(0x7d75, { 0xc6, 0xb4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x33ca, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01C0
        gbc.setState(0x844e, 0xa9e9, 0x84b0, 0xfaaa, 0xe233, 0xd93d, 0x0, 0x1);
        gbc.writeMem(0x844e, { 0xc6, 0x90 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa9e9, gbc.sp());
        EXPECT(0x8450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x844e));
        EXPECT(0x90, gbc.readMem(0x844f));
        // C6 01C2
        gbc.setState(0x8f71, 0xeda5, 0xa5b0, 0x4185, 0xa5e9, 0xf794, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0xc6, 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeda5, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8f71));
        EXPECT(0x47, gbc.readMem(0x8f72));
        // C6 01C3
        gbc.setState(0x42d2, 0x84d6, 0xba60, 0x5626, 0x6722, 0x5c9c, 0x0, 0x0);
        gbc.writeMem(0x42d2, { 0xc6, 0x9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x84d6, gbc.sp());
        EXPECT(0x42d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01C4
        gbc.setState(0xa302, 0xe1d0, 0x9e00, 0x5498, 0xce22, 0xf6c2, 0x0, 0x0);
        gbc.writeMem(0xa302, { 0xc6, 0x2b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe1d0, gbc.sp());
        EXPECT(0xa304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa302));
        EXPECT(0x2b, gbc.readMem(0xa303));
        // C6 01C5
        gbc.setState(0x97d2, 0x474d, 0x2450, 0xab1e, 0x1f00, 0x562d, 0x0, 0x0);
        gbc.writeMem(0x97d2, { 0xc6, 0x27 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x474d, gbc.sp());
        EXPECT(0x97d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x97d2));
        EXPECT(0x27, gbc.readMem(0x97d3));
        // C6 01C6
        gbc.setState(0x7168, 0x12ef, 0xb2d0, 0xfcee, 0x3180, 0x7dbc, 0x1, 0x0);
        gbc.writeMem(0x7168, { 0xc6, 0xd4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x12ef, gbc.sp());
        EXPECT(0x716a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01C7
        gbc.setState(0x90a5, 0xf011, 0x8290, 0x9ee6, 0x5fed, 0x8b8b, 0x1, 0x1);
        gbc.writeMem(0x90a5, { 0xc6, 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf011, gbc.sp());
        EXPECT(0x90a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x90a5));
        EXPECT(0x7e, gbc.readMem(0x90a6));
        // C6 01C8
        gbc.setState(0x6e08, 0xf5c7, 0xc780, 0xa2d6, 0x5b4e, 0x9399, 0x1, 0x1);
        gbc.writeMem(0x6e08, { 0xc6, 0xc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf5c7, gbc.sp());
        EXPECT(0x6e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01C9
        gbc.setState(0xb460, 0xba83, 0xe4f0, 0x35d2, 0x1225, 0x4cef, 0x0, 0x0);
        gbc.writeMem(0xb460, { 0xc6, 0xd9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xba83, gbc.sp());
        EXPECT(0xb462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb460));
        EXPECT(0xd9, gbc.readMem(0xb461));
        // C6 01CA
        gbc.setState(0xadae, 0x9937, 0xac60, 0x322f, 0x1d6e, 0xcb48, 0x1, 0x0);
        gbc.writeMem(0xadae, { 0xc6, 0x51 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9937, gbc.sp());
        EXPECT(0xadb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xadae));
        EXPECT(0x51, gbc.readMem(0xadaf));
        // C6 01CB
        gbc.setState(0x9390, 0xe826, 0x5100, 0xa2e3, 0x1cd3, 0xa4dd, 0x1, 0x0);
        gbc.writeMem(0x9390, { 0xc6, 0x65 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe826, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9390));
        EXPECT(0x65, gbc.readMem(0x9391));
        // C6 01CC
        gbc.setState(0x4aee, 0xe0c7, 0xcce0, 0x162a, 0x5eb9, 0xade7, 0x1, 0x1);
        gbc.writeMem(0x4aee, { 0xc6, 0x30 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe0c7, gbc.sp());
        EXPECT(0x4af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01CD
        gbc.setState(0x9179, 0x949a, 0x8ba0, 0xa52f, 0xe530, 0x566f, 0x0, 0x1);
        gbc.writeMem(0x9179, { 0xc6, 0x6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x949a, gbc.sp());
        EXPECT(0x917b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9179));
        EXPECT(0x6, gbc.readMem(0x917a));
        // C6 01CE
        gbc.setState(0xc683, 0x9c1b, 0xb510, 0x25da, 0xb0c0, 0xd29c, 0x1, 0x0);
        gbc.writeMem(0xc683, { 0xc6, 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9c1b, gbc.sp());
        EXPECT(0xc685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc683));
        EXPECT(0xc1, gbc.readMem(0xc684));
        // C6 01CF
        gbc.setState(0x97a3, 0x4299, 0x2ef0, 0xe433, 0x2492, 0xf5b, 0x1, 0x0);
        gbc.writeMem(0x97a3, { 0xc6, 0x20 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4299, gbc.sp());
        EXPECT(0x97a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x97a3));
        EXPECT(0x20, gbc.readMem(0x97a4));
        // C6 01D0
        gbc.setState(0xeeae, 0xf2b1, 0x46f0, 0xda47, 0xe938, 0xc099, 0x1, 0x1);
        gbc.writeMem(0xeeae, { 0xc6, 0x46 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf2b1, gbc.sp());
        EXPECT(0xeeb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xeeae));
        EXPECT(0x46, gbc.readMem(0xeeaf));
        // C6 01D2
        gbc.setState(0x7db8, 0xacc9, 0xd130, 0xfadf, 0x733b, 0x3b0a, 0x0, 0x0);
        gbc.writeMem(0x7db8, { 0xc6, 0xdd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xacc9, gbc.sp());
        EXPECT(0x7dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01D3
        gbc.setState(0x4d5c, 0x9b8e, 0x2140, 0xb75f, 0xdd9c, 0xbae0, 0x1, 0x0);
        gbc.writeMem(0x4d5c, { 0xc6, 0x1f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9b8e, gbc.sp());
        EXPECT(0x4d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01D4
        gbc.setState(0x56ae, 0x7ce9, 0x2650, 0x856d, 0x8f46, 0xb7d9, 0x0, 0x0);
        gbc.writeMem(0x56ae, { 0xc6, 0x67 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7ce9, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01D5
        gbc.setState(0x1151, 0x47a, 0x86a0, 0xc225, 0xd516, 0xd303, 0x1, 0x1);
        gbc.writeMem(0x1151, { 0xc6, 0xf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x47a, gbc.sp());
        EXPECT(0x1153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01D6
        gbc.setState(0xd9ec, 0x8485, 0x2060, 0x5395, 0xed41, 0x6e48, 0x0, 0x0);
        gbc.writeMem(0xd9ec, { 0xc6, 0x98 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8485, gbc.sp());
        EXPECT(0xd9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd9ec));
        EXPECT(0x98, gbc.readMem(0xd9ed));
        // C6 01D7
        gbc.setState(0x802, 0x2a95, 0xd210, 0x499a, 0x6724, 0x7eac, 0x0, 0x1);
        gbc.writeMem(0x802, { 0xc6, 0x51 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2a95, gbc.sp());
        EXPECT(0x804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01D8
        gbc.setState(0xadcb, 0x543a, 0x28d0, 0xb0b0, 0x9711, 0xc10, 0x1, 0x1);
        gbc.writeMem(0xadcb, { 0xc6, 0x99 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x543a, gbc.sp());
        EXPECT(0xadcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xadcb));
        EXPECT(0x99, gbc.readMem(0xadcc));
        // C6 01D9
        gbc.setState(0xa1eb, 0x23ad, 0x3910, 0xccb3, 0x9e8, 0xc9e1, 0x1, 0x1);
        gbc.writeMem(0xa1eb, { 0xc6, 0x94 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x23ad, gbc.sp());
        EXPECT(0xa1ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa1eb));
        EXPECT(0x94, gbc.readMem(0xa1ec));
        // C6 01DA
        gbc.setState(0x958d, 0x5b5e, 0xa030, 0xdefe, 0xd358, 0x997b, 0x1, 0x1);
        gbc.writeMem(0x958d, { 0xc6, 0xed });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5b5e, gbc.sp());
        EXPECT(0x958f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x958d));
        EXPECT(0xed, gbc.readMem(0x958e));
        // C6 01DB
        gbc.setState(0x4ef4, 0x89ee, 0x1c00, 0x9e05, 0xc93d, 0xd4be, 0x1, 0x0);
        gbc.writeMem(0x4ef4, { 0xc6, 0xfc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x89ee, gbc.sp());
        EXPECT(0x4ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01DC
        gbc.setState(0x4c8e, 0xa387, 0x9260, 0xb949, 0xc7cc, 0xab44, 0x0, 0x0);
        gbc.writeMem(0x4c8e, { 0xc6, 0xf0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa387, gbc.sp());
        EXPECT(0x4c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01DD
        gbc.setState(0xdd71, 0x77d7, 0x88f0, 0xeee1, 0xe6f, 0xa5a1, 0x1, 0x1);
        gbc.writeMem(0xdd71, { 0xc6, 0x57 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x77d7, gbc.sp());
        EXPECT(0xdd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdd71));
        EXPECT(0x57, gbc.readMem(0xdd72));
        // C6 01DE
        gbc.setState(0x3937, 0x3e01, 0xa970, 0x6cc0, 0x98dc, 0x17d2, 0x1, 0x0);
        gbc.writeMem(0x3937, { 0xc6, 0xd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3e01, gbc.sp());
        EXPECT(0x3939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01DF
        gbc.setState(0xefd1, 0x56e0, 0x30e0, 0x8ad3, 0x1732, 0x7de4, 0x1, 0x0);
        gbc.writeMem(0xefd1, { 0xc6, 0x8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x56e0, gbc.sp());
        EXPECT(0xefd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xefd1));
        EXPECT(0x8, gbc.readMem(0xefd2));
        // C6 01E0
        gbc.setState(0x9c49, 0x4b0e, 0xffa0, 0xe39, 0x4535, 0xd699, 0x1, 0x0);
        gbc.writeMem(0x9c49, { 0xc6, 0xaa });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4b0e, gbc.sp());
        EXPECT(0x9c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9c49));
        EXPECT(0xaa, gbc.readMem(0x9c4a));
        // C6 01E1
        gbc.setState(0x7a0a, 0xfd4b, 0x6ba0, 0x1bbd, 0x64e0, 0xf0b0, 0x1, 0x0);
        gbc.writeMem(0x7a0a, { 0xc6, 0xfb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfd4b, gbc.sp());
        EXPECT(0x7a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01E2
        gbc.setState(0x9b97, 0x26f9, 0x3d60, 0x951f, 0x8925, 0x79cd, 0x1, 0x0);
        gbc.writeMem(0x9b97, { 0xc6, 0x15 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x26f9, gbc.sp());
        EXPECT(0x9b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9b97));
        EXPECT(0x15, gbc.readMem(0x9b98));
        // C6 01E3
        gbc.setState(0xa3ac, 0x83a0, 0x9010, 0xbd0f, 0x5fdc, 0x9a9b, 0x0, 0x0);
        gbc.writeMem(0xa3ac, { 0xc6, 0x19 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x83a0, gbc.sp());
        EXPECT(0xa3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa3ac));
        EXPECT(0x19, gbc.readMem(0xa3ad));
        // C6 01E4
        gbc.setState(0x72f4, 0x5fc9, 0x8400, 0x691b, 0x2b26, 0x7001, 0x0, 0x1);
        gbc.writeMem(0x72f4, { 0xc6, 0x5b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5fc9, gbc.sp());
        EXPECT(0x72f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01E5
        gbc.setState(0x70b4, 0x1d5f, 0x77d0, 0xc3d0, 0xb96a, 0xb849, 0x0, 0x0);
        gbc.writeMem(0x70b4, { 0xc6, 0x95 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1d5f, gbc.sp());
        EXPECT(0x70b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01E6
        gbc.setState(0x7f74, 0xdebb, 0xa710, 0xf998, 0xaa31, 0x2500, 0x1, 0x0);
        gbc.writeMem(0x7f74, { 0xc6, 0xa });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdebb, gbc.sp());
        EXPECT(0x7f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01E7
        gbc.setState(0xe071, 0x155f, 0x450, 0x2568, 0xe346, 0x1312, 0x0, 0x1);
        gbc.writeMem(0xe071, { 0xc6, 0x99 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x155f, gbc.sp());
        EXPECT(0xe073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe071));
        EXPECT(0x99, gbc.readMem(0xe072));
        // C6 01E8
        gbc.setState(0x435c, 0xb983, 0x9ff0, 0xb18a, 0x6054, 0xd548, 0x0, 0x1);
        gbc.writeMem(0x435c, { 0xc6, 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb983, gbc.sp());
        EXPECT(0x435e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01E9
        gbc.setState(0x4583, 0x81f6, 0x8c0, 0x870b, 0x382e, 0x777b, 0x1, 0x0);
        gbc.writeMem(0x4583, { 0xc6, 0xe9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x81f6, gbc.sp());
        EXPECT(0x4585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01EA
        gbc.setState(0xacd0, 0x9ad5, 0x8680, 0x632f, 0x381b, 0x1d9a, 0x1, 0x1);
        gbc.writeMem(0xacd0, { 0xc6, 0x51 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9ad5, gbc.sp());
        EXPECT(0xacd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xacd0));
        EXPECT(0x51, gbc.readMem(0xacd1));
        // C6 01EB
        gbc.setState(0x2683, 0xce7a, 0xbc30, 0x3db9, 0xa760, 0xe7c8, 0x1, 0x1);
        gbc.writeMem(0x2683, { 0xc6, 0x87 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0x2685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01EC
        gbc.setState(0x91d8, 0xe44, 0x9ee0, 0xaac2, 0xb0d0, 0xa47c, 0x0, 0x1);
        gbc.writeMem(0x91d8, { 0xc6, 0x17 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe44, gbc.sp());
        EXPECT(0x91da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x91d8));
        EXPECT(0x17, gbc.readMem(0x91d9));
        // C6 01ED
        gbc.setState(0x5a54, 0x360b, 0x6270, 0xdbc4, 0x1326, 0x6eba, 0x0, 0x0);
        gbc.writeMem(0x5a54, { 0xc6, 0x61 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x360b, gbc.sp());
        EXPECT(0x5a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01EE
        gbc.setState(0x8630, 0xa673, 0xa60, 0x63d1, 0xed67, 0xba28, 0x0, 0x1);
        gbc.writeMem(0x8630, { 0xc6, 0x58 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa673, gbc.sp());
        EXPECT(0x8632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8630));
        EXPECT(0x58, gbc.readMem(0x8631));
        // C6 01EF
        gbc.setState(0xb47, 0x4e69, 0xd810, 0x5dda, 0x558c, 0x250e, 0x1, 0x0);
        gbc.writeMem(0xb47, { 0xc6, 0x55 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4e69, gbc.sp());
        EXPECT(0xb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01F0
        gbc.setState(0x2fb0, 0xa69a, 0xcc10, 0x93ca, 0x54dc, 0x4586, 0x1, 0x1);
        gbc.writeMem(0x2fb0, { 0xc6, 0xad });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa69a, gbc.sp());
        EXPECT(0x2fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01F1
        gbc.setState(0x37d7, 0xc57, 0x7c30, 0xcd04, 0x5b32, 0x5a5c, 0x1, 0x1);
        gbc.writeMem(0x37d7, { 0xc6, 0x96 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc57, gbc.sp());
        EXPECT(0x37d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01F2
        gbc.setState(0x9034, 0x1496, 0xaf40, 0x2d45, 0xc76d, 0x585b, 0x1, 0x0);
        gbc.writeMem(0x9034, { 0xc6, 0xa0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1496, gbc.sp());
        EXPECT(0x9036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9034));
        EXPECT(0xa0, gbc.readMem(0x9035));
        // C6 01F3
        gbc.setState(0x635d, 0xee57, 0x20a0, 0x7e90, 0xb982, 0xe979, 0x0, 0x0);
        gbc.writeMem(0x635d, { 0xc6, 0x25 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xee57, gbc.sp());
        EXPECT(0x635f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01F4
        gbc.setState(0x4bc, 0x211a, 0x5a60, 0xa18, 0x1729, 0x9afa, 0x0, 0x1);
        gbc.writeMem(0x4bc, { 0xc6, 0x53 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x211a, gbc.sp());
        EXPECT(0x4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01F6
        gbc.setState(0xe27b, 0x40f0, 0x9b20, 0x718e, 0xd8b9, 0xcd6d, 0x0, 0x1);
        gbc.writeMem(0xe27b, { 0xc6, 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x40f0, gbc.sp());
        EXPECT(0xe27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe27b));
        EXPECT(0x76, gbc.readMem(0xe27c));
        // C6 01F7
        gbc.setState(0x8630, 0x71ba, 0x5230, 0xe977, 0xc7ae, 0x7c89, 0x0, 0x0);
        gbc.writeMem(0x8630, { 0xc6, 0x58 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x71ba, gbc.sp());
        EXPECT(0x8632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8630));
        EXPECT(0x58, gbc.readMem(0x8631));
        // C6 01F8
        gbc.setState(0x1f85, 0x642c, 0x6f00, 0xd174, 0xb7ad, 0x2be4, 0x1, 0x1);
        gbc.writeMem(0x1f85, { 0xc6, 0xe0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x642c, gbc.sp());
        EXPECT(0x1f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01F9
        gbc.setState(0xcd52, 0x1735, 0xd030, 0x7665, 0x9338, 0x4ad0, 0x1, 0x0);
        gbc.writeMem(0xcd52, { 0xc6, 0x8b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1735, gbc.sp());
        EXPECT(0xcd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcd52));
        EXPECT(0x8b, gbc.readMem(0xcd53));
        // C6 01FA
        gbc.setState(0x9ba0, 0x453d, 0xbc20, 0x1ece, 0xc5bd, 0xb393, 0x1, 0x0);
        gbc.writeMem(0x9ba0, { 0xc6, 0x3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x453d, gbc.sp());
        EXPECT(0x9ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9ba0));
        EXPECT(0x3, gbc.readMem(0x9ba1));
        // C6 01FB
        gbc.setState(0x8312, 0x2253, 0xfb30, 0xc608, 0x9531, 0x313e, 0x1, 0x0);
        gbc.writeMem(0x8312, { 0xc6, 0xf3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2253, gbc.sp());
        EXPECT(0x8314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8312));
        EXPECT(0xf3, gbc.readMem(0x8313));
        // C6 01FC
        gbc.setState(0x965e, 0x141f, 0xdac0, 0x1427, 0x6a3, 0xac50, 0x0, 0x0);
        gbc.writeMem(0x965e, { 0xc6, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x141f, gbc.sp());
        EXPECT(0x9660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x965e));
        EXPECT(0x2d, gbc.readMem(0x965f));
        // C6 01FD
        gbc.setState(0x79be, 0xdfae, 0x640, 0x7bb8, 0xf12e, 0x2848, 0x0, 0x0);
        gbc.writeMem(0x79be, { 0xc6, 0x9c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdfae, gbc.sp());
        EXPECT(0x79c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 01FE
        gbc.setState(0x4437, 0x2953, 0xa5b0, 0xcef8, 0xc29f, 0xa003, 0x1, 0x0);
        gbc.writeMem(0x4437, { 0xc6, 0x6a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2953, gbc.sp());
        EXPECT(0x4439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 01FF
        gbc.setState(0xcb28, 0x79a7, 0xdd00, 0x690c, 0xe205, 0xb92e, 0x0, 0x1);
        gbc.writeMem(0xcb28, { 0xc6, 0x4f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x79a7, gbc.sp());
        EXPECT(0xcb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcb28));
        EXPECT(0x4f, gbc.readMem(0xcb29));
        // C6 0201
        gbc.setState(0xbe1a, 0xd5af, 0x5810, 0xfd80, 0x1991, 0x5a90, 0x1, 0x0);
        gbc.writeMem(0xbe1a, { 0xc6, 0xed });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd5af, gbc.sp());
        EXPECT(0xbe1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbe1a));
        EXPECT(0xed, gbc.readMem(0xbe1b));
        // C6 0202
        gbc.setState(0x52fe, 0x38ae, 0xbc80, 0x43e, 0x92c2, 0x354, 0x1, 0x0);
        gbc.writeMem(0x52fe, { 0xc6, 0x24 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x38ae, gbc.sp());
        EXPECT(0x5300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0203
        gbc.setState(0x691d, 0xc7a, 0xe9d0, 0xe71a, 0x5c7d, 0x741c, 0x0, 0x0);
        gbc.writeMem(0x691d, { 0xc6, 0x94 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc7a, gbc.sp());
        EXPECT(0x691f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0204
        gbc.setState(0x9065, 0x6d6e, 0xc00, 0x4a64, 0xfa25, 0x386a, 0x0, 0x1);
        gbc.writeMem(0x9065, { 0xc6, 0x66 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6d6e, gbc.sp());
        EXPECT(0x9067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9065));
        EXPECT(0x66, gbc.readMem(0x9066));
        // C6 0205
        gbc.setState(0x1154, 0x374f, 0x64d0, 0x84b7, 0x9d70, 0x27c9, 0x0, 0x0);
        gbc.writeMem(0x1154, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x374f, gbc.sp());
        EXPECT(0x1156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0206
        gbc.setState(0x874a, 0x899c, 0x8b60, 0xdc15, 0xc4c9, 0xebab, 0x0, 0x1);
        gbc.writeMem(0x874a, { 0xc6, 0x7a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x899c, gbc.sp());
        EXPECT(0x874c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x874a));
        EXPECT(0x7a, gbc.readMem(0x874b));
        // C6 0207
        gbc.setState(0x8fda, 0xdc76, 0x78a0, 0x69e9, 0xe38d, 0xd3b3, 0x1, 0x0);
        gbc.writeMem(0x8fda, { 0xc6, 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdc76, gbc.sp());
        EXPECT(0x8fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8fda));
        EXPECT(0xb7, gbc.readMem(0x8fdb));
        // C6 0208
        gbc.setState(0xa458, 0xc8f3, 0x39a0, 0xe17f, 0xb9d7, 0xf55e, 0x1, 0x0);
        gbc.writeMem(0xa458, { 0xc6, 0x9c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc8f3, gbc.sp());
        EXPECT(0xa45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa458));
        EXPECT(0x9c, gbc.readMem(0xa459));
        // C6 0209
        gbc.setState(0xda67, 0x9e15, 0x5ea0, 0xa505, 0xd644, 0xcd9c, 0x0, 0x0);
        gbc.writeMem(0xda67, { 0xc6, 0x15 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9e15, gbc.sp());
        EXPECT(0xda69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xda67));
        EXPECT(0x15, gbc.readMem(0xda68));
        // C6 020A
        gbc.setState(0x8518, 0xab9d, 0x2cb0, 0x3b86, 0xe6fc, 0xad34, 0x0, 0x0);
        gbc.writeMem(0x8518, { 0xc6, 0xed });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xab9d, gbc.sp());
        EXPECT(0x851a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8518));
        EXPECT(0xed, gbc.readMem(0x8519));
        // C6 020B
        gbc.setState(0xae2c, 0xd55d, 0xcb10, 0xcf1b, 0x2c2c, 0x1067, 0x0, 0x1);
        gbc.writeMem(0xae2c, { 0xc6, 0x16 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd55d, gbc.sp());
        EXPECT(0xae2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xae2c));
        EXPECT(0x16, gbc.readMem(0xae2d));
        // C6 020D
        gbc.setState(0x3b36, 0xe3fa, 0x18b0, 0x521b, 0x1029, 0xbef1, 0x1, 0x1);
        gbc.writeMem(0x3b36, { 0xc6, 0x83 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe3fa, gbc.sp());
        EXPECT(0x3b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 020E
        gbc.setState(0x2b9f, 0x5e50, 0xa10, 0x7fbe, 0x6ed, 0x6ff8, 0x0, 0x0);
        gbc.writeMem(0x2b9f, { 0xc6, 0xa3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5e50, gbc.sp());
        EXPECT(0x2ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 020F
        gbc.setState(0x7bf3, 0x2e39, 0x9e30, 0xce0f, 0xe11f, 0xc87a, 0x1, 0x1);
        gbc.writeMem(0x7bf3, { 0xc6, 0x5c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2e39, gbc.sp());
        EXPECT(0x7bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0210
        gbc.setState(0x39eb, 0xe769, 0x31e0, 0x96a, 0x94f8, 0x17cb, 0x1, 0x1);
        gbc.writeMem(0x39eb, { 0xc6, 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe769, gbc.sp());
        EXPECT(0x39ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0211
        gbc.setState(0x35ea, 0x46f4, 0xd8f0, 0xb1b0, 0x71ba, 0xdb76, 0x0, 0x0);
        gbc.writeMem(0x35ea, { 0xc6, 0xda });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x46f4, gbc.sp());
        EXPECT(0x35ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0212
        gbc.setState(0x130a, 0x15d5, 0x24d0, 0x3763, 0x2546, 0x8c09, 0x0, 0x1);
        gbc.writeMem(0x130a, { 0xc6, 0x12 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x15d5, gbc.sp());
        EXPECT(0x130c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0213
        gbc.setState(0xcf38, 0x4f2d, 0x9fe0, 0x7552, 0x7b2a, 0x24a0, 0x1, 0x0);
        gbc.writeMem(0xcf38, { 0xc6, 0xbb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4f2d, gbc.sp());
        EXPECT(0xcf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcf38));
        EXPECT(0xbb, gbc.readMem(0xcf39));
        // C6 0214
        gbc.setState(0x3cb5, 0x6797, 0x8590, 0x8b84, 0xc2ec, 0x3ea4, 0x1, 0x0);
        gbc.writeMem(0x3cb5, { 0xc6, 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6797, gbc.sp());
        EXPECT(0x3cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0215
        gbc.setState(0x1e2c, 0x540f, 0x8d40, 0xde81, 0xb2a9, 0x3ae2, 0x1, 0x0);
        gbc.writeMem(0x1e2c, { 0xc6, 0x81 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x540f, gbc.sp());
        EXPECT(0x1e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0216
        gbc.setState(0x5cac, 0x2cbe, 0x52c0, 0xbd64, 0x100c, 0xf490, 0x1, 0x1);
        gbc.writeMem(0x5cac, { 0xc6, 0x81 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2cbe, gbc.sp());
        EXPECT(0x5cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0217
        gbc.setState(0x5387, 0x3724, 0x4ca0, 0xfd9c, 0x7707, 0x71, 0x0, 0x0);
        gbc.writeMem(0x5387, { 0xc6, 0x46 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0x5389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0218
        gbc.setState(0xdba3, 0xdedb, 0x2150, 0xb8ff, 0xc2ef, 0x95f3, 0x0, 0x0);
        gbc.writeMem(0xdba3, { 0xc6, 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdedb, gbc.sp());
        EXPECT(0xdba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdba3));
        EXPECT(0xe9, gbc.readMem(0xdba4));
        // C6 0219
        gbc.setState(0xcc19, 0xabed, 0xf00, 0xb90d, 0x379, 0xf2bd, 0x0, 0x1);
        gbc.writeMem(0xcc19, { 0xc6, 0xa0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xabed, gbc.sp());
        EXPECT(0xcc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcc19));
        EXPECT(0xa0, gbc.readMem(0xcc1a));
        // C6 021A
        gbc.setState(0xef95, 0xc58e, 0xd2c0, 0xbbda, 0xf416, 0x9f39, 0x0, 0x1);
        gbc.writeMem(0xef95, { 0xc6, 0x9b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc58e, gbc.sp());
        EXPECT(0xef97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xef95));
        EXPECT(0x9b, gbc.readMem(0xef96));
        // C6 021B
        gbc.setState(0x20e, 0x1a8c, 0xf6b0, 0xb5cf, 0xab96, 0xbd87, 0x0, 0x1);
        gbc.writeMem(0x20e, { 0xc6, 0x51 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1a8c, gbc.sp());
        EXPECT(0x210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 021C
        gbc.setState(0x7b6f, 0xa726, 0x69c0, 0x8495, 0x169c, 0x5d55, 0x0, 0x1);
        gbc.writeMem(0x7b6f, { 0xc6, 0x66 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa726, gbc.sp());
        EXPECT(0x7b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 021D
        gbc.setState(0x10ac, 0xc7e0, 0xc950, 0xcac4, 0x2353, 0xa6e4, 0x0, 0x0);
        gbc.writeMem(0x10ac, { 0xc6, 0xa6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc7e0, gbc.sp());
        EXPECT(0x10ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 021E
        gbc.setState(0xe9c9, 0x8330, 0x9eb0, 0x3620, 0x120e, 0xd307, 0x0, 0x1);
        gbc.writeMem(0xe9c9, { 0xc6, 0xa6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8330, gbc.sp());
        EXPECT(0xe9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe9c9));
        EXPECT(0xa6, gbc.readMem(0xe9ca));
        // C6 021F
        gbc.setState(0xb3f5, 0xc981, 0xca70, 0xb8c3, 0x71f8, 0x6db1, 0x0, 0x1);
        gbc.writeMem(0xb3f5, { 0xc6, 0x63 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc981, gbc.sp());
        EXPECT(0xb3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb3f5));
        EXPECT(0x63, gbc.readMem(0xb3f6));
        // C6 0221
        gbc.setState(0x7593, 0xd4c9, 0xf860, 0x8d07, 0xd8c9, 0xd5ce, 0x0, 0x0);
        gbc.writeMem(0x7593, { 0xc6, 0x22 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd4c9, gbc.sp());
        EXPECT(0x7595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0222
        gbc.setState(0xed8, 0x6595, 0x6670, 0xfaa3, 0x92a1, 0x2d68, 0x1, 0x0);
        gbc.writeMem(0xed8, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6595, gbc.sp());
        EXPECT(0xeda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0223
        gbc.setState(0xef18, 0x9dc1, 0x9720, 0xe282, 0x6c62, 0x2d6, 0x0, 0x0);
        gbc.writeMem(0xef18, { 0xc6, 0x9a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9dc1, gbc.sp());
        EXPECT(0xef1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xef18));
        EXPECT(0x9a, gbc.readMem(0xef19));
        // C6 0224
        gbc.setState(0xc427, 0xe718, 0x5c0, 0x965d, 0x1a5b, 0xb161, 0x1, 0x0);
        gbc.writeMem(0xc427, { 0xc6, 0xec });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe718, gbc.sp());
        EXPECT(0xc429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc427));
        EXPECT(0xec, gbc.readMem(0xc428));
        // C6 0225
        gbc.setState(0x39a0, 0x248a, 0x2d90, 0xa14d, 0xd1b4, 0x8ef1, 0x1, 0x1);
        gbc.writeMem(0x39a0, { 0xc6, 0xdc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x248a, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0226
        gbc.setState(0x1b38, 0xb19c, 0x4f70, 0xc549, 0xb134, 0x9706, 0x1, 0x0);
        gbc.writeMem(0x1b38, { 0xc6, 0xd1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb19c, gbc.sp());
        EXPECT(0x1b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0227
        gbc.setState(0x8678, 0x22e8, 0x4800, 0xa804, 0xb279, 0x5d49, 0x0, 0x0);
        gbc.writeMem(0x8678, { 0xc6, 0x21 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x22e8, gbc.sp());
        EXPECT(0x867a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8678));
        EXPECT(0x21, gbc.readMem(0x8679));
        // C6 0228
        gbc.setState(0x6fe2, 0x1c5c, 0xe930, 0x915e, 0xf4ed, 0xb823, 0x1, 0x0);
        gbc.writeMem(0x6fe2, { 0xc6, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1c5c, gbc.sp());
        EXPECT(0x6fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0229
        gbc.setState(0x338c, 0xdf0b, 0xc170, 0x6466, 0x69f5, 0x7288, 0x0, 0x0);
        gbc.writeMem(0x338c, { 0xc6, 0xd0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdf0b, gbc.sp());
        EXPECT(0x338e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 022A
        gbc.setState(0x615c, 0x18a7, 0x3e20, 0xa2c6, 0x753a, 0x3ffb, 0x1, 0x0);
        gbc.writeMem(0x615c, { 0xc6, 0x5b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x18a7, gbc.sp());
        EXPECT(0x615e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 022B
        gbc.setState(0xdbde, 0x7d48, 0x1320, 0xf48e, 0xbfb9, 0x1823, 0x0, 0x0);
        gbc.writeMem(0xdbde, { 0xc6, 0xd6 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7d48, gbc.sp());
        EXPECT(0xdbe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdbde));
        EXPECT(0xd6, gbc.readMem(0xdbdf));
        // C6 022C
        gbc.setState(0x2070, 0x79b3, 0x9360, 0x170f, 0xaa3b, 0x1510, 0x0, 0x1);
        gbc.writeMem(0x2070, { 0xc6, 0x28 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x79b3, gbc.sp());
        EXPECT(0x2072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 022D
        gbc.setState(0xd579, 0x349d, 0xb4d0, 0x8f19, 0xe72c, 0xa93d, 0x0, 0x0);
        gbc.writeMem(0xd579, { 0xc6, 0x39 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x349d, gbc.sp());
        EXPECT(0xd57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd579));
        EXPECT(0x39, gbc.readMem(0xd57a));
        // C6 022E
        gbc.setState(0x1e5b, 0x3703, 0xc10, 0x25ee, 0x986e, 0xc6fb, 0x1, 0x0);
        gbc.writeMem(0x1e5b, { 0xc6, 0xdb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3703, gbc.sp());
        EXPECT(0x1e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 022F
        gbc.setState(0xacb0, 0x27e, 0xff80, 0xfcad, 0x2e91, 0xb61b, 0x0, 0x0);
        gbc.writeMem(0xacb0, { 0xc6, 0xe });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x27e, gbc.sp());
        EXPECT(0xacb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xacb0));
        EXPECT(0xe, gbc.readMem(0xacb1));
        // C6 0230
        gbc.setState(0x2dc5, 0x610, 0xd030, 0xd786, 0xd1f3, 0x49ce, 0x1, 0x1);
        gbc.writeMem(0x2dc5, { 0xc6, 0x67 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x610, gbc.sp());
        EXPECT(0x2dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0231
        gbc.setState(0x5c73, 0x4f3a, 0xaf10, 0x2f0d, 0xf772, 0xc346, 0x1, 0x0);
        gbc.writeMem(0x5c73, { 0xc6, 0x92 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4f3a, gbc.sp());
        EXPECT(0x5c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0232
        gbc.setState(0x3ac1, 0x27dc, 0x8240, 0x698, 0x999a, 0xa253, 0x0, 0x0);
        gbc.writeMem(0x3ac1, { 0xc6, 0xe9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x27dc, gbc.sp());
        EXPECT(0x3ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0233
        gbc.setState(0x9d95, 0x792, 0x9f20, 0x732a, 0x666c, 0x86e5, 0x1, 0x1);
        gbc.writeMem(0x9d95, { 0xc6, 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x792, gbc.sp());
        EXPECT(0x9d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9d95));
        EXPECT(0xa3, gbc.readMem(0x9d96));
        // C6 0234
        gbc.setState(0x7d, 0x165a, 0xb240, 0x4123, 0xdd29, 0x15b6, 0x0, 0x0);
        gbc.writeMem(0x7d, { 0xc6, 0xbc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0x7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0235
        gbc.setState(0x7d3b, 0xfe19, 0x4b40, 0xd05c, 0x9377, 0x5f30, 0x1, 0x1);
        gbc.writeMem(0x7d3b, { 0xc6, 0x4d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfe19, gbc.sp());
        EXPECT(0x7d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0236
        gbc.setState(0x58e3, 0x632e, 0x8e20, 0x7dbb, 0x6def, 0xd365, 0x1, 0x1);
        gbc.writeMem(0x58e3, { 0xc6, 0x4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x632e, gbc.sp());
        EXPECT(0x58e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0237
        gbc.setState(0x701f, 0xa577, 0x2600, 0x429, 0x9075, 0xfc1c, 0x1, 0x1);
        gbc.writeMem(0x701f, { 0xc6, 0x5b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa577, gbc.sp());
        EXPECT(0x7021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0238
        gbc.setState(0x7dbc, 0x4f10, 0xfc0, 0x7caf, 0x317b, 0x262e, 0x0, 0x0);
        gbc.writeMem(0x7dbc, { 0xc6, 0x1b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4f10, gbc.sp());
        EXPECT(0x7dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0239
        gbc.setState(0x29b3, 0x5205, 0x5930, 0xeab4, 0xe4bc, 0x47a5, 0x0, 0x0);
        gbc.writeMem(0x29b3, { 0xc6, 0x71 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5205, gbc.sp());
        EXPECT(0x29b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 023A
        gbc.setState(0x946d, 0x3ee7, 0xad40, 0x264e, 0x9f4a, 0xe915, 0x1, 0x1);
        gbc.writeMem(0x946d, { 0xc6, 0x93 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3ee7, gbc.sp());
        EXPECT(0x946f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x946d));
        EXPECT(0x93, gbc.readMem(0x946e));
        // C6 023B
        gbc.setState(0x689d, 0xf484, 0x6640, 0xe41f, 0x4c72, 0x1f51, 0x1, 0x0);
        gbc.writeMem(0x689d, { 0xc6, 0xeb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf484, gbc.sp());
        EXPECT(0x689f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 023C
        gbc.setState(0x582, 0x3b61, 0xce40, 0x309c, 0x9851, 0x3f88, 0x1, 0x0);
        gbc.writeMem(0x582, { 0xc6, 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3b61, gbc.sp());
        EXPECT(0x584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 023D
        gbc.setState(0x1954, 0xc32, 0xafa0, 0x2d85, 0xb981, 0x9bb1, 0x0, 0x0);
        gbc.writeMem(0x1954, { 0xc6, 0xf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc32, gbc.sp());
        EXPECT(0x1956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 023E
        gbc.setState(0x7ee0, 0x1c79, 0x9900, 0x8b1e, 0x734, 0x5688, 0x0, 0x0);
        gbc.writeMem(0x7ee0, { 0xc6, 0xdd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1c79, gbc.sp());
        EXPECT(0x7ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0240
        gbc.setState(0x8736, 0x7df2, 0xa7d0, 0x1c36, 0x12e4, 0xd952, 0x0, 0x0);
        gbc.writeMem(0x8736, { 0xc6, 0xb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7df2, gbc.sp());
        EXPECT(0x8738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8736));
        EXPECT(0xb, gbc.readMem(0x8737));
        // C6 0241
        gbc.setState(0x9bbe, 0x86fc, 0x22f0, 0x8d8e, 0x63d9, 0x5b31, 0x1, 0x1);
        gbc.writeMem(0x9bbe, { 0xc6, 0x34 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x86fc, gbc.sp());
        EXPECT(0x9bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9bbe));
        EXPECT(0x34, gbc.readMem(0x9bbf));
        // C6 0242
        gbc.setState(0x6f26, 0x3687, 0x1680, 0xabc, 0x7681, 0x5d16, 0x1, 0x0);
        gbc.writeMem(0x6f26, { 0xc6, 0xa0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3687, gbc.sp());
        EXPECT(0x6f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0243
        gbc.setState(0x7431, 0xe724, 0xccc0, 0xdf44, 0xd45b, 0xa957, 0x0, 0x1);
        gbc.writeMem(0x7431, { 0xc6, 0xd4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe724, gbc.sp());
        EXPECT(0x7433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0244
        gbc.setState(0x631d, 0x6dab, 0xbea0, 0xe62b, 0x968a, 0x6357, 0x0, 0x1);
        gbc.writeMem(0x631d, { 0xc6, 0x79 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6dab, gbc.sp());
        EXPECT(0x631f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0245
        gbc.setState(0xce6b, 0x529b, 0xb00, 0xeef4, 0xaaf9, 0xa464, 0x0, 0x1);
        gbc.writeMem(0xce6b, { 0xc6, 0x74 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x529b, gbc.sp());
        EXPECT(0xce6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xce6b));
        EXPECT(0x74, gbc.readMem(0xce6c));
        // C6 0246
        gbc.setState(0x8a18, 0xabc, 0x69e0, 0x3113, 0x8418, 0xbe4f, 0x1, 0x1);
        gbc.writeMem(0x8a18, { 0xc6, 0x68 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xabc, gbc.sp());
        EXPECT(0x8a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8a18));
        EXPECT(0x68, gbc.readMem(0x8a19));
        // C6 0247
        gbc.setState(0x716d, 0xee, 0xd580, 0x5703, 0x1f10, 0x936c, 0x1, 0x0);
        gbc.writeMem(0x716d, { 0xc6, 0x52 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xee, gbc.sp());
        EXPECT(0x716f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0248
        gbc.setState(0xd397, 0x8175, 0x9c20, 0xd548, 0xb52b, 0xe19b, 0x1, 0x1);
        gbc.writeMem(0xd397, { 0xc6, 0xf9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8175, gbc.sp());
        EXPECT(0xd399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd397));
        EXPECT(0xf9, gbc.readMem(0xd398));
        // C6 0249
        gbc.setState(0xc79b, 0xd2b3, 0xe6f0, 0x2c0c, 0x1186, 0xb, 0x0, 0x0);
        gbc.writeMem(0xc79b, { 0xc6, 0x62 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd2b3, gbc.sp());
        EXPECT(0xc79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc79b));
        EXPECT(0x62, gbc.readMem(0xc79c));
        // C6 024A
        gbc.setState(0xdf64, 0xd9f, 0xbe00, 0x6e4a, 0x19a3, 0x755a, 0x0, 0x1);
        gbc.writeMem(0xdf64, { 0xc6, 0xc5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd9f, gbc.sp());
        EXPECT(0xdf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdf64));
        EXPECT(0xc5, gbc.readMem(0xdf65));
        // C6 024B
        gbc.setState(0x9762, 0xaf5, 0xe3e0, 0x3d1c, 0xd181, 0x7d0, 0x1, 0x1);
        gbc.writeMem(0x9762, { 0xc6, 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaf5, gbc.sp());
        EXPECT(0x9764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9762));
        EXPECT(0x81, gbc.readMem(0x9763));
        // C6 024C
        gbc.setState(0xe569, 0xb6b4, 0x3680, 0x271c, 0xd5d, 0xe7d7, 0x0, 0x1);
        gbc.writeMem(0xe569, { 0xc6, 0x72 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb6b4, gbc.sp());
        EXPECT(0xe56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe569));
        EXPECT(0x72, gbc.readMem(0xe56a));
        // C6 024E
        gbc.setState(0x438f, 0xcec0, 0xc50, 0x727, 0x9f12, 0xada8, 0x1, 0x0);
        gbc.writeMem(0x438f, { 0xc6, 0xce });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcec0, gbc.sp());
        EXPECT(0x4391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 024F
        gbc.setState(0x8c3d, 0x872d, 0xd9d0, 0x24ac, 0x6bb5, 0x953d, 0x1, 0x0);
        gbc.writeMem(0x8c3d, { 0xc6, 0xc2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x872d, gbc.sp());
        EXPECT(0x8c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8c3d));
        EXPECT(0xc2, gbc.readMem(0x8c3e));
        // C6 0251
        gbc.setState(0x4996, 0xaf8b, 0x8b70, 0x1be1, 0x6c9c, 0xf50b, 0x0, 0x1);
        gbc.writeMem(0x4996, { 0xc6, 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xaf8b, gbc.sp());
        EXPECT(0x4998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0252
        gbc.setState(0xb175, 0x3802, 0x2540, 0x23f4, 0x297d, 0x6989, 0x1, 0x0);
        gbc.writeMem(0xb175, { 0xc6, 0xb7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3802, gbc.sp());
        EXPECT(0xb177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb175));
        EXPECT(0xb7, gbc.readMem(0xb176));
        // C6 0253
        gbc.setState(0x2345, 0x369d, 0x4080, 0x6639, 0xcd54, 0x2ff, 0x0, 0x1);
        gbc.writeMem(0x2345, { 0xc6, 0x1f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x369d, gbc.sp());
        EXPECT(0x2347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0254
        gbc.setState(0x7ddc, 0x37d6, 0xb480, 0x6178, 0xc7c3, 0xa6c3, 0x1, 0x1);
        gbc.writeMem(0x7ddc, { 0xc6, 0x80 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x37d6, gbc.sp());
        EXPECT(0x7dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0255
        gbc.setState(0xbf24, 0x9288, 0xb310, 0xf304, 0x574a, 0x2478, 0x1, 0x1);
        gbc.writeMem(0xbf24, { 0xc6, 0x3f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9288, gbc.sp());
        EXPECT(0xbf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbf24));
        EXPECT(0x3f, gbc.readMem(0xbf25));
        // C6 0256
        gbc.setState(0xb5c2, 0x5aa0, 0xaac0, 0xd32d, 0xc602, 0xa925, 0x0, 0x1);
        gbc.writeMem(0xb5c2, { 0xc6, 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5aa0, gbc.sp());
        EXPECT(0xb5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb5c2));
        EXPECT(0x80, gbc.readMem(0xb5c3));
        // C6 0257
        gbc.setState(0x2b6f, 0x10b3, 0x1d80, 0x9b7e, 0x3df6, 0xc9e3, 0x0, 0x1);
        gbc.writeMem(0x2b6f, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x10b3, gbc.sp());
        EXPECT(0x2b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0258
        gbc.setState(0xda7c, 0xd1f1, 0xe20, 0xd6fd, 0x7d59, 0x7fde, 0x1, 0x1);
        gbc.writeMem(0xda7c, { 0xc6, 0xf2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd1f1, gbc.sp());
        EXPECT(0xda7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xda7c));
        EXPECT(0xf2, gbc.readMem(0xda7d));
        // C6 0259
        gbc.setState(0xbfdb, 0x857a, 0xcf10, 0xd416, 0x427d, 0xf09a, 0x1, 0x0);
        gbc.writeMem(0xbfdb, { 0xc6, 0xb9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x857a, gbc.sp());
        EXPECT(0xbfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbfdb));
        EXPECT(0xb9, gbc.readMem(0xbfdc));
        // C6 025A
        gbc.setState(0xed7b, 0x1600, 0x45e0, 0xa591, 0x3495, 0xd186, 0x1, 0x0);
        gbc.writeMem(0xed7b, { 0xc6, 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1600, gbc.sp());
        EXPECT(0xed7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xed7b));
        EXPECT(0x44, gbc.readMem(0xed7c));
        // C6 025B
        gbc.setState(0x7e5e, 0xf0, 0xe3e0, 0xcf26, 0xa3b8, 0xb5a1, 0x1, 0x1);
        gbc.writeMem(0x7e5e, { 0xc6, 0x15 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf0, gbc.sp());
        EXPECT(0x7e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 025C
        gbc.setState(0x2556, 0x55e5, 0xd2d0, 0x3bc7, 0xc776, 0x6bd9, 0x0, 0x0);
        gbc.writeMem(0x2556, { 0xc6, 0xf9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x55e5, gbc.sp());
        EXPECT(0x2558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 025D
        gbc.setState(0x524c, 0xf285, 0x7360, 0x5361, 0x2190, 0xf87c, 0x1, 0x0);
        gbc.writeMem(0x524c, { 0xc6, 0x1c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf285, gbc.sp());
        EXPECT(0x524e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 025E
        gbc.setState(0x8b3b, 0xc603, 0x8bf0, 0x240c, 0xc66d, 0xf499, 0x0, 0x0);
        gbc.writeMem(0x8b3b, { 0xc6, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc603, gbc.sp());
        EXPECT(0x8b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8b3b));
        EXPECT(0x0, gbc.readMem(0x8b3c));
        // C6 025F
        gbc.setState(0x6c57, 0xa06e, 0x270, 0xfe1c, 0xa3a6, 0x4dc0, 0x0, 0x0);
        gbc.writeMem(0x6c57, { 0xc6, 0x55 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa06e, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0260
        gbc.setState(0x27d8, 0x57f2, 0x2770, 0x35fc, 0x6251, 0x4496, 0x0, 0x1);
        gbc.writeMem(0x27d8, { 0xc6, 0xec });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x57f2, gbc.sp());
        EXPECT(0x27da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0261
        gbc.setState(0x2cb8, 0x1c2d, 0xddf0, 0xfc00, 0xb4c, 0xc892, 0x0, 0x0);
        gbc.writeMem(0x2cb8, { 0xc6, 0xdb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1c2d, gbc.sp());
        EXPECT(0x2cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0262
        gbc.setState(0xe8f7, 0x1cf0, 0xcbd0, 0x21d3, 0x783b, 0xb26c, 0x1, 0x1);
        gbc.writeMem(0xe8f7, { 0xc6, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1cf0, gbc.sp());
        EXPECT(0xe8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe8f7));
        EXPECT(0x0, gbc.readMem(0xe8f8));
        // C6 0263
        gbc.setState(0xb044, 0xd9a3, 0xd7f0, 0x3294, 0x3794, 0x7136, 0x0, 0x1);
        gbc.writeMem(0xb044, { 0xc6, 0x5f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd9a3, gbc.sp());
        EXPECT(0xb046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb044));
        EXPECT(0x5f, gbc.readMem(0xb045));
        // C6 0265
        gbc.setState(0x6406, 0xfefb, 0x4b30, 0xb6c3, 0x68cc, 0x3820, 0x1, 0x1);
        gbc.writeMem(0x6406, { 0xc6, 0x47 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfefb, gbc.sp());
        EXPECT(0x6408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0266
        gbc.setState(0x3e4e, 0xadc2, 0xeed0, 0x3ca9, 0x3f3b, 0x51c9, 0x1, 0x0);
        gbc.writeMem(0x3e4e, { 0xc6, 0x6b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xadc2, gbc.sp());
        EXPECT(0x3e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0267
        gbc.setState(0x8b0c, 0xd6fb, 0xba40, 0xa86d, 0xb8d6, 0x6b86, 0x1, 0x1);
        gbc.writeMem(0x8b0c, { 0xc6, 0x14 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd6fb, gbc.sp());
        EXPECT(0x8b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8b0c));
        EXPECT(0x14, gbc.readMem(0x8b0d));
        // C6 0268
        gbc.setState(0x6f80, 0x28d4, 0x3640, 0xc28, 0xbcbd, 0xe1a1, 0x1, 0x0);
        gbc.writeMem(0x6f80, { 0xc6, 0xe7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28d4, gbc.sp());
        EXPECT(0x6f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0269
        gbc.setState(0x5726, 0x7670, 0x2ff0, 0x4373, 0xd5dc, 0x83bb, 0x0, 0x0);
        gbc.writeMem(0x5726, { 0xc6, 0xea });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7670, gbc.sp());
        EXPECT(0x5728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 026B
        gbc.setState(0x342d, 0xbce8, 0xb6d0, 0x9928, 0x71dd, 0x1ef7, 0x0, 0x1);
        gbc.writeMem(0x342d, { 0xc6, 0xd8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbce8, gbc.sp());
        EXPECT(0x342f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 026C
        gbc.setState(0x3277, 0x1f01, 0x85d0, 0x644b, 0x5743, 0x6ca3, 0x1, 0x0);
        gbc.writeMem(0x3277, { 0xc6, 0xea });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1f01, gbc.sp());
        EXPECT(0x3279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 026D
        gbc.setState(0xe3b8, 0xbc92, 0x20e0, 0x56a4, 0x36c7, 0x86be, 0x1, 0x1);
        gbc.writeMem(0xe3b8, { 0xc6, 0x7e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbc92, gbc.sp());
        EXPECT(0xe3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe3b8));
        EXPECT(0x7e, gbc.readMem(0xe3b9));
        // C6 026E
        gbc.setState(0x39f, 0x272a, 0x3170, 0x7bb5, 0x5a75, 0x16c2, 0x0, 0x0);
        gbc.writeMem(0x39f, { 0xc6, 0x96 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x272a, gbc.sp());
        EXPECT(0x3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 026F
        gbc.setState(0x82f1, 0x3ba7, 0x4f20, 0xcbaf, 0xcddd, 0x6be, 0x0, 0x1);
        gbc.writeMem(0x82f1, { 0xc6, 0x22 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3ba7, gbc.sp());
        EXPECT(0x82f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x82f1));
        EXPECT(0x22, gbc.readMem(0x82f2));
        // C6 0270
        gbc.setState(0x3cb0, 0xa7bf, 0x2ba0, 0x119c, 0x8617, 0x41fb, 0x0, 0x0);
        gbc.writeMem(0x3cb0, { 0xc6, 0x46 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa7bf, gbc.sp());
        EXPECT(0x3cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0271
        gbc.setState(0x5c39, 0xda90, 0x2b20, 0x5430, 0xf45e, 0xfea0, 0x0, 0x0);
        gbc.writeMem(0x5c39, { 0xc6, 0xa0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xda90, gbc.sp());
        EXPECT(0x5c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0272
        gbc.setState(0x4d12, 0xc0d7, 0xcc10, 0xc0d7, 0x1121, 0xb072, 0x0, 0x1);
        gbc.writeMem(0x4d12, { 0xc6, 0x5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc0d7, gbc.sp());
        EXPECT(0x4d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0273
        gbc.setState(0x3397, 0x588e, 0xc910, 0x3c55, 0xf814, 0x2bc1, 0x0, 0x0);
        gbc.writeMem(0x3397, { 0xc6, 0xb9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x588e, gbc.sp());
        EXPECT(0x3399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0274
        gbc.setState(0xebfb, 0x9b0e, 0x5550, 0xd38e, 0x10de, 0x2bb, 0x1, 0x0);
        gbc.writeMem(0xebfb, { 0xc6, 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9b0e, gbc.sp());
        EXPECT(0xebfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xebfb));
        EXPECT(0xb7, gbc.readMem(0xebfc));
        // C6 0275
        gbc.setState(0x53aa, 0x4f30, 0xb100, 0xdaad, 0x577e, 0x601a, 0x1, 0x1);
        gbc.writeMem(0x53aa, { 0xc6, 0xa2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4f30, gbc.sp());
        EXPECT(0x53ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0276
        gbc.setState(0x57b9, 0x8a2f, 0xf730, 0xfacb, 0x6d11, 0x4fea, 0x1, 0x0);
        gbc.writeMem(0x57b9, { 0xc6, 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8a2f, gbc.sp());
        EXPECT(0x57bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0277
        gbc.setState(0xebb9, 0xb8fa, 0x9570, 0x72, 0xae4e, 0x3ff2, 0x1, 0x0);
        gbc.writeMem(0xebb9, { 0xc6, 0x1d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb8fa, gbc.sp());
        EXPECT(0xebbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xebb9));
        EXPECT(0x1d, gbc.readMem(0xebba));
        // C6 0278
        gbc.setState(0x2f74, 0xb5d5, 0x9cd0, 0xecc7, 0x72f8, 0x1856, 0x0, 0x0);
        gbc.writeMem(0x2f74, { 0xc6, 0xaf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb5d5, gbc.sp());
        EXPECT(0x2f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0279
        gbc.setState(0x1187, 0x8169, 0x31d0, 0x54f5, 0x4721, 0x44cd, 0x1, 0x0);
        gbc.writeMem(0x1187, { 0xc6, 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8169, gbc.sp());
        EXPECT(0x1189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 027A
        gbc.setState(0x8574, 0x8296, 0xce0, 0x9cdd, 0xfa68, 0x3c7c, 0x1, 0x0);
        gbc.writeMem(0x8574, { 0xc6, 0x4d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8296, gbc.sp());
        EXPECT(0x8576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8574));
        EXPECT(0x4d, gbc.readMem(0x8575));
        // C6 027B
        gbc.setState(0xefe0, 0x44a5, 0xd50, 0xcfe5, 0x517d, 0x47b7, 0x0, 0x1);
        gbc.writeMem(0xefe0, { 0xc6, 0x52 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x44a5, gbc.sp());
        EXPECT(0xefe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xefe0));
        EXPECT(0x52, gbc.readMem(0xefe1));
        // C6 027C
        gbc.setState(0xcfb8, 0x2a1a, 0x2f0, 0x7c53, 0x3afe, 0xb8b3, 0x1, 0x1);
        gbc.writeMem(0xcfb8, { 0xc6, 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2a1a, gbc.sp());
        EXPECT(0xcfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcfb8));
        EXPECT(0x1d, gbc.readMem(0xcfb9));
        // C6 027D
        gbc.setState(0x254e, 0xf0ff, 0x770, 0xfb7f, 0x8eb0, 0x427f, 0x1, 0x1);
        gbc.writeMem(0x254e, { 0xc6, 0x4a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf0ff, gbc.sp());
        EXPECT(0x2550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 027F
        gbc.setState(0x4aa9, 0xcbd8, 0x9ab0, 0x4644, 0xe054, 0xbee4, 0x1, 0x0);
        gbc.writeMem(0x4aa9, { 0xc6, 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcbd8, gbc.sp());
        EXPECT(0x4aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0280
        gbc.setState(0x7b47, 0x56f3, 0x4910, 0x2a08, 0xedb, 0x6f07, 0x1, 0x1);
        gbc.writeMem(0x7b47, { 0xc6, 0x4c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x56f3, gbc.sp());
        EXPECT(0x7b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0281
        gbc.setState(0x6e0e, 0x8fdc, 0x1090, 0x23e8, 0x8ce0, 0xd937, 0x1, 0x1);
        gbc.writeMem(0x6e0e, { 0xc6, 0xfe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8fdc, gbc.sp());
        EXPECT(0x6e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0282
        gbc.setState(0x5683, 0x5789, 0x7ec0, 0x1c5a, 0x38a5, 0xeaff, 0x1, 0x0);
        gbc.writeMem(0x5683, { 0xc6, 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5789, gbc.sp());
        EXPECT(0x5685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0283
        gbc.setState(0x4e7a, 0xb8ae, 0x620, 0x884, 0x39cf, 0x5d55, 0x1, 0x0);
        gbc.writeMem(0x4e7a, { 0xc6, 0xeb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb8ae, gbc.sp());
        EXPECT(0x4e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0284
        gbc.setState(0x55ad, 0x57a9, 0xd0f0, 0x501, 0xb45c, 0x2b, 0x0, 0x1);
        gbc.writeMem(0x55ad, { 0xc6, 0xc5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x57a9, gbc.sp());
        EXPECT(0x55af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0285
        gbc.setState(0xeacf, 0x9baa, 0x740, 0x1838, 0x2fb, 0x3f00, 0x0, 0x1);
        gbc.writeMem(0xeacf, { 0xc6, 0xe5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9baa, gbc.sp());
        EXPECT(0xead1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xeacf));
        EXPECT(0xe5, gbc.readMem(0xead0));
        // C6 0286
        gbc.setState(0x7d4, 0x93cb, 0xbe90, 0xb4b2, 0xf9b8, 0x2a91, 0x1, 0x0);
        gbc.writeMem(0x7d4, { 0xc6, 0xf7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x93cb, gbc.sp());
        EXPECT(0x7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0287
        gbc.setState(0xc87b, 0x6c4f, 0x4b80, 0xcf4f, 0x75bc, 0x6ff3, 0x0, 0x1);
        gbc.writeMem(0xc87b, { 0xc6, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6c4f, gbc.sp());
        EXPECT(0xc87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc87b));
        EXPECT(0xc9, gbc.readMem(0xc87c));
        // C6 0288
        gbc.setState(0x6db8, 0xc7fd, 0x2cb0, 0x8173, 0x9785, 0xbf6d, 0x0, 0x1);
        gbc.writeMem(0x6db8, { 0xc6, 0xa8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc7fd, gbc.sp());
        EXPECT(0x6dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0289
        gbc.setState(0x1ea9, 0x1ad6, 0x8290, 0xa259, 0x32f4, 0x6b5c, 0x0, 0x1);
        gbc.writeMem(0x1ea9, { 0xc6, 0xc0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1ad6, gbc.sp());
        EXPECT(0x1eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 028A
        gbc.setState(0xfdb, 0xf044, 0x9070, 0xd470, 0xf2ed, 0xd1e, 0x1, 0x1);
        gbc.writeMem(0xfdb, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf044, gbc.sp());
        EXPECT(0xfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 028B
        gbc.setState(0x7fd4, 0x5f49, 0x7390, 0x7250, 0x8fac, 0x1da7, 0x0, 0x1);
        gbc.writeMem(0x7fd4, { 0xc6, 0x3a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5f49, gbc.sp());
        EXPECT(0x7fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 028C
        gbc.setState(0xcb29, 0xa588, 0x2ae0, 0x979b, 0xb5f4, 0x23c5, 0x1, 0x0);
        gbc.writeMem(0xcb29, { 0xc6, 0xa7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa588, gbc.sp());
        EXPECT(0xcb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcb29));
        EXPECT(0xa7, gbc.readMem(0xcb2a));
        // C6 028D
        gbc.setState(0x8069, 0x168c, 0xbd10, 0x4f14, 0x8bc8, 0xceec, 0x0, 0x0);
        gbc.writeMem(0x8069, { 0xc6, 0xb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x168c, gbc.sp());
        EXPECT(0x806b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8069));
        EXPECT(0xb, gbc.readMem(0x806a));
        // C6 028E
        gbc.setState(0x940f, 0x9048, 0x5480, 0x7909, 0x676e, 0x9ab, 0x1, 0x0);
        gbc.writeMem(0x940f, { 0xc6, 0xf3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9048, gbc.sp());
        EXPECT(0x9411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x940f));
        EXPECT(0xf3, gbc.readMem(0x9410));
        // C6 028F
        gbc.setState(0x3547, 0x8da8, 0x79a0, 0xb165, 0x23, 0xacea, 0x1, 0x1);
        gbc.writeMem(0x3547, { 0xc6, 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8da8, gbc.sp());
        EXPECT(0x3549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0290
        gbc.setState(0xd7a8, 0x603a, 0x5930, 0xe36d, 0x1fa2, 0xb000, 0x0, 0x0);
        gbc.writeMem(0xd7a8, { 0xc6, 0xc2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x603a, gbc.sp());
        EXPECT(0xd7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd7a8));
        EXPECT(0xc2, gbc.readMem(0xd7a9));
        // C6 0291
        gbc.setState(0xa659, 0x3e1, 0x3e60, 0x9779, 0x4424, 0x33bb, 0x1, 0x1);
        gbc.writeMem(0xa659, { 0xc6, 0xab });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3e1, gbc.sp());
        EXPECT(0xa65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa659));
        EXPECT(0xab, gbc.readMem(0xa65a));
        // C6 0292
        gbc.setState(0xe69a, 0xba8e, 0x34f0, 0xdc37, 0xa286, 0xa666, 0x0, 0x1);
        gbc.writeMem(0xe69a, { 0xc6, 0x42 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xba8e, gbc.sp());
        EXPECT(0xe69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe69a));
        EXPECT(0x42, gbc.readMem(0xe69b));
        // C6 0293
        gbc.setState(0x1816, 0x19e0, 0x3d30, 0x1625, 0xd1c7, 0x66a, 0x1, 0x1);
        gbc.writeMem(0x1816, { 0xc6, 0x45 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x19e0, gbc.sp());
        EXPECT(0x1818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0294
        gbc.setState(0x2ccd, 0xba7f, 0x2130, 0x48fa, 0x203f, 0x4309, 0x0, 0x1);
        gbc.writeMem(0x2ccd, { 0xc6, 0x5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xba7f, gbc.sp());
        EXPECT(0x2ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0295
        gbc.setState(0x1ac1, 0xca99, 0x3f90, 0xf8ba, 0xa55b, 0x852c, 0x0, 0x0);
        gbc.writeMem(0x1ac1, { 0xc6, 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xca99, gbc.sp());
        EXPECT(0x1ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0296
        gbc.setState(0x1be9, 0x5d35, 0x8d80, 0x58eb, 0x5d98, 0xeb5c, 0x1, 0x0);
        gbc.writeMem(0x1be9, { 0xc6, 0xda });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5d35, gbc.sp());
        EXPECT(0x1beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0297
        gbc.setState(0xd607, 0xddc1, 0x6d00, 0xfed2, 0xae09, 0x1bb6, 0x0, 0x0);
        gbc.writeMem(0xd607, { 0xc6, 0x8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xddc1, gbc.sp());
        EXPECT(0xd609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd607));
        EXPECT(0x8, gbc.readMem(0xd608));
        // C6 0298
        gbc.setState(0xc7fc, 0xffd7, 0x6360, 0x8515, 0x14a1, 0x5914, 0x0, 0x0);
        gbc.writeMem(0xc7fc, { 0xc6, 0x3e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xffd7, gbc.sp());
        EXPECT(0xc7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc7fc));
        EXPECT(0x3e, gbc.readMem(0xc7fd));
        // C6 0299
        gbc.setState(0xa031, 0x4e43, 0x44c0, 0x519d, 0x6611, 0x7668, 0x0, 0x0);
        gbc.writeMem(0xa031, { 0xc6, 0x34 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4e43, gbc.sp());
        EXPECT(0xa033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa031));
        EXPECT(0x34, gbc.readMem(0xa032));
        // C6 029A
        gbc.setState(0x2e8d, 0x1f7, 0xd90, 0x974c, 0x6e29, 0x2e69, 0x1, 0x0);
        gbc.writeMem(0x2e8d, { 0xc6, 0x81 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1f7, gbc.sp());
        EXPECT(0x2e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 029B
        gbc.setState(0x3fad, 0xc9d4, 0xcd90, 0x1916, 0x7f6, 0xae6, 0x1, 0x0);
        gbc.writeMem(0x3fad, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc9d4, gbc.sp());
        EXPECT(0x3faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 029C
        gbc.setState(0xaa31, 0x1f55, 0x4cd0, 0x2650, 0x5450, 0xf35b, 0x0, 0x0);
        gbc.writeMem(0xaa31, { 0xc6, 0xee });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1f55, gbc.sp());
        EXPECT(0xaa33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaa31));
        EXPECT(0xee, gbc.readMem(0xaa32));
        // C6 029D
        gbc.setState(0xa4bd, 0x4dfc, 0xdec0, 0x3da0, 0x603d, 0x44e1, 0x1, 0x0);
        gbc.writeMem(0xa4bd, { 0xc6, 0x52 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4dfc, gbc.sp());
        EXPECT(0xa4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa4bd));
        EXPECT(0x52, gbc.readMem(0xa4be));
        // C6 029E
        gbc.setState(0xb026, 0xe387, 0xdaa0, 0xe99e, 0x5bbc, 0x4e50, 0x0, 0x0);
        gbc.writeMem(0xb026, { 0xc6, 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe387, gbc.sp());
        EXPECT(0xb028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb026));
        EXPECT(0x1d, gbc.readMem(0xb027));
        // C6 029F
        gbc.setState(0x23d, 0x9422, 0x9af0, 0x102b, 0xbb8d, 0x829, 0x1, 0x0);
        gbc.writeMem(0x23d, { 0xc6, 0x86 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9422, gbc.sp());
        EXPECT(0x23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02A0
        gbc.setState(0x75e2, 0xcdc1, 0xef00, 0x2511, 0xce88, 0x7abf, 0x1, 0x1);
        gbc.writeMem(0x75e2, { 0xc6, 0xb9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcdc1, gbc.sp());
        EXPECT(0x75e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02A1
        gbc.setState(0x2454, 0xd04b, 0xcd50, 0xa941, 0xc0d0, 0xee3b, 0x0, 0x1);
        gbc.writeMem(0x2454, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd04b, gbc.sp());
        EXPECT(0x2456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02A2
        gbc.setState(0xe411, 0xe02d, 0xdb80, 0x6cab, 0xa236, 0xa36b, 0x0, 0x1);
        gbc.writeMem(0xe411, { 0xc6, 0x53 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe02d, gbc.sp());
        EXPECT(0xe413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe411));
        EXPECT(0x53, gbc.readMem(0xe412));
        // C6 02A3
        gbc.setState(0x8d89, 0xde3d, 0x9890, 0x6cf9, 0xbd72, 0xc831, 0x0, 0x1);
        gbc.writeMem(0x8d89, { 0xc6, 0x79 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xde3d, gbc.sp());
        EXPECT(0x8d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8d89));
        EXPECT(0x79, gbc.readMem(0x8d8a));
        // C6 02A4
        gbc.setState(0x7528, 0x3dc5, 0x7210, 0x635d, 0xbdd5, 0x2315, 0x1, 0x1);
        gbc.writeMem(0x7528, { 0xc6, 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3dc5, gbc.sp());
        EXPECT(0x752a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02A5
        gbc.setState(0xbe6e, 0x6c57, 0x8090, 0xc8b4, 0xd97f, 0x305a, 0x1, 0x1);
        gbc.writeMem(0xbe6e, { 0xc6, 0x2c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6c57, gbc.sp());
        EXPECT(0xbe70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbe6e));
        EXPECT(0x2c, gbc.readMem(0xbe6f));
        // C6 02A6
        gbc.setState(0xafff, 0x3928, 0x6fd0, 0xff1e, 0x51d4, 0xe549, 0x1, 0x1);
        gbc.writeMem(0xafff, { 0xc6, 0x74 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3928, gbc.sp());
        EXPECT(0xb001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xafff));
        EXPECT(0x74, gbc.readMem(0xb000));
        // C6 02A7
        gbc.setState(0x2174, 0x3922, 0xb4c0, 0x98c5, 0x4a73, 0x19cc, 0x0, 0x1);
        gbc.writeMem(0x2174, { 0xc6, 0x3b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3922, gbc.sp());
        EXPECT(0x2176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02A8
        gbc.setState(0x2396, 0x9f1a, 0x31d0, 0xd0e9, 0xd4e8, 0xad3d, 0x0, 0x1);
        gbc.writeMem(0x2396, { 0xc6, 0x1a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9f1a, gbc.sp());
        EXPECT(0x2398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02A9
        gbc.setState(0x5958, 0x7333, 0xa450, 0x9fbb, 0x25ee, 0x8174, 0x1, 0x1);
        gbc.writeMem(0x5958, { 0xc6, 0x8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7333, gbc.sp());
        EXPECT(0x595a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02AA
        gbc.setState(0x59d0, 0xa9df, 0xd270, 0x4f1b, 0xc733, 0xd71c, 0x1, 0x0);
        gbc.writeMem(0x59d0, { 0xc6, 0x7e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa9df, gbc.sp());
        EXPECT(0x59d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02AB
        gbc.setState(0xe652, 0x86b7, 0x2840, 0x35b3, 0xa4ce, 0x1f24, 0x1, 0x1);
        gbc.writeMem(0xe652, { 0xc6, 0x36 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x86b7, gbc.sp());
        EXPECT(0xe654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe652));
        EXPECT(0x36, gbc.readMem(0xe653));
        // C6 02AC
        gbc.setState(0xb288, 0x7b89, 0xd0a0, 0xf951, 0x914a, 0x76be, 0x0, 0x1);
        gbc.writeMem(0xb288, { 0xc6, 0xd3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7b89, gbc.sp());
        EXPECT(0xb28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb288));
        EXPECT(0xd3, gbc.readMem(0xb289));
        // C6 02AE
        gbc.setState(0x9796, 0xc405, 0xe520, 0xa29b, 0x9766, 0x7518, 0x1, 0x1);
        gbc.writeMem(0x9796, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc405, gbc.sp());
        EXPECT(0x9798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9796));
        EXPECT(0x64, gbc.readMem(0x9797));
        // C6 02AF
        gbc.setState(0x38eb, 0x7b4, 0xc9d0, 0xf611, 0x3ff0, 0x3b41, 0x0, 0x0);
        gbc.writeMem(0x38eb, { 0xc6, 0x52 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7b4, gbc.sp());
        EXPECT(0x38ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02B0
        gbc.setState(0x805e, 0x4bf4, 0xbb00, 0x3d1d, 0x548c, 0xdc7d, 0x1, 0x1);
        gbc.writeMem(0x805e, { 0xc6, 0x73 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4bf4, gbc.sp());
        EXPECT(0x8060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x805e));
        EXPECT(0x73, gbc.readMem(0x805f));
        // C6 02B1
        gbc.setState(0x304, 0x6d04, 0xec50, 0x5c44, 0x7bbf, 0xaf11, 0x0, 0x0);
        gbc.writeMem(0x304, { 0xc6, 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6d04, gbc.sp());
        EXPECT(0x306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02B2
        gbc.setState(0x4d08, 0x5bb9, 0xbae0, 0x4ac3, 0x8fbf, 0x74dc, 0x1, 0x0);
        gbc.writeMem(0x4d08, { 0xc6, 0xe8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5bb9, gbc.sp());
        EXPECT(0x4d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02B3
        gbc.setState(0xd60d, 0xc600, 0xb2b0, 0x870b, 0x3a67, 0xcae6, 0x1, 0x0);
        gbc.writeMem(0xd60d, { 0xc6, 0xb2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc600, gbc.sp());
        EXPECT(0xd60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd60d));
        EXPECT(0xb2, gbc.readMem(0xd60e));
        // C6 02B4
        gbc.setState(0xb716, 0xf7c7, 0xee80, 0x3443, 0x5604, 0x6ccc, 0x1, 0x1);
        gbc.writeMem(0xb716, { 0xc6, 0x98 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf7c7, gbc.sp());
        EXPECT(0xb718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb716));
        EXPECT(0x98, gbc.readMem(0xb717));
        // C6 02B5
        gbc.setState(0xa46a, 0x3fc5, 0xf580, 0x53e, 0xe80c, 0x8643, 0x0, 0x0);
        gbc.writeMem(0xa46a, { 0xc6, 0x59 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3fc5, gbc.sp());
        EXPECT(0xa46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa46a));
        EXPECT(0x59, gbc.readMem(0xa46b));
        // C6 02B6
        gbc.setState(0x4e93, 0xb064, 0x48e0, 0xe83, 0x7bbf, 0xea84, 0x1, 0x0);
        gbc.writeMem(0x4e93, { 0xc6, 0x7e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb064, gbc.sp());
        EXPECT(0x4e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02B7
        gbc.setState(0xba15, 0xe2d, 0x7630, 0xba86, 0x724a, 0x573c, 0x0, 0x1);
        gbc.writeMem(0xba15, { 0xc6, 0x79 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe2d, gbc.sp());
        EXPECT(0xba17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xba15));
        EXPECT(0x79, gbc.readMem(0xba16));
        // C6 02B8
        gbc.setState(0x1301, 0x875f, 0x2c90, 0x3259, 0x4b23, 0x50cc, 0x1, 0x0);
        gbc.writeMem(0x1301, { 0xc6, 0xa6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x875f, gbc.sp());
        EXPECT(0x1303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02B9
        gbc.setState(0x43cc, 0xf28e, 0xea90, 0x1eb, 0x92c8, 0xe517, 0x0, 0x0);
        gbc.writeMem(0x43cc, { 0xc6, 0xbf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf28e, gbc.sp());
        EXPECT(0x43ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02BA
        gbc.setState(0x2609, 0xedef, 0x34a0, 0xd960, 0x39f1, 0xd8e3, 0x1, 0x1);
        gbc.writeMem(0x2609, { 0xc6, 0xd2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xedef, gbc.sp());
        EXPECT(0x260b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02BB
        gbc.setState(0x6a8c, 0x917d, 0x9f00, 0xd224, 0x47de, 0x8c0, 0x1, 0x0);
        gbc.writeMem(0x6a8c, { 0xc6, 0xf6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x917d, gbc.sp());
        EXPECT(0x6a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02BC
        gbc.setState(0x31a3, 0x460c, 0x7890, 0xcc, 0x806b, 0x2289, 0x1, 0x1);
        gbc.writeMem(0x31a3, { 0xc6, 0xce });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x460c, gbc.sp());
        EXPECT(0x31a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02BD
        gbc.setState(0xc0bb, 0xca48, 0x8460, 0xa878, 0x2711, 0x1ae0, 0x0, 0x1);
        gbc.writeMem(0xc0bb, { 0xc6, 0xa9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xca48, gbc.sp());
        EXPECT(0xc0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc0bb));
        EXPECT(0xa9, gbc.readMem(0xc0bc));
        // C6 02BE
        gbc.setState(0x5de6, 0xd6c2, 0x7780, 0xde5b, 0x2bef, 0x3316, 0x1, 0x1);
        gbc.writeMem(0x5de6, { 0xc6, 0x4f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd6c2, gbc.sp());
        EXPECT(0x5de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02BF
        gbc.setState(0x6f85, 0x6abf, 0xdd70, 0x8335, 0x73c7, 0xac53, 0x1, 0x1);
        gbc.writeMem(0x6f85, { 0xc6, 0x11 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6abf, gbc.sp());
        EXPECT(0x6f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02C0
        gbc.setState(0x632e, 0x59c8, 0xde40, 0xa21, 0xd02a, 0x2299, 0x0, 0x1);
        gbc.writeMem(0x632e, { 0xc6, 0xc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x59c8, gbc.sp());
        EXPECT(0x6330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02C1
        gbc.setState(0x8560, 0x6f98, 0xa3b0, 0x75a6, 0x87c0, 0x7677, 0x0, 0x0);
        gbc.writeMem(0x8560, { 0xc6, 0xe3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6f98, gbc.sp());
        EXPECT(0x8562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8560));
        EXPECT(0xe3, gbc.readMem(0x8561));
        // C6 02C2
        gbc.setState(0x87e6, 0xe494, 0xeed0, 0x7426, 0x2ea0, 0xbe1c, 0x1, 0x0);
        gbc.writeMem(0x87e6, { 0xc6, 0xf9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe494, gbc.sp());
        EXPECT(0x87e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x87e6));
        EXPECT(0xf9, gbc.readMem(0x87e7));
        // C6 02C3
        gbc.setState(0x91cc, 0x5e68, 0x8b40, 0x89ce, 0x752f, 0xe8cd, 0x1, 0x0);
        gbc.writeMem(0x91cc, { 0xc6, 0xe2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5e68, gbc.sp());
        EXPECT(0x91ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x91cc));
        EXPECT(0xe2, gbc.readMem(0x91cd));
        // C6 02C4
        gbc.setState(0x4f94, 0x1bb5, 0xe130, 0x26fb, 0x7c72, 0x609d, 0x1, 0x1);
        gbc.writeMem(0x4f94, { 0xc6, 0xf });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1bb5, gbc.sp());
        EXPECT(0x4f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02C5
        gbc.setState(0x1535, 0xb5d0, 0xd4d0, 0xbd4d, 0x3d14, 0x309d, 0x0, 0x1);
        gbc.writeMem(0x1535, { 0xc6, 0x6a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb5d0, gbc.sp());
        EXPECT(0x1537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02C6
        gbc.setState(0x25c6, 0xf37d, 0xff30, 0x2610, 0x5b6d, 0x6593, 0x0, 0x1);
        gbc.writeMem(0x25c6, { 0xc6, 0xdb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf37d, gbc.sp());
        EXPECT(0x25c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02C7
        gbc.setState(0xae9, 0x130f, 0xefc0, 0xae27, 0xa9af, 0x8247, 0x1, 0x1);
        gbc.writeMem(0xae9, { 0xc6, 0x85 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x130f, gbc.sp());
        EXPECT(0xaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02C8
        gbc.setState(0x4cc4, 0x9f03, 0xb880, 0xc951, 0x7041, 0xee79, 0x1, 0x1);
        gbc.writeMem(0x4cc4, { 0xc6, 0x95 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9f03, gbc.sp());
        EXPECT(0x4cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02C9
        gbc.setState(0x485c, 0x6ec3, 0xc6b0, 0x5b69, 0xcfc0, 0xb46d, 0x0, 0x0);
        gbc.writeMem(0x485c, { 0xc6, 0x53 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6ec3, gbc.sp());
        EXPECT(0x485e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02CC
        gbc.setState(0xb70f, 0xd3da, 0x2510, 0xd837, 0xcf9f, 0x3b44, 0x1, 0x0);
        gbc.writeMem(0xb70f, { 0xc6, 0xfc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd3da, gbc.sp());
        EXPECT(0xb711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb70f));
        EXPECT(0xfc, gbc.readMem(0xb710));
        // C6 02CD
        gbc.setState(0x4332, 0xc598, 0xba70, 0x7c65, 0x7cfd, 0x6472, 0x0, 0x0);
        gbc.writeMem(0x4332, { 0xc6, 0x55 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc598, gbc.sp());
        EXPECT(0x4334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02CE
        gbc.setState(0xb134, 0x1a91, 0xb040, 0xb319, 0xcca2, 0x4301, 0x0, 0x1);
        gbc.writeMem(0xb134, { 0xc6, 0x57 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1a91, gbc.sp());
        EXPECT(0xb136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb134));
        EXPECT(0x57, gbc.readMem(0xb135));
        // C6 02CF
        gbc.setState(0xc39f, 0x16f8, 0xab80, 0x53ed, 0x8175, 0x6db6, 0x0, 0x0);
        gbc.writeMem(0xc39f, { 0xc6, 0x26 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x16f8, gbc.sp());
        EXPECT(0xc3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc39f));
        EXPECT(0x26, gbc.readMem(0xc3a0));
        // C6 02D0
        gbc.setState(0x40f9, 0xd9af, 0xd640, 0xb2b, 0x8535, 0x74e, 0x1, 0x1);
        gbc.writeMem(0x40f9, { 0xc6, 0xb9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd9af, gbc.sp());
        EXPECT(0x40fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02D1
        gbc.setState(0x3763, 0x802f, 0x2870, 0x5a1d, 0xe6fa, 0x3b6, 0x0, 0x0);
        gbc.writeMem(0x3763, { 0xc6, 0x2e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x802f, gbc.sp());
        EXPECT(0x3765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02D2
        gbc.setState(0xd09e, 0x7cc9, 0x3d30, 0x493e, 0xbe96, 0xae06, 0x1, 0x1);
        gbc.writeMem(0xd09e, { 0xc6, 0x2a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7cc9, gbc.sp());
        EXPECT(0xd0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd09e));
        EXPECT(0x2a, gbc.readMem(0xd09f));
        // C6 02D3
        gbc.setState(0x516a, 0xde54, 0x61f0, 0xb42e, 0xf858, 0xa47e, 0x0, 0x0);
        gbc.writeMem(0x516a, { 0xc6, 0xce });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xde54, gbc.sp());
        EXPECT(0x516c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02D4
        gbc.setState(0xa80f, 0xa408, 0xaa80, 0x70c9, 0xa0c3, 0xa85d, 0x1, 0x0);
        gbc.writeMem(0xa80f, { 0xc6, 0xaa });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa408, gbc.sp());
        EXPECT(0xa811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa80f));
        EXPECT(0xaa, gbc.readMem(0xa810));
        // C6 02D5
        gbc.setState(0x31d3, 0x83d9, 0xb130, 0x51a7, 0xd30c, 0x9776, 0x1, 0x0);
        gbc.writeMem(0x31d3, { 0xc6, 0x59 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x83d9, gbc.sp());
        EXPECT(0x31d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02D6
        gbc.setState(0xeb92, 0x8304, 0xe140, 0xa763, 0x26b3, 0xb258, 0x1, 0x1);
        gbc.writeMem(0xeb92, { 0xc6, 0x50 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8304, gbc.sp());
        EXPECT(0xeb94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xeb92));
        EXPECT(0x50, gbc.readMem(0xeb93));
        // C6 02D7
        gbc.setState(0x5f00, 0xec5d, 0x6660, 0x83d3, 0xfc7e, 0x27ff, 0x0, 0x0);
        gbc.writeMem(0x5f00, { 0xc6, 0x32 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xec5d, gbc.sp());
        EXPECT(0x5f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02D8
        gbc.setState(0xa13c, 0x49c, 0x83b0, 0xd6fc, 0x5160, 0x8f0f, 0x1, 0x1);
        gbc.writeMem(0xa13c, { 0xc6, 0x26 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x49c, gbc.sp());
        EXPECT(0xa13e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa13c));
        EXPECT(0x26, gbc.readMem(0xa13d));
        // C6 02D9
        gbc.setState(0xa9ea, 0x43c, 0x3670, 0x31ff, 0x4cac, 0x7da6, 0x0, 0x0);
        gbc.writeMem(0xa9ea, { 0xc6, 0xd1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x43c, gbc.sp());
        EXPECT(0xa9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa9ea));
        EXPECT(0xd1, gbc.readMem(0xa9eb));
        // C6 02DA
        gbc.setState(0x78d9, 0x4feb, 0x8250, 0x1f0, 0x30d5, 0x4d85, 0x1, 0x0);
        gbc.writeMem(0x78d9, { 0xc6, 0xc0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4feb, gbc.sp());
        EXPECT(0x78db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02DB
        gbc.setState(0x36fa, 0x76e2, 0xed30, 0x945d, 0x11b7, 0x4564, 0x1, 0x0);
        gbc.writeMem(0x36fa, { 0xc6, 0x3d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x76e2, gbc.sp());
        EXPECT(0x36fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02DC
        gbc.setState(0xd38e, 0xc254, 0x51e0, 0x2341, 0x1702, 0xd6ef, 0x1, 0x0);
        gbc.writeMem(0xd38e, { 0xc6, 0x91 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc254, gbc.sp());
        EXPECT(0xd390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd38e));
        EXPECT(0x91, gbc.readMem(0xd38f));
        // C6 02DD
        gbc.setState(0xf1, 0x753a, 0x85a0, 0x6ad6, 0x2343, 0xea70, 0x1, 0x1);
        gbc.writeMem(0xf1, { 0xc6, 0xd4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x753a, gbc.sp());
        EXPECT(0xf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02DE
        gbc.setState(0x3bdb, 0x12b8, 0xf9e0, 0xa9cf, 0x53df, 0x658e, 0x0, 0x1);
        gbc.writeMem(0x3bdb, { 0xc6, 0xf8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x12b8, gbc.sp());
        EXPECT(0x3bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02DF
        gbc.setState(0x9c5b, 0xe709, 0x6100, 0x3d32, 0xaf3a, 0xae18, 0x1, 0x0);
        gbc.writeMem(0x9c5b, { 0xc6, 0x6b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe709, gbc.sp());
        EXPECT(0x9c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9c5b));
        EXPECT(0x6b, gbc.readMem(0x9c5c));
        // C6 02E0
        gbc.setState(0xb47f, 0x2af7, 0x34c0, 0xbed7, 0x19d0, 0x773, 0x0, 0x1);
        gbc.writeMem(0xb47f, { 0xc6, 0xc1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0xb481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb47f));
        EXPECT(0xc1, gbc.readMem(0xb480));
        // C6 02E1
        gbc.setState(0x5c61, 0xbf20, 0x40b0, 0xabdc, 0xd2b2, 0x8981, 0x0, 0x1);
        gbc.writeMem(0x5c61, { 0xc6, 0x75 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbf20, gbc.sp());
        EXPECT(0x5c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02E2
        gbc.setState(0xb0de, 0x6989, 0x1030, 0xd68a, 0x521, 0xbc44, 0x1, 0x0);
        gbc.writeMem(0xb0de, { 0xc6, 0x87 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6989, gbc.sp());
        EXPECT(0xb0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb0de));
        EXPECT(0x87, gbc.readMem(0xb0df));
        // C6 02E5
        gbc.setState(0x7058, 0xe6a, 0xe190, 0xd1ab, 0x4142, 0x9563, 0x1, 0x1);
        gbc.writeMem(0x7058, { 0xc6, 0x48 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe6a, gbc.sp());
        EXPECT(0x705a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02E6
        gbc.setState(0xb5c5, 0xa650, 0xc920, 0x3d75, 0xed27, 0x941c, 0x1, 0x1);
        gbc.writeMem(0xb5c5, { 0xc6, 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa650, gbc.sp());
        EXPECT(0xb5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb5c5));
        EXPECT(0x53, gbc.readMem(0xb5c6));
        // C6 02E7
        gbc.setState(0x61c7, 0xcc9a, 0x6490, 0x4783, 0xbfe, 0xc63c, 0x0, 0x1);
        gbc.writeMem(0x61c7, { 0xc6, 0xbe });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcc9a, gbc.sp());
        EXPECT(0x61c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02E8
        gbc.setState(0x8f19, 0x729c, 0xcf30, 0x996d, 0xb110, 0x2c5b, 0x1, 0x0);
        gbc.writeMem(0x8f19, { 0xc6, 0x1b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x729c, gbc.sp());
        EXPECT(0x8f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8f19));
        EXPECT(0x1b, gbc.readMem(0x8f1a));
        // C6 02E9
        gbc.setState(0xe76e, 0xbeb, 0x4350, 0x467e, 0xf865, 0x4721, 0x0, 0x1);
        gbc.writeMem(0xe76e, { 0xc6, 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbeb, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe76e));
        EXPECT(0x7a, gbc.readMem(0xe76f));
        // C6 02EA
        gbc.setState(0x6200, 0x1086, 0xd900, 0xabb2, 0xbf99, 0x9687, 0x1, 0x1);
        gbc.writeMem(0x6200, { 0xc6, 0xa4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1086, gbc.sp());
        EXPECT(0x6202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02EC
        gbc.setState(0x2fed, 0xb247, 0x1540, 0x8e5e, 0x5c57, 0xc8c2, 0x1, 0x0);
        gbc.writeMem(0x2fed, { 0xc6, 0xed });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb247, gbc.sp());
        EXPECT(0x2fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02ED
        gbc.setState(0xd2f6, 0x9f7, 0x9a30, 0xff89, 0x3f0a, 0x28df, 0x0, 0x1);
        gbc.writeMem(0xd2f6, { 0xc6, 0xdb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9f7, gbc.sp());
        EXPECT(0xd2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd2f6));
        EXPECT(0xdb, gbc.readMem(0xd2f7));
        // C6 02EE
        gbc.setState(0x3a1, 0xa20, 0xf1b0, 0xf24d, 0x9894, 0xf50b, 0x1, 0x1);
        gbc.writeMem(0x3a1, { 0xc6, 0x41 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa20, gbc.sp());
        EXPECT(0x3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02EF
        gbc.setState(0xa5f4, 0x2fe8, 0x6070, 0x4423, 0xe458, 0x4070, 0x1, 0x1);
        gbc.writeMem(0xa5f4, { 0xc6, 0xbe });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2fe8, gbc.sp());
        EXPECT(0xa5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa5f4));
        EXPECT(0xbe, gbc.readMem(0xa5f5));
        // C6 02F0
        gbc.setState(0x5527, 0xcbf7, 0x69a0, 0x79f7, 0xc35a, 0x763f, 0x1, 0x0);
        gbc.writeMem(0x5527, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcbf7, gbc.sp());
        EXPECT(0x5529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02F1
        gbc.setState(0x5943, 0xc1ed, 0xec90, 0xc96c, 0x5214, 0x9b85, 0x0, 0x1);
        gbc.writeMem(0x5943, { 0xc6, 0x2d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc1ed, gbc.sp());
        EXPECT(0x5945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02F2
        gbc.setState(0x24b4, 0x3adb, 0x11d0, 0xa42f, 0x2ba2, 0xea7d, 0x1, 0x0);
        gbc.writeMem(0x24b4, { 0xc6, 0x2f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3adb, gbc.sp());
        EXPECT(0x24b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02F3
        gbc.setState(0x9e93, 0x3e61, 0x47a0, 0xdf3c, 0x4ac6, 0x63e5, 0x1, 0x1);
        gbc.writeMem(0x9e93, { 0xc6, 0xdb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3e61, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9e93));
        EXPECT(0xdb, gbc.readMem(0x9e94));
        // C6 02F4
        gbc.setState(0x89a1, 0xe301, 0x2330, 0x6ea5, 0x8ecb, 0xcfc1, 0x0, 0x0);
        gbc.writeMem(0x89a1, { 0xc6, 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe301, gbc.sp());
        EXPECT(0x89a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x89a1));
        EXPECT(0x3f, gbc.readMem(0x89a2));
        // C6 02F5
        gbc.setState(0x94ca, 0x610d, 0x45e0, 0x4238, 0xf7ce, 0x1a3c, 0x0, 0x0);
        gbc.writeMem(0x94ca, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0x94cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x94ca));
        EXPECT(0x64, gbc.readMem(0x94cb));
        // C6 02F6
        gbc.setState(0xa024, 0x7824, 0xff40, 0x9b0c, 0x9bc3, 0xc068, 0x1, 0x0);
        gbc.writeMem(0xa024, { 0xc6, 0x2d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7824, gbc.sp());
        EXPECT(0xa026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa024));
        EXPECT(0x2d, gbc.readMem(0xa025));
        // C6 02F7
        gbc.setState(0x5d6b, 0x86b0, 0xf520, 0x9110, 0x8fea, 0x16bf, 0x1, 0x1);
        gbc.writeMem(0x5d6b, { 0xc6, 0x6e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x86b0, gbc.sp());
        EXPECT(0x5d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02F8
        gbc.setState(0x11e4, 0x9dac, 0xb370, 0xcd68, 0xfac4, 0x66aa, 0x0, 0x0);
        gbc.writeMem(0x11e4, { 0xc6, 0x79 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9dac, gbc.sp());
        EXPECT(0x11e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02F9
        gbc.setState(0x7dbd, 0xc1fb, 0xcac0, 0xabc, 0xaf47, 0xcd87, 0x1, 0x1);
        gbc.writeMem(0x7dbd, { 0xc6, 0xff });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc1fb, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02FA
        gbc.setState(0x70b0, 0x8a9f, 0xa320, 0x77e9, 0x2058, 0x9656, 0x1, 0x1);
        gbc.writeMem(0x70b0, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8a9f, gbc.sp());
        EXPECT(0x70b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 02FB
        gbc.setState(0xa89a, 0xe612, 0x5930, 0x89bb, 0x2e0a, 0xf7fe, 0x1, 0x1);
        gbc.writeMem(0xa89a, { 0xc6, 0x9f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe612, gbc.sp());
        EXPECT(0xa89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa89a));
        EXPECT(0x9f, gbc.readMem(0xa89b));
        // C6 02FC
        gbc.setState(0xd878, 0xacee, 0xb730, 0x5cb3, 0x9783, 0xab4c, 0x0, 0x0);
        gbc.writeMem(0xd878, { 0xc6, 0x2f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xacee, gbc.sp());
        EXPECT(0xd87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd878));
        EXPECT(0x2f, gbc.readMem(0xd879));
        // C6 02FD
        gbc.setState(0x6289, 0xc830, 0x9dd0, 0x427c, 0x27ad, 0x4a77, 0x0, 0x1);
        gbc.writeMem(0x6289, { 0xc6, 0xed });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc830, gbc.sp());
        EXPECT(0x628b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 02FF
        gbc.setState(0x8bcc, 0x1456, 0x530, 0x3238, 0xd33b, 0x1090, 0x0, 0x1);
        gbc.writeMem(0x8bcc, { 0xc6, 0x26 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1456, gbc.sp());
        EXPECT(0x8bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8bcc));
        EXPECT(0x26, gbc.readMem(0x8bcd));
        // C6 0300
        gbc.setState(0x42ec, 0xcecb, 0xc910, 0xc051, 0x670b, 0x91fb, 0x1, 0x1);
        gbc.writeMem(0x42ec, { 0xc6, 0xa3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcecb, gbc.sp());
        EXPECT(0x42ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0301
        gbc.setState(0x9ed4, 0x22c0, 0x2140, 0xfb2a, 0x2a50, 0x69a5, 0x0, 0x1);
        gbc.writeMem(0x9ed4, { 0xc6, 0xb0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x22c0, gbc.sp());
        EXPECT(0x9ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9ed4));
        EXPECT(0xb0, gbc.readMem(0x9ed5));
        // C6 0302
        gbc.setState(0x869d, 0x5a7c, 0x3cf0, 0x7032, 0xe469, 0x6c3, 0x1, 0x1);
        gbc.writeMem(0x869d, { 0xc6, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5a7c, gbc.sp());
        EXPECT(0x869f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x869d));
        EXPECT(0x0, gbc.readMem(0x869e));
        // C6 0303
        gbc.setState(0x9e3a, 0x5eef, 0x23b0, 0x3122, 0x949a, 0xc713, 0x1, 0x1);
        gbc.writeMem(0x9e3a, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5eef, gbc.sp());
        EXPECT(0x9e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9e3a));
        EXPECT(0x33, gbc.readMem(0x9e3b));
        // C6 0304
        gbc.setState(0x9dbf, 0xe66c, 0xc7a0, 0x2435, 0x31ab, 0x863d, 0x0, 0x1);
        gbc.writeMem(0x9dbf, { 0xc6, 0xda });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe66c, gbc.sp());
        EXPECT(0x9dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9dbf));
        EXPECT(0xda, gbc.readMem(0x9dc0));
        // C6 0305
        gbc.setState(0xe6d0, 0xa0be, 0xaa50, 0xcdb5, 0x3d78, 0x58e3, 0x1, 0x0);
        gbc.writeMem(0xe6d0, { 0xc6, 0xd5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa0be, gbc.sp());
        EXPECT(0xe6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe6d0));
        EXPECT(0xd5, gbc.readMem(0xe6d1));
        // C6 0306
        gbc.setState(0x52bc, 0x63fe, 0x13d0, 0xa6fd, 0x5569, 0x441c, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xc6, 0x2a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x63fe, gbc.sp());
        EXPECT(0x52be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0307
        gbc.setState(0x5579, 0x8793, 0x1550, 0xeb18, 0xc8e8, 0x5ed5, 0x0, 0x1);
        gbc.writeMem(0x5579, { 0xc6, 0xb8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8793, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0308
        gbc.setState(0x9b36, 0x1969, 0x9c10, 0x7e05, 0xa0, 0x56a8, 0x0, 0x1);
        gbc.writeMem(0x9b36, { 0xc6, 0x2c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1969, gbc.sp());
        EXPECT(0x9b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9b36));
        EXPECT(0x2c, gbc.readMem(0x9b37));
        // C6 0309
        gbc.setState(0xcfc1, 0x735c, 0x71d0, 0x330c, 0x9abb, 0xe97b, 0x1, 0x0);
        gbc.writeMem(0xcfc1, { 0xc6, 0x4c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x735c, gbc.sp());
        EXPECT(0xcfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcfc1));
        EXPECT(0x4c, gbc.readMem(0xcfc2));
        // C6 030A
        gbc.setState(0xb682, 0x17ae, 0xebd0, 0xd60, 0x331, 0xaa14, 0x1, 0x1);
        gbc.writeMem(0xb682, { 0xc6, 0x31 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x17ae, gbc.sp());
        EXPECT(0xb684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb682));
        EXPECT(0x31, gbc.readMem(0xb683));
        // C6 030B
        gbc.setState(0xb699, 0x7f06, 0x4860, 0x93d6, 0xeb1b, 0xe4f9, 0x1, 0x0);
        gbc.writeMem(0xb699, { 0xc6, 0x89 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7f06, gbc.sp());
        EXPECT(0xb69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb699));
        EXPECT(0x89, gbc.readMem(0xb69a));
        // C6 030C
        gbc.setState(0x4a8b, 0xee85, 0x8a00, 0x10f0, 0xf4f4, 0xb25d, 0x1, 0x0);
        gbc.writeMem(0x4a8b, { 0xc6, 0x1b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0x4a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 030D
        gbc.setState(0xceeb, 0x44a7, 0x88e0, 0x1509, 0x3071, 0xfd2d, 0x1, 0x1);
        gbc.writeMem(0xceeb, { 0xc6, 0xd5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x44a7, gbc.sp());
        EXPECT(0xceed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xceeb));
        EXPECT(0xd5, gbc.readMem(0xceec));
        // C6 030E
        gbc.setState(0x32f6, 0x529b, 0x9ad0, 0x24d4, 0xbdbb, 0xad2b, 0x0, 0x0);
        gbc.writeMem(0x32f6, { 0xc6, 0x19 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x529b, gbc.sp());
        EXPECT(0x32f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 030F
        gbc.setState(0xcfcd, 0xba4a, 0xe410, 0x8f8c, 0x1b0, 0xd53, 0x1, 0x1);
        gbc.writeMem(0xcfcd, { 0xc6, 0x68 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xba4a, gbc.sp());
        EXPECT(0xcfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcfcd));
        EXPECT(0x68, gbc.readMem(0xcfce));
        // C6 0310
        gbc.setState(0x7454, 0xf1b2, 0xc20, 0x3f95, 0x8b87, 0xb769, 0x1, 0x1);
        gbc.writeMem(0x7454, { 0xc6, 0x19 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf1b2, gbc.sp());
        EXPECT(0x7456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0311
        gbc.setState(0x6c9a, 0x9ace, 0xd780, 0xc725, 0x725d, 0x968e, 0x0, 0x1);
        gbc.writeMem(0x6c9a, { 0xc6, 0xd2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9ace, gbc.sp());
        EXPECT(0x6c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0312
        gbc.setState(0x8180, 0x30cc, 0x2e00, 0xf2c9, 0x7a65, 0x16f2, 0x1, 0x0);
        gbc.writeMem(0x8180, { 0xc6, 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x30cc, gbc.sp());
        EXPECT(0x8182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8180));
        EXPECT(0x51, gbc.readMem(0x8181));
        // C6 0313
        gbc.setState(0xeb26, 0x4189, 0x5360, 0xecba, 0x37e9, 0x60e3, 0x0, 0x0);
        gbc.writeMem(0xeb26, { 0xc6, 0xa3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4189, gbc.sp());
        EXPECT(0xeb28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xeb26));
        EXPECT(0xa3, gbc.readMem(0xeb27));
        // C6 0314
        gbc.setState(0x7d8c, 0x821c, 0xbf20, 0x6331, 0xbdc1, 0x9066, 0x1, 0x1);
        gbc.writeMem(0x7d8c, { 0xc6, 0x41 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x821c, gbc.sp());
        EXPECT(0x7d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0315
        gbc.setState(0xe71e, 0x1cbd, 0x4290, 0x13ea, 0xeff1, 0xaf75, 0x0, 0x1);
        gbc.writeMem(0xe71e, { 0xc6, 0xb2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1cbd, gbc.sp());
        EXPECT(0xe720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe71e));
        EXPECT(0xb2, gbc.readMem(0xe71f));
        // C6 0316
        gbc.setState(0xd8ae, 0xe471, 0x7190, 0x6c3b, 0x1e00, 0xcf5b, 0x0, 0x0);
        gbc.writeMem(0xd8ae, { 0xc6, 0x45 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe471, gbc.sp());
        EXPECT(0xd8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd8ae));
        EXPECT(0x45, gbc.readMem(0xd8af));
        // C6 0317
        gbc.setState(0x4048, 0xe37f, 0x68e0, 0x5e4d, 0x92cb, 0x270a, 0x0, 0x1);
        gbc.writeMem(0x4048, { 0xc6, 0x65 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe37f, gbc.sp());
        EXPECT(0x404a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0318
        gbc.setState(0x8df2, 0xce94, 0xd9d0, 0xd75b, 0x5d2, 0xaa89, 0x0, 0x0);
        gbc.writeMem(0x8df2, { 0xc6, 0xca });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xce94, gbc.sp());
        EXPECT(0x8df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8df2));
        EXPECT(0xca, gbc.readMem(0x8df3));
        // C6 0319
        gbc.setState(0xf6e, 0xecad, 0x64e0, 0xb36b, 0xca7a, 0x3ce0, 0x0, 0x1);
        gbc.writeMem(0xf6e, { 0xc6, 0x36 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xecad, gbc.sp());
        EXPECT(0xf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 031A
        gbc.setState(0xd2, 0x89c0, 0xad0, 0xe9c0, 0xf2fc, 0x5a07, 0x0, 0x1);
        gbc.writeMem(0xd2, { 0xc6, 0xc9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x89c0, gbc.sp());
        EXPECT(0xd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 031B
        gbc.setState(0x69d8, 0xc2d0, 0xcce0, 0x82c5, 0x6be5, 0x64fe, 0x0, 0x0);
        gbc.writeMem(0x69d8, { 0xc6, 0x35 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc2d0, gbc.sp());
        EXPECT(0x69da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 031D
        gbc.setState(0x60a5, 0x3834, 0x5290, 0xbee0, 0xdeec, 0x14b7, 0x1, 0x0);
        gbc.writeMem(0x60a5, { 0xc6, 0xca });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3834, gbc.sp());
        EXPECT(0x60a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 031E
        gbc.setState(0x516e, 0xc2fd, 0xf910, 0x5408, 0x90d, 0xe3e2, 0x0, 0x1);
        gbc.writeMem(0x516e, { 0xc6, 0x12 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc2fd, gbc.sp());
        EXPECT(0x5170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 031F
        gbc.setState(0x5b30, 0x27a8, 0x4cf0, 0x9e91, 0x7a5e, 0x4417, 0x0, 0x1);
        gbc.writeMem(0x5b30, { 0xc6, 0xb8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x27a8, gbc.sp());
        EXPECT(0x5b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0320
        gbc.setState(0xd0ad, 0xc21c, 0xd40, 0x923f, 0x8590, 0xcb43, 0x1, 0x0);
        gbc.writeMem(0xd0ad, { 0xc6, 0xf9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc21c, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd0ad));
        EXPECT(0xf9, gbc.readMem(0xd0ae));
        // C6 0321
        gbc.setState(0x48f7, 0xa1a3, 0x5d0, 0x351f, 0x8865, 0xef4, 0x0, 0x1);
        gbc.writeMem(0x48f7, { 0xc6, 0x80 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa1a3, gbc.sp());
        EXPECT(0x48f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0322
        gbc.setState(0xa866, 0xee61, 0xb290, 0x801e, 0x6c4a, 0x93ae, 0x1, 0x0);
        gbc.writeMem(0xa866, { 0xc6, 0x75 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xee61, gbc.sp());
        EXPECT(0xa868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa866));
        EXPECT(0x75, gbc.readMem(0xa867));
        // C6 0323
        gbc.setState(0x2bb1, 0xc6b4, 0xddd0, 0xcf3c, 0x5110, 0x3874, 0x0, 0x0);
        gbc.writeMem(0x2bb1, { 0xc6, 0x19 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc6b4, gbc.sp());
        EXPECT(0x2bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0324
        gbc.setState(0x1230, 0xd904, 0x5f00, 0x937a, 0xa14c, 0x16cd, 0x0, 0x1);
        gbc.writeMem(0x1230, { 0xc6, 0x83 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd904, gbc.sp());
        EXPECT(0x1232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0325
        gbc.setState(0x47e4, 0x1cec, 0xfdc0, 0xb11e, 0x14d3, 0x6e1d, 0x0, 0x1);
        gbc.writeMem(0x47e4, { 0xc6, 0xfb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1cec, gbc.sp());
        EXPECT(0x47e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0326
        gbc.setState(0x7807, 0x745, 0x7680, 0xc81d, 0xe720, 0x120, 0x1, 0x0);
        gbc.writeMem(0x7807, { 0xc6, 0x2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x745, gbc.sp());
        EXPECT(0x7809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0327
        gbc.setState(0x7661, 0xd290, 0xa730, 0x48d6, 0x36eb, 0xd535, 0x1, 0x0);
        gbc.writeMem(0x7661, { 0xc6, 0x67 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd290, gbc.sp());
        EXPECT(0x7663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0328
        gbc.setState(0x7277, 0xcbf2, 0x5e50, 0xba85, 0xce01, 0xd9c9, 0x0, 0x1);
        gbc.writeMem(0x7277, { 0xc6, 0x66 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcbf2, gbc.sp());
        EXPECT(0x7279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0329
        gbc.setState(0x11dd, 0x7f72, 0x1920, 0x8803, 0x6aeb, 0x8a1, 0x1, 0x1);
        gbc.writeMem(0x11dd, { 0xc6, 0xb0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7f72, gbc.sp());
        EXPECT(0x11df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 032A
        gbc.setState(0x2d11, 0xb4df, 0xcb20, 0x9b26, 0x572d, 0x246f, 0x0, 0x1);
        gbc.writeMem(0x2d11, { 0xc6, 0xb5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb4df, gbc.sp());
        EXPECT(0x2d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 032B
        gbc.setState(0x1112, 0x6244, 0xc6c0, 0x32a4, 0x508f, 0x3742, 0x0, 0x0);
        gbc.writeMem(0x1112, { 0xc6, 0x53 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6244, gbc.sp());
        EXPECT(0x1114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 032C
        gbc.setState(0x2cf7, 0x8760, 0xf9c0, 0x43fc, 0xada0, 0x45a, 0x1, 0x1);
        gbc.writeMem(0x2cf7, { 0xc6, 0xf2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8760, gbc.sp());
        EXPECT(0x2cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 032E
        gbc.setState(0xe5d9, 0x6722, 0x7f90, 0xf42, 0x1c58, 0x3fac, 0x1, 0x0);
        gbc.writeMem(0xe5d9, { 0xc6, 0xf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6722, gbc.sp());
        EXPECT(0xe5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe5d9));
        EXPECT(0xf, gbc.readMem(0xe5da));
        // C6 032F
        gbc.setState(0x1b7d, 0x59a9, 0x8a40, 0x529b, 0xc4ac, 0x2f00, 0x1, 0x1);
        gbc.writeMem(0x1b7d, { 0xc6, 0x5f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x59a9, gbc.sp());
        EXPECT(0x1b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0330
        gbc.setState(0x5540, 0x554e, 0x48b0, 0xc57b, 0xf33b, 0xda1, 0x1, 0x1);
        gbc.writeMem(0x5540, { 0xc6, 0xba });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x554e, gbc.sp());
        EXPECT(0x5542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0331
        gbc.setState(0xafb8, 0xd4bd, 0x6960, 0x8c5f, 0x22a, 0x59db, 0x1, 0x0);
        gbc.writeMem(0xafb8, { 0xc6, 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd4bd, gbc.sp());
        EXPECT(0xafba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xafb8));
        EXPECT(0x9b, gbc.readMem(0xafb9));
        // C6 0332
        gbc.setState(0xdcbe, 0xf8b6, 0x7be0, 0xcc93, 0xb233, 0x13d5, 0x0, 0x0);
        gbc.writeMem(0xdcbe, { 0xc6, 0x72 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf8b6, gbc.sp());
        EXPECT(0xdcc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdcbe));
        EXPECT(0x72, gbc.readMem(0xdcbf));
        // C6 0333
        gbc.setState(0x1c0b, 0x151b, 0xe8b0, 0xf1ef, 0x1473, 0xc92f, 0x0, 0x1);
        gbc.writeMem(0x1c0b, { 0xc6, 0xdc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x151b, gbc.sp());
        EXPECT(0x1c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0334
        gbc.setState(0xfaa, 0x86f8, 0x1510, 0x123f, 0xd94, 0xfc1a, 0x1, 0x1);
        gbc.writeMem(0xfaa, { 0xc6, 0x24 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x86f8, gbc.sp());
        EXPECT(0xfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0335
        gbc.setState(0xabec, 0x3373, 0x150, 0x4887, 0x30ab, 0x8f65, 0x1, 0x0);
        gbc.writeMem(0xabec, { 0xc6, 0x4a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3373, gbc.sp());
        EXPECT(0xabee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xabec));
        EXPECT(0x4a, gbc.readMem(0xabed));
        // C6 0336
        gbc.setState(0x9127, 0x1bea, 0xf2f0, 0x1127, 0x9cc0, 0xdd6d, 0x1, 0x0);
        gbc.writeMem(0x9127, { 0xc6, 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1bea, gbc.sp());
        EXPECT(0x9129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9127));
        EXPECT(0xb5, gbc.readMem(0x9128));
        // C6 0337
        gbc.setState(0x2928, 0x5a9d, 0x3300, 0xf6f2, 0xd3, 0xaedf, 0x0, 0x0);
        gbc.writeMem(0x2928, { 0xc6, 0xe1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5a9d, gbc.sp());
        EXPECT(0x292a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0338
        gbc.setState(0x7b52, 0x1794, 0xfc10, 0x8913, 0x511e, 0x9588, 0x1, 0x1);
        gbc.writeMem(0x7b52, { 0xc6, 0xae });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1794, gbc.sp());
        EXPECT(0x7b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0339
        gbc.setState(0x8447, 0xed78, 0xa090, 0x7a28, 0xea61, 0x9ae6, 0x1, 0x0);
        gbc.writeMem(0x8447, { 0xc6, 0x98 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xed78, gbc.sp());
        EXPECT(0x8449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8447));
        EXPECT(0x98, gbc.readMem(0x8448));
        // C6 033A
        gbc.setState(0xa7f5, 0x3e40, 0x2b00, 0xc1e7, 0xf5ed, 0x2389, 0x0, 0x1);
        gbc.writeMem(0xa7f5, { 0xc6, 0xa0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3e40, gbc.sp());
        EXPECT(0xa7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa7f5));
        EXPECT(0xa0, gbc.readMem(0xa7f6));
        // C6 033C
        gbc.setState(0xdb61, 0x5201, 0x4cf0, 0x6f, 0xbf14, 0x4f33, 0x0, 0x1);
        gbc.writeMem(0xdb61, { 0xc6, 0x16 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5201, gbc.sp());
        EXPECT(0xdb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdb61));
        EXPECT(0x16, gbc.readMem(0xdb62));
        // C6 033D
        gbc.setState(0x2e09, 0x602c, 0x6300, 0xca76, 0xf1b6, 0xb058, 0x1, 0x0);
        gbc.writeMem(0x2e09, { 0xc6, 0x2f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x602c, gbc.sp());
        EXPECT(0x2e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 033E
        gbc.setState(0x8ccc, 0x5b7e, 0xd360, 0x8571, 0xf120, 0xa7c4, 0x0, 0x0);
        gbc.writeMem(0x8ccc, { 0xc6, 0x27 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5b7e, gbc.sp());
        EXPECT(0x8cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8ccc));
        EXPECT(0x27, gbc.readMem(0x8ccd));
        // C6 033F
        gbc.setState(0x7b79, 0x681, 0xc870, 0x4ab7, 0xa285, 0xaa6f, 0x0, 0x0);
        gbc.writeMem(0x7b79, { 0xc6, 0xc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x681, gbc.sp());
        EXPECT(0x7b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0340
        gbc.setState(0x71bb, 0x5f29, 0x3000, 0xcef9, 0x3f5d, 0xc755, 0x1, 0x1);
        gbc.writeMem(0x71bb, { 0xc6, 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5f29, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0341
        gbc.setState(0x9cfb, 0x347b, 0xb480, 0x47e9, 0xc452, 0xa668, 0x1, 0x0);
        gbc.writeMem(0x9cfb, { 0xc6, 0x33 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x347b, gbc.sp());
        EXPECT(0x9cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9cfb));
        EXPECT(0x33, gbc.readMem(0x9cfc));
        // C6 0342
        gbc.setState(0x488f, 0x25fe, 0xa260, 0xe45, 0xc6a7, 0x62ca, 0x1, 0x1);
        gbc.writeMem(0x488f, { 0xc6, 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x25fe, gbc.sp());
        EXPECT(0x4891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0343
        gbc.setState(0x9306, 0xcf1c, 0xf000, 0xb938, 0x706a, 0x4739, 0x1, 0x1);
        gbc.writeMem(0x9306, { 0xc6, 0x38 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcf1c, gbc.sp());
        EXPECT(0x9308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9306));
        EXPECT(0x38, gbc.readMem(0x9307));
        // C6 0344
        gbc.setState(0x8289, 0x9413, 0x6c20, 0xd6e1, 0x736d, 0x6a6e, 0x0, 0x1);
        gbc.writeMem(0x8289, { 0xc6, 0xdc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9413, gbc.sp());
        EXPECT(0x828b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8289));
        EXPECT(0xdc, gbc.readMem(0x828a));
        // C6 0345
        gbc.setState(0x3cfe, 0xfa71, 0x3e30, 0x389b, 0xd9ae, 0xb80f, 0x0, 0x1);
        gbc.writeMem(0x3cfe, { 0xc6, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfa71, gbc.sp());
        EXPECT(0x3d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0346
        gbc.setState(0xac63, 0x715c, 0x1920, 0x5e85, 0xc2bf, 0x35a1, 0x0, 0x0);
        gbc.writeMem(0xac63, { 0xc6, 0x9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x715c, gbc.sp());
        EXPECT(0xac65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xac63));
        EXPECT(0x9, gbc.readMem(0xac64));
        // C6 0347
        gbc.setState(0x8e1a, 0x2cf5, 0xbe00, 0x2772, 0x8be9, 0x8895, 0x0, 0x0);
        gbc.writeMem(0x8e1a, { 0xc6, 0x23 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2cf5, gbc.sp());
        EXPECT(0x8e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8e1a));
        EXPECT(0x23, gbc.readMem(0x8e1b));
        // C6 0348
        gbc.setState(0xdb58, 0xee58, 0x8890, 0x6915, 0xd2b4, 0x1fcc, 0x0, 0x1);
        gbc.writeMem(0xdb58, { 0xc6, 0x17 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xee58, gbc.sp());
        EXPECT(0xdb5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdb58));
        EXPECT(0x17, gbc.readMem(0xdb59));
        // C6 0349
        gbc.setState(0xadf, 0x3609, 0x4750, 0x3df9, 0x60c3, 0x628f, 0x0, 0x1);
        gbc.writeMem(0xadf, { 0xc6, 0x57 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3609, gbc.sp());
        EXPECT(0xae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 034A
        gbc.setState(0xe066, 0x23bf, 0x8420, 0xa5eb, 0x7d0a, 0xd3f9, 0x1, 0x0);
        gbc.writeMem(0xe066, { 0xc6, 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x23bf, gbc.sp());
        EXPECT(0xe068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe066));
        EXPECT(0x7a, gbc.readMem(0xe067));
        // C6 034B
        gbc.setState(0xd212, 0xa936, 0x3df0, 0x5136, 0x8fca, 0x7a3e, 0x0, 0x0);
        gbc.writeMem(0xd212, { 0xc6, 0x2f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa936, gbc.sp());
        EXPECT(0xd214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd212));
        EXPECT(0x2f, gbc.readMem(0xd213));
        // C6 034C
        gbc.setState(0xeccc, 0x7282, 0xb720, 0xdc90, 0x9d92, 0x92ce, 0x1, 0x0);
        gbc.writeMem(0xeccc, { 0xc6, 0x1b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7282, gbc.sp());
        EXPECT(0xecce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xeccc));
        EXPECT(0x1b, gbc.readMem(0xeccd));
        // C6 034D
        gbc.setState(0xc4f7, 0xf13, 0x80c0, 0x9051, 0x3a32, 0xeac7, 0x1, 0x0);
        gbc.writeMem(0xc4f7, { 0xc6, 0x50 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf13, gbc.sp());
        EXPECT(0xc4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc4f7));
        EXPECT(0x50, gbc.readMem(0xc4f8));
        // C6 034E
        gbc.setState(0xbab3, 0x4cc8, 0x2aa0, 0xae81, 0xe706, 0x9319, 0x1, 0x1);
        gbc.writeMem(0xbab3, { 0xc6, 0xfc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4cc8, gbc.sp());
        EXPECT(0xbab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbab3));
        EXPECT(0xfc, gbc.readMem(0xbab4));
        // C6 034F
        gbc.setState(0xff7, 0x9fbe, 0x9830, 0x5eda, 0xc85d, 0xe69b, 0x0, 0x0);
        gbc.writeMem(0xff7, { 0xc6, 0xde });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9fbe, gbc.sp());
        EXPECT(0xff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0350
        gbc.setState(0xaa6b, 0x94df, 0x2660, 0xb4d9, 0x583b, 0x1b2c, 0x0, 0x1);
        gbc.writeMem(0xaa6b, { 0xc6, 0x48 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x94df, gbc.sp());
        EXPECT(0xaa6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaa6b));
        EXPECT(0x48, gbc.readMem(0xaa6c));
        // C6 0351
        gbc.setState(0x6a79, 0x8fba, 0xe570, 0x51fb, 0x99a5, 0xfcbe, 0x0, 0x1);
        gbc.writeMem(0x6a79, { 0xc6, 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8fba, gbc.sp());
        EXPECT(0x6a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0354
        gbc.setState(0x94a4, 0x39c0, 0xfd30, 0xd8e7, 0x28e3, 0x786, 0x1, 0x1);
        gbc.writeMem(0x94a4, { 0xc6, 0x20 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x39c0, gbc.sp());
        EXPECT(0x94a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x94a4));
        EXPECT(0x20, gbc.readMem(0x94a5));
        // C6 0355
        gbc.setState(0xb523, 0x8f20, 0x3ee0, 0x6266, 0xa59c, 0xd33b, 0x1, 0x1);
        gbc.writeMem(0xb523, { 0xc6, 0x10 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8f20, gbc.sp());
        EXPECT(0xb525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb523));
        EXPECT(0x10, gbc.readMem(0xb524));
        // C6 0356
        gbc.setState(0xb143, 0xd7fa, 0xf280, 0xe0fd, 0x2174, 0xb1ca, 0x0, 0x0);
        gbc.writeMem(0xb143, { 0xc6, 0x90 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd7fa, gbc.sp());
        EXPECT(0xb145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb143));
        EXPECT(0x90, gbc.readMem(0xb144));
        // C6 0359
        gbc.setState(0x1ea6, 0x70aa, 0xec20, 0xcb36, 0x1aa1, 0x364c, 0x0, 0x1);
        gbc.writeMem(0x1ea6, { 0xc6, 0xfb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0x1ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 035A
        gbc.setState(0xd323, 0x4a, 0xaab0, 0x7305, 0xb872, 0x40b8, 0x1, 0x1);
        gbc.writeMem(0xd323, { 0xc6, 0xec });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4a, gbc.sp());
        EXPECT(0xd325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd323));
        EXPECT(0xec, gbc.readMem(0xd324));
        // C6 035B
        gbc.setState(0xb616, 0xbb8b, 0x9b30, 0x318b, 0x12df, 0xa357, 0x0, 0x0);
        gbc.writeMem(0xb616, { 0xc6, 0x61 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbb8b, gbc.sp());
        EXPECT(0xb618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb616));
        EXPECT(0x61, gbc.readMem(0xb617));
        // C6 035C
        gbc.setState(0xb62, 0xccbb, 0x80a0, 0xc3e, 0xa253, 0xecd5, 0x1, 0x1);
        gbc.writeMem(0xb62, { 0xc6, 0x90 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xccbb, gbc.sp());
        EXPECT(0xb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 035D
        gbc.setState(0x284d, 0xde74, 0x130, 0x1d6b, 0x943, 0x7278, 0x0, 0x1);
        gbc.writeMem(0x284d, { 0xc6, 0xa1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xde74, gbc.sp());
        EXPECT(0x284f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 035E
        gbc.setState(0xa17f, 0x1a9f, 0x8670, 0xde4, 0x4674, 0xe41a, 0x0, 0x0);
        gbc.writeMem(0xa17f, { 0xc6, 0xf1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1a9f, gbc.sp());
        EXPECT(0xa181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa17f));
        EXPECT(0xf1, gbc.readMem(0xa180));
        // C6 035F
        gbc.setState(0x3f44, 0xf578, 0xa790, 0x4240, 0xf890, 0x2d95, 0x1, 0x1);
        gbc.writeMem(0x3f44, { 0xc6, 0xf6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf578, gbc.sp());
        EXPECT(0x3f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0360
        gbc.setState(0xa376, 0x14a5, 0x9bb0, 0xaf2c, 0xe0ba, 0xf017, 0x1, 0x1);
        gbc.writeMem(0xa376, { 0xc6, 0xba });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x14a5, gbc.sp());
        EXPECT(0xa378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa376));
        EXPECT(0xba, gbc.readMem(0xa377));
        // C6 0361
        gbc.setState(0xcf47, 0xf820, 0xf3b0, 0xe5f8, 0x75ba, 0x7a8b, 0x1, 0x0);
        gbc.writeMem(0xcf47, { 0xc6, 0xa4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf820, gbc.sp());
        EXPECT(0xcf49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcf47));
        EXPECT(0xa4, gbc.readMem(0xcf48));
        // C6 0362
        gbc.setState(0x57f6, 0x3e75, 0x1c10, 0xa467, 0x2439, 0xc30, 0x0, 0x1);
        gbc.writeMem(0x57f6, { 0xc6, 0x26 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3e75, gbc.sp());
        EXPECT(0x57f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0363
        gbc.setState(0x3412, 0xfc2d, 0xba40, 0x8599, 0xcacd, 0xdd42, 0x1, 0x1);
        gbc.writeMem(0x3412, { 0xc6, 0x89 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfc2d, gbc.sp());
        EXPECT(0x3414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0364
        gbc.setState(0xe302, 0xd6f3, 0x5e0, 0x35c2, 0xd1a6, 0x6165, 0x1, 0x1);
        gbc.writeMem(0xe302, { 0xc6, 0x62 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd6f3, gbc.sp());
        EXPECT(0xe304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe302));
        EXPECT(0x62, gbc.readMem(0xe303));
        // C6 0366
        gbc.setState(0xc2d, 0x67f5, 0x3470, 0xd649, 0xcc73, 0xedaa, 0x0, 0x1);
        gbc.writeMem(0xc2d, { 0xc6, 0x89 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x67f5, gbc.sp());
        EXPECT(0xc2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0367
        gbc.setState(0x5b9c, 0x3db, 0x3ed0, 0x7420, 0xd985, 0xab3f, 0x0, 0x1);
        gbc.writeMem(0x5b9c, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3db, gbc.sp());
        EXPECT(0x5b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0368
        gbc.setState(0x648d, 0xd52f, 0x4e00, 0x715c, 0x3efa, 0x7e93, 0x0, 0x0);
        gbc.writeMem(0x648d, { 0xc6, 0x62 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd52f, gbc.sp());
        EXPECT(0x648f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 036A
        gbc.setState(0x6bc0, 0xe42e, 0x18b0, 0xeb70, 0xa678, 0x3296, 0x0, 0x0);
        gbc.writeMem(0x6bc0, { 0xc6, 0x85 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe42e, gbc.sp());
        EXPECT(0x6bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 036B
        gbc.setState(0x3e2b, 0x3d30, 0xb9c0, 0x591e, 0x50a7, 0x4753, 0x0, 0x1);
        gbc.writeMem(0x3e2b, { 0xc6, 0xa7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3d30, gbc.sp());
        EXPECT(0x3e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 036C
        gbc.setState(0x733e, 0x1d7f, 0xd680, 0xbae6, 0xd271, 0x7c2, 0x1, 0x1);
        gbc.writeMem(0x733e, { 0xc6, 0xfc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1d7f, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 036D
        gbc.setState(0x8465, 0xcd6d, 0x5c40, 0xa113, 0xec14, 0x4085, 0x1, 0x1);
        gbc.writeMem(0x8465, { 0xc6, 0xbd });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcd6d, gbc.sp());
        EXPECT(0x8467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8465));
        EXPECT(0xbd, gbc.readMem(0x8466));
        // C6 036E
        gbc.setState(0x4f16, 0x4906, 0xe7c0, 0xcc78, 0x1e6a, 0x9fc7, 0x0, 0x1);
        gbc.writeMem(0x4f16, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4906, gbc.sp());
        EXPECT(0x4f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 036F
        gbc.setState(0xdeb1, 0x20e4, 0x57a0, 0xdbf7, 0x2318, 0x133b, 0x0, 0x0);
        gbc.writeMem(0xdeb1, { 0xc6, 0xef });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x20e4, gbc.sp());
        EXPECT(0xdeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdeb1));
        EXPECT(0xef, gbc.readMem(0xdeb2));
        // C6 0370
        gbc.setState(0xe059, 0x6545, 0x66e0, 0x94cb, 0xa0d9, 0xd7b2, 0x1, 0x0);
        gbc.writeMem(0xe059, { 0xc6, 0x3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6545, gbc.sp());
        EXPECT(0xe05b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe059));
        EXPECT(0x3, gbc.readMem(0xe05a));
        // C6 0371
        gbc.setState(0x5783, 0x8d3e, 0x5ef0, 0x579, 0xd16f, 0xc23f, 0x0, 0x1);
        gbc.writeMem(0x5783, { 0xc6, 0x9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8d3e, gbc.sp());
        EXPECT(0x5785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0372
        gbc.setState(0x814, 0x19f5, 0xd140, 0xd6bc, 0x65e4, 0x3027, 0x1, 0x1);
        gbc.writeMem(0x814, { 0xc6, 0xe5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x19f5, gbc.sp());
        EXPECT(0x816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0373
        gbc.setState(0x29d9, 0xb4d1, 0x8930, 0xc529, 0x9ea7, 0xe022, 0x1, 0x0);
        gbc.writeMem(0x29d9, { 0xc6, 0xe3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb4d1, gbc.sp());
        EXPECT(0x29db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0374
        gbc.setState(0x6526, 0x5e3f, 0x8b40, 0xb43d, 0x2d78, 0xf9ed, 0x0, 0x1);
        gbc.writeMem(0x6526, { 0xc6, 0x76 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0375
        gbc.setState(0xb15a, 0xf1eb, 0x4b00, 0x7306, 0x91f5, 0x7fa6, 0x0, 0x0);
        gbc.writeMem(0xb15a, { 0xc6, 0x7b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf1eb, gbc.sp());
        EXPECT(0xb15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb15a));
        EXPECT(0x7b, gbc.readMem(0xb15b));
        // C6 0376
        gbc.setState(0x6b29, 0x4d9b, 0x25d0, 0xa90e, 0x386c, 0x204c, 0x0, 0x1);
        gbc.writeMem(0x6b29, { 0xc6, 0x92 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4d9b, gbc.sp());
        EXPECT(0x6b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0377
        gbc.setState(0x24de, 0xe4f, 0x410, 0xb3fd, 0xfdeb, 0x4414, 0x1, 0x1);
        gbc.writeMem(0x24de, { 0xc6, 0x38 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe4f, gbc.sp());
        EXPECT(0x24e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0378
        gbc.setState(0xa6fe, 0x6bff, 0x1a20, 0xe093, 0x2b1f, 0x3c35, 0x1, 0x0);
        gbc.writeMem(0xa6fe, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6bff, gbc.sp());
        EXPECT(0xa700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa6fe));
        EXPECT(0x84, gbc.readMem(0xa6ff));
        // C6 0379
        gbc.setState(0x193f, 0x23d5, 0x2820, 0xf720, 0xb41, 0xfe53, 0x1, 0x1);
        gbc.writeMem(0x193f, { 0xc6, 0x12 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x23d5, gbc.sp());
        EXPECT(0x1941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 037A
        gbc.setState(0x179c, 0x4c93, 0xa9a0, 0x9afe, 0xbc33, 0xded6, 0x1, 0x0);
        gbc.writeMem(0x179c, { 0xc6, 0xbd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4c93, gbc.sp());
        EXPECT(0x179e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 037B
        gbc.setState(0x5136, 0x776, 0x2790, 0x3c5e, 0xb5a9, 0xd48a, 0x1, 0x0);
        gbc.writeMem(0x5136, { 0xc6, 0x2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x776, gbc.sp());
        EXPECT(0x5138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 037C
        gbc.setState(0x6a0c, 0xd340, 0x44b0, 0x16d3, 0x49d9, 0x6d09, 0x1, 0x0);
        gbc.writeMem(0x6a0c, { 0xc6, 0xdf });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd340, gbc.sp());
        EXPECT(0x6a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 037D
        gbc.setState(0x863b, 0x9f2, 0x9840, 0xdb07, 0x48a5, 0x975a, 0x0, 0x1);
        gbc.writeMem(0x863b, { 0xc6, 0x58 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9f2, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x863b));
        EXPECT(0x58, gbc.readMem(0x863c));
        // C6 037E
        gbc.setState(0x89b3, 0x7c4e, 0x30f0, 0xb9, 0xbd25, 0x7e23, 0x1, 0x0);
        gbc.writeMem(0x89b3, { 0xc6, 0x95 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7c4e, gbc.sp());
        EXPECT(0x89b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x89b3));
        EXPECT(0x95, gbc.readMem(0x89b4));
        // C6 037F
        gbc.setState(0x69c9, 0xbcb7, 0x25a0, 0x26ef, 0xf37f, 0x460f, 0x0, 0x0);
        gbc.writeMem(0x69c9, { 0xc6, 0x14 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbcb7, gbc.sp());
        EXPECT(0x69cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0380
        gbc.setState(0x6477, 0x7a7a, 0xa880, 0x260e, 0x4483, 0xee6d, 0x1, 0x0);
        gbc.writeMem(0x6477, { 0xc6, 0x42 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7a7a, gbc.sp());
        EXPECT(0x6479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0381
        gbc.setState(0x7778, 0x33f6, 0x78c0, 0xf49c, 0x41e, 0xe4b7, 0x0, 0x1);
        gbc.writeMem(0x7778, { 0xc6, 0xd9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x33f6, gbc.sp());
        EXPECT(0x777a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0382
        gbc.setState(0x5fb, 0xa7ae, 0x1670, 0xc50c, 0xadb5, 0x75be, 0x0, 0x1);
        gbc.writeMem(0x5fb, { 0xc6, 0xd4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa7ae, gbc.sp());
        EXPECT(0x5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0383
        gbc.setState(0x39cd, 0x2688, 0x43d0, 0x1fdc, 0x1ea4, 0x2228, 0x1, 0x0);
        gbc.writeMem(0x39cd, { 0xc6, 0xc5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2688, gbc.sp());
        EXPECT(0x39cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0384
        gbc.setState(0x238d, 0xfea6, 0x1440, 0xd5c, 0x9316, 0x9857, 0x1, 0x0);
        gbc.writeMem(0x238d, { 0xc6, 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfea6, gbc.sp());
        EXPECT(0x238f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 0385
        gbc.setState(0xaded, 0x765a, 0xfb50, 0xa257, 0x7247, 0xdec9, 0x1, 0x0);
        gbc.writeMem(0xaded, { 0xc6, 0x8a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x765a, gbc.sp());
        EXPECT(0xadef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaded));
        EXPECT(0x8a, gbc.readMem(0xadee));
        // C6 0386
        gbc.setState(0xe571, 0xaf69, 0x14c0, 0x21c6, 0x84b6, 0xaf8, 0x0, 0x0);
        gbc.writeMem(0xe571, { 0xc6, 0xcf });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaf69, gbc.sp());
        EXPECT(0xe573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe571));
        EXPECT(0xcf, gbc.readMem(0xe572));
        // C6 0387
        gbc.setState(0xc71e, 0xaa75, 0x9c40, 0x23d5, 0x588e, 0xf662, 0x1, 0x1);
        gbc.writeMem(0xc71e, { 0xc6, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaa75, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc71e));
        EXPECT(0x0, gbc.readMem(0xc71f));
        // C6 0388
        gbc.setState(0xc087, 0x1314, 0x7220, 0xd8ac, 0x67b7, 0xbe9b, 0x0, 0x1);
        gbc.writeMem(0xc087, { 0xc6, 0x97 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1314, gbc.sp());
        EXPECT(0xc089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc087));
        EXPECT(0x97, gbc.readMem(0xc088));
        // C6 038A
        gbc.setState(0xe9ef, 0x60e, 0xc440, 0x4d11, 0xb681, 0x2a16, 0x1, 0x0);
        gbc.writeMem(0xe9ef, { 0xc6, 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x60e, gbc.sp());
        EXPECT(0xe9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe9ef));
        EXPECT(0x89, gbc.readMem(0xe9f0));
        // C6 038B
        gbc.setState(0x942b, 0xe7ea, 0xe410, 0xdcaf, 0x53a9, 0x1c77, 0x1, 0x1);
        gbc.writeMem(0x942b, { 0xc6, 0xb1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe7ea, gbc.sp());
        EXPECT(0x942d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x942b));
        EXPECT(0xb1, gbc.readMem(0x942c));
        // C6 038C
        gbc.setState(0xdac1, 0xbf80, 0x8a70, 0xb895, 0x11e9, 0xd2be, 0x1, 0x1);
        gbc.writeMem(0xdac1, { 0xc6, 0x1d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbf80, gbc.sp());
        EXPECT(0xdac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdac1));
        EXPECT(0x1d, gbc.readMem(0xdac2));
        // C6 038D
        gbc.setState(0x80d6, 0x1cbb, 0x94a0, 0xa650, 0x4615, 0x2d66, 0x0, 0x1);
        gbc.writeMem(0x80d6, { 0xc6, 0xab });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1cbb, gbc.sp());
        EXPECT(0x80d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x80d6));
        EXPECT(0xab, gbc.readMem(0x80d7));
        // C6 038F
        gbc.setState(0x886b, 0xb2e0, 0x2530, 0x6da, 0x5a9c, 0x17cd, 0x0, 0x1);
        gbc.writeMem(0x886b, { 0xc6, 0xb5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb2e0, gbc.sp());
        EXPECT(0x886d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x886b));
        EXPECT(0xb5, gbc.readMem(0x886c));
        // C6 0390
        gbc.setState(0x8c0c, 0x4bb3, 0x98b0, 0x1dbf, 0xf42e, 0xe1e5, 0x0, 0x1);
        gbc.writeMem(0x8c0c, { 0xc6, 0x5e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4bb3, gbc.sp());
        EXPECT(0x8c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8c0c));
        EXPECT(0x5e, gbc.readMem(0x8c0d));
        // C6 0391
        gbc.setState(0xd18c, 0xae28, 0x9ab0, 0xef8f, 0xdbd2, 0xb6f6, 0x0, 0x0);
        gbc.writeMem(0xd18c, { 0xc6, 0x22 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xae28, gbc.sp());
        EXPECT(0xd18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd18c));
        EXPECT(0x22, gbc.readMem(0xd18d));
        // C6 0392
        gbc.setState(0xe12f, 0xd9cf, 0x8d60, 0xc486, 0xbb40, 0x2d60, 0x1, 0x0);
        gbc.writeMem(0xe12f, { 0xc6, 0x3f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd9cf, gbc.sp());
        EXPECT(0xe131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe12f));
        EXPECT(0x3f, gbc.readMem(0xe130));
        // C6 0393
        gbc.setState(0xc0ff, 0xbc69, 0x7c90, 0x25da, 0xabab, 0xb9cd, 0x1, 0x0);
        gbc.writeMem(0xc0ff, { 0xc6, 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbc69, gbc.sp());
        EXPECT(0xc101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc0ff));
        EXPECT(0xa4, gbc.readMem(0xc100));
        // C6 0394
        gbc.setState(0xc249, 0x7ce, 0x63d0, 0xebe4, 0x103a, 0x7922, 0x1, 0x0);
        gbc.writeMem(0xc249, { 0xc6, 0x7b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7ce, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc249));
        EXPECT(0x7b, gbc.readMem(0xc24a));
        // C6 0395
        gbc.setState(0x9f32, 0x6551, 0x9340, 0xde4d, 0x9877, 0x760d, 0x1, 0x0);
        gbc.writeMem(0x9f32, { 0xc6, 0xcd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6551, gbc.sp());
        EXPECT(0x9f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9f32));
        EXPECT(0xcd, gbc.readMem(0x9f33));
        // C6 0396
        gbc.setState(0x430d, 0x6b60, 0x6e60, 0xeb55, 0x4372, 0xc6c2, 0x1, 0x0);
        gbc.writeMem(0x430d, { 0xc6, 0xe0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6b60, gbc.sp());
        EXPECT(0x430f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 0397
        gbc.setState(0xa366, 0x2ed4, 0x3e90, 0xcc89, 0xaaeb, 0xc0cd, 0x1, 0x1);
        gbc.writeMem(0xa366, { 0xc6, 0xc1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2ed4, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa366));
        EXPECT(0xc1, gbc.readMem(0xa367));
        // C6 0399
        gbc.setState(0x3891, 0xe169, 0xee20, 0xf197, 0xf96b, 0xae68, 0x1, 0x1);
        gbc.writeMem(0x3891, { 0xc6, 0x3f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe169, gbc.sp());
        EXPECT(0x3893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 039A
        gbc.setState(0x1980, 0xd164, 0x1d0, 0xa14d, 0xfe06, 0xa878, 0x0, 0x1);
        gbc.writeMem(0x1980, { 0xc6, 0xcb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd164, gbc.sp());
        EXPECT(0x1982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 039B
        gbc.setState(0xc7b1, 0x5bbd, 0x2b30, 0xcd0, 0x29f6, 0x7b61, 0x1, 0x1);
        gbc.writeMem(0xc7b1, { 0xc6, 0x89 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5bbd, gbc.sp());
        EXPECT(0xc7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc7b1));
        EXPECT(0x89, gbc.readMem(0xc7b2));
        // C6 039C
        gbc.setState(0x6e62, 0x5c8, 0xaa00, 0xb8da, 0x5bf7, 0x7356, 0x0, 0x1);
        gbc.writeMem(0x6e62, { 0xc6, 0x51 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5c8, gbc.sp());
        EXPECT(0x6e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 039D
        gbc.setState(0x911c, 0xce6b, 0x8ad0, 0x40eb, 0xd544, 0x44ed, 0x0, 0x1);
        gbc.writeMem(0x911c, { 0xc6, 0xdd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xce6b, gbc.sp());
        EXPECT(0x911e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x911c));
        EXPECT(0xdd, gbc.readMem(0x911d));
        // C6 039E
        gbc.setState(0x59ad, 0xcde0, 0x7560, 0xfe4c, 0x137c, 0x5e34, 0x0, 0x0);
        gbc.writeMem(0x59ad, { 0xc6, 0x21 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcde0, gbc.sp());
        EXPECT(0x59af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 039F
        gbc.setState(0x16b2, 0xa8a1, 0x560, 0x79b4, 0x605e, 0x866f, 0x1, 0x0);
        gbc.writeMem(0x16b2, { 0xc6, 0xe7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa8a1, gbc.sp());
        EXPECT(0x16b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03A0
        gbc.setState(0x1d5b, 0xab5d, 0x3b20, 0x22bc, 0x86fc, 0x1992, 0x0, 0x1);
        gbc.writeMem(0x1d5b, { 0xc6, 0xfb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xab5d, gbc.sp());
        EXPECT(0x1d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03A1
        gbc.setState(0xa638, 0xc517, 0xa420, 0x6c47, 0xa57e, 0xcafb, 0x1, 0x1);
        gbc.writeMem(0xa638, { 0xc6, 0x80 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc517, gbc.sp());
        EXPECT(0xa63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa638));
        EXPECT(0x80, gbc.readMem(0xa639));
        // C6 03A2
        gbc.setState(0x253f, 0xac30, 0x4820, 0xea16, 0xdb4d, 0xfa9a, 0x1, 0x1);
        gbc.writeMem(0x253f, { 0xc6, 0x74 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xac30, gbc.sp());
        EXPECT(0x2541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03A3
        gbc.setState(0xd2c6, 0x1398, 0x2ac0, 0x79cf, 0x9053, 0x1481, 0x0, 0x0);
        gbc.writeMem(0xd2c6, { 0xc6, 0x35 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1398, gbc.sp());
        EXPECT(0xd2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd2c6));
        EXPECT(0x35, gbc.readMem(0xd2c7));
        // C6 03A4
        gbc.setState(0x5223, 0x4941, 0xbc60, 0x24aa, 0x1e41, 0x240d, 0x0, 0x1);
        gbc.writeMem(0x5223, { 0xc6, 0x2e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4941, gbc.sp());
        EXPECT(0x5225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03A5
        gbc.setState(0xcd4e, 0xfc27, 0xcd0, 0x5fc7, 0xc303, 0xec66, 0x1, 0x0);
        gbc.writeMem(0xcd4e, { 0xc6, 0xa9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfc27, gbc.sp());
        EXPECT(0xcd50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcd4e));
        EXPECT(0xa9, gbc.readMem(0xcd4f));
        // C6 03A6
        gbc.setState(0x2313, 0x87ad, 0xac10, 0xe4c2, 0x40e8, 0xee3f, 0x1, 0x0);
        gbc.writeMem(0x2313, { 0xc6, 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x87ad, gbc.sp());
        EXPECT(0x2315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03A7
        gbc.setState(0xd995, 0x1417, 0xbc40, 0xd656, 0xf8a7, 0x6ec, 0x0, 0x1);
        gbc.writeMem(0xd995, { 0xc6, 0x69 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1417, gbc.sp());
        EXPECT(0xd997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd995));
        EXPECT(0x69, gbc.readMem(0xd996));
        // C6 03A8
        gbc.setState(0x1794, 0x555b, 0xf50, 0x9b0a, 0xd1a6, 0x16a6, 0x1, 0x0);
        gbc.writeMem(0x1794, { 0xc6, 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x555b, gbc.sp());
        EXPECT(0x1796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03A9
        gbc.setState(0x7991, 0x46ab, 0x6610, 0x398a, 0x9a65, 0x26b3, 0x0, 0x0);
        gbc.writeMem(0x7991, { 0xc6, 0x53 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x46ab, gbc.sp());
        EXPECT(0x7993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03AA
        gbc.setState(0xa923, 0x94f8, 0xd8b0, 0x916d, 0x2f54, 0x3f1f, 0x0, 0x0);
        gbc.writeMem(0xa923, { 0xc6, 0x2a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x94f8, gbc.sp());
        EXPECT(0xa925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa923));
        EXPECT(0x2a, gbc.readMem(0xa924));
        // C6 03AB
        gbc.setState(0x7548, 0xb845, 0xdb60, 0x75b, 0xf5e1, 0x3b80, 0x0, 0x1);
        gbc.writeMem(0x7548, { 0xc6, 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb845, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03AC
        gbc.setState(0xef7f, 0x8ac, 0x4770, 0x4788, 0xb76f, 0x589e, 0x0, 0x1);
        gbc.writeMem(0xef7f, { 0xc6, 0x8c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8ac, gbc.sp());
        EXPECT(0xef81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xef7f));
        EXPECT(0x8c, gbc.readMem(0xef80));
        // C6 03AD
        gbc.setState(0x3470, 0x67ed, 0x3bb0, 0xcc90, 0x518e, 0xb736, 0x0, 0x1);
        gbc.writeMem(0x3470, { 0xc6, 0x88 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x67ed, gbc.sp());
        EXPECT(0x3472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03AE
        gbc.setState(0xbdf1, 0xdf3b, 0x6ef0, 0x95df, 0x301e, 0xa3bc, 0x0, 0x0);
        gbc.writeMem(0xbdf1, { 0xc6, 0xe3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdf3b, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbdf1));
        EXPECT(0xe3, gbc.readMem(0xbdf2));
        // C6 03AF
        gbc.setState(0x66de, 0x873d, 0xe800, 0x5bba, 0x6c96, 0xf667, 0x0, 0x1);
        gbc.writeMem(0x66de, { 0xc6, 0x7a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x873d, gbc.sp());
        EXPECT(0x66e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03B0
        gbc.setState(0x4a3c, 0x45a7, 0xd3c0, 0x1158, 0x240d, 0x2b98, 0x1, 0x1);
        gbc.writeMem(0x4a3c, { 0xc6, 0x1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x45a7, gbc.sp());
        EXPECT(0x4a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03B1
        gbc.setState(0xb25, 0x9e3c, 0x6310, 0x3f4a, 0x88c, 0x141d, 0x0, 0x1);
        gbc.writeMem(0xb25, { 0xc6, 0x3a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9e3c, gbc.sp());
        EXPECT(0xb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03B2
        gbc.setState(0x891a, 0xb726, 0x9ad0, 0xda7c, 0xcdb, 0x7cb8, 0x0, 0x0);
        gbc.writeMem(0x891a, { 0xc6, 0xe3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb726, gbc.sp());
        EXPECT(0x891c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x891a));
        EXPECT(0xe3, gbc.readMem(0x891b));
        // C6 03B3
        gbc.setState(0xa886, 0x2236, 0xc5a0, 0xe0d3, 0x19be, 0xaaa7, 0x1, 0x0);
        gbc.writeMem(0xa886, { 0xc6, 0xa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2236, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa886));
        EXPECT(0xa, gbc.readMem(0xa887));
        // C6 03B4
        gbc.setState(0x5c7, 0x10aa, 0x9950, 0xc6ae, 0xf248, 0x8f9c, 0x1, 0x0);
        gbc.writeMem(0x5c7, { 0xc6, 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x10aa, gbc.sp());
        EXPECT(0x5c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03B5
        gbc.setState(0x13ff, 0x9c7d, 0x55b0, 0xa5d6, 0x95b4, 0x1266, 0x0, 0x0);
        gbc.writeMem(0x13ff, { 0xc6, 0xe9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9c7d, gbc.sp());
        EXPECT(0x1401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03B6
        gbc.setState(0xbc35, 0xaa99, 0x14d0, 0x838, 0xcd7d, 0xb797, 0x1, 0x0);
        gbc.writeMem(0xbc35, { 0xc6, 0x15 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaa99, gbc.sp());
        EXPECT(0xbc37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbc35));
        EXPECT(0x15, gbc.readMem(0xbc36));
        // C6 03B7
        gbc.setState(0x1fff, 0xd3dd, 0xb70, 0xce20, 0x666a, 0x812a, 0x1, 0x0);
        gbc.writeMem(0x1fff, { 0xc6, 0xb1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd3dd, gbc.sp());
        EXPECT(0x2001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03B8
        gbc.setState(0x918f, 0xe3f6, 0xc4a0, 0x4265, 0x8ee7, 0xe052, 0x1, 0x0);
        gbc.writeMem(0x918f, { 0xc6, 0x2a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe3f6, gbc.sp());
        EXPECT(0x9191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x918f));
        EXPECT(0x2a, gbc.readMem(0x9190));
        // C6 03B9
        gbc.setState(0xb0b0, 0xcaa3, 0xcc30, 0x1790, 0xdfec, 0xb15, 0x1, 0x1);
        gbc.writeMem(0xb0b0, { 0xc6, 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcaa3, gbc.sp());
        EXPECT(0xb0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb0b0));
        EXPECT(0x53, gbc.readMem(0xb0b1));
        // C6 03BA
        gbc.setState(0x78e0, 0x252e, 0xfb70, 0x6509, 0xdf91, 0x14cf, 0x1, 0x1);
        gbc.writeMem(0x78e0, { 0xc6, 0xb6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x252e, gbc.sp());
        EXPECT(0x78e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03BB
        gbc.setState(0xea70, 0xcf0c, 0xdde0, 0x81a4, 0xbe9f, 0x6472, 0x1, 0x0);
        gbc.writeMem(0xea70, { 0xc6, 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcf0c, gbc.sp());
        EXPECT(0xea72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xea70));
        EXPECT(0xf7, gbc.readMem(0xea71));
        // C6 03BC
        gbc.setState(0x9dd4, 0x3683, 0x2b30, 0xe16, 0xf002, 0x953a, 0x1, 0x0);
        gbc.writeMem(0x9dd4, { 0xc6, 0x9d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3683, gbc.sp());
        EXPECT(0x9dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9dd4));
        EXPECT(0x9d, gbc.readMem(0x9dd5));
        // C6 03BD
        gbc.setState(0xbec3, 0x6ede, 0xed10, 0x2132, 0x1263, 0x3cb8, 0x1, 0x0);
        gbc.writeMem(0xbec3, { 0xc6, 0x34 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6ede, gbc.sp());
        EXPECT(0xbec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbec3));
        EXPECT(0x34, gbc.readMem(0xbec4));
        // C6 03BE
        gbc.setState(0x249c, 0x77ca, 0xbd40, 0x25cb, 0x53de, 0xd78d, 0x0, 0x1);
        gbc.writeMem(0x249c, { 0xc6, 0x83 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x77ca, gbc.sp());
        EXPECT(0x249e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03BF
        gbc.setState(0xc28f, 0x66aa, 0xfe50, 0xf673, 0x1c45, 0x57fc, 0x1, 0x1);
        gbc.writeMem(0xc28f, { 0xc6, 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x66aa, gbc.sp());
        EXPECT(0xc291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc28f));
        EXPECT(0x47, gbc.readMem(0xc290));
        // C6 03C0
        gbc.setState(0x5fc4, 0xd9b2, 0x4000, 0x897e, 0x9dfd, 0xefe2, 0x1, 0x0);
        gbc.writeMem(0x5fc4, { 0xc6, 0x87 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd9b2, gbc.sp());
        EXPECT(0x5fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03C1
        gbc.setState(0xa429, 0x6381, 0x7240, 0x9ebf, 0xdf83, 0x4be7, 0x0, 0x0);
        gbc.writeMem(0xa429, { 0xc6, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6381, gbc.sp());
        EXPECT(0xa42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa429));
        EXPECT(0x9f, gbc.readMem(0xa42a));
        // C6 03C2
        gbc.setState(0x8efd, 0x7f36, 0x56a0, 0xe35d, 0x7da5, 0x2d85, 0x0, 0x1);
        gbc.writeMem(0x8efd, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7f36, gbc.sp());
        EXPECT(0x8eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8efd));
        EXPECT(0x64, gbc.readMem(0x8efe));
        // C6 03C3
        gbc.setState(0x9141, 0x65c, 0xc880, 0x5cd, 0x3137, 0xef0f, 0x1, 0x0);
        gbc.writeMem(0x9141, { 0xc6, 0xc3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x65c, gbc.sp());
        EXPECT(0x9143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9141));
        EXPECT(0xc3, gbc.readMem(0x9142));
        // C6 03C4
        gbc.setState(0x4388, 0x334f, 0x2370, 0x804e, 0x5899, 0xaf07, 0x1, 0x0);
        gbc.writeMem(0x4388, { 0xc6, 0x6e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x334f, gbc.sp());
        EXPECT(0x438a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03C5
        gbc.setState(0x92b5, 0x6022, 0x4f00, 0x83f4, 0x7221, 0xe892, 0x1, 0x0);
        gbc.writeMem(0x92b5, { 0xc6, 0x32 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6022, gbc.sp());
        EXPECT(0x92b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x92b5));
        EXPECT(0x32, gbc.readMem(0x92b6));
        // C6 03C6
        gbc.setState(0xdd51, 0x1f71, 0x97c0, 0xc7e0, 0x1d1, 0x6e7f, 0x0, 0x0);
        gbc.writeMem(0xdd51, { 0xc6, 0xd1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1f71, gbc.sp());
        EXPECT(0xdd53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdd51));
        EXPECT(0xd1, gbc.readMem(0xdd52));
        // C6 03C7
        gbc.setState(0x3525, 0x52f3, 0x8240, 0x6b93, 0x6537, 0x47d8, 0x1, 0x0);
        gbc.writeMem(0x3525, { 0xc6, 0x39 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x52f3, gbc.sp());
        EXPECT(0x3527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03C8
        gbc.setState(0x4f1c, 0xfe17, 0x73b0, 0x6b6f, 0x12e7, 0x7449, 0x0, 0x1);
        gbc.writeMem(0x4f1c, { 0xc6, 0x7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfe17, gbc.sp());
        EXPECT(0x4f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03C9
        gbc.setState(0x28b2, 0xb9d7, 0xcac0, 0x5d0a, 0xe2, 0x11c0, 0x1, 0x1);
        gbc.writeMem(0x28b2, { 0xc6, 0x55 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0x28b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03CA
        gbc.setState(0x3bf2, 0x1912, 0x320, 0x5ba8, 0x7101, 0x5415, 0x0, 0x1);
        gbc.writeMem(0x3bf2, { 0xc6, 0x92 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1912, gbc.sp());
        EXPECT(0x3bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03CB
        gbc.setState(0xe1c0, 0xdb47, 0x5f20, 0xb8d6, 0xe93b, 0x3ca2, 0x0, 0x0);
        gbc.writeMem(0xe1c0, { 0xc6, 0xc2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdb47, gbc.sp());
        EXPECT(0xe1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe1c0));
        EXPECT(0xc2, gbc.readMem(0xe1c1));
        // C6 03CC
        gbc.setState(0xd6e0, 0x8835, 0x79c0, 0x28e4, 0x2978, 0x5581, 0x1, 0x0);
        gbc.writeMem(0xd6e0, { 0xc6, 0x7a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8835, gbc.sp());
        EXPECT(0xd6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd6e0));
        EXPECT(0x7a, gbc.readMem(0xd6e1));
        // C6 03CD
        gbc.setState(0xa0c1, 0xb752, 0x1400, 0x2969, 0xfc92, 0x963, 0x1, 0x0);
        gbc.writeMem(0xa0c1, { 0xc6, 0x30 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb752, gbc.sp());
        EXPECT(0xa0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa0c1));
        EXPECT(0x30, gbc.readMem(0xa0c2));
        // C6 03CE
        gbc.setState(0xda97, 0xfe00, 0x8930, 0x87dc, 0x5406, 0xf2c4, 0x1, 0x1);
        gbc.writeMem(0xda97, { 0xc6, 0x16 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfe00, gbc.sp());
        EXPECT(0xda99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xda97));
        EXPECT(0x16, gbc.readMem(0xda98));
        // C6 03CF
        gbc.setState(0x36fd, 0xfe45, 0xb70, 0x630d, 0x3f78, 0xb2fd, 0x1, 0x0);
        gbc.writeMem(0x36fd, { 0xc6, 0x19 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfe45, gbc.sp());
        EXPECT(0x36ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03D0
        gbc.setState(0x4f91, 0x4a8b, 0xb160, 0x2956, 0x2153, 0xb7ba, 0x0, 0x1);
        gbc.writeMem(0x4f91, { 0xc6, 0xb0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4a8b, gbc.sp());
        EXPECT(0x4f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03D1
        gbc.setState(0x9fe5, 0xff5a, 0xa490, 0x388, 0xc562, 0x9fb2, 0x0, 0x0);
        gbc.writeMem(0x9fe5, { 0xc6, 0x74 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xff5a, gbc.sp());
        EXPECT(0x9fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9fe5));
        EXPECT(0x74, gbc.readMem(0x9fe6));
        // C6 03D2
        gbc.setState(0xbff3, 0xd56c, 0x6280, 0x15eb, 0x38e3, 0xc77b, 0x1, 0x0);
        gbc.writeMem(0xbff3, { 0xc6, 0x52 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd56c, gbc.sp());
        EXPECT(0xbff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbff3));
        EXPECT(0x52, gbc.readMem(0xbff4));
        // C6 03D3
        gbc.setState(0x3fa, 0x9bc9, 0x2580, 0xb0d, 0xc683, 0x922f, 0x0, 0x1);
        gbc.writeMem(0x3fa, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9bc9, gbc.sp());
        EXPECT(0x3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03D4
        gbc.setState(0xac55, 0xc4a9, 0xa80, 0xeca3, 0x9847, 0xe5aa, 0x0, 0x0);
        gbc.writeMem(0xac55, { 0xc6, 0x1a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc4a9, gbc.sp());
        EXPECT(0xac57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xac55));
        EXPECT(0x1a, gbc.readMem(0xac56));
        // C6 03D5
        gbc.setState(0x4b5d, 0xf19c, 0xbdb0, 0x1d5a, 0x1f61, 0x65ea, 0x1, 0x1);
        gbc.writeMem(0x4b5d, { 0xc6, 0xcc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf19c, gbc.sp());
        EXPECT(0x4b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03D6
        gbc.setState(0xd0dc, 0x2df0, 0xf810, 0x596, 0x7e33, 0xdfad, 0x0, 0x1);
        gbc.writeMem(0xd0dc, { 0xc6, 0xcd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0xd0de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd0dc));
        EXPECT(0xcd, gbc.readMem(0xd0dd));
        // C6 03D7
        gbc.setState(0xa756, 0x9753, 0x500, 0x6ba0, 0x8cac, 0x5e05, 0x1, 0x0);
        gbc.writeMem(0xa756, { 0xc6, 0xff });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9753, gbc.sp());
        EXPECT(0xa758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa756));
        EXPECT(0xff, gbc.readMem(0xa757));
        // C6 03D8
        gbc.setState(0x951d, 0xed5f, 0xf360, 0x22, 0xae74, 0xd71d, 0x1, 0x1);
        gbc.writeMem(0x951d, { 0xc6, 0x18 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xed5f, gbc.sp());
        EXPECT(0x951f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x951d));
        EXPECT(0x18, gbc.readMem(0x951e));
        // C6 03D9
        gbc.setState(0xe3a2, 0xf77, 0x2f10, 0xda84, 0x4190, 0xa34a, 0x1, 0x0);
        gbc.writeMem(0xe3a2, { 0xc6, 0x84 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf77, gbc.sp());
        EXPECT(0xe3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe3a2));
        EXPECT(0x84, gbc.readMem(0xe3a3));
        // C6 03DA
        gbc.setState(0x228f, 0x4fb0, 0xf310, 0x45a7, 0x15b1, 0xadfd, 0x0, 0x1);
        gbc.writeMem(0x228f, { 0xc6, 0xb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4fb0, gbc.sp());
        EXPECT(0x2291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03DB
        gbc.setState(0xe4f8, 0x3045, 0x2210, 0xc032, 0xc467, 0x1482, 0x1, 0x0);
        gbc.writeMem(0xe4f8, { 0xc6, 0x2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3045, gbc.sp());
        EXPECT(0xe4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe4f8));
        EXPECT(0x2, gbc.readMem(0xe4f9));
        // C6 03DC
        gbc.setState(0x4728, 0xf67, 0x8720, 0xc36a, 0xc549, 0x589b, 0x1, 0x1);
        gbc.writeMem(0x4728, { 0xc6, 0x97 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf67, gbc.sp());
        EXPECT(0x472a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03DD
        gbc.setState(0x2bd1, 0x4e31, 0xa680, 0x332e, 0x88eb, 0x9b36, 0x0, 0x1);
        gbc.writeMem(0x2bd1, { 0xc6, 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4e31, gbc.sp());
        EXPECT(0x2bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03DE
        gbc.setState(0x4538, 0xafd, 0x4cc0, 0x9d27, 0xde8d, 0x84b6, 0x0, 0x1);
        gbc.writeMem(0x4538, { 0xc6, 0xc3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xafd, gbc.sp());
        EXPECT(0x453a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03DF
        gbc.setState(0x730f, 0x2257, 0x5040, 0xa875, 0x9086, 0x9a1f, 0x1, 0x1);
        gbc.writeMem(0x730f, { 0xc6, 0x29 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2257, gbc.sp());
        EXPECT(0x7311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03E0
        gbc.setState(0xe0d6, 0x6cc4, 0x4de0, 0x7bef, 0xd3f9, 0x43fe, 0x1, 0x0);
        gbc.writeMem(0xe0d6, { 0xc6, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6cc4, gbc.sp());
        EXPECT(0xe0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe0d6));
        EXPECT(0x0, gbc.readMem(0xe0d7));
        // C6 03E1
        gbc.setState(0x798c, 0xaee3, 0xfb40, 0x2307, 0x220, 0xe511, 0x1, 0x1);
        gbc.writeMem(0x798c, { 0xc6, 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaee3, gbc.sp());
        EXPECT(0x798e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03E2
        gbc.setState(0x3f4, 0x153a, 0x9330, 0x11a1, 0xf22c, 0x6146, 0x1, 0x0);
        gbc.writeMem(0x3f4, { 0xc6, 0xfa });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x153a, gbc.sp());
        EXPECT(0x3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03E3
        gbc.setState(0xb806, 0xcbed, 0xe750, 0xf71d, 0x34f2, 0x315a, 0x1, 0x0);
        gbc.writeMem(0xb806, { 0xc6, 0x6d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcbed, gbc.sp());
        EXPECT(0xb808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb806));
        EXPECT(0x6d, gbc.readMem(0xb807));
        // C6 03E4
        gbc.setState(0x39bc, 0x2ae5, 0x8220, 0xaef7, 0xa003, 0x1d3b, 0x1, 0x1);
        gbc.writeMem(0x39bc, { 0xc6, 0x9e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2ae5, gbc.sp());
        EXPECT(0x39be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C6 03E5
        gbc.setState(0xe1b6, 0xcbc5, 0x7d50, 0x4212, 0xf89c, 0x44d3, 0x1, 0x0);
        gbc.writeMem(0xe1b6, { 0xc6, 0xba });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcbc5, gbc.sp());
        EXPECT(0xe1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe1b6));
        EXPECT(0xba, gbc.readMem(0xe1b7));
        // C6 03E6
        gbc.setState(0x6f89, 0xcce2, 0x6bd0, 0x69c4, 0x7fe3, 0x3707, 0x1, 0x0);
        gbc.writeMem(0x6f89, { 0xc6, 0x6a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcce2, gbc.sp());
        EXPECT(0x6f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C6 03E7
        gbc.setState(0x6364, 0x700, 0x37d0, 0xf46a, 0x48, 0x6095, 0x1, 0x1);
        gbc.writeMem(0x6364, { 0xc6, 0x5c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x700, gbc.sp());
        EXPECT(0x6366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
