    TEST(gbcemu, opcode_cb_b6) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B6 0000
        gbc.setState(0x4f40, 0x4898, 0xde0, 0x5ed, 0xe55f, 0xf03f, 0x1, 0x1);
        gbc.writeMem(0x4f40, { 0xcb, 0xb6 });
        gbc.writeMem(0xf03f, { 0x35 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4898, gbc.sp());
        EXPECT(0x4f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xf03f));
        // CB B6 0001
        gbc.setState(0x3074, 0xd48a, 0xecb0, 0xe06c, 0x650f, 0x3378, 0x0, 0x1);
        gbc.writeMem(0x3074, { 0xcb, 0xb6 });
        gbc.writeMem(0x3378, { 0xab });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd48a, gbc.sp());
        EXPECT(0x3076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0002
        gbc.setState(0xb9a6, 0xf83b, 0xbb90, 0x1eda, 0x420a, 0x129e, 0x1, 0x1);
        gbc.writeMem(0x129e, { 0x1b });
        gbc.writeMem(0xb9a6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf83b, gbc.sp());
        EXPECT(0xb9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a6));
        EXPECT(0xb6, gbc.readMem(0xb9a7));
        // CB B6 0003
        gbc.setState(0xa963, 0x3a5a, 0x1a50, 0xb1bd, 0x7f5f, 0x7a87, 0x1, 0x1);
        gbc.writeMem(0x7a87, { 0xbe });
        gbc.writeMem(0xa963, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3a5a, gbc.sp());
        EXPECT(0xa965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa963));
        EXPECT(0xb6, gbc.readMem(0xa964));
        // CB B6 0005
        gbc.setState(0xbe4e, 0x749b, 0x1ad0, 0x9abc, 0xcf7f, 0x96e4, 0x1, 0x0);
        gbc.writeMem(0x96e4, { 0x9f });
        gbc.writeMem(0xbe4e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x749b, gbc.sp());
        EXPECT(0xbe50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x96e4));
        EXPECT(0xcb, gbc.readMem(0xbe4e));
        EXPECT(0xb6, gbc.readMem(0xbe4f));
        // CB B6 0009
        gbc.setState(0x9e85, 0x6cb8, 0x1880, 0x2984, 0x1193, 0x4558, 0x0, 0x1);
        gbc.writeMem(0x4558, { 0xa8 });
        gbc.writeMem(0x9e85, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6cb8, gbc.sp());
        EXPECT(0x9e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e85));
        EXPECT(0xb6, gbc.readMem(0x9e86));
        // CB B6 000A
        gbc.setState(0x863, 0x53f2, 0xc810, 0xe7f3, 0x1ed1, 0xe87e, 0x0, 0x1);
        gbc.writeMem(0x863, { 0xcb, 0xb6 });
        gbc.writeMem(0xe87e, { 0x68 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x53f2, gbc.sp());
        EXPECT(0x865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xe87e));
        // CB B6 000C
        gbc.setState(0x1226, 0x7d08, 0x6df0, 0xa38, 0xb200, 0xc0c9, 0x1, 0x1);
        gbc.writeMem(0x1226, { 0xcb, 0xb6 });
        gbc.writeMem(0xc0c9, { 0xa2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7d08, gbc.sp());
        EXPECT(0x1228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc0c9));
        // CB B6 000E
        gbc.setState(0x8540, 0x5dd8, 0x5000, 0x7036, 0xf59a, 0x5851, 0x1, 0x0);
        gbc.writeMem(0x5851, { 0xb });
        gbc.writeMem(0x8540, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0x8542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8540));
        EXPECT(0xb6, gbc.readMem(0x8541));
        // CB B6 000F
        gbc.setState(0x8bc1, 0xdbb1, 0x9260, 0x7914, 0x7b5d, 0xf750, 0x1, 0x0);
        gbc.writeMem(0x8bc1, { 0xcb, 0xb6 });
        gbc.writeMem(0xf750, { 0xca });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdbb1, gbc.sp());
        EXPECT(0x8bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc1));
        EXPECT(0xb6, gbc.readMem(0x8bc2));
        EXPECT(0x8a, gbc.readMem(0xf750));
        // CB B6 0010
        gbc.setState(0x64a2, 0x2961, 0xd7e0, 0x77f1, 0x2b10, 0x4f28, 0x0, 0x0);
        gbc.writeMem(0x4f28, { 0xab });
        gbc.writeMem(0x64a2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0x64a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0011
        gbc.setState(0x25d, 0x8aed, 0xa630, 0xce32, 0x3b08, 0x8ad, 0x1, 0x0);
        gbc.writeMem(0x25d, { 0xcb, 0xb6 });
        gbc.writeMem(0x8ad, { 0x1b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8aed, gbc.sp());
        EXPECT(0x25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0012
        gbc.setState(0x26e4, 0xd9bd, 0xd920, 0xb59e, 0x6136, 0x601, 0x0, 0x0);
        gbc.writeMem(0x601, { 0x1c });
        gbc.writeMem(0x26e4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd9bd, gbc.sp());
        EXPECT(0x26e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0013
        gbc.setState(0xefa3, 0xb7b6, 0x8a00, 0x9368, 0xc73f, 0x74d7, 0x1, 0x1);
        gbc.writeMem(0x74d7, { 0x94 });
        gbc.writeMem(0xefa3, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb7b6, gbc.sp());
        EXPECT(0xefa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa3));
        EXPECT(0xb6, gbc.readMem(0xefa4));
        // CB B6 0014
        gbc.setState(0x80b0, 0xd707, 0x77c0, 0x3406, 0x8250, 0xbbcd, 0x0, 0x0);
        gbc.writeMem(0x80b0, { 0xcb, 0xb6 });
        gbc.writeMem(0xbbcd, { 0xcd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd707, gbc.sp());
        EXPECT(0x80b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b0));
        EXPECT(0xb6, gbc.readMem(0x80b1));
        EXPECT(0x8d, gbc.readMem(0xbbcd));
        // CB B6 0015
        gbc.setState(0xa8f1, 0xa0b1, 0xd060, 0x9b19, 0xd60, 0xdda9, 0x1, 0x1);
        gbc.writeMem(0xa8f1, { 0xcb, 0xb6 });
        gbc.writeMem(0xdda9, { 0x3c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa0b1, gbc.sp());
        EXPECT(0xa8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f1));
        EXPECT(0xb6, gbc.readMem(0xa8f2));
        EXPECT(0x3c, gbc.readMem(0xdda9));
        // CB B6 0016
        gbc.setState(0xda, 0x6817, 0x5b00, 0x68a0, 0x211a, 0xa5bb, 0x0, 0x0);
        gbc.writeMem(0xda, { 0xcb, 0xb6 });
        gbc.writeMem(0xa5bb, { 0x73 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6817, gbc.sp());
        EXPECT(0xdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa5bb));
        // CB B6 0018
        gbc.setState(0xc8f9, 0xf015, 0x3450, 0xe9a4, 0x87a0, 0xf5cf, 0x1, 0x0);
        gbc.writeMem(0xc8f9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf5cf, { 0x7a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf015, gbc.sp());
        EXPECT(0xc8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f9));
        EXPECT(0xb6, gbc.readMem(0xc8fa));
        EXPECT(0x3a, gbc.readMem(0xf5cf));
        // CB B6 001B
        gbc.setState(0xb97e, 0xa015, 0x4210, 0x3e75, 0x3b2b, 0x17e2, 0x1, 0x0);
        gbc.writeMem(0x17e2, { 0xb4 });
        gbc.writeMem(0xb97e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa015, gbc.sp());
        EXPECT(0xb980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97e));
        EXPECT(0xb6, gbc.readMem(0xb97f));
        // CB B6 001C
        gbc.setState(0x6a7c, 0x494e, 0x32c0, 0xe755, 0x2243, 0xc901, 0x1, 0x0);
        gbc.writeMem(0x6a7c, { 0xcb, 0xb6 });
        gbc.writeMem(0xc901, { 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x494e, gbc.sp());
        EXPECT(0x6a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc901));
        // CB B6 001D
        gbc.setState(0x4962, 0x1847, 0xb570, 0x7c8b, 0x76d3, 0x4396, 0x1, 0x0);
        gbc.writeMem(0x4396, { 0xa1 });
        gbc.writeMem(0x4962, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1847, gbc.sp());
        EXPECT(0x4964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 001E
        gbc.setState(0x55fd, 0x8caa, 0xa370, 0xc092, 0xbb5e, 0x9e98, 0x1, 0x1);
        gbc.writeMem(0x55fd, { 0xcb, 0xb6 });
        gbc.writeMem(0x9e98, { 0x42 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8caa, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9e98));
        // CB B6 001F
        gbc.setState(0xeb89, 0xd6b4, 0xbdf0, 0x95e5, 0x2869, 0xb6af, 0x0, 0x1);
        gbc.writeMem(0xb6af, { 0xb6 });
        gbc.writeMem(0xeb89, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd6b4, gbc.sp());
        EXPECT(0xeb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb6af));
        EXPECT(0xcb, gbc.readMem(0xeb89));
        EXPECT(0xb6, gbc.readMem(0xeb8a));
        // CB B6 0020
        gbc.setState(0xe21c, 0xee5b, 0x2250, 0xd3c3, 0x94c0, 0xf39f, 0x1, 0x1);
        gbc.writeMem(0xe21c, { 0xcb, 0xb6 });
        gbc.writeMem(0xf39f, { 0xf3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xee5b, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21c));
        EXPECT(0xb6, gbc.readMem(0xe21d));
        EXPECT(0xb3, gbc.readMem(0xf39f));
        // CB B6 0021
        gbc.setState(0xa818, 0x5eb4, 0x2c80, 0x1546, 0x67a7, 0xc303, 0x1, 0x1);
        gbc.writeMem(0xa818, { 0xcb, 0xb6 });
        gbc.writeMem(0xc303, { 0x31 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5eb4, gbc.sp());
        EXPECT(0xa81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa818));
        EXPECT(0xb6, gbc.readMem(0xa819));
        EXPECT(0x31, gbc.readMem(0xc303));
        // CB B6 0023
        gbc.setState(0xa746, 0xcc2e, 0xe850, 0xc323, 0xd69b, 0xe9ee, 0x1, 0x0);
        gbc.writeMem(0xa746, { 0xcb, 0xb6 });
        gbc.writeMem(0xe9ee, { 0xd8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcc2e, gbc.sp());
        EXPECT(0xa748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa746));
        EXPECT(0xb6, gbc.readMem(0xa747));
        EXPECT(0x98, gbc.readMem(0xe9ee));
        // CB B6 0024
        gbc.setState(0x324, 0x4e21, 0x5f50, 0xeb0b, 0xcdd2, 0x96f0, 0x1, 0x0);
        gbc.writeMem(0x324, { 0xcb, 0xb6 });
        gbc.writeMem(0x96f0, { 0xcc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4e21, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x96f0));
        // CB B6 0025
        gbc.setState(0x162, 0xb7fe, 0x4780, 0x1c2c, 0x9f62, 0x8b6f, 0x1, 0x0);
        gbc.writeMem(0x162, { 0xcb, 0xb6 });
        gbc.writeMem(0x8b6f, { 0xeb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb7fe, gbc.sp());
        EXPECT(0x164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x8b6f));
        // CB B6 0026
        gbc.setState(0xdb9d, 0x15d, 0x84b0, 0xf5ec, 0xd85e, 0x9976, 0x1, 0x0);
        gbc.writeMem(0x9976, { 0xdb });
        gbc.writeMem(0xdb9d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x15d, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9976));
        EXPECT(0xcb, gbc.readMem(0xdb9d));
        EXPECT(0xb6, gbc.readMem(0xdb9e));
        // CB B6 0027
        gbc.setState(0x130b, 0x68b4, 0xbcc0, 0xfb51, 0xbc31, 0xdc29, 0x0, 0x1);
        gbc.writeMem(0x130b, { 0xcb, 0xb6 });
        gbc.writeMem(0xdc29, { 0x88 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x68b4, gbc.sp());
        EXPECT(0x130d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdc29));
        // CB B6 0028
        gbc.setState(0x69d8, 0xa92b, 0x71b0, 0x9b49, 0xb307, 0xdca7, 0x1, 0x1);
        gbc.writeMem(0x69d8, { 0xcb, 0xb6 });
        gbc.writeMem(0xdca7, { 0x81 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa92b, gbc.sp());
        EXPECT(0x69da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdca7));
        // CB B6 002A
        gbc.setState(0x668, 0x8b44, 0x1c80, 0x1d4a, 0x63dc, 0xb5de, 0x1, 0x0);
        gbc.writeMem(0x668, { 0xcb, 0xb6 });
        gbc.writeMem(0xb5de, { 0xeb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8b44, gbc.sp());
        EXPECT(0x66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xb5de));
        // CB B6 002B
        gbc.setState(0xc083, 0x1ce5, 0x9080, 0xf96a, 0x9247, 0x3422, 0x1, 0x0);
        gbc.writeMem(0x3422, { 0x93 });
        gbc.writeMem(0xc083, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1ce5, gbc.sp());
        EXPECT(0xc085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc083));
        EXPECT(0xb6, gbc.readMem(0xc084));
        // CB B6 002C
        gbc.setState(0x2e59, 0xba9f, 0x7bf0, 0x27a6, 0xc0fd, 0xba49, 0x0, 0x0);
        gbc.writeMem(0x2e59, { 0xcb, 0xb6 });
        gbc.writeMem(0xba49, { 0x33 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xba9f, gbc.sp());
        EXPECT(0x2e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xba49));
        // CB B6 002D
        gbc.setState(0x100b, 0xe014, 0xccc0, 0xb1be, 0x287f, 0xe262, 0x0, 0x0);
        gbc.writeMem(0x100b, { 0xcb, 0xb6 });
        gbc.writeMem(0xe262, { 0x3b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe014, gbc.sp());
        EXPECT(0x100d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe262));
        // CB B6 002F
        gbc.setState(0xc53c, 0x5971, 0xaff0, 0xc089, 0x500e, 0x19e5, 0x1, 0x0);
        gbc.writeMem(0x19e5, { 0x7 });
        gbc.writeMem(0xc53c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5971, gbc.sp());
        EXPECT(0xc53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53c));
        EXPECT(0xb6, gbc.readMem(0xc53d));
        // CB B6 0030
        gbc.setState(0x63c8, 0x8252, 0xf090, 0xf0e6, 0x9621, 0xfcfc, 0x1, 0x0);
        gbc.writeMem(0x63c8, { 0xcb, 0xb6 });
        gbc.writeMem(0xfcfc, { 0xb7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8252, gbc.sp());
        EXPECT(0x63ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xfcfc));
        // CB B6 0031
        gbc.setState(0xb32a, 0xcc41, 0xd950, 0x22b4, 0xd8d2, 0xd79, 0x0, 0x0);
        gbc.writeMem(0xd79, { 0x9 });
        gbc.writeMem(0xb32a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcc41, gbc.sp());
        EXPECT(0xb32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32a));
        EXPECT(0xb6, gbc.readMem(0xb32b));
        // CB B6 0032
        gbc.setState(0xc6f7, 0x2804, 0x3db0, 0x9b50, 0xcc08, 0xacf2, 0x0, 0x0);
        gbc.writeMem(0xacf2, { 0x30 });
        gbc.writeMem(0xc6f7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2804, gbc.sp());
        EXPECT(0xc6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xacf2));
        EXPECT(0xcb, gbc.readMem(0xc6f7));
        EXPECT(0xb6, gbc.readMem(0xc6f8));
        // CB B6 0033
        gbc.setState(0xe3c5, 0xd694, 0xb430, 0x1c28, 0x3d37, 0x9196, 0x1, 0x0);
        gbc.writeMem(0x9196, { 0x40 });
        gbc.writeMem(0xe3c5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd694, gbc.sp());
        EXPECT(0xe3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9196));
        EXPECT(0xcb, gbc.readMem(0xe3c5));
        EXPECT(0xb6, gbc.readMem(0xe3c6));
        // CB B6 0034
        gbc.setState(0xd05b, 0xe594, 0x3f30, 0x6ed7, 0x9d4a, 0x1c45, 0x0, 0x0);
        gbc.writeMem(0x1c45, { 0x3d });
        gbc.writeMem(0xd05b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe594, gbc.sp());
        EXPECT(0xd05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05b));
        EXPECT(0xb6, gbc.readMem(0xd05c));
        // CB B6 0036
        gbc.setState(0x1cb4, 0xc583, 0x1ed0, 0xef88, 0xd43d, 0x3d14, 0x1, 0x1);
        gbc.writeMem(0x1cb4, { 0xcb, 0xb6 });
        gbc.writeMem(0x3d14, { 0x33 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc583, gbc.sp());
        EXPECT(0x1cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0037
        gbc.setState(0xa36b, 0xb1ec, 0x9c70, 0x39a3, 0xe3e7, 0x5cae, 0x1, 0x0);
        gbc.writeMem(0x5cae, { 0x24 });
        gbc.writeMem(0xa36b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb1ec, gbc.sp());
        EXPECT(0xa36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36b));
        EXPECT(0xb6, gbc.readMem(0xa36c));
        // CB B6 0038
        gbc.setState(0x55b9, 0x471a, 0xca70, 0x933f, 0x776d, 0x8885, 0x1, 0x0);
        gbc.writeMem(0x55b9, { 0xcb, 0xb6 });
        gbc.writeMem(0x8885, { 0x86 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x471a, gbc.sp());
        EXPECT(0x55bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8885));
        // CB B6 003B
        gbc.setState(0xeb04, 0xfccb, 0x3d00, 0x9fb6, 0xcbc7, 0xd5fd, 0x0, 0x0);
        gbc.writeMem(0xd5fd, { 0x8e });
        gbc.writeMem(0xeb04, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfccb, gbc.sp());
        EXPECT(0xeb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xd5fd));
        EXPECT(0xcb, gbc.readMem(0xeb04));
        EXPECT(0xb6, gbc.readMem(0xeb05));
        // CB B6 003C
        gbc.setState(0xb692, 0x43fd, 0x7ea0, 0xaa6f, 0x316e, 0x84fc, 0x0, 0x0);
        gbc.writeMem(0x84fc, { 0x71 });
        gbc.writeMem(0xb692, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x43fd, gbc.sp());
        EXPECT(0xb694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x84fc));
        EXPECT(0xcb, gbc.readMem(0xb692));
        EXPECT(0xb6, gbc.readMem(0xb693));
        // CB B6 003F
        gbc.setState(0x5646, 0x4957, 0x1900, 0x58f6, 0xa06, 0xeadb, 0x1, 0x1);
        gbc.writeMem(0x5646, { 0xcb, 0xb6 });
        gbc.writeMem(0xeadb, { 0x13 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4957, gbc.sp());
        EXPECT(0x5648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeadb));
        // CB B6 0041
        gbc.setState(0x27d9, 0x643c, 0x3510, 0xadfe, 0x3168, 0xbe8e, 0x0, 0x1);
        gbc.writeMem(0x27d9, { 0xcb, 0xb6 });
        gbc.writeMem(0xbe8e, { 0x2e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x643c, gbc.sp());
        EXPECT(0x27db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xbe8e));
        // CB B6 0042
        gbc.setState(0xdbff, 0x4c2b, 0x62b0, 0x5a78, 0x8883, 0x23eb, 0x0, 0x0);
        gbc.writeMem(0x23eb, { 0xaa });
        gbc.writeMem(0xdbff, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4c2b, gbc.sp());
        EXPECT(0xdc01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbff));
        EXPECT(0xb6, gbc.readMem(0xdc00));
        // CB B6 0044
        gbc.setState(0x151d, 0x76fa, 0x7d90, 0x628a, 0x4fbb, 0x40a, 0x1, 0x1);
        gbc.writeMem(0x40a, { 0xb5 });
        gbc.writeMem(0x151d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x76fa, gbc.sp());
        EXPECT(0x151f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0045
        gbc.setState(0x51b9, 0x82dd, 0xc4c0, 0x81e5, 0xf28e, 0xff8b, 0x0, 0x0);
        gbc.writeMem(0x51b9, { 0xcb, 0xb6 });
        gbc.writeMem(0xff8b, { 0x23 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x82dd, gbc.sp());
        EXPECT(0x51bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xff8b));
        // CB B6 0046
        gbc.setState(0x4052, 0xf3cd, 0x8e60, 0x9cf4, 0x921f, 0xb93b, 0x0, 0x1);
        gbc.writeMem(0x4052, { 0xcb, 0xb6 });
        gbc.writeMem(0xb93b, { 0xc8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf3cd, gbc.sp());
        EXPECT(0x4054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb93b));
        // CB B6 0048
        gbc.setState(0x7fe5, 0x730d, 0xe180, 0x7853, 0xb1ba, 0xe16a, 0x1, 0x0);
        gbc.writeMem(0x7fe5, { 0xcb, 0xb6 });
        gbc.writeMem(0xe16a, { 0x46 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x730d, gbc.sp());
        EXPECT(0x7fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe16a));
        // CB B6 0049
        gbc.setState(0x174d, 0x8ee2, 0x3670, 0xb871, 0x5bee, 0x97e2, 0x1, 0x0);
        gbc.writeMem(0x174d, { 0xcb, 0xb6 });
        gbc.writeMem(0x97e2, { 0x88 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8ee2, gbc.sp());
        EXPECT(0x174f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x97e2));
        // CB B6 004A
        gbc.setState(0xa29d, 0x4fd5, 0xc1a0, 0x42e3, 0xd4f2, 0x2c96, 0x0, 0x1);
        gbc.writeMem(0x2c96, { 0x8f });
        gbc.writeMem(0xa29d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4fd5, gbc.sp());
        EXPECT(0xa29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29d));
        EXPECT(0xb6, gbc.readMem(0xa29e));
        // CB B6 004B
        gbc.setState(0xd832, 0x9d9e, 0x4190, 0x2c0c, 0x8c1a, 0xf7aa, 0x1, 0x0);
        gbc.writeMem(0xd832, { 0xcb, 0xb6 });
        gbc.writeMem(0xf7aa, { 0x9c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9d9e, gbc.sp());
        EXPECT(0xd834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd832));
        EXPECT(0xb6, gbc.readMem(0xd833));
        EXPECT(0x9c, gbc.readMem(0xf7aa));
        // CB B6 004D
        gbc.setState(0xd009, 0x3f39, 0xff60, 0x6e5d, 0xc7ce, 0xa323, 0x1, 0x0);
        gbc.writeMem(0xa323, { 0x57 });
        gbc.writeMem(0xd009, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3f39, gbc.sp());
        EXPECT(0xd00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xa323));
        EXPECT(0xcb, gbc.readMem(0xd009));
        EXPECT(0xb6, gbc.readMem(0xd00a));
        // CB B6 004E
        gbc.setState(0xd164, 0x9756, 0x57e0, 0x6de6, 0x6c49, 0x9a98, 0x1, 0x0);
        gbc.writeMem(0x9a98, { 0x62 });
        gbc.writeMem(0xd164, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9756, gbc.sp());
        EXPECT(0xd166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9a98));
        EXPECT(0xcb, gbc.readMem(0xd164));
        EXPECT(0xb6, gbc.readMem(0xd165));
        // CB B6 004F
        gbc.setState(0x50ad, 0xed51, 0xd7c0, 0x3f19, 0x80f4, 0x7360, 0x1, 0x1);
        gbc.writeMem(0x50ad, { 0xcb, 0xb6 });
        gbc.writeMem(0x7360, { 0x83 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xed51, gbc.sp());
        EXPECT(0x50af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0050
        gbc.setState(0x2e53, 0x86bb, 0x1840, 0x5663, 0x37f1, 0x9ce, 0x1, 0x1);
        gbc.writeMem(0x9ce, { 0x3d });
        gbc.writeMem(0x2e53, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x86bb, gbc.sp());
        EXPECT(0x2e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0051
        gbc.setState(0xd861, 0x2dc, 0xd200, 0x9a0f, 0xe906, 0x9a39, 0x0, 0x1);
        gbc.writeMem(0x9a39, { 0xbb });
        gbc.writeMem(0xd861, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2dc, gbc.sp());
        EXPECT(0xd863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9a39));
        EXPECT(0xcb, gbc.readMem(0xd861));
        EXPECT(0xb6, gbc.readMem(0xd862));
        // CB B6 0052
        gbc.setState(0x4277, 0xd23d, 0xaca0, 0x4fbc, 0xad24, 0xac3d, 0x1, 0x0);
        gbc.writeMem(0x4277, { 0xcb, 0xb6 });
        gbc.writeMem(0xac3d, { 0x5e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd23d, gbc.sp());
        EXPECT(0x4279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xac3d));
        // CB B6 0053
        gbc.setState(0xdd3, 0x7a81, 0x8920, 0x87a1, 0xca2a, 0x437e, 0x1, 0x1);
        gbc.writeMem(0xdd3, { 0xcb, 0xb6 });
        gbc.writeMem(0x437e, { 0x8a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7a81, gbc.sp());
        EXPECT(0xdd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0055
        gbc.setState(0xde89, 0x6c63, 0xf8c0, 0xcdf5, 0xfe79, 0x47dc, 0x1, 0x1);
        gbc.writeMem(0x47dc, { 0x87 });
        gbc.writeMem(0xde89, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6c63, gbc.sp());
        EXPECT(0xde8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde89));
        EXPECT(0xb6, gbc.readMem(0xde8a));
        // CB B6 0056
        gbc.setState(0xa09b, 0xe986, 0xce0, 0x29d, 0xf1f0, 0x4f8b, 0x1, 0x0);
        gbc.writeMem(0x4f8b, { 0xb7 });
        gbc.writeMem(0xa09b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe986, gbc.sp());
        EXPECT(0xa09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09b));
        EXPECT(0xb6, gbc.readMem(0xa09c));
        // CB B6 0059
        gbc.setState(0xee2c, 0xd99c, 0xff0, 0x2259, 0xae84, 0x645b, 0x1, 0x1);
        gbc.writeMem(0x645b, { 0xae });
        gbc.writeMem(0xee2c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd99c, gbc.sp());
        EXPECT(0xee2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2c));
        EXPECT(0xb6, gbc.readMem(0xee2d));
        // CB B6 005A
        gbc.setState(0xb9b4, 0x72a, 0xb2d0, 0x2c65, 0xedf0, 0xd574, 0x0, 0x0);
        gbc.writeMem(0xb9b4, { 0xcb, 0xb6 });
        gbc.writeMem(0xd574, { 0xe4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x72a, gbc.sp());
        EXPECT(0xb9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b4));
        EXPECT(0xb6, gbc.readMem(0xb9b5));
        EXPECT(0xa4, gbc.readMem(0xd574));
        // CB B6 005B
        gbc.setState(0x1442, 0xf74a, 0x5850, 0x3b96, 0x6fd9, 0x2a9f, 0x1, 0x0);
        gbc.writeMem(0x1442, { 0xcb, 0xb6 });
        gbc.writeMem(0x2a9f, { 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf74a, gbc.sp());
        EXPECT(0x1444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 005C
        gbc.setState(0x164b, 0x9821, 0xd610, 0x7d54, 0x4d17, 0x833e, 0x1, 0x0);
        gbc.writeMem(0x164b, { 0xcb, 0xb6 });
        gbc.writeMem(0x833e, { 0x33 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9821, gbc.sp());
        EXPECT(0x164d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x833e));
        // CB B6 005D
        gbc.setState(0x532a, 0xc3d3, 0x56e0, 0x8e4a, 0x2fbf, 0xbb14, 0x1, 0x0);
        gbc.writeMem(0x532a, { 0xcb, 0xb6 });
        gbc.writeMem(0xbb14, { 0x11 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc3d3, gbc.sp());
        EXPECT(0x532c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbb14));
        // CB B6 005E
        gbc.setState(0x6749, 0x7f4c, 0x4700, 0x3775, 0x82f8, 0x3a3c, 0x0, 0x1);
        gbc.writeMem(0x3a3c, { 0x97 });
        gbc.writeMem(0x6749, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7f4c, gbc.sp());
        EXPECT(0x674b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 005F
        gbc.setState(0x48de, 0x2626, 0xfa60, 0x7066, 0x717f, 0xd12d, 0x1, 0x1);
        gbc.writeMem(0x48de, { 0xcb, 0xb6 });
        gbc.writeMem(0xd12d, { 0x7f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2626, gbc.sp());
        EXPECT(0x48e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd12d));
        // CB B6 0060
        gbc.setState(0x58bc, 0x5467, 0x8ae0, 0x4445, 0x49f4, 0xfff2, 0x1, 0x1);
        gbc.writeMem(0x58bc, { 0xcb, 0xb6 });
        gbc.writeMem(0xfff2, { 0x98 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5467, gbc.sp());
        EXPECT(0x58be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xfff2));
        // CB B6 0062
        gbc.setState(0xe608, 0xc5d2, 0xae0, 0x73b5, 0x230e, 0x43d5, 0x0, 0x1);
        gbc.writeMem(0x43d5, { 0x8f });
        gbc.writeMem(0xe608, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc5d2, gbc.sp());
        EXPECT(0xe60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe608));
        EXPECT(0xb6, gbc.readMem(0xe609));
        // CB B6 0063
        gbc.setState(0x7eb0, 0xbfc, 0xbdb0, 0xcdbb, 0xaec3, 0xf37b, 0x1, 0x0);
        gbc.writeMem(0x7eb0, { 0xcb, 0xb6 });
        gbc.writeMem(0xf37b, { 0x1f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbfc, gbc.sp());
        EXPECT(0x7eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xf37b));
        // CB B6 0064
        gbc.setState(0x44ec, 0xb6e1, 0x8b70, 0xb5d5, 0x681, 0xa395, 0x0, 0x0);
        gbc.writeMem(0x44ec, { 0xcb, 0xb6 });
        gbc.writeMem(0xa395, { 0xad });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb6e1, gbc.sp());
        EXPECT(0x44ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xa395));
        // CB B6 0066
        gbc.setState(0x85f, 0xd6da, 0x2670, 0x2d20, 0xd51d, 0xe994, 0x1, 0x0);
        gbc.writeMem(0x85f, { 0xcb, 0xb6 });
        gbc.writeMem(0xe994, { 0xff });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd6da, gbc.sp());
        EXPECT(0x861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe994));
        // CB B6 0068
        gbc.setState(0xb8a3, 0x118a, 0x37e0, 0x4841, 0x7b53, 0xcaeb, 0x1, 0x1);
        gbc.writeMem(0xb8a3, { 0xcb, 0xb6 });
        gbc.writeMem(0xcaeb, { 0xc6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x118a, gbc.sp());
        EXPECT(0xb8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a3));
        EXPECT(0xb6, gbc.readMem(0xb8a4));
        EXPECT(0x86, gbc.readMem(0xcaeb));
        // CB B6 0069
        gbc.setState(0xc5e2, 0xa12b, 0xff50, 0x7d9d, 0x17e4, 0xa709, 0x0, 0x1);
        gbc.writeMem(0xa709, { 0xae });
        gbc.writeMem(0xc5e2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa12b, gbc.sp());
        EXPECT(0xc5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xa709));
        EXPECT(0xcb, gbc.readMem(0xc5e2));
        EXPECT(0xb6, gbc.readMem(0xc5e3));
        // CB B6 006B
        gbc.setState(0x19be, 0x9af4, 0x4010, 0xf32, 0x64ca, 0xd47f, 0x0, 0x0);
        gbc.writeMem(0x19be, { 0xcb, 0xb6 });
        gbc.writeMem(0xd47f, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9af4, gbc.sp());
        EXPECT(0x19c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd47f));
        // CB B6 006C
        gbc.setState(0x8e6b, 0x5672, 0xda20, 0x1272, 0xd735, 0xdb42, 0x1, 0x0);
        gbc.writeMem(0x8e6b, { 0xcb, 0xb6 });
        gbc.writeMem(0xdb42, { 0xee });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5672, gbc.sp());
        EXPECT(0x8e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6b));
        EXPECT(0xb6, gbc.readMem(0x8e6c));
        EXPECT(0xae, gbc.readMem(0xdb42));
        // CB B6 006E
        gbc.setState(0x995b, 0x3c7c, 0x7700, 0xc887, 0x6cd7, 0xb231, 0x0, 0x0);
        gbc.writeMem(0x995b, { 0xcb, 0xb6 });
        gbc.writeMem(0xb231, { 0x7c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3c7c, gbc.sp());
        EXPECT(0x995d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x995b));
        EXPECT(0xb6, gbc.readMem(0x995c));
        EXPECT(0x3c, gbc.readMem(0xb231));
        // CB B6 006F
        gbc.setState(0x3d31, 0x681d, 0x1a50, 0xaa63, 0xd74a, 0xbd21, 0x0, 0x0);
        gbc.writeMem(0x3d31, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd21, { 0x9c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x681d, gbc.sp());
        EXPECT(0x3d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbd21));
        // CB B6 0071
        gbc.setState(0x35d6, 0xf3a9, 0x75a0, 0x6e50, 0x8003, 0xe028, 0x0, 0x0);
        gbc.writeMem(0x35d6, { 0xcb, 0xb6 });
        gbc.writeMem(0xe028, { 0x3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf3a9, gbc.sp());
        EXPECT(0x35d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe028));
        // CB B6 0072
        gbc.setState(0x1b96, 0xa99c, 0xb620, 0x55ab, 0xac84, 0x8c53, 0x0, 0x0);
        gbc.writeMem(0x1b96, { 0xcb, 0xb6 });
        gbc.writeMem(0x8c53, { 0x60 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa99c, gbc.sp());
        EXPECT(0x1b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8c53));
        // CB B6 0073
        gbc.setState(0xdb84, 0x754d, 0xdc00, 0xad1, 0x78eb, 0x3938, 0x0, 0x1);
        gbc.writeMem(0x3938, { 0xd });
        gbc.writeMem(0xdb84, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x754d, gbc.sp());
        EXPECT(0xdb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb84));
        EXPECT(0xb6, gbc.readMem(0xdb85));
        // CB B6 0074
        gbc.setState(0x27cb, 0xbe5a, 0xbab0, 0xfb9, 0x84b2, 0x5252, 0x0, 0x0);
        gbc.writeMem(0x27cb, { 0xcb, 0xb6 });
        gbc.writeMem(0x5252, { 0x92 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbe5a, gbc.sp());
        EXPECT(0x27cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0075
        gbc.setState(0xbee2, 0x568d, 0x8ff0, 0x8915, 0x2d3b, 0x5623, 0x1, 0x0);
        gbc.writeMem(0x5623, { 0xb0 });
        gbc.writeMem(0xbee2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x568d, gbc.sp());
        EXPECT(0xbee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee2));
        EXPECT(0xb6, gbc.readMem(0xbee3));
        // CB B6 0076
        gbc.setState(0x21a9, 0xaaa5, 0x1af0, 0x8339, 0x2ce1, 0xad71, 0x1, 0x1);
        gbc.writeMem(0x21a9, { 0xcb, 0xb6 });
        gbc.writeMem(0xad71, { 0xda });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xaaa5, gbc.sp());
        EXPECT(0x21ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xad71));
        // CB B6 007A
        gbc.setState(0x56ab, 0x1069, 0xac50, 0xc437, 0x36b8, 0x17eb, 0x1, 0x1);
        gbc.writeMem(0x17eb, { 0xbd });
        gbc.writeMem(0x56ab, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1069, gbc.sp());
        EXPECT(0x56ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 007B
        gbc.setState(0x53d8, 0xcdeb, 0x9e80, 0x25c, 0xfd3e, 0xbd43, 0x1, 0x0);
        gbc.writeMem(0x53d8, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd43, { 0xdb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcdeb, gbc.sp());
        EXPECT(0x53da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbd43));
        // CB B6 007C
        gbc.setState(0xc0ec, 0xb1c0, 0x5c90, 0x4198, 0xc92a, 0x81b0, 0x0, 0x0);
        gbc.writeMem(0x81b0, { 0x45 });
        gbc.writeMem(0xc0ec, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb1c0, gbc.sp());
        EXPECT(0xc0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x81b0));
        EXPECT(0xcb, gbc.readMem(0xc0ec));
        EXPECT(0xb6, gbc.readMem(0xc0ed));
        // CB B6 007F
        gbc.setState(0x224, 0x8f82, 0x9520, 0x1c33, 0x4a1a, 0xd1b6, 0x0, 0x0);
        gbc.writeMem(0x224, { 0xcb, 0xb6 });
        gbc.writeMem(0xd1b6, { 0x64 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8f82, gbc.sp());
        EXPECT(0x226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xd1b6));
        // CB B6 0081
        gbc.setState(0xa705, 0x90a8, 0x8b30, 0x1695, 0xe934, 0x863c, 0x1, 0x0);
        gbc.writeMem(0x863c, { 0x58 });
        gbc.writeMem(0xa705, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x90a8, gbc.sp());
        EXPECT(0xa707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x863c));
        EXPECT(0xcb, gbc.readMem(0xa705));
        EXPECT(0xb6, gbc.readMem(0xa706));
        // CB B6 0082
        gbc.setState(0x9160, 0xb96d, 0x8af0, 0x78e0, 0x4622, 0xa4cb, 0x0, 0x0);
        gbc.writeMem(0x9160, { 0xcb, 0xb6 });
        gbc.writeMem(0xa4cb, { 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb96d, gbc.sp());
        EXPECT(0x9162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9160));
        EXPECT(0xb6, gbc.readMem(0x9161));
        EXPECT(0x9d, gbc.readMem(0xa4cb));
        // CB B6 0083
        gbc.setState(0x2e27, 0xaaa5, 0x6880, 0x8ac1, 0x7693, 0xe898, 0x0, 0x0);
        gbc.writeMem(0x2e27, { 0xcb, 0xb6 });
        gbc.writeMem(0xe898, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xaaa5, gbc.sp());
        EXPECT(0x2e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe898));
        // CB B6 0086
        gbc.setState(0xacb0, 0x28bf, 0x4a10, 0xaacd, 0x9821, 0x8ee6, 0x1, 0x0);
        gbc.writeMem(0x8ee6, { 0x7c });
        gbc.writeMem(0xacb0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x28bf, gbc.sp());
        EXPECT(0xacb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8ee6));
        EXPECT(0xcb, gbc.readMem(0xacb0));
        EXPECT(0xb6, gbc.readMem(0xacb1));
        // CB B6 0087
        gbc.setState(0xc79b, 0xca3, 0xf090, 0xf070, 0x8212, 0x311e, 0x0, 0x0);
        gbc.writeMem(0x311e, { 0x17 });
        gbc.writeMem(0xc79b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xca3, gbc.sp());
        EXPECT(0xc79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79b));
        EXPECT(0xb6, gbc.readMem(0xc79c));
        // CB B6 0089
        gbc.setState(0x9056, 0xb54b, 0x9710, 0x6eff, 0x4a38, 0xbafd, 0x0, 0x0);
        gbc.writeMem(0x9056, { 0xcb, 0xb6 });
        gbc.writeMem(0xbafd, { 0xa0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb54b, gbc.sp());
        EXPECT(0x9058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9056));
        EXPECT(0xb6, gbc.readMem(0x9057));
        EXPECT(0xa0, gbc.readMem(0xbafd));
        // CB B6 008A
        gbc.setState(0xadb5, 0xea85, 0x4c70, 0xcdb8, 0x4338, 0xe6c6, 0x1, 0x1);
        gbc.writeMem(0xadb5, { 0xcb, 0xb6 });
        gbc.writeMem(0xe6c6, { 0x5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xea85, gbc.sp());
        EXPECT(0xadb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb5));
        EXPECT(0xb6, gbc.readMem(0xadb6));
        EXPECT(0x5, gbc.readMem(0xe6c6));
        // CB B6 008B
        gbc.setState(0x4316, 0x6d52, 0x1180, 0x386c, 0xf21c, 0x2a5a, 0x1, 0x1);
        gbc.writeMem(0x2a5a, { 0x95 });
        gbc.writeMem(0x4316, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6d52, gbc.sp());
        EXPECT(0x4318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 008C
        gbc.setState(0xe436, 0xb8c1, 0x88e0, 0xb30c, 0x6883, 0x1f00, 0x1, 0x0);
        gbc.writeMem(0x1f00, { 0xa });
        gbc.writeMem(0xe436, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb8c1, gbc.sp());
        EXPECT(0xe438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe436));
        EXPECT(0xb6, gbc.readMem(0xe437));
        // CB B6 008E
        gbc.setState(0x9fab, 0xf44f, 0x5f60, 0x46b7, 0xd4bd, 0x131, 0x0, 0x1);
        gbc.writeMem(0x131, { 0x21 });
        gbc.writeMem(0x9fab, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf44f, gbc.sp());
        EXPECT(0x9fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fab));
        EXPECT(0xb6, gbc.readMem(0x9fac));
        // CB B6 0090
        gbc.setState(0xca4c, 0x96d4, 0x8fa0, 0x469f, 0x2586, 0xa3fd, 0x1, 0x0);
        gbc.writeMem(0xa3fd, { 0x4b });
        gbc.writeMem(0xca4c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x96d4, gbc.sp());
        EXPECT(0xca4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa3fd));
        EXPECT(0xcb, gbc.readMem(0xca4c));
        EXPECT(0xb6, gbc.readMem(0xca4d));
        // CB B6 0091
        gbc.setState(0xddd9, 0x972d, 0xdfd0, 0xa908, 0xf453, 0xc8fb, 0x0, 0x1);
        gbc.writeMem(0xc8fb, { 0xdd });
        gbc.writeMem(0xddd9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x972d, gbc.sp());
        EXPECT(0xdddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc8fb));
        EXPECT(0xcb, gbc.readMem(0xddd9));
        EXPECT(0xb6, gbc.readMem(0xddda));
        // CB B6 0092
        gbc.setState(0x4b26, 0x7631, 0x5690, 0x8752, 0xdb5d, 0x246, 0x1, 0x1);
        gbc.writeMem(0x246, { 0x86 });
        gbc.writeMem(0x4b26, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7631, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0093
        gbc.setState(0x3da6, 0x5a16, 0x9f20, 0xd9f8, 0xff35, 0x4988, 0x0, 0x1);
        gbc.writeMem(0x3da6, { 0xcb, 0xb6 });
        gbc.writeMem(0x4988, { 0xaf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5a16, gbc.sp());
        EXPECT(0x3da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0094
        gbc.setState(0xe337, 0x1956, 0x4340, 0xfc1c, 0x2407, 0x43d2, 0x0, 0x1);
        gbc.writeMem(0x43d2, { 0x25 });
        gbc.writeMem(0xe337, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1956, gbc.sp());
        EXPECT(0xe339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe337));
        EXPECT(0xb6, gbc.readMem(0xe338));
        // CB B6 0098
        gbc.setState(0x8aef, 0x530d, 0x2470, 0x354d, 0xd746, 0x3340, 0x0, 0x1);
        gbc.writeMem(0x3340, { 0x92 });
        gbc.writeMem(0x8aef, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x530d, gbc.sp());
        EXPECT(0x8af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aef));
        EXPECT(0xb6, gbc.readMem(0x8af0));
        // CB B6 0099
        gbc.setState(0x9bd2, 0x3e4c, 0x7530, 0x7d87, 0x5764, 0x70cf, 0x0, 0x1);
        gbc.writeMem(0x70cf, { 0x32 });
        gbc.writeMem(0x9bd2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3e4c, gbc.sp());
        EXPECT(0x9bd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd2));
        EXPECT(0xb6, gbc.readMem(0x9bd3));
        // CB B6 009C
        gbc.setState(0xb546, 0xe8dc, 0x6580, 0x875c, 0x3662, 0x968e, 0x0, 0x1);
        gbc.writeMem(0x968e, { 0x62 });
        gbc.writeMem(0xb546, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe8dc, gbc.sp());
        EXPECT(0xb548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x968e));
        EXPECT(0xcb, gbc.readMem(0xb546));
        EXPECT(0xb6, gbc.readMem(0xb547));
        // CB B6 009E
        gbc.setState(0x34dd, 0x6bd7, 0x1320, 0xd768, 0x69c2, 0x4cb, 0x1, 0x1);
        gbc.writeMem(0x4cb, { 0xad });
        gbc.writeMem(0x34dd, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6bd7, gbc.sp());
        EXPECT(0x34df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 009F
        gbc.setState(0xc2a5, 0x1675, 0xf90, 0xb01c, 0x84b8, 0xe09f, 0x0, 0x0);
        gbc.writeMem(0xc2a5, { 0xcb, 0xb6 });
        gbc.writeMem(0xe09f, { 0x13 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1675, gbc.sp());
        EXPECT(0xc2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a5));
        EXPECT(0xb6, gbc.readMem(0xc2a6));
        EXPECT(0x13, gbc.readMem(0xe09f));
        // CB B6 00A0
        gbc.setState(0x3af0, 0x112f, 0x4e40, 0xc7fe, 0xce1e, 0xeede, 0x0, 0x1);
        gbc.writeMem(0x3af0, { 0xcb, 0xb6 });
        gbc.writeMem(0xeede, { 0xc6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x112f, gbc.sp());
        EXPECT(0x3af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xeede));
        // CB B6 00A1
        gbc.setState(0x45ab, 0x8671, 0x5920, 0xc0a, 0x2737, 0x165b, 0x1, 0x1);
        gbc.writeMem(0x165b, { 0x2b });
        gbc.writeMem(0x45ab, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0x45ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 00A2
        gbc.setState(0x544a, 0xe036, 0xbd10, 0x4861, 0x3ed4, 0xe3b9, 0x1, 0x1);
        gbc.writeMem(0x544a, { 0xcb, 0xb6 });
        gbc.writeMem(0xe3b9, { 0x7e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe036, gbc.sp());
        EXPECT(0x544c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe3b9));
        // CB B6 00A3
        gbc.setState(0xac8a, 0xf30, 0xddc0, 0x141b, 0xabc4, 0x6e9a, 0x0, 0x1);
        gbc.writeMem(0x6e9a, { 0x2f });
        gbc.writeMem(0xac8a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf30, gbc.sp());
        EXPECT(0xac8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8a));
        EXPECT(0xb6, gbc.readMem(0xac8b));
        // CB B6 00A4
        gbc.setState(0x4cf6, 0xc6c1, 0xc60, 0x38e5, 0xee30, 0xb791, 0x1, 0x1);
        gbc.writeMem(0x4cf6, { 0xcb, 0xb6 });
        gbc.writeMem(0xb791, { 0x7a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc6c1, gbc.sp());
        EXPECT(0x4cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xb791));
        // CB B6 00A5
        gbc.setState(0x6e03, 0x17e0, 0x5410, 0xbf31, 0x1bf4, 0x945e, 0x0, 0x0);
        gbc.writeMem(0x6e03, { 0xcb, 0xb6 });
        gbc.writeMem(0x945e, { 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x17e0, gbc.sp());
        EXPECT(0x6e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x945e));
        // CB B6 00A6
        gbc.setState(0xbac6, 0x94aa, 0x7cf0, 0xa97d, 0x63a3, 0x8d9b, 0x0, 0x1);
        gbc.writeMem(0x8d9b, { 0xbb });
        gbc.writeMem(0xbac6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0xbac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8d9b));
        EXPECT(0xcb, gbc.readMem(0xbac6));
        EXPECT(0xb6, gbc.readMem(0xbac7));
        // CB B6 00A8
        gbc.setState(0xcbaa, 0x50e8, 0x6640, 0xf09a, 0x56d9, 0xf635, 0x1, 0x1);
        gbc.writeMem(0xcbaa, { 0xcb, 0xb6 });
        gbc.writeMem(0xf635, { 0xec });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x50e8, gbc.sp());
        EXPECT(0xcbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbaa));
        EXPECT(0xb6, gbc.readMem(0xcbab));
        EXPECT(0xac, gbc.readMem(0xf635));
        // CB B6 00A9
        gbc.setState(0x756d, 0xbc89, 0xa630, 0xa42e, 0xcca5, 0xe30c, 0x0, 0x0);
        gbc.writeMem(0x756d, { 0xcb, 0xb6 });
        gbc.writeMem(0xe30c, { 0xe6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbc89, gbc.sp());
        EXPECT(0x756f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe30c));
        // CB B6 00AC
        gbc.setState(0xd6a3, 0xb27e, 0x36d0, 0xcbec, 0x51d4, 0xdc0c, 0x1, 0x0);
        gbc.writeMem(0xd6a3, { 0xcb, 0xb6 });
        gbc.writeMem(0xdc0c, { 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0xd6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a3));
        EXPECT(0xb6, gbc.readMem(0xd6a4));
        EXPECT(0x2c, gbc.readMem(0xdc0c));
        // CB B6 00AD
        gbc.setState(0xaa51, 0x2fa, 0xd850, 0xca4b, 0xef2d, 0xf04f, 0x1, 0x1);
        gbc.writeMem(0xaa51, { 0xcb, 0xb6 });
        gbc.writeMem(0xf04f, { 0x5f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2fa, gbc.sp());
        EXPECT(0xaa53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa51));
        EXPECT(0xb6, gbc.readMem(0xaa52));
        EXPECT(0x1f, gbc.readMem(0xf04f));
        // CB B6 00AE
        gbc.setState(0x1b37, 0x8057, 0xc270, 0x79fb, 0xb1a4, 0xbd44, 0x1, 0x1);
        gbc.writeMem(0x1b37, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd44, { 0xfc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8057, gbc.sp());
        EXPECT(0x1b39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbd44));
        // CB B6 00AF
        gbc.setState(0xd89f, 0xef83, 0x8090, 0x1fe9, 0x17b9, 0xa71d, 0x0, 0x1);
        gbc.writeMem(0xa71d, { 0x46 });
        gbc.writeMem(0xd89f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xef83, gbc.sp());
        EXPECT(0xd8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa71d));
        EXPECT(0xcb, gbc.readMem(0xd89f));
        EXPECT(0xb6, gbc.readMem(0xd8a0));
        // CB B6 00B1
        gbc.setState(0xa8b0, 0x6bd3, 0x98a0, 0x9124, 0xd677, 0xb2c1, 0x0, 0x1);
        gbc.writeMem(0xa8b0, { 0xcb, 0xb6 });
        gbc.writeMem(0xb2c1, { 0x8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6bd3, gbc.sp());
        EXPECT(0xa8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b0));
        EXPECT(0xb6, gbc.readMem(0xa8b1));
        EXPECT(0x8, gbc.readMem(0xb2c1));
        // CB B6 00B2
        gbc.setState(0xdb94, 0x1d37, 0xab10, 0x70d5, 0x4cd3, 0x1789, 0x1, 0x0);
        gbc.writeMem(0x1789, { 0xbd });
        gbc.writeMem(0xdb94, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1d37, gbc.sp());
        EXPECT(0xdb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb94));
        EXPECT(0xb6, gbc.readMem(0xdb95));
        // CB B6 00B3
        gbc.setState(0xe8a0, 0x43b4, 0x4720, 0x2a12, 0xd2a3, 0xf7e1, 0x0, 0x1);
        gbc.writeMem(0xe8a0, { 0xcb, 0xb6 });
        gbc.writeMem(0xf7e1, { 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x43b4, gbc.sp());
        EXPECT(0xe8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a0));
        EXPECT(0xb6, gbc.readMem(0xe8a1));
        EXPECT(0x37, gbc.readMem(0xf7e1));
        // CB B6 00B5
        gbc.setState(0xbba6, 0x4ca7, 0xf60, 0x1f10, 0xdf26, 0xe896, 0x0, 0x1);
        gbc.writeMem(0xbba6, { 0xcb, 0xb6 });
        gbc.writeMem(0xe896, { 0x5f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4ca7, gbc.sp());
        EXPECT(0xbba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba6));
        EXPECT(0xb6, gbc.readMem(0xbba7));
        EXPECT(0x1f, gbc.readMem(0xe896));
        // CB B6 00B6
        gbc.setState(0xa657, 0xa97f, 0xf210, 0x44cd, 0x334e, 0xfdd2, 0x0, 0x0);
        gbc.writeMem(0xa657, { 0xcb, 0xb6 });
        gbc.writeMem(0xfdd2, { 0x18 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa97f, gbc.sp());
        EXPECT(0xa659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa657));
        EXPECT(0xb6, gbc.readMem(0xa658));
        EXPECT(0x18, gbc.readMem(0xfdd2));
        // CB B6 00B7
        gbc.setState(0x635e, 0x1829, 0xcd70, 0xf76b, 0x32e2, 0x145, 0x1, 0x0);
        gbc.writeMem(0x145, { 0x1e });
        gbc.writeMem(0x635e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1829, gbc.sp());
        EXPECT(0x6360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00B8
        gbc.setState(0xe94d, 0x1713, 0x4390, 0x767f, 0xceff, 0xe50c, 0x1, 0x1);
        gbc.writeMem(0xe50c, { 0x77 });
        gbc.writeMem(0xe94d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1713, gbc.sp());
        EXPECT(0xe94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe50c));
        EXPECT(0xcb, gbc.readMem(0xe94d));
        EXPECT(0xb6, gbc.readMem(0xe94e));
        // CB B6 00BC
        gbc.setState(0x96de, 0x28dd, 0xb9c0, 0x40ab, 0x9602, 0x2a92, 0x0, 0x1);
        gbc.writeMem(0x2a92, { 0x31 });
        gbc.writeMem(0x96de, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x28dd, gbc.sp());
        EXPECT(0x96e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96de));
        EXPECT(0xb6, gbc.readMem(0x96df));
        // CB B6 00BD
        gbc.setState(0xa71, 0x9833, 0x7eb0, 0xe09e, 0xf4be, 0x960b, 0x0, 0x1);
        gbc.writeMem(0xa71, { 0xcb, 0xb6 });
        gbc.writeMem(0x960b, { 0x5b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9833, gbc.sp());
        EXPECT(0xa73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x960b));
        // CB B6 00BE
        gbc.setState(0x26ee, 0x5804, 0xde60, 0x2d2, 0x2099, 0x7088, 0x1, 0x1);
        gbc.writeMem(0x26ee, { 0xcb, 0xb6 });
        gbc.writeMem(0x7088, { 0x34 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5804, gbc.sp());
        EXPECT(0x26f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 00BF
        gbc.setState(0x8559, 0xfd80, 0x1200, 0x23ae, 0x3d80, 0xffae, 0x1, 0x0);
        gbc.writeMem(0x8559, { 0xcb, 0xb6 });
        gbc.writeMem(0xffae, { 0x79 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfd80, gbc.sp());
        EXPECT(0x855b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8559));
        EXPECT(0xb6, gbc.readMem(0x855a));
        EXPECT(0x39, gbc.readMem(0xffae));
        // CB B6 00C0
        gbc.setState(0x8b88, 0xcd40, 0x3090, 0x9101, 0xb5d7, 0xb690, 0x0, 0x1);
        gbc.writeMem(0x8b88, { 0xcb, 0xb6 });
        gbc.writeMem(0xb690, { 0x66 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcd40, gbc.sp());
        EXPECT(0x8b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b88));
        EXPECT(0xb6, gbc.readMem(0x8b89));
        EXPECT(0x26, gbc.readMem(0xb690));
        // CB B6 00C1
        gbc.setState(0x5cd1, 0x733f, 0x9140, 0x961f, 0x42e8, 0xaded, 0x0, 0x1);
        gbc.writeMem(0x5cd1, { 0xcb, 0xb6 });
        gbc.writeMem(0xaded, { 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x733f, gbc.sp());
        EXPECT(0x5cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaded));
        // CB B6 00C3
        gbc.setState(0xe4c9, 0x442b, 0xbaa0, 0x2811, 0xdf5e, 0xf0f1, 0x0, 0x1);
        gbc.writeMem(0xe4c9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf0f1, { 0x32 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x442b, gbc.sp());
        EXPECT(0xe4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c9));
        EXPECT(0xb6, gbc.readMem(0xe4ca));
        EXPECT(0x32, gbc.readMem(0xf0f1));
        // CB B6 00C4
        gbc.setState(0xdde, 0xd7f2, 0xcda0, 0x6a57, 0xe4be, 0x84d1, 0x1, 0x0);
        gbc.writeMem(0xdde, { 0xcb, 0xb6 });
        gbc.writeMem(0x84d1, { 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd7f2, gbc.sp());
        EXPECT(0xde0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x84d1));
        // CB B6 00C5
        gbc.setState(0x55a3, 0xdac3, 0x3b20, 0x6d45, 0xb60e, 0x97da, 0x0, 0x1);
        gbc.writeMem(0x55a3, { 0xcb, 0xb6 });
        gbc.writeMem(0x97da, { 0x7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdac3, gbc.sp());
        EXPECT(0x55a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x97da));
        // CB B6 00C8
        gbc.setState(0x773a, 0xa9b8, 0xfea0, 0x957, 0xbb03, 0x5acd, 0x0, 0x1);
        gbc.writeMem(0x5acd, { 0x1 });
        gbc.writeMem(0x773a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa9b8, gbc.sp());
        EXPECT(0x773c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 00C9
        gbc.setState(0x6c4b, 0xad35, 0x9260, 0x4258, 0xdcdb, 0x4840, 0x0, 0x1);
        gbc.writeMem(0x4840, { 0x1e });
        gbc.writeMem(0x6c4b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xad35, gbc.sp());
        EXPECT(0x6c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 00CB
        gbc.setState(0x9af5, 0xa159, 0x6810, 0xd46d, 0xefe2, 0x6dca, 0x1, 0x1);
        gbc.writeMem(0x6dca, { 0xae });
        gbc.writeMem(0x9af5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa159, gbc.sp());
        EXPECT(0x9af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af5));
        EXPECT(0xb6, gbc.readMem(0x9af6));
        // CB B6 00CC
        gbc.setState(0xa53d, 0x2c9e, 0x5e50, 0x6165, 0xf49e, 0x990d, 0x1, 0x0);
        gbc.writeMem(0x990d, { 0x48 });
        gbc.writeMem(0xa53d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2c9e, gbc.sp());
        EXPECT(0xa53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x990d));
        EXPECT(0xcb, gbc.readMem(0xa53d));
        EXPECT(0xb6, gbc.readMem(0xa53e));
        // CB B6 00CD
        gbc.setState(0x7e77, 0xa30, 0x61d0, 0x5214, 0xf302, 0x2e64, 0x0, 0x0);
        gbc.writeMem(0x2e64, { 0x99 });
        gbc.writeMem(0x7e77, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0x7e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00CE
        gbc.setState(0xc2ee, 0x58ca, 0xdd20, 0xe9d4, 0x577e, 0xf74a, 0x1, 0x1);
        gbc.writeMem(0xc2ee, { 0xcb, 0xb6 });
        gbc.writeMem(0xf74a, { 0x85 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x58ca, gbc.sp());
        EXPECT(0xc2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ee));
        EXPECT(0xb6, gbc.readMem(0xc2ef));
        EXPECT(0x85, gbc.readMem(0xf74a));
        // CB B6 00D0
        gbc.setState(0xd539, 0x8f10, 0xf220, 0xb025, 0x20ba, 0xc722, 0x1, 0x0);
        gbc.writeMem(0xc722, { 0xf2 });
        gbc.writeMem(0xd539, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8f10, gbc.sp());
        EXPECT(0xd53b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc722));
        EXPECT(0xcb, gbc.readMem(0xd539));
        EXPECT(0xb6, gbc.readMem(0xd53a));
        // CB B6 00D1
        gbc.setState(0x9147, 0x2205, 0xfd20, 0x1631, 0x450e, 0x3650, 0x0, 0x0);
        gbc.writeMem(0x3650, { 0x1e });
        gbc.writeMem(0x9147, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2205, gbc.sp());
        EXPECT(0x9149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9147));
        EXPECT(0xb6, gbc.readMem(0x9148));
        // CB B6 00D2
        gbc.setState(0x5ea9, 0xab7, 0xb6a0, 0xe3ae, 0xbed, 0xdf2b, 0x0, 0x0);
        gbc.writeMem(0x5ea9, { 0xcb, 0xb6 });
        gbc.writeMem(0xdf2b, { 0x20 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xab7, gbc.sp());
        EXPECT(0x5eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdf2b));
        // CB B6 00D3
        gbc.setState(0x3130, 0xcb5e, 0x59f0, 0x2b6b, 0x6fd0, 0xbee9, 0x0, 0x0);
        gbc.writeMem(0x3130, { 0xcb, 0xb6 });
        gbc.writeMem(0xbee9, { 0x62 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcb5e, gbc.sp());
        EXPECT(0x3132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbee9));
        // CB B6 00D5
        gbc.setState(0x6037, 0xeaa2, 0x39f0, 0x1732, 0x7a40, 0x68c5, 0x0, 0x0);
        gbc.writeMem(0x6037, { 0xcb, 0xb6 });
        gbc.writeMem(0x68c5, { 0xaf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xeaa2, gbc.sp());
        EXPECT(0x6039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00D7
        gbc.setState(0xa6e2, 0x30b0, 0x2aa0, 0x5e8a, 0xedc5, 0xf86f, 0x0, 0x0);
        gbc.writeMem(0xa6e2, { 0xcb, 0xb6 });
        gbc.writeMem(0xf86f, { 0xe });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x30b0, gbc.sp());
        EXPECT(0xa6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e2));
        EXPECT(0xb6, gbc.readMem(0xa6e3));
        EXPECT(0xe, gbc.readMem(0xf86f));
        // CB B6 00D8
        gbc.setState(0xcd77, 0xd29e, 0xcf80, 0x8c39, 0xa84a, 0x4610, 0x1, 0x0);
        gbc.writeMem(0x4610, { 0x1a });
        gbc.writeMem(0xcd77, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd29e, gbc.sp());
        EXPECT(0xcd79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd77));
        EXPECT(0xb6, gbc.readMem(0xcd78));
        // CB B6 00D9
        gbc.setState(0x452, 0x10e5, 0xa2d0, 0xed50, 0xdc1e, 0x68d, 0x1, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0xb6 });
        gbc.writeMem(0x68d, { 0x15 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x10e5, gbc.sp());
        EXPECT(0x454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00DD
        gbc.setState(0xe5f, 0xeab7, 0xa310, 0xeded, 0x136b, 0xfd20, 0x0, 0x0);
        gbc.writeMem(0xe5f, { 0xcb, 0xb6 });
        gbc.writeMem(0xfd20, { 0x73 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xeab7, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xfd20));
        // CB B6 00DE
        gbc.setState(0x6788, 0x789a, 0x9090, 0x967f, 0x6f3c, 0x1e84, 0x0, 0x0);
        gbc.writeMem(0x1e84, { 0x8e });
        gbc.writeMem(0x6788, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x789a, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00E0
        gbc.setState(0x6dda, 0x12c9, 0xa950, 0xaabf, 0xcc4d, 0x606, 0x0, 0x0);
        gbc.writeMem(0x606, { 0x23 });
        gbc.writeMem(0x6dda, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x12c9, gbc.sp());
        EXPECT(0x6ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00E1
        gbc.setState(0xc422, 0xe34a, 0x10f0, 0xeb, 0xb2fc, 0xdf34, 0x1, 0x0);
        gbc.writeMem(0xc422, { 0xcb, 0xb6 });
        gbc.writeMem(0xdf34, { 0xcb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe34a, gbc.sp());
        EXPECT(0xc424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc422));
        EXPECT(0xb6, gbc.readMem(0xc423));
        EXPECT(0x8b, gbc.readMem(0xdf34));
        // CB B6 00E2
        gbc.setState(0xe1e7, 0xe0fe, 0x2ac0, 0xda00, 0x72cf, 0xc54c, 0x1, 0x0);
        gbc.writeMem(0xc54c, { 0x39 });
        gbc.writeMem(0xe1e7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe0fe, gbc.sp());
        EXPECT(0xe1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xc54c));
        EXPECT(0xcb, gbc.readMem(0xe1e7));
        EXPECT(0xb6, gbc.readMem(0xe1e8));
        // CB B6 00E4
        gbc.setState(0x9e00, 0x5f51, 0x5210, 0x3dda, 0x2c0e, 0x560e, 0x0, 0x1);
        gbc.writeMem(0x560e, { 0x91 });
        gbc.writeMem(0x9e00, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5f51, gbc.sp());
        EXPECT(0x9e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e00));
        EXPECT(0xb6, gbc.readMem(0x9e01));
        // CB B6 00E5
        gbc.setState(0x63d2, 0x555e, 0x5050, 0x2473, 0x9192, 0x451f, 0x1, 0x1);
        gbc.writeMem(0x451f, { 0x4 });
        gbc.writeMem(0x63d2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x555e, gbc.sp());
        EXPECT(0x63d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00E6
        gbc.setState(0x6abb, 0xdf27, 0x8fc0, 0xad3c, 0x6388, 0xf244, 0x1, 0x1);
        gbc.writeMem(0x6abb, { 0xcb, 0xb6 });
        gbc.writeMem(0xf244, { 0x43 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdf27, gbc.sp());
        EXPECT(0x6abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xf244));
        // CB B6 00E7
        gbc.setState(0x2d35, 0x7770, 0x5cf0, 0x9ae2, 0xefcd, 0xe586, 0x0, 0x0);
        gbc.writeMem(0x2d35, { 0xcb, 0xb6 });
        gbc.writeMem(0xe586, { 0x36 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7770, gbc.sp());
        EXPECT(0x2d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe586));
        // CB B6 00E8
        gbc.setState(0xc4d9, 0x8702, 0xcad0, 0x9907, 0x2118, 0x1116, 0x0, 0x0);
        gbc.writeMem(0x1116, { 0x9a });
        gbc.writeMem(0xc4d9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8702, gbc.sp());
        EXPECT(0xc4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d9));
        EXPECT(0xb6, gbc.readMem(0xc4da));
        // CB B6 00E9
        gbc.setState(0xd022, 0x3926, 0x9f90, 0xacd2, 0xb8c, 0x2a4f, 0x1, 0x0);
        gbc.writeMem(0x2a4f, { 0x38 });
        gbc.writeMem(0xd022, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3926, gbc.sp());
        EXPECT(0xd024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd022));
        EXPECT(0xb6, gbc.readMem(0xd023));
        // CB B6 00EA
        gbc.setState(0x3ab9, 0xfcfa, 0x1470, 0x2cc7, 0x57ac, 0x90ae, 0x0, 0x1);
        gbc.writeMem(0x3ab9, { 0xcb, 0xb6 });
        gbc.writeMem(0x90ae, { 0xdd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfcfa, gbc.sp());
        EXPECT(0x3abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x90ae));
        // CB B6 00EB
        gbc.setState(0x6b3a, 0x83a5, 0x12a0, 0x38de, 0x8a08, 0x940e, 0x0, 0x1);
        gbc.writeMem(0x6b3a, { 0xcb, 0xb6 });
        gbc.writeMem(0x940e, { 0xaf });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x83a5, gbc.sp());
        EXPECT(0x6b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x940e));
        // CB B6 00EC
        gbc.setState(0xa80, 0x9031, 0xddc0, 0x13a6, 0xd8e1, 0x8b36, 0x0, 0x0);
        gbc.writeMem(0xa80, { 0xcb, 0xb6 });
        gbc.writeMem(0x8b36, { 0x58 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9031, gbc.sp());
        EXPECT(0xa82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x8b36));
        // CB B6 00EE
        gbc.setState(0x4343, 0xc03d, 0x1b90, 0x95a8, 0x9e88, 0xb4b8, 0x0, 0x0);
        gbc.writeMem(0x4343, { 0xcb, 0xb6 });
        gbc.writeMem(0xb4b8, { 0x5d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc03d, gbc.sp());
        EXPECT(0x4345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb4b8));
        // CB B6 00F0
        gbc.setState(0x2caa, 0x4d13, 0xaa70, 0x139c, 0xd6a4, 0x172b, 0x1, 0x1);
        gbc.writeMem(0x172b, { 0xa });
        gbc.writeMem(0x2caa, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4d13, gbc.sp());
        EXPECT(0x2cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00F1
        gbc.setState(0x7c96, 0x6c3, 0x48d0, 0xe5ae, 0xb206, 0x7f5c, 0x0, 0x1);
        gbc.writeMem(0x7c96, { 0xcb, 0xb6 });
        gbc.writeMem(0x7f5c, { 0x81 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6c3, gbc.sp());
        EXPECT(0x7c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00F2
        gbc.setState(0x7358, 0x8b07, 0xe20, 0xd531, 0x1b34, 0xe474, 0x0, 0x1);
        gbc.writeMem(0x7358, { 0xcb, 0xb6 });
        gbc.writeMem(0xe474, { 0xa6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8b07, gbc.sp());
        EXPECT(0x735a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe474));
        // CB B6 00F3
        gbc.setState(0xc22d, 0xd299, 0x3960, 0x16ba, 0x179, 0x570d, 0x0, 0x1);
        gbc.writeMem(0x570d, { 0x21 });
        gbc.writeMem(0xc22d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd299, gbc.sp());
        EXPECT(0xc22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22d));
        EXPECT(0xb6, gbc.readMem(0xc22e));
        // CB B6 00F4
        gbc.setState(0xb4df, 0x422b, 0x3da0, 0x1dfc, 0xdd9e, 0xe602, 0x0, 0x0);
        gbc.writeMem(0xb4df, { 0xcb, 0xb6 });
        gbc.writeMem(0xe602, { 0xa8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x422b, gbc.sp());
        EXPECT(0xb4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4df));
        EXPECT(0xb6, gbc.readMem(0xb4e0));
        EXPECT(0xa8, gbc.readMem(0xe602));
        // CB B6 00F5
        gbc.setState(0x1ff3, 0x881a, 0xf280, 0x3914, 0x80ed, 0xf3ac, 0x0, 0x1);
        gbc.writeMem(0x1ff3, { 0xcb, 0xb6 });
        gbc.writeMem(0xf3ac, { 0x4d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x881a, gbc.sp());
        EXPECT(0x1ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xf3ac));
        // CB B6 00F6
        gbc.setState(0xdf61, 0x2ac2, 0x45c0, 0x79b0, 0x1f3e, 0x32fa, 0x1, 0x0);
        gbc.writeMem(0x32fa, { 0x92 });
        gbc.writeMem(0xdf61, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0xdf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf61));
        EXPECT(0xb6, gbc.readMem(0xdf62));
        // CB B6 00F7
        gbc.setState(0xc515, 0x3d06, 0x3100, 0x8836, 0x7cf6, 0xa08c, 0x1, 0x0);
        gbc.writeMem(0xa08c, { 0x13 });
        gbc.writeMem(0xc515, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3d06, gbc.sp());
        EXPECT(0xc517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa08c));
        EXPECT(0xcb, gbc.readMem(0xc515));
        EXPECT(0xb6, gbc.readMem(0xc516));
        // CB B6 00F9
        gbc.setState(0x6a2c, 0xe430, 0x64d0, 0x958b, 0x4569, 0x28d8, 0x1, 0x1);
        gbc.writeMem(0x28d8, { 0x1c });
        gbc.writeMem(0x6a2c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe430, gbc.sp());
        EXPECT(0x6a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 00FC
        gbc.setState(0xb943, 0xa7d8, 0x6f10, 0x9a05, 0x2c1d, 0x1a68, 0x1, 0x1);
        gbc.writeMem(0x1a68, { 0xac });
        gbc.writeMem(0xb943, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa7d8, gbc.sp());
        EXPECT(0xb945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb943));
        EXPECT(0xb6, gbc.readMem(0xb944));
        // CB B6 00FD
        gbc.setState(0xac2c, 0x7835, 0xff30, 0xbe19, 0xae1e, 0x181f, 0x0, 0x1);
        gbc.writeMem(0x181f, { 0xb });
        gbc.writeMem(0xac2c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7835, gbc.sp());
        EXPECT(0xac2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2c));
        EXPECT(0xb6, gbc.readMem(0xac2d));
        // CB B6 00FF
        gbc.setState(0xc99, 0xeb6d, 0xe810, 0xdf98, 0x5ac4, 0x66d2, 0x1, 0x0);
        gbc.writeMem(0xc99, { 0xcb, 0xb6 });
        gbc.writeMem(0x66d2, { 0x1c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeb6d, gbc.sp());
        EXPECT(0xc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0100
        gbc.setState(0x3493, 0xa701, 0x6ae0, 0x9f6b, 0x6a34, 0xe93c, 0x1, 0x0);
        gbc.writeMem(0x3493, { 0xcb, 0xb6 });
        gbc.writeMem(0xe93c, { 0x5b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa701, gbc.sp());
        EXPECT(0x3495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xe93c));
        // CB B6 0101
        gbc.setState(0x7a0e, 0x4b2a, 0xf170, 0x2033, 0x5db4, 0xd1f5, 0x0, 0x0);
        gbc.writeMem(0x7a0e, { 0xcb, 0xb6 });
        gbc.writeMem(0xd1f5, { 0x46 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4b2a, gbc.sp());
        EXPECT(0x7a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd1f5));
        // CB B6 0102
        gbc.setState(0x49d0, 0x375, 0x8980, 0x1d0d, 0x3f27, 0x9e85, 0x1, 0x1);
        gbc.writeMem(0x49d0, { 0xcb, 0xb6 });
        gbc.writeMem(0x9e85, { 0x83 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x375, gbc.sp());
        EXPECT(0x49d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x9e85));
        // CB B6 0103
        gbc.setState(0xc0f3, 0xb311, 0x9780, 0xabd8, 0x497f, 0x8841, 0x1, 0x1);
        gbc.writeMem(0x8841, { 0xff });
        gbc.writeMem(0xc0f3, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb311, gbc.sp());
        EXPECT(0xc0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8841));
        EXPECT(0xcb, gbc.readMem(0xc0f3));
        EXPECT(0xb6, gbc.readMem(0xc0f4));
        // CB B6 0106
        gbc.setState(0x8895, 0xe5cc, 0xe6e0, 0xb436, 0x6a8c, 0xd021, 0x0, 0x0);
        gbc.writeMem(0x8895, { 0xcb, 0xb6 });
        gbc.writeMem(0xd021, { 0x80 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe5cc, gbc.sp());
        EXPECT(0x8897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8895));
        EXPECT(0xb6, gbc.readMem(0x8896));
        EXPECT(0x80, gbc.readMem(0xd021));
        // CB B6 0107
        gbc.setState(0x857d, 0x1350, 0xaef0, 0x97a1, 0xaf2e, 0x6e72, 0x1, 0x0);
        gbc.writeMem(0x6e72, { 0xab });
        gbc.writeMem(0x857d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1350, gbc.sp());
        EXPECT(0x857f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857d));
        EXPECT(0xb6, gbc.readMem(0x857e));
        // CB B6 010C
        gbc.setState(0x4c03, 0x500c, 0x8f0, 0x391f, 0xb313, 0xd06f, 0x1, 0x1);
        gbc.writeMem(0x4c03, { 0xcb, 0xb6 });
        gbc.writeMem(0xd06f, { 0xdd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x500c, gbc.sp());
        EXPECT(0x4c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd06f));
        // CB B6 010D
        gbc.setState(0xe881, 0x770c, 0xc3f0, 0x2afd, 0x22f5, 0x684, 0x0, 0x0);
        gbc.writeMem(0x684, { 0x8c });
        gbc.writeMem(0xe881, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x770c, gbc.sp());
        EXPECT(0xe883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe881));
        EXPECT(0xb6, gbc.readMem(0xe882));
        // CB B6 010F
        gbc.setState(0x164c, 0xd538, 0x3a10, 0xd080, 0xbffa, 0xee5d, 0x1, 0x0);
        gbc.writeMem(0x164c, { 0xcb, 0xb6 });
        gbc.writeMem(0xee5d, { 0x3c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd538, gbc.sp());
        EXPECT(0x164e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xee5d));
        // CB B6 0110
        gbc.setState(0x5ca1, 0x44c2, 0x8f40, 0xd351, 0xf05, 0x98d3, 0x1, 0x1);
        gbc.writeMem(0x5ca1, { 0xcb, 0xb6 });
        gbc.writeMem(0x98d3, { 0xf5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x44c2, gbc.sp());
        EXPECT(0x5ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x98d3));
        // CB B6 0111
        gbc.setState(0xb194, 0xa5ca, 0x20e0, 0x3490, 0xde71, 0x9947, 0x1, 0x1);
        gbc.writeMem(0x9947, { 0xb8 });
        gbc.writeMem(0xb194, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa5ca, gbc.sp());
        EXPECT(0xb196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9947));
        EXPECT(0xcb, gbc.readMem(0xb194));
        EXPECT(0xb6, gbc.readMem(0xb195));
        // CB B6 0113
        gbc.setState(0xbae8, 0xc007, 0xa130, 0xa9ec, 0x438f, 0xacd7, 0x1, 0x1);
        gbc.writeMem(0xacd7, { 0x66 });
        gbc.writeMem(0xbae8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc007, gbc.sp());
        EXPECT(0xbaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xacd7));
        EXPECT(0xcb, gbc.readMem(0xbae8));
        EXPECT(0xb6, gbc.readMem(0xbae9));
        // CB B6 0114
        gbc.setState(0x1a3, 0x3b0b, 0x8960, 0xdb2, 0x9044, 0xf19e, 0x0, 0x1);
        gbc.writeMem(0x1a3, { 0xcb, 0xb6 });
        gbc.writeMem(0xf19e, { 0x31 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3b0b, gbc.sp());
        EXPECT(0x1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xf19e));
        // CB B6 0115
        gbc.setState(0x82cd, 0x142a, 0xd970, 0x8dc0, 0xb2a5, 0xb7e3, 0x1, 0x0);
        gbc.writeMem(0x82cd, { 0xcb, 0xb6 });
        gbc.writeMem(0xb7e3, { 0xe4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x142a, gbc.sp());
        EXPECT(0x82cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cd));
        EXPECT(0xb6, gbc.readMem(0x82ce));
        EXPECT(0xa4, gbc.readMem(0xb7e3));
        // CB B6 0116
        gbc.setState(0xad03, 0x3b4e, 0xb580, 0xa9ff, 0xaa83, 0xe23d, 0x1, 0x0);
        gbc.writeMem(0xad03, { 0xcb, 0xb6 });
        gbc.writeMem(0xe23d, { 0x6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3b4e, gbc.sp());
        EXPECT(0xad05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad03));
        EXPECT(0xb6, gbc.readMem(0xad04));
        EXPECT(0x6, gbc.readMem(0xe23d));
        // CB B6 0117
        gbc.setState(0x89cf, 0x27c7, 0x7b80, 0x8e73, 0x7c8e, 0x98e2, 0x0, 0x1);
        gbc.writeMem(0x89cf, { 0xcb, 0xb6 });
        gbc.writeMem(0x98e2, { 0x9d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x27c7, gbc.sp());
        EXPECT(0x89d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cf));
        EXPECT(0xb6, gbc.readMem(0x89d0));
        EXPECT(0x9d, gbc.readMem(0x98e2));
        // CB B6 0118
        gbc.setState(0x393f, 0x11a, 0xbd0, 0x8f62, 0xf3a3, 0x89b7, 0x1, 0x0);
        gbc.writeMem(0x393f, { 0xcb, 0xb6 });
        gbc.writeMem(0x89b7, { 0xf2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x11a, gbc.sp());
        EXPECT(0x3941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x89b7));
        // CB B6 011B
        gbc.setState(0x51a2, 0xa122, 0xaf10, 0x5b4d, 0xce0a, 0x73e9, 0x0, 0x1);
        gbc.writeMem(0x51a2, { 0xcb, 0xb6 });
        gbc.writeMem(0x73e9, { 0xb9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa122, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 011E
        gbc.setState(0x47d7, 0x5512, 0x3bc0, 0x2382, 0x950d, 0xa273, 0x1, 0x1);
        gbc.writeMem(0x47d7, { 0xcb, 0xb6 });
        gbc.writeMem(0xa273, { 0xe1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5512, gbc.sp());
        EXPECT(0x47d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa273));
        // CB B6 011F
        gbc.setState(0xb42a, 0xb9ca, 0xe520, 0xcea6, 0x75dc, 0x7a7a, 0x1, 0x0);
        gbc.writeMem(0x7a7a, { 0x1f });
        gbc.writeMem(0xb42a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb9ca, gbc.sp());
        EXPECT(0xb42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42a));
        EXPECT(0xb6, gbc.readMem(0xb42b));
        // CB B6 0120
        gbc.setState(0xe48a, 0xfdfd, 0xdb80, 0xa780, 0xda2b, 0xd6a0, 0x1, 0x0);
        gbc.writeMem(0xd6a0, { 0x5d });
        gbc.writeMem(0xe48a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfdfd, gbc.sp());
        EXPECT(0xe48c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd6a0));
        EXPECT(0xcb, gbc.readMem(0xe48a));
        EXPECT(0xb6, gbc.readMem(0xe48b));
        // CB B6 0121
        gbc.setState(0x780b, 0x195d, 0x82f0, 0xa358, 0xe6e2, 0x9dc1, 0x1, 0x0);
        gbc.writeMem(0x780b, { 0xcb, 0xb6 });
        gbc.writeMem(0x9dc1, { 0x3d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x195d, gbc.sp());
        EXPECT(0x780d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x9dc1));
        // CB B6 0122
        gbc.setState(0x2705, 0xe44a, 0x8140, 0xb7a2, 0xa34b, 0x1939, 0x1, 0x0);
        gbc.writeMem(0x1939, { 0xa1 });
        gbc.writeMem(0x2705, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe44a, gbc.sp());
        EXPECT(0x2707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0123
        gbc.setState(0x9eba, 0x12e7, 0x1340, 0x8dda, 0xa6ed, 0xbc54, 0x0, 0x1);
        gbc.writeMem(0x9eba, { 0xcb, 0xb6 });
        gbc.writeMem(0xbc54, { 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x12e7, gbc.sp());
        EXPECT(0x9ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eba));
        EXPECT(0xb6, gbc.readMem(0x9ebb));
        EXPECT(0x37, gbc.readMem(0xbc54));
        // CB B6 0124
        gbc.setState(0x1630, 0x8537, 0x5a80, 0x835e, 0x87d1, 0xde4a, 0x0, 0x0);
        gbc.writeMem(0x1630, { 0xcb, 0xb6 });
        gbc.writeMem(0xde4a, { 0xc8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8537, gbc.sp());
        EXPECT(0x1632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xde4a));
        // CB B6 0125
        gbc.setState(0xb843, 0xed26, 0x4d90, 0xce63, 0x1a9f, 0xec36, 0x0, 0x1);
        gbc.writeMem(0xb843, { 0xcb, 0xb6 });
        gbc.writeMem(0xec36, { 0x68 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xed26, gbc.sp());
        EXPECT(0xb845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb843));
        EXPECT(0xb6, gbc.readMem(0xb844));
        EXPECT(0x28, gbc.readMem(0xec36));
        // CB B6 0127
        gbc.setState(0xfd1, 0x403e, 0x5430, 0xb9d5, 0x8238, 0xe660, 0x1, 0x0);
        gbc.writeMem(0xfd1, { 0xcb, 0xb6 });
        gbc.writeMem(0xe660, { 0xc2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x403e, gbc.sp());
        EXPECT(0xfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe660));
        // CB B6 0128
        gbc.setState(0x9972, 0x8299, 0x4bd0, 0x60c5, 0x4ab5, 0x92aa, 0x0, 0x1);
        gbc.writeMem(0x92aa, { 0x98 });
        gbc.writeMem(0x9972, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0x9974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x92aa));
        EXPECT(0xcb, gbc.readMem(0x9972));
        EXPECT(0xb6, gbc.readMem(0x9973));
        // CB B6 0129
        gbc.setState(0xb8e4, 0x3422, 0xf8b0, 0x67a8, 0xc516, 0x90b7, 0x1, 0x1);
        gbc.writeMem(0x90b7, { 0xe0 });
        gbc.writeMem(0xb8e4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3422, gbc.sp());
        EXPECT(0xb8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x90b7));
        EXPECT(0xcb, gbc.readMem(0xb8e4));
        EXPECT(0xb6, gbc.readMem(0xb8e5));
        // CB B6 012A
        gbc.setState(0x5863, 0x73d, 0xac90, 0xcea9, 0x3fc3, 0xc8c6, 0x0, 0x1);
        gbc.writeMem(0x5863, { 0xcb, 0xb6 });
        gbc.writeMem(0xc8c6, { 0xfa });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x73d, gbc.sp());
        EXPECT(0x5865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xc8c6));
        // CB B6 012C
        gbc.setState(0xa5e1, 0xc49b, 0x4330, 0x8207, 0xac88, 0xcc4f, 0x1, 0x0);
        gbc.writeMem(0xa5e1, { 0xcb, 0xb6 });
        gbc.writeMem(0xcc4f, { 0xd9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc49b, gbc.sp());
        EXPECT(0xa5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e1));
        EXPECT(0xb6, gbc.readMem(0xa5e2));
        EXPECT(0x99, gbc.readMem(0xcc4f));
        // CB B6 012D
        gbc.setState(0x77ec, 0xd7a1, 0x3650, 0x523f, 0x9ee7, 0xfca7, 0x1, 0x0);
        gbc.writeMem(0x77ec, { 0xcb, 0xb6 });
        gbc.writeMem(0xfca7, { 0x30 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0x77ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xfca7));
        // CB B6 012F
        gbc.setState(0xca71, 0x1a2d, 0xdc40, 0x2247, 0xc535, 0x92e5, 0x1, 0x1);
        gbc.writeMem(0x92e5, { 0x72 });
        gbc.writeMem(0xca71, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1a2d, gbc.sp());
        EXPECT(0xca73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x92e5));
        EXPECT(0xcb, gbc.readMem(0xca71));
        EXPECT(0xb6, gbc.readMem(0xca72));
        // CB B6 0131
        gbc.setState(0x3b53, 0xa24d, 0xbba0, 0xf61f, 0x6a58, 0x25a9, 0x1, 0x1);
        gbc.writeMem(0x25a9, { 0x3a });
        gbc.writeMem(0x3b53, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa24d, gbc.sp());
        EXPECT(0x3b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0132
        gbc.setState(0x4300, 0xdc26, 0x90d0, 0xb63b, 0x9ec9, 0x3143, 0x0, 0x1);
        gbc.writeMem(0x3143, { 0xaa });
        gbc.writeMem(0x4300, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdc26, gbc.sp());
        EXPECT(0x4302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0134
        gbc.setState(0x1d72, 0x6cb9, 0x92d0, 0x7783, 0xa702, 0xa82f, 0x0, 0x1);
        gbc.writeMem(0x1d72, { 0xcb, 0xb6 });
        gbc.writeMem(0xa82f, { 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6cb9, gbc.sp());
        EXPECT(0x1d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa82f));
        // CB B6 0135
        gbc.setState(0x938e, 0x9173, 0xf810, 0xa9e6, 0x335e, 0xa992, 0x0, 0x1);
        gbc.writeMem(0x938e, { 0xcb, 0xb6 });
        gbc.writeMem(0xa992, { 0xeb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9173, gbc.sp());
        EXPECT(0x9390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938e));
        EXPECT(0xb6, gbc.readMem(0x938f));
        EXPECT(0xab, gbc.readMem(0xa992));
        // CB B6 0136
        gbc.setState(0x610c, 0xf53f, 0xf160, 0x22a1, 0x211c, 0x2769, 0x0, 0x1);
        gbc.writeMem(0x2769, { 0x83 });
        gbc.writeMem(0x610c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf53f, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0138
        gbc.setState(0xcf0f, 0xffed, 0x1f20, 0x70c1, 0x1b8f, 0xa77f, 0x1, 0x1);
        gbc.writeMem(0xa77f, { 0x53 });
        gbc.writeMem(0xcf0f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xffed, gbc.sp());
        EXPECT(0xcf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa77f));
        EXPECT(0xcb, gbc.readMem(0xcf0f));
        EXPECT(0xb6, gbc.readMem(0xcf10));
        // CB B6 0139
        gbc.setState(0xaf32, 0xfe38, 0x8700, 0x473f, 0x4076, 0xd348, 0x1, 0x1);
        gbc.writeMem(0xaf32, { 0xcb, 0xb6 });
        gbc.writeMem(0xd348, { 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfe38, gbc.sp());
        EXPECT(0xaf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf32));
        EXPECT(0xb6, gbc.readMem(0xaf33));
        EXPECT(0x88, gbc.readMem(0xd348));
        // CB B6 013A
        gbc.setState(0xc9bc, 0x92c2, 0xec90, 0x5ba9, 0x7fdb, 0x847b, 0x0, 0x1);
        gbc.writeMem(0x847b, { 0x2f });
        gbc.writeMem(0xc9bc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x92c2, gbc.sp());
        EXPECT(0xc9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x847b));
        EXPECT(0xcb, gbc.readMem(0xc9bc));
        EXPECT(0xb6, gbc.readMem(0xc9bd));
        // CB B6 013B
        gbc.setState(0xb1ee, 0xd6dd, 0xb40, 0x4d9c, 0x77b0, 0xf022, 0x1, 0x0);
        gbc.writeMem(0xb1ee, { 0xcb, 0xb6 });
        gbc.writeMem(0xf022, { 0xa3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd6dd, gbc.sp());
        EXPECT(0xb1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ee));
        EXPECT(0xb6, gbc.readMem(0xb1ef));
        EXPECT(0xa3, gbc.readMem(0xf022));
        // CB B6 013C
        gbc.setState(0x365c, 0x4a7d, 0x80, 0x7639, 0xd9ec, 0x8ea8, 0x0, 0x0);
        gbc.writeMem(0x365c, { 0xcb, 0xb6 });
        gbc.writeMem(0x8ea8, { 0x3e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4a7d, gbc.sp());
        EXPECT(0x365e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8ea8));
        // CB B6 013D
        gbc.setState(0x2bf1, 0x7283, 0x3a60, 0x1f6, 0x7f91, 0xbb4a, 0x0, 0x1);
        gbc.writeMem(0x2bf1, { 0xcb, 0xb6 });
        gbc.writeMem(0xbb4a, { 0x3f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7283, gbc.sp());
        EXPECT(0x2bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbb4a));
        // CB B6 013E
        gbc.setState(0x4070, 0x5583, 0x720, 0x3d4d, 0x5248, 0xfba5, 0x1, 0x1);
        gbc.writeMem(0x4070, { 0xcb, 0xb6 });
        gbc.writeMem(0xfba5, { 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5583, gbc.sp());
        EXPECT(0x4072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xfba5));
        // CB B6 013F
        gbc.setState(0xfcc, 0xd30c, 0xfb30, 0x63dd, 0xf3b4, 0xea74, 0x0, 0x1);
        gbc.writeMem(0xfcc, { 0xcb, 0xb6 });
        gbc.writeMem(0xea74, { 0xaa });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd30c, gbc.sp());
        EXPECT(0xfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xea74));
        // CB B6 0140
        gbc.setState(0x490a, 0xdfc0, 0x75c0, 0x24d0, 0xcbc5, 0x9feb, 0x0, 0x1);
        gbc.writeMem(0x490a, { 0xcb, 0xb6 });
        gbc.writeMem(0x9feb, { 0x62 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdfc0, gbc.sp());
        EXPECT(0x490c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9feb));
        // CB B6 0141
        gbc.setState(0x978a, 0x9741, 0x360, 0xa587, 0x22a8, 0xb39c, 0x1, 0x1);
        gbc.writeMem(0x978a, { 0xcb, 0xb6 });
        gbc.writeMem(0xb39c, { 0x7a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9741, gbc.sp());
        EXPECT(0x978c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978a));
        EXPECT(0xb6, gbc.readMem(0x978b));
        EXPECT(0x3a, gbc.readMem(0xb39c));
        // CB B6 0142
        gbc.setState(0xa993, 0x76fd, 0xfcd0, 0x2137, 0xba59, 0x625c, 0x0, 0x1);
        gbc.writeMem(0x625c, { 0x5 });
        gbc.writeMem(0xa993, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x76fd, gbc.sp());
        EXPECT(0xa995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa993));
        EXPECT(0xb6, gbc.readMem(0xa994));
        // CB B6 0145
        gbc.setState(0x9ca9, 0xe8af, 0xfdf0, 0xcdee, 0xe169, 0x39fb, 0x1, 0x0);
        gbc.writeMem(0x39fb, { 0x4 });
        gbc.writeMem(0x9ca9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe8af, gbc.sp());
        EXPECT(0x9cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca9));
        EXPECT(0xb6, gbc.readMem(0x9caa));
        // CB B6 0146
        gbc.setState(0xeb77, 0xc53, 0x2900, 0x6a54, 0x2740, 0xc124, 0x0, 0x1);
        gbc.writeMem(0xc124, { 0xdd });
        gbc.writeMem(0xeb77, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc53, gbc.sp());
        EXPECT(0xeb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc124));
        EXPECT(0xcb, gbc.readMem(0xeb77));
        EXPECT(0xb6, gbc.readMem(0xeb78));
        // CB B6 0147
        gbc.setState(0x6df5, 0x2bb7, 0xe560, 0x63cf, 0x8751, 0xd2e7, 0x1, 0x0);
        gbc.writeMem(0x6df5, { 0xcb, 0xb6 });
        gbc.writeMem(0xd2e7, { 0x58 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2bb7, gbc.sp());
        EXPECT(0x6df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xd2e7));
        // CB B6 0148
        gbc.setState(0xab0c, 0x9d81, 0x3860, 0x826a, 0xa7f7, 0x8b49, 0x0, 0x0);
        gbc.writeMem(0x8b49, { 0xcb });
        gbc.writeMem(0xab0c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9d81, gbc.sp());
        EXPECT(0xab0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8b49));
        EXPECT(0xcb, gbc.readMem(0xab0c));
        EXPECT(0xb6, gbc.readMem(0xab0d));
        // CB B6 0149
        gbc.setState(0x8208, 0xac66, 0x5c40, 0xec4c, 0x1bda, 0xebab, 0x1, 0x0);
        gbc.writeMem(0x8208, { 0xcb, 0xb6 });
        gbc.writeMem(0xebab, { 0x9e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xac66, gbc.sp());
        EXPECT(0x820a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8208));
        EXPECT(0xb6, gbc.readMem(0x8209));
        EXPECT(0x9e, gbc.readMem(0xebab));
        // CB B6 014A
        gbc.setState(0x1174, 0x8731, 0xbe60, 0x7477, 0xa4c, 0xa070, 0x1, 0x1);
        gbc.writeMem(0x1174, { 0xcb, 0xb6 });
        gbc.writeMem(0xa070, { 0x20 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8731, gbc.sp());
        EXPECT(0x1176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa070));
        // CB B6 014B
        gbc.setState(0xda15, 0x8dd6, 0xb6e0, 0xf31f, 0x90e7, 0xc838, 0x0, 0x1);
        gbc.writeMem(0xc838, { 0x1c });
        gbc.writeMem(0xda15, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8dd6, gbc.sp());
        EXPECT(0xda17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xc838));
        EXPECT(0xcb, gbc.readMem(0xda15));
        EXPECT(0xb6, gbc.readMem(0xda16));
        // CB B6 014C
        gbc.setState(0x1253, 0xff42, 0x4790, 0xeb07, 0x570, 0xa41c, 0x1, 0x1);
        gbc.writeMem(0x1253, { 0xcb, 0xb6 });
        gbc.writeMem(0xa41c, { 0x65 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xff42, gbc.sp());
        EXPECT(0x1255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa41c));
        // CB B6 014E
        gbc.setState(0x4744, 0x343b, 0xb070, 0x93ef, 0x4b4d, 0xa9b7, 0x1, 0x0);
        gbc.writeMem(0x4744, { 0xcb, 0xb6 });
        gbc.writeMem(0xa9b7, { 0xdf });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x343b, gbc.sp());
        EXPECT(0x4746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa9b7));
        // CB B6 014F
        gbc.setState(0xe2f8, 0x2232, 0x46e0, 0x5edf, 0xa9e3, 0xbb5f, 0x1, 0x0);
        gbc.writeMem(0xbb5f, { 0x31 });
        gbc.writeMem(0xe2f8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2232, gbc.sp());
        EXPECT(0xe2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbb5f));
        EXPECT(0xcb, gbc.readMem(0xe2f8));
        EXPECT(0xb6, gbc.readMem(0xe2f9));
        // CB B6 0150
        gbc.setState(0x8a21, 0xe00b, 0xa460, 0xa176, 0x404a, 0x93c9, 0x0, 0x1);
        gbc.writeMem(0x8a21, { 0xcb, 0xb6 });
        gbc.writeMem(0x93c9, { 0xbf });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe00b, gbc.sp());
        EXPECT(0x8a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a21));
        EXPECT(0xb6, gbc.readMem(0x8a22));
        EXPECT(0xbf, gbc.readMem(0x93c9));
        // CB B6 0151
        gbc.setState(0xa7d0, 0x716b, 0xe4c0, 0x4060, 0x529d, 0xf4a, 0x0, 0x0);
        gbc.writeMem(0xf4a, { 0x88 });
        gbc.writeMem(0xa7d0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x716b, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d0));
        EXPECT(0xb6, gbc.readMem(0xa7d1));
        // CB B6 0152
        gbc.setState(0x1954, 0xa8a8, 0xa240, 0xf2ee, 0x1356, 0xb55f, 0x1, 0x0);
        gbc.writeMem(0x1954, { 0xcb, 0xb6 });
        gbc.writeMem(0xb55f, { 0x2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0x1956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb55f));
        // CB B6 0156
        gbc.setState(0xc45a, 0x46b0, 0x7ff0, 0xaf37, 0x9927, 0x71b4, 0x0, 0x0);
        gbc.writeMem(0x71b4, { 0xb3 });
        gbc.writeMem(0xc45a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x46b0, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45a));
        EXPECT(0xb6, gbc.readMem(0xc45b));
        // CB B6 0157
        gbc.setState(0x206c, 0x9364, 0x5f90, 0x224d, 0x6f1, 0xa363, 0x1, 0x0);
        gbc.writeMem(0x206c, { 0xcb, 0xb6 });
        gbc.writeMem(0xa363, { 0xba });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9364, gbc.sp());
        EXPECT(0x206e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xa363));
        // CB B6 015A
        gbc.setState(0x3d2a, 0x5251, 0x68b0, 0x4f4d, 0x5ad9, 0xb4df, 0x1, 0x0);
        gbc.writeMem(0x3d2a, { 0xcb, 0xb6 });
        gbc.writeMem(0xb4df, { 0xa2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5251, gbc.sp());
        EXPECT(0x3d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb4df));
        // CB B6 015B
        gbc.setState(0x2f79, 0x5db7, 0x6480, 0xbeb1, 0xa489, 0x99db, 0x1, 0x0);
        gbc.writeMem(0x2f79, { 0xcb, 0xb6 });
        gbc.writeMem(0x99db, { 0x9c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5db7, gbc.sp());
        EXPECT(0x2f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x99db));
        // CB B6 015C
        gbc.setState(0xd9d5, 0x9be4, 0x5300, 0x1fe2, 0xc5ec, 0xd6b8, 0x1, 0x1);
        gbc.writeMem(0xd6b8, { 0x29 });
        gbc.writeMem(0xd9d5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9be4, gbc.sp());
        EXPECT(0xd9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd6b8));
        EXPECT(0xcb, gbc.readMem(0xd9d5));
        EXPECT(0xb6, gbc.readMem(0xd9d6));
        // CB B6 015D
        gbc.setState(0xae9f, 0x7ebc, 0x9d00, 0x5b84, 0xb17c, 0x7085, 0x1, 0x0);
        gbc.writeMem(0x7085, { 0x96 });
        gbc.writeMem(0xae9f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7ebc, gbc.sp());
        EXPECT(0xaea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9f));
        EXPECT(0xb6, gbc.readMem(0xaea0));
        // CB B6 015F
        gbc.setState(0x8af3, 0x289d, 0x9b90, 0x59ae, 0x760b, 0xe950, 0x1, 0x1);
        gbc.writeMem(0x8af3, { 0xcb, 0xb6 });
        gbc.writeMem(0xe950, { 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x289d, gbc.sp());
        EXPECT(0x8af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af3));
        EXPECT(0xb6, gbc.readMem(0x8af4));
        EXPECT(0x2c, gbc.readMem(0xe950));
        // CB B6 0161
        gbc.setState(0x617, 0x1862, 0x690, 0xc616, 0xe160, 0x1922, 0x0, 0x1);
        gbc.writeMem(0x617, { 0xcb, 0xb6 });
        gbc.writeMem(0x1922, { 0x19 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1862, gbc.sp());
        EXPECT(0x619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0163
        gbc.setState(0x8cb2, 0x61d9, 0x50f0, 0xd5f6, 0x5c72, 0x1acf, 0x1, 0x0);
        gbc.writeMem(0x1acf, { 0x89 });
        gbc.writeMem(0x8cb2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x61d9, gbc.sp());
        EXPECT(0x8cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb2));
        EXPECT(0xb6, gbc.readMem(0x8cb3));
        // CB B6 0165
        gbc.setState(0x3699, 0x1632, 0x5ae0, 0x1628, 0x7a1e, 0xe7ec, 0x0, 0x0);
        gbc.writeMem(0x3699, { 0xcb, 0xb6 });
        gbc.writeMem(0xe7ec, { 0x9a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1632, gbc.sp());
        EXPECT(0x369b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe7ec));
        // CB B6 0166
        gbc.setState(0xe265, 0x1725, 0xf420, 0xb6b3, 0xf14d, 0xd3fa, 0x0, 0x0);
        gbc.writeMem(0xd3fa, { 0x2f });
        gbc.writeMem(0xe265, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1725, gbc.sp());
        EXPECT(0xe267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd3fa));
        EXPECT(0xcb, gbc.readMem(0xe265));
        EXPECT(0xb6, gbc.readMem(0xe266));
        // CB B6 0167
        gbc.setState(0xa5c7, 0x613, 0x3ef0, 0xf9c7, 0xdc84, 0x4314, 0x1, 0x1);
        gbc.writeMem(0x4314, { 0x9 });
        gbc.writeMem(0xa5c7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x613, gbc.sp());
        EXPECT(0xa5c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c7));
        EXPECT(0xb6, gbc.readMem(0xa5c8));
        // CB B6 0168
        gbc.setState(0x5a8a, 0x6f6a, 0x2a60, 0xfb4e, 0xd9da, 0x7d74, 0x0, 0x1);
        gbc.writeMem(0x5a8a, { 0xcb, 0xb6 });
        gbc.writeMem(0x7d74, { 0x8e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6f6a, gbc.sp());
        EXPECT(0x5a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0169
        gbc.setState(0x6c23, 0x790e, 0x8a0, 0x693b, 0xc7ac, 0x8c10, 0x0, 0x0);
        gbc.writeMem(0x6c23, { 0xcb, 0xb6 });
        gbc.writeMem(0x8c10, { 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x790e, gbc.sp());
        EXPECT(0x6c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8c10));
        // CB B6 016B
        gbc.setState(0x19e9, 0x5ca, 0xaae0, 0xd1f7, 0xe8c1, 0xea72, 0x0, 0x1);
        gbc.writeMem(0x19e9, { 0xcb, 0xb6 });
        gbc.writeMem(0xea72, { 0xec });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5ca, gbc.sp());
        EXPECT(0x19eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xea72));
        // CB B6 016C
        gbc.setState(0x6bdf, 0xf3cb, 0xbaf0, 0xf0ef, 0x4311, 0x5a72, 0x0, 0x0);
        gbc.writeMem(0x5a72, { 0xac });
        gbc.writeMem(0x6bdf, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf3cb, gbc.sp());
        EXPECT(0x6be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 016D
        gbc.setState(0xe567, 0x4fb4, 0x7070, 0xd47f, 0x646c, 0xa33a, 0x1, 0x1);
        gbc.writeMem(0xa33a, { 0x8b });
        gbc.writeMem(0xe567, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4fb4, gbc.sp());
        EXPECT(0xe569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xa33a));
        EXPECT(0xcb, gbc.readMem(0xe567));
        EXPECT(0xb6, gbc.readMem(0xe568));
        // CB B6 016E
        gbc.setState(0xc839, 0xf0b4, 0x5870, 0x9ef9, 0x5748, 0x818, 0x0, 0x0);
        gbc.writeMem(0x818, { 0xd });
        gbc.writeMem(0xc839, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf0b4, gbc.sp());
        EXPECT(0xc83b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc839));
        EXPECT(0xb6, gbc.readMem(0xc83a));
        // CB B6 016F
        gbc.setState(0x328c, 0x80bd, 0x1980, 0x1349, 0xbedc, 0xde42, 0x0, 0x1);
        gbc.writeMem(0x328c, { 0xcb, 0xb6 });
        gbc.writeMem(0xde42, { 0x8a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x80bd, gbc.sp());
        EXPECT(0x328e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xde42));
        // CB B6 0172
        gbc.setState(0x6b24, 0x887f, 0x4510, 0xf4b7, 0x2c22, 0xfd75, 0x1, 0x1);
        gbc.writeMem(0x6b24, { 0xcb, 0xb6 });
        gbc.writeMem(0xfd75, { 0xad });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x887f, gbc.sp());
        EXPECT(0x6b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xfd75));
        // CB B6 0173
        gbc.setState(0x9adb, 0xf462, 0x9da0, 0xe161, 0xce15, 0x4181, 0x1, 0x0);
        gbc.writeMem(0x4181, { 0x87 });
        gbc.writeMem(0x9adb, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf462, gbc.sp());
        EXPECT(0x9add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9adb));
        EXPECT(0xb6, gbc.readMem(0x9adc));
        // CB B6 0174
        gbc.setState(0x7c8, 0x90b9, 0x62b0, 0xdcd5, 0x52bb, 0x8090, 0x0, 0x0);
        gbc.writeMem(0x7c8, { 0xcb, 0xb6 });
        gbc.writeMem(0x8090, { 0x46 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x90b9, gbc.sp());
        EXPECT(0x7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8090));
        // CB B6 0175
        gbc.setState(0xd8f1, 0xb614, 0x1830, 0xeea2, 0xf72d, 0x3174, 0x0, 0x1);
        gbc.writeMem(0x3174, { 0x8 });
        gbc.writeMem(0xd8f1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb614, gbc.sp());
        EXPECT(0xd8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f1));
        EXPECT(0xb6, gbc.readMem(0xd8f2));
        // CB B6 0176
        gbc.setState(0xb05c, 0xcabb, 0xc960, 0xc3d5, 0x3d06, 0xc43e, 0x0, 0x0);
        gbc.writeMem(0xb05c, { 0xcb, 0xb6 });
        gbc.writeMem(0xc43e, { 0xcf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcabb, gbc.sp());
        EXPECT(0xb05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05c));
        EXPECT(0xb6, gbc.readMem(0xb05d));
        EXPECT(0x8f, gbc.readMem(0xc43e));
        // CB B6 0177
        gbc.setState(0xa6c8, 0xbc97, 0xdce0, 0x6ab3, 0x4b65, 0xd334, 0x1, 0x0);
        gbc.writeMem(0xa6c8, { 0xcb, 0xb6 });
        gbc.writeMem(0xd334, { 0xe0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbc97, gbc.sp());
        EXPECT(0xa6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c8));
        EXPECT(0xb6, gbc.readMem(0xa6c9));
        EXPECT(0xa0, gbc.readMem(0xd334));
        // CB B6 0178
        gbc.setState(0xe562, 0xaa69, 0x2f40, 0x1b40, 0xa99c, 0xaa30, 0x1, 0x1);
        gbc.writeMem(0xaa30, { 0x79 });
        gbc.writeMem(0xe562, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaa69, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xaa30));
        EXPECT(0xcb, gbc.readMem(0xe562));
        EXPECT(0xb6, gbc.readMem(0xe563));
        // CB B6 0179
        gbc.setState(0x3c1a, 0xca5, 0xd8b0, 0x5225, 0xe392, 0xbd03, 0x0, 0x0);
        gbc.writeMem(0x3c1a, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd03, { 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xca5, gbc.sp());
        EXPECT(0x3c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbd03));
        // CB B6 017A
        gbc.setState(0xb304, 0x2c70, 0xa190, 0x5e41, 0xf728, 0x3ae0, 0x0, 0x0);
        gbc.writeMem(0x3ae0, { 0x2 });
        gbc.writeMem(0xb304, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2c70, gbc.sp());
        EXPECT(0xb306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb304));
        EXPECT(0xb6, gbc.readMem(0xb305));
        // CB B6 017C
        gbc.setState(0x661b, 0x353e, 0xc6f0, 0x2b37, 0x5df6, 0xb83, 0x0, 0x0);
        gbc.writeMem(0xb83, { 0xb0 });
        gbc.writeMem(0x661b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x353e, gbc.sp());
        EXPECT(0x661d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 017D
        gbc.setState(0xc2b9, 0xbdd4, 0x7a90, 0x68f0, 0x8520, 0x70df, 0x0, 0x0);
        gbc.writeMem(0x70df, { 0xbf });
        gbc.writeMem(0xc2b9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbdd4, gbc.sp());
        EXPECT(0xc2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b9));
        EXPECT(0xb6, gbc.readMem(0xc2ba));
        // CB B6 0181
        gbc.setState(0xd42d, 0x488d, 0xa5f0, 0x3902, 0x3bb3, 0xf0de, 0x1, 0x1);
        gbc.writeMem(0xd42d, { 0xcb, 0xb6 });
        gbc.writeMem(0xf0de, { 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x488d, gbc.sp());
        EXPECT(0xd42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42d));
        EXPECT(0xb6, gbc.readMem(0xd42e));
        EXPECT(0x36, gbc.readMem(0xf0de));
        // CB B6 0183
        gbc.setState(0x7fc9, 0x169c, 0x36c0, 0xfb67, 0xdecb, 0xfed1, 0x1, 0x1);
        gbc.writeMem(0x7fc9, { 0xcb, 0xb6 });
        gbc.writeMem(0xfed1, { 0x57 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x169c, gbc.sp());
        EXPECT(0x7fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xfed1));
        // CB B6 0184
        gbc.setState(0xdf5b, 0x749d, 0x33d0, 0x7dac, 0x3262, 0xac9a, 0x1, 0x0);
        gbc.writeMem(0xac9a, { 0x95 });
        gbc.writeMem(0xdf5b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x749d, gbc.sp());
        EXPECT(0xdf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xac9a));
        EXPECT(0xcb, gbc.readMem(0xdf5b));
        EXPECT(0xb6, gbc.readMem(0xdf5c));
        // CB B6 0185
        gbc.setState(0x41a8, 0xe1a1, 0x8ef0, 0xbb86, 0x8832, 0x1805, 0x1, 0x1);
        gbc.writeMem(0x1805, { 0xa1 });
        gbc.writeMem(0x41a8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe1a1, gbc.sp());
        EXPECT(0x41aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0187
        gbc.setState(0x8a81, 0xd947, 0x6680, 0x2bd0, 0x9a4b, 0xcd9, 0x1, 0x1);
        gbc.writeMem(0xcd9, { 0x8 });
        gbc.writeMem(0x8a81, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd947, gbc.sp());
        EXPECT(0x8a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a81));
        EXPECT(0xb6, gbc.readMem(0x8a82));
        // CB B6 0188
        gbc.setState(0xbb26, 0x789, 0x3840, 0x68b4, 0x4365, 0xf06f, 0x1, 0x1);
        gbc.writeMem(0xbb26, { 0xcb, 0xb6 });
        gbc.writeMem(0xf06f, { 0x50 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x789, gbc.sp());
        EXPECT(0xbb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb26));
        EXPECT(0xb6, gbc.readMem(0xbb27));
        EXPECT(0x10, gbc.readMem(0xf06f));
        // CB B6 0189
        gbc.setState(0x77e, 0xa3ce, 0xfc30, 0x42c1, 0xe1ae, 0xf02d, 0x0, 0x0);
        gbc.writeMem(0x77e, { 0xcb, 0xb6 });
        gbc.writeMem(0xf02d, { 0x77 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa3ce, gbc.sp());
        EXPECT(0x780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xf02d));
        // CB B6 018A
        gbc.setState(0xa2c3, 0xea52, 0xeb60, 0xd636, 0x8cfe, 0xe3e1, 0x1, 0x0);
        gbc.writeMem(0xa2c3, { 0xcb, 0xb6 });
        gbc.writeMem(0xe3e1, { 0xb8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xea52, gbc.sp());
        EXPECT(0xa2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c3));
        EXPECT(0xb6, gbc.readMem(0xa2c4));
        EXPECT(0xb8, gbc.readMem(0xe3e1));
        // CB B6 018B
        gbc.setState(0x1b35, 0x5625, 0x8de0, 0x71ac, 0xeca6, 0x6893, 0x0, 0x0);
        gbc.writeMem(0x1b35, { 0xcb, 0xb6 });
        gbc.writeMem(0x6893, { 0x21 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0x1b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 018C
        gbc.setState(0x3211, 0x70ad, 0x4c10, 0x182b, 0x9d6c, 0x974e, 0x0, 0x0);
        gbc.writeMem(0x3211, { 0xcb, 0xb6 });
        gbc.writeMem(0x974e, { 0x18 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x70ad, gbc.sp());
        EXPECT(0x3213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x974e));
        // CB B6 018D
        gbc.setState(0xe86a, 0x381, 0x3a0, 0xf20, 0x27f0, 0xda33, 0x1, 0x0);
        gbc.writeMem(0xda33, { 0xfd });
        gbc.writeMem(0xe86a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x381, gbc.sp());
        EXPECT(0xe86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xda33));
        EXPECT(0xcb, gbc.readMem(0xe86a));
        EXPECT(0xb6, gbc.readMem(0xe86b));
        // CB B6 018E
        gbc.setState(0xd006, 0x6ee4, 0x2fc0, 0x10d, 0x6206, 0x4974, 0x1, 0x1);
        gbc.writeMem(0x4974, { 0x39 });
        gbc.writeMem(0xd006, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6ee4, gbc.sp());
        EXPECT(0xd008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd006));
        EXPECT(0xb6, gbc.readMem(0xd007));
        // CB B6 0190
        gbc.setState(0x16b6, 0x45, 0x50c0, 0x2c9a, 0xdcad, 0xfcd2, 0x1, 0x0);
        gbc.writeMem(0x16b6, { 0xcb, 0xb6 });
        gbc.writeMem(0xfcd2, { 0x46 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x45, gbc.sp());
        EXPECT(0x16b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xfcd2));
        // CB B6 0191
        gbc.setState(0xc928, 0xe8ca, 0x74e0, 0x1124, 0xe72b, 0x996, 0x0, 0x1);
        gbc.writeMem(0x996, { 0x3a });
        gbc.writeMem(0xc928, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe8ca, gbc.sp());
        EXPECT(0xc92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc928));
        EXPECT(0xb6, gbc.readMem(0xc929));
        // CB B6 0192
        gbc.setState(0x22be, 0xef6a, 0xd480, 0x5fc0, 0xc75b, 0x9e2b, 0x0, 0x0);
        gbc.writeMem(0x22be, { 0xcb, 0xb6 });
        gbc.writeMem(0x9e2b, { 0x3d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xef6a, gbc.sp());
        EXPECT(0x22c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x9e2b));
        // CB B6 0193
        gbc.setState(0x569f, 0x6cd3, 0x4b50, 0x5fa9, 0xada3, 0xf859, 0x0, 0x1);
        gbc.writeMem(0x569f, { 0xcb, 0xb6 });
        gbc.writeMem(0xf859, { 0xfa });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6cd3, gbc.sp());
        EXPECT(0x56a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xf859));
        // CB B6 0194
        gbc.setState(0x6f95, 0xbe8f, 0xb0c0, 0x2d58, 0x128b, 0xabdd, 0x1, 0x1);
        gbc.writeMem(0x6f95, { 0xcb, 0xb6 });
        gbc.writeMem(0xabdd, { 0xd3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbe8f, gbc.sp());
        EXPECT(0x6f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xabdd));
        // CB B6 0195
        gbc.setState(0x7e8a, 0xa73d, 0xcc20, 0x8671, 0xbc62, 0x624c, 0x0, 0x0);
        gbc.writeMem(0x624c, { 0xaf });
        gbc.writeMem(0x7e8a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa73d, gbc.sp());
        EXPECT(0x7e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0196
        gbc.setState(0xe3b8, 0x2a57, 0x260, 0x6bf, 0xfee1, 0xb0cc, 0x0, 0x1);
        gbc.writeMem(0xb0cc, { 0x2e });
        gbc.writeMem(0xe3b8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2a57, gbc.sp());
        EXPECT(0xe3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb0cc));
        EXPECT(0xcb, gbc.readMem(0xe3b8));
        EXPECT(0xb6, gbc.readMem(0xe3b9));
        // CB B6 0198
        gbc.setState(0xab24, 0xc325, 0x8300, 0xa307, 0xb42c, 0xc85b, 0x0, 0x0);
        gbc.writeMem(0xab24, { 0xcb, 0xb6 });
        gbc.writeMem(0xc85b, { 0xf8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc325, gbc.sp());
        EXPECT(0xab26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab24));
        EXPECT(0xb6, gbc.readMem(0xab25));
        EXPECT(0xb8, gbc.readMem(0xc85b));
        // CB B6 0199
        gbc.setState(0xe1f5, 0x8218, 0x83b0, 0xdf3a, 0xddd9, 0x4f4d, 0x0, 0x0);
        gbc.writeMem(0x4f4d, { 0xa9 });
        gbc.writeMem(0xe1f5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8218, gbc.sp());
        EXPECT(0xe1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f5));
        EXPECT(0xb6, gbc.readMem(0xe1f6));
        // CB B6 019A
        gbc.setState(0x73dc, 0x9f9, 0x3520, 0xe0c0, 0x6e6b, 0x2dfe, 0x0, 0x1);
        gbc.writeMem(0x2dfe, { 0xb8 });
        gbc.writeMem(0x73dc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x73de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 019B
        gbc.setState(0x8f3, 0x5ee7, 0xa560, 0xe5ec, 0x4455, 0xbc8d, 0x1, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0xb6 });
        gbc.writeMem(0xbc8d, { 0x73 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5ee7, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbc8d));
        // CB B6 019D
        gbc.setState(0xbcd0, 0x2a52, 0x6de0, 0x47b9, 0x1cc3, 0x6ae4, 0x0, 0x0);
        gbc.writeMem(0x6ae4, { 0x2f });
        gbc.writeMem(0xbcd0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2a52, gbc.sp());
        EXPECT(0xbcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd0));
        EXPECT(0xb6, gbc.readMem(0xbcd1));
        // CB B6 019E
        gbc.setState(0xc84, 0xc5d6, 0x6d90, 0xec55, 0x7df3, 0xd2b3, 0x1, 0x0);
        gbc.writeMem(0xc84, { 0xcb, 0xb6 });
        gbc.writeMem(0xd2b3, { 0x71 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc5d6, gbc.sp());
        EXPECT(0xc86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd2b3));
        // CB B6 019F
        gbc.setState(0x18d7, 0x789, 0xb0e0, 0x2b0f, 0xc3db, 0x98b, 0x0, 0x1);
        gbc.writeMem(0x98b, { 0x26 });
        gbc.writeMem(0x18d7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x789, gbc.sp());
        EXPECT(0x18d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01A1
        gbc.setState(0xc574, 0x4464, 0x23f0, 0xf868, 0xc12e, 0x9b1a, 0x0, 0x0);
        gbc.writeMem(0x9b1a, { 0xa4 });
        gbc.writeMem(0xc574, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4464, gbc.sp());
        EXPECT(0xc576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9b1a));
        EXPECT(0xcb, gbc.readMem(0xc574));
        EXPECT(0xb6, gbc.readMem(0xc575));
        // CB B6 01A2
        gbc.setState(0x2123, 0xc290, 0x5b60, 0x8d3c, 0xa00a, 0x49f2, 0x0, 0x1);
        gbc.writeMem(0x2123, { 0xcb, 0xb6 });
        gbc.writeMem(0x49f2, { 0xbd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc290, gbc.sp());
        EXPECT(0x2125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01A3
        gbc.setState(0x803d, 0x9510, 0xf890, 0xd7a5, 0xf840, 0x3dbc, 0x0, 0x0);
        gbc.writeMem(0x3dbc, { 0x3 });
        gbc.writeMem(0x803d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9510, gbc.sp());
        EXPECT(0x803f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803d));
        EXPECT(0xb6, gbc.readMem(0x803e));
        // CB B6 01A5
        gbc.setState(0x478, 0x1fc0, 0x7a00, 0xdd0c, 0x28cc, 0xbbe3, 0x0, 0x1);
        gbc.writeMem(0x478, { 0xcb, 0xb6 });
        gbc.writeMem(0xbbe3, { 0x67 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1fc0, gbc.sp());
        EXPECT(0x47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xbbe3));
        // CB B6 01A6
        gbc.setState(0x7e74, 0xea2f, 0x7a60, 0xcb67, 0xe89b, 0x1e57, 0x0, 0x0);
        gbc.writeMem(0x1e57, { 0x27 });
        gbc.writeMem(0x7e74, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xea2f, gbc.sp());
        EXPECT(0x7e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01A7
        gbc.setState(0xa97b, 0x7359, 0x8b20, 0x4135, 0x948b, 0xf76a, 0x1, 0x1);
        gbc.writeMem(0xa97b, { 0xcb, 0xb6 });
        gbc.writeMem(0xf76a, { 0xed });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7359, gbc.sp());
        EXPECT(0xa97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97b));
        EXPECT(0xb6, gbc.readMem(0xa97c));
        EXPECT(0xad, gbc.readMem(0xf76a));
        // CB B6 01AA
        gbc.setState(0xded9, 0x9966, 0x8ac0, 0x52ff, 0xa121, 0xb4a6, 0x0, 0x0);
        gbc.writeMem(0xb4a6, { 0xe0 });
        gbc.writeMem(0xded9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9966, gbc.sp());
        EXPECT(0xdedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb4a6));
        EXPECT(0xcb, gbc.readMem(0xded9));
        EXPECT(0xb6, gbc.readMem(0xdeda));
        // CB B6 01AB
        gbc.setState(0xbb16, 0x31ac, 0x8df0, 0x34aa, 0x1035, 0x2744, 0x0, 0x0);
        gbc.writeMem(0x2744, { 0xa4 });
        gbc.writeMem(0xbb16, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x31ac, gbc.sp());
        EXPECT(0xbb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb16));
        EXPECT(0xb6, gbc.readMem(0xbb17));
        // CB B6 01AD
        gbc.setState(0x4ec2, 0xf50f, 0x6f50, 0x33d7, 0x670e, 0x4b7f, 0x0, 0x0);
        gbc.writeMem(0x4b7f, { 0xc });
        gbc.writeMem(0x4ec2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf50f, gbc.sp());
        EXPECT(0x4ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 01AE
        gbc.setState(0x3c07, 0xac9c, 0xe120, 0x54c8, 0x336a, 0x7a02, 0x1, 0x1);
        gbc.writeMem(0x3c07, { 0xcb, 0xb6 });
        gbc.writeMem(0x7a02, { 0x9e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0x3c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01AF
        gbc.setState(0x5e9c, 0x1eb8, 0xfc70, 0x13fb, 0x2722, 0xee84, 0x1, 0x1);
        gbc.writeMem(0x5e9c, { 0xcb, 0xb6 });
        gbc.writeMem(0xee84, { 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1eb8, gbc.sp());
        EXPECT(0x5e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xee84));
        // CB B6 01B0
        gbc.setState(0x5c8a, 0x6f77, 0x7660, 0x301, 0x377f, 0x53ba, 0x1, 0x0);
        gbc.writeMem(0x53ba, { 0x3d });
        gbc.writeMem(0x5c8a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6f77, gbc.sp());
        EXPECT(0x5c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01B1
        gbc.setState(0x3d9b, 0xf250, 0xe500, 0xe591, 0x2c98, 0xcb06, 0x0, 0x0);
        gbc.writeMem(0x3d9b, { 0xcb, 0xb6 });
        gbc.writeMem(0xcb06, { 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf250, gbc.sp());
        EXPECT(0x3d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xcb06));
        // CB B6 01B2
        gbc.setState(0xb66f, 0x9b3a, 0xa360, 0xb1de, 0xc152, 0xd3db, 0x1, 0x0);
        gbc.writeMem(0xb66f, { 0xcb, 0xb6 });
        gbc.writeMem(0xd3db, { 0xd8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9b3a, gbc.sp());
        EXPECT(0xb671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb66f));
        EXPECT(0xb6, gbc.readMem(0xb670));
        EXPECT(0x98, gbc.readMem(0xd3db));
        // CB B6 01B4
        gbc.setState(0x8eb1, 0x2c4c, 0xef50, 0x28df, 0x26a, 0x3c68, 0x1, 0x0);
        gbc.writeMem(0x3c68, { 0xbb });
        gbc.writeMem(0x8eb1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0x8eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb1));
        EXPECT(0xb6, gbc.readMem(0x8eb2));
        // CB B6 01B5
        gbc.setState(0xe6b6, 0x544f, 0xd6e0, 0x6a14, 0x791f, 0xf795, 0x1, 0x0);
        gbc.writeMem(0xe6b6, { 0xcb, 0xb6 });
        gbc.writeMem(0xf795, { 0x66 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x544f, gbc.sp());
        EXPECT(0xe6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b6));
        EXPECT(0xb6, gbc.readMem(0xe6b7));
        EXPECT(0x26, gbc.readMem(0xf795));
        // CB B6 01B7
        gbc.setState(0xcba, 0xa21, 0x1fa0, 0xfaeb, 0xb53f, 0x4169, 0x0, 0x1);
        gbc.writeMem(0xcba, { 0xcb, 0xb6 });
        gbc.writeMem(0x4169, { 0xa1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa21, gbc.sp());
        EXPECT(0xcbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01B9
        gbc.setState(0xc111, 0x2772, 0x5f20, 0xb250, 0x3bff, 0x997c, 0x1, 0x0);
        gbc.writeMem(0x997c, { 0x1b });
        gbc.writeMem(0xc111, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2772, gbc.sp());
        EXPECT(0xc113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x997c));
        EXPECT(0xcb, gbc.readMem(0xc111));
        EXPECT(0xb6, gbc.readMem(0xc112));
        // CB B6 01BC
        gbc.setState(0x3321, 0xac3, 0x8540, 0xf55f, 0xeca6, 0x8298, 0x1, 0x0);
        gbc.writeMem(0x3321, { 0xcb, 0xb6 });
        gbc.writeMem(0x8298, { 0x45 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xac3, gbc.sp());
        EXPECT(0x3323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8298));
        // CB B6 01BD
        gbc.setState(0xc954, 0x5b16, 0xdfa0, 0x1ce, 0xcdb1, 0xaa5b, 0x1, 0x0);
        gbc.writeMem(0xaa5b, { 0xa0 });
        gbc.writeMem(0xc954, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5b16, gbc.sp());
        EXPECT(0xc956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaa5b));
        EXPECT(0xcb, gbc.readMem(0xc954));
        EXPECT(0xb6, gbc.readMem(0xc955));
        // CB B6 01C0
        gbc.setState(0x442a, 0x8214, 0xc5d0, 0xcde4, 0xdcb, 0x99aa, 0x0, 0x1);
        gbc.writeMem(0x442a, { 0xcb, 0xb6 });
        gbc.writeMem(0x99aa, { 0x3d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8214, gbc.sp());
        EXPECT(0x442c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x99aa));
        // CB B6 01C2
        gbc.setState(0x1e7f, 0x7431, 0x1b20, 0x4ff5, 0xf9e3, 0xa471, 0x0, 0x1);
        gbc.writeMem(0x1e7f, { 0xcb, 0xb6 });
        gbc.writeMem(0xa471, { 0x21 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7431, gbc.sp());
        EXPECT(0x1e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa471));
        // CB B6 01C3
        gbc.setState(0xacb1, 0x8968, 0x8a00, 0xa732, 0x1e68, 0x2111, 0x0, 0x0);
        gbc.writeMem(0x2111, { 0x18 });
        gbc.writeMem(0xacb1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8968, gbc.sp());
        EXPECT(0xacb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb1));
        EXPECT(0xb6, gbc.readMem(0xacb2));
        // CB B6 01C4
        gbc.setState(0xa453, 0x20ca, 0xd660, 0xe775, 0x3c13, 0xd893, 0x1, 0x0);
        gbc.writeMem(0xa453, { 0xcb, 0xb6 });
        gbc.writeMem(0xd893, { 0x5e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x20ca, gbc.sp());
        EXPECT(0xa455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa453));
        EXPECT(0xb6, gbc.readMem(0xa454));
        EXPECT(0x1e, gbc.readMem(0xd893));
        // CB B6 01C5
        gbc.setState(0x5c38, 0xf535, 0x1130, 0x500c, 0xa00d, 0xe42f, 0x1, 0x1);
        gbc.writeMem(0x5c38, { 0xcb, 0xb6 });
        gbc.writeMem(0xe42f, { 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf535, gbc.sp());
        EXPECT(0x5c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe42f));
        // CB B6 01C6
        gbc.setState(0xe580, 0x8354, 0xd1d0, 0x820e, 0xd605, 0x3db9, 0x1, 0x0);
        gbc.writeMem(0x3db9, { 0xb5 });
        gbc.writeMem(0xe580, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8354, gbc.sp());
        EXPECT(0xe582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe580));
        EXPECT(0xb6, gbc.readMem(0xe581));
        // CB B6 01C8
        gbc.setState(0xdcb1, 0x1d02, 0x4840, 0xb1ef, 0xaa2f, 0x12a7, 0x1, 0x0);
        gbc.writeMem(0x12a7, { 0x84 });
        gbc.writeMem(0xdcb1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1d02, gbc.sp());
        EXPECT(0xdcb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb1));
        EXPECT(0xb6, gbc.readMem(0xdcb2));
        // CB B6 01CC
        gbc.setState(0x68d2, 0xbb77, 0x38a0, 0xa22e, 0x1155, 0x37fa, 0x0, 0x1);
        gbc.writeMem(0x37fa, { 0xad });
        gbc.writeMem(0x68d2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbb77, gbc.sp());
        EXPECT(0x68d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01CD
        gbc.setState(0x360e, 0xede3, 0x8c30, 0xe832, 0x6742, 0xfc0d, 0x1, 0x1);
        gbc.writeMem(0x360e, { 0xcb, 0xb6 });
        gbc.writeMem(0xfc0d, { 0xee });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xede3, gbc.sp());
        EXPECT(0x3610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xfc0d));
        // CB B6 01CF
        gbc.setState(0xc4f8, 0x4f96, 0x7bd0, 0x408e, 0xe45e, 0xd74c, 0x1, 0x1);
        gbc.writeMem(0xc4f8, { 0xcb, 0xb6 });
        gbc.writeMem(0xd74c, { 0xa7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4f96, gbc.sp());
        EXPECT(0xc4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f8));
        EXPECT(0xb6, gbc.readMem(0xc4f9));
        EXPECT(0xa7, gbc.readMem(0xd74c));
        // CB B6 01D0
        gbc.setState(0xcecc, 0x6d71, 0x2fd0, 0x92dc, 0xdda0, 0xbc9d, 0x1, 0x1);
        gbc.writeMem(0xbc9d, { 0x8 });
        gbc.writeMem(0xcecc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6d71, gbc.sp());
        EXPECT(0xcece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xbc9d));
        EXPECT(0xcb, gbc.readMem(0xcecc));
        EXPECT(0xb6, gbc.readMem(0xcecd));
        // CB B6 01D1
        gbc.setState(0xddab, 0x8703, 0xcb90, 0x87b5, 0x16a0, 0xe6c1, 0x1, 0x1);
        gbc.writeMem(0xddab, { 0xcb, 0xb6 });
        gbc.writeMem(0xe6c1, { 0x74 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0xddad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddab));
        EXPECT(0xb6, gbc.readMem(0xddac));
        EXPECT(0x34, gbc.readMem(0xe6c1));
        // CB B6 01D2
        gbc.setState(0xb8e5, 0xeb7, 0xd180, 0x9b78, 0x754, 0x55c0, 0x1, 0x0);
        gbc.writeMem(0x55c0, { 0x86 });
        gbc.writeMem(0xb8e5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xeb7, gbc.sp());
        EXPECT(0xb8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e5));
        EXPECT(0xb6, gbc.readMem(0xb8e6));
        // CB B6 01D3
        gbc.setState(0xda8d, 0x246, 0x70f0, 0xfc7e, 0xe21c, 0x5933, 0x0, 0x1);
        gbc.writeMem(0x5933, { 0x16 });
        gbc.writeMem(0xda8d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x246, gbc.sp());
        EXPECT(0xda8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8d));
        EXPECT(0xb6, gbc.readMem(0xda8e));
        // CB B6 01D4
        gbc.setState(0xbe11, 0x8581, 0x94a0, 0x15ac, 0x6f8c, 0xa6f8, 0x1, 0x0);
        gbc.writeMem(0xa6f8, { 0x9f });
        gbc.writeMem(0xbe11, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8581, gbc.sp());
        EXPECT(0xbe13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa6f8));
        EXPECT(0xcb, gbc.readMem(0xbe11));
        EXPECT(0xb6, gbc.readMem(0xbe12));
        // CB B6 01D5
        gbc.setState(0xc3a6, 0xbc2d, 0xb820, 0x3ee1, 0xf9d5, 0x7229, 0x1, 0x1);
        gbc.writeMem(0x7229, { 0x8 });
        gbc.writeMem(0xc3a6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbc2d, gbc.sp());
        EXPECT(0xc3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a6));
        EXPECT(0xb6, gbc.readMem(0xc3a7));
        // CB B6 01D6
        gbc.setState(0xb333, 0x8775, 0xe7e0, 0xf49d, 0x168e, 0xcea8, 0x0, 0x0);
        gbc.writeMem(0xb333, { 0xcb, 0xb6 });
        gbc.writeMem(0xcea8, { 0xb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8775, gbc.sp());
        EXPECT(0xb335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb333));
        EXPECT(0xb6, gbc.readMem(0xb334));
        EXPECT(0xb, gbc.readMem(0xcea8));
        // CB B6 01D7
        gbc.setState(0x69b8, 0x95fc, 0x21e0, 0x4491, 0x6b52, 0x9dab, 0x1, 0x0);
        gbc.writeMem(0x69b8, { 0xcb, 0xb6 });
        gbc.writeMem(0x9dab, { 0xce });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x95fc, gbc.sp());
        EXPECT(0x69ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x9dab));
        // CB B6 01D8
        gbc.setState(0xdf5e, 0x76fa, 0xdb50, 0xe40f, 0x8ec6, 0xdccd, 0x1, 0x1);
        gbc.writeMem(0xdccd, { 0x36 });
        gbc.writeMem(0xdf5e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x76fa, gbc.sp());
        EXPECT(0xdf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xdccd));
        EXPECT(0xcb, gbc.readMem(0xdf5e));
        EXPECT(0xb6, gbc.readMem(0xdf5f));
        // CB B6 01DA
        gbc.setState(0xd4a4, 0x922a, 0x98a0, 0x2eb1, 0xfc34, 0x2d28, 0x1, 0x0);
        gbc.writeMem(0x2d28, { 0x91 });
        gbc.writeMem(0xd4a4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x922a, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a4));
        EXPECT(0xb6, gbc.readMem(0xd4a5));
        // CB B6 01DB
        gbc.setState(0x9e9e, 0x788d, 0xfbd0, 0x762a, 0x4f86, 0xf040, 0x1, 0x0);
        gbc.writeMem(0x9e9e, { 0xcb, 0xb6 });
        gbc.writeMem(0xf040, { 0x34 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x788d, gbc.sp());
        EXPECT(0x9ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9e));
        EXPECT(0xb6, gbc.readMem(0x9e9f));
        EXPECT(0x34, gbc.readMem(0xf040));
        // CB B6 01DC
        gbc.setState(0x1a52, 0x8ec5, 0x5fc0, 0x245c, 0x1a2, 0xb823, 0x1, 0x1);
        gbc.writeMem(0x1a52, { 0xcb, 0xb6 });
        gbc.writeMem(0xb823, { 0x38 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8ec5, gbc.sp());
        EXPECT(0x1a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb823));
        // CB B6 01DD
        gbc.setState(0x36e0, 0x9ad4, 0x3ca0, 0xd2fd, 0xe016, 0x4dcd, 0x0, 0x1);
        gbc.writeMem(0x36e0, { 0xcb, 0xb6 });
        gbc.writeMem(0x4dcd, { 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x36e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01DF
        gbc.setState(0xbd22, 0xe927, 0xf3d0, 0xd600, 0xac5d, 0x8534, 0x0, 0x0);
        gbc.writeMem(0x8534, { 0x38 });
        gbc.writeMem(0xbd22, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe927, gbc.sp());
        EXPECT(0xbd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8534));
        EXPECT(0xcb, gbc.readMem(0xbd22));
        EXPECT(0xb6, gbc.readMem(0xbd23));
        // CB B6 01E0
        gbc.setState(0x27ea, 0x9b9, 0xa620, 0x25c4, 0xd671, 0xa30, 0x0, 0x0);
        gbc.writeMem(0xa30, { 0x4 });
        gbc.writeMem(0x27ea, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9b9, gbc.sp());
        EXPECT(0x27ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01E1
        gbc.setState(0x97c2, 0x6853, 0xe7a0, 0x6988, 0xb441, 0x25eb, 0x1, 0x1);
        gbc.writeMem(0x25eb, { 0x98 });
        gbc.writeMem(0x97c2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6853, gbc.sp());
        EXPECT(0x97c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c2));
        EXPECT(0xb6, gbc.readMem(0x97c3));
        // CB B6 01E2
        gbc.setState(0x13ae, 0xbff2, 0x4820, 0xb089, 0x3ef2, 0x5585, 0x1, 0x0);
        gbc.writeMem(0x13ae, { 0xcb, 0xb6 });
        gbc.writeMem(0x5585, { 0x8a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbff2, gbc.sp());
        EXPECT(0x13b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01E5
        gbc.setState(0xad57, 0x4236, 0x6360, 0xdf1e, 0x303, 0x8083, 0x1, 0x0);
        gbc.writeMem(0x8083, { 0xb5 });
        gbc.writeMem(0xad57, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4236, gbc.sp());
        EXPECT(0xad59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8083));
        EXPECT(0xcb, gbc.readMem(0xad57));
        EXPECT(0xb6, gbc.readMem(0xad58));
        // CB B6 01E6
        gbc.setState(0x4559, 0x7379, 0x6bd0, 0xc71c, 0xd3b9, 0xdd19, 0x0, 0x1);
        gbc.writeMem(0x4559, { 0xcb, 0xb6 });
        gbc.writeMem(0xdd19, { 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7379, gbc.sp());
        EXPECT(0x455b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xdd19));
        // CB B6 01E7
        gbc.setState(0xac84, 0x80b, 0xff30, 0xb447, 0x1a48, 0x3a9f, 0x1, 0x0);
        gbc.writeMem(0x3a9f, { 0x3f });
        gbc.writeMem(0xac84, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x80b, gbc.sp());
        EXPECT(0xac86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac84));
        EXPECT(0xb6, gbc.readMem(0xac85));
        // CB B6 01E8
        gbc.setState(0x9f7b, 0xf3db, 0xb890, 0x228a, 0xc32c, 0x9f4b, 0x0, 0x0);
        gbc.writeMem(0x9f4b, { 0x4 });
        gbc.writeMem(0x9f7b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf3db, gbc.sp());
        EXPECT(0x9f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9f4b));
        EXPECT(0xcb, gbc.readMem(0x9f7b));
        EXPECT(0xb6, gbc.readMem(0x9f7c));
        // CB B6 01E9
        gbc.setState(0x3294, 0x2b20, 0xe1f0, 0xefdd, 0x76f5, 0xd752, 0x0, 0x0);
        gbc.writeMem(0x3294, { 0xcb, 0xb6 });
        gbc.writeMem(0xd752, { 0x9e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2b20, gbc.sp());
        EXPECT(0x3296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd752));
        // CB B6 01EA
        gbc.setState(0x4641, 0x47ee, 0xc720, 0xf60f, 0x56fc, 0x89a3, 0x1, 0x1);
        gbc.writeMem(0x4641, { 0xcb, 0xb6 });
        gbc.writeMem(0x89a3, { 0x8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x47ee, gbc.sp());
        EXPECT(0x4643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x89a3));
        // CB B6 01EB
        gbc.setState(0xdb91, 0x626d, 0x5ba0, 0x18a5, 0x1b5b, 0xe0b8, 0x0, 0x1);
        gbc.writeMem(0xdb91, { 0xcb, 0xb6 });
        gbc.writeMem(0xe0b8, { 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x626d, gbc.sp());
        EXPECT(0xdb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb91));
        EXPECT(0xb6, gbc.readMem(0xdb92));
        EXPECT(0xa9, gbc.readMem(0xe0b8));
        // CB B6 01EF
        gbc.setState(0x429e, 0x88a9, 0xe0, 0x392b, 0x7df0, 0xa2b6, 0x1, 0x0);
        gbc.writeMem(0x429e, { 0xcb, 0xb6 });
        gbc.writeMem(0xa2b6, { 0x7f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x88a9, gbc.sp());
        EXPECT(0x42a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa2b6));
        // CB B6 01F0
        gbc.setState(0x2f6c, 0xa7a7, 0xac30, 0xe347, 0x692e, 0xe84e, 0x0, 0x1);
        gbc.writeMem(0x2f6c, { 0xcb, 0xb6 });
        gbc.writeMem(0xe84e, { 0xd4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa7a7, gbc.sp());
        EXPECT(0x2f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe84e));
        // CB B6 01F1
        gbc.setState(0x4e1d, 0x4559, 0x9930, 0x2401, 0xf408, 0x385f, 0x0, 0x1);
        gbc.writeMem(0x385f, { 0x20 });
        gbc.writeMem(0x4e1d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4559, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 01F2
        gbc.setState(0xa9d4, 0x9617, 0xb2c0, 0xe744, 0x48d, 0xe1c2, 0x1, 0x1);
        gbc.writeMem(0xa9d4, { 0xcb, 0xb6 });
        gbc.writeMem(0xe1c2, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9617, gbc.sp());
        EXPECT(0xa9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d4));
        EXPECT(0xb6, gbc.readMem(0xa9d5));
        EXPECT(0xb2, gbc.readMem(0xe1c2));
        // CB B6 01F3
        gbc.setState(0x8430, 0xf2ba, 0x670, 0xda0b, 0xe6ef, 0xa25d, 0x1, 0x1);
        gbc.writeMem(0x8430, { 0xcb, 0xb6 });
        gbc.writeMem(0xa25d, { 0x96 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf2ba, gbc.sp());
        EXPECT(0x8432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8430));
        EXPECT(0xb6, gbc.readMem(0x8431));
        EXPECT(0x96, gbc.readMem(0xa25d));
        // CB B6 01F4
        gbc.setState(0x9d24, 0x2494, 0x2670, 0xe995, 0x5e30, 0x9793, 0x1, 0x1);
        gbc.writeMem(0x9793, { 0x39 });
        gbc.writeMem(0x9d24, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2494, gbc.sp());
        EXPECT(0x9d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x9793));
        EXPECT(0xcb, gbc.readMem(0x9d24));
        EXPECT(0xb6, gbc.readMem(0x9d25));
        // CB B6 01F5
        gbc.setState(0x1d88, 0x43c3, 0xc240, 0x63be, 0x2ab8, 0x1b89, 0x1, 0x1);
        gbc.writeMem(0x1b89, { 0xb });
        gbc.writeMem(0x1d88, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x43c3, gbc.sp());
        EXPECT(0x1d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01F6
        gbc.setState(0x54c8, 0xb6d0, 0xeb80, 0xd2e, 0xe429, 0xc426, 0x1, 0x0);
        gbc.writeMem(0x54c8, { 0xcb, 0xb6 });
        gbc.writeMem(0xc426, { 0x3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb6d0, gbc.sp());
        EXPECT(0x54ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc426));
        // CB B6 01F7
        gbc.setState(0xe798, 0xd4d0, 0xd4d0, 0x437, 0x782, 0x1e73, 0x0, 0x0);
        gbc.writeMem(0x1e73, { 0x3 });
        gbc.writeMem(0xe798, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd4d0, gbc.sp());
        EXPECT(0xe79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe798));
        EXPECT(0xb6, gbc.readMem(0xe799));
        // CB B6 01F8
        gbc.setState(0xd1b3, 0x76d4, 0xb040, 0x8e25, 0xa5b2, 0xbc1b, 0x0, 0x0);
        gbc.writeMem(0xbc1b, { 0xfa });
        gbc.writeMem(0xd1b3, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x76d4, gbc.sp());
        EXPECT(0xd1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xbc1b));
        EXPECT(0xcb, gbc.readMem(0xd1b3));
        EXPECT(0xb6, gbc.readMem(0xd1b4));
        // CB B6 01F9
        gbc.setState(0xb1d1, 0xaf78, 0x130, 0xe37e, 0x96ab, 0x929b, 0x0, 0x0);
        gbc.writeMem(0x929b, { 0xe8 });
        gbc.writeMem(0xb1d1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaf78, gbc.sp());
        EXPECT(0xb1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x929b));
        EXPECT(0xcb, gbc.readMem(0xb1d1));
        EXPECT(0xb6, gbc.readMem(0xb1d2));
        // CB B6 01FA
        gbc.setState(0x2739, 0x2e95, 0x2240, 0x5b72, 0xcb7c, 0x3de9, 0x0, 0x1);
        gbc.writeMem(0x2739, { 0xcb, 0xb6 });
        gbc.writeMem(0x3de9, { 0xb5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2e95, gbc.sp());
        EXPECT(0x273b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01FB
        gbc.setState(0x30b9, 0x9129, 0x28b0, 0x6363, 0x5a67, 0xf519, 0x1, 0x0);
        gbc.writeMem(0x30b9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf519, { 0xbb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9129, gbc.sp());
        EXPECT(0x30bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xf519));
        // CB B6 01FC
        gbc.setState(0x61c5, 0xf5ad, 0x8680, 0xef94, 0x2b44, 0x7969, 0x1, 0x1);
        gbc.writeMem(0x61c5, { 0xcb, 0xb6 });
        gbc.writeMem(0x7969, { 0x22 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf5ad, gbc.sp());
        EXPECT(0x61c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 01FD
        gbc.setState(0x86fd, 0x5817, 0xb6b0, 0x4ef2, 0xbf85, 0xda86, 0x0, 0x1);
        gbc.writeMem(0x86fd, { 0xcb, 0xb6 });
        gbc.writeMem(0xda86, { 0x77 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5817, gbc.sp());
        EXPECT(0x86ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fd));
        EXPECT(0xb6, gbc.readMem(0x86fe));
        EXPECT(0x37, gbc.readMem(0xda86));
        // CB B6 01FE
        gbc.setState(0x59c8, 0x234f, 0x64f0, 0xd039, 0xc820, 0x1842, 0x1, 0x1);
        gbc.writeMem(0x1842, { 0xb0 });
        gbc.writeMem(0x59c8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x234f, gbc.sp());
        EXPECT(0x59ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 01FF
        gbc.setState(0x3a33, 0x674, 0x70f0, 0x61a3, 0xb947, 0xf744, 0x1, 0x0);
        gbc.writeMem(0x3a33, { 0xcb, 0xb6 });
        gbc.writeMem(0xf744, { 0xe4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x674, gbc.sp());
        EXPECT(0x3a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xf744));
        // CB B6 0200
        gbc.setState(0x7f60, 0x3bef, 0xafa0, 0xd632, 0xafc, 0x6c8a, 0x0, 0x0);
        gbc.writeMem(0x6c8a, { 0x89 });
        gbc.writeMem(0x7f60, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3bef, gbc.sp());
        EXPECT(0x7f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0201
        gbc.setState(0xeb45, 0x3f94, 0x1f80, 0x1d46, 0x64b3, 0x4ef2, 0x0, 0x1);
        gbc.writeMem(0x4ef2, { 0x10 });
        gbc.writeMem(0xeb45, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3f94, gbc.sp());
        EXPECT(0xeb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb45));
        EXPECT(0xb6, gbc.readMem(0xeb46));
        // CB B6 0202
        gbc.setState(0x2b2d, 0x2249, 0xa9a0, 0x266d, 0x681c, 0x74da, 0x1, 0x1);
        gbc.writeMem(0x2b2d, { 0xcb, 0xb6 });
        gbc.writeMem(0x74da, { 0x9d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2249, gbc.sp());
        EXPECT(0x2b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0203
        gbc.setState(0x7c4c, 0xb324, 0x4100, 0x2c68, 0x6b05, 0x8531, 0x0, 0x0);
        gbc.writeMem(0x7c4c, { 0xcb, 0xb6 });
        gbc.writeMem(0x8531, { 0x22 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb324, gbc.sp());
        EXPECT(0x7c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8531));
        // CB B6 0205
        gbc.setState(0x6bbd, 0x393, 0xfce0, 0xcb50, 0x3864, 0xebc, 0x1, 0x1);
        gbc.writeMem(0xebc, { 0x6 });
        gbc.writeMem(0x6bbd, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x393, gbc.sp());
        EXPECT(0x6bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0206
        gbc.setState(0x89e9, 0xe7a5, 0xca80, 0xbb47, 0x8f0f, 0xf4c6, 0x1, 0x1);
        gbc.writeMem(0x89e9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf4c6, { 0x7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe7a5, gbc.sp());
        EXPECT(0x89eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e9));
        EXPECT(0xb6, gbc.readMem(0x89ea));
        EXPECT(0x7, gbc.readMem(0xf4c6));
        // CB B6 020A
        gbc.setState(0xd0e5, 0x3b77, 0x7850, 0xd8d9, 0xa3b6, 0x8eac, 0x1, 0x0);
        gbc.writeMem(0x8eac, { 0xcc });
        gbc.writeMem(0xd0e5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3b77, gbc.sp());
        EXPECT(0xd0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8eac));
        EXPECT(0xcb, gbc.readMem(0xd0e5));
        EXPECT(0xb6, gbc.readMem(0xd0e6));
        // CB B6 020B
        gbc.setState(0xe54b, 0x3e35, 0x78e0, 0x23b2, 0xd999, 0xf46f, 0x0, 0x1);
        gbc.writeMem(0xe54b, { 0xcb, 0xb6 });
        gbc.writeMem(0xf46f, { 0xb4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3e35, gbc.sp());
        EXPECT(0xe54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54b));
        EXPECT(0xb6, gbc.readMem(0xe54c));
        EXPECT(0xb4, gbc.readMem(0xf46f));
        // CB B6 020C
        gbc.setState(0x7cfb, 0x4dea, 0x4320, 0x59fd, 0x4b5c, 0xfe3, 0x0, 0x1);
        gbc.writeMem(0xfe3, { 0xbe });
        gbc.writeMem(0x7cfb, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4dea, gbc.sp());
        EXPECT(0x7cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 020D
        gbc.setState(0xe260, 0x32c6, 0x9070, 0x35b8, 0x9b97, 0x9e15, 0x1, 0x0);
        gbc.writeMem(0x9e15, { 0x60 });
        gbc.writeMem(0xe260, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x32c6, gbc.sp());
        EXPECT(0xe262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9e15));
        EXPECT(0xcb, gbc.readMem(0xe260));
        EXPECT(0xb6, gbc.readMem(0xe261));
        // CB B6 020E
        gbc.setState(0x689c, 0x3483, 0x4240, 0x4ad5, 0xc106, 0x9007, 0x1, 0x0);
        gbc.writeMem(0x689c, { 0xcb, 0xb6 });
        gbc.writeMem(0x9007, { 0xc0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3483, gbc.sp());
        EXPECT(0x689e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9007));
        // CB B6 020F
        gbc.setState(0x79da, 0xbd11, 0xc6f0, 0xcc10, 0xf7da, 0x6d13, 0x1, 0x1);
        gbc.writeMem(0x6d13, { 0x8d });
        gbc.writeMem(0x79da, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbd11, gbc.sp());
        EXPECT(0x79dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0210
        gbc.setState(0xbfcf, 0x20f6, 0x9090, 0xd3e3, 0x35f3, 0xcf1d, 0x0, 0x0);
        gbc.writeMem(0xbfcf, { 0xcb, 0xb6 });
        gbc.writeMem(0xcf1d, { 0x7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x20f6, gbc.sp());
        EXPECT(0xbfd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcf));
        EXPECT(0xb6, gbc.readMem(0xbfd0));
        EXPECT(0x7, gbc.readMem(0xcf1d));
        // CB B6 0211
        gbc.setState(0x9484, 0x43c8, 0x5d0, 0x55d6, 0x8ba5, 0xd236, 0x0, 0x1);
        gbc.writeMem(0x9484, { 0xcb, 0xb6 });
        gbc.writeMem(0xd236, { 0x46 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x43c8, gbc.sp());
        EXPECT(0x9486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9484));
        EXPECT(0xb6, gbc.readMem(0x9485));
        EXPECT(0x6, gbc.readMem(0xd236));
        // CB B6 0213
        gbc.setState(0x9595, 0x59c6, 0x12b0, 0x6fe0, 0x56ab, 0x8034, 0x1, 0x0);
        gbc.writeMem(0x8034, { 0x44 });
        gbc.writeMem(0x9595, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x59c6, gbc.sp());
        EXPECT(0x9597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8034));
        EXPECT(0xcb, gbc.readMem(0x9595));
        EXPECT(0xb6, gbc.readMem(0x9596));
        // CB B6 0214
        gbc.setState(0xe857, 0x895c, 0xa910, 0x9a86, 0xd67b, 0x5bc6, 0x1, 0x0);
        gbc.writeMem(0x5bc6, { 0x5 });
        gbc.writeMem(0xe857, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x895c, gbc.sp());
        EXPECT(0xe859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe857));
        EXPECT(0xb6, gbc.readMem(0xe858));
        // CB B6 0215
        gbc.setState(0xc305, 0xa302, 0x1270, 0x1d27, 0xa25a, 0x83ff, 0x1, 0x1);
        gbc.writeMem(0x83ff, { 0x2a });
        gbc.writeMem(0xc305, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa302, gbc.sp());
        EXPECT(0xc307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x83ff));
        EXPECT(0xcb, gbc.readMem(0xc305));
        EXPECT(0xb6, gbc.readMem(0xc306));
        // CB B6 0216
        gbc.setState(0x9ddf, 0x1ea1, 0x6220, 0xbb28, 0xe9d0, 0x2c6e, 0x0, 0x0);
        gbc.writeMem(0x2c6e, { 0x12 });
        gbc.writeMem(0x9ddf, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1ea1, gbc.sp());
        EXPECT(0x9de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ddf));
        EXPECT(0xb6, gbc.readMem(0x9de0));
        // CB B6 0217
        gbc.setState(0x33fa, 0x2a4c, 0xb450, 0x6ca1, 0x489, 0xf286, 0x0, 0x0);
        gbc.writeMem(0x33fa, { 0xcb, 0xb6 });
        gbc.writeMem(0xf286, { 0xd4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2a4c, gbc.sp());
        EXPECT(0x33fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xf286));
        // CB B6 0218
        gbc.setState(0x895d, 0xc041, 0xf370, 0x3456, 0xaf55, 0xabab, 0x1, 0x0);
        gbc.writeMem(0x895d, { 0xcb, 0xb6 });
        gbc.writeMem(0xabab, { 0x98 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc041, gbc.sp());
        EXPECT(0x895f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895d));
        EXPECT(0xb6, gbc.readMem(0x895e));
        EXPECT(0x98, gbc.readMem(0xabab));
        // CB B6 021B
        gbc.setState(0xd08a, 0xdd31, 0xb250, 0xb336, 0x5fa6, 0x2b84, 0x0, 0x1);
        gbc.writeMem(0x2b84, { 0x3f });
        gbc.writeMem(0xd08a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdd31, gbc.sp());
        EXPECT(0xd08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08a));
        EXPECT(0xb6, gbc.readMem(0xd08b));
        // CB B6 021C
        gbc.setState(0x21ff, 0xdbb4, 0x3720, 0x3d12, 0xd1f5, 0x1779, 0x0, 0x0);
        gbc.writeMem(0x1779, { 0x15 });
        gbc.writeMem(0x21ff, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdbb4, gbc.sp());
        EXPECT(0x2201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 021E
        gbc.setState(0xa778, 0xdbb2, 0xc080, 0x7456, 0x77ec, 0xd3bd, 0x0, 0x1);
        gbc.writeMem(0xa778, { 0xcb, 0xb6 });
        gbc.writeMem(0xd3bd, { 0x16 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdbb2, gbc.sp());
        EXPECT(0xa77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa778));
        EXPECT(0xb6, gbc.readMem(0xa779));
        EXPECT(0x16, gbc.readMem(0xd3bd));
        // CB B6 021F
        gbc.setState(0x3d1, 0x7fb3, 0x5330, 0x709f, 0xd535, 0xa405, 0x1, 0x1);
        gbc.writeMem(0x3d1, { 0xcb, 0xb6 });
        gbc.writeMem(0xa405, { 0x56 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7fb3, gbc.sp());
        EXPECT(0x3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa405));
        // CB B6 0220
        gbc.setState(0xc3d8, 0x3c20, 0x4e0, 0x9962, 0x22e4, 0x2e04, 0x0, 0x1);
        gbc.writeMem(0x2e04, { 0x4 });
        gbc.writeMem(0xc3d8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3c20, gbc.sp());
        EXPECT(0xc3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d8));
        EXPECT(0xb6, gbc.readMem(0xc3d9));
        // CB B6 0221
        gbc.setState(0x3d2a, 0x7669, 0xbf10, 0xbc82, 0x89af, 0xb0d, 0x0, 0x0);
        gbc.writeMem(0xb0d, { 0x12 });
        gbc.writeMem(0x3d2a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7669, gbc.sp());
        EXPECT(0x3d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0224
        gbc.setState(0xc6f8, 0x4632, 0x5fa0, 0xdc13, 0x5f5b, 0x9269, 0x1, 0x0);
        gbc.writeMem(0x9269, { 0x1b });
        gbc.writeMem(0xc6f8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4632, gbc.sp());
        EXPECT(0xc6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x9269));
        EXPECT(0xcb, gbc.readMem(0xc6f8));
        EXPECT(0xb6, gbc.readMem(0xc6f9));
        // CB B6 0225
        gbc.setState(0xa7ae, 0xdc10, 0xfe30, 0x845e, 0xd3fd, 0x156e, 0x1, 0x1);
        gbc.writeMem(0x156e, { 0xa9 });
        gbc.writeMem(0xa7ae, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdc10, gbc.sp());
        EXPECT(0xa7b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ae));
        EXPECT(0xb6, gbc.readMem(0xa7af));
        // CB B6 0227
        gbc.setState(0x7422, 0xe556, 0xd6e0, 0xb352, 0x611d, 0x7f76, 0x0, 0x0);
        gbc.writeMem(0x7422, { 0xcb, 0xb6 });
        gbc.writeMem(0x7f76, { 0x16 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe556, gbc.sp());
        EXPECT(0x7424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0229
        gbc.setState(0xb4ff, 0x118f, 0x1f70, 0xa0b7, 0x9518, 0x8ae4, 0x0, 0x1);
        gbc.writeMem(0x8ae4, { 0x2c });
        gbc.writeMem(0xb4ff, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x118f, gbc.sp());
        EXPECT(0xb501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8ae4));
        EXPECT(0xcb, gbc.readMem(0xb4ff));
        EXPECT(0xb6, gbc.readMem(0xb500));
        // CB B6 022A
        gbc.setState(0x6924, 0xa3f4, 0xa800, 0xac5c, 0xab2c, 0xef28, 0x0, 0x1);
        gbc.writeMem(0x6924, { 0xcb, 0xb6 });
        gbc.writeMem(0xef28, { 0xec });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa3f4, gbc.sp());
        EXPECT(0x6926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xef28));
        // CB B6 022B
        gbc.setState(0x400f, 0x54d9, 0x67b0, 0xdf87, 0x493d, 0x2038, 0x0, 0x1);
        gbc.writeMem(0x2038, { 0xa6 });
        gbc.writeMem(0x400f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x54d9, gbc.sp());
        EXPECT(0x4011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 022C
        gbc.setState(0x3a11, 0x9600, 0x9af0, 0xcbff, 0x8025, 0xfe91, 0x0, 0x1);
        gbc.writeMem(0x3a11, { 0xcb, 0xb6 });
        gbc.writeMem(0xfe91, { 0x10 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9600, gbc.sp());
        EXPECT(0x3a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xfe91));
        // CB B6 022D
        gbc.setState(0x6826, 0x7c79, 0x64b0, 0x7352, 0xb73e, 0x2f84, 0x0, 0x1);
        gbc.writeMem(0x2f84, { 0x98 });
        gbc.writeMem(0x6826, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7c79, gbc.sp());
        EXPECT(0x6828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 022E
        gbc.setState(0x4d17, 0x8c49, 0xcda0, 0xd0ed, 0x6782, 0xd964, 0x1, 0x0);
        gbc.writeMem(0x4d17, { 0xcb, 0xb6 });
        gbc.writeMem(0xd964, { 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8c49, gbc.sp());
        EXPECT(0x4d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xd964));
        // CB B6 022F
        gbc.setState(0x69f1, 0x2d71, 0xf260, 0x5060, 0x6c3b, 0xd867, 0x1, 0x1);
        gbc.writeMem(0x69f1, { 0xcb, 0xb6 });
        gbc.writeMem(0xd867, { 0x81 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2d71, gbc.sp());
        EXPECT(0x69f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd867));
        // CB B6 0230
        gbc.setState(0xbae0, 0x640e, 0x7920, 0x6dd3, 0x37ec, 0xbb32, 0x1, 0x0);
        gbc.writeMem(0xbae0, { 0xcb, 0xb6 });
        gbc.writeMem(0xbb32, { 0xe3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x640e, gbc.sp());
        EXPECT(0xbae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae0));
        EXPECT(0xb6, gbc.readMem(0xbae1));
        EXPECT(0xa3, gbc.readMem(0xbb32));
        // CB B6 0231
        gbc.setState(0xa778, 0x5c72, 0x52e0, 0xcec1, 0xa1d7, 0xba1f, 0x0, 0x0);
        gbc.writeMem(0xa778, { 0xcb, 0xb6 });
        gbc.writeMem(0xba1f, { 0x4d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5c72, gbc.sp());
        EXPECT(0xa77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa778));
        EXPECT(0xb6, gbc.readMem(0xa779));
        EXPECT(0xd, gbc.readMem(0xba1f));
        // CB B6 0233
        gbc.setState(0x37a4, 0xa113, 0xa970, 0xab4d, 0x1343, 0xac97, 0x0, 0x1);
        gbc.writeMem(0x37a4, { 0xcb, 0xb6 });
        gbc.writeMem(0xac97, { 0x7b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa113, gbc.sp());
        EXPECT(0x37a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xac97));
        // CB B6 0235
        gbc.setState(0xee68, 0xf250, 0xb950, 0xe95d, 0x86bc, 0x2845, 0x0, 0x0);
        gbc.writeMem(0x2845, { 0x9e });
        gbc.writeMem(0xee68, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf250, gbc.sp());
        EXPECT(0xee6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee68));
        EXPECT(0xb6, gbc.readMem(0xee69));
        // CB B6 0238
        gbc.setState(0xd81f, 0x2b77, 0xf6c0, 0x419e, 0x594e, 0xc2b5, 0x0, 0x0);
        gbc.writeMem(0xc2b5, { 0x58 });
        gbc.writeMem(0xd81f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2b77, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xc2b5));
        EXPECT(0xcb, gbc.readMem(0xd81f));
        EXPECT(0xb6, gbc.readMem(0xd820));
        // CB B6 0239
        gbc.setState(0x2c8b, 0x9f22, 0x8d80, 0x25b1, 0x9deb, 0xd72a, 0x1, 0x1);
        gbc.writeMem(0x2c8b, { 0xcb, 0xb6 });
        gbc.writeMem(0xd72a, { 0xcf });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9f22, gbc.sp());
        EXPECT(0x2c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd72a));
        // CB B6 023A
        gbc.setState(0x9f90, 0x3e7, 0xdeb0, 0xdf09, 0xc1, 0xc9d4, 0x0, 0x0);
        gbc.writeMem(0x9f90, { 0xcb, 0xb6 });
        gbc.writeMem(0xc9d4, { 0xc4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3e7, gbc.sp());
        EXPECT(0x9f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f90));
        EXPECT(0xb6, gbc.readMem(0x9f91));
        EXPECT(0x84, gbc.readMem(0xc9d4));
        // CB B6 023C
        gbc.setState(0xbe4e, 0x7507, 0x2cf0, 0x6c8f, 0x36eb, 0x464c, 0x1, 0x0);
        gbc.writeMem(0x464c, { 0x2a });
        gbc.writeMem(0xbe4e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7507, gbc.sp());
        EXPECT(0xbe50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4e));
        EXPECT(0xb6, gbc.readMem(0xbe4f));
        // CB B6 023D
        gbc.setState(0x395a, 0x14bf, 0x7ac0, 0x9c9d, 0xae42, 0x6771, 0x1, 0x0);
        gbc.writeMem(0x395a, { 0xcb, 0xb6 });
        gbc.writeMem(0x6771, { 0xa5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x14bf, gbc.sp());
        EXPECT(0x395c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 023E
        gbc.setState(0xc4e, 0x39bd, 0x2520, 0xf8, 0xb17b, 0x864d, 0x1, 0x1);
        gbc.writeMem(0xc4e, { 0xcb, 0xb6 });
        gbc.writeMem(0x864d, { 0xd4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x39bd, gbc.sp());
        EXPECT(0xc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x864d));
        // CB B6 023F
        gbc.setState(0x886, 0x3e75, 0x39e0, 0x2bfe, 0xfab0, 0xba35, 0x1, 0x1);
        gbc.writeMem(0x886, { 0xcb, 0xb6 });
        gbc.writeMem(0xba35, { 0xcd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3e75, gbc.sp());
        EXPECT(0x888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xba35));
        // CB B6 0240
        gbc.setState(0xb020, 0x5125, 0xb3c0, 0xc774, 0x5f4b, 0xd76d, 0x1, 0x1);
        gbc.writeMem(0xb020, { 0xcb, 0xb6 });
        gbc.writeMem(0xd76d, { 0xdd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5125, gbc.sp());
        EXPECT(0xb022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb020));
        EXPECT(0xb6, gbc.readMem(0xb021));
        EXPECT(0x9d, gbc.readMem(0xd76d));
        // CB B6 0241
        gbc.setState(0x4fef, 0xa57c, 0xdef0, 0x263d, 0xd4f2, 0xb687, 0x0, 0x0);
        gbc.writeMem(0x4fef, { 0xcb, 0xb6 });
        gbc.writeMem(0xb687, { 0x34 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa57c, gbc.sp());
        EXPECT(0x4ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb687));
        // CB B6 0243
        gbc.setState(0xad9f, 0x9fde, 0xb120, 0x2a10, 0xff6f, 0x510c, 0x0, 0x1);
        gbc.writeMem(0x510c, { 0x17 });
        gbc.writeMem(0xad9f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9fde, gbc.sp());
        EXPECT(0xada1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad9f));
        EXPECT(0xb6, gbc.readMem(0xada0));
        // CB B6 0244
        gbc.setState(0xbe39, 0xf3c5, 0x9500, 0xd28c, 0x2f86, 0xc536, 0x0, 0x0);
        gbc.writeMem(0xbe39, { 0xcb, 0xb6 });
        gbc.writeMem(0xc536, { 0x89 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf3c5, gbc.sp());
        EXPECT(0xbe3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe39));
        EXPECT(0xb6, gbc.readMem(0xbe3a));
        EXPECT(0x89, gbc.readMem(0xc536));
        // CB B6 0245
        gbc.setState(0xd1ac, 0xdba7, 0x7030, 0x409, 0xd069, 0xec8d, 0x1, 0x1);
        gbc.writeMem(0xd1ac, { 0xcb, 0xb6 });
        gbc.writeMem(0xec8d, { 0x7b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdba7, gbc.sp());
        EXPECT(0xd1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ac));
        EXPECT(0xb6, gbc.readMem(0xd1ad));
        EXPECT(0x3b, gbc.readMem(0xec8d));
        // CB B6 0248
        gbc.setState(0xd37a, 0xb589, 0x65d0, 0xeb0e, 0xacd1, 0xd1b8, 0x1, 0x1);
        gbc.writeMem(0xd1b8, { 0xd4 });
        gbc.writeMem(0xd37a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb589, gbc.sp());
        EXPECT(0xd37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd1b8));
        EXPECT(0xcb, gbc.readMem(0xd37a));
        EXPECT(0xb6, gbc.readMem(0xd37b));
        // CB B6 0249
        gbc.setState(0x2de9, 0x130, 0x5870, 0x61ea, 0xef2a, 0xfa93, 0x1, 0x0);
        gbc.writeMem(0x2de9, { 0xcb, 0xb6 });
        gbc.writeMem(0xfa93, { 0xff });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x130, gbc.sp());
        EXPECT(0x2deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xfa93));
        // CB B6 024A
        gbc.setState(0x1ea9, 0xc5b3, 0x8840, 0x16d7, 0xaca6, 0xb8a2, 0x1, 0x0);
        gbc.writeMem(0x1ea9, { 0xcb, 0xb6 });
        gbc.writeMem(0xb8a2, { 0xe9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc5b3, gbc.sp());
        EXPECT(0x1eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xb8a2));
        // CB B6 024C
        gbc.setState(0x1aa7, 0x3f19, 0x80d0, 0xece8, 0x4145, 0x9b1f, 0x0, 0x1);
        gbc.writeMem(0x1aa7, { 0xcb, 0xb6 });
        gbc.writeMem(0x9b1f, { 0xfd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3f19, gbc.sp());
        EXPECT(0x1aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9b1f));
        // CB B6 024D
        gbc.setState(0xe6fe, 0xa175, 0x8060, 0x81f7, 0x68db, 0x5f5c, 0x1, 0x1);
        gbc.writeMem(0x5f5c, { 0x8c });
        gbc.writeMem(0xe6fe, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa175, gbc.sp());
        EXPECT(0xe700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fe));
        EXPECT(0xb6, gbc.readMem(0xe6ff));
        // CB B6 024F
        gbc.setState(0x51ec, 0x791c, 0x7600, 0x8a59, 0x8532, 0xebde, 0x0, 0x1);
        gbc.writeMem(0x51ec, { 0xcb, 0xb6 });
        gbc.writeMem(0xebde, { 0x6e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x791c, gbc.sp());
        EXPECT(0x51ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xebde));
        // CB B6 0250
        gbc.setState(0x4840, 0xb99c, 0xa590, 0x68d7, 0x525a, 0xfbf3, 0x1, 0x0);
        gbc.writeMem(0x4840, { 0xcb, 0xb6 });
        gbc.writeMem(0xfbf3, { 0xcc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb99c, gbc.sp());
        EXPECT(0x4842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xfbf3));
        // CB B6 0252
        gbc.setState(0x31a8, 0x1226, 0x6290, 0x3129, 0x7dc7, 0x2f37, 0x1, 0x1);
        gbc.writeMem(0x2f37, { 0xb9 });
        gbc.writeMem(0x31a8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1226, gbc.sp());
        EXPECT(0x31aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0254
        gbc.setState(0xb47f, 0x134f, 0xb240, 0x892d, 0xd93a, 0x176a, 0x0, 0x1);
        gbc.writeMem(0x176a, { 0x1f });
        gbc.writeMem(0xb47f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x134f, gbc.sp());
        EXPECT(0xb481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47f));
        EXPECT(0xb6, gbc.readMem(0xb480));
        // CB B6 0256
        gbc.setState(0xe62, 0x3cfe, 0x54a0, 0x661e, 0x60d2, 0x7d13, 0x1, 0x1);
        gbc.writeMem(0xe62, { 0xcb, 0xb6 });
        gbc.writeMem(0x7d13, { 0x9e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3cfe, gbc.sp());
        EXPECT(0xe64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0258
        gbc.setState(0x7218, 0xe76e, 0x30a0, 0x8a80, 0x69b2, 0x2001, 0x0, 0x1);
        gbc.writeMem(0x2001, { 0x18 });
        gbc.writeMem(0x7218, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe76e, gbc.sp());
        EXPECT(0x721a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0259
        gbc.setState(0x11e, 0xe9aa, 0x7490, 0xc618, 0x1565, 0x92cb, 0x1, 0x0);
        gbc.writeMem(0x11e, { 0xcb, 0xb6 });
        gbc.writeMem(0x92cb, { 0x65 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe9aa, gbc.sp());
        EXPECT(0x120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x92cb));
        // CB B6 025C
        gbc.setState(0xdad8, 0x83dc, 0x3320, 0xaf15, 0x6dbc, 0xf683, 0x1, 0x0);
        gbc.writeMem(0xdad8, { 0xcb, 0xb6 });
        gbc.writeMem(0xf683, { 0x30 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x83dc, gbc.sp());
        EXPECT(0xdada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad8));
        EXPECT(0xb6, gbc.readMem(0xdad9));
        EXPECT(0x30, gbc.readMem(0xf683));
        // CB B6 025D
        gbc.setState(0x573a, 0x4230, 0x4200, 0xdbf, 0x3b02, 0x91c3, 0x1, 0x0);
        gbc.writeMem(0x573a, { 0xcb, 0xb6 });
        gbc.writeMem(0x91c3, { 0x23 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4230, gbc.sp());
        EXPECT(0x573c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x91c3));
        // CB B6 025E
        gbc.setState(0xe325, 0x8d8b, 0xfa00, 0xa27e, 0xe157, 0xa640, 0x0, 0x1);
        gbc.writeMem(0xa640, { 0x5d });
        gbc.writeMem(0xe325, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8d8b, gbc.sp());
        EXPECT(0xe327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa640));
        EXPECT(0xcb, gbc.readMem(0xe325));
        EXPECT(0xb6, gbc.readMem(0xe326));
        // CB B6 025F
        gbc.setState(0xcca7, 0xa482, 0x5160, 0xde6a, 0xe04, 0xff4a, 0x1, 0x1);
        gbc.writeMem(0xcca7, { 0xcb, 0xb6 });
        gbc.writeMem(0xff4a, { 0x7e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa482, gbc.sp());
        EXPECT(0xcca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca7));
        EXPECT(0xb6, gbc.readMem(0xcca8));
        EXPECT(0x3e, gbc.readMem(0xff4a));
        // CB B6 0260
        gbc.setState(0xd9d6, 0xdc9c, 0x1a10, 0x4946, 0x21bc, 0xe6d0, 0x0, 0x0);
        gbc.writeMem(0xd9d6, { 0xcb, 0xb6 });
        gbc.writeMem(0xe6d0, { 0x7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdc9c, gbc.sp());
        EXPECT(0xd9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d6));
        EXPECT(0xb6, gbc.readMem(0xd9d7));
        EXPECT(0x7, gbc.readMem(0xe6d0));
        // CB B6 0261
        gbc.setState(0xb546, 0x72f6, 0x9ea0, 0x3ce2, 0x3c5b, 0xdb16, 0x0, 0x0);
        gbc.writeMem(0xb546, { 0xcb, 0xb6 });
        gbc.writeMem(0xdb16, { 0x84 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x72f6, gbc.sp());
        EXPECT(0xb548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb546));
        EXPECT(0xb6, gbc.readMem(0xb547));
        EXPECT(0x84, gbc.readMem(0xdb16));
        // CB B6 0262
        gbc.setState(0x610d, 0x1f76, 0xdad0, 0xf277, 0x891d, 0xb52b, 0x0, 0x1);
        gbc.writeMem(0x610d, { 0xcb, 0xb6 });
        gbc.writeMem(0xb52b, { 0x69 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1f76, gbc.sp());
        EXPECT(0x610f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb52b));
        // CB B6 0263
        gbc.setState(0x3fb5, 0x4c3a, 0xb1e0, 0xbc47, 0xee7e, 0x5260, 0x0, 0x1);
        gbc.writeMem(0x3fb5, { 0xcb, 0xb6 });
        gbc.writeMem(0x5260, { 0x2c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4c3a, gbc.sp());
        EXPECT(0x3fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0264
        gbc.setState(0xe57e, 0x4276, 0xc170, 0xbf7d, 0xd6f6, 0xcd00, 0x0, 0x1);
        gbc.writeMem(0xcd00, { 0xbe });
        gbc.writeMem(0xe57e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4276, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xcd00));
        EXPECT(0xcb, gbc.readMem(0xe57e));
        EXPECT(0xb6, gbc.readMem(0xe57f));
        // CB B6 0265
        gbc.setState(0xc9ac, 0x6535, 0x5820, 0x2e1b, 0x52f, 0xea7e, 0x1, 0x0);
        gbc.writeMem(0xc9ac, { 0xcb, 0xb6 });
        gbc.writeMem(0xea7e, { 0x51 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6535, gbc.sp());
        EXPECT(0xc9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ac));
        EXPECT(0xb6, gbc.readMem(0xc9ad));
        EXPECT(0x11, gbc.readMem(0xea7e));
        // CB B6 0267
        gbc.setState(0xd9d1, 0xd4bc, 0x7a80, 0xf07c, 0xbfb3, 0xfee, 0x1, 0x0);
        gbc.writeMem(0xfee, { 0x10 });
        gbc.writeMem(0xd9d1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd4bc, gbc.sp());
        EXPECT(0xd9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d1));
        EXPECT(0xb6, gbc.readMem(0xd9d2));
        // CB B6 0268
        gbc.setState(0x7610, 0x95c7, 0x7850, 0x25d, 0xb07d, 0x86a2, 0x1, 0x1);
        gbc.writeMem(0x7610, { 0xcb, 0xb6 });
        gbc.writeMem(0x86a2, { 0xc1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x95c7, gbc.sp());
        EXPECT(0x7612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x86a2));
        // CB B6 026A
        gbc.setState(0x3618, 0xf832, 0xe060, 0x8762, 0xbf21, 0x44de, 0x0, 0x1);
        gbc.writeMem(0x3618, { 0xcb, 0xb6 });
        gbc.writeMem(0x44de, { 0x91 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf832, gbc.sp());
        EXPECT(0x361a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 026B
        gbc.setState(0xfd9, 0xeb67, 0x5020, 0x1b2a, 0xeb85, 0xf496, 0x1, 0x1);
        gbc.writeMem(0xfd9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf496, { 0x96 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xeb67, gbc.sp());
        EXPECT(0xfdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xf496));
        // CB B6 026C
        gbc.setState(0x2b2a, 0x72a, 0x6d70, 0xe33f, 0x65e6, 0x566b, 0x1, 0x1);
        gbc.writeMem(0x2b2a, { 0xcb, 0xb6 });
        gbc.writeMem(0x566b, { 0x7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x72a, gbc.sp());
        EXPECT(0x2b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 026D
        gbc.setState(0x9ba2, 0xa4c7, 0x2460, 0xb9f7, 0x8985, 0xb920, 0x1, 0x1);
        gbc.writeMem(0x9ba2, { 0xcb, 0xb6 });
        gbc.writeMem(0xb920, { 0xd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa4c7, gbc.sp());
        EXPECT(0x9ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba2));
        EXPECT(0xb6, gbc.readMem(0x9ba3));
        EXPECT(0xd, gbc.readMem(0xb920));
        // CB B6 026E
        gbc.setState(0xb724, 0x1757, 0x5160, 0x471b, 0xe04c, 0xe94d, 0x0, 0x1);
        gbc.writeMem(0xb724, { 0xcb, 0xb6 });
        gbc.writeMem(0xe94d, { 0xf1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1757, gbc.sp());
        EXPECT(0xb726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb724));
        EXPECT(0xb6, gbc.readMem(0xb725));
        EXPECT(0xb1, gbc.readMem(0xe94d));
        // CB B6 0270
        gbc.setState(0x7e9b, 0xc64f, 0x7040, 0xbfdb, 0x4936, 0xe6b0, 0x0, 0x0);
        gbc.writeMem(0x7e9b, { 0xcb, 0xb6 });
        gbc.writeMem(0xe6b0, { 0x2d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc64f, gbc.sp());
        EXPECT(0x7e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe6b0));
        // CB B6 0271
        gbc.setState(0x6cd, 0xb82c, 0x170, 0x6d53, 0xf384, 0xfbca, 0x0, 0x0);
        gbc.writeMem(0x6cd, { 0xcb, 0xb6 });
        gbc.writeMem(0xfbca, { 0x41 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb82c, gbc.sp());
        EXPECT(0x6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xfbca));
        // CB B6 0272
        gbc.setState(0x67df, 0x1662, 0x7220, 0x55f5, 0x39a4, 0xd7f3, 0x1, 0x1);
        gbc.writeMem(0x67df, { 0xcb, 0xb6 });
        gbc.writeMem(0xd7f3, { 0x26 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1662, gbc.sp());
        EXPECT(0x67e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd7f3));
        // CB B6 0274
        gbc.setState(0x83e0, 0xcef7, 0x5820, 0x3b49, 0x115b, 0x3295, 0x0, 0x0);
        gbc.writeMem(0x3295, { 0xb8 });
        gbc.writeMem(0x83e0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcef7, gbc.sp());
        EXPECT(0x83e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e0));
        EXPECT(0xb6, gbc.readMem(0x83e1));
        // CB B6 0275
        gbc.setState(0x42c0, 0x7e97, 0x3230, 0xe25, 0xbb8, 0xc9fd, 0x1, 0x0);
        gbc.writeMem(0x42c0, { 0xcb, 0xb6 });
        gbc.writeMem(0xc9fd, { 0x5e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7e97, gbc.sp());
        EXPECT(0x42c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xc9fd));
        // CB B6 0276
        gbc.setState(0xd20a, 0x2db4, 0x58c0, 0xe660, 0x1a38, 0x248a, 0x1, 0x0);
        gbc.writeMem(0x248a, { 0xa1 });
        gbc.writeMem(0xd20a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2db4, gbc.sp());
        EXPECT(0xd20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20a));
        EXPECT(0xb6, gbc.readMem(0xd20b));
        // CB B6 0277
        gbc.setState(0x1e39, 0x7bd5, 0xe670, 0xfd74, 0x4789, 0xb142, 0x0, 0x0);
        gbc.writeMem(0x1e39, { 0xcb, 0xb6 });
        gbc.writeMem(0xb142, { 0x14 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7bd5, gbc.sp());
        EXPECT(0x1e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb142));
        // CB B6 0278
        gbc.setState(0x1192, 0x8ab9, 0xd8e0, 0xd9a9, 0xc907, 0xdda5, 0x1, 0x1);
        gbc.writeMem(0x1192, { 0xcb, 0xb6 });
        gbc.writeMem(0xdda5, { 0xd3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8ab9, gbc.sp());
        EXPECT(0x1194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdda5));
        // CB B6 0279
        gbc.setState(0xb3aa, 0x5e75, 0x68c0, 0x7ea4, 0xe78d, 0x10b7, 0x0, 0x0);
        gbc.writeMem(0x10b7, { 0x36 });
        gbc.writeMem(0xb3aa, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0xb3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3aa));
        EXPECT(0xb6, gbc.readMem(0xb3ab));
        // CB B6 027B
        gbc.setState(0x8bc6, 0x9f6c, 0x6830, 0xb0ae, 0xd7ce, 0x9dbd, 0x1, 0x1);
        gbc.writeMem(0x8bc6, { 0xcb, 0xb6 });
        gbc.writeMem(0x9dbd, { 0x24 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9f6c, gbc.sp());
        EXPECT(0x8bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc6));
        EXPECT(0xb6, gbc.readMem(0x8bc7));
        EXPECT(0x24, gbc.readMem(0x9dbd));
        // CB B6 027D
        gbc.setState(0xd8f1, 0x1b6c, 0x4f20, 0x515a, 0xf917, 0xb3bb, 0x1, 0x1);
        gbc.writeMem(0xb3bb, { 0x7c });
        gbc.writeMem(0xd8f1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1b6c, gbc.sp());
        EXPECT(0xd8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb3bb));
        EXPECT(0xcb, gbc.readMem(0xd8f1));
        EXPECT(0xb6, gbc.readMem(0xd8f2));
        // CB B6 027E
        gbc.setState(0x2181, 0x102d, 0xa530, 0x4ba1, 0x6c43, 0x61cc, 0x0, 0x0);
        gbc.writeMem(0x2181, { 0xcb, 0xb6 });
        gbc.writeMem(0x61cc, { 0x89 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x102d, gbc.sp());
        EXPECT(0x2183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0280
        gbc.setState(0x5952, 0xd8f7, 0xeae0, 0xce00, 0xb11b, 0x397, 0x0, 0x0);
        gbc.writeMem(0x397, { 0x9c });
        gbc.writeMem(0x5952, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd8f7, gbc.sp());
        EXPECT(0x5954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0281
        gbc.setState(0x179c, 0x887a, 0xd7d0, 0x13a0, 0xd85f, 0xdeec, 0x0, 0x1);
        gbc.writeMem(0x179c, { 0xcb, 0xb6 });
        gbc.writeMem(0xdeec, { 0x32 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x887a, gbc.sp());
        EXPECT(0x179e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xdeec));
        // CB B6 0282
        gbc.setState(0x636a, 0x8df, 0xcc30, 0x1bb2, 0x9fae, 0x4b02, 0x0, 0x1);
        gbc.writeMem(0x4b02, { 0x24 });
        gbc.writeMem(0x636a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8df, gbc.sp());
        EXPECT(0x636c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0285
        gbc.setState(0x45d5, 0x6b7e, 0x2a30, 0x1309, 0x7b91, 0xed22, 0x1, 0x0);
        gbc.writeMem(0x45d5, { 0xcb, 0xb6 });
        gbc.writeMem(0xed22, { 0xaf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6b7e, gbc.sp());
        EXPECT(0x45d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xed22));
        // CB B6 0286
        gbc.setState(0x105f, 0x2127, 0x2090, 0x2c7, 0xe72a, 0x219b, 0x1, 0x0);
        gbc.writeMem(0x105f, { 0xcb, 0xb6 });
        gbc.writeMem(0x219b, { 0x1e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2127, gbc.sp());
        EXPECT(0x1061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0289
        gbc.setState(0x4495, 0xe299, 0xd4e0, 0x742f, 0x1430, 0x212a, 0x1, 0x1);
        gbc.writeMem(0x212a, { 0x23 });
        gbc.writeMem(0x4495, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe299, gbc.sp());
        EXPECT(0x4497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 028A
        gbc.setState(0xeee4, 0x7832, 0x5f90, 0xbbd1, 0xc76a, 0x9515, 0x1, 0x0);
        gbc.writeMem(0x9515, { 0xa7 });
        gbc.writeMem(0xeee4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7832, gbc.sp());
        EXPECT(0xeee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9515));
        EXPECT(0xcb, gbc.readMem(0xeee4));
        EXPECT(0xb6, gbc.readMem(0xeee5));
        // CB B6 028B
        gbc.setState(0x5ad4, 0x7205, 0xff30, 0x4457, 0xddb7, 0x6347, 0x1, 0x1);
        gbc.writeMem(0x5ad4, { 0xcb, 0xb6 });
        gbc.writeMem(0x6347, { 0x1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7205, gbc.sp());
        EXPECT(0x5ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 028E
        gbc.setState(0x8438, 0x44d5, 0x1fc0, 0x53b9, 0xb313, 0xbc5b, 0x0, 0x1);
        gbc.writeMem(0x8438, { 0xcb, 0xb6 });
        gbc.writeMem(0xbc5b, { 0x35 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x44d5, gbc.sp());
        EXPECT(0x843a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8438));
        EXPECT(0xb6, gbc.readMem(0x8439));
        EXPECT(0x35, gbc.readMem(0xbc5b));
        // CB B6 0290
        gbc.setState(0xd84b, 0x566a, 0xb3e0, 0x6daf, 0xff3f, 0xecac, 0x0, 0x0);
        gbc.writeMem(0xd84b, { 0xcb, 0xb6 });
        gbc.writeMem(0xecac, { 0x82 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x566a, gbc.sp());
        EXPECT(0xd84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84b));
        EXPECT(0xb6, gbc.readMem(0xd84c));
        EXPECT(0x82, gbc.readMem(0xecac));
        // CB B6 0292
        gbc.setState(0xa586, 0xe520, 0x44c0, 0xb96d, 0x119e, 0xfeb4, 0x1, 0x0);
        gbc.writeMem(0xa586, { 0xcb, 0xb6 });
        gbc.writeMem(0xfeb4, { 0xfd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe520, gbc.sp());
        EXPECT(0xa588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa586));
        EXPECT(0xb6, gbc.readMem(0xa587));
        EXPECT(0xbd, gbc.readMem(0xfeb4));
        // CB B6 0293
        gbc.setState(0x8231, 0x58fb, 0x9290, 0xb622, 0xffbc, 0x8ed3, 0x1, 0x0);
        gbc.writeMem(0x8231, { 0xcb, 0xb6 });
        gbc.writeMem(0x8ed3, { 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0x8233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8231));
        EXPECT(0xb6, gbc.readMem(0x8232));
        EXPECT(0x13, gbc.readMem(0x8ed3));
        // CB B6 0294
        gbc.setState(0x34a7, 0x2f74, 0x88c0, 0x6ca3, 0x3b69, 0xde3b, 0x0, 0x1);
        gbc.writeMem(0x34a7, { 0xcb, 0xb6 });
        gbc.writeMem(0xde3b, { 0x4e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2f74, gbc.sp());
        EXPECT(0x34a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xde3b));
        // CB B6 0295
        gbc.setState(0x6083, 0x87b9, 0x67a0, 0xeebe, 0x4778, 0x4028, 0x0, 0x1);
        gbc.writeMem(0x4028, { 0x11 });
        gbc.writeMem(0x6083, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x87b9, gbc.sp());
        EXPECT(0x6085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0296
        gbc.setState(0x1706, 0xf053, 0xc270, 0x7387, 0xfa34, 0x5e1b, 0x0, 0x1);
        gbc.writeMem(0x1706, { 0xcb, 0xb6 });
        gbc.writeMem(0x5e1b, { 0xb7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf053, gbc.sp());
        EXPECT(0x1708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0297
        gbc.setState(0x6fe8, 0x87c2, 0xc810, 0x5b17, 0xc2d7, 0x90af, 0x0, 0x0);
        gbc.writeMem(0x6fe8, { 0xcb, 0xb6 });
        gbc.writeMem(0x90af, { 0x82 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x87c2, gbc.sp());
        EXPECT(0x6fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x90af));
        // CB B6 0298
        gbc.setState(0x2e7d, 0xce02, 0x9f0, 0x7124, 0x228f, 0xc30f, 0x0, 0x0);
        gbc.writeMem(0x2e7d, { 0xcb, 0xb6 });
        gbc.writeMem(0xc30f, { 0xd8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xce02, gbc.sp());
        EXPECT(0x2e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc30f));
        // CB B6 0299
        gbc.setState(0x7cc6, 0x5fa7, 0x4e70, 0x2a8c, 0x12e0, 0xd3a, 0x0, 0x1);
        gbc.writeMem(0xd3a, { 0x2 });
        gbc.writeMem(0x7cc6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5fa7, gbc.sp());
        EXPECT(0x7cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 029A
        gbc.setState(0x2fcc, 0x2cb5, 0x7520, 0x66b4, 0xf3c5, 0xd399, 0x0, 0x1);
        gbc.writeMem(0x2fcc, { 0xcb, 0xb6 });
        gbc.writeMem(0xd399, { 0xa3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2cb5, gbc.sp());
        EXPECT(0x2fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd399));
        // CB B6 029D
        gbc.setState(0xb0bd, 0x311e, 0x950, 0x42ee, 0xd1d, 0xc7eb, 0x1, 0x0);
        gbc.writeMem(0xb0bd, { 0xcb, 0xb6 });
        gbc.writeMem(0xc7eb, { 0x39 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x311e, gbc.sp());
        EXPECT(0xb0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0bd));
        EXPECT(0xb6, gbc.readMem(0xb0be));
        EXPECT(0x39, gbc.readMem(0xc7eb));
        // CB B6 029F
        gbc.setState(0xddd1, 0x593b, 0xe0e0, 0xbcf2, 0x6926, 0x89f7, 0x1, 0x0);
        gbc.writeMem(0x89f7, { 0xb5 });
        gbc.writeMem(0xddd1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x593b, gbc.sp());
        EXPECT(0xddd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x89f7));
        EXPECT(0xcb, gbc.readMem(0xddd1));
        EXPECT(0xb6, gbc.readMem(0xddd2));
        // CB B6 02A0
        gbc.setState(0x137c, 0xcb8, 0xc550, 0x144e, 0xd97b, 0xd22b, 0x1, 0x1);
        gbc.writeMem(0x137c, { 0xcb, 0xb6 });
        gbc.writeMem(0xd22b, { 0x78 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcb8, gbc.sp());
        EXPECT(0x137e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd22b));
        // CB B6 02A1
        gbc.setState(0x9a98, 0x7ed8, 0x5830, 0x5677, 0xb6d1, 0xb9b8, 0x0, 0x1);
        gbc.writeMem(0x9a98, { 0xcb, 0xb6 });
        gbc.writeMem(0xb9b8, { 0xdd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7ed8, gbc.sp());
        EXPECT(0x9a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a98));
        EXPECT(0xb6, gbc.readMem(0x9a99));
        EXPECT(0x9d, gbc.readMem(0xb9b8));
        // CB B6 02A2
        gbc.setState(0xa8e5, 0xf65a, 0xf510, 0x6a75, 0xc638, 0xdf07, 0x0, 0x0);
        gbc.writeMem(0xa8e5, { 0xcb, 0xb6 });
        gbc.writeMem(0xdf07, { 0xe8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf65a, gbc.sp());
        EXPECT(0xa8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e5));
        EXPECT(0xb6, gbc.readMem(0xa8e6));
        EXPECT(0xa8, gbc.readMem(0xdf07));
        // CB B6 02A3
        gbc.setState(0x5f5b, 0x6777, 0x6900, 0xc8f1, 0x1164, 0xc307, 0x0, 0x0);
        gbc.writeMem(0x5f5b, { 0xcb, 0xb6 });
        gbc.writeMem(0xc307, { 0xb3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6777, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc307));
        // CB B6 02A4
        gbc.setState(0xa952, 0x5fd4, 0x290, 0x4658, 0x3ead, 0xa152, 0x0, 0x0);
        gbc.writeMem(0xa152, { 0x6a });
        gbc.writeMem(0xa952, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5fd4, gbc.sp());
        EXPECT(0xa954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xa152));
        EXPECT(0xcb, gbc.readMem(0xa952));
        EXPECT(0xb6, gbc.readMem(0xa953));
        // CB B6 02A5
        gbc.setState(0x5e19, 0x2c05, 0x77f0, 0x740, 0x7de, 0x65db, 0x0, 0x0);
        gbc.writeMem(0x5e19, { 0xcb, 0xb6 });
        gbc.writeMem(0x65db, { 0x2a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2c05, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 02A6
        gbc.setState(0x4e56, 0xf437, 0x1090, 0x14, 0x4516, 0xc35c, 0x1, 0x0);
        gbc.writeMem(0x4e56, { 0xcb, 0xb6 });
        gbc.writeMem(0xc35c, { 0x3a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf437, gbc.sp());
        EXPECT(0x4e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xc35c));
        // CB B6 02A7
        gbc.setState(0x703a, 0x48bd, 0x6a70, 0xa7b0, 0xfbc4, 0xd23c, 0x1, 0x1);
        gbc.writeMem(0x703a, { 0xcb, 0xb6 });
        gbc.writeMem(0xd23c, { 0x98 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x48bd, gbc.sp());
        EXPECT(0x703c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd23c));
        // CB B6 02A9
        gbc.setState(0xe148, 0x27ab, 0xee60, 0xf2e6, 0xbe85, 0xd216, 0x1, 0x0);
        gbc.writeMem(0xd216, { 0x45 });
        gbc.writeMem(0xe148, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x27ab, gbc.sp());
        EXPECT(0xe14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd216));
        EXPECT(0xcb, gbc.readMem(0xe148));
        EXPECT(0xb6, gbc.readMem(0xe149));
        // CB B6 02AA
        gbc.setState(0x88b9, 0x1c7a, 0x41a0, 0x5973, 0xdeed, 0x402a, 0x1, 0x1);
        gbc.writeMem(0x402a, { 0x12 });
        gbc.writeMem(0x88b9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1c7a, gbc.sp());
        EXPECT(0x88bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b9));
        EXPECT(0xb6, gbc.readMem(0x88ba));
        // CB B6 02AD
        gbc.setState(0xa39c, 0x64f5, 0xc190, 0xa781, 0xd8fb, 0xc09f, 0x1, 0x1);
        gbc.writeMem(0xa39c, { 0xcb, 0xb6 });
        gbc.writeMem(0xc09f, { 0x8b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x64f5, gbc.sp());
        EXPECT(0xa39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39c));
        EXPECT(0xb6, gbc.readMem(0xa39d));
        EXPECT(0x8b, gbc.readMem(0xc09f));
        // CB B6 02AE
        gbc.setState(0xc847, 0xf72b, 0x8670, 0x1409, 0x4346, 0xfccd, 0x1, 0x1);
        gbc.writeMem(0xc847, { 0xcb, 0xb6 });
        gbc.writeMem(0xfccd, { 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf72b, gbc.sp());
        EXPECT(0xc849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc847));
        EXPECT(0xb6, gbc.readMem(0xc848));
        EXPECT(0xa4, gbc.readMem(0xfccd));
        // CB B6 02AF
        gbc.setState(0xcb40, 0x184, 0x45f0, 0x8fad, 0xe536, 0x8c4, 0x0, 0x1);
        gbc.writeMem(0x8c4, { 0x38 });
        gbc.writeMem(0xcb40, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x184, gbc.sp());
        EXPECT(0xcb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb40));
        EXPECT(0xb6, gbc.readMem(0xcb41));
        // CB B6 02B1
        gbc.setState(0xb455, 0xf07e, 0x8320, 0x471c, 0x1c62, 0x875c, 0x1, 0x0);
        gbc.writeMem(0x875c, { 0xf1 });
        gbc.writeMem(0xb455, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf07e, gbc.sp());
        EXPECT(0xb457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x875c));
        EXPECT(0xcb, gbc.readMem(0xb455));
        EXPECT(0xb6, gbc.readMem(0xb456));
        // CB B6 02B2
        gbc.setState(0x6959, 0x7a88, 0x94d0, 0xc4b0, 0xbf15, 0x507a, 0x0, 0x1);
        gbc.writeMem(0x507a, { 0xa4 });
        gbc.writeMem(0x6959, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7a88, gbc.sp());
        EXPECT(0x695b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 02B3
        gbc.setState(0x91fe, 0xa9cf, 0x870, 0x83e4, 0x8f78, 0xd00b, 0x0, 0x0);
        gbc.writeMem(0x91fe, { 0xcb, 0xb6 });
        gbc.writeMem(0xd00b, { 0x1e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa9cf, gbc.sp());
        EXPECT(0x9200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fe));
        EXPECT(0xb6, gbc.readMem(0x91ff));
        EXPECT(0x1e, gbc.readMem(0xd00b));
        // CB B6 02B5
        gbc.setState(0x35cb, 0xea7, 0x26f0, 0x7e91, 0xb5eb, 0xd6e9, 0x1, 0x0);
        gbc.writeMem(0x35cb, { 0xcb, 0xb6 });
        gbc.writeMem(0xd6e9, { 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xea7, gbc.sp());
        EXPECT(0x35cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd6e9));
        // CB B6 02B6
        gbc.setState(0xe847, 0x7c37, 0x1b40, 0x7e7a, 0x391d, 0xcee6, 0x0, 0x1);
        gbc.writeMem(0xcee6, { 0x8 });
        gbc.writeMem(0xe847, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7c37, gbc.sp());
        EXPECT(0xe849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xcee6));
        EXPECT(0xcb, gbc.readMem(0xe847));
        EXPECT(0xb6, gbc.readMem(0xe848));
        // CB B6 02B7
        gbc.setState(0x591a, 0xa00f, 0xb840, 0x2ec2, 0x35e1, 0x9c33, 0x0, 0x0);
        gbc.writeMem(0x591a, { 0xcb, 0xb6 });
        gbc.writeMem(0x9c33, { 0x3b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa00f, gbc.sp());
        EXPECT(0x591c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9c33));
        // CB B6 02B9
        gbc.setState(0x4d7e, 0xa095, 0x7690, 0x1c49, 0x6aa4, 0x3778, 0x0, 0x1);
        gbc.writeMem(0x3778, { 0x33 });
        gbc.writeMem(0x4d7e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa095, gbc.sp());
        EXPECT(0x4d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 02BA
        gbc.setState(0x2cc0, 0x3940, 0xa8c0, 0x951d, 0x143e, 0x95d2, 0x1, 0x0);
        gbc.writeMem(0x2cc0, { 0xcb, 0xb6 });
        gbc.writeMem(0x95d2, { 0xc5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3940, gbc.sp());
        EXPECT(0x2cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x95d2));
        // CB B6 02BB
        gbc.setState(0x27fd, 0xd40a, 0x9540, 0xd419, 0xd2dc, 0x12de, 0x0, 0x1);
        gbc.writeMem(0x12de, { 0xa8 });
        gbc.writeMem(0x27fd, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd40a, gbc.sp());
        EXPECT(0x27ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 02BC
        gbc.setState(0x8953, 0xe80e, 0x5910, 0x872f, 0x463e, 0x4201, 0x0, 0x0);
        gbc.writeMem(0x4201, { 0x33 });
        gbc.writeMem(0x8953, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe80e, gbc.sp());
        EXPECT(0x8955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8953));
        EXPECT(0xb6, gbc.readMem(0x8954));
        // CB B6 02BD
        gbc.setState(0xdb6b, 0x85bb, 0x2a20, 0x9ac0, 0xae89, 0x725b, 0x1, 0x0);
        gbc.writeMem(0x725b, { 0x1c });
        gbc.writeMem(0xdb6b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x85bb, gbc.sp());
        EXPECT(0xdb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6b));
        EXPECT(0xb6, gbc.readMem(0xdb6c));
        // CB B6 02BE
        gbc.setState(0xeca3, 0x1142, 0x12f0, 0x9d27, 0xd7f7, 0xbac0, 0x0, 0x0);
        gbc.writeMem(0xbac0, { 0xf3 });
        gbc.writeMem(0xeca3, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1142, gbc.sp());
        EXPECT(0xeca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbac0));
        EXPECT(0xcb, gbc.readMem(0xeca3));
        EXPECT(0xb6, gbc.readMem(0xeca4));
        // CB B6 02BF
        gbc.setState(0x5ad9, 0x457, 0x9050, 0x9f67, 0xc993, 0x4495, 0x1, 0x0);
        gbc.writeMem(0x4495, { 0x9b });
        gbc.writeMem(0x5ad9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x457, gbc.sp());
        EXPECT(0x5adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 02C0
        gbc.setState(0x228b, 0x7f38, 0x1250, 0x508f, 0xb130, 0x4c22, 0x1, 0x1);
        gbc.writeMem(0x228b, { 0xcb, 0xb6 });
        gbc.writeMem(0x4c22, { 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7f38, gbc.sp());
        EXPECT(0x228d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 02C2
        gbc.setState(0x4140, 0xbdbe, 0xd610, 0xee81, 0x84a, 0x3204, 0x0, 0x1);
        gbc.writeMem(0x3204, { 0xb0 });
        gbc.writeMem(0x4140, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbdbe, gbc.sp());
        EXPECT(0x4142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 02C3
        gbc.setState(0xbb4c, 0x4dad, 0xf130, 0xc38a, 0x4574, 0x3db2, 0x1, 0x1);
        gbc.writeMem(0x3db2, { 0xa1 });
        gbc.writeMem(0xbb4c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4dad, gbc.sp());
        EXPECT(0xbb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4c));
        EXPECT(0xb6, gbc.readMem(0xbb4d));
        // CB B6 02C4
        gbc.setState(0xe7ee, 0x779f, 0xc200, 0xeaf1, 0x2558, 0x8d0c, 0x1, 0x0);
        gbc.writeMem(0x8d0c, { 0x6 });
        gbc.writeMem(0xe7ee, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x779f, gbc.sp());
        EXPECT(0xe7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8d0c));
        EXPECT(0xcb, gbc.readMem(0xe7ee));
        EXPECT(0xb6, gbc.readMem(0xe7ef));
        // CB B6 02C5
        gbc.setState(0x8fd9, 0xe654, 0x8860, 0x5db5, 0x9624, 0xd3fc, 0x1, 0x0);
        gbc.writeMem(0x8fd9, { 0xcb, 0xb6 });
        gbc.writeMem(0xd3fc, { 0xa6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe654, gbc.sp());
        EXPECT(0x8fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd9));
        EXPECT(0xb6, gbc.readMem(0x8fda));
        EXPECT(0xa6, gbc.readMem(0xd3fc));
        // CB B6 02C6
        gbc.setState(0x9f14, 0x6a4a, 0x1a70, 0xfb58, 0xc896, 0x4f2b, 0x1, 0x0);
        gbc.writeMem(0x4f2b, { 0xb2 });
        gbc.writeMem(0x9f14, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6a4a, gbc.sp());
        EXPECT(0x9f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f14));
        EXPECT(0xb6, gbc.readMem(0x9f15));
        // CB B6 02C7
        gbc.setState(0x2aad, 0x3c6d, 0x5860, 0x71f8, 0x2a7a, 0xcbb2, 0x0, 0x1);
        gbc.writeMem(0x2aad, { 0xcb, 0xb6 });
        gbc.writeMem(0xcbb2, { 0xff });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3c6d, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcbb2));
        // CB B6 02C8
        gbc.setState(0x5e47, 0xf344, 0x2be0, 0x3a07, 0x6045, 0xa880, 0x0, 0x1);
        gbc.writeMem(0x5e47, { 0xcb, 0xb6 });
        gbc.writeMem(0xa880, { 0x1b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf344, gbc.sp());
        EXPECT(0x5e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xa880));
        // CB B6 02C9
        gbc.setState(0x169a, 0x2288, 0x4d00, 0xb4df, 0x8809, 0x9dad, 0x1, 0x0);
        gbc.writeMem(0x169a, { 0xcb, 0xb6 });
        gbc.writeMem(0x9dad, { 0x97 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2288, gbc.sp());
        EXPECT(0x169c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9dad));
        // CB B6 02CB
        gbc.setState(0x84f1, 0xffdb, 0xaa30, 0xba6b, 0x1b69, 0xda54, 0x0, 0x0);
        gbc.writeMem(0x84f1, { 0xcb, 0xb6 });
        gbc.writeMem(0xda54, { 0xec });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xffdb, gbc.sp());
        EXPECT(0x84f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f1));
        EXPECT(0xb6, gbc.readMem(0x84f2));
        EXPECT(0xac, gbc.readMem(0xda54));
        // CB B6 02CD
        gbc.setState(0x40d5, 0xdddd, 0xc840, 0xf105, 0xe535, 0x1ef3, 0x1, 0x0);
        gbc.writeMem(0x1ef3, { 0xb1 });
        gbc.writeMem(0x40d5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdddd, gbc.sp());
        EXPECT(0x40d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 02CE
        gbc.setState(0x4ef9, 0x7c31, 0x25f0, 0x3b73, 0x5a81, 0x48db, 0x0, 0x1);
        gbc.writeMem(0x48db, { 0x9c });
        gbc.writeMem(0x4ef9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7c31, gbc.sp());
        EXPECT(0x4efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 02CF
        gbc.setState(0xdee2, 0xb6e2, 0x2290, 0x2d7a, 0x9eb2, 0xbd0a, 0x0, 0x1);
        gbc.writeMem(0xbd0a, { 0x8c });
        gbc.writeMem(0xdee2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb6e2, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbd0a));
        EXPECT(0xcb, gbc.readMem(0xdee2));
        EXPECT(0xb6, gbc.readMem(0xdee3));
        // CB B6 02D0
        gbc.setState(0xabf4, 0x216b, 0xa340, 0xdb26, 0x5466, 0x42bb, 0x1, 0x0);
        gbc.writeMem(0x42bb, { 0x85 });
        gbc.writeMem(0xabf4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x216b, gbc.sp());
        EXPECT(0xabf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf4));
        EXPECT(0xb6, gbc.readMem(0xabf5));
        // CB B6 02D1
        gbc.setState(0x1dfb, 0xd6af, 0x7730, 0xbdb7, 0x932f, 0x621d, 0x1, 0x1);
        gbc.writeMem(0x1dfb, { 0xcb, 0xb6 });
        gbc.writeMem(0x621d, { 0x90 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd6af, gbc.sp());
        EXPECT(0x1dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 02D2
        gbc.setState(0x2c74, 0xc220, 0x1000, 0x16c6, 0x1c1d, 0x8ef3, 0x0, 0x1);
        gbc.writeMem(0x2c74, { 0xcb, 0xb6 });
        gbc.writeMem(0x8ef3, { 0x71 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0x2c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8ef3));
        // CB B6 02D3
        gbc.setState(0x8460, 0xe436, 0xfa50, 0x241e, 0x9a67, 0xdcc8, 0x1, 0x0);
        gbc.writeMem(0x8460, { 0xcb, 0xb6 });
        gbc.writeMem(0xdcc8, { 0x70 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe436, gbc.sp());
        EXPECT(0x8462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8460));
        EXPECT(0xb6, gbc.readMem(0x8461));
        EXPECT(0x30, gbc.readMem(0xdcc8));
        // CB B6 02D6
        gbc.setState(0xaefb, 0x3d6e, 0x89f0, 0x3820, 0xb05c, 0xb358, 0x0, 0x1);
        gbc.writeMem(0xaefb, { 0xcb, 0xb6 });
        gbc.writeMem(0xb358, { 0x24 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3d6e, gbc.sp());
        EXPECT(0xaefd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaefb));
        EXPECT(0xb6, gbc.readMem(0xaefc));
        EXPECT(0x24, gbc.readMem(0xb358));
        // CB B6 02D7
        gbc.setState(0xd22b, 0x7245, 0x6f80, 0xe9a6, 0x8c0b, 0x9b3, 0x0, 0x0);
        gbc.writeMem(0x9b3, { 0x9e });
        gbc.writeMem(0xd22b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7245, gbc.sp());
        EXPECT(0xd22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22b));
        EXPECT(0xb6, gbc.readMem(0xd22c));
        // CB B6 02DA
        gbc.setState(0x5bba, 0xa02b, 0xa860, 0xb75f, 0x8760, 0x9945, 0x1, 0x1);
        gbc.writeMem(0x5bba, { 0xcb, 0xb6 });
        gbc.writeMem(0x9945, { 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa02b, gbc.sp());
        EXPECT(0x5bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9945));
        // CB B6 02DC
        gbc.setState(0x7e4e, 0xbc24, 0xe70, 0x6f93, 0xc2aa, 0x4290, 0x1, 0x0);
        gbc.writeMem(0x4290, { 0x17 });
        gbc.writeMem(0x7e4e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbc24, gbc.sp());
        EXPECT(0x7e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 02DE
        gbc.setState(0x9a7b, 0xc54c, 0xfdb0, 0xedfb, 0x9235, 0x1853, 0x0, 0x1);
        gbc.writeMem(0x1853, { 0xe });
        gbc.writeMem(0x9a7b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc54c, gbc.sp());
        EXPECT(0x9a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7b));
        EXPECT(0xb6, gbc.readMem(0x9a7c));
        // CB B6 02DF
        gbc.setState(0xa71c, 0x2162, 0x2710, 0x5f3a, 0x1a33, 0xd089, 0x1, 0x1);
        gbc.writeMem(0xa71c, { 0xcb, 0xb6 });
        gbc.writeMem(0xd089, { 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2162, gbc.sp());
        EXPECT(0xa71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71c));
        EXPECT(0xb6, gbc.readMem(0xa71d));
        EXPECT(0x94, gbc.readMem(0xd089));
        // CB B6 02E0
        gbc.setState(0xd2a7, 0x3f43, 0x1d20, 0x2af3, 0xf175, 0xcc62, 0x1, 0x1);
        gbc.writeMem(0xcc62, { 0x15 });
        gbc.writeMem(0xd2a7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3f43, gbc.sp());
        EXPECT(0xd2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcc62));
        EXPECT(0xcb, gbc.readMem(0xd2a7));
        EXPECT(0xb6, gbc.readMem(0xd2a8));
        // CB B6 02E1
        gbc.setState(0x2b9b, 0x475b, 0x9e60, 0xc01f, 0x3d8b, 0x7ec4, 0x1, 0x1);
        gbc.writeMem(0x2b9b, { 0xcb, 0xb6 });
        gbc.writeMem(0x7ec4, { 0xb9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x475b, gbc.sp());
        EXPECT(0x2b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 02E3
        gbc.setState(0xd87b, 0x85ac, 0x3d20, 0x862, 0x8785, 0x8433, 0x1, 0x0);
        gbc.writeMem(0x8433, { 0x5c });
        gbc.writeMem(0xd87b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x85ac, gbc.sp());
        EXPECT(0xd87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x8433));
        EXPECT(0xcb, gbc.readMem(0xd87b));
        EXPECT(0xb6, gbc.readMem(0xd87c));
        // CB B6 02E4
        gbc.setState(0x4325, 0x3b09, 0xf540, 0x3372, 0xbbff, 0xeb4e, 0x0, 0x1);
        gbc.writeMem(0x4325, { 0xcb, 0xb6 });
        gbc.writeMem(0xeb4e, { 0xa5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3b09, gbc.sp());
        EXPECT(0x4327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xeb4e));
        // CB B6 02E5
        gbc.setState(0xa3d6, 0x34c3, 0xdcb0, 0x8734, 0xf1cf, 0x841d, 0x1, 0x0);
        gbc.writeMem(0x841d, { 0xb4 });
        gbc.writeMem(0xa3d6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x34c3, gbc.sp());
        EXPECT(0xa3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x841d));
        EXPECT(0xcb, gbc.readMem(0xa3d6));
        EXPECT(0xb6, gbc.readMem(0xa3d7));
        // CB B6 02E7
        gbc.setState(0x6433, 0x3004, 0x1f80, 0x5b99, 0x7c26, 0x6ec0, 0x0, 0x0);
        gbc.writeMem(0x6433, { 0xcb, 0xb6 });
        gbc.writeMem(0x6ec0, { 0xa });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3004, gbc.sp());
        EXPECT(0x6435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 02E8
        gbc.setState(0xbf03, 0x9bb6, 0x1d00, 0x99dd, 0x2cb, 0x72eb, 0x0, 0x0);
        gbc.writeMem(0x72eb, { 0x8e });
        gbc.writeMem(0xbf03, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9bb6, gbc.sp());
        EXPECT(0xbf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf03));
        EXPECT(0xb6, gbc.readMem(0xbf04));
        // CB B6 02E9
        gbc.setState(0x4deb, 0xd561, 0xff40, 0x3641, 0x7c20, 0xeb02, 0x1, 0x0);
        gbc.writeMem(0x4deb, { 0xcb, 0xb6 });
        gbc.writeMem(0xeb02, { 0xd7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd561, gbc.sp());
        EXPECT(0x4ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeb02));
        // CB B6 02EA
        gbc.setState(0x11dc, 0x6ef8, 0x3730, 0xeb62, 0xa34f, 0xaaae, 0x0, 0x0);
        gbc.writeMem(0x11dc, { 0xcb, 0xb6 });
        gbc.writeMem(0xaaae, { 0x56 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6ef8, gbc.sp());
        EXPECT(0x11de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaaae));
        // CB B6 02EC
        gbc.setState(0x170b, 0xd975, 0x1740, 0xbde6, 0x914c, 0x21e0, 0x1, 0x0);
        gbc.writeMem(0x170b, { 0xcb, 0xb6 });
        gbc.writeMem(0x21e0, { 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd975, gbc.sp());
        EXPECT(0x170d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 02EF
        gbc.setState(0x18cc, 0x1729, 0x63e0, 0x2ad0, 0xa52e, 0x9708, 0x1, 0x0);
        gbc.writeMem(0x18cc, { 0xcb, 0xb6 });
        gbc.writeMem(0x9708, { 0x92 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1729, gbc.sp());
        EXPECT(0x18ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9708));
        // CB B6 02F0
        gbc.setState(0xcf70, 0x2839, 0x820, 0x1c31, 0x8800, 0xc074, 0x1, 0x0);
        gbc.writeMem(0xc074, { 0xa3 });
        gbc.writeMem(0xcf70, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2839, gbc.sp());
        EXPECT(0xcf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc074));
        EXPECT(0xcb, gbc.readMem(0xcf70));
        EXPECT(0xb6, gbc.readMem(0xcf71));
        // CB B6 02F1
        gbc.setState(0xc215, 0xcfe3, 0x250, 0x2cac, 0x7ad8, 0xbb59, 0x1, 0x1);
        gbc.writeMem(0xbb59, { 0x9f });
        gbc.writeMem(0xc215, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcfe3, gbc.sp());
        EXPECT(0xc217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbb59));
        EXPECT(0xcb, gbc.readMem(0xc215));
        EXPECT(0xb6, gbc.readMem(0xc216));
        // CB B6 02F3
        gbc.setState(0x380e, 0x25be, 0x1f0, 0x4508, 0x21ea, 0xed06, 0x0, 0x1);
        gbc.writeMem(0x380e, { 0xcb, 0xb6 });
        gbc.writeMem(0xed06, { 0x7c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x25be, gbc.sp());
        EXPECT(0x3810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xed06));
        // CB B6 02F5
        gbc.setState(0xc7b0, 0xbed6, 0xe660, 0x895c, 0x305a, 0x9382, 0x0, 0x0);
        gbc.writeMem(0x9382, { 0x41 });
        gbc.writeMem(0xc7b0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbed6, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x9382));
        EXPECT(0xcb, gbc.readMem(0xc7b0));
        EXPECT(0xb6, gbc.readMem(0xc7b1));
        // CB B6 02F8
        gbc.setState(0x6cca, 0xb650, 0xdd50, 0xb2a, 0x991, 0xb660, 0x1, 0x1);
        gbc.writeMem(0x6cca, { 0xcb, 0xb6 });
        gbc.writeMem(0xb660, { 0x3e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb650, gbc.sp());
        EXPECT(0x6ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb660));
        // CB B6 02FA
        gbc.setState(0xbf61, 0xf8a4, 0xe2b0, 0x6a47, 0x746, 0xa714, 0x0, 0x1);
        gbc.writeMem(0xa714, { 0xa2 });
        gbc.writeMem(0xbf61, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf8a4, gbc.sp());
        EXPECT(0xbf63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa714));
        EXPECT(0xcb, gbc.readMem(0xbf61));
        EXPECT(0xb6, gbc.readMem(0xbf62));
        // CB B6 02FB
        gbc.setState(0x48e4, 0x1ab6, 0x43b0, 0xb756, 0xb928, 0xff26, 0x1, 0x1);
        gbc.writeMem(0x48e4, { 0xcb, 0xb6 });
        gbc.writeMem(0xff26, { 0x57 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1ab6, gbc.sp());
        EXPECT(0x48e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xff26));
        // CB B6 02FD
        gbc.setState(0x1953, 0xb239, 0xb020, 0x8f21, 0xe252, 0xc2e3, 0x0, 0x1);
        gbc.writeMem(0x1953, { 0xcb, 0xb6 });
        gbc.writeMem(0xc2e3, { 0xdf });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb239, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc2e3));
        // CB B6 02FF
        gbc.setState(0x6e8e, 0x264b, 0x5160, 0x4641, 0x70f4, 0x28e0, 0x1, 0x1);
        gbc.writeMem(0x28e0, { 0x35 });
        gbc.writeMem(0x6e8e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x264b, gbc.sp());
        EXPECT(0x6e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0300
        gbc.setState(0x5f7f, 0x6b81, 0x9ce0, 0x2699, 0x2993, 0xf5e, 0x0, 0x1);
        gbc.writeMem(0xf5e, { 0x33 });
        gbc.writeMem(0x5f7f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6b81, gbc.sp());
        EXPECT(0x5f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0305
        gbc.setState(0x6236, 0x3132, 0x8800, 0xf30e, 0xddb1, 0x7faa, 0x1, 0x0);
        gbc.writeMem(0x6236, { 0xcb, 0xb6 });
        gbc.writeMem(0x7faa, { 0x92 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3132, gbc.sp());
        EXPECT(0x6238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0306
        gbc.setState(0x43a9, 0xaed3, 0x7890, 0x8d90, 0x897a, 0xa2e4, 0x0, 0x0);
        gbc.writeMem(0x43a9, { 0xcb, 0xb6 });
        gbc.writeMem(0xa2e4, { 0xf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaed3, gbc.sp());
        EXPECT(0x43ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xa2e4));
        // CB B6 0307
        gbc.setState(0xa72f, 0x75ac, 0xcf70, 0xa834, 0x4809, 0x249d, 0x0, 0x0);
        gbc.writeMem(0x249d, { 0x83 });
        gbc.writeMem(0xa72f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x75ac, gbc.sp());
        EXPECT(0xa731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72f));
        EXPECT(0xb6, gbc.readMem(0xa730));
        // CB B6 0308
        gbc.setState(0xa699, 0x232c, 0x5bf0, 0xa6ad, 0xf0bb, 0x4fc2, 0x0, 0x1);
        gbc.writeMem(0x4fc2, { 0xa7 });
        gbc.writeMem(0xa699, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x232c, gbc.sp());
        EXPECT(0xa69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa699));
        EXPECT(0xb6, gbc.readMem(0xa69a));
        // CB B6 0309
        gbc.setState(0x5c1, 0xc0ae, 0x84b0, 0x75ae, 0xe3a, 0xd563, 0x1, 0x1);
        gbc.writeMem(0x5c1, { 0xcb, 0xb6 });
        gbc.writeMem(0xd563, { 0x19 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc0ae, gbc.sp());
        EXPECT(0x5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd563));
        // CB B6 030A
        gbc.setState(0x6813, 0xad25, 0x1a00, 0x5173, 0xf1f4, 0x2583, 0x1, 0x1);
        gbc.writeMem(0x2583, { 0xb2 });
        gbc.writeMem(0x6813, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xad25, gbc.sp());
        EXPECT(0x6815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 030B
        gbc.setState(0x91cd, 0xa3e6, 0xea70, 0x9191, 0x193d, 0xc05a, 0x1, 0x1);
        gbc.writeMem(0x91cd, { 0xcb, 0xb6 });
        gbc.writeMem(0xc05a, { 0x26 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa3e6, gbc.sp());
        EXPECT(0x91cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cd));
        EXPECT(0xb6, gbc.readMem(0x91ce));
        EXPECT(0x26, gbc.readMem(0xc05a));
        // CB B6 030C
        gbc.setState(0x44e9, 0xaaac, 0xf410, 0xec89, 0xec88, 0xcc5, 0x0, 0x0);
        gbc.writeMem(0xcc5, { 0x2e });
        gbc.writeMem(0x44e9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xaaac, gbc.sp());
        EXPECT(0x44eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 030D
        gbc.setState(0xe2da, 0x614, 0xe890, 0x8e29, 0x1e64, 0xa1b6, 0x0, 0x0);
        gbc.writeMem(0xa1b6, { 0xc0 });
        gbc.writeMem(0xe2da, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x614, gbc.sp());
        EXPECT(0xe2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa1b6));
        EXPECT(0xcb, gbc.readMem(0xe2da));
        EXPECT(0xb6, gbc.readMem(0xe2db));
        // CB B6 030E
        gbc.setState(0xe971, 0x8193, 0x33f0, 0x4805, 0xa43f, 0x2d7a, 0x1, 0x0);
        gbc.writeMem(0x2d7a, { 0x8a });
        gbc.writeMem(0xe971, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8193, gbc.sp());
        EXPECT(0xe973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe971));
        EXPECT(0xb6, gbc.readMem(0xe972));
        // CB B6 030F
        gbc.setState(0x3e4d, 0xfedf, 0x4560, 0x21cb, 0xb260, 0x67e3, 0x1, 0x0);
        gbc.writeMem(0x3e4d, { 0xcb, 0xb6 });
        gbc.writeMem(0x67e3, { 0x37 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfedf, gbc.sp());
        EXPECT(0x3e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0310
        gbc.setState(0xbbb1, 0x4de3, 0xa3d0, 0xb11b, 0xf4cf, 0xd1a5, 0x0, 0x0);
        gbc.writeMem(0xbbb1, { 0xcb, 0xb6 });
        gbc.writeMem(0xd1a5, { 0x6d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4de3, gbc.sp());
        EXPECT(0xbbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb1));
        EXPECT(0xb6, gbc.readMem(0xbbb2));
        EXPECT(0x2d, gbc.readMem(0xd1a5));
        // CB B6 0311
        gbc.setState(0xdafc, 0x9693, 0xc7d0, 0x7b84, 0xf45d, 0x822f, 0x0, 0x0);
        gbc.writeMem(0x822f, { 0xf6 });
        gbc.writeMem(0xdafc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9693, gbc.sp());
        EXPECT(0xdafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x822f));
        EXPECT(0xcb, gbc.readMem(0xdafc));
        EXPECT(0xb6, gbc.readMem(0xdafd));
        // CB B6 0313
        gbc.setState(0x5657, 0xba4f, 0xb4a0, 0xbc80, 0x1e25, 0xe7f7, 0x1, 0x1);
        gbc.writeMem(0x5657, { 0xcb, 0xb6 });
        gbc.writeMem(0xe7f7, { 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xba4f, gbc.sp());
        EXPECT(0x5659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe7f7));
        // CB B6 0314
        gbc.setState(0x6100, 0xb2b5, 0xb9b0, 0xdf02, 0x4de2, 0x8f4f, 0x0, 0x1);
        gbc.writeMem(0x6100, { 0xcb, 0xb6 });
        gbc.writeMem(0x8f4f, { 0x19 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb2b5, gbc.sp());
        EXPECT(0x6102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8f4f));
        // CB B6 0317
        gbc.setState(0xe7fb, 0xa407, 0x8f10, 0x949b, 0x34fa, 0x4dc6, 0x0, 0x0);
        gbc.writeMem(0x4dc6, { 0x10 });
        gbc.writeMem(0xe7fb, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa407, gbc.sp());
        EXPECT(0xe7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fb));
        EXPECT(0xb6, gbc.readMem(0xe7fc));
        // CB B6 031A
        gbc.setState(0x4381, 0xff73, 0xdaa0, 0x9f40, 0xc25, 0xbfa7, 0x0, 0x0);
        gbc.writeMem(0x4381, { 0xcb, 0xb6 });
        gbc.writeMem(0xbfa7, { 0xc3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xff73, gbc.sp());
        EXPECT(0x4383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xbfa7));
        // CB B6 031C
        gbc.setState(0x8a6a, 0x538f, 0x3910, 0x66f7, 0x5a24, 0xcff3, 0x1, 0x1);
        gbc.writeMem(0x8a6a, { 0xcb, 0xb6 });
        gbc.writeMem(0xcff3, { 0x1b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x538f, gbc.sp());
        EXPECT(0x8a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6a));
        EXPECT(0xb6, gbc.readMem(0x8a6b));
        EXPECT(0x1b, gbc.readMem(0xcff3));
        // CB B6 031E
        gbc.setState(0x52ca, 0x94d6, 0xec60, 0x70b8, 0x65b0, 0x34c9, 0x1, 0x1);
        gbc.writeMem(0x34c9, { 0x1c });
        gbc.writeMem(0x52ca, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x94d6, gbc.sp());
        EXPECT(0x52cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0320
        gbc.setState(0x406f, 0x824b, 0xac60, 0xf529, 0x2be7, 0xae91, 0x1, 0x0);
        gbc.writeMem(0x406f, { 0xcb, 0xb6 });
        gbc.writeMem(0xae91, { 0x18 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x824b, gbc.sp());
        EXPECT(0x4071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xae91));
        // CB B6 0322
        gbc.setState(0xce38, 0x1d70, 0x8230, 0xce97, 0xbcc, 0xa0b7, 0x0, 0x0);
        gbc.writeMem(0xa0b7, { 0x57 });
        gbc.writeMem(0xce38, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1d70, gbc.sp());
        EXPECT(0xce3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xa0b7));
        EXPECT(0xcb, gbc.readMem(0xce38));
        EXPECT(0xb6, gbc.readMem(0xce39));
        // CB B6 0323
        gbc.setState(0xd1ba, 0x960e, 0xbc20, 0x4384, 0x1bb9, 0xef1b, 0x0, 0x0);
        gbc.writeMem(0xd1ba, { 0xcb, 0xb6 });
        gbc.writeMem(0xef1b, { 0xc2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x960e, gbc.sp());
        EXPECT(0xd1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ba));
        EXPECT(0xb6, gbc.readMem(0xd1bb));
        EXPECT(0x82, gbc.readMem(0xef1b));
        // CB B6 0324
        gbc.setState(0xede, 0x40ae, 0x83b0, 0x80a0, 0xb10c, 0xddc7, 0x1, 0x1);
        gbc.writeMem(0xede, { 0xcb, 0xb6 });
        gbc.writeMem(0xddc7, { 0x62 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x40ae, gbc.sp());
        EXPECT(0xee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xddc7));
        // CB B6 0325
        gbc.setState(0x52b2, 0x8bed, 0x7a0, 0xdd2f, 0x2373, 0xe65f, 0x0, 0x1);
        gbc.writeMem(0x52b2, { 0xcb, 0xb6 });
        gbc.writeMem(0xe65f, { 0x39 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8bed, gbc.sp());
        EXPECT(0x52b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xe65f));
        // CB B6 0328
        gbc.setState(0xd7d1, 0x34b3, 0xc710, 0x381e, 0x2e56, 0x79cb, 0x1, 0x0);
        gbc.writeMem(0x79cb, { 0x4 });
        gbc.writeMem(0xd7d1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x34b3, gbc.sp());
        EXPECT(0xd7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d1));
        EXPECT(0xb6, gbc.readMem(0xd7d2));
        // CB B6 0329
        gbc.setState(0xb077, 0xc1a8, 0xe870, 0x9082, 0x2b46, 0x5184, 0x1, 0x0);
        gbc.writeMem(0x5184, { 0x3 });
        gbc.writeMem(0xb077, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc1a8, gbc.sp());
        EXPECT(0xb079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb077));
        EXPECT(0xb6, gbc.readMem(0xb078));
        // CB B6 032B
        gbc.setState(0x5c9e, 0x4cd8, 0xf6c0, 0x1901, 0xfda2, 0x545e, 0x0, 0x0);
        gbc.writeMem(0x545e, { 0x98 });
        gbc.writeMem(0x5c9e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4cd8, gbc.sp());
        EXPECT(0x5ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 032D
        gbc.setState(0x29b3, 0x3ed5, 0xc7a0, 0x10d0, 0x29a6, 0x4f84, 0x1, 0x1);
        gbc.writeMem(0x29b3, { 0xcb, 0xb6 });
        gbc.writeMem(0x4f84, { 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3ed5, gbc.sp());
        EXPECT(0x29b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 032E
        gbc.setState(0x46b5, 0x479a, 0x4c70, 0x90b9, 0x4f31, 0x575a, 0x1, 0x1);
        gbc.writeMem(0x46b5, { 0xcb, 0xb6 });
        gbc.writeMem(0x575a, { 0x2e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x479a, gbc.sp());
        EXPECT(0x46b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 032F
        gbc.setState(0x6872, 0x56f5, 0x2aa0, 0x7de8, 0x16db, 0xa627, 0x0, 0x0);
        gbc.writeMem(0x6872, { 0xcb, 0xb6 });
        gbc.writeMem(0xa627, { 0xa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x56f5, gbc.sp());
        EXPECT(0x6874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa627));
        // CB B6 0330
        gbc.setState(0x6abe, 0x76a1, 0xb670, 0x3ede, 0xb5e3, 0xd6a7, 0x0, 0x1);
        gbc.writeMem(0x6abe, { 0xcb, 0xb6 });
        gbc.writeMem(0xd6a7, { 0x39 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x76a1, gbc.sp());
        EXPECT(0x6ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xd6a7));
        // CB B6 0334
        gbc.setState(0x410d, 0x1546, 0xec80, 0x9511, 0x319d, 0xb4db, 0x1, 0x0);
        gbc.writeMem(0x410d, { 0xcb, 0xb6 });
        gbc.writeMem(0xb4db, { 0x2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1546, gbc.sp());
        EXPECT(0x410f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb4db));
        // CB B6 0337
        gbc.setState(0x1bd8, 0x43eb, 0x82d0, 0x31a, 0x6be2, 0x34b2, 0x1, 0x0);
        gbc.writeMem(0x1bd8, { 0xcb, 0xb6 });
        gbc.writeMem(0x34b2, { 0xb3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x43eb, gbc.sp());
        EXPECT(0x1bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0339
        gbc.setState(0x2db8, 0x273e, 0x6530, 0x2d8d, 0x6804, 0x48f6, 0x1, 0x0);
        gbc.writeMem(0x2db8, { 0xcb, 0xb6 });
        gbc.writeMem(0x48f6, { 0x25 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x273e, gbc.sp());
        EXPECT(0x2dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 033A
        gbc.setState(0x8bc, 0x9399, 0xe240, 0x88, 0xf975, 0x35d2, 0x1, 0x0);
        gbc.writeMem(0x8bc, { 0xcb, 0xb6 });
        gbc.writeMem(0x35d2, { 0x2a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9399, gbc.sp());
        EXPECT(0x8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 033C
        gbc.setState(0xd078, 0x7e88, 0xd010, 0xf1d4, 0xd2f4, 0xdd65, 0x0, 0x1);
        gbc.writeMem(0xd078, { 0xcb, 0xb6 });
        gbc.writeMem(0xdd65, { 0xf0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7e88, gbc.sp());
        EXPECT(0xd07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd078));
        EXPECT(0xb6, gbc.readMem(0xd079));
        EXPECT(0xb0, gbc.readMem(0xdd65));
        // CB B6 033D
        gbc.setState(0x12a8, 0x6c83, 0x7700, 0x6d4b, 0xecc4, 0x4178, 0x1, 0x0);
        gbc.writeMem(0x12a8, { 0xcb, 0xb6 });
        gbc.writeMem(0x4178, { 0x92 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6c83, gbc.sp());
        EXPECT(0x12aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 033F
        gbc.setState(0x8fcf, 0xb831, 0x7740, 0xee36, 0x5e42, 0x6b51, 0x1, 0x0);
        gbc.writeMem(0x6b51, { 0xb5 });
        gbc.writeMem(0x8fcf, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb831, gbc.sp());
        EXPECT(0x8fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcf));
        EXPECT(0xb6, gbc.readMem(0x8fd0));
        // CB B6 0342
        gbc.setState(0x1416, 0xd7a2, 0xaed0, 0xb71d, 0xc868, 0x1b76, 0x1, 0x1);
        gbc.writeMem(0x1416, { 0xcb, 0xb6 });
        gbc.writeMem(0x1b76, { 0x15 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd7a2, gbc.sp());
        EXPECT(0x1418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0343
        gbc.setState(0x9322, 0xb7c1, 0xa80, 0xda28, 0x867a, 0x4d2c, 0x1, 0x0);
        gbc.writeMem(0x4d2c, { 0x32 });
        gbc.writeMem(0x9322, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb7c1, gbc.sp());
        EXPECT(0x9324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9322));
        EXPECT(0xb6, gbc.readMem(0x9323));
        // CB B6 0344
        gbc.setState(0x6b75, 0x36d4, 0xad00, 0x8100, 0xbdc5, 0x35d2, 0x0, 0x1);
        gbc.writeMem(0x35d2, { 0x2a });
        gbc.writeMem(0x6b75, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x36d4, gbc.sp());
        EXPECT(0x6b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0346
        gbc.setState(0xbd96, 0x171f, 0x5e20, 0xb706, 0x9f9d, 0xc1d3, 0x1, 0x0);
        gbc.writeMem(0xbd96, { 0xcb, 0xb6 });
        gbc.writeMem(0xc1d3, { 0xd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x171f, gbc.sp());
        EXPECT(0xbd98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd96));
        EXPECT(0xb6, gbc.readMem(0xbd97));
        EXPECT(0xd, gbc.readMem(0xc1d3));
        // CB B6 0347
        gbc.setState(0xe181, 0xf3c5, 0x72c0, 0xbc8, 0xe0f7, 0x4a57, 0x0, 0x1);
        gbc.writeMem(0x4a57, { 0xab });
        gbc.writeMem(0xe181, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf3c5, gbc.sp());
        EXPECT(0xe183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe181));
        EXPECT(0xb6, gbc.readMem(0xe182));
        // CB B6 0348
        gbc.setState(0x5ef9, 0x8383, 0x93c0, 0xc32b, 0x2082, 0xa836, 0x0, 0x1);
        gbc.writeMem(0x5ef9, { 0xcb, 0xb6 });
        gbc.writeMem(0xa836, { 0xc3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8383, gbc.sp());
        EXPECT(0x5efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xa836));
        // CB B6 0349
        gbc.setState(0x71b5, 0xca42, 0xf2a0, 0x5492, 0x8351, 0xecb1, 0x1, 0x1);
        gbc.writeMem(0x71b5, { 0xcb, 0xb6 });
        gbc.writeMem(0xecb1, { 0x7d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xca42, gbc.sp());
        EXPECT(0x71b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xecb1));
        // CB B6 034A
        gbc.setState(0xbeb0, 0x113f, 0xa610, 0xf69a, 0xec38, 0xaa48, 0x0, 0x1);
        gbc.writeMem(0xaa48, { 0xd5 });
        gbc.writeMem(0xbeb0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x113f, gbc.sp());
        EXPECT(0xbeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xaa48));
        EXPECT(0xcb, gbc.readMem(0xbeb0));
        EXPECT(0xb6, gbc.readMem(0xbeb1));
        // CB B6 034C
        gbc.setState(0xc19c, 0x1379, 0xaab0, 0xed7c, 0x9662, 0x8a3f, 0x0, 0x0);
        gbc.writeMem(0x8a3f, { 0x79 });
        gbc.writeMem(0xc19c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1379, gbc.sp());
        EXPECT(0xc19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8a3f));
        EXPECT(0xcb, gbc.readMem(0xc19c));
        EXPECT(0xb6, gbc.readMem(0xc19d));
        // CB B6 034D
        gbc.setState(0x7431, 0xf3ce, 0x9190, 0x7c93, 0x6959, 0xac0c, 0x1, 0x0);
        gbc.writeMem(0x7431, { 0xcb, 0xb6 });
        gbc.writeMem(0xac0c, { 0x6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf3ce, gbc.sp());
        EXPECT(0x7433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xac0c));
        // CB B6 0351
        gbc.setState(0x49d5, 0xef7c, 0xed0, 0xba92, 0x4a6a, 0x6a2, 0x1, 0x1);
        gbc.writeMem(0x6a2, { 0x6 });
        gbc.writeMem(0x49d5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xef7c, gbc.sp());
        EXPECT(0x49d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0352
        gbc.setState(0x542b, 0x3790, 0x82e0, 0xba8c, 0x4903, 0x95fe, 0x1, 0x0);
        gbc.writeMem(0x542b, { 0xcb, 0xb6 });
        gbc.writeMem(0x95fe, { 0xb0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3790, gbc.sp());
        EXPECT(0x542d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x95fe));
        // CB B6 0354
        gbc.setState(0xed96, 0xea67, 0xc840, 0x64f3, 0xf34, 0x4c40, 0x0, 0x0);
        gbc.writeMem(0x4c40, { 0x38 });
        gbc.writeMem(0xed96, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xea67, gbc.sp());
        EXPECT(0xed98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed96));
        EXPECT(0xb6, gbc.readMem(0xed97));
        // CB B6 0356
        gbc.setState(0x5d3a, 0x6391, 0xb2f0, 0xe83b, 0x16c5, 0xacd4, 0x1, 0x1);
        gbc.writeMem(0x5d3a, { 0xcb, 0xb6 });
        gbc.writeMem(0xacd4, { 0xbb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6391, gbc.sp());
        EXPECT(0x5d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xacd4));
        // CB B6 0357
        gbc.setState(0x37b3, 0xf33f, 0xb480, 0xfdfb, 0x221a, 0x7943, 0x1, 0x1);
        gbc.writeMem(0x37b3, { 0xcb, 0xb6 });
        gbc.writeMem(0x7943, { 0x12 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf33f, gbc.sp());
        EXPECT(0x37b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0358
        gbc.setState(0x8f30, 0x37dd, 0xa870, 0x4473, 0x419b, 0xddd3, 0x0, 0x1);
        gbc.writeMem(0x8f30, { 0xcb, 0xb6 });
        gbc.writeMem(0xddd3, { 0xc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x37dd, gbc.sp());
        EXPECT(0x8f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f30));
        EXPECT(0xb6, gbc.readMem(0x8f31));
        EXPECT(0xc, gbc.readMem(0xddd3));
        // CB B6 035A
        gbc.setState(0xa1d4, 0x2ea1, 0x4930, 0xb9c7, 0xf1d7, 0xd96c, 0x1, 0x1);
        gbc.writeMem(0xa1d4, { 0xcb, 0xb6 });
        gbc.writeMem(0xd96c, { 0xb4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0xa1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d4));
        EXPECT(0xb6, gbc.readMem(0xa1d5));
        EXPECT(0xb4, gbc.readMem(0xd96c));
        // CB B6 035C
        gbc.setState(0xa0f7, 0x8cdc, 0x7c10, 0x7831, 0xd4be, 0xbd91, 0x0, 0x1);
        gbc.writeMem(0xa0f7, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd91, { 0xb1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8cdc, gbc.sp());
        EXPECT(0xa0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f7));
        EXPECT(0xb6, gbc.readMem(0xa0f8));
        EXPECT(0xb1, gbc.readMem(0xbd91));
        // CB B6 035D
        gbc.setState(0x397c, 0x1dea, 0x82d0, 0x6b52, 0x8a11, 0xefff, 0x1, 0x1);
        gbc.writeMem(0x397c, { 0xcb, 0xb6 });
        gbc.writeMem(0xefff, { 0x7e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1dea, gbc.sp());
        EXPECT(0x397e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xefff));
        // CB B6 035E
        gbc.setState(0xd289, 0xc8f, 0x3370, 0xe336, 0xc168, 0x27fc, 0x0, 0x1);
        gbc.writeMem(0x27fc, { 0xb1 });
        gbc.writeMem(0xd289, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc8f, gbc.sp());
        EXPECT(0xd28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd289));
        EXPECT(0xb6, gbc.readMem(0xd28a));
        // CB B6 035F
        gbc.setState(0x5ef0, 0xa01d, 0xc4f0, 0x4963, 0x366f, 0xf8d6, 0x1, 0x1);
        gbc.writeMem(0x5ef0, { 0xcb, 0xb6 });
        gbc.writeMem(0xf8d6, { 0x17 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa01d, gbc.sp());
        EXPECT(0x5ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xf8d6));
        // CB B6 0360
        gbc.setState(0x745d, 0x4ef3, 0x7c40, 0xe60e, 0x752a, 0xe8c8, 0x0, 0x0);
        gbc.writeMem(0x745d, { 0xcb, 0xb6 });
        gbc.writeMem(0xe8c8, { 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4ef3, gbc.sp());
        EXPECT(0x745f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe8c8));
        // CB B6 0361
        gbc.setState(0xb6ae, 0xc303, 0x34a0, 0x9f3, 0x530a, 0x9d8a, 0x1, 0x1);
        gbc.writeMem(0x9d8a, { 0xc5 });
        gbc.writeMem(0xb6ae, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc303, gbc.sp());
        EXPECT(0xb6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9d8a));
        EXPECT(0xcb, gbc.readMem(0xb6ae));
        EXPECT(0xb6, gbc.readMem(0xb6af));
        // CB B6 0362
        gbc.setState(0x96f5, 0x3345, 0x2da0, 0x313e, 0x6b4c, 0x756c, 0x1, 0x1);
        gbc.writeMem(0x756c, { 0xac });
        gbc.writeMem(0x96f5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3345, gbc.sp());
        EXPECT(0x96f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f5));
        EXPECT(0xb6, gbc.readMem(0x96f6));
        // CB B6 0363
        gbc.setState(0x956e, 0x5ff4, 0x9d80, 0xcd20, 0xe6c0, 0xc431, 0x0, 0x0);
        gbc.writeMem(0x956e, { 0xcb, 0xb6 });
        gbc.writeMem(0xc431, { 0xb6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5ff4, gbc.sp());
        EXPECT(0x9570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956e));
        EXPECT(0xb6, gbc.readMem(0x956f));
        EXPECT(0xb6, gbc.readMem(0xc431));
        // CB B6 0364
        gbc.setState(0x9993, 0xc045, 0xed20, 0xac66, 0xfcd4, 0xd454, 0x1, 0x0);
        gbc.writeMem(0x9993, { 0xcb, 0xb6 });
        gbc.writeMem(0xd454, { 0x42 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc045, gbc.sp());
        EXPECT(0x9995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9993));
        EXPECT(0xb6, gbc.readMem(0x9994));
        EXPECT(0x2, gbc.readMem(0xd454));
        // CB B6 0365
        gbc.setState(0xafb8, 0xb05e, 0x2120, 0x4e92, 0x3438, 0x54d8, 0x0, 0x1);
        gbc.writeMem(0x54d8, { 0x2e });
        gbc.writeMem(0xafb8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb05e, gbc.sp());
        EXPECT(0xafba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb8));
        EXPECT(0xb6, gbc.readMem(0xafb9));
        // CB B6 0366
        gbc.setState(0x302e, 0x7f40, 0x3ed0, 0x3ec7, 0xffbe, 0x96e5, 0x1, 0x0);
        gbc.writeMem(0x302e, { 0xcb, 0xb6 });
        gbc.writeMem(0x96e5, { 0x56 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7f40, gbc.sp());
        EXPECT(0x3030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x96e5));
        // CB B6 0368
        gbc.setState(0x7602, 0x422b, 0x6000, 0xf501, 0x9753, 0xcb51, 0x1, 0x1);
        gbc.writeMem(0x7602, { 0xcb, 0xb6 });
        gbc.writeMem(0xcb51, { 0x86 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x422b, gbc.sp());
        EXPECT(0x7604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcb51));
        // CB B6 0369
        gbc.setState(0xb852, 0xc835, 0x8a80, 0x7062, 0xb840, 0x67c0, 0x0, 0x0);
        gbc.writeMem(0x67c0, { 0x1 });
        gbc.writeMem(0xb852, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc835, gbc.sp());
        EXPECT(0xb854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb852));
        EXPECT(0xb6, gbc.readMem(0xb853));
        // CB B6 036C
        gbc.setState(0x383d, 0xf480, 0xa180, 0x7f2d, 0x6152, 0x6bb0, 0x1, 0x1);
        gbc.writeMem(0x383d, { 0xcb, 0xb6 });
        gbc.writeMem(0x6bb0, { 0x2e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf480, gbc.sp());
        EXPECT(0x383f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 036E
        gbc.setState(0x7adc, 0x53aa, 0x7050, 0x5e77, 0xaa76, 0x916, 0x1, 0x1);
        gbc.writeMem(0x916, { 0x26 });
        gbc.writeMem(0x7adc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x53aa, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 036F
        gbc.setState(0x969f, 0x478c, 0x9f10, 0x3dc4, 0x1a7e, 0x884e, 0x0, 0x1);
        gbc.writeMem(0x884e, { 0xe7 });
        gbc.writeMem(0x969f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x478c, gbc.sp());
        EXPECT(0x96a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x884e));
        EXPECT(0xcb, gbc.readMem(0x969f));
        EXPECT(0xb6, gbc.readMem(0x96a0));
        // CB B6 0370
        gbc.setState(0xb39, 0x9625, 0xe830, 0x72a4, 0x6d11, 0x6c19, 0x1, 0x1);
        gbc.writeMem(0xb39, { 0xcb, 0xb6 });
        gbc.writeMem(0x6c19, { 0x84 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9625, gbc.sp());
        EXPECT(0xb3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0371
        gbc.setState(0xebcb, 0xa7b4, 0xbad0, 0x356f, 0xc613, 0xcbdf, 0x0, 0x1);
        gbc.writeMem(0xcbdf, { 0xcf });
        gbc.writeMem(0xebcb, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa7b4, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcbdf));
        EXPECT(0xcb, gbc.readMem(0xebcb));
        EXPECT(0xb6, gbc.readMem(0xebcc));
        // CB B6 0372
        gbc.setState(0x7be9, 0xfe36, 0x82b0, 0x674d, 0xbd26, 0x5476, 0x1, 0x1);
        gbc.writeMem(0x5476, { 0x5 });
        gbc.writeMem(0x7be9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfe36, gbc.sp());
        EXPECT(0x7beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0373
        gbc.setState(0xc018, 0x1dd3, 0x67d0, 0x4c3b, 0x7c53, 0x7574, 0x0, 0x1);
        gbc.writeMem(0x7574, { 0x3d });
        gbc.writeMem(0xc018, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1dd3, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc018));
        EXPECT(0xb6, gbc.readMem(0xc019));
        // CB B6 0374
        gbc.setState(0x113a, 0x9095, 0x3cc0, 0x3f69, 0x52b4, 0xb861, 0x1, 0x0);
        gbc.writeMem(0x113a, { 0xcb, 0xb6 });
        gbc.writeMem(0xb861, { 0x36 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9095, gbc.sp());
        EXPECT(0x113c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb861));
        // CB B6 0375
        gbc.setState(0x75d9, 0xc597, 0x6aa0, 0x1d7, 0xe061, 0x8d5f, 0x0, 0x0);
        gbc.writeMem(0x75d9, { 0xcb, 0xb6 });
        gbc.writeMem(0x8d5f, { 0x61 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc597, gbc.sp());
        EXPECT(0x75db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8d5f));
        // CB B6 0376
        gbc.setState(0xa3df, 0xbc9, 0xb7b0, 0x76a7, 0x2665, 0x4fbf, 0x1, 0x0);
        gbc.writeMem(0x4fbf, { 0x2e });
        gbc.writeMem(0xa3df, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbc9, gbc.sp());
        EXPECT(0xa3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3df));
        EXPECT(0xb6, gbc.readMem(0xa3e0));
        // CB B6 0377
        gbc.setState(0x1abb, 0x1170, 0xfca0, 0xc3d, 0x84f2, 0xbd65, 0x0, 0x1);
        gbc.writeMem(0x1abb, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd65, { 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1170, gbc.sp());
        EXPECT(0x1abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbd65));
        // CB B6 0378
        gbc.setState(0xdbea, 0xed34, 0x7010, 0x247a, 0xae68, 0x91da, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xdb });
        gbc.writeMem(0xdbea, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xed34, gbc.sp());
        EXPECT(0xdbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x91da));
        EXPECT(0xcb, gbc.readMem(0xdbea));
        EXPECT(0xb6, gbc.readMem(0xdbeb));
        // CB B6 0379
        gbc.setState(0x5cf9, 0xfdee, 0x5730, 0x3a9a, 0x75d7, 0x8e48, 0x0, 0x1);
        gbc.writeMem(0x5cf9, { 0xcb, 0xb6 });
        gbc.writeMem(0x8e48, { 0x3a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfdee, gbc.sp());
        EXPECT(0x5cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8e48));
        // CB B6 037A
        gbc.setState(0xa471, 0x477, 0xb500, 0x96f4, 0x7ac, 0xb7c7, 0x1, 0x1);
        gbc.writeMem(0xa471, { 0xcb, 0xb6 });
        gbc.writeMem(0xb7c7, { 0x2d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x477, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa471));
        EXPECT(0xb6, gbc.readMem(0xa472));
        EXPECT(0x2d, gbc.readMem(0xb7c7));
        // CB B6 037B
        gbc.setState(0x11f1, 0xa021, 0xa00, 0xdad2, 0xc253, 0x5bcb, 0x0, 0x0);
        gbc.writeMem(0x11f1, { 0xcb, 0xb6 });
        gbc.writeMem(0x5bcb, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa021, gbc.sp());
        EXPECT(0x11f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 037C
        gbc.setState(0xe69e, 0x469d, 0xa450, 0xcbb6, 0xa081, 0x4ce, 0x1, 0x0);
        gbc.writeMem(0x4ce, { 0xbb });
        gbc.writeMem(0xe69e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x469d, gbc.sp());
        EXPECT(0xe6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69e));
        EXPECT(0xb6, gbc.readMem(0xe69f));
        // CB B6 037E
        gbc.setState(0x818e, 0x4c42, 0x5df0, 0xd56a, 0x3ebd, 0x9eb0, 0x0, 0x0);
        gbc.writeMem(0x818e, { 0xcb, 0xb6 });
        gbc.writeMem(0x9eb0, { 0xd3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4c42, gbc.sp());
        EXPECT(0x8190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818e));
        EXPECT(0xb6, gbc.readMem(0x818f));
        EXPECT(0x93, gbc.readMem(0x9eb0));
        // CB B6 037F
        gbc.setState(0x4c3, 0x8046, 0xa170, 0x5eca, 0x58c2, 0xfa79, 0x1, 0x1);
        gbc.writeMem(0x4c3, { 0xcb, 0xb6 });
        gbc.writeMem(0xfa79, { 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8046, gbc.sp());
        EXPECT(0x4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xfa79));
        // CB B6 0381
        gbc.setState(0x556e, 0x80b8, 0x5730, 0xae50, 0x8c92, 0xff5c, 0x1, 0x0);
        gbc.writeMem(0x556e, { 0xcb, 0xb6 });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x80b8, gbc.sp());
        EXPECT(0x5570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xff5c));
        // CB B6 0382
        gbc.setState(0x5e68, 0xd67, 0x5200, 0x36a5, 0x2afa, 0x6cf0, 0x1, 0x0);
        gbc.writeMem(0x5e68, { 0xcb, 0xb6 });
        gbc.writeMem(0x6cf0, { 0x9b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd67, gbc.sp());
        EXPECT(0x5e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0383
        gbc.setState(0x768c, 0x23b2, 0xdbb0, 0x9388, 0x43ff, 0x37fa, 0x0, 0x1);
        gbc.writeMem(0x37fa, { 0xad });
        gbc.writeMem(0x768c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x23b2, gbc.sp());
        EXPECT(0x768e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0384
        gbc.setState(0x5b48, 0x7445, 0xda0, 0x9aec, 0xe069, 0x5e12, 0x0, 0x0);
        gbc.writeMem(0x5b48, { 0xcb, 0xb6 });
        gbc.writeMem(0x5e12, { 0xba });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7445, gbc.sp());
        EXPECT(0x5b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 0385
        gbc.setState(0x5230, 0xa28d, 0x1ed0, 0x7e56, 0x18c3, 0x94e4, 0x0, 0x0);
        gbc.writeMem(0x5230, { 0xcb, 0xb6 });
        gbc.writeMem(0x94e4, { 0x2b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa28d, gbc.sp());
        EXPECT(0x5232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x94e4));
        // CB B6 0387
        gbc.setState(0xcf12, 0x518c, 0xfdb0, 0x92ad, 0x5b3b, 0x6ad4, 0x1, 0x1);
        gbc.writeMem(0x6ad4, { 0x20 });
        gbc.writeMem(0xcf12, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x518c, gbc.sp());
        EXPECT(0xcf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf12));
        EXPECT(0xb6, gbc.readMem(0xcf13));
        // CB B6 0388
        gbc.setState(0x9549, 0x620, 0xd170, 0x48a, 0xaaeb, 0x8f, 0x1, 0x1);
        gbc.writeMem(0x8f, { 0x1 });
        gbc.writeMem(0x9549, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x620, gbc.sp());
        EXPECT(0x954b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9549));
        EXPECT(0xb6, gbc.readMem(0x954a));
        // CB B6 0389
        gbc.setState(0xd12c, 0x61ad, 0xce70, 0xd9c, 0x96e4, 0x3c91, 0x0, 0x0);
        gbc.writeMem(0x3c91, { 0xbf });
        gbc.writeMem(0xd12c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x61ad, gbc.sp());
        EXPECT(0xd12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12c));
        EXPECT(0xb6, gbc.readMem(0xd12d));
        // CB B6 038E
        gbc.setState(0xed2e, 0xf40, 0xf4b0, 0xe433, 0x145a, 0x9df7, 0x0, 0x1);
        gbc.writeMem(0x9df7, { 0x40 });
        gbc.writeMem(0xed2e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf40, gbc.sp());
        EXPECT(0xed30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9df7));
        EXPECT(0xcb, gbc.readMem(0xed2e));
        EXPECT(0xb6, gbc.readMem(0xed2f));
        // CB B6 038F
        gbc.setState(0xb184, 0xef4b, 0x510, 0x920f, 0x478d, 0xca1a, 0x0, 0x0);
        gbc.writeMem(0xb184, { 0xcb, 0xb6 });
        gbc.writeMem(0xca1a, { 0x97 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xef4b, gbc.sp());
        EXPECT(0xb186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb184));
        EXPECT(0xb6, gbc.readMem(0xb185));
        EXPECT(0x97, gbc.readMem(0xca1a));
        // CB B6 0390
        gbc.setState(0x8bff, 0x4e19, 0x9f40, 0xc857, 0xec6f, 0xf202, 0x0, 0x1);
        gbc.writeMem(0x8bff, { 0xcb, 0xb6 });
        gbc.writeMem(0xf202, { 0xbd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4e19, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bff));
        EXPECT(0xb6, gbc.readMem(0x8c00));
        EXPECT(0xbd, gbc.readMem(0xf202));
        // CB B6 0391
        gbc.setState(0x22b4, 0x6b1, 0x9a90, 0x8e5, 0x31e2, 0xaad, 0x1, 0x0);
        gbc.writeMem(0xaad, { 0x9 });
        gbc.writeMem(0x22b4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6b1, gbc.sp());
        EXPECT(0x22b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 0393
        gbc.setState(0x7c48, 0xbab0, 0xb8f0, 0x73a3, 0xddb, 0x83ed, 0x0, 0x0);
        gbc.writeMem(0x7c48, { 0xcb, 0xb6 });
        gbc.writeMem(0x83ed, { 0x18 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbab0, gbc.sp());
        EXPECT(0x7c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x83ed));
        // CB B6 0394
        gbc.setState(0xb775, 0x65a5, 0x4a40, 0xa427, 0x35e5, 0x29ae, 0x1, 0x1);
        gbc.writeMem(0x29ae, { 0x7 });
        gbc.writeMem(0xb775, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x65a5, gbc.sp());
        EXPECT(0xb777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb775));
        EXPECT(0xb6, gbc.readMem(0xb776));
        // CB B6 0397
        gbc.setState(0x1670, 0x26cf, 0x8fa0, 0x7e50, 0x4f16, 0xefa7, 0x1, 0x1);
        gbc.writeMem(0x1670, { 0xcb, 0xb6 });
        gbc.writeMem(0xefa7, { 0xbf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x26cf, gbc.sp());
        EXPECT(0x1672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xefa7));
        // CB B6 0398
        gbc.setState(0xda66, 0x7cbb, 0x41d0, 0x7112, 0xc430, 0x64f6, 0x0, 0x0);
        gbc.writeMem(0x64f6, { 0x9 });
        gbc.writeMem(0xda66, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7cbb, gbc.sp());
        EXPECT(0xda68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda66));
        EXPECT(0xb6, gbc.readMem(0xda67));
        // CB B6 039B
        gbc.setState(0x319c, 0xce42, 0x5f10, 0xd66c, 0x1532, 0xe8f4, 0x1, 0x1);
        gbc.writeMem(0x319c, { 0xcb, 0xb6 });
        gbc.writeMem(0xe8f4, { 0xa });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xce42, gbc.sp());
        EXPECT(0x319e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe8f4));
        // CB B6 039C
        gbc.setState(0x65c1, 0x76d2, 0x410, 0x7d3d, 0x2977, 0xd369, 0x0, 0x1);
        gbc.writeMem(0x65c1, { 0xcb, 0xb6 });
        gbc.writeMem(0xd369, { 0x25 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x76d2, gbc.sp());
        EXPECT(0x65c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd369));
        // CB B6 039D
        gbc.setState(0x3481, 0xfab1, 0xf30, 0xd497, 0x43c5, 0xf107, 0x0, 0x0);
        gbc.writeMem(0x3481, { 0xcb, 0xb6 });
        gbc.writeMem(0xf107, { 0x3a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfab1, gbc.sp());
        EXPECT(0x3483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xf107));
        // CB B6 039E
        gbc.setState(0x9802, 0x3567, 0x6ce0, 0x4eae, 0xc5eb, 0xf267, 0x0, 0x1);
        gbc.writeMem(0x9802, { 0xcb, 0xb6 });
        gbc.writeMem(0xf267, { 0xb1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3567, gbc.sp());
        EXPECT(0x9804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9802));
        EXPECT(0xb6, gbc.readMem(0x9803));
        EXPECT(0xb1, gbc.readMem(0xf267));
        // CB B6 03A0
        gbc.setState(0x53ba, 0x2501, 0xf620, 0xad8b, 0xd8f8, 0xa18b, 0x1, 0x1);
        gbc.writeMem(0x53ba, { 0xcb, 0xb6 });
        gbc.writeMem(0xa18b, { 0x3a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2501, gbc.sp());
        EXPECT(0x53bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xa18b));
        // CB B6 03A1
        gbc.setState(0xe582, 0x864f, 0x1060, 0xe3b, 0x72f8, 0x97f8, 0x1, 0x1);
        gbc.writeMem(0x97f8, { 0x4e });
        gbc.writeMem(0xe582, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x864f, gbc.sp());
        EXPECT(0xe584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x97f8));
        EXPECT(0xcb, gbc.readMem(0xe582));
        EXPECT(0xb6, gbc.readMem(0xe583));
        // CB B6 03A2
        gbc.setState(0x675f, 0xfaa7, 0x2d80, 0x2009, 0xa8ec, 0x6b5, 0x0, 0x1);
        gbc.writeMem(0x6b5, { 0x16 });
        gbc.writeMem(0x675f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfaa7, gbc.sp());
        EXPECT(0x6761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 03A4
        gbc.setState(0xdbb8, 0x65a2, 0x2f0, 0x621c, 0x9059, 0xa84a, 0x1, 0x1);
        gbc.writeMem(0xa84a, { 0xb2 });
        gbc.writeMem(0xdbb8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x65a2, gbc.sp());
        EXPECT(0xdbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa84a));
        EXPECT(0xcb, gbc.readMem(0xdbb8));
        EXPECT(0xb6, gbc.readMem(0xdbb9));
        // CB B6 03A5
        gbc.setState(0x427b, 0xf470, 0x9140, 0x8734, 0xa5ad, 0xf009, 0x1, 0x0);
        gbc.writeMem(0x427b, { 0xcb, 0xb6 });
        gbc.writeMem(0xf009, { 0x5c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0x427d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xf009));
        // CB B6 03A6
        gbc.setState(0x8bdf, 0xfce7, 0xb4e0, 0x23b3, 0xae14, 0x3f1c, 0x0, 0x0);
        gbc.writeMem(0x3f1c, { 0x1b });
        gbc.writeMem(0x8bdf, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfce7, gbc.sp());
        EXPECT(0x8be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdf));
        EXPECT(0xb6, gbc.readMem(0x8be0));
        // CB B6 03A7
        gbc.setState(0x840, 0x396c, 0xb300, 0xd663, 0x4f9a, 0xc943, 0x1, 0x1);
        gbc.writeMem(0x840, { 0xcb, 0xb6 });
        gbc.writeMem(0xc943, { 0xdc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x396c, gbc.sp());
        EXPECT(0x842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc943));
        // CB B6 03A8
        gbc.setState(0x2f61, 0x31e0, 0x84b0, 0xba4e, 0x4de1, 0xc776, 0x0, 0x1);
        gbc.writeMem(0x2f61, { 0xcb, 0xb6 });
        gbc.writeMem(0xc776, { 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x31e0, gbc.sp());
        EXPECT(0x2f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc776));
        // CB B6 03A9
        gbc.setState(0x85c5, 0x70f4, 0xc870, 0xc4bf, 0xf885, 0xfd96, 0x1, 0x1);
        gbc.writeMem(0x85c5, { 0xcb, 0xb6 });
        gbc.writeMem(0xfd96, { 0xe1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x70f4, gbc.sp());
        EXPECT(0x85c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c5));
        EXPECT(0xb6, gbc.readMem(0x85c6));
        EXPECT(0xa1, gbc.readMem(0xfd96));
        // CB B6 03AB
        gbc.setState(0x4d05, 0xb2eb, 0x9300, 0xf390, 0x1f9e, 0xd8e6, 0x0, 0x0);
        gbc.writeMem(0x4d05, { 0xcb, 0xb6 });
        gbc.writeMem(0xd8e6, { 0xc6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb2eb, gbc.sp());
        EXPECT(0x4d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd8e6));
        // CB B6 03AD
        gbc.setState(0x9c17, 0xac3c, 0xd930, 0x6b3f, 0xb684, 0x7920, 0x1, 0x0);
        gbc.writeMem(0x7920, { 0x9d });
        gbc.writeMem(0x9c17, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xac3c, gbc.sp());
        EXPECT(0x9c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c17));
        EXPECT(0xb6, gbc.readMem(0x9c18));
        // CB B6 03AE
        gbc.setState(0x95a2, 0x614e, 0xc00, 0xedd4, 0x63a6, 0xb52e, 0x0, 0x0);
        gbc.writeMem(0x95a2, { 0xcb, 0xb6 });
        gbc.writeMem(0xb52e, { 0x7d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x614e, gbc.sp());
        EXPECT(0x95a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a2));
        EXPECT(0xb6, gbc.readMem(0x95a3));
        EXPECT(0x3d, gbc.readMem(0xb52e));
        // CB B6 03AF
        gbc.setState(0xe523, 0x3c45, 0x7c90, 0x18e2, 0xb7fd, 0xa20c, 0x0, 0x0);
        gbc.writeMem(0xa20c, { 0xda });
        gbc.writeMem(0xe523, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3c45, gbc.sp());
        EXPECT(0xe525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa20c));
        EXPECT(0xcb, gbc.readMem(0xe523));
        EXPECT(0xb6, gbc.readMem(0xe524));
        // CB B6 03B0
        gbc.setState(0xb6ad, 0xd59e, 0x1a00, 0x5cc5, 0xa289, 0xa784, 0x1, 0x1);
        gbc.writeMem(0xa784, { 0x81 });
        gbc.writeMem(0xb6ad, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd59e, gbc.sp());
        EXPECT(0xb6af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa784));
        EXPECT(0xcb, gbc.readMem(0xb6ad));
        EXPECT(0xb6, gbc.readMem(0xb6ae));
        // CB B6 03B1
        gbc.setState(0xeb1, 0xdfa5, 0xf680, 0x7c96, 0xae14, 0xecfb, 0x1, 0x0);
        gbc.writeMem(0xeb1, { 0xcb, 0xb6 });
        gbc.writeMem(0xecfb, { 0x47 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdfa5, gbc.sp());
        EXPECT(0xeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xecfb));
        // CB B6 03B3
        gbc.setState(0x49ff, 0xf54d, 0x2c00, 0x7876, 0x2f8d, 0xa9cb, 0x0, 0x0);
        gbc.writeMem(0x49ff, { 0xcb, 0xb6 });
        gbc.writeMem(0xa9cb, { 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf54d, gbc.sp());
        EXPECT(0x4a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa9cb));
        // CB B6 03B4
        gbc.setState(0x7024, 0x6c2d, 0xb400, 0xbcc4, 0x683f, 0x6f67, 0x0, 0x0);
        gbc.writeMem(0x6f67, { 0x2d });
        gbc.writeMem(0x7024, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6c2d, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 03B6
        gbc.setState(0x8041, 0x6c87, 0xa500, 0xa7d8, 0x54e, 0xdd10, 0x0, 0x0);
        gbc.writeMem(0x8041, { 0xcb, 0xb6 });
        gbc.writeMem(0xdd10, { 0x72 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6c87, gbc.sp());
        EXPECT(0x8043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8041));
        EXPECT(0xb6, gbc.readMem(0x8042));
        EXPECT(0x32, gbc.readMem(0xdd10));
        // CB B6 03B8
        gbc.setState(0x62e3, 0x7511, 0x30e0, 0x1424, 0xcf7b, 0xc890, 0x0, 0x0);
        gbc.writeMem(0x62e3, { 0xcb, 0xb6 });
        gbc.writeMem(0xc890, { 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7511, gbc.sp());
        EXPECT(0x62e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc890));
        // CB B6 03B9
        gbc.setState(0xeeff, 0x2f53, 0x6730, 0x8f48, 0xf93, 0xa78f, 0x0, 0x1);
        gbc.writeMem(0xa78f, { 0xb7 });
        gbc.writeMem(0xeeff, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2f53, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa78f));
        EXPECT(0xcb, gbc.readMem(0xeeff));
        EXPECT(0xb6, gbc.readMem(0xef00));
        // CB B6 03BB
        gbc.setState(0x5b3c, 0x78d1, 0x8fc0, 0xd81, 0x4c46, 0x8133, 0x0, 0x0);
        gbc.writeMem(0x5b3c, { 0xcb, 0xb6 });
        gbc.writeMem(0x8133, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x78d1, gbc.sp());
        EXPECT(0x5b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8133));
        // CB B6 03BC
        gbc.setState(0x437e, 0x10f0, 0x5920, 0xf104, 0x9217, 0xe057, 0x0, 0x1);
        gbc.writeMem(0x437e, { 0xcb, 0xb6 });
        gbc.writeMem(0xe057, { 0xc6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x10f0, gbc.sp());
        EXPECT(0x4380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe057));
        // CB B6 03BD
        gbc.setState(0xd123, 0x24b3, 0xe700, 0x196e, 0x1b7c, 0x727d, 0x0, 0x0);
        gbc.writeMem(0x727d, { 0xaf });
        gbc.writeMem(0xd123, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x24b3, gbc.sp());
        EXPECT(0xd125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd123));
        EXPECT(0xb6, gbc.readMem(0xd124));
        // CB B6 03BE
        gbc.setState(0xe6c1, 0x1f54, 0xafb0, 0x5fab, 0xb89a, 0x3a72, 0x1, 0x0);
        gbc.writeMem(0x3a72, { 0x2a });
        gbc.writeMem(0xe6c1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1f54, gbc.sp());
        EXPECT(0xe6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c1));
        EXPECT(0xb6, gbc.readMem(0xe6c2));
        // CB B6 03BF
        gbc.setState(0x77ab, 0xb674, 0x5e20, 0x291d, 0x4924, 0x304b, 0x1, 0x0);
        gbc.writeMem(0x304b, { 0xa2 });
        gbc.writeMem(0x77ab, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb674, gbc.sp());
        EXPECT(0x77ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 03C0
        gbc.setState(0x4f7, 0x668d, 0x95e0, 0x3e35, 0xdcf7, 0xea16, 0x1, 0x1);
        gbc.writeMem(0x4f7, { 0xcb, 0xb6 });
        gbc.writeMem(0xea16, { 0x2a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x668d, gbc.sp());
        EXPECT(0x4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xea16));
        // CB B6 03C1
        gbc.setState(0x2068, 0x6c29, 0xdb40, 0xbcf8, 0xd439, 0xc3d2, 0x0, 0x0);
        gbc.writeMem(0x2068, { 0xcb, 0xb6 });
        gbc.writeMem(0xc3d2, { 0x81 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6c29, gbc.sp());
        EXPECT(0x206a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc3d2));
        // CB B6 03C3
        gbc.setState(0x2c7d, 0x741, 0x75a0, 0x81e5, 0x8025, 0xab3c, 0x0, 0x0);
        gbc.writeMem(0x2c7d, { 0xcb, 0xb6 });
        gbc.writeMem(0xab3c, { 0xce });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x741, gbc.sp());
        EXPECT(0x2c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xab3c));
        // CB B6 03C4
        gbc.setState(0x7a5e, 0x4481, 0xb320, 0x4d02, 0xd3c9, 0xa196, 0x0, 0x1);
        gbc.writeMem(0x7a5e, { 0xcb, 0xb6 });
        gbc.writeMem(0xa196, { 0x70 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4481, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa196));
        // CB B6 03C5
        gbc.setState(0xa79, 0x2f2e, 0x6fe0, 0xa602, 0x8194, 0x2357, 0x1, 0x1);
        gbc.writeMem(0xa79, { 0xcb, 0xb6 });
        gbc.writeMem(0x2357, { 0xaa });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2f2e, gbc.sp());
        EXPECT(0xa7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 03C6
        gbc.setState(0x7aed, 0x269a, 0x2ff0, 0x613f, 0x63f1, 0xf867, 0x1, 0x0);
        gbc.writeMem(0x7aed, { 0xcb, 0xb6 });
        gbc.writeMem(0xf867, { 0x87 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x269a, gbc.sp());
        EXPECT(0x7aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xf867));
        // CB B6 03C8
        gbc.setState(0xa6b4, 0xc187, 0xea30, 0xd714, 0x6fe1, 0xd2a2, 0x1, 0x0);
        gbc.writeMem(0xa6b4, { 0xcb, 0xb6 });
        gbc.writeMem(0xd2a2, { 0xa5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc187, gbc.sp());
        EXPECT(0xa6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b4));
        EXPECT(0xb6, gbc.readMem(0xa6b5));
        EXPECT(0xa5, gbc.readMem(0xd2a2));
        // CB B6 03CA
        gbc.setState(0x9c3f, 0xd39d, 0xf810, 0x17d, 0x9420, 0xca21, 0x0, 0x0);
        gbc.writeMem(0x9c3f, { 0xcb, 0xb6 });
        gbc.writeMem(0xca21, { 0xca });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd39d, gbc.sp());
        EXPECT(0x9c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3f));
        EXPECT(0xb6, gbc.readMem(0x9c40));
        EXPECT(0x8a, gbc.readMem(0xca21));
        // CB B6 03CB
        gbc.setState(0xef9b, 0x7eaf, 0x3b70, 0xd2a0, 0xf0c1, 0x96c7, 0x1, 0x0);
        gbc.writeMem(0x96c7, { 0xfb });
        gbc.writeMem(0xef9b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7eaf, gbc.sp());
        EXPECT(0xef9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x96c7));
        EXPECT(0xcb, gbc.readMem(0xef9b));
        EXPECT(0xb6, gbc.readMem(0xef9c));
        // CB B6 03CC
        gbc.setState(0xb696, 0xd1a9, 0xf9b0, 0xc63a, 0x25d7, 0x232e, 0x0, 0x1);
        gbc.writeMem(0x232e, { 0xb1 });
        gbc.writeMem(0xb696, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0xb698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb696));
        EXPECT(0xb6, gbc.readMem(0xb697));
        // CB B6 03CD
        gbc.setState(0xd537, 0x88fb, 0xc1a0, 0x9a4e, 0x1d45, 0x8930, 0x1, 0x0);
        gbc.writeMem(0x8930, { 0x94 });
        gbc.writeMem(0xd537, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x88fb, gbc.sp());
        EXPECT(0xd539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8930));
        EXPECT(0xcb, gbc.readMem(0xd537));
        EXPECT(0xb6, gbc.readMem(0xd538));
        // CB B6 03CE
        gbc.setState(0x88bc, 0x32e4, 0x5960, 0x45fb, 0xac08, 0x9194, 0x0, 0x0);
        gbc.writeMem(0x88bc, { 0xcb, 0xb6 });
        gbc.writeMem(0x9194, { 0xbf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x32e4, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bc));
        EXPECT(0xb6, gbc.readMem(0x88bd));
        EXPECT(0xbf, gbc.readMem(0x9194));
        // CB B6 03CF
        gbc.setState(0x568b, 0xb339, 0xf240, 0x17a8, 0xf21f, 0xc52, 0x1, 0x1);
        gbc.writeMem(0xc52, { 0xbf });
        gbc.writeMem(0x568b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb339, gbc.sp());
        EXPECT(0x568d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 03D3
        gbc.setState(0x8723, 0xa083, 0x73c0, 0xc41d, 0xe4c0, 0xb87d, 0x0, 0x0);
        gbc.writeMem(0x8723, { 0xcb, 0xb6 });
        gbc.writeMem(0xb87d, { 0xe9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa083, gbc.sp());
        EXPECT(0x8725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8723));
        EXPECT(0xb6, gbc.readMem(0x8724));
        EXPECT(0xa9, gbc.readMem(0xb87d));
        // CB B6 03D4
        gbc.setState(0xac, 0x3a9d, 0x4a50, 0x41f8, 0xcf91, 0x92f7, 0x1, 0x0);
        gbc.writeMem(0xac, { 0xcb, 0xb6 });
        gbc.writeMem(0x92f7, { 0x19 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3a9d, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x92f7));
        // CB B6 03D5
        gbc.setState(0x5725, 0x9035, 0x64e0, 0xde02, 0xd35d, 0xad75, 0x1, 0x1);
        gbc.writeMem(0x5725, { 0xcb, 0xb6 });
        gbc.writeMem(0xad75, { 0xb8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9035, gbc.sp());
        EXPECT(0x5727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xad75));
        // CB B6 03D6
        gbc.setState(0x99a8, 0xd30c, 0x2130, 0x25b6, 0x5987, 0xc913, 0x0, 0x0);
        gbc.writeMem(0x99a8, { 0xcb, 0xb6 });
        gbc.writeMem(0xc913, { 0xc8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd30c, gbc.sp());
        EXPECT(0x99aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a8));
        EXPECT(0xb6, gbc.readMem(0x99a9));
        EXPECT(0x88, gbc.readMem(0xc913));
        // CB B6 03D7
        gbc.setState(0x3a3d, 0xdea4, 0x9910, 0x9e2e, 0x92a2, 0xa5f1, 0x1, 0x0);
        gbc.writeMem(0x3a3d, { 0xcb, 0xb6 });
        gbc.writeMem(0xa5f1, { 0x4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdea4, gbc.sp());
        EXPECT(0x3a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa5f1));
        // CB B6 03D8
        gbc.setState(0x5743, 0x1ef8, 0xf570, 0x66b4, 0x94e2, 0xa891, 0x0, 0x1);
        gbc.writeMem(0x5743, { 0xcb, 0xb6 });
        gbc.writeMem(0xa891, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0x5745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa891));
        // CB B6 03D9
        gbc.setState(0x1609, 0x1700, 0x9560, 0x1924, 0xf10d, 0x5f6e, 0x1, 0x0);
        gbc.writeMem(0x1609, { 0xcb, 0xb6 });
        gbc.writeMem(0x5f6e, { 0xac });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1700, gbc.sp());
        EXPECT(0x160b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B6 03DA
        gbc.setState(0x462, 0xf659, 0xf300, 0x650e, 0x8bba, 0xa70d, 0x0, 0x1);
        gbc.writeMem(0x462, { 0xcb, 0xb6 });
        gbc.writeMem(0xa70d, { 0x60 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf659, gbc.sp());
        EXPECT(0x464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa70d));
        // CB B6 03DC
        gbc.setState(0x44d8, 0x81ca, 0x1080, 0xd473, 0x29fe, 0xb4a6, 0x0, 0x0);
        gbc.writeMem(0x44d8, { 0xcb, 0xb6 });
        gbc.writeMem(0xb4a6, { 0xe0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x81ca, gbc.sp());
        EXPECT(0x44da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb4a6));
        // CB B6 03DD
        gbc.setState(0x1944, 0xe599, 0xc290, 0x4561, 0x27ee, 0x24bf, 0x1, 0x0);
        gbc.writeMem(0x1944, { 0xcb, 0xb6 });
        gbc.writeMem(0x24bf, { 0xa8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe599, gbc.sp());
        EXPECT(0x1946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B6 03DF
        gbc.setState(0xee3c, 0xecdd, 0x63b0, 0x34c9, 0xf759, 0xf8e0, 0x0, 0x1);
        gbc.writeMem(0xee3c, { 0xcb, 0xb6 });
        gbc.writeMem(0xf8e0, { 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xecdd, gbc.sp());
        EXPECT(0xee3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3c));
        EXPECT(0xb6, gbc.readMem(0xee3d));
        EXPECT(0x37, gbc.readMem(0xf8e0));
        // CB B6 03E0
        gbc.setState(0x769, 0x8dd7, 0xc80, 0xb573, 0x3f52, 0xeb70, 0x1, 0x1);
        gbc.writeMem(0x769, { 0xcb, 0xb6 });
        gbc.writeMem(0xeb70, { 0xe5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8dd7, gbc.sp());
        EXPECT(0x76b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xeb70));
        // CB B6 03E1
        gbc.setState(0xa9a4, 0x9922, 0x3090, 0x2547, 0x2f2a, 0xa24f, 0x0, 0x1);
        gbc.writeMem(0xa24f, { 0x8e });
        gbc.writeMem(0xa9a4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9922, gbc.sp());
        EXPECT(0xa9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa24f));
        EXPECT(0xcb, gbc.readMem(0xa9a4));
        EXPECT(0xb6, gbc.readMem(0xa9a5));
        // CB B6 03E2
        gbc.setState(0x815d, 0x22a8, 0xe700, 0xb2f9, 0x3242, 0x6e9e, 0x0, 0x0);
        gbc.writeMem(0x6e9e, { 0xba });
        gbc.writeMem(0x815d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x22a8, gbc.sp());
        EXPECT(0x815f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815d));
        EXPECT(0xb6, gbc.readMem(0x815e));
        // CB B6 03E3
        gbc.setState(0xd1d5, 0xc3be, 0xfe70, 0x98bf, 0x5c33, 0x7d6f, 0x0, 0x0);
        gbc.writeMem(0x7d6f, { 0x17 });
        gbc.writeMem(0xd1d5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc3be, gbc.sp());
        EXPECT(0xd1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d5));
        EXPECT(0xb6, gbc.readMem(0xd1d6));
        // CB B6 03E6
        gbc.setState(0xb779, 0xee83, 0xb730, 0xc579, 0x2a60, 0x9ac, 0x0, 0x1);
        gbc.writeMem(0x9ac, { 0x9b });
        gbc.writeMem(0xb779, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xee83, gbc.sp());
        EXPECT(0xb77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb779));
        EXPECT(0xb6, gbc.readMem(0xb77a));
        // CB B6 03E7
        gbc.setState(0x1209, 0xcdd9, 0x60a0, 0x15ab, 0x6bc0, 0x8f64, 0x0, 0x1);
        gbc.writeMem(0x1209, { 0xcb, 0xb6 });
        gbc.writeMem(0x8f64, { 0xce });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcdd9, gbc.sp());
        EXPECT(0x120b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8f64));
    }
