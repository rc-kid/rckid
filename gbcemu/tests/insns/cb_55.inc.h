    TEST(gbcemu, opcode_cb_55) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 55 0000
        gbc.setState(0xdd2b, 0x1cdb, 0x2a50, 0xc110, 0x19a7, 0x4be0, 0x1, 0x1);
        gbc.writeMem(0xdd2b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1cdb);
        EXPECT(gbc.pc(), 0xdd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd2b), 0xcb);
        EXPECT(gbc.readMem(0xdd2c), 0x55);
        // CB 55 0001
        gbc.setState(0x50a1, 0x8afe, 0xfc70, 0x2908, 0x1a08, 0xe5b7, 0x1, 0x1);
        gbc.writeMem(0x50a1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8afe);
        EXPECT(gbc.pc(), 0x50a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0002
        gbc.setState(0xe821, 0xcb92, 0xa30, 0xf3dc, 0x5b73, 0x1ace, 0x0, 0x0);
        gbc.writeMem(0xe821, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcb92);
        EXPECT(gbc.pc(), 0xe823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe821), 0xcb);
        EXPECT(gbc.readMem(0xe822), 0x55);
        // CB 55 0003
        gbc.setState(0x2215, 0x62dc, 0x3d70, 0x7374, 0x49e7, 0x1aac, 0x1, 0x0);
        gbc.writeMem(0x2215, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x62dc);
        EXPECT(gbc.pc(), 0x2217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0004
        gbc.setState(0x4875, 0xe999, 0xf370, 0x2ae, 0x4be1, 0xfd7d, 0x1, 0x1);
        gbc.writeMem(0x4875, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe999);
        EXPECT(gbc.pc(), 0x4877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0006
        gbc.setState(0x1283, 0xbcce, 0xac70, 0x4e16, 0x1582, 0x4ffa, 0x1, 0x1);
        gbc.writeMem(0x1283, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbcce);
        EXPECT(gbc.pc(), 0x1285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0007
        gbc.setState(0x96e7, 0xa86e, 0x2c90, 0xa659, 0xb60c, 0xb14a, 0x1, 0x0);
        gbc.writeMem(0x96e7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa86e);
        EXPECT(gbc.pc(), 0x96e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e7), 0xcb);
        EXPECT(gbc.readMem(0x96e8), 0x55);
        // CB 55 0008
        gbc.setState(0xc699, 0xea56, 0x8640, 0x15fb, 0x337, 0x1e73, 0x1, 0x1);
        gbc.writeMem(0xc699, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xea56);
        EXPECT(gbc.pc(), 0xc69b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc699), 0xcb);
        EXPECT(gbc.readMem(0xc69a), 0x55);
        // CB 55 0009
        gbc.setState(0xe642, 0xfb2e, 0x6f60, 0x3be2, 0xe546, 0x5308, 0x0, 0x0);
        gbc.writeMem(0xe642, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xfb2e);
        EXPECT(gbc.pc(), 0xe644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe642), 0xcb);
        EXPECT(gbc.readMem(0xe643), 0x55);
        // CB 55 000A
        gbc.setState(0xd9d1, 0x6081, 0x5260, 0x60dd, 0x3059, 0xb818, 0x0, 0x0);
        gbc.writeMem(0xd9d1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6081);
        EXPECT(gbc.pc(), 0xd9d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d1), 0xcb);
        EXPECT(gbc.readMem(0xd9d2), 0x55);
        // CB 55 000B
        gbc.setState(0x76fa, 0x110b, 0xd010, 0x9440, 0x361d, 0xac93, 0x0, 0x1);
        gbc.writeMem(0x76fa, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x110b);
        EXPECT(gbc.pc(), 0x76fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 000C
        gbc.setState(0x3e95, 0x8340, 0x4300, 0x9d1f, 0xc0b, 0x93b3, 0x0, 0x0);
        gbc.writeMem(0x3e95, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8340);
        EXPECT(gbc.pc(), 0x3e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 000D
        gbc.setState(0x6ae0, 0xf086, 0x3a0, 0x69b3, 0xcb7e, 0xb39, 0x1, 0x1);
        gbc.writeMem(0x6ae0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf086);
        EXPECT(gbc.pc(), 0x6ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 000F
        gbc.setState(0x8508, 0xd0f3, 0x6590, 0x207c, 0x34f0, 0x3d54, 0x0, 0x0);
        gbc.writeMem(0x8508, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd0f3);
        EXPECT(gbc.pc(), 0x850a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8508), 0xcb);
        EXPECT(gbc.readMem(0x8509), 0x55);
        // CB 55 0010
        gbc.setState(0x78b, 0x3e66, 0x62f0, 0xa1dd, 0x50e9, 0x638, 0x0, 0x1);
        gbc.writeMem(0x78b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3e66);
        EXPECT(gbc.pc(), 0x78d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0011
        gbc.setState(0x4cbf, 0x882a, 0x3790, 0x42d8, 0x1057, 0x8807, 0x0, 0x1);
        gbc.writeMem(0x4cbf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x882a);
        EXPECT(gbc.pc(), 0x4cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0012
        gbc.setState(0x4270, 0xdff2, 0x57f0, 0x67f2, 0x4321, 0x4ca9, 0x0, 0x0);
        gbc.writeMem(0x4270, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdff2);
        EXPECT(gbc.pc(), 0x4272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0013
        gbc.setState(0xbea, 0xedb8, 0x9fd0, 0xd357, 0xbd78, 0x4579, 0x0, 0x0);
        gbc.writeMem(0xbea, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xedb8);
        EXPECT(gbc.pc(), 0xbec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0014
        gbc.setState(0x544a, 0x177e, 0x5f10, 0xc7a7, 0xa90, 0xf5f, 0x1, 0x0);
        gbc.writeMem(0x544a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x177e);
        EXPECT(gbc.pc(), 0x544c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0015
        gbc.setState(0x9d06, 0xd58e, 0x32f0, 0xe15e, 0x536a, 0x33e5, 0x0, 0x1);
        gbc.writeMem(0x9d06, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd58e);
        EXPECT(gbc.pc(), 0x9d08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d06), 0xcb);
        EXPECT(gbc.readMem(0x9d07), 0x55);
        // CB 55 0016
        gbc.setState(0x73b2, 0x1577, 0x3430, 0xfb00, 0x3ecb, 0x8a80, 0x1, 0x0);
        gbc.writeMem(0x73b2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1577);
        EXPECT(gbc.pc(), 0x73b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0017
        gbc.setState(0x4bca, 0xa94f, 0xf690, 0xa1e6, 0xa40e, 0xd788, 0x1, 0x0);
        gbc.writeMem(0x4bca, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa94f);
        EXPECT(gbc.pc(), 0x4bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0018
        gbc.setState(0xb5f7, 0x815c, 0xae70, 0xe9cc, 0x6988, 0xe109, 0x1, 0x1);
        gbc.writeMem(0xb5f7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x815c);
        EXPECT(gbc.pc(), 0xb5f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f7), 0xcb);
        EXPECT(gbc.readMem(0xb5f8), 0x55);
        // CB 55 0019
        gbc.setState(0x8591, 0x5756, 0x2a20, 0x7709, 0x947d, 0x6ec0, 0x1, 0x0);
        gbc.writeMem(0x8591, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5756);
        EXPECT(gbc.pc(), 0x8593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8591), 0xcb);
        EXPECT(gbc.readMem(0x8592), 0x55);
        // CB 55 001B
        gbc.setState(0x8dbd, 0x7c6a, 0x6d50, 0x1704, 0xc6, 0xe944, 0x1, 0x1);
        gbc.writeMem(0x8dbd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7c6a);
        EXPECT(gbc.pc(), 0x8dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dbd), 0xcb);
        EXPECT(gbc.readMem(0x8dbe), 0x55);
        // CB 55 001C
        gbc.setState(0xafc5, 0x2721, 0x51e0, 0x6368, 0x3a35, 0xbe5, 0x1, 0x0);
        gbc.writeMem(0xafc5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2721);
        EXPECT(gbc.pc(), 0xafc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc5), 0xcb);
        EXPECT(gbc.readMem(0xafc6), 0x55);
        // CB 55 001D
        gbc.setState(0x874b, 0x563, 0x52c0, 0x2fb1, 0xf7fe, 0x721b, 0x1, 0x1);
        gbc.writeMem(0x874b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x563);
        EXPECT(gbc.pc(), 0x874d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874b), 0xcb);
        EXPECT(gbc.readMem(0x874c), 0x55);
        // CB 55 001E
        gbc.setState(0x40f4, 0x76d2, 0xd9f0, 0x8ca6, 0x82e, 0x96e4, 0x0, 0x1);
        gbc.writeMem(0x40f4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x76d2);
        EXPECT(gbc.pc(), 0x40f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 001F
        gbc.setState(0x2c48, 0x2c0b, 0x3140, 0xc459, 0xa963, 0xcb34, 0x1, 0x1);
        gbc.writeMem(0x2c48, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2c0b);
        EXPECT(gbc.pc(), 0x2c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0020
        gbc.setState(0xc1da, 0x65be, 0xac80, 0xbe0f, 0x90ce, 0xb23f, 0x0, 0x1);
        gbc.writeMem(0xc1da, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x65be);
        EXPECT(gbc.pc(), 0xc1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1da), 0xcb);
        EXPECT(gbc.readMem(0xc1db), 0x55);
        // CB 55 0021
        gbc.setState(0xec10, 0xbee1, 0x7d40, 0x7c56, 0x97a8, 0x5d79, 0x1, 0x1);
        gbc.writeMem(0xec10, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbee1);
        EXPECT(gbc.pc(), 0xec12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec10), 0xcb);
        EXPECT(gbc.readMem(0xec11), 0x55);
        // CB 55 0022
        gbc.setState(0x1db1, 0xb4b7, 0x8de0, 0x7ed4, 0xf76c, 0x15b8, 0x0, 0x0);
        gbc.writeMem(0x1db1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb4b7);
        EXPECT(gbc.pc(), 0x1db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0023
        gbc.setState(0xac79, 0x3e2c, 0x9610, 0x5776, 0x1c9e, 0x8924, 0x1, 0x1);
        gbc.writeMem(0xac79, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3e2c);
        EXPECT(gbc.pc(), 0xac7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac79), 0xcb);
        EXPECT(gbc.readMem(0xac7a), 0x55);
        // CB 55 0024
        gbc.setState(0x8d24, 0xcf14, 0xb870, 0x3215, 0xa89e, 0x5bc1, 0x1, 0x0);
        gbc.writeMem(0x8d24, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcf14);
        EXPECT(gbc.pc(), 0x8d26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d24), 0xcb);
        EXPECT(gbc.readMem(0x8d25), 0x55);
        // CB 55 0025
        gbc.setState(0x8e56, 0xd556, 0x6a60, 0x4114, 0xa4b1, 0x76b4, 0x1, 0x0);
        gbc.writeMem(0x8e56, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd556);
        EXPECT(gbc.pc(), 0x8e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e56), 0xcb);
        EXPECT(gbc.readMem(0x8e57), 0x55);
        // CB 55 0026
        gbc.setState(0x9b1d, 0x7f35, 0x4470, 0x68c7, 0x4ac9, 0xd471, 0x0, 0x1);
        gbc.writeMem(0x9b1d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7f35);
        EXPECT(gbc.pc(), 0x9b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1d), 0xcb);
        EXPECT(gbc.readMem(0x9b1e), 0x55);
        // CB 55 0027
        gbc.setState(0x328e, 0x1166, 0x3b30, 0xe35b, 0x2051, 0x845d, 0x0, 0x0);
        gbc.writeMem(0x328e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1166);
        EXPECT(gbc.pc(), 0x3290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0028
        gbc.setState(0x941d, 0x1fdf, 0xe3e0, 0x1ba3, 0x4f9, 0xd768, 0x1, 0x0);
        gbc.writeMem(0x941d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1fdf);
        EXPECT(gbc.pc(), 0x941f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941d), 0xcb);
        EXPECT(gbc.readMem(0x941e), 0x55);
        // CB 55 0029
        gbc.setState(0x4557, 0x41b8, 0x12c0, 0x7fd5, 0x5f65, 0x69b3, 0x0, 0x0);
        gbc.writeMem(0x4557, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x41b8);
        EXPECT(gbc.pc(), 0x4559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 002A
        gbc.setState(0x42e1, 0x4172, 0x79b0, 0xda80, 0xb443, 0xef55, 0x0, 0x1);
        gbc.writeMem(0x42e1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4172);
        EXPECT(gbc.pc(), 0x42e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 002B
        gbc.setState(0x9f84, 0xb25c, 0x9430, 0x8ec1, 0xdc6b, 0xd0ab, 0x1, 0x0);
        gbc.writeMem(0x9f84, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb25c);
        EXPECT(gbc.pc(), 0x9f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f84), 0xcb);
        EXPECT(gbc.readMem(0x9f85), 0x55);
        // CB 55 002C
        gbc.setState(0x9656, 0x3fc3, 0x980, 0x49cd, 0x7cf2, 0x4887, 0x1, 0x0);
        gbc.writeMem(0x9656, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3fc3);
        EXPECT(gbc.pc(), 0x9658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9656), 0xcb);
        EXPECT(gbc.readMem(0x9657), 0x55);
        // CB 55 002E
        gbc.setState(0x32c2, 0xbf6, 0xea00, 0x9c53, 0x3a27, 0xe8a, 0x0, 0x1);
        gbc.writeMem(0x32c2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbf6);
        EXPECT(gbc.pc(), 0x32c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 002F
        gbc.setState(0x9601, 0x5ecc, 0x8dc0, 0x49e4, 0x89a6, 0x7f6c, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5ecc);
        EXPECT(gbc.pc(), 0x9603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9601), 0xcb);
        EXPECT(gbc.readMem(0x9602), 0x55);
        // CB 55 0030
        gbc.setState(0x1b5c, 0x3c9b, 0x8700, 0x2ef8, 0x5d1e, 0x4a23, 0x0, 0x1);
        gbc.writeMem(0x1b5c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3c9b);
        EXPECT(gbc.pc(), 0x1b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0031
        gbc.setState(0x6cce, 0xcf51, 0x9ba0, 0x1852, 0x6b19, 0x3ce, 0x0, 0x0);
        gbc.writeMem(0x6cce, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcf51);
        EXPECT(gbc.pc(), 0x6cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0032
        gbc.setState(0xde8c, 0xefcb, 0x5230, 0xc1eb, 0xaad0, 0xddda, 0x1, 0x1);
        gbc.writeMem(0xde8c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xefcb);
        EXPECT(gbc.pc(), 0xde8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8c), 0xcb);
        EXPECT(gbc.readMem(0xde8d), 0x55);
        // CB 55 0033
        gbc.setState(0x32f8, 0xe0e, 0x72d0, 0xc309, 0x35f5, 0xb8c6, 0x1, 0x1);
        gbc.writeMem(0x32f8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe0e);
        EXPECT(gbc.pc(), 0x32fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0034
        gbc.setState(0x7686, 0xd24b, 0xd020, 0xc7c4, 0xdd78, 0xb8da, 0x0, 0x1);
        gbc.writeMem(0x7686, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd24b);
        EXPECT(gbc.pc(), 0x7688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0036
        gbc.setState(0x2164, 0x8462, 0xf8a0, 0xd740, 0x7b03, 0x95a3, 0x0, 0x1);
        gbc.writeMem(0x2164, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8462);
        EXPECT(gbc.pc(), 0x2166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0037
        gbc.setState(0x8fcd, 0x2e2e, 0xed10, 0xc45f, 0x1caa, 0xbbae, 0x1, 0x0);
        gbc.writeMem(0x8fcd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2e2e);
        EXPECT(gbc.pc(), 0x8fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcd), 0xcb);
        EXPECT(gbc.readMem(0x8fce), 0x55);
        // CB 55 0038
        gbc.setState(0x731c, 0x87bc, 0x53b0, 0x6550, 0x8106, 0xca92, 0x0, 0x0);
        gbc.writeMem(0x731c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x87bc);
        EXPECT(gbc.pc(), 0x731e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0039
        gbc.setState(0x27c9, 0x19ed, 0xbfd0, 0x727d, 0xc171, 0x10df, 0x0, 0x1);
        gbc.writeMem(0x27c9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x19ed);
        EXPECT(gbc.pc(), 0x27cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 003A
        gbc.setState(0xd236, 0x7195, 0xb30, 0x1010, 0x2de8, 0xc1e2, 0x1, 0x0);
        gbc.writeMem(0xd236, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7195);
        EXPECT(gbc.pc(), 0xd238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd236), 0xcb);
        EXPECT(gbc.readMem(0xd237), 0x55);
        // CB 55 003B
        gbc.setState(0x9e5e, 0xda15, 0x5ba0, 0xb910, 0x66fd, 0x9969, 0x1, 0x0);
        gbc.writeMem(0x9e5e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xda15);
        EXPECT(gbc.pc(), 0x9e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5e), 0xcb);
        EXPECT(gbc.readMem(0x9e5f), 0x55);
        // CB 55 003C
        gbc.setState(0x6698, 0xb784, 0x3bf0, 0x7c63, 0x209d, 0xc0d5, 0x1, 0x1);
        gbc.writeMem(0x6698, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb784);
        EXPECT(gbc.pc(), 0x669a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 003D
        gbc.setState(0x7fd4, 0x701f, 0x89a0, 0xb528, 0xf0b8, 0x3528, 0x0, 0x1);
        gbc.writeMem(0x7fd4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x701f);
        EXPECT(gbc.pc(), 0x7fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 003E
        gbc.setState(0x352e, 0x8b03, 0xcda0, 0x4436, 0x2157, 0xc4e3, 0x0, 0x0);
        gbc.writeMem(0x352e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8b03);
        EXPECT(gbc.pc(), 0x3530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 003F
        gbc.setState(0x23a3, 0x9145, 0x4330, 0x1455, 0x9357, 0xfeab, 0x1, 0x0);
        gbc.writeMem(0x23a3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9145);
        EXPECT(gbc.pc(), 0x23a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0040
        gbc.setState(0xefeb, 0x721d, 0x47f0, 0x36cd, 0xd64c, 0x45d4, 0x0, 0x1);
        gbc.writeMem(0xefeb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x721d);
        EXPECT(gbc.pc(), 0xefed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefeb), 0xcb);
        EXPECT(gbc.readMem(0xefec), 0x55);
        // CB 55 0041
        gbc.setState(0xc840, 0x6d87, 0xcd00, 0x6211, 0xde84, 0x9b10, 0x0, 0x0);
        gbc.writeMem(0xc840, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6d87);
        EXPECT(gbc.pc(), 0xc842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc840), 0xcb);
        EXPECT(gbc.readMem(0xc841), 0x55);
        // CB 55 0042
        gbc.setState(0x615f, 0x9af9, 0x2390, 0x41de, 0xaee8, 0xb8c1, 0x1, 0x0);
        gbc.writeMem(0x615f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9af9);
        EXPECT(gbc.pc(), 0x6161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0043
        gbc.setState(0x99ee, 0x30fd, 0x12a0, 0xeac7, 0x84bb, 0xad3f, 0x0, 0x1);
        gbc.writeMem(0x99ee, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x30fd);
        EXPECT(gbc.pc(), 0x99f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ee), 0xcb);
        EXPECT(gbc.readMem(0x99ef), 0x55);
        // CB 55 0044
        gbc.setState(0x50de, 0xd77, 0xcc90, 0x7a42, 0x55db, 0xf15d, 0x0, 0x0);
        gbc.writeMem(0x50de, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd77);
        EXPECT(gbc.pc(), 0x50e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0045
        gbc.setState(0x20a6, 0xcd26, 0x9df0, 0x8c1, 0x7cf9, 0x8883, 0x1, 0x0);
        gbc.writeMem(0x20a6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcd26);
        EXPECT(gbc.pc(), 0x20a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0046
        gbc.setState(0xe9f2, 0x514e, 0x2a70, 0x1400, 0xde79, 0x5753, 0x1, 0x0);
        gbc.writeMem(0xe9f2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x514e);
        EXPECT(gbc.pc(), 0xe9f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f2), 0xcb);
        EXPECT(gbc.readMem(0xe9f3), 0x55);
        // CB 55 0047
        gbc.setState(0x4118, 0xcf4b, 0x3c20, 0x92a6, 0xa198, 0x666d, 0x1, 0x1);
        gbc.writeMem(0x4118, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcf4b);
        EXPECT(gbc.pc(), 0x411a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0049
        gbc.setState(0xce39, 0xa098, 0xd3d0, 0x8b98, 0xb778, 0xaeda, 0x1, 0x0);
        gbc.writeMem(0xce39, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa098);
        EXPECT(gbc.pc(), 0xce3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce39), 0xcb);
        EXPECT(gbc.readMem(0xce3a), 0x55);
        // CB 55 004A
        gbc.setState(0xa129, 0xe25f, 0x6940, 0x2d30, 0x206, 0xe85d, 0x0, 0x1);
        gbc.writeMem(0xa129, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe25f);
        EXPECT(gbc.pc(), 0xa12b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa129), 0xcb);
        EXPECT(gbc.readMem(0xa12a), 0x55);
        // CB 55 004B
        gbc.setState(0x6b4a, 0xefd, 0xecf0, 0xa7b4, 0xac96, 0xa5c7, 0x1, 0x0);
        gbc.writeMem(0x6b4a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xefd);
        EXPECT(gbc.pc(), 0x6b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 004C
        gbc.setState(0x8f28, 0xf540, 0x6f10, 0x81d4, 0xf002, 0x5584, 0x0, 0x0);
        gbc.writeMem(0x8f28, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf540);
        EXPECT(gbc.pc(), 0x8f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f28), 0xcb);
        EXPECT(gbc.readMem(0x8f29), 0x55);
        // CB 55 004D
        gbc.setState(0xaea7, 0x1f5, 0x1430, 0xdfeb, 0x1d5e, 0xc037, 0x0, 0x1);
        gbc.writeMem(0xaea7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1f5);
        EXPECT(gbc.pc(), 0xaea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaea7), 0xcb);
        EXPECT(gbc.readMem(0xaea8), 0x55);
        // CB 55 004E
        gbc.setState(0xc84, 0xe245, 0x1350, 0x31a, 0xfafe, 0x9bc9, 0x0, 0x1);
        gbc.writeMem(0xc84, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe245);
        EXPECT(gbc.pc(), 0xc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 004F
        gbc.setState(0x1ed8, 0x50ea, 0xfdf0, 0xc3e, 0xc6c5, 0xb087, 0x0, 0x1);
        gbc.writeMem(0x1ed8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x50ea);
        EXPECT(gbc.pc(), 0x1eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0050
        gbc.setState(0xcf84, 0x283d, 0x5770, 0xf2ff, 0x943b, 0x8d01, 0x1, 0x0);
        gbc.writeMem(0xcf84, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x283d);
        EXPECT(gbc.pc(), 0xcf86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf84), 0xcb);
        EXPECT(gbc.readMem(0xcf85), 0x55);
        // CB 55 0051
        gbc.setState(0x13ed, 0x513c, 0x4960, 0xce4f, 0x4168, 0x9f5c, 0x1, 0x0);
        gbc.writeMem(0x13ed, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x513c);
        EXPECT(gbc.pc(), 0x13ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0052
        gbc.setState(0x90af, 0x82e8, 0x35b0, 0x869b, 0xa42f, 0x201e, 0x0, 0x0);
        gbc.writeMem(0x90af, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x82e8);
        EXPECT(gbc.pc(), 0x90b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90af), 0xcb);
        EXPECT(gbc.readMem(0x90b0), 0x55);
        // CB 55 0054
        gbc.setState(0xd89f, 0x7ee5, 0x7090, 0x68bb, 0xace7, 0xc16f, 0x1, 0x0);
        gbc.writeMem(0xd89f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7ee5);
        EXPECT(gbc.pc(), 0xd8a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89f), 0xcb);
        EXPECT(gbc.readMem(0xd8a0), 0x55);
        // CB 55 0055
        gbc.setState(0x5d1b, 0xff8d, 0x7a0, 0x19e4, 0xb186, 0xc1e3, 0x1, 0x1);
        gbc.writeMem(0x5d1b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xff8d);
        EXPECT(gbc.pc(), 0x5d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0056
        gbc.setState(0x99fe, 0x2af1, 0x46e0, 0x3af7, 0x9f6e, 0xed69, 0x0, 0x0);
        gbc.writeMem(0x99fe, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2af1);
        EXPECT(gbc.pc(), 0x9a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99fe), 0xcb);
        EXPECT(gbc.readMem(0x99ff), 0x55);
        // CB 55 0058
        gbc.setState(0xcf53, 0x2d23, 0x1520, 0xdbc7, 0x9ffc, 0xcd18, 0x1, 0x0);
        gbc.writeMem(0xcf53, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2d23);
        EXPECT(gbc.pc(), 0xcf55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf53), 0xcb);
        EXPECT(gbc.readMem(0xcf54), 0x55);
        // CB 55 0059
        gbc.setState(0x8c97, 0xfdbc, 0x7ef0, 0x40c, 0xf9f0, 0x64e, 0x1, 0x1);
        gbc.writeMem(0x8c97, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfdbc);
        EXPECT(gbc.pc(), 0x8c99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c97), 0xcb);
        EXPECT(gbc.readMem(0x8c98), 0x55);
        // CB 55 005A
        gbc.setState(0xe504, 0xd48, 0x6cd0, 0x612e, 0x55a5, 0x5182, 0x0, 0x1);
        gbc.writeMem(0xe504, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd48);
        EXPECT(gbc.pc(), 0xe506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe504), 0xcb);
        EXPECT(gbc.readMem(0xe505), 0x55);
        // CB 55 005B
        gbc.setState(0x32d8, 0x1792, 0x1a10, 0x1e55, 0x472, 0xd435, 0x1, 0x0);
        gbc.writeMem(0x32d8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1792);
        EXPECT(gbc.pc(), 0x32da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 005C
        gbc.setState(0xd168, 0x970, 0x9950, 0xe46a, 0x10c4, 0x9fd, 0x0, 0x1);
        gbc.writeMem(0xd168, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x970);
        EXPECT(gbc.pc(), 0xd16a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd168), 0xcb);
        EXPECT(gbc.readMem(0xd169), 0x55);
        // CB 55 005D
        gbc.setState(0xa479, 0xbabe, 0xb530, 0xaee5, 0xac2b, 0x3fd8, 0x0, 0x0);
        gbc.writeMem(0xa479, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbabe);
        EXPECT(gbc.pc(), 0xa47b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa479), 0xcb);
        EXPECT(gbc.readMem(0xa47a), 0x55);
        // CB 55 005E
        gbc.setState(0x9fc6, 0xaf5, 0x5050, 0xcddd, 0x4044, 0x3ca, 0x0, 0x1);
        gbc.writeMem(0x9fc6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaf5);
        EXPECT(gbc.pc(), 0x9fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc6), 0xcb);
        EXPECT(gbc.readMem(0x9fc7), 0x55);
        // CB 55 005F
        gbc.setState(0xacaf, 0xd58f, 0xa2e0, 0xcb0a, 0x2515, 0x24db, 0x1, 0x0);
        gbc.writeMem(0xacaf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd58f);
        EXPECT(gbc.pc(), 0xacb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacaf), 0xcb);
        EXPECT(gbc.readMem(0xacb0), 0x55);
        // CB 55 0060
        gbc.setState(0xbd50, 0x85ff, 0xfe20, 0x149, 0xdb9, 0xc8e9, 0x1, 0x1);
        gbc.writeMem(0xbd50, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x85ff);
        EXPECT(gbc.pc(), 0xbd52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd50), 0xcb);
        EXPECT(gbc.readMem(0xbd51), 0x55);
        // CB 55 0061
        gbc.setState(0xe20c, 0xac83, 0x1e20, 0x8791, 0x83ab, 0xd906, 0x0, 0x1);
        gbc.writeMem(0xe20c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xac83);
        EXPECT(gbc.pc(), 0xe20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe20c), 0xcb);
        EXPECT(gbc.readMem(0xe20d), 0x55);
        // CB 55 0062
        gbc.setState(0x1904, 0x59e0, 0x35d0, 0x622c, 0x7276, 0x9798, 0x0, 0x1);
        gbc.writeMem(0x1904, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x59e0);
        EXPECT(gbc.pc(), 0x1906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0063
        gbc.setState(0x199, 0x9420, 0x3760, 0xd91a, 0x546e, 0x5b39, 0x1, 0x0);
        gbc.writeMem(0x199, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9420);
        EXPECT(gbc.pc(), 0x19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0064
        gbc.setState(0x6824, 0x349b, 0x7d60, 0x13e9, 0xe416, 0xcd9a, 0x1, 0x1);
        gbc.writeMem(0x6824, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x349b);
        EXPECT(gbc.pc(), 0x6826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0065
        gbc.setState(0xa023, 0x3a3d, 0x5a50, 0x75da, 0x173f, 0x2c2f, 0x1, 0x1);
        gbc.writeMem(0xa023, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3a3d);
        EXPECT(gbc.pc(), 0xa025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa023), 0xcb);
        EXPECT(gbc.readMem(0xa024), 0x55);
        // CB 55 0066
        gbc.setState(0x8502, 0x78a0, 0xe3a0, 0x8768, 0xfce5, 0xc182, 0x0, 0x1);
        gbc.writeMem(0x8502, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x78a0);
        EXPECT(gbc.pc(), 0x8504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8502), 0xcb);
        EXPECT(gbc.readMem(0x8503), 0x55);
        // CB 55 0067
        gbc.setState(0x7aa9, 0x868a, 0x8e90, 0x74ad, 0xd45f, 0xeb49, 0x1, 0x0);
        gbc.writeMem(0x7aa9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x868a);
        EXPECT(gbc.pc(), 0x7aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0068
        gbc.setState(0x5931, 0xb31b, 0xc820, 0x23f5, 0xa363, 0x199d, 0x1, 0x0);
        gbc.writeMem(0x5931, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb31b);
        EXPECT(gbc.pc(), 0x5933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0069
        gbc.setState(0x6a2d, 0x4299, 0xb280, 0x289f, 0xbe4b, 0xa0b9, 0x1, 0x1);
        gbc.writeMem(0x6a2d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4299);
        EXPECT(gbc.pc(), 0x6a2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 006A
        gbc.setState(0x5ec0, 0x31b2, 0xb560, 0x99f3, 0xf047, 0x1252, 0x1, 0x1);
        gbc.writeMem(0x5ec0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x31b2);
        EXPECT(gbc.pc(), 0x5ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 006B
        gbc.setState(0x57d4, 0x1154, 0xde40, 0x23b1, 0xff1a, 0x32d0, 0x1, 0x0);
        gbc.writeMem(0x57d4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1154);
        EXPECT(gbc.pc(), 0x57d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 006C
        gbc.setState(0x6cf, 0xf30e, 0x40, 0xc6f6, 0x5fc1, 0x774, 0x1, 0x1);
        gbc.writeMem(0x6cf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf30e);
        EXPECT(gbc.pc(), 0x6d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 006D
        gbc.setState(0x8858, 0x2faa, 0x2f90, 0x9600, 0x9e1f, 0x3d87, 0x0, 0x0);
        gbc.writeMem(0x8858, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2faa);
        EXPECT(gbc.pc(), 0x885a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8858), 0xcb);
        EXPECT(gbc.readMem(0x8859), 0x55);
        // CB 55 006F
        gbc.setState(0x23b4, 0x46d8, 0xfbb0, 0x9165, 0xd477, 0x1183, 0x1, 0x1);
        gbc.writeMem(0x23b4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x46d8);
        EXPECT(gbc.pc(), 0x23b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0070
        gbc.setState(0x3ad2, 0xd0ad, 0xf960, 0x1378, 0xc0a9, 0x971e, 0x1, 0x1);
        gbc.writeMem(0x3ad2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd0ad);
        EXPECT(gbc.pc(), 0x3ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0071
        gbc.setState(0xdefa, 0x8b58, 0xcb40, 0xe434, 0xa1b3, 0xf514, 0x0, 0x0);
        gbc.writeMem(0xdefa, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8b58);
        EXPECT(gbc.pc(), 0xdefc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdefa), 0xcb);
        EXPECT(gbc.readMem(0xdefb), 0x55);
        // CB 55 0072
        gbc.setState(0x4afd, 0xa914, 0xc960, 0x6220, 0xddd9, 0x8168, 0x1, 0x1);
        gbc.writeMem(0x4afd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa914);
        EXPECT(gbc.pc(), 0x4aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0073
        gbc.setState(0x3994, 0xcb57, 0xd700, 0x1fdc, 0x68e5, 0xf7c8, 0x0, 0x0);
        gbc.writeMem(0x3994, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xcb57);
        EXPECT(gbc.pc(), 0x3996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0074
        gbc.setState(0x765b, 0xecfc, 0x75b0, 0xb0bd, 0xedb3, 0x2e65, 0x1, 0x1);
        gbc.writeMem(0x765b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xecfc);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0075
        gbc.setState(0x5497, 0x9724, 0x2b00, 0xcc23, 0x7b59, 0xf49e, 0x1, 0x0);
        gbc.writeMem(0x5497, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9724);
        EXPECT(gbc.pc(), 0x5499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0076
        gbc.setState(0xcd8b, 0xe9c6, 0x7180, 0x17ef, 0xc8e, 0x2d02, 0x0, 0x1);
        gbc.writeMem(0xcd8b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe9c6);
        EXPECT(gbc.pc(), 0xcd8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8b), 0xcb);
        EXPECT(gbc.readMem(0xcd8c), 0x55);
        // CB 55 0078
        gbc.setState(0x8085, 0x14ec, 0x7cb0, 0x5e7b, 0xe6c4, 0x6ea, 0x0, 0x0);
        gbc.writeMem(0x8085, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x14ec);
        EXPECT(gbc.pc(), 0x8087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8085), 0xcb);
        EXPECT(gbc.readMem(0x8086), 0x55);
        // CB 55 0079
        gbc.setState(0x297f, 0x4a37, 0x6070, 0xbfdf, 0xc78f, 0xd989, 0x1, 0x1);
        gbc.writeMem(0x297f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4a37);
        EXPECT(gbc.pc(), 0x2981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 007A
        gbc.setState(0x22a5, 0xb602, 0x1cb0, 0x4d26, 0x835d, 0x224d, 0x0, 0x0);
        gbc.writeMem(0x22a5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb602);
        EXPECT(gbc.pc(), 0x22a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 007B
        gbc.setState(0x58c3, 0xd415, 0x5e20, 0xed58, 0x62fc, 0x645f, 0x1, 0x0);
        gbc.writeMem(0x58c3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd415);
        EXPECT(gbc.pc(), 0x58c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 007C
        gbc.setState(0x54dc, 0x5040, 0x7050, 0xb2f, 0xe2e8, 0xf7d2, 0x1, 0x0);
        gbc.writeMem(0x54dc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5040);
        EXPECT(gbc.pc(), 0x54de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 007D
        gbc.setState(0x453c, 0x56b0, 0xbff0, 0xa5d5, 0xa8e3, 0x6526, 0x0, 0x1);
        gbc.writeMem(0x453c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x56b0);
        EXPECT(gbc.pc(), 0x453e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 007E
        gbc.setState(0x7f79, 0xfaa, 0x8f00, 0xd219, 0x793, 0xd71, 0x1, 0x0);
        gbc.writeMem(0x7f79, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfaa);
        EXPECT(gbc.pc(), 0x7f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 007F
        gbc.setState(0xc0a8, 0xb87e, 0x3870, 0xf5dc, 0x5371, 0x4023, 0x0, 0x0);
        gbc.writeMem(0xc0a8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb87e);
        EXPECT(gbc.pc(), 0xc0aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a8), 0xcb);
        EXPECT(gbc.readMem(0xc0a9), 0x55);
        // CB 55 0080
        gbc.setState(0xaf03, 0x3ff3, 0xb7e0, 0xfbaf, 0x810, 0x558a, 0x1, 0x0);
        gbc.writeMem(0xaf03, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3ff3);
        EXPECT(gbc.pc(), 0xaf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf03), 0xcb);
        EXPECT(gbc.readMem(0xaf04), 0x55);
        // CB 55 0081
        gbc.setState(0xc767, 0xe444, 0xa930, 0xbeda, 0x444a, 0x594d, 0x0, 0x0);
        gbc.writeMem(0xc767, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe444);
        EXPECT(gbc.pc(), 0xc769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc767), 0xcb);
        EXPECT(gbc.readMem(0xc768), 0x55);
        // CB 55 0082
        gbc.setState(0x34ed, 0x6ac2, 0x8a0, 0x6aa4, 0xd66d, 0xb494, 0x1, 0x0);
        gbc.writeMem(0x34ed, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6ac2);
        EXPECT(gbc.pc(), 0x34ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0083
        gbc.setState(0xd9d7, 0x89a9, 0xd990, 0x849d, 0xcdde, 0xeea, 0x0, 0x1);
        gbc.writeMem(0xd9d7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x89a9);
        EXPECT(gbc.pc(), 0xd9d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d7), 0xcb);
        EXPECT(gbc.readMem(0xd9d8), 0x55);
        // CB 55 0084
        gbc.setState(0x520a, 0xe307, 0x11f0, 0x8c70, 0x35ba, 0x521e, 0x1, 0x1);
        gbc.writeMem(0x520a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe307);
        EXPECT(gbc.pc(), 0x520c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0085
        gbc.setState(0x9dc8, 0xb1ce, 0x4c30, 0x500a, 0x42cc, 0xc60a, 0x0, 0x0);
        gbc.writeMem(0x9dc8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb1ce);
        EXPECT(gbc.pc(), 0x9dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc8), 0xcb);
        EXPECT(gbc.readMem(0x9dc9), 0x55);
        // CB 55 0086
        gbc.setState(0xa7cf, 0xe7b0, 0x2ea0, 0x717d, 0xe9a2, 0x4395, 0x1, 0x0);
        gbc.writeMem(0xa7cf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe7b0);
        EXPECT(gbc.pc(), 0xa7d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cf), 0xcb);
        EXPECT(gbc.readMem(0xa7d0), 0x55);
        // CB 55 0087
        gbc.setState(0xcbf1, 0xccd4, 0x6360, 0xa7f2, 0x2c6f, 0x5da, 0x1, 0x1);
        gbc.writeMem(0xcbf1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xccd4);
        EXPECT(gbc.pc(), 0xcbf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf1), 0xcb);
        EXPECT(gbc.readMem(0xcbf2), 0x55);
        // CB 55 0088
        gbc.setState(0xc79c, 0xe203, 0x17b0, 0xf2ef, 0xe42f, 0xda1b, 0x0, 0x1);
        gbc.writeMem(0xc79c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe203);
        EXPECT(gbc.pc(), 0xc79e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc79c), 0xcb);
        EXPECT(gbc.readMem(0xc79d), 0x55);
        // CB 55 0089
        gbc.setState(0x40ef, 0x261, 0xf470, 0xa5b7, 0xc01, 0x3faf, 0x0, 0x0);
        gbc.writeMem(0x40ef, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x261);
        EXPECT(gbc.pc(), 0x40f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 008A
        gbc.setState(0x3787, 0xb685, 0x210, 0x3eed, 0x6e69, 0xacab, 0x0, 0x0);
        gbc.writeMem(0x3787, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb685);
        EXPECT(gbc.pc(), 0x3789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 008B
        gbc.setState(0x7629, 0xe4db, 0x7ab0, 0xd5be, 0xa87e, 0x61c6, 0x0, 0x0);
        gbc.writeMem(0x7629, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe4db);
        EXPECT(gbc.pc(), 0x762b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 008C
        gbc.setState(0x14f2, 0xc3a2, 0x5aa0, 0xb638, 0x59a2, 0xc0, 0x0, 0x1);
        gbc.writeMem(0x14f2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc3a2);
        EXPECT(gbc.pc(), 0x14f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 008D
        gbc.setState(0x994f, 0x81e7, 0x5bd0, 0xb589, 0x526e, 0xe8fe, 0x0, 0x0);
        gbc.writeMem(0x994f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x81e7);
        EXPECT(gbc.pc(), 0x9951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994f), 0xcb);
        EXPECT(gbc.readMem(0x9950), 0x55);
        // CB 55 008E
        gbc.setState(0x5995, 0x46, 0xfbe0, 0x7b88, 0xb650, 0xd4c3, 0x0, 0x1);
        gbc.writeMem(0x5995, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x46);
        EXPECT(gbc.pc(), 0x5997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 008F
        gbc.setState(0xe451, 0xec4f, 0x10, 0x7c77, 0x15a2, 0x7abb, 0x0, 0x1);
        gbc.writeMem(0xe451, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xec4f);
        EXPECT(gbc.pc(), 0xe453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe451), 0xcb);
        EXPECT(gbc.readMem(0xe452), 0x55);
        // CB 55 0090
        gbc.setState(0xcf77, 0xb863, 0xe920, 0xcc61, 0x86cb, 0xf378, 0x1, 0x1);
        gbc.writeMem(0xcf77, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb863);
        EXPECT(gbc.pc(), 0xcf79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf77), 0xcb);
        EXPECT(gbc.readMem(0xcf78), 0x55);
        // CB 55 0091
        gbc.setState(0xb976, 0x4336, 0xd0e0, 0x6e8f, 0x6051, 0xb06e, 0x1, 0x0);
        gbc.writeMem(0xb976, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4336);
        EXPECT(gbc.pc(), 0xb978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb976), 0xcb);
        EXPECT(gbc.readMem(0xb977), 0x55);
        // CB 55 0092
        gbc.setState(0x403, 0x6cde, 0x4870, 0x9815, 0x8e4b, 0x6840, 0x0, 0x1);
        gbc.writeMem(0x403, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6cde);
        EXPECT(gbc.pc(), 0x405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0093
        gbc.setState(0x953e, 0xa04b, 0xdea0, 0xeca9, 0x6ce6, 0x739f, 0x0, 0x1);
        gbc.writeMem(0x953e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa04b);
        EXPECT(gbc.pc(), 0x9540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x953e), 0xcb);
        EXPECT(gbc.readMem(0x953f), 0x55);
        // CB 55 0094
        gbc.setState(0x6a36, 0x9721, 0xbb90, 0x9e5d, 0xb96d, 0xb41, 0x1, 0x0);
        gbc.writeMem(0x6a36, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9721);
        EXPECT(gbc.pc(), 0x6a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0095
        gbc.setState(0x5bb, 0x3490, 0x4f90, 0x5622, 0xe5c5, 0x83fd, 0x0, 0x0);
        gbc.writeMem(0x5bb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3490);
        EXPECT(gbc.pc(), 0x5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0096
        gbc.setState(0x1ff5, 0x5988, 0x77c0, 0xb373, 0x73c1, 0xd347, 0x1, 0x1);
        gbc.writeMem(0x1ff5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5988);
        EXPECT(gbc.pc(), 0x1ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0097
        gbc.setState(0x78cf, 0xafa8, 0x10f0, 0x7f24, 0x73c, 0xc7be, 0x0, 0x0);
        gbc.writeMem(0x78cf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xafa8);
        EXPECT(gbc.pc(), 0x78d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0098
        gbc.setState(0x35f5, 0x7001, 0x5ef0, 0xae57, 0x64f2, 0x4af0, 0x1, 0x0);
        gbc.writeMem(0x35f5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7001);
        EXPECT(gbc.pc(), 0x35f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0099
        gbc.setState(0xa2ce, 0xaf46, 0x49c0, 0x6f1e, 0x9dc4, 0x3603, 0x0, 0x0);
        gbc.writeMem(0xa2ce, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaf46);
        EXPECT(gbc.pc(), 0xa2d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ce), 0xcb);
        EXPECT(gbc.readMem(0xa2cf), 0x55);
        // CB 55 009A
        gbc.setState(0xdf9e, 0xd7a0, 0xa750, 0x2e58, 0xeaf1, 0xe661, 0x1, 0x1);
        gbc.writeMem(0xdf9e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd7a0);
        EXPECT(gbc.pc(), 0xdfa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9e), 0xcb);
        EXPECT(gbc.readMem(0xdf9f), 0x55);
        // CB 55 009B
        gbc.setState(0x90a6, 0xddc6, 0xdd80, 0x795b, 0x6a2f, 0xb8a3, 0x0, 0x1);
        gbc.writeMem(0x90a6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xddc6);
        EXPECT(gbc.pc(), 0x90a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90a6), 0xcb);
        EXPECT(gbc.readMem(0x90a7), 0x55);
        // CB 55 009C
        gbc.setState(0x459a, 0x3b6e, 0x7260, 0x67e2, 0x21e2, 0x5347, 0x1, 0x0);
        gbc.writeMem(0x459a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3b6e);
        EXPECT(gbc.pc(), 0x459c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 009D
        gbc.setState(0x1046, 0x9f48, 0xba90, 0x6e49, 0x5b0e, 0xb7eb, 0x1, 0x1);
        gbc.writeMem(0x1046, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9f48);
        EXPECT(gbc.pc(), 0x1048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 009E
        gbc.setState(0x857b, 0xb8a1, 0x9e50, 0x54, 0x3906, 0xb5b4, 0x1, 0x1);
        gbc.writeMem(0x857b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb8a1);
        EXPECT(gbc.pc(), 0x857d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857b), 0xcb);
        EXPECT(gbc.readMem(0x857c), 0x55);
        // CB 55 009F
        gbc.setState(0xee83, 0x44fb, 0xeec0, 0x9a2b, 0x38c3, 0x932d, 0x1, 0x0);
        gbc.writeMem(0xee83, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x44fb);
        EXPECT(gbc.pc(), 0xee85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee83), 0xcb);
        EXPECT(gbc.readMem(0xee84), 0x55);
        // CB 55 00A0
        gbc.setState(0x525c, 0x43a8, 0x5630, 0x6013, 0xd79c, 0x241f, 0x0, 0x1);
        gbc.writeMem(0x525c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x43a8);
        EXPECT(gbc.pc(), 0x525e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00A1
        gbc.setState(0x2d76, 0x6e05, 0x48e0, 0xf8fc, 0xef04, 0xfe01, 0x0, 0x0);
        gbc.writeMem(0x2d76, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6e05);
        EXPECT(gbc.pc(), 0x2d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00A2
        gbc.setState(0x588b, 0x487a, 0x8af0, 0x4031, 0x8c7c, 0x812c, 0x0, 0x0);
        gbc.writeMem(0x588b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x487a);
        EXPECT(gbc.pc(), 0x588d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00A3
        gbc.setState(0xe9cd, 0x7d22, 0x1e70, 0xbade, 0xd542, 0xd5a9, 0x0, 0x0);
        gbc.writeMem(0xe9cd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7d22);
        EXPECT(gbc.pc(), 0xe9cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9cd), 0xcb);
        EXPECT(gbc.readMem(0xe9ce), 0x55);
        // CB 55 00A4
        gbc.setState(0x988b, 0xb3d2, 0x7260, 0x554, 0x4e4b, 0x6ca4, 0x1, 0x0);
        gbc.writeMem(0x988b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb3d2);
        EXPECT(gbc.pc(), 0x988d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988b), 0xcb);
        EXPECT(gbc.readMem(0x988c), 0x55);
        // CB 55 00A5
        gbc.setState(0x6e8b, 0xf963, 0x65d0, 0x4f65, 0x88f7, 0xd4c8, 0x0, 0x0);
        gbc.writeMem(0x6e8b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf963);
        EXPECT(gbc.pc(), 0x6e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00A6
        gbc.setState(0x3e26, 0x70e, 0xb670, 0xc5c0, 0x8352, 0xa9c6, 0x0, 0x0);
        gbc.writeMem(0x3e26, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x70e);
        EXPECT(gbc.pc(), 0x3e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00A7
        gbc.setState(0xb19, 0x2482, 0x5450, 0xd044, 0x8f13, 0x48d, 0x0, 0x1);
        gbc.writeMem(0xb19, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2482);
        EXPECT(gbc.pc(), 0xb1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00A8
        gbc.setState(0x940b, 0xec2c, 0x1d20, 0xa4af, 0xa5a6, 0x67f0, 0x1, 0x0);
        gbc.writeMem(0x940b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xec2c);
        EXPECT(gbc.pc(), 0x940d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940b), 0xcb);
        EXPECT(gbc.readMem(0x940c), 0x55);
        // CB 55 00A9
        gbc.setState(0x1855, 0x5cb9, 0xbee0, 0x3aa5, 0x9859, 0xd4e9, 0x1, 0x1);
        gbc.writeMem(0x1855, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5cb9);
        EXPECT(gbc.pc(), 0x1857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00AA
        gbc.setState(0x21f, 0x75c7, 0x5000, 0xd674, 0x2702, 0x985b, 0x1, 0x0);
        gbc.writeMem(0x21f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x75c7);
        EXPECT(gbc.pc(), 0x221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00AB
        gbc.setState(0x8b69, 0xb96e, 0xee10, 0x548b, 0x163d, 0x3b63, 0x1, 0x0);
        gbc.writeMem(0x8b69, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb96e);
        EXPECT(gbc.pc(), 0x8b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b69), 0xcb);
        EXPECT(gbc.readMem(0x8b6a), 0x55);
        // CB 55 00AC
        gbc.setState(0xbd7a, 0x712a, 0xc30, 0xadb3, 0xba16, 0x9375, 0x1, 0x0);
        gbc.writeMem(0xbd7a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x712a);
        EXPECT(gbc.pc(), 0xbd7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7a), 0xcb);
        EXPECT(gbc.readMem(0xbd7b), 0x55);
        // CB 55 00AD
        gbc.setState(0xcd9f, 0xe6f1, 0x4280, 0x5258, 0x70c9, 0x4c3a, 0x0, 0x0);
        gbc.writeMem(0xcd9f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe6f1);
        EXPECT(gbc.pc(), 0xcda1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9f), 0xcb);
        EXPECT(gbc.readMem(0xcda0), 0x55);
        // CB 55 00AE
        gbc.setState(0x7a9e, 0xaa2e, 0xa20, 0xb61e, 0x4956, 0xe65f, 0x0, 0x0);
        gbc.writeMem(0x7a9e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xaa2e);
        EXPECT(gbc.pc(), 0x7aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00AF
        gbc.setState(0xe1b5, 0x1a78, 0xae80, 0x94f9, 0x5f36, 0x29de, 0x0, 0x1);
        gbc.writeMem(0xe1b5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1a78);
        EXPECT(gbc.pc(), 0xe1b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b5), 0xcb);
        EXPECT(gbc.readMem(0xe1b6), 0x55);
        // CB 55 00B0
        gbc.setState(0x6bd5, 0x6d55, 0x6b30, 0xbbe2, 0x5b64, 0xf2c6, 0x1, 0x1);
        gbc.writeMem(0x6bd5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6d55);
        EXPECT(gbc.pc(), 0x6bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00B1
        gbc.setState(0xcd3c, 0xfa62, 0xb4a0, 0x147, 0xbfc, 0xdfda, 0x0, 0x1);
        gbc.writeMem(0xcd3c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfa62);
        EXPECT(gbc.pc(), 0xcd3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3c), 0xcb);
        EXPECT(gbc.readMem(0xcd3d), 0x55);
        // CB 55 00B2
        gbc.setState(0xee8a, 0x6fae, 0x96c0, 0xf653, 0x4f7f, 0x8fcc, 0x0, 0x1);
        gbc.writeMem(0xee8a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6fae);
        EXPECT(gbc.pc(), 0xee8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee8a), 0xcb);
        EXPECT(gbc.readMem(0xee8b), 0x55);
        // CB 55 00B3
        gbc.setState(0xefe6, 0x544c, 0x1010, 0x1c70, 0xe2a, 0xa0ea, 0x1, 0x1);
        gbc.writeMem(0xefe6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x544c);
        EXPECT(gbc.pc(), 0xefe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefe6), 0xcb);
        EXPECT(gbc.readMem(0xefe7), 0x55);
        // CB 55 00B4
        gbc.setState(0xa4ef, 0xb920, 0xea80, 0xa6da, 0xa9d8, 0x9625, 0x0, 0x1);
        gbc.writeMem(0xa4ef, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb920);
        EXPECT(gbc.pc(), 0xa4f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ef), 0xcb);
        EXPECT(gbc.readMem(0xa4f0), 0x55);
        // CB 55 00B5
        gbc.setState(0xab3c, 0xd47, 0x410, 0x96b2, 0x413b, 0xf1c6, 0x0, 0x0);
        gbc.writeMem(0xab3c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd47);
        EXPECT(gbc.pc(), 0xab3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3c), 0xcb);
        EXPECT(gbc.readMem(0xab3d), 0x55);
        // CB 55 00B6
        gbc.setState(0x8313, 0xa0b1, 0x20, 0x558e, 0xdf37, 0xa80e, 0x1, 0x0);
        gbc.writeMem(0x8313, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa0b1);
        EXPECT(gbc.pc(), 0x8315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8313), 0xcb);
        EXPECT(gbc.readMem(0x8314), 0x55);
        // CB 55 00B7
        gbc.setState(0x70fd, 0x1b88, 0x2830, 0x502a, 0xbd05, 0x1193, 0x1, 0x1);
        gbc.writeMem(0x70fd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1b88);
        EXPECT(gbc.pc(), 0x70ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00B8
        gbc.setState(0x85f, 0x742c, 0x3ee0, 0x430e, 0xc0ec, 0x923a, 0x1, 0x0);
        gbc.writeMem(0x85f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x742c);
        EXPECT(gbc.pc(), 0x861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00B9
        gbc.setState(0xea4a, 0x9974, 0xd120, 0xfe6a, 0x7171, 0x3efe, 0x1, 0x1);
        gbc.writeMem(0xea4a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9974);
        EXPECT(gbc.pc(), 0xea4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea4a), 0xcb);
        EXPECT(gbc.readMem(0xea4b), 0x55);
        // CB 55 00BA
        gbc.setState(0x219c, 0xa35, 0xc0e0, 0x92a4, 0x81b9, 0x2019, 0x1, 0x0);
        gbc.writeMem(0x219c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa35);
        EXPECT(gbc.pc(), 0x219e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00BB
        gbc.setState(0x184a, 0x1b57, 0x3560, 0x634f, 0x70c, 0xd6b5, 0x1, 0x1);
        gbc.writeMem(0x184a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1b57);
        EXPECT(gbc.pc(), 0x184c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00BC
        gbc.setState(0xa2a0, 0xb886, 0xc0d0, 0xb29, 0xa2d2, 0xa7f1, 0x1, 0x0);
        gbc.writeMem(0xa2a0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb886);
        EXPECT(gbc.pc(), 0xa2a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a0), 0xcb);
        EXPECT(gbc.readMem(0xa2a1), 0x55);
        // CB 55 00BD
        gbc.setState(0xae9b, 0x6ff, 0x4e90, 0xc993, 0x8ef2, 0x11b8, 0x1, 0x0);
        gbc.writeMem(0xae9b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6ff);
        EXPECT(gbc.pc(), 0xae9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9b), 0xcb);
        EXPECT(gbc.readMem(0xae9c), 0x55);
        // CB 55 00BE
        gbc.setState(0x4864, 0xe703, 0x920, 0xa8f2, 0xbe65, 0xf52c, 0x1, 0x0);
        gbc.writeMem(0x4864, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe703);
        EXPECT(gbc.pc(), 0x4866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00BF
        gbc.setState(0xa6b3, 0x7cc6, 0x38b0, 0x2689, 0xe4d, 0x4901, 0x0, 0x1);
        gbc.writeMem(0xa6b3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7cc6);
        EXPECT(gbc.pc(), 0xa6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b3), 0xcb);
        EXPECT(gbc.readMem(0xa6b4), 0x55);
        // CB 55 00C0
        gbc.setState(0xd343, 0x4227, 0xc350, 0x1e89, 0x14e4, 0xe1b2, 0x0, 0x0);
        gbc.writeMem(0xd343, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4227);
        EXPECT(gbc.pc(), 0xd345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd343), 0xcb);
        EXPECT(gbc.readMem(0xd344), 0x55);
        // CB 55 00C1
        gbc.setState(0xcfde, 0x45da, 0xaa80, 0x4241, 0x26cf, 0x739f, 0x0, 0x0);
        gbc.writeMem(0xcfde, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x45da);
        EXPECT(gbc.pc(), 0xcfe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfde), 0xcb);
        EXPECT(gbc.readMem(0xcfdf), 0x55);
        // CB 55 00C2
        gbc.setState(0x275d, 0xcf0f, 0x1cb0, 0x183c, 0xf686, 0xacd0, 0x0, 0x1);
        gbc.writeMem(0x275d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcf0f);
        EXPECT(gbc.pc(), 0x275f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00C3
        gbc.setState(0x6234, 0x2910, 0xc590, 0x924b, 0x30c3, 0xda39, 0x0, 0x1);
        gbc.writeMem(0x6234, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2910);
        EXPECT(gbc.pc(), 0x6236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00C4
        gbc.setState(0xceaf, 0x5cb3, 0xa830, 0x81f4, 0xe5d9, 0x2001, 0x1, 0x1);
        gbc.writeMem(0xceaf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5cb3);
        EXPECT(gbc.pc(), 0xceb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceaf), 0xcb);
        EXPECT(gbc.readMem(0xceb0), 0x55);
        // CB 55 00C5
        gbc.setState(0xe826, 0x76a2, 0x4c40, 0x4ced, 0x8037, 0xb8ef, 0x0, 0x0);
        gbc.writeMem(0xe826, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x76a2);
        EXPECT(gbc.pc(), 0xe828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe826), 0xcb);
        EXPECT(gbc.readMem(0xe827), 0x55);
        // CB 55 00C6
        gbc.setState(0x78e2, 0x5fda, 0x9e60, 0x166e, 0xad95, 0xdca9, 0x0, 0x1);
        gbc.writeMem(0x78e2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5fda);
        EXPECT(gbc.pc(), 0x78e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00C7
        gbc.setState(0x40b9, 0xa5f7, 0xa2d0, 0x38ef, 0x84e, 0xd4d0, 0x1, 0x0);
        gbc.writeMem(0x40b9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa5f7);
        EXPECT(gbc.pc(), 0x40bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00C8
        gbc.setState(0x978e, 0x2cad, 0xf010, 0x65e5, 0xe7c5, 0xd9ee, 0x0, 0x0);
        gbc.writeMem(0x978e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2cad);
        EXPECT(gbc.pc(), 0x9790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978e), 0xcb);
        EXPECT(gbc.readMem(0x978f), 0x55);
        // CB 55 00C9
        gbc.setState(0x5b6d, 0xabab, 0x97a0, 0x79a0, 0xbc1, 0x8315, 0x0, 0x0);
        gbc.writeMem(0x5b6d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xabab);
        EXPECT(gbc.pc(), 0x5b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00CA
        gbc.setState(0x69d4, 0xa6ab, 0x400, 0x1bd7, 0xadf1, 0x2f03, 0x1, 0x1);
        gbc.writeMem(0x69d4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa6ab);
        EXPECT(gbc.pc(), 0x69d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00CB
        gbc.setState(0xe1e3, 0x2d56, 0x41c0, 0xe339, 0x3bf6, 0xbf6f, 0x1, 0x1);
        gbc.writeMem(0xe1e3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2d56);
        EXPECT(gbc.pc(), 0xe1e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e3), 0xcb);
        EXPECT(gbc.readMem(0xe1e4), 0x55);
        // CB 55 00CC
        gbc.setState(0xde43, 0xae98, 0x85c0, 0x53cc, 0xdfe9, 0x8989, 0x1, 0x1);
        gbc.writeMem(0xde43, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xae98);
        EXPECT(gbc.pc(), 0xde45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde43), 0xcb);
        EXPECT(gbc.readMem(0xde44), 0x55);
        // CB 55 00CD
        gbc.setState(0x495a, 0x4e84, 0xf130, 0x9dcd, 0x4149, 0xdc3a, 0x1, 0x1);
        gbc.writeMem(0x495a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4e84);
        EXPECT(gbc.pc(), 0x495c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00CE
        gbc.setState(0xbac9, 0xd806, 0xc740, 0xcfbe, 0xef98, 0x1f64, 0x0, 0x0);
        gbc.writeMem(0xbac9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd806);
        EXPECT(gbc.pc(), 0xbacb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac9), 0xcb);
        EXPECT(gbc.readMem(0xbaca), 0x55);
        // CB 55 00CF
        gbc.setState(0x4123, 0x66c4, 0x50d0, 0x531f, 0x7c72, 0xcf6f, 0x0, 0x1);
        gbc.writeMem(0x4123, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x66c4);
        EXPECT(gbc.pc(), 0x4125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00D0
        gbc.setState(0x9d9d, 0x8b86, 0x2c30, 0x68f1, 0x1f63, 0xd7df, 0x0, 0x1);
        gbc.writeMem(0x9d9d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8b86);
        EXPECT(gbc.pc(), 0x9d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d9d), 0xcb);
        EXPECT(gbc.readMem(0x9d9e), 0x55);
        // CB 55 00D1
        gbc.setState(0x7b, 0x432e, 0x550, 0x4854, 0x307e, 0xd4f2, 0x0, 0x1);
        gbc.writeMem(0x7b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x432e);
        EXPECT(gbc.pc(), 0x7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00D2
        gbc.setState(0x732b, 0x7c11, 0xa3a0, 0x70a7, 0x5530, 0x9bba, 0x1, 0x0);
        gbc.writeMem(0x732b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7c11);
        EXPECT(gbc.pc(), 0x732d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00D3
        gbc.setState(0x3159, 0xce92, 0x570, 0x27f0, 0xc0f0, 0x5b27, 0x0, 0x0);
        gbc.writeMem(0x3159, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xce92);
        EXPECT(gbc.pc(), 0x315b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00D4
        gbc.setState(0xe8fc, 0x166a, 0xff80, 0x82a2, 0x21cd, 0xa7e8, 0x1, 0x1);
        gbc.writeMem(0xe8fc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x166a);
        EXPECT(gbc.pc(), 0xe8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fc), 0xcb);
        EXPECT(gbc.readMem(0xe8fd), 0x55);
        // CB 55 00D5
        gbc.setState(0x5457, 0x48a4, 0x1350, 0x106b, 0x4fbf, 0xf16b, 0x1, 0x0);
        gbc.writeMem(0x5457, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x48a4);
        EXPECT(gbc.pc(), 0x5459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00D6
        gbc.setState(0x6e97, 0x58ce, 0xb220, 0x896c, 0x8d18, 0x773d, 0x1, 0x1);
        gbc.writeMem(0x6e97, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x58ce);
        EXPECT(gbc.pc(), 0x6e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00D7
        gbc.setState(0x2ba7, 0x26eb, 0xd850, 0xd33b, 0xe9ae, 0xdf00, 0x0, 0x0);
        gbc.writeMem(0x2ba7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x26eb);
        EXPECT(gbc.pc(), 0x2ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00D8
        gbc.setState(0x1762, 0xc027, 0xf8a0, 0xc0b3, 0xfaf5, 0x476e, 0x0, 0x1);
        gbc.writeMem(0x1762, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc027);
        EXPECT(gbc.pc(), 0x1764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00D9
        gbc.setState(0x8eb, 0x72c3, 0xe830, 0x1f7f, 0x18c0, 0xe5dd, 0x0, 0x1);
        gbc.writeMem(0x8eb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x72c3);
        EXPECT(gbc.pc(), 0x8ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00DA
        gbc.setState(0x370c, 0x3f3b, 0x7770, 0xc5f0, 0x4615, 0x6366, 0x0, 0x1);
        gbc.writeMem(0x370c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3f3b);
        EXPECT(gbc.pc(), 0x370e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00DC
        gbc.setState(0x5395, 0x5df6, 0xfb70, 0x718e, 0xd50a, 0x8c20, 0x0, 0x0);
        gbc.writeMem(0x5395, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5df6);
        EXPECT(gbc.pc(), 0x5397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00DD
        gbc.setState(0xad07, 0x6e27, 0xc6f0, 0x7ce, 0xb843, 0xbf9c, 0x1, 0x1);
        gbc.writeMem(0xad07, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6e27);
        EXPECT(gbc.pc(), 0xad09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad07), 0xcb);
        EXPECT(gbc.readMem(0xad08), 0x55);
        // CB 55 00DE
        gbc.setState(0x56da, 0xfe85, 0xb680, 0x415b, 0xa017, 0x9016, 0x1, 0x1);
        gbc.writeMem(0x56da, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfe85);
        EXPECT(gbc.pc(), 0x56dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00DF
        gbc.setState(0x28c, 0xf5dc, 0xb310, 0xfec1, 0xbf8a, 0x6e5, 0x0, 0x0);
        gbc.writeMem(0x28c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf5dc);
        EXPECT(gbc.pc(), 0x28e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00E0
        gbc.setState(0x67c, 0x894, 0xe7d0, 0xbd33, 0x9a0, 0x38ad, 0x1, 0x1);
        gbc.writeMem(0x67c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x894);
        EXPECT(gbc.pc(), 0x67e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00E1
        gbc.setState(0x2386, 0x594, 0xd500, 0x5463, 0x497c, 0xd53, 0x0, 0x0);
        gbc.writeMem(0x2386, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x594);
        EXPECT(gbc.pc(), 0x2388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00E2
        gbc.setState(0x73e5, 0xe76d, 0xd630, 0xa097, 0xd530, 0x4156, 0x1, 0x1);
        gbc.writeMem(0x73e5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe76d);
        EXPECT(gbc.pc(), 0x73e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00E3
        gbc.setState(0x190a, 0x9991, 0x58c0, 0xde78, 0x994b, 0xbbdd, 0x0, 0x0);
        gbc.writeMem(0x190a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9991);
        EXPECT(gbc.pc(), 0x190c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00E4
        gbc.setState(0x5735, 0x66f4, 0x5970, 0x2e61, 0x4099, 0xa7dc, 0x1, 0x1);
        gbc.writeMem(0x5735, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x66f4);
        EXPECT(gbc.pc(), 0x5737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00E5
        gbc.setState(0xe248, 0x9f79, 0xa330, 0xb33e, 0xa8f1, 0x813c, 0x0, 0x0);
        gbc.writeMem(0xe248, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9f79);
        EXPECT(gbc.pc(), 0xe24a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe248), 0xcb);
        EXPECT(gbc.readMem(0xe249), 0x55);
        // CB 55 00E6
        gbc.setState(0x1082, 0x6dde, 0xa9a0, 0x562c, 0x224d, 0xd89f, 0x0, 0x0);
        gbc.writeMem(0x1082, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6dde);
        EXPECT(gbc.pc(), 0x1084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00E7
        gbc.setState(0x2451, 0x43f6, 0x6440, 0xc1a4, 0xf00e, 0x30b5, 0x1, 0x0);
        gbc.writeMem(0x2451, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x43f6);
        EXPECT(gbc.pc(), 0x2453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00E8
        gbc.setState(0xe8f3, 0x1e6b, 0xec20, 0x7668, 0x3ca3, 0x8c3a, 0x1, 0x1);
        gbc.writeMem(0xe8f3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1e6b);
        EXPECT(gbc.pc(), 0xe8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f3), 0xcb);
        EXPECT(gbc.readMem(0xe8f4), 0x55);
        // CB 55 00E9
        gbc.setState(0x12c2, 0x284, 0x2a60, 0xafdc, 0xcb6c, 0xc710, 0x0, 0x0);
        gbc.writeMem(0x12c2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x284);
        EXPECT(gbc.pc(), 0x12c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00EA
        gbc.setState(0x288d, 0x8747, 0x2e70, 0x742d, 0x8c60, 0xf1d, 0x0, 0x0);
        gbc.writeMem(0x288d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8747);
        EXPECT(gbc.pc(), 0x288f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00EB
        gbc.setState(0x4324, 0xa193, 0xe080, 0xaf65, 0xecd, 0x756f, 0x1, 0x0);
        gbc.writeMem(0x4324, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa193);
        EXPECT(gbc.pc(), 0x4326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00ED
        gbc.setState(0x3154, 0xf971, 0x7990, 0xa1f5, 0x88ec, 0x78c0, 0x1, 0x0);
        gbc.writeMem(0x3154, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf971);
        EXPECT(gbc.pc(), 0x3156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00EE
        gbc.setState(0x6c68, 0x4bd3, 0x3980, 0x6e57, 0x8b29, 0x36d7, 0x0, 0x0);
        gbc.writeMem(0x6c68, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4bd3);
        EXPECT(gbc.pc(), 0x6c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00EF
        gbc.setState(0xbcb6, 0xc48e, 0x6c80, 0x251b, 0xa1fb, 0x8873, 0x1, 0x1);
        gbc.writeMem(0xbcb6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc48e);
        EXPECT(gbc.pc(), 0xbcb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb6), 0xcb);
        EXPECT(gbc.readMem(0xbcb7), 0x55);
        // CB 55 00F0
        gbc.setState(0xf67, 0x4f8c, 0x42d0, 0x4d38, 0x238e, 0xfdfe, 0x1, 0x1);
        gbc.writeMem(0xf67, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4f8c);
        EXPECT(gbc.pc(), 0xf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00F1
        gbc.setState(0x6dbb, 0x72a0, 0xa330, 0x5b3e, 0x9ef9, 0xf550, 0x0, 0x0);
        gbc.writeMem(0x6dbb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x72a0);
        EXPECT(gbc.pc(), 0x6dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00F2
        gbc.setState(0xa5d9, 0x9d4a, 0x2e50, 0x7ab4, 0xcb57, 0xe3c5, 0x0, 0x1);
        gbc.writeMem(0xa5d9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9d4a);
        EXPECT(gbc.pc(), 0xa5db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d9), 0xcb);
        EXPECT(gbc.readMem(0xa5da), 0x55);
        // CB 55 00F3
        gbc.setState(0x6990, 0xecb1, 0x3990, 0x831c, 0x94b8, 0x9d7f, 0x0, 0x1);
        gbc.writeMem(0x6990, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xecb1);
        EXPECT(gbc.pc(), 0x6992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00F5
        gbc.setState(0x44dc, 0x653b, 0xef10, 0x9065, 0xbe01, 0xd98d, 0x1, 0x1);
        gbc.writeMem(0x44dc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x653b);
        EXPECT(gbc.pc(), 0x44de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00F6
        gbc.setState(0x8a01, 0xd182, 0x6b80, 0xd179, 0x2995, 0x67e0, 0x1, 0x1);
        gbc.writeMem(0x8a01, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd182);
        EXPECT(gbc.pc(), 0x8a03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a01), 0xcb);
        EXPECT(gbc.readMem(0x8a02), 0x55);
        // CB 55 00F7
        gbc.setState(0xbb40, 0x1204, 0x6270, 0x9ea2, 0x3bf8, 0xc3d0, 0x1, 0x0);
        gbc.writeMem(0xbb40, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1204);
        EXPECT(gbc.pc(), 0xbb42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb40), 0xcb);
        EXPECT(gbc.readMem(0xbb41), 0x55);
        // CB 55 00F8
        gbc.setState(0xca16, 0x780c, 0xebe0, 0xbf52, 0xca2c, 0xc740, 0x1, 0x1);
        gbc.writeMem(0xca16, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x780c);
        EXPECT(gbc.pc(), 0xca18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca16), 0xcb);
        EXPECT(gbc.readMem(0xca17), 0x55);
        // CB 55 00FA
        gbc.setState(0x7da3, 0xcc00, 0xac40, 0x784d, 0xc574, 0x9e2, 0x0, 0x0);
        gbc.writeMem(0x7da3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xcc00);
        EXPECT(gbc.pc(), 0x7da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 00FB
        gbc.setState(0x5692, 0xfdba, 0x6cb0, 0x5b00, 0xd1f7, 0x637, 0x0, 0x1);
        gbc.writeMem(0x5692, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfdba);
        EXPECT(gbc.pc(), 0x5694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00FC
        gbc.setState(0x9048, 0xa153, 0xd420, 0xe56b, 0x8ffa, 0x7fed, 0x0, 0x1);
        gbc.writeMem(0x9048, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa153);
        EXPECT(gbc.pc(), 0x904a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9048), 0xcb);
        EXPECT(gbc.readMem(0x9049), 0x55);
        // CB 55 00FD
        gbc.setState(0xd00a, 0x4ab7, 0x89c0, 0x7af9, 0x2b77, 0x28ad, 0x1, 0x1);
        gbc.writeMem(0xd00a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4ab7);
        EXPECT(gbc.pc(), 0xd00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00a), 0xcb);
        EXPECT(gbc.readMem(0xd00b), 0x55);
        // CB 55 00FE
        gbc.setState(0x7853, 0xe09d, 0xeb0, 0xc52a, 0x69a9, 0xcb97, 0x0, 0x1);
        gbc.writeMem(0x7853, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe09d);
        EXPECT(gbc.pc(), 0x7855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 00FF
        gbc.setState(0x8989, 0xe646, 0xb610, 0xa1b9, 0xe3c4, 0x6bff, 0x1, 0x0);
        gbc.writeMem(0x8989, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe646);
        EXPECT(gbc.pc(), 0x898b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8989), 0xcb);
        EXPECT(gbc.readMem(0x898a), 0x55);
        // CB 55 0100
        gbc.setState(0x4513, 0x9771, 0xca20, 0xa144, 0x5c83, 0x651b, 0x0, 0x1);
        gbc.writeMem(0x4513, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9771);
        EXPECT(gbc.pc(), 0x4515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0101
        gbc.setState(0x7462, 0x71f4, 0x1cf0, 0x9c04, 0xb7fe, 0x5e0a, 0x1, 0x1);
        gbc.writeMem(0x7462, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x71f4);
        EXPECT(gbc.pc(), 0x7464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0102
        gbc.setState(0x5245, 0x297a, 0x4b0, 0xbad4, 0x42ff, 0xa8a, 0x0, 0x1);
        gbc.writeMem(0x5245, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x297a);
        EXPECT(gbc.pc(), 0x5247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0103
        gbc.setState(0x8595, 0xb170, 0x7f90, 0xc238, 0xa563, 0x3e7c, 0x1, 0x1);
        gbc.writeMem(0x8595, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb170);
        EXPECT(gbc.pc(), 0x8597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8595), 0xcb);
        EXPECT(gbc.readMem(0x8596), 0x55);
        // CB 55 0104
        gbc.setState(0xdc38, 0x45cc, 0x3fb0, 0x3eeb, 0x35c9, 0x18d1, 0x1, 0x0);
        gbc.writeMem(0xdc38, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x45cc);
        EXPECT(gbc.pc(), 0xdc3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc38), 0xcb);
        EXPECT(gbc.readMem(0xdc39), 0x55);
        // CB 55 0105
        gbc.setState(0x252b, 0x52f8, 0x5e30, 0xb729, 0x36ac, 0x333d, 0x1, 0x1);
        gbc.writeMem(0x252b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x52f8);
        EXPECT(gbc.pc(), 0x252d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0107
        gbc.setState(0x9c1e, 0x2932, 0x4340, 0xd6b5, 0x9522, 0x47cc, 0x1, 0x0);
        gbc.writeMem(0x9c1e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2932);
        EXPECT(gbc.pc(), 0x9c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1e), 0xcb);
        EXPECT(gbc.readMem(0x9c1f), 0x55);
        // CB 55 0108
        gbc.setState(0x3ef, 0xe270, 0xda00, 0x819d, 0x58c, 0x7bc8, 0x1, 0x0);
        gbc.writeMem(0x3ef, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe270);
        EXPECT(gbc.pc(), 0x3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0109
        gbc.setState(0x5a8e, 0xcd12, 0xe190, 0xc040, 0x1792, 0xc2bd, 0x1, 0x0);
        gbc.writeMem(0x5a8e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcd12);
        EXPECT(gbc.pc(), 0x5a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 010A
        gbc.setState(0x72f6, 0x262, 0x5080, 0x82ff, 0x1fda, 0x593a, 0x0, 0x1);
        gbc.writeMem(0x72f6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x262);
        EXPECT(gbc.pc(), 0x72f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 010B
        gbc.setState(0xc1cd, 0xf72c, 0xcca0, 0x6e83, 0x895f, 0x4007, 0x1, 0x1);
        gbc.writeMem(0xc1cd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf72c);
        EXPECT(gbc.pc(), 0xc1cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1cd), 0xcb);
        EXPECT(gbc.readMem(0xc1ce), 0x55);
        // CB 55 010D
        gbc.setState(0xaf7f, 0x1cb, 0x4d0, 0x5eab, 0x675d, 0x8c38, 0x1, 0x0);
        gbc.writeMem(0xaf7f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1cb);
        EXPECT(gbc.pc(), 0xaf81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7f), 0xcb);
        EXPECT(gbc.readMem(0xaf80), 0x55);
        // CB 55 010E
        gbc.setState(0x5099, 0xdf35, 0xe990, 0x6c3b, 0x567b, 0x12fe, 0x0, 0x1);
        gbc.writeMem(0x5099, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdf35);
        EXPECT(gbc.pc(), 0x509b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 010F
        gbc.setState(0x3221, 0x34e6, 0x1730, 0x8149, 0x19dd, 0xbd4, 0x0, 0x0);
        gbc.writeMem(0x3221, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x34e6);
        EXPECT(gbc.pc(), 0x3223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0110
        gbc.setState(0x4a16, 0xf6ad, 0x8f10, 0x4f10, 0xb147, 0xa1a7, 0x0, 0x1);
        gbc.writeMem(0x4a16, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf6ad);
        EXPECT(gbc.pc(), 0x4a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0111
        gbc.setState(0x8252, 0x10c7, 0xaf90, 0x4f63, 0x98e7, 0x6d8b, 0x1, 0x1);
        gbc.writeMem(0x8252, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x10c7);
        EXPECT(gbc.pc(), 0x8254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8252), 0xcb);
        EXPECT(gbc.readMem(0x8253), 0x55);
        // CB 55 0112
        gbc.setState(0xbedc, 0x1f01, 0x2a30, 0x158, 0xd842, 0xb6eb, 0x1, 0x0);
        gbc.writeMem(0xbedc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1f01);
        EXPECT(gbc.pc(), 0xbede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbedc), 0xcb);
        EXPECT(gbc.readMem(0xbedd), 0x55);
        // CB 55 0113
        gbc.setState(0x7cf8, 0xcc75, 0x9cd0, 0x1d36, 0x17b5, 0x8c5c, 0x1, 0x0);
        gbc.writeMem(0x7cf8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcc75);
        EXPECT(gbc.pc(), 0x7cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0114
        gbc.setState(0x801a, 0x63ba, 0x5350, 0xff8d, 0xcfa3, 0x8ca9, 0x1, 0x0);
        gbc.writeMem(0x801a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x63ba);
        EXPECT(gbc.pc(), 0x801c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801a), 0xcb);
        EXPECT(gbc.readMem(0x801b), 0x55);
        // CB 55 0115
        gbc.setState(0x5eb6, 0x5bef, 0xa080, 0x8e61, 0xb21e, 0xd7c9, 0x1, 0x1);
        gbc.writeMem(0x5eb6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5bef);
        EXPECT(gbc.pc(), 0x5eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0116
        gbc.setState(0x4bda, 0xae78, 0xf340, 0x2a3e, 0x8731, 0x56ac, 0x1, 0x0);
        gbc.writeMem(0x4bda, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xae78);
        EXPECT(gbc.pc(), 0x4bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0117
        gbc.setState(0x4fa2, 0x9a52, 0x3070, 0xfbb2, 0xa7f4, 0x5ff9, 0x1, 0x0);
        gbc.writeMem(0x4fa2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9a52);
        EXPECT(gbc.pc(), 0x4fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0118
        gbc.setState(0xc698, 0xb30a, 0xe4f0, 0x9c0f, 0x7ef7, 0x4442, 0x1, 0x1);
        gbc.writeMem(0xc698, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb30a);
        EXPECT(gbc.pc(), 0xc69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc698), 0xcb);
        EXPECT(gbc.readMem(0xc699), 0x55);
        // CB 55 0119
        gbc.setState(0x9ca0, 0x2be3, 0xe460, 0xa9b0, 0xbc0f, 0x1853, 0x0, 0x1);
        gbc.writeMem(0x9ca0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2be3);
        EXPECT(gbc.pc(), 0x9ca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca0), 0xcb);
        EXPECT(gbc.readMem(0x9ca1), 0x55);
        // CB 55 011A
        gbc.setState(0x8f0e, 0xdd21, 0x53c0, 0x21a6, 0x220c, 0x10fe, 0x1, 0x0);
        gbc.writeMem(0x8f0e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdd21);
        EXPECT(gbc.pc(), 0x8f10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f0e), 0xcb);
        EXPECT(gbc.readMem(0x8f0f), 0x55);
        // CB 55 011B
        gbc.setState(0x1452, 0x415b, 0x5700, 0xbd2f, 0x1fee, 0xb418, 0x1, 0x0);
        gbc.writeMem(0x1452, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x415b);
        EXPECT(gbc.pc(), 0x1454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 011C
        gbc.setState(0x6b02, 0x7e0, 0x8bf0, 0xb1a3, 0xbf3f, 0xd2df, 0x0, 0x0);
        gbc.writeMem(0x6b02, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7e0);
        EXPECT(gbc.pc(), 0x6b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 011D
        gbc.setState(0xabc2, 0x270f, 0xfbd0, 0x6c1c, 0x78f4, 0x49bd, 0x0, 0x0);
        gbc.writeMem(0xabc2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x270f);
        EXPECT(gbc.pc(), 0xabc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc2), 0xcb);
        EXPECT(gbc.readMem(0xabc3), 0x55);
        // CB 55 011E
        gbc.setState(0x3747, 0x2a29, 0x1c90, 0xc25e, 0x80e6, 0xf9fc, 0x1, 0x0);
        gbc.writeMem(0x3747, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2a29);
        EXPECT(gbc.pc(), 0x3749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 011F
        gbc.setState(0x3bfa, 0x8f1a, 0x5020, 0x1a40, 0x7cbe, 0x99a7, 0x1, 0x0);
        gbc.writeMem(0x3bfa, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8f1a);
        EXPECT(gbc.pc(), 0x3bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0120
        gbc.setState(0xd6a0, 0xebe6, 0x4180, 0x1156, 0xa8d2, 0xdc85, 0x0, 0x1);
        gbc.writeMem(0xd6a0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xebe6);
        EXPECT(gbc.pc(), 0xd6a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a0), 0xcb);
        EXPECT(gbc.readMem(0xd6a1), 0x55);
        // CB 55 0121
        gbc.setState(0xe00f, 0x955d, 0xcba0, 0x3833, 0x94e3, 0x2cb5, 0x1, 0x0);
        gbc.writeMem(0xe00f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x955d);
        EXPECT(gbc.pc(), 0xe011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00f), 0xcb);
        EXPECT(gbc.readMem(0xe010), 0x55);
        // CB 55 0122
        gbc.setState(0x12f9, 0xca47, 0x43b0, 0x7b85, 0x9bfd, 0xd0f7, 0x0, 0x0);
        gbc.writeMem(0x12f9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xca47);
        EXPECT(gbc.pc(), 0x12fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0123
        gbc.setState(0x2a62, 0x8083, 0xb6c0, 0x445d, 0x76b9, 0x16fc, 0x0, 0x1);
        gbc.writeMem(0x2a62, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8083);
        EXPECT(gbc.pc(), 0x2a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0124
        gbc.setState(0x59fb, 0xfa98, 0x5c80, 0x53fe, 0xdf88, 0x8910, 0x0, 0x1);
        gbc.writeMem(0x59fb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfa98);
        EXPECT(gbc.pc(), 0x59fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0125
        gbc.setState(0xb7dc, 0x810, 0x7ac0, 0x5071, 0x201e, 0x78ea, 0x1, 0x0);
        gbc.writeMem(0xb7dc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x810);
        EXPECT(gbc.pc(), 0xb7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7dc), 0xcb);
        EXPECT(gbc.readMem(0xb7dd), 0x55);
        // CB 55 0126
        gbc.setState(0xae00, 0xeb1d, 0x44b0, 0xec04, 0xb6f8, 0xfa48, 0x1, 0x0);
        gbc.writeMem(0xae00, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xeb1d);
        EXPECT(gbc.pc(), 0xae02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae00), 0xcb);
        EXPECT(gbc.readMem(0xae01), 0x55);
        // CB 55 0127
        gbc.setState(0x966d, 0x23b4, 0x8fa0, 0x809d, 0x2602, 0x7249, 0x1, 0x0);
        gbc.writeMem(0x966d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x23b4);
        EXPECT(gbc.pc(), 0x966f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x966d), 0xcb);
        EXPECT(gbc.readMem(0x966e), 0x55);
        // CB 55 0128
        gbc.setState(0x620d, 0x647b, 0xc650, 0x6c69, 0x8cd5, 0xeb2, 0x0, 0x1);
        gbc.writeMem(0x620d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x647b);
        EXPECT(gbc.pc(), 0x620f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0129
        gbc.setState(0xca28, 0xd5a1, 0xe330, 0xf1d9, 0xc23f, 0xb7c7, 0x0, 0x1);
        gbc.writeMem(0xca28, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd5a1);
        EXPECT(gbc.pc(), 0xca2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca28), 0xcb);
        EXPECT(gbc.readMem(0xca29), 0x55);
        // CB 55 012A
        gbc.setState(0xd8c9, 0xf477, 0x7320, 0x6608, 0x6fe4, 0xdf94, 0x0, 0x1);
        gbc.writeMem(0xd8c9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf477);
        EXPECT(gbc.pc(), 0xd8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8c9), 0xcb);
        EXPECT(gbc.readMem(0xd8ca), 0x55);
        // CB 55 012B
        gbc.setState(0x5096, 0xd7eb, 0x9bf0, 0x92db, 0xbcd5, 0x928b, 0x0, 0x1);
        gbc.writeMem(0x5096, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd7eb);
        EXPECT(gbc.pc(), 0x5098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 012C
        gbc.setState(0x2999, 0x5551, 0x6aa0, 0xebad, 0x39f5, 0xcd10, 0x0, 0x0);
        gbc.writeMem(0x2999, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5551);
        EXPECT(gbc.pc(), 0x299b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 012D
        gbc.setState(0x47d0, 0xfab9, 0x78e0, 0x8ba, 0x1ba8, 0x9b98, 0x1, 0x0);
        gbc.writeMem(0x47d0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfab9);
        EXPECT(gbc.pc(), 0x47d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 012E
        gbc.setState(0x69a6, 0x136e, 0xa9b0, 0x2512, 0xf36c, 0x5385, 0x0, 0x1);
        gbc.writeMem(0x69a6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x136e);
        EXPECT(gbc.pc(), 0x69a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0130
        gbc.setState(0xcc24, 0x1d43, 0xaf70, 0x7c56, 0x7810, 0xc1a0, 0x0, 0x0);
        gbc.writeMem(0xcc24, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1d43);
        EXPECT(gbc.pc(), 0xcc26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc24), 0xcb);
        EXPECT(gbc.readMem(0xcc25), 0x55);
        // CB 55 0131
        gbc.setState(0x2001, 0xad07, 0xc9f0, 0x7f29, 0xe8c2, 0x56c7, 0x1, 0x1);
        gbc.writeMem(0x2001, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xad07);
        EXPECT(gbc.pc(), 0x2003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0132
        gbc.setState(0xed06, 0xd3b7, 0x76a0, 0x546f, 0x3d2a, 0xbd1c, 0x1, 0x0);
        gbc.writeMem(0xed06, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd3b7);
        EXPECT(gbc.pc(), 0xed08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed06), 0xcb);
        EXPECT(gbc.readMem(0xed07), 0x55);
        // CB 55 0133
        gbc.setState(0x57c0, 0x94a1, 0x7950, 0x38fe, 0x8b75, 0x33b6, 0x1, 0x1);
        gbc.writeMem(0x57c0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x94a1);
        EXPECT(gbc.pc(), 0x57c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0134
        gbc.setState(0xd43c, 0x3cef, 0x87e0, 0xa4b8, 0x51d6, 0x7ce0, 0x0, 0x0);
        gbc.writeMem(0xd43c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3cef);
        EXPECT(gbc.pc(), 0xd43e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd43c), 0xcb);
        EXPECT(gbc.readMem(0xd43d), 0x55);
        // CB 55 0135
        gbc.setState(0xa7fa, 0xba1f, 0x1930, 0x3ffb, 0x5279, 0x77f6, 0x1, 0x0);
        gbc.writeMem(0xa7fa, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xba1f);
        EXPECT(gbc.pc(), 0xa7fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7fa), 0xcb);
        EXPECT(gbc.readMem(0xa7fb), 0x55);
        // CB 55 0136
        gbc.setState(0x1832, 0xe1d6, 0xa190, 0xcc50, 0xeaec, 0xa456, 0x0, 0x1);
        gbc.writeMem(0x1832, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe1d6);
        EXPECT(gbc.pc(), 0x1834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0137
        gbc.setState(0xc92c, 0x2332, 0x8130, 0x361f, 0x27e3, 0x85d2, 0x1, 0x1);
        gbc.writeMem(0xc92c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2332);
        EXPECT(gbc.pc(), 0xc92e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92c), 0xcb);
        EXPECT(gbc.readMem(0xc92d), 0x55);
        // CB 55 0138
        gbc.setState(0x661e, 0x728b, 0x80e0, 0xd7f8, 0xc218, 0xb50e, 0x0, 0x1);
        gbc.writeMem(0x661e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x728b);
        EXPECT(gbc.pc(), 0x6620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0139
        gbc.setState(0x84c0, 0xf049, 0x9c70, 0xa6e9, 0xb82c, 0xa099, 0x1, 0x0);
        gbc.writeMem(0x84c0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf049);
        EXPECT(gbc.pc(), 0x84c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c0), 0xcb);
        EXPECT(gbc.readMem(0x84c1), 0x55);
        // CB 55 013B
        gbc.setState(0xd9e7, 0xd487, 0x5f90, 0xf307, 0x5f8, 0x14d9, 0x1, 0x1);
        gbc.writeMem(0xd9e7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd487);
        EXPECT(gbc.pc(), 0xd9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e7), 0xcb);
        EXPECT(gbc.readMem(0xd9e8), 0x55);
        // CB 55 013C
        gbc.setState(0xcab9, 0xcbac, 0x8b00, 0x69d9, 0xda87, 0xfc3d, 0x0, 0x0);
        gbc.writeMem(0xcab9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcbac);
        EXPECT(gbc.pc(), 0xcabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab9), 0xcb);
        EXPECT(gbc.readMem(0xcaba), 0x55);
        // CB 55 013D
        gbc.setState(0x829f, 0x3477, 0xbdf0, 0xbf, 0xcd19, 0x78dd, 0x0, 0x0);
        gbc.writeMem(0x829f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3477);
        EXPECT(gbc.pc(), 0x82a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829f), 0xcb);
        EXPECT(gbc.readMem(0x82a0), 0x55);
        // CB 55 013E
        gbc.setState(0xeaeb, 0x7b93, 0xd620, 0xf0b3, 0x74e2, 0x7ec7, 0x1, 0x1);
        gbc.writeMem(0xeaeb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7b93);
        EXPECT(gbc.pc(), 0xeaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaeb), 0xcb);
        EXPECT(gbc.readMem(0xeaec), 0x55);
        // CB 55 013F
        gbc.setState(0x577a, 0xce3f, 0x6a70, 0x8100, 0x20df, 0x4a43, 0x1, 0x0);
        gbc.writeMem(0x577a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xce3f);
        EXPECT(gbc.pc(), 0x577c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0140
        gbc.setState(0x5e57, 0x3ea, 0xada0, 0xc8d1, 0x6e05, 0xd0c, 0x0, 0x1);
        gbc.writeMem(0x5e57, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3ea);
        EXPECT(gbc.pc(), 0x5e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0141
        gbc.setState(0x57f9, 0x28e9, 0x7240, 0x4489, 0xb459, 0x6dc6, 0x1, 0x1);
        gbc.writeMem(0x57f9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x28e9);
        EXPECT(gbc.pc(), 0x57fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0142
        gbc.setState(0x8608, 0x57bc, 0xc5e0, 0x811a, 0x12a4, 0xb625, 0x1, 0x1);
        gbc.writeMem(0x8608, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x57bc);
        EXPECT(gbc.pc(), 0x860a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8608), 0xcb);
        EXPECT(gbc.readMem(0x8609), 0x55);
        // CB 55 0143
        gbc.setState(0xa0d2, 0x9528, 0x2d90, 0xa548, 0xf30f, 0x3d2b, 0x1, 0x0);
        gbc.writeMem(0xa0d2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9528);
        EXPECT(gbc.pc(), 0xa0d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d2), 0xcb);
        EXPECT(gbc.readMem(0xa0d3), 0x55);
        // CB 55 0144
        gbc.setState(0x26aa, 0xadf8, 0xfd30, 0xb87, 0xaabd, 0x583e, 0x1, 0x1);
        gbc.writeMem(0x26aa, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xadf8);
        EXPECT(gbc.pc(), 0x26ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0145
        gbc.setState(0x4882, 0x3d66, 0x2840, 0xf52a, 0xca25, 0x7b7d, 0x0, 0x1);
        gbc.writeMem(0x4882, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3d66);
        EXPECT(gbc.pc(), 0x4884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0146
        gbc.setState(0x6332, 0x9cab, 0x29c0, 0xbd19, 0xe5b0, 0xef8b, 0x0, 0x0);
        gbc.writeMem(0x6332, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9cab);
        EXPECT(gbc.pc(), 0x6334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0147
        gbc.setState(0xed56, 0xc1fc, 0xc010, 0xa995, 0xa5d1, 0xf94d, 0x1, 0x0);
        gbc.writeMem(0xed56, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc1fc);
        EXPECT(gbc.pc(), 0xed58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed56), 0xcb);
        EXPECT(gbc.readMem(0xed57), 0x55);
        // CB 55 0148
        gbc.setState(0x6bab, 0x68dd, 0xad60, 0x5f4, 0xb957, 0x512a, 0x0, 0x1);
        gbc.writeMem(0x6bab, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x68dd);
        EXPECT(gbc.pc(), 0x6bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0149
        gbc.setState(0x2b54, 0xf584, 0x5d50, 0x1785, 0x1246, 0xa003, 0x1, 0x0);
        gbc.writeMem(0x2b54, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf584);
        EXPECT(gbc.pc(), 0x2b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 014A
        gbc.setState(0x2388, 0xf8ce, 0x5300, 0x54aa, 0xb25, 0x27d, 0x1, 0x1);
        gbc.writeMem(0x2388, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf8ce);
        EXPECT(gbc.pc(), 0x238a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 014B
        gbc.setState(0x312a, 0x1f0b, 0xa1b0, 0x6b6e, 0x4992, 0x7750, 0x0, 0x1);
        gbc.writeMem(0x312a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1f0b);
        EXPECT(gbc.pc(), 0x312c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 014C
        gbc.setState(0x9635, 0xd001, 0x16a0, 0x6175, 0xe164, 0x81d5, 0x1, 0x1);
        gbc.writeMem(0x9635, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd001);
        EXPECT(gbc.pc(), 0x9637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9635), 0xcb);
        EXPECT(gbc.readMem(0x9636), 0x55);
        // CB 55 014D
        gbc.setState(0xdddd, 0x12f, 0x6b00, 0xd32, 0x5367, 0x8d4e, 0x0, 0x0);
        gbc.writeMem(0xdddd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x12f);
        EXPECT(gbc.pc(), 0xdddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdddd), 0xcb);
        EXPECT(gbc.readMem(0xddde), 0x55);
        // CB 55 014E
        gbc.setState(0x2d73, 0xa325, 0x3e70, 0x690b, 0x5016, 0xedb, 0x0, 0x0);
        gbc.writeMem(0x2d73, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa325);
        EXPECT(gbc.pc(), 0x2d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 014F
        gbc.setState(0xa40c, 0x55b9, 0x34e0, 0x819d, 0xa9bd, 0x1f8b, 0x1, 0x0);
        gbc.writeMem(0xa40c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x55b9);
        EXPECT(gbc.pc(), 0xa40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa40c), 0xcb);
        EXPECT(gbc.readMem(0xa40d), 0x55);
        // CB 55 0150
        gbc.setState(0x3f0c, 0x9365, 0x3590, 0x5cbd, 0x23e, 0xe232, 0x1, 0x1);
        gbc.writeMem(0x3f0c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9365);
        EXPECT(gbc.pc(), 0x3f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0151
        gbc.setState(0xedd9, 0x625e, 0xb0b0, 0x1ae4, 0x9ad5, 0xc4d2, 0x0, 0x0);
        gbc.writeMem(0xedd9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x625e);
        EXPECT(gbc.pc(), 0xeddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd9), 0xcb);
        EXPECT(gbc.readMem(0xedda), 0x55);
        // CB 55 0152
        gbc.setState(0x6885, 0x6915, 0xf3f0, 0xa989, 0x64eb, 0x5997, 0x0, 0x1);
        gbc.writeMem(0x6885, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6915);
        EXPECT(gbc.pc(), 0x6887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0153
        gbc.setState(0xd280, 0x91ca, 0xd610, 0xe318, 0x8ff, 0xb3fd, 0x1, 0x1);
        gbc.writeMem(0xd280, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x91ca);
        EXPECT(gbc.pc(), 0xd282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd280), 0xcb);
        EXPECT(gbc.readMem(0xd281), 0x55);
        // CB 55 0154
        gbc.setState(0x863d, 0xee52, 0x3d70, 0x2258, 0x5b27, 0xb360, 0x1, 0x0);
        gbc.writeMem(0x863d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xee52);
        EXPECT(gbc.pc(), 0x863f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863d), 0xcb);
        EXPECT(gbc.readMem(0x863e), 0x55);
        // CB 55 0155
        gbc.setState(0x1715, 0xa0be, 0xf360, 0xf4ed, 0x9728, 0xa934, 0x0, 0x1);
        gbc.writeMem(0x1715, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa0be);
        EXPECT(gbc.pc(), 0x1717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0156
        gbc.setState(0x7e28, 0xa5e, 0xb730, 0xbbef, 0x4fca, 0x4d15, 0x1, 0x0);
        gbc.writeMem(0x7e28, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa5e);
        EXPECT(gbc.pc(), 0x7e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0157
        gbc.setState(0x545c, 0xc6c, 0x6c30, 0xd2f0, 0xc2c6, 0xa97b, 0x0, 0x0);
        gbc.writeMem(0x545c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc6c);
        EXPECT(gbc.pc(), 0x545e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0159
        gbc.setState(0x2199, 0xfb02, 0xf810, 0xeb66, 0x9f43, 0xcdf7, 0x0, 0x1);
        gbc.writeMem(0x2199, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfb02);
        EXPECT(gbc.pc(), 0x219b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 015A
        gbc.setState(0x4e5e, 0x2491, 0x750, 0xbed, 0x892, 0x94fe, 0x0, 0x1);
        gbc.writeMem(0x4e5e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2491);
        EXPECT(gbc.pc(), 0x4e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 015B
        gbc.setState(0x8a44, 0xb893, 0xbcf0, 0xb66b, 0x21a3, 0x9076, 0x0, 0x1);
        gbc.writeMem(0x8a44, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb893);
        EXPECT(gbc.pc(), 0x8a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a44), 0xcb);
        EXPECT(gbc.readMem(0x8a45), 0x55);
        // CB 55 015C
        gbc.setState(0x8db3, 0xfaa1, 0xc4c0, 0x2f4a, 0xcbb, 0x1a9b, 0x1, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfaa1);
        EXPECT(gbc.pc(), 0x8db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db3), 0xcb);
        EXPECT(gbc.readMem(0x8db4), 0x55);
        // CB 55 015F
        gbc.setState(0xad74, 0x8fa8, 0x3b80, 0xebdd, 0xf192, 0x28a, 0x1, 0x1);
        gbc.writeMem(0xad74, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8fa8);
        EXPECT(gbc.pc(), 0xad76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad74), 0xcb);
        EXPECT(gbc.readMem(0xad75), 0x55);
        // CB 55 0160
        gbc.setState(0x9c60, 0xe230, 0x5790, 0x41a9, 0xb504, 0x49c, 0x0, 0x1);
        gbc.writeMem(0x9c60, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe230);
        EXPECT(gbc.pc(), 0x9c62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c60), 0xcb);
        EXPECT(gbc.readMem(0x9c61), 0x55);
        // CB 55 0161
        gbc.setState(0x8ba6, 0x872e, 0xfdd0, 0x68e9, 0xde63, 0x86dd, 0x0, 0x0);
        gbc.writeMem(0x8ba6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x872e);
        EXPECT(gbc.pc(), 0x8ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba6), 0xcb);
        EXPECT(gbc.readMem(0x8ba7), 0x55);
        // CB 55 0162
        gbc.setState(0xe044, 0x88e7, 0x2bd0, 0xf974, 0x56c, 0x1ce, 0x1, 0x1);
        gbc.writeMem(0xe044, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x88e7);
        EXPECT(gbc.pc(), 0xe046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe044), 0xcb);
        EXPECT(gbc.readMem(0xe045), 0x55);
        // CB 55 0163
        gbc.setState(0xd3d3, 0xbc5f, 0x50f0, 0xc5d5, 0x92f5, 0xdd92, 0x1, 0x1);
        gbc.writeMem(0xd3d3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbc5f);
        EXPECT(gbc.pc(), 0xd3d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d3), 0xcb);
        EXPECT(gbc.readMem(0xd3d4), 0x55);
        // CB 55 0164
        gbc.setState(0xa70, 0x2cac, 0xc0, 0x2ac6, 0xac40, 0xee1b, 0x0, 0x1);
        gbc.writeMem(0xa70, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2cac);
        EXPECT(gbc.pc(), 0xa72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0165
        gbc.setState(0xc442, 0xb4bf, 0x5270, 0x61ab, 0x54b9, 0x6372, 0x1, 0x0);
        gbc.writeMem(0xc442, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb4bf);
        EXPECT(gbc.pc(), 0xc444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc442), 0xcb);
        EXPECT(gbc.readMem(0xc443), 0x55);
        // CB 55 0166
        gbc.setState(0x7c2c, 0x5663, 0x19d0, 0x9aed, 0x3791, 0x964e, 0x0, 0x0);
        gbc.writeMem(0x7c2c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5663);
        EXPECT(gbc.pc(), 0x7c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0167
        gbc.setState(0x842a, 0xcc86, 0x12a0, 0xcc54, 0xa7e2, 0x4241, 0x1, 0x0);
        gbc.writeMem(0x842a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcc86);
        EXPECT(gbc.pc(), 0x842c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842a), 0xcb);
        EXPECT(gbc.readMem(0x842b), 0x55);
        // CB 55 0168
        gbc.setState(0x124a, 0x5406, 0xbea0, 0x5f73, 0xc2c, 0xc941, 0x1, 0x1);
        gbc.writeMem(0x124a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5406);
        EXPECT(gbc.pc(), 0x124c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0169
        gbc.setState(0x3437, 0xa270, 0xc040, 0xedd3, 0x37c, 0x195b, 0x1, 0x1);
        gbc.writeMem(0x3437, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa270);
        EXPECT(gbc.pc(), 0x3439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 016A
        gbc.setState(0x31bb, 0xeb78, 0xdfe0, 0xdabd, 0x2da9, 0xafc7, 0x1, 0x0);
        gbc.writeMem(0x31bb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xeb78);
        EXPECT(gbc.pc(), 0x31bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 016B
        gbc.setState(0x61fc, 0xf7b4, 0x6800, 0xfcf7, 0xeade, 0xfabc, 0x0, 0x0);
        gbc.writeMem(0x61fc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf7b4);
        EXPECT(gbc.pc(), 0x61fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 016C
        gbc.setState(0xa019, 0x70c0, 0x6910, 0x6237, 0x32a1, 0x292a, 0x0, 0x0);
        gbc.writeMem(0xa019, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x70c0);
        EXPECT(gbc.pc(), 0xa01b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa019), 0xcb);
        EXPECT(gbc.readMem(0xa01a), 0x55);
        // CB 55 016D
        gbc.setState(0x608d, 0xe9a5, 0x4a60, 0xc7f5, 0x24d5, 0xcf59, 0x1, 0x0);
        gbc.writeMem(0x608d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe9a5);
        EXPECT(gbc.pc(), 0x608f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 016E
        gbc.setState(0x934f, 0xecb0, 0xe940, 0xf1ad, 0x4f6f, 0xb8b4, 0x1, 0x1);
        gbc.writeMem(0x934f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xecb0);
        EXPECT(gbc.pc(), 0x9351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x934f), 0xcb);
        EXPECT(gbc.readMem(0x9350), 0x55);
        // CB 55 016F
        gbc.setState(0x28e, 0x2fd6, 0x8750, 0x8a26, 0x53f0, 0x20d8, 0x1, 0x0);
        gbc.writeMem(0x28e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2fd6);
        EXPECT(gbc.pc(), 0x290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0170
        gbc.setState(0x7347, 0xf35d, 0xfc80, 0x83f6, 0x5d59, 0xa45f, 0x1, 0x1);
        gbc.writeMem(0x7347, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf35d);
        EXPECT(gbc.pc(), 0x7349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0171
        gbc.setState(0xe9fa, 0xd8b8, 0xc3a0, 0xc246, 0x89bc, 0x22c3, 0x0, 0x0);
        gbc.writeMem(0xe9fa, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd8b8);
        EXPECT(gbc.pc(), 0xe9fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9fa), 0xcb);
        EXPECT(gbc.readMem(0xe9fb), 0x55);
        // CB 55 0172
        gbc.setState(0x6ad8, 0x77c6, 0xbaf0, 0xe9b6, 0xf9fc, 0x9ea7, 0x0, 0x0);
        gbc.writeMem(0x6ad8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x77c6);
        EXPECT(gbc.pc(), 0x6ada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0173
        gbc.setState(0x9950, 0xb583, 0x5090, 0x9803, 0x2710, 0x21d7, 0x1, 0x0);
        gbc.writeMem(0x9950, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb583);
        EXPECT(gbc.pc(), 0x9952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9950), 0xcb);
        EXPECT(gbc.readMem(0x9951), 0x55);
        // CB 55 0174
        gbc.setState(0x6c38, 0xb9c8, 0xacc0, 0xd48a, 0x3fdf, 0xacec, 0x0, 0x1);
        gbc.writeMem(0x6c38, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb9c8);
        EXPECT(gbc.pc(), 0x6c3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0175
        gbc.setState(0x7ce1, 0x9ad5, 0xb600, 0x1189, 0xb427, 0xe8bc, 0x1, 0x1);
        gbc.writeMem(0x7ce1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9ad5);
        EXPECT(gbc.pc(), 0x7ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0176
        gbc.setState(0x7302, 0xc4e, 0xf5e0, 0xaef1, 0x8c93, 0x6f93, 0x0, 0x1);
        gbc.writeMem(0x7302, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc4e);
        EXPECT(gbc.pc(), 0x7304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0177
        gbc.setState(0x4f28, 0x60a0, 0xfd10, 0x131, 0x726d, 0x313e, 0x0, 0x0);
        gbc.writeMem(0x4f28, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x60a0);
        EXPECT(gbc.pc(), 0x4f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0178
        gbc.setState(0xbe4e, 0xd2c5, 0x9480, 0xa713, 0xe48, 0xeff9, 0x0, 0x1);
        gbc.writeMem(0xbe4e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd2c5);
        EXPECT(gbc.pc(), 0xbe50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe4e), 0xcb);
        EXPECT(gbc.readMem(0xbe4f), 0x55);
        // CB 55 0179
        gbc.setState(0x4710, 0xe916, 0x36e0, 0xc71c, 0xcff9, 0x2ee9, 0x0, 0x1);
        gbc.writeMem(0x4710, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe916);
        EXPECT(gbc.pc(), 0x4712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 017A
        gbc.setState(0x9c6c, 0x8a74, 0xbdb0, 0x6df2, 0x7f, 0xed4a, 0x1, 0x1);
        gbc.writeMem(0x9c6c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8a74);
        EXPECT(gbc.pc(), 0x9c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6c), 0xcb);
        EXPECT(gbc.readMem(0x9c6d), 0x55);
        // CB 55 017B
        gbc.setState(0x7486, 0xc1ff, 0x2580, 0x8131, 0x2b15, 0x2245, 0x1, 0x0);
        gbc.writeMem(0x7486, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc1ff);
        EXPECT(gbc.pc(), 0x7488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 017C
        gbc.setState(0x7966, 0x6a82, 0xd370, 0x5160, 0x563b, 0xf876, 0x1, 0x0);
        gbc.writeMem(0x7966, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6a82);
        EXPECT(gbc.pc(), 0x7968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 017D
        gbc.setState(0x683c, 0xd0c, 0xa0d0, 0x41ee, 0x2342, 0x7a00, 0x1, 0x1);
        gbc.writeMem(0x683c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd0c);
        EXPECT(gbc.pc(), 0x683e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 017E
        gbc.setState(0x8db3, 0xfbac, 0x4210, 0x1fb2, 0xed2c, 0x52c1, 0x1, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfbac);
        EXPECT(gbc.pc(), 0x8db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db3), 0xcb);
        EXPECT(gbc.readMem(0x8db4), 0x55);
        // CB 55 017F
        gbc.setState(0xa16b, 0xb2df, 0x83f0, 0xc9e8, 0x187f, 0xf618, 0x0, 0x0);
        gbc.writeMem(0xa16b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb2df);
        EXPECT(gbc.pc(), 0xa16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa16b), 0xcb);
        EXPECT(gbc.readMem(0xa16c), 0x55);
        // CB 55 0180
        gbc.setState(0x780e, 0x8b59, 0x7d00, 0x3452, 0x221e, 0x29c7, 0x1, 0x1);
        gbc.writeMem(0x780e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8b59);
        EXPECT(gbc.pc(), 0x7810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0182
        gbc.setState(0xca46, 0x97e9, 0x7da0, 0x76b9, 0xd4dd, 0x1625, 0x0, 0x0);
        gbc.writeMem(0xca46, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x97e9);
        EXPECT(gbc.pc(), 0xca48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca46), 0xcb);
        EXPECT(gbc.readMem(0xca47), 0x55);
        // CB 55 0183
        gbc.setState(0x7f30, 0x8492, 0xf520, 0x5218, 0xa5d1, 0xe13d, 0x0, 0x1);
        gbc.writeMem(0x7f30, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8492);
        EXPECT(gbc.pc(), 0x7f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0184
        gbc.setState(0x6cd5, 0xd4e4, 0x10e0, 0x8c38, 0xb3d8, 0x1148, 0x1, 0x1);
        gbc.writeMem(0x6cd5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd4e4);
        EXPECT(gbc.pc(), 0x6cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0185
        gbc.setState(0xcdb, 0xb32a, 0xe1c0, 0x266c, 0xb213, 0x7f0b, 0x1, 0x0);
        gbc.writeMem(0xcdb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb32a);
        EXPECT(gbc.pc(), 0xcdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0186
        gbc.setState(0x6179, 0x6051, 0x7b70, 0xf1fe, 0xd462, 0x8cbc, 0x1, 0x0);
        gbc.writeMem(0x6179, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6051);
        EXPECT(gbc.pc(), 0x617b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0187
        gbc.setState(0x12a0, 0x6f02, 0x3cf0, 0xf189, 0xe29b, 0x9752, 0x1, 0x1);
        gbc.writeMem(0x12a0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6f02);
        EXPECT(gbc.pc(), 0x12a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0188
        gbc.setState(0x31ab, 0xdae3, 0x8d50, 0xc213, 0x79a5, 0xd43f, 0x0, 0x1);
        gbc.writeMem(0x31ab, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdae3);
        EXPECT(gbc.pc(), 0x31ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0189
        gbc.setState(0x3663, 0x677c, 0x2e80, 0xb2b9, 0x5523, 0xb985, 0x0, 0x0);
        gbc.writeMem(0x3663, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x677c);
        EXPECT(gbc.pc(), 0x3665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 018A
        gbc.setState(0x3cba, 0xab11, 0xc770, 0x6b25, 0xc37a, 0x8e67, 0x1, 0x1);
        gbc.writeMem(0x3cba, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xab11);
        EXPECT(gbc.pc(), 0x3cbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 018B
        gbc.setState(0xe1fc, 0xf0bb, 0x1520, 0x97b7, 0xa229, 0x5f9a, 0x0, 0x1);
        gbc.writeMem(0xe1fc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf0bb);
        EXPECT(gbc.pc(), 0xe1fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1fc), 0xcb);
        EXPECT(gbc.readMem(0xe1fd), 0x55);
        // CB 55 018C
        gbc.setState(0xb969, 0x4a3d, 0x5750, 0x695b, 0xc8f7, 0x3ca0, 0x0, 0x0);
        gbc.writeMem(0xb969, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4a3d);
        EXPECT(gbc.pc(), 0xb96b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb969), 0xcb);
        EXPECT(gbc.readMem(0xb96a), 0x55);
        // CB 55 018E
        gbc.setState(0x47ad, 0xa344, 0x170, 0x28b4, 0xadfb, 0x172e, 0x1, 0x0);
        gbc.writeMem(0x47ad, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa344);
        EXPECT(gbc.pc(), 0x47af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 018F
        gbc.setState(0x91ff, 0xc576, 0xe230, 0x7d67, 0x2bbe, 0xedd7, 0x0, 0x0);
        gbc.writeMem(0x91ff, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc576);
        EXPECT(gbc.pc(), 0x9201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ff), 0xcb);
        EXPECT(gbc.readMem(0x9200), 0x55);
        // CB 55 0190
        gbc.setState(0x82e, 0xe35a, 0x5630, 0xecf0, 0x12c7, 0xacae, 0x1, 0x1);
        gbc.writeMem(0x82e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe35a);
        EXPECT(gbc.pc(), 0x830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0191
        gbc.setState(0xcb3e, 0x8197, 0x6140, 0x66c2, 0xf266, 0xe412, 0x1, 0x0);
        gbc.writeMem(0xcb3e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8197);
        EXPECT(gbc.pc(), 0xcb40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3e), 0xcb);
        EXPECT(gbc.readMem(0xcb3f), 0x55);
        // CB 55 0192
        gbc.setState(0xb6df, 0xe31d, 0x9230, 0x3061, 0xcc13, 0x9ec5, 0x0, 0x0);
        gbc.writeMem(0xb6df, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe31d);
        EXPECT(gbc.pc(), 0xb6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6df), 0xcb);
        EXPECT(gbc.readMem(0xb6e0), 0x55);
        // CB 55 0193
        gbc.setState(0x8b5d, 0x13b7, 0xaf10, 0x3e5, 0x677, 0xbc6c, 0x0, 0x0);
        gbc.writeMem(0x8b5d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x13b7);
        EXPECT(gbc.pc(), 0x8b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5d), 0xcb);
        EXPECT(gbc.readMem(0x8b5e), 0x55);
        // CB 55 0194
        gbc.setState(0xc128, 0xd6f0, 0x4e90, 0x8c52, 0x4f28, 0xca73, 0x1, 0x1);
        gbc.writeMem(0xc128, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd6f0);
        EXPECT(gbc.pc(), 0xc12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc128), 0xcb);
        EXPECT(gbc.readMem(0xc129), 0x55);
        // CB 55 0195
        gbc.setState(0x20c9, 0xdf11, 0x9e90, 0x872d, 0x169c, 0xe051, 0x0, 0x0);
        gbc.writeMem(0x20c9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdf11);
        EXPECT(gbc.pc(), 0x20cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0196
        gbc.setState(0x79f9, 0x93d2, 0x3d30, 0x91e, 0x9c17, 0x31f2, 0x1, 0x0);
        gbc.writeMem(0x79f9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x93d2);
        EXPECT(gbc.pc(), 0x79fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0197
        gbc.setState(0x7b3, 0x4a3b, 0x2910, 0x49a7, 0xd514, 0x95d5, 0x1, 0x1);
        gbc.writeMem(0x7b3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4a3b);
        EXPECT(gbc.pc(), 0x7b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0198
        gbc.setState(0x91c8, 0x5502, 0x7380, 0x53f5, 0xe646, 0x7a9f, 0x0, 0x0);
        gbc.writeMem(0x91c8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5502);
        EXPECT(gbc.pc(), 0x91ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c8), 0xcb);
        EXPECT(gbc.readMem(0x91c9), 0x55);
        // CB 55 019A
        gbc.setState(0xef3e, 0xa164, 0x49a0, 0x731, 0xb1e4, 0x7b59, 0x1, 0x1);
        gbc.writeMem(0xef3e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa164);
        EXPECT(gbc.pc(), 0xef40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef3e), 0xcb);
        EXPECT(gbc.readMem(0xef3f), 0x55);
        // CB 55 019B
        gbc.setState(0x6529, 0xf96f, 0xc150, 0xe665, 0x883e, 0xca1f, 0x0, 0x1);
        gbc.writeMem(0x6529, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf96f);
        EXPECT(gbc.pc(), 0x652b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 019C
        gbc.setState(0x6450, 0x1a6c, 0x1fd0, 0xc3c5, 0x260c, 0x2269, 0x1, 0x1);
        gbc.writeMem(0x6450, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1a6c);
        EXPECT(gbc.pc(), 0x6452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 019E
        gbc.setState(0x68ae, 0x16e7, 0x40c0, 0x5bcd, 0xf93d, 0x49f, 0x1, 0x1);
        gbc.writeMem(0x68ae, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x16e7);
        EXPECT(gbc.pc(), 0x68b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 019F
        gbc.setState(0x3d0f, 0xb80f, 0x8af0, 0xd3ad, 0x9b01, 0x7f5c, 0x0, 0x0);
        gbc.writeMem(0x3d0f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb80f);
        EXPECT(gbc.pc(), 0x3d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01A1
        gbc.setState(0x3de3, 0x7019, 0xf440, 0x669d, 0x1dbe, 0x3907, 0x0, 0x0);
        gbc.writeMem(0x3de3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7019);
        EXPECT(gbc.pc(), 0x3de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01A2
        gbc.setState(0x91b2, 0x8d24, 0xe8c0, 0xe7bd, 0x376f, 0x25c7, 0x1, 0x1);
        gbc.writeMem(0x91b2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8d24);
        EXPECT(gbc.pc(), 0x91b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b2), 0xcb);
        EXPECT(gbc.readMem(0x91b3), 0x55);
        // CB 55 01A3
        gbc.setState(0xdecc, 0xdc5a, 0xb760, 0x105d, 0x8692, 0xea2c, 0x1, 0x1);
        gbc.writeMem(0xdecc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xdc5a);
        EXPECT(gbc.pc(), 0xdece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdecc), 0xcb);
        EXPECT(gbc.readMem(0xdecd), 0x55);
        // CB 55 01A4
        gbc.setState(0x68a9, 0x1908, 0x2120, 0x4ff8, 0x8119, 0x1509, 0x0, 0x1);
        gbc.writeMem(0x68a9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1908);
        EXPECT(gbc.pc(), 0x68ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01A5
        gbc.setState(0xba08, 0x4a5a, 0x44d0, 0x544c, 0xb0d1, 0xd36f, 0x1, 0x0);
        gbc.writeMem(0xba08, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4a5a);
        EXPECT(gbc.pc(), 0xba0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba08), 0xcb);
        EXPECT(gbc.readMem(0xba09), 0x55);
        // CB 55 01A6
        gbc.setState(0xbd20, 0xe40a, 0xe760, 0x8892, 0x4981, 0x74a2, 0x1, 0x0);
        gbc.writeMem(0xbd20, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe40a);
        EXPECT(gbc.pc(), 0xbd22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd20), 0xcb);
        EXPECT(gbc.readMem(0xbd21), 0x55);
        // CB 55 01A7
        gbc.setState(0x32d2, 0x91b3, 0xc510, 0xae66, 0x4ba, 0xf67f, 0x1, 0x1);
        gbc.writeMem(0x32d2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x91b3);
        EXPECT(gbc.pc(), 0x32d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01A8
        gbc.setState(0xeb8, 0x83b4, 0xcc10, 0xe899, 0xdcc3, 0xaa1d, 0x0, 0x1);
        gbc.writeMem(0xeb8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x83b4);
        EXPECT(gbc.pc(), 0xeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01A9
        gbc.setState(0xb222, 0x6889, 0x8110, 0xdde3, 0x648c, 0x1b54, 0x0, 0x0);
        gbc.writeMem(0xb222, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6889);
        EXPECT(gbc.pc(), 0xb224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb222), 0xcb);
        EXPECT(gbc.readMem(0xb223), 0x55);
        // CB 55 01AA
        gbc.setState(0x30a5, 0x22b4, 0x7400, 0x65c, 0x83ed, 0xc218, 0x0, 0x1);
        gbc.writeMem(0x30a5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x22b4);
        EXPECT(gbc.pc(), 0x30a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01AB
        gbc.setState(0x7749, 0x97f1, 0xcdb0, 0xa1c8, 0x3d8d, 0xc062, 0x1, 0x1);
        gbc.writeMem(0x7749, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x97f1);
        EXPECT(gbc.pc(), 0x774b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01AC
        gbc.setState(0x124e, 0xa589, 0xcf20, 0xcabb, 0x88a2, 0xd29b, 0x0, 0x1);
        gbc.writeMem(0x124e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa589);
        EXPECT(gbc.pc(), 0x1250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01AD
        gbc.setState(0x56b7, 0x4eb8, 0xbfb0, 0x7b00, 0xc36b, 0x9586, 0x1, 0x1);
        gbc.writeMem(0x56b7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4eb8);
        EXPECT(gbc.pc(), 0x56b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01AE
        gbc.setState(0x9963, 0x627e, 0x2da0, 0xe0c5, 0xe7cf, 0xa339, 0x0, 0x1);
        gbc.writeMem(0x9963, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x627e);
        EXPECT(gbc.pc(), 0x9965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9963), 0xcb);
        EXPECT(gbc.readMem(0x9964), 0x55);
        // CB 55 01B0
        gbc.setState(0xe6ae, 0x464c, 0xf310, 0x999c, 0xc853, 0xda11, 0x0, 0x1);
        gbc.writeMem(0xe6ae, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x464c);
        EXPECT(gbc.pc(), 0xe6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ae), 0xcb);
        EXPECT(gbc.readMem(0xe6af), 0x55);
        // CB 55 01B1
        gbc.setState(0x21b2, 0x46b4, 0xb760, 0x74cb, 0xe22f, 0xb130, 0x0, 0x1);
        gbc.writeMem(0x21b2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x46b4);
        EXPECT(gbc.pc(), 0x21b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01B2
        gbc.setState(0x4084, 0x7a7f, 0xc770, 0xd47b, 0x86af, 0xefaf, 0x1, 0x0);
        gbc.writeMem(0x4084, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7a7f);
        EXPECT(gbc.pc(), 0x4086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01B3
        gbc.setState(0x457c, 0xbea6, 0x2a30, 0x8a82, 0xf83d, 0x900b, 0x0, 0x1);
        gbc.writeMem(0x457c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbea6);
        EXPECT(gbc.pc(), 0x457e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01B4
        gbc.setState(0x5ee1, 0x1ede, 0x8f90, 0x41f, 0x1eb5, 0x50eb, 0x1, 0x0);
        gbc.writeMem(0x5ee1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1ede);
        EXPECT(gbc.pc(), 0x5ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01B5
        gbc.setState(0x5f99, 0x427c, 0x88c0, 0xff9, 0x6923, 0xb800, 0x1, 0x0);
        gbc.writeMem(0x5f99, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x427c);
        EXPECT(gbc.pc(), 0x5f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01B6
        gbc.setState(0x1e40, 0x707b, 0x3d50, 0xca2c, 0xa09c, 0xd3c6, 0x0, 0x0);
        gbc.writeMem(0x1e40, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x707b);
        EXPECT(gbc.pc(), 0x1e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01B7
        gbc.setState(0x4f06, 0xedb7, 0xd740, 0x627c, 0xfbcf, 0x31b4, 0x1, 0x0);
        gbc.writeMem(0x4f06, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xedb7);
        EXPECT(gbc.pc(), 0x4f08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01B8
        gbc.setState(0x66a1, 0x83ef, 0x7620, 0xa3ff, 0x9b7e, 0x1c54, 0x0, 0x1);
        gbc.writeMem(0x66a1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x83ef);
        EXPECT(gbc.pc(), 0x66a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01B9
        gbc.setState(0x55cd, 0x4b6b, 0x2e00, 0xa6d5, 0x1cb3, 0x3eaa, 0x0, 0x0);
        gbc.writeMem(0x55cd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4b6b);
        EXPECT(gbc.pc(), 0x55cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01BB
        gbc.setState(0xb7e9, 0x4e75, 0x5a30, 0x6a4e, 0x1ea8, 0xbd24, 0x0, 0x1);
        gbc.writeMem(0xb7e9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4e75);
        EXPECT(gbc.pc(), 0xb7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e9), 0xcb);
        EXPECT(gbc.readMem(0xb7ea), 0x55);
        // CB 55 01BC
        gbc.setState(0x9e25, 0xbfb, 0xd3a0, 0x6cf3, 0x91bc, 0xbfd, 0x1, 0x0);
        gbc.writeMem(0x9e25, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbfb);
        EXPECT(gbc.pc(), 0x9e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e25), 0xcb);
        EXPECT(gbc.readMem(0x9e26), 0x55);
        // CB 55 01BD
        gbc.setState(0xc49d, 0x2ef9, 0x73a0, 0xb3f, 0x475a, 0x3d90, 0x1, 0x0);
        gbc.writeMem(0xc49d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2ef9);
        EXPECT(gbc.pc(), 0xc49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc49d), 0xcb);
        EXPECT(gbc.readMem(0xc49e), 0x55);
        // CB 55 01BE
        gbc.setState(0xdd2b, 0x9b99, 0x9ad0, 0xdd18, 0xdb04, 0xd641, 0x0, 0x0);
        gbc.writeMem(0xdd2b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9b99);
        EXPECT(gbc.pc(), 0xdd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd2b), 0xcb);
        EXPECT(gbc.readMem(0xdd2c), 0x55);
        // CB 55 01BF
        gbc.setState(0x60d4, 0x263a, 0x5900, 0xf83b, 0x81ba, 0x9e3f, 0x1, 0x0);
        gbc.writeMem(0x60d4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x263a);
        EXPECT(gbc.pc(), 0x60d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01C0
        gbc.setState(0x35e5, 0x6e40, 0xf090, 0xa1b6, 0xe807, 0x3424, 0x0, 0x0);
        gbc.writeMem(0x35e5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6e40);
        EXPECT(gbc.pc(), 0x35e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01C1
        gbc.setState(0xee39, 0x87da, 0x10d0, 0x2e98, 0x6b8, 0xaed9, 0x0, 0x1);
        gbc.writeMem(0xee39, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x87da);
        EXPECT(gbc.pc(), 0xee3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee39), 0xcb);
        EXPECT(gbc.readMem(0xee3a), 0x55);
        // CB 55 01C2
        gbc.setState(0x40de, 0x7395, 0xf7f0, 0x907c, 0xaa0, 0x68b7, 0x1, 0x1);
        gbc.writeMem(0x40de, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7395);
        EXPECT(gbc.pc(), 0x40e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01C3
        gbc.setState(0x334c, 0x6b12, 0x3f70, 0x987b, 0x5be, 0x9955, 0x0, 0x0);
        gbc.writeMem(0x334c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6b12);
        EXPECT(gbc.pc(), 0x334e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01C4
        gbc.setState(0x5281, 0xf89a, 0x1bc0, 0x378c, 0x3b6, 0x2c08, 0x1, 0x1);
        gbc.writeMem(0x5281, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf89a);
        EXPECT(gbc.pc(), 0x5283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01C5
        gbc.setState(0x975e, 0x6736, 0x92b0, 0xe0d5, 0xeb55, 0x8c2, 0x0, 0x0);
        gbc.writeMem(0x975e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6736);
        EXPECT(gbc.pc(), 0x9760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x975e), 0xcb);
        EXPECT(gbc.readMem(0x975f), 0x55);
        // CB 55 01C6
        gbc.setState(0x283e, 0xd028, 0xf8f0, 0x4cae, 0x5015, 0x52a, 0x1, 0x0);
        gbc.writeMem(0x283e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd028);
        EXPECT(gbc.pc(), 0x2840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01C7
        gbc.setState(0xe9ce, 0x5a53, 0x1dc0, 0x94cc, 0xc9cc, 0x37c4, 0x0, 0x1);
        gbc.writeMem(0xe9ce, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5a53);
        EXPECT(gbc.pc(), 0xe9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ce), 0xcb);
        EXPECT(gbc.readMem(0xe9cf), 0x55);
        // CB 55 01C8
        gbc.setState(0xa740, 0xa37e, 0xc500, 0x6066, 0xdf46, 0x7b9b, 0x0, 0x0);
        gbc.writeMem(0xa740, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa37e);
        EXPECT(gbc.pc(), 0xa742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa740), 0xcb);
        EXPECT(gbc.readMem(0xa741), 0x55);
        // CB 55 01C9
        gbc.setState(0x3c8c, 0x9e34, 0x9380, 0x993b, 0x555d, 0x9f01, 0x0, 0x0);
        gbc.writeMem(0x3c8c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9e34);
        EXPECT(gbc.pc(), 0x3c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01CA
        gbc.setState(0xe83d, 0x3e37, 0x8960, 0xdc9, 0xda30, 0x7e30, 0x0, 0x1);
        gbc.writeMem(0xe83d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3e37);
        EXPECT(gbc.pc(), 0xe83f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe83d), 0xcb);
        EXPECT(gbc.readMem(0xe83e), 0x55);
        // CB 55 01CB
        gbc.setState(0xa552, 0xa8d1, 0xb320, 0x785d, 0x164f, 0x698e, 0x1, 0x1);
        gbc.writeMem(0xa552, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa8d1);
        EXPECT(gbc.pc(), 0xa554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa552), 0xcb);
        EXPECT(gbc.readMem(0xa553), 0x55);
        // CB 55 01CC
        gbc.setState(0x4908, 0x5489, 0x1e80, 0x7a9d, 0xf512, 0x9f59, 0x1, 0x0);
        gbc.writeMem(0x4908, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5489);
        EXPECT(gbc.pc(), 0x490a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01CD
        gbc.setState(0x15db, 0x99b4, 0x3510, 0x928e, 0xcf5f, 0x285a, 0x1, 0x1);
        gbc.writeMem(0x15db, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x99b4);
        EXPECT(gbc.pc(), 0x15dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01CE
        gbc.setState(0x7caa, 0xe9, 0xc4b0, 0x78a9, 0x2880, 0xd6c6, 0x1, 0x0);
        gbc.writeMem(0x7caa, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe9);
        EXPECT(gbc.pc(), 0x7cac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01CF
        gbc.setState(0x1859, 0x496e, 0xea10, 0x4f65, 0xc557, 0xd784, 0x0, 0x0);
        gbc.writeMem(0x1859, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x496e);
        EXPECT(gbc.pc(), 0x185b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01D0
        gbc.setState(0x44fc, 0x146e, 0x63c0, 0xfdc8, 0x649, 0xae43, 0x1, 0x0);
        gbc.writeMem(0x44fc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x146e);
        EXPECT(gbc.pc(), 0x44fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01D1
        gbc.setState(0xb6ff, 0xf039, 0xb3a0, 0x7b6f, 0x5402, 0xb591, 0x0, 0x1);
        gbc.writeMem(0xb6ff, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf039);
        EXPECT(gbc.pc(), 0xb701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ff), 0xcb);
        EXPECT(gbc.readMem(0xb700), 0x55);
        // CB 55 01D2
        gbc.setState(0xd43b, 0xec6f, 0xcb30, 0x9547, 0x43af, 0x6647, 0x1, 0x0);
        gbc.writeMem(0xd43b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xec6f);
        EXPECT(gbc.pc(), 0xd43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43b), 0xcb);
        EXPECT(gbc.readMem(0xd43c), 0x55);
        // CB 55 01D3
        gbc.setState(0x11d8, 0x79dd, 0x4530, 0xe8f3, 0x7da7, 0x3240, 0x1, 0x1);
        gbc.writeMem(0x11d8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x79dd);
        EXPECT(gbc.pc(), 0x11da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01D4
        gbc.setState(0xa548, 0x8d5c, 0xd470, 0x72ba, 0x5a6c, 0x2858, 0x1, 0x1);
        gbc.writeMem(0xa548, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8d5c);
        EXPECT(gbc.pc(), 0xa54a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa548), 0xcb);
        EXPECT(gbc.readMem(0xa549), 0x55);
        // CB 55 01D5
        gbc.setState(0xa663, 0x3d61, 0xa7e0, 0x1c3c, 0xfc3, 0xad97, 0x1, 0x0);
        gbc.writeMem(0xa663, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3d61);
        EXPECT(gbc.pc(), 0xa665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa663), 0xcb);
        EXPECT(gbc.readMem(0xa664), 0x55);
        // CB 55 01D6
        gbc.setState(0x7c5c, 0xf82a, 0xae40, 0xdf6a, 0x87f4, 0x6c24, 0x0, 0x0);
        gbc.writeMem(0x7c5c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf82a);
        EXPECT(gbc.pc(), 0x7c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01D7
        gbc.setState(0x3ec8, 0xcc97, 0x24c0, 0x3822, 0x5c37, 0xfc86, 0x1, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcc97);
        EXPECT(gbc.pc(), 0x3eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01D8
        gbc.setState(0x6390, 0xecfc, 0x4ec0, 0xf734, 0xa33a, 0x920f, 0x0, 0x1);
        gbc.writeMem(0x6390, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xecfc);
        EXPECT(gbc.pc(), 0x6392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01D9
        gbc.setState(0x892f, 0x63a6, 0x27f0, 0x508a, 0xa6d1, 0x436d, 0x0, 0x0);
        gbc.writeMem(0x892f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x63a6);
        EXPECT(gbc.pc(), 0x8931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892f), 0xcb);
        EXPECT(gbc.readMem(0x8930), 0x55);
        // CB 55 01DA
        gbc.setState(0xdaf2, 0x86b5, 0x4440, 0x37f0, 0x2667, 0x4b66, 0x1, 0x0);
        gbc.writeMem(0xdaf2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x86b5);
        EXPECT(gbc.pc(), 0xdaf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf2), 0xcb);
        EXPECT(gbc.readMem(0xdaf3), 0x55);
        // CB 55 01DB
        gbc.setState(0xcd00, 0x918b, 0xa580, 0x9e9e, 0xbbfd, 0x927c, 0x0, 0x1);
        gbc.writeMem(0xcd00, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x918b);
        EXPECT(gbc.pc(), 0xcd02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd00), 0xcb);
        EXPECT(gbc.readMem(0xcd01), 0x55);
        // CB 55 01DC
        gbc.setState(0x53f, 0x4061, 0x7e70, 0x2087, 0x8662, 0x8053, 0x0, 0x1);
        gbc.writeMem(0x53f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4061);
        EXPECT(gbc.pc(), 0x541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01DD
        gbc.setState(0x613a, 0x3688, 0x98b0, 0x99de, 0x4bec, 0xc68a, 0x1, 0x1);
        gbc.writeMem(0x613a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3688);
        EXPECT(gbc.pc(), 0x613c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01DE
        gbc.setState(0xa35b, 0x12ee, 0xc080, 0x82a5, 0x9f9a, 0x7436, 0x0, 0x0);
        gbc.writeMem(0xa35b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x12ee);
        EXPECT(gbc.pc(), 0xa35d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa35b), 0xcb);
        EXPECT(gbc.readMem(0xa35c), 0x55);
        // CB 55 01DF
        gbc.setState(0x7cc8, 0xc025, 0x68a0, 0x33ee, 0xb287, 0x17c3, 0x0, 0x1);
        gbc.writeMem(0x7cc8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc025);
        EXPECT(gbc.pc(), 0x7cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01E0
        gbc.setState(0xad41, 0xe3c0, 0x21d0, 0x2a35, 0x39a3, 0x77b2, 0x0, 0x0);
        gbc.writeMem(0xad41, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe3c0);
        EXPECT(gbc.pc(), 0xad43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad41), 0xcb);
        EXPECT(gbc.readMem(0xad42), 0x55);
        // CB 55 01E1
        gbc.setState(0xd8f, 0x96c6, 0xade0, 0xe976, 0xda4b, 0xa41d, 0x0, 0x0);
        gbc.writeMem(0xd8f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x96c6);
        EXPECT(gbc.pc(), 0xd91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01E4
        gbc.setState(0x7685, 0xef8b, 0x9d50, 0xb235, 0x33ad, 0x5292, 0x1, 0x0);
        gbc.writeMem(0x7685, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xef8b);
        EXPECT(gbc.pc(), 0x7687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01E5
        gbc.setState(0x855a, 0xe551, 0x7560, 0x41f0, 0x4e1, 0x169e, 0x1, 0x0);
        gbc.writeMem(0x855a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe551);
        EXPECT(gbc.pc(), 0x855c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x855a), 0xcb);
        EXPECT(gbc.readMem(0x855b), 0x55);
        // CB 55 01E6
        gbc.setState(0xce1c, 0x2e56, 0x55d0, 0x5596, 0x55d8, 0x2d51, 0x0, 0x0);
        gbc.writeMem(0xce1c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2e56);
        EXPECT(gbc.pc(), 0xce1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1c), 0xcb);
        EXPECT(gbc.readMem(0xce1d), 0x55);
        // CB 55 01E7
        gbc.setState(0x5a6, 0x7226, 0xa710, 0x8686, 0x793d, 0xf0b6, 0x1, 0x0);
        gbc.writeMem(0x5a6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7226);
        EXPECT(gbc.pc(), 0x5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01E8
        gbc.setState(0x3773, 0xe553, 0x1280, 0xd73c, 0x3e85, 0x31b0, 0x1, 0x1);
        gbc.writeMem(0x3773, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe553);
        EXPECT(gbc.pc(), 0x3775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01E9
        gbc.setState(0xe30, 0x9364, 0x78e0, 0xe100, 0xd0bd, 0xe9ee, 0x0, 0x0);
        gbc.writeMem(0xe30, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9364);
        EXPECT(gbc.pc(), 0xe32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01EA
        gbc.setState(0xd347, 0xf6b1, 0xed30, 0x83cb, 0x6506, 0x5039, 0x0, 0x1);
        gbc.writeMem(0xd347, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf6b1);
        EXPECT(gbc.pc(), 0xd349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd347), 0xcb);
        EXPECT(gbc.readMem(0xd348), 0x55);
        // CB 55 01EB
        gbc.setState(0x4856, 0xcd3a, 0x21b0, 0x1c1d, 0x8f05, 0x73d, 0x1, 0x1);
        gbc.writeMem(0x4856, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcd3a);
        EXPECT(gbc.pc(), 0x4858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01ED
        gbc.setState(0x9e6e, 0x10f9, 0x6e10, 0xc35e, 0x689a, 0x6d4, 0x1, 0x0);
        gbc.writeMem(0x9e6e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x10f9);
        EXPECT(gbc.pc(), 0x9e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6e), 0xcb);
        EXPECT(gbc.readMem(0x9e6f), 0x55);
        // CB 55 01EE
        gbc.setState(0xce81, 0xb58, 0x8850, 0xdd67, 0xeb1c, 0xda36, 0x1, 0x0);
        gbc.writeMem(0xce81, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb58);
        EXPECT(gbc.pc(), 0xce83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce81), 0xcb);
        EXPECT(gbc.readMem(0xce82), 0x55);
        // CB 55 01EF
        gbc.setState(0x32c7, 0x757d, 0x6580, 0xd0d1, 0xa58, 0xd091, 0x0, 0x0);
        gbc.writeMem(0x32c7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x757d);
        EXPECT(gbc.pc(), 0x32c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01F0
        gbc.setState(0xe768, 0x277d, 0xe270, 0x5757, 0x2c32, 0x1da8, 0x1, 0x0);
        gbc.writeMem(0xe768, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x277d);
        EXPECT(gbc.pc(), 0xe76a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe768), 0xcb);
        EXPECT(gbc.readMem(0xe769), 0x55);
        // CB 55 01F1
        gbc.setState(0xc207, 0x85fe, 0xcb0, 0xcabd, 0x7779, 0x6918, 0x0, 0x0);
        gbc.writeMem(0xc207, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x85fe);
        EXPECT(gbc.pc(), 0xc209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc207), 0xcb);
        EXPECT(gbc.readMem(0xc208), 0x55);
        // CB 55 01F2
        gbc.setState(0xd88a, 0x5f65, 0xb3e0, 0xba63, 0x7aef, 0x853f, 0x1, 0x0);
        gbc.writeMem(0xd88a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5f65);
        EXPECT(gbc.pc(), 0xd88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88a), 0xcb);
        EXPECT(gbc.readMem(0xd88b), 0x55);
        // CB 55 01F3
        gbc.setState(0x3f89, 0xae48, 0xd990, 0x12f0, 0xd0e3, 0x98f7, 0x1, 0x1);
        gbc.writeMem(0x3f89, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xae48);
        EXPECT(gbc.pc(), 0x3f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01F4
        gbc.setState(0x3f3e, 0x38c5, 0x45c0, 0x2f9d, 0xe7df, 0x9e9e, 0x1, 0x1);
        gbc.writeMem(0x3f3e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x38c5);
        EXPECT(gbc.pc(), 0x3f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01F5
        gbc.setState(0x17f8, 0x4df1, 0xda10, 0x8a03, 0xbc1, 0xbd88, 0x1, 0x1);
        gbc.writeMem(0x17f8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4df1);
        EXPECT(gbc.pc(), 0x17fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 01F6
        gbc.setState(0xb508, 0x8795, 0x7010, 0x9093, 0xf48e, 0x5aa2, 0x0, 0x1);
        gbc.writeMem(0xb508, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8795);
        EXPECT(gbc.pc(), 0xb50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb508), 0xcb);
        EXPECT(gbc.readMem(0xb509), 0x55);
        // CB 55 01F7
        gbc.setState(0x77e9, 0xf014, 0x1b40, 0x5d97, 0x6c79, 0x68b3, 0x0, 0x0);
        gbc.writeMem(0x77e9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf014);
        EXPECT(gbc.pc(), 0x77eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01F8
        gbc.setState(0x2112, 0x9674, 0x7380, 0x549b, 0xc9d8, 0x98cd, 0x0, 0x1);
        gbc.writeMem(0x2112, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9674);
        EXPECT(gbc.pc(), 0x2114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01F9
        gbc.setState(0xcbcb, 0x30ca, 0x8ec0, 0xbaa9, 0x37ca, 0x24cf, 0x0, 0x0);
        gbc.writeMem(0xcbcb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x30ca);
        EXPECT(gbc.pc(), 0xcbcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbcb), 0xcb);
        EXPECT(gbc.readMem(0xcbcc), 0x55);
        // CB 55 01FA
        gbc.setState(0x8588, 0xabe6, 0xad60, 0x3009, 0xf9a8, 0x9c97, 0x0, 0x0);
        gbc.writeMem(0x8588, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xabe6);
        EXPECT(gbc.pc(), 0x858a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8588), 0xcb);
        EXPECT(gbc.readMem(0x8589), 0x55);
        // CB 55 01FB
        gbc.setState(0x2a3d, 0xb8b1, 0x94a0, 0x160f, 0x176b, 0x3d51, 0x0, 0x1);
        gbc.writeMem(0x2a3d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb8b1);
        EXPECT(gbc.pc(), 0x2a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01FD
        gbc.setState(0xeda7, 0xeb1b, 0x8c50, 0xc98, 0xe26d, 0x77f3, 0x0, 0x1);
        gbc.writeMem(0xeda7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xeb1b);
        EXPECT(gbc.pc(), 0xeda9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda7), 0xcb);
        EXPECT(gbc.readMem(0xeda8), 0x55);
        // CB 55 01FE
        gbc.setState(0x689c, 0x98b9, 0x8e60, 0x1fd6, 0x95ee, 0x4dc0, 0x0, 0x0);
        gbc.writeMem(0x689c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x98b9);
        EXPECT(gbc.pc(), 0x689e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 01FF
        gbc.setState(0x2753, 0xad64, 0xf830, 0xa36c, 0xf8bc, 0x93ab, 0x0, 0x1);
        gbc.writeMem(0x2753, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xad64);
        EXPECT(gbc.pc(), 0x2755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0200
        gbc.setState(0x39c4, 0xa9e7, 0xc650, 0x9372, 0x801e, 0xd9a1, 0x1, 0x0);
        gbc.writeMem(0x39c4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa9e7);
        EXPECT(gbc.pc(), 0x39c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0201
        gbc.setState(0xc7f2, 0x4f38, 0x1300, 0x41a9, 0x4046, 0xeb6c, 0x0, 0x0);
        gbc.writeMem(0xc7f2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4f38);
        EXPECT(gbc.pc(), 0xc7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f2), 0xcb);
        EXPECT(gbc.readMem(0xc7f3), 0x55);
        // CB 55 0202
        gbc.setState(0x256, 0x5aca, 0x5420, 0xacb3, 0xebba, 0xe0e8, 0x0, 0x0);
        gbc.writeMem(0x256, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5aca);
        EXPECT(gbc.pc(), 0x258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0203
        gbc.setState(0x46d5, 0x4b5c, 0x3600, 0x2492, 0x9188, 0x8a59, 0x0, 0x0);
        gbc.writeMem(0x46d5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4b5c);
        EXPECT(gbc.pc(), 0x46d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0204
        gbc.setState(0xd979, 0xacdf, 0xf620, 0x2259, 0x2fd0, 0x3bf2, 0x0, 0x0);
        gbc.writeMem(0xd979, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xacdf);
        EXPECT(gbc.pc(), 0xd97b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd979), 0xcb);
        EXPECT(gbc.readMem(0xd97a), 0x55);
        // CB 55 0205
        gbc.setState(0xe485, 0xae8d, 0x93a0, 0x9429, 0x16fd, 0x405b, 0x0, 0x0);
        gbc.writeMem(0xe485, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xae8d);
        EXPECT(gbc.pc(), 0xe487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe485), 0xcb);
        EXPECT(gbc.readMem(0xe486), 0x55);
        // CB 55 0206
        gbc.setState(0x74ea, 0x474d, 0x9180, 0x8533, 0xa636, 0x67f9, 0x0, 0x1);
        gbc.writeMem(0x74ea, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x474d);
        EXPECT(gbc.pc(), 0x74ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0207
        gbc.setState(0x131, 0x392, 0xa6c0, 0x1cc5, 0x3c3d, 0xdb97, 0x1, 0x1);
        gbc.writeMem(0x131, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x392);
        EXPECT(gbc.pc(), 0x133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0208
        gbc.setState(0x4c28, 0xc317, 0x8f30, 0x615b, 0xf7d1, 0x7569, 0x0, 0x0);
        gbc.writeMem(0x4c28, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc317);
        EXPECT(gbc.pc(), 0x4c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0209
        gbc.setState(0xc72c, 0x337, 0xdd20, 0x5774, 0x136c, 0xde82, 0x0, 0x1);
        gbc.writeMem(0xc72c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x337);
        EXPECT(gbc.pc(), 0xc72e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc72c), 0xcb);
        EXPECT(gbc.readMem(0xc72d), 0x55);
        // CB 55 020A
        gbc.setState(0xb85e, 0xdee4, 0xa0a0, 0x8a43, 0x2470, 0x688d, 0x1, 0x0);
        gbc.writeMem(0xb85e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdee4);
        EXPECT(gbc.pc(), 0xb860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb85e), 0xcb);
        EXPECT(gbc.readMem(0xb85f), 0x55);
        // CB 55 020B
        gbc.setState(0x7d1c, 0x9c1b, 0xaa50, 0x8550, 0xcde4, 0x8af6, 0x0, 0x1);
        gbc.writeMem(0x7d1c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9c1b);
        EXPECT(gbc.pc(), 0x7d1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 020C
        gbc.setState(0x9709, 0x6b3f, 0xfce0, 0xe920, 0xc544, 0xc846, 0x1, 0x0);
        gbc.writeMem(0x9709, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6b3f);
        EXPECT(gbc.pc(), 0x970b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9709), 0xcb);
        EXPECT(gbc.readMem(0x970a), 0x55);
        // CB 55 020D
        gbc.setState(0x3fe6, 0x4540, 0xac30, 0xe1d0, 0xad60, 0x224, 0x1, 0x0);
        gbc.writeMem(0x3fe6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4540);
        EXPECT(gbc.pc(), 0x3fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 020F
        gbc.setState(0xe9cd, 0x2901, 0xe5f0, 0x9a2, 0x448a, 0xe81e, 0x0, 0x1);
        gbc.writeMem(0xe9cd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2901);
        EXPECT(gbc.pc(), 0xe9cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9cd), 0xcb);
        EXPECT(gbc.readMem(0xe9ce), 0x55);
        // CB 55 0210
        gbc.setState(0x81a2, 0x6755, 0x2180, 0x9e57, 0x1012, 0xff6a, 0x1, 0x0);
        gbc.writeMem(0x81a2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6755);
        EXPECT(gbc.pc(), 0x81a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a2), 0xcb);
        EXPECT(gbc.readMem(0x81a3), 0x55);
        // CB 55 0211
        gbc.setState(0x3b76, 0xf08c, 0xa7e0, 0x39e7, 0x9eac, 0x5b34, 0x0, 0x1);
        gbc.writeMem(0x3b76, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf08c);
        EXPECT(gbc.pc(), 0x3b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0212
        gbc.setState(0xe6ad, 0xc1ed, 0xfc80, 0xf4e2, 0x6f0e, 0x250e, 0x1, 0x0);
        gbc.writeMem(0xe6ad, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc1ed);
        EXPECT(gbc.pc(), 0xe6af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ad), 0xcb);
        EXPECT(gbc.readMem(0xe6ae), 0x55);
        // CB 55 0213
        gbc.setState(0x523a, 0x6d7f, 0x66b0, 0xc230, 0x532f, 0xb2c4, 0x0, 0x0);
        gbc.writeMem(0x523a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6d7f);
        EXPECT(gbc.pc(), 0x523c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0214
        gbc.setState(0x6a68, 0x3e13, 0xe150, 0x678b, 0xb8, 0x7e0e, 0x1, 0x1);
        gbc.writeMem(0x6a68, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3e13);
        EXPECT(gbc.pc(), 0x6a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0215
        gbc.setState(0xc8bc, 0x27da, 0x3b10, 0x9a27, 0x57b0, 0x23a1, 0x0, 0x0);
        gbc.writeMem(0xc8bc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x27da);
        EXPECT(gbc.pc(), 0xc8be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bc), 0xcb);
        EXPECT(gbc.readMem(0xc8bd), 0x55);
        // CB 55 0216
        gbc.setState(0x504d, 0xfafb, 0x6060, 0x7cd5, 0x43fe, 0xd0a7, 0x0, 0x0);
        gbc.writeMem(0x504d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xfafb);
        EXPECT(gbc.pc(), 0x504f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0217
        gbc.setState(0xc6c2, 0x3ec6, 0x6600, 0x259d, 0x7b90, 0x9fbb, 0x1, 0x0);
        gbc.writeMem(0xc6c2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3ec6);
        EXPECT(gbc.pc(), 0xc6c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c2), 0xcb);
        EXPECT(gbc.readMem(0xc6c3), 0x55);
        // CB 55 0218
        gbc.setState(0xd2f0, 0x6253, 0xec30, 0x6be4, 0xb45a, 0x282e, 0x1, 0x1);
        gbc.writeMem(0xd2f0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6253);
        EXPECT(gbc.pc(), 0xd2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f0), 0xcb);
        EXPECT(gbc.readMem(0xd2f1), 0x55);
        // CB 55 0219
        gbc.setState(0x8738, 0x5d29, 0x6e70, 0xea00, 0xc335, 0x7ba, 0x0, 0x0);
        gbc.writeMem(0x8738, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5d29);
        EXPECT(gbc.pc(), 0x873a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8738), 0xcb);
        EXPECT(gbc.readMem(0x8739), 0x55);
        // CB 55 021A
        gbc.setState(0xcae, 0x9633, 0x3900, 0xc42, 0xb493, 0xc160, 0x0, 0x0);
        gbc.writeMem(0xcae, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9633);
        EXPECT(gbc.pc(), 0xcb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 021B
        gbc.setState(0x179e, 0x2eee, 0xf5f0, 0x394f, 0x7fe7, 0x624d, 0x0, 0x1);
        gbc.writeMem(0x179e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2eee);
        EXPECT(gbc.pc(), 0x17a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 021C
        gbc.setState(0xea69, 0x54f3, 0x74a0, 0x7dcf, 0xbc01, 0x6138, 0x0, 0x0);
        gbc.writeMem(0xea69, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x54f3);
        EXPECT(gbc.pc(), 0xea6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea69), 0xcb);
        EXPECT(gbc.readMem(0xea6a), 0x55);
        // CB 55 021D
        gbc.setState(0x83e8, 0xd4a7, 0x6910, 0x7f01, 0xc3f, 0x6c15, 0x1, 0x0);
        gbc.writeMem(0x83e8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd4a7);
        EXPECT(gbc.pc(), 0x83ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e8), 0xcb);
        EXPECT(gbc.readMem(0x83e9), 0x55);
        // CB 55 021F
        gbc.setState(0xad31, 0xf088, 0xf810, 0x794f, 0x4976, 0xa12b, 0x1, 0x0);
        gbc.writeMem(0xad31, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf088);
        EXPECT(gbc.pc(), 0xad33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad31), 0xcb);
        EXPECT(gbc.readMem(0xad32), 0x55);
        // CB 55 0220
        gbc.setState(0x26db, 0x96cb, 0x7a20, 0xfb06, 0x950e, 0xc897, 0x0, 0x1);
        gbc.writeMem(0x26db, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x96cb);
        EXPECT(gbc.pc(), 0x26dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0221
        gbc.setState(0x5325, 0x9eaa, 0x3120, 0x2624, 0x7329, 0x80d7, 0x1, 0x1);
        gbc.writeMem(0x5325, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9eaa);
        EXPECT(gbc.pc(), 0x5327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0222
        gbc.setState(0xdd2e, 0x288b, 0x2c10, 0xe972, 0x1bf0, 0xda73, 0x1, 0x0);
        gbc.writeMem(0xdd2e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x288b);
        EXPECT(gbc.pc(), 0xdd30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd2e), 0xcb);
        EXPECT(gbc.readMem(0xdd2f), 0x55);
        // CB 55 0223
        gbc.setState(0x7f8b, 0x1831, 0x6d00, 0x83e9, 0x636a, 0xd324, 0x0, 0x0);
        gbc.writeMem(0x7f8b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1831);
        EXPECT(gbc.pc(), 0x7f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0224
        gbc.setState(0x3645, 0x5679, 0x3b0, 0x8d90, 0xe57f, 0xe64, 0x1, 0x0);
        gbc.writeMem(0x3645, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5679);
        EXPECT(gbc.pc(), 0x3647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0225
        gbc.setState(0xe874, 0xc0fb, 0x9ed0, 0xcbe0, 0x17c0, 0x15af, 0x0, 0x1);
        gbc.writeMem(0xe874, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc0fb);
        EXPECT(gbc.pc(), 0xe876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe874), 0xcb);
        EXPECT(gbc.readMem(0xe875), 0x55);
        // CB 55 0226
        gbc.setState(0xea74, 0xad56, 0x9bf0, 0xbec2, 0xcaa8, 0xaaa0, 0x0, 0x0);
        gbc.writeMem(0xea74, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xad56);
        EXPECT(gbc.pc(), 0xea76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea74), 0xcb);
        EXPECT(gbc.readMem(0xea75), 0x55);
        // CB 55 0227
        gbc.setState(0x5fdb, 0x93d8, 0x7580, 0x9f16, 0x55a5, 0xdc8d, 0x0, 0x1);
        gbc.writeMem(0x5fdb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x93d8);
        EXPECT(gbc.pc(), 0x5fdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0228
        gbc.setState(0x9419, 0xfcf4, 0x65d0, 0x54be, 0xd7c2, 0x5dae, 0x1, 0x1);
        gbc.writeMem(0x9419, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfcf4);
        EXPECT(gbc.pc(), 0x941b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9419), 0xcb);
        EXPECT(gbc.readMem(0x941a), 0x55);
        // CB 55 0229
        gbc.setState(0x5120, 0x528c, 0x27f0, 0xb45a, 0x6dd5, 0xaae7, 0x0, 0x0);
        gbc.writeMem(0x5120, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x528c);
        EXPECT(gbc.pc(), 0x5122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 022A
        gbc.setState(0x2fe9, 0x90a8, 0xc460, 0x117a, 0x6d65, 0x4a45, 0x1, 0x1);
        gbc.writeMem(0x2fe9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x90a8);
        EXPECT(gbc.pc(), 0x2feb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 022B
        gbc.setState(0xddb7, 0x2b37, 0x6400, 0x7fb4, 0x8215, 0xfb07, 0x0, 0x1);
        gbc.writeMem(0xddb7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2b37);
        EXPECT(gbc.pc(), 0xddb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb7), 0xcb);
        EXPECT(gbc.readMem(0xddb8), 0x55);
        // CB 55 022C
        gbc.setState(0x3f1c, 0xe269, 0xd0a0, 0xe064, 0x6dcc, 0xcb54, 0x0, 0x1);
        gbc.writeMem(0x3f1c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe269);
        EXPECT(gbc.pc(), 0x3f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 022D
        gbc.setState(0x6d70, 0x4436, 0xdad0, 0x1176, 0xf42, 0x3b0e, 0x0, 0x0);
        gbc.writeMem(0x6d70, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4436);
        EXPECT(gbc.pc(), 0x6d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 022E
        gbc.setState(0x7fdb, 0x993a, 0x2310, 0x55b2, 0x1a4a, 0x9387, 0x1, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x993a);
        EXPECT(gbc.pc(), 0x7fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 022F
        gbc.setState(0x2af2, 0xd1a4, 0x7170, 0x4322, 0xe72c, 0x10bd, 0x0, 0x1);
        gbc.writeMem(0x2af2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd1a4);
        EXPECT(gbc.pc(), 0x2af4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0230
        gbc.setState(0xb49a, 0xde5f, 0xa9e0, 0x9236, 0xc3d6, 0x87d4, 0x1, 0x1);
        gbc.writeMem(0xb49a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xde5f);
        EXPECT(gbc.pc(), 0xb49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb49a), 0xcb);
        EXPECT(gbc.readMem(0xb49b), 0x55);
        // CB 55 0231
        gbc.setState(0xaf48, 0x5e82, 0x7ef0, 0xa856, 0xe599, 0x98d6, 0x0, 0x0);
        gbc.writeMem(0xaf48, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5e82);
        EXPECT(gbc.pc(), 0xaf4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf48), 0xcb);
        EXPECT(gbc.readMem(0xaf49), 0x55);
        // CB 55 0232
        gbc.setState(0x123a, 0x2c22, 0x5750, 0xc01b, 0xcdec, 0x81b2, 0x1, 0x0);
        gbc.writeMem(0x123a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2c22);
        EXPECT(gbc.pc(), 0x123c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0233
        gbc.setState(0x9a26, 0x4571, 0xf30, 0x868f, 0xad88, 0x1611, 0x1, 0x1);
        gbc.writeMem(0x9a26, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4571);
        EXPECT(gbc.pc(), 0x9a28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a26), 0xcb);
        EXPECT(gbc.readMem(0x9a27), 0x55);
        // CB 55 0234
        gbc.setState(0xa4e1, 0xcb37, 0x6560, 0x5d5e, 0x80c7, 0x17db, 0x0, 0x1);
        gbc.writeMem(0xa4e1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcb37);
        EXPECT(gbc.pc(), 0xa4e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e1), 0xcb);
        EXPECT(gbc.readMem(0xa4e2), 0x55);
        // CB 55 0235
        gbc.setState(0xaa0, 0x1f68, 0xf710, 0x3cd2, 0xb949, 0x2468, 0x1, 0x0);
        gbc.writeMem(0xaa0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1f68);
        EXPECT(gbc.pc(), 0xaa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0236
        gbc.setState(0xafab, 0xf6c6, 0xfb10, 0x64eb, 0xc2f7, 0xf8fb, 0x1, 0x0);
        gbc.writeMem(0xafab, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf6c6);
        EXPECT(gbc.pc(), 0xafad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafab), 0xcb);
        EXPECT(gbc.readMem(0xafac), 0x55);
        // CB 55 0237
        gbc.setState(0xa294, 0xf551, 0x1440, 0x68c4, 0xd199, 0x134e, 0x1, 0x0);
        gbc.writeMem(0xa294, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf551);
        EXPECT(gbc.pc(), 0xa296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa294), 0xcb);
        EXPECT(gbc.readMem(0xa295), 0x55);
        // CB 55 0238
        gbc.setState(0x28a7, 0x8e48, 0xa590, 0x8698, 0x9fd8, 0xd440, 0x0, 0x0);
        gbc.writeMem(0x28a7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8e48);
        EXPECT(gbc.pc(), 0x28a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0239
        gbc.setState(0x3d96, 0x5283, 0x4850, 0x2e62, 0xd115, 0xfbd, 0x0, 0x0);
        gbc.writeMem(0x3d96, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5283);
        EXPECT(gbc.pc(), 0x3d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 023A
        gbc.setState(0x13d1, 0x1025, 0xbd70, 0x7dd0, 0xe1c5, 0xf929, 0x0, 0x0);
        gbc.writeMem(0x13d1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1025);
        EXPECT(gbc.pc(), 0x13d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 023C
        gbc.setState(0x4abf, 0x81cd, 0x39c0, 0x7296, 0x4ae2, 0x7d11, 0x0, 0x1);
        gbc.writeMem(0x4abf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x81cd);
        EXPECT(gbc.pc(), 0x4ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 023D
        gbc.setState(0xcbca, 0xf48b, 0x8770, 0xb83d, 0xebc8, 0xb56e, 0x0, 0x1);
        gbc.writeMem(0xcbca, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf48b);
        EXPECT(gbc.pc(), 0xcbcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbca), 0xcb);
        EXPECT(gbc.readMem(0xcbcb), 0x55);
        // CB 55 023E
        gbc.setState(0x1028, 0x6042, 0x18a0, 0x31cb, 0x77f8, 0xc394, 0x0, 0x0);
        gbc.writeMem(0x1028, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6042);
        EXPECT(gbc.pc(), 0x102a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 023F
        gbc.setState(0xcbed, 0x4d57, 0xd4d0, 0xf6be, 0xb0f5, 0xf2e8, 0x1, 0x1);
        gbc.writeMem(0xcbed, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4d57);
        EXPECT(gbc.pc(), 0xcbef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbed), 0xcb);
        EXPECT(gbc.readMem(0xcbee), 0x55);
        // CB 55 0240
        gbc.setState(0xbf38, 0xd2b5, 0xb520, 0xe923, 0xf9c1, 0xc68d, 0x0, 0x1);
        gbc.writeMem(0xbf38, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd2b5);
        EXPECT(gbc.pc(), 0xbf3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf38), 0xcb);
        EXPECT(gbc.readMem(0xbf39), 0x55);
        // CB 55 0241
        gbc.setState(0xe649, 0x5c19, 0x90c0, 0x695b, 0xa70, 0xd951, 0x0, 0x1);
        gbc.writeMem(0xe649, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5c19);
        EXPECT(gbc.pc(), 0xe64b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe649), 0xcb);
        EXPECT(gbc.readMem(0xe64a), 0x55);
        // CB 55 0242
        gbc.setState(0xaac1, 0x8d6a, 0x2140, 0xbec7, 0x8c97, 0x9103, 0x0, 0x0);
        gbc.writeMem(0xaac1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8d6a);
        EXPECT(gbc.pc(), 0xaac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac1), 0xcb);
        EXPECT(gbc.readMem(0xaac2), 0x55);
        // CB 55 0243
        gbc.setState(0xc66b, 0x4393, 0x3c10, 0x6994, 0x370e, 0x81d0, 0x1, 0x0);
        gbc.writeMem(0xc66b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4393);
        EXPECT(gbc.pc(), 0xc66d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc66b), 0xcb);
        EXPECT(gbc.readMem(0xc66c), 0x55);
        // CB 55 0244
        gbc.setState(0x9562, 0xbc86, 0xdf70, 0x4897, 0xb1d3, 0x932f, 0x1, 0x0);
        gbc.writeMem(0x9562, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbc86);
        EXPECT(gbc.pc(), 0x9564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9562), 0xcb);
        EXPECT(gbc.readMem(0x9563), 0x55);
        // CB 55 0246
        gbc.setState(0x99f6, 0x7cd1, 0x840, 0xb1ad, 0x3c63, 0x6981, 0x0, 0x1);
        gbc.writeMem(0x99f6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7cd1);
        EXPECT(gbc.pc(), 0x99f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f6), 0xcb);
        EXPECT(gbc.readMem(0x99f7), 0x55);
        // CB 55 0247
        gbc.setState(0x50b, 0x10dc, 0xf830, 0x75e1, 0x847d, 0xc166, 0x0, 0x0);
        gbc.writeMem(0x50b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x10dc);
        EXPECT(gbc.pc(), 0x50d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0248
        gbc.setState(0xc677, 0x921a, 0xeca0, 0x782e, 0x4444, 0xae95, 0x0, 0x1);
        gbc.writeMem(0xc677, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x921a);
        EXPECT(gbc.pc(), 0xc679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc677), 0xcb);
        EXPECT(gbc.readMem(0xc678), 0x55);
        // CB 55 0249
        gbc.setState(0x9e64, 0x3554, 0x2040, 0x511, 0xbc58, 0x7934, 0x1, 0x1);
        gbc.writeMem(0x9e64, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3554);
        EXPECT(gbc.pc(), 0x9e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e64), 0xcb);
        EXPECT(gbc.readMem(0x9e65), 0x55);
        // CB 55 024B
        gbc.setState(0x47d, 0x8616, 0x58c0, 0xac6e, 0x7d7e, 0x3c63, 0x1, 0x0);
        gbc.writeMem(0x47d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8616);
        EXPECT(gbc.pc(), 0x47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 024C
        gbc.setState(0x74e9, 0xb05d, 0xdea0, 0x9acf, 0xf9b2, 0x7b79, 0x0, 0x1);
        gbc.writeMem(0x74e9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb05d);
        EXPECT(gbc.pc(), 0x74eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 024D
        gbc.setState(0xc1fe, 0xee21, 0x7ae0, 0x6072, 0xda52, 0x2aef, 0x0, 0x1);
        gbc.writeMem(0xc1fe, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xee21);
        EXPECT(gbc.pc(), 0xc200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fe), 0xcb);
        EXPECT(gbc.readMem(0xc1ff), 0x55);
        // CB 55 024E
        gbc.setState(0xe95c, 0xd10d, 0x5590, 0xb12f, 0x73f9, 0x56da, 0x0, 0x1);
        gbc.writeMem(0xe95c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd10d);
        EXPECT(gbc.pc(), 0xe95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95c), 0xcb);
        EXPECT(gbc.readMem(0xe95d), 0x55);
        // CB 55 024F
        gbc.setState(0x7249, 0x4f51, 0x32e0, 0x5e2e, 0x193, 0xbfca, 0x1, 0x1);
        gbc.writeMem(0x7249, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4f51);
        EXPECT(gbc.pc(), 0x724b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0250
        gbc.setState(0x197d, 0xc07b, 0xc1a0, 0xff07, 0x768b, 0xfe2f, 0x0, 0x0);
        gbc.writeMem(0x197d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc07b);
        EXPECT(gbc.pc(), 0x197f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0251
        gbc.setState(0x1f33, 0x1772, 0xfd50, 0x1053, 0xfa43, 0x9863, 0x1, 0x1);
        gbc.writeMem(0x1f33, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1772);
        EXPECT(gbc.pc(), 0x1f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0252
        gbc.setState(0xbe3, 0xc612, 0xa960, 0x8f9f, 0x95f8, 0x1ed7, 0x1, 0x1);
        gbc.writeMem(0xbe3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc612);
        EXPECT(gbc.pc(), 0xbe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0253
        gbc.setState(0x3253, 0x7f78, 0x4dd0, 0x5014, 0xb90, 0xc94d, 0x1, 0x0);
        gbc.writeMem(0x3253, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7f78);
        EXPECT(gbc.pc(), 0x3255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0254
        gbc.setState(0x39ce, 0x7711, 0x79a0, 0x3876, 0xecd7, 0x8d0f, 0x1, 0x0);
        gbc.writeMem(0x39ce, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7711);
        EXPECT(gbc.pc(), 0x39d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0255
        gbc.setState(0xd60b, 0xa8b, 0x2550, 0xf2fd, 0xff28, 0x443c, 0x1, 0x0);
        gbc.writeMem(0xd60b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa8b);
        EXPECT(gbc.pc(), 0xd60d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd60b), 0xcb);
        EXPECT(gbc.readMem(0xd60c), 0x55);
        // CB 55 0256
        gbc.setState(0x4bc9, 0x6388, 0x52f0, 0x1cb5, 0x2b9a, 0xfc3e, 0x0, 0x0);
        gbc.writeMem(0x4bc9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6388);
        EXPECT(gbc.pc(), 0x4bcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0257
        gbc.setState(0xb13c, 0x5bba, 0x34b0, 0xf54c, 0xecb6, 0xff5d, 0x1, 0x1);
        gbc.writeMem(0xb13c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5bba);
        EXPECT(gbc.pc(), 0xb13e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb13c), 0xcb);
        EXPECT(gbc.readMem(0xb13d), 0x55);
        // CB 55 0258
        gbc.setState(0x69f7, 0xd34f, 0xd440, 0x826, 0xf624, 0x6afc, 0x1, 0x1);
        gbc.writeMem(0x69f7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd34f);
        EXPECT(gbc.pc(), 0x69f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0259
        gbc.setState(0xda38, 0x414a, 0xe310, 0x34be, 0x8617, 0xd1cb, 0x0, 0x0);
        gbc.writeMem(0xda38, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x414a);
        EXPECT(gbc.pc(), 0xda3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda38), 0xcb);
        EXPECT(gbc.readMem(0xda39), 0x55);
        // CB 55 025A
        gbc.setState(0x5c62, 0xa85f, 0x4af0, 0xe49, 0x7273, 0xd431, 0x0, 0x1);
        gbc.writeMem(0x5c62, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa85f);
        EXPECT(gbc.pc(), 0x5c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 025B
        gbc.setState(0xeef5, 0x1496, 0x2450, 0x920, 0x5274, 0xaa80, 0x1, 0x0);
        gbc.writeMem(0xeef5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1496);
        EXPECT(gbc.pc(), 0xeef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef5), 0xcb);
        EXPECT(gbc.readMem(0xeef6), 0x55);
        // CB 55 025C
        gbc.setState(0x2024, 0xdf78, 0x2e00, 0x3c1b, 0xe7ab, 0x9582, 0x0, 0x1);
        gbc.writeMem(0x2024, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdf78);
        EXPECT(gbc.pc(), 0x2026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 025E
        gbc.setState(0xcf7, 0xda35, 0x91a0, 0xa002, 0xa47c, 0xd3e6, 0x1, 0x1);
        gbc.writeMem(0xcf7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xda35);
        EXPECT(gbc.pc(), 0xcf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 025F
        gbc.setState(0xd32c, 0x3494, 0x2180, 0x57cf, 0xb3c6, 0xb95a, 0x0, 0x1);
        gbc.writeMem(0xd32c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3494);
        EXPECT(gbc.pc(), 0xd32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32c), 0xcb);
        EXPECT(gbc.readMem(0xd32d), 0x55);
        // CB 55 0260
        gbc.setState(0xc55a, 0x2378, 0x1420, 0xcc45, 0xf694, 0x4c20, 0x1, 0x0);
        gbc.writeMem(0xc55a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2378);
        EXPECT(gbc.pc(), 0xc55c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc55a), 0xcb);
        EXPECT(gbc.readMem(0xc55b), 0x55);
        // CB 55 0261
        gbc.setState(0x8219, 0x2896, 0x39f0, 0xe97f, 0x3e2a, 0x8cb3, 0x0, 0x1);
        gbc.writeMem(0x8219, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2896);
        EXPECT(gbc.pc(), 0x821b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8219), 0xcb);
        EXPECT(gbc.readMem(0x821a), 0x55);
        // CB 55 0262
        gbc.setState(0xb909, 0x8e10, 0x2d40, 0x2c4d, 0x4aa6, 0xbb2, 0x0, 0x0);
        gbc.writeMem(0xb909, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8e10);
        EXPECT(gbc.pc(), 0xb90b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb909), 0xcb);
        EXPECT(gbc.readMem(0xb90a), 0x55);
        // CB 55 0263
        gbc.setState(0x28dd, 0x6c4f, 0x5150, 0xdbe2, 0xea4f, 0x9876, 0x0, 0x1);
        gbc.writeMem(0x28dd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6c4f);
        EXPECT(gbc.pc(), 0x28df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0264
        gbc.setState(0x51d2, 0x6209, 0x4790, 0xa83, 0x8897, 0x2962, 0x1, 0x1);
        gbc.writeMem(0x51d2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6209);
        EXPECT(gbc.pc(), 0x51d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0265
        gbc.setState(0x294a, 0xcb93, 0x66f0, 0xab71, 0x8b6b, 0xbb59, 0x1, 0x1);
        gbc.writeMem(0x294a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcb93);
        EXPECT(gbc.pc(), 0x294c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0266
        gbc.setState(0x61e, 0x640, 0x3890, 0x244e, 0x2fde, 0xbc4d, 0x0, 0x1);
        gbc.writeMem(0x61e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x640);
        EXPECT(gbc.pc(), 0x620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0267
        gbc.setState(0xbc0c, 0xc366, 0xd800, 0xf331, 0x90fb, 0x95c8, 0x1, 0x1);
        gbc.writeMem(0xbc0c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc366);
        EXPECT(gbc.pc(), 0xbc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc0c), 0xcb);
        EXPECT(gbc.readMem(0xbc0d), 0x55);
        // CB 55 0269
        gbc.setState(0x5dfe, 0x7b5e, 0xfa90, 0x163f, 0x43a4, 0xd0d1, 0x0, 0x0);
        gbc.writeMem(0x5dfe, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7b5e);
        EXPECT(gbc.pc(), 0x5e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 026A
        gbc.setState(0x8904, 0xc66d, 0x45e0, 0x3c46, 0x65c3, 0xb5, 0x0, 0x0);
        gbc.writeMem(0x8904, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc66d);
        EXPECT(gbc.pc(), 0x8906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8904), 0xcb);
        EXPECT(gbc.readMem(0x8905), 0x55);
        // CB 55 026B
        gbc.setState(0xd2c8, 0x72c1, 0x86a0, 0x4004, 0x9f77, 0x1467, 0x0, 0x1);
        gbc.writeMem(0xd2c8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x72c1);
        EXPECT(gbc.pc(), 0xd2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2c8), 0xcb);
        EXPECT(gbc.readMem(0xd2c9), 0x55);
        // CB 55 026C
        gbc.setState(0xd70d, 0x7fa5, 0xcfb0, 0x914c, 0x2873, 0xbdb, 0x1, 0x0);
        gbc.writeMem(0xd70d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7fa5);
        EXPECT(gbc.pc(), 0xd70f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd70d), 0xcb);
        EXPECT(gbc.readMem(0xd70e), 0x55);
        // CB 55 026D
        gbc.setState(0x43b9, 0x8c98, 0xb680, 0x9bb4, 0xd72e, 0x70a3, 0x1, 0x0);
        gbc.writeMem(0x43b9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8c98);
        EXPECT(gbc.pc(), 0x43bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 026E
        gbc.setState(0x2b64, 0x782e, 0x84f0, 0x963c, 0xebfc, 0xf7fa, 0x1, 0x0);
        gbc.writeMem(0x2b64, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x782e);
        EXPECT(gbc.pc(), 0x2b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 026F
        gbc.setState(0x2b39, 0x4c2, 0x5870, 0xde8c, 0x5065, 0x70ed, 0x0, 0x1);
        gbc.writeMem(0x2b39, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4c2);
        EXPECT(gbc.pc(), 0x2b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0270
        gbc.setState(0xeb63, 0xfb59, 0xf870, 0xca14, 0x64b, 0x1f7b, 0x0, 0x1);
        gbc.writeMem(0xeb63, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfb59);
        EXPECT(gbc.pc(), 0xeb65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb63), 0xcb);
        EXPECT(gbc.readMem(0xeb64), 0x55);
        // CB 55 0271
        gbc.setState(0x72e7, 0xd20a, 0x6f80, 0xc3ea, 0x663, 0xb42, 0x1, 0x0);
        gbc.writeMem(0x72e7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd20a);
        EXPECT(gbc.pc(), 0x72e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0272
        gbc.setState(0x47f3, 0xe0e9, 0x6640, 0x3ad8, 0x22ff, 0xd743, 0x0, 0x0);
        gbc.writeMem(0x47f3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe0e9);
        EXPECT(gbc.pc(), 0x47f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0273
        gbc.setState(0x5fdf, 0xe850, 0xf990, 0x4ffb, 0xcd2b, 0x302, 0x0, 0x1);
        gbc.writeMem(0x5fdf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe850);
        EXPECT(gbc.pc(), 0x5fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0274
        gbc.setState(0x1f39, 0x8ee5, 0x9450, 0x87f3, 0xae4f, 0x3f38, 0x0, 0x0);
        gbc.writeMem(0x1f39, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8ee5);
        EXPECT(gbc.pc(), 0x1f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0275
        gbc.setState(0x7fdb, 0x1d9d, 0x8050, 0x9a78, 0xb2c4, 0xb00d, 0x0, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1d9d);
        EXPECT(gbc.pc(), 0x7fdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0276
        gbc.setState(0x149a, 0x5023, 0xf360, 0x9f99, 0xec39, 0x4693, 0x1, 0x1);
        gbc.writeMem(0x149a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5023);
        EXPECT(gbc.pc(), 0x149c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0277
        gbc.setState(0xc03d, 0xec2f, 0x2640, 0x3e75, 0xee73, 0xac7, 0x1, 0x0);
        gbc.writeMem(0xc03d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xec2f);
        EXPECT(gbc.pc(), 0xc03f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03d), 0xcb);
        EXPECT(gbc.readMem(0xc03e), 0x55);
        // CB 55 0278
        gbc.setState(0xee93, 0xd6fa, 0xc690, 0xe7e1, 0x5597, 0x4c8d, 0x0, 0x1);
        gbc.writeMem(0xee93, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd6fa);
        EXPECT(gbc.pc(), 0xee95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee93), 0xcb);
        EXPECT(gbc.readMem(0xee94), 0x55);
        // CB 55 0279
        gbc.setState(0xc430, 0x7ba4, 0x7d60, 0xea8e, 0x726, 0xa3bb, 0x0, 0x1);
        gbc.writeMem(0xc430, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7ba4);
        EXPECT(gbc.pc(), 0xc432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc430), 0xcb);
        EXPECT(gbc.readMem(0xc431), 0x55);
        // CB 55 027A
        gbc.setState(0x55de, 0xdffc, 0x8640, 0x9a34, 0x9795, 0x985d, 0x1, 0x1);
        gbc.writeMem(0x55de, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdffc);
        EXPECT(gbc.pc(), 0x55e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 027B
        gbc.setState(0xc728, 0xb69f, 0x8f40, 0x3ed3, 0xffd6, 0xff8f, 0x1, 0x1);
        gbc.writeMem(0xc728, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb69f);
        EXPECT(gbc.pc(), 0xc72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc728), 0xcb);
        EXPECT(gbc.readMem(0xc729), 0x55);
        // CB 55 027C
        gbc.setState(0x9d0b, 0xa195, 0xcaa0, 0xb511, 0x86a8, 0xf486, 0x1, 0x0);
        gbc.writeMem(0x9d0b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa195);
        EXPECT(gbc.pc(), 0x9d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d0b), 0xcb);
        EXPECT(gbc.readMem(0x9d0c), 0x55);
        // CB 55 027D
        gbc.setState(0x8ddd, 0x5909, 0xb010, 0x9ce5, 0x8a18, 0x6170, 0x0, 0x1);
        gbc.writeMem(0x8ddd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5909);
        EXPECT(gbc.pc(), 0x8ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ddd), 0xcb);
        EXPECT(gbc.readMem(0x8dde), 0x55);
        // CB 55 027E
        gbc.setState(0xe20, 0xd9d3, 0x9a60, 0x19d0, 0xd983, 0xbc1c, 0x1, 0x1);
        gbc.writeMem(0xe20, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd9d3);
        EXPECT(gbc.pc(), 0xe22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 027F
        gbc.setState(0x1a42, 0xe4f6, 0x8f20, 0x3734, 0x33e8, 0x2332, 0x1, 0x0);
        gbc.writeMem(0x1a42, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe4f6);
        EXPECT(gbc.pc(), 0x1a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0280
        gbc.setState(0xe06, 0x54fc, 0x9c0, 0x59eb, 0x36f8, 0x2fd3, 0x1, 0x1);
        gbc.writeMem(0xe06, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x54fc);
        EXPECT(gbc.pc(), 0xe08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0281
        gbc.setState(0x246a, 0xf866, 0x34b0, 0xb2d1, 0x849f, 0xe2d7, 0x0, 0x0);
        gbc.writeMem(0x246a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf866);
        EXPECT(gbc.pc(), 0x246c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0283
        gbc.setState(0xe621, 0x57d7, 0xb320, 0x2762, 0x278e, 0x174a, 0x0, 0x1);
        gbc.writeMem(0xe621, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x57d7);
        EXPECT(gbc.pc(), 0xe623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe621), 0xcb);
        EXPECT(gbc.readMem(0xe622), 0x55);
        // CB 55 0284
        gbc.setState(0xa0e7, 0xd5e, 0x9200, 0x1548, 0xe882, 0xcd85, 0x0, 0x0);
        gbc.writeMem(0xa0e7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd5e);
        EXPECT(gbc.pc(), 0xa0e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e7), 0xcb);
        EXPECT(gbc.readMem(0xa0e8), 0x55);
        // CB 55 0285
        gbc.setState(0x4699, 0xd2e2, 0xb4c0, 0x3de4, 0x96b3, 0x5022, 0x0, 0x1);
        gbc.writeMem(0x4699, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd2e2);
        EXPECT(gbc.pc(), 0x469b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0286
        gbc.setState(0x34d1, 0x3c8e, 0xdd40, 0xbc5, 0xd7fc, 0x36d5, 0x0, 0x1);
        gbc.writeMem(0x34d1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3c8e);
        EXPECT(gbc.pc(), 0x34d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0287
        gbc.setState(0x7678, 0x4350, 0xe4d0, 0xf149, 0x3a17, 0xc58e, 0x1, 0x0);
        gbc.writeMem(0x7678, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4350);
        EXPECT(gbc.pc(), 0x767a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0288
        gbc.setState(0x2c1, 0x6f80, 0x29c0, 0x5f5e, 0xde1b, 0x8572, 0x1, 0x1);
        gbc.writeMem(0x2c1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6f80);
        EXPECT(gbc.pc(), 0x2c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0289
        gbc.setState(0x45af, 0x911a, 0x6ed0, 0x22eb, 0x39e3, 0x5b32, 0x0, 0x0);
        gbc.writeMem(0x45af, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x911a);
        EXPECT(gbc.pc(), 0x45b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 028A
        gbc.setState(0x3e56, 0xef9, 0xe290, 0x8afd, 0xe1c2, 0x9196, 0x1, 0x1);
        gbc.writeMem(0x3e56, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xef9);
        EXPECT(gbc.pc(), 0x3e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 028C
        gbc.setState(0xea19, 0x8703, 0xfc20, 0x724, 0xeda1, 0x4204, 0x1, 0x1);
        gbc.writeMem(0xea19, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8703);
        EXPECT(gbc.pc(), 0xea1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea19), 0xcb);
        EXPECT(gbc.readMem(0xea1a), 0x55);
        // CB 55 028D
        gbc.setState(0x819c, 0x30a3, 0x9060, 0x5db4, 0x3f7e, 0x76f1, 0x1, 0x0);
        gbc.writeMem(0x819c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x30a3);
        EXPECT(gbc.pc(), 0x819e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819c), 0xcb);
        EXPECT(gbc.readMem(0x819d), 0x55);
        // CB 55 028E
        gbc.setState(0x3485, 0x2f8d, 0x9f80, 0x2708, 0x8c13, 0x56a5, 0x1, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2f8d);
        EXPECT(gbc.pc(), 0x3487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 028F
        gbc.setState(0x118f, 0x1a3e, 0x98d0, 0x7b47, 0x78f8, 0x58f7, 0x1, 0x0);
        gbc.writeMem(0x118f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1a3e);
        EXPECT(gbc.pc(), 0x1191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0290
        gbc.setState(0x73d1, 0x8fce, 0x9870, 0x4dea, 0x2c5b, 0x2729, 0x1, 0x0);
        gbc.writeMem(0x73d1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8fce);
        EXPECT(gbc.pc(), 0x73d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0291
        gbc.setState(0x9660, 0x3d23, 0x7ec0, 0x11be, 0x48fe, 0x31a8, 0x0, 0x0);
        gbc.writeMem(0x9660, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3d23);
        EXPECT(gbc.pc(), 0x9662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9660), 0xcb);
        EXPECT(gbc.readMem(0x9661), 0x55);
        // CB 55 0292
        gbc.setState(0x7801, 0xdefb, 0x9a0, 0x16de, 0xa9e0, 0x37a6, 0x0, 0x0);
        gbc.writeMem(0x7801, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xdefb);
        EXPECT(gbc.pc(), 0x7803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0293
        gbc.setState(0xa9b0, 0xc616, 0x8bc0, 0x35a7, 0xa0da, 0xa4b5, 0x1, 0x0);
        gbc.writeMem(0xa9b0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc616);
        EXPECT(gbc.pc(), 0xa9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b0), 0xcb);
        EXPECT(gbc.readMem(0xa9b1), 0x55);
        // CB 55 0294
        gbc.setState(0x1f6a, 0x4eda, 0xf7e0, 0x49f6, 0x1394, 0x4cf2, 0x0, 0x1);
        gbc.writeMem(0x1f6a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4eda);
        EXPECT(gbc.pc(), 0x1f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0295
        gbc.setState(0x6e21, 0x178f, 0x52a0, 0xdeea, 0x2e24, 0xea57, 0x1, 0x1);
        gbc.writeMem(0x6e21, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x178f);
        EXPECT(gbc.pc(), 0x6e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0296
        gbc.setState(0x1279, 0x2471, 0xfda0, 0x83ed, 0x614b, 0x96c1, 0x1, 0x1);
        gbc.writeMem(0x1279, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2471);
        EXPECT(gbc.pc(), 0x127b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0297
        gbc.setState(0xab50, 0x1086, 0xdb20, 0xfac9, 0x6353, 0x76c3, 0x0, 0x1);
        gbc.writeMem(0xab50, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1086);
        EXPECT(gbc.pc(), 0xab52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab50), 0xcb);
        EXPECT(gbc.readMem(0xab51), 0x55);
        // CB 55 0298
        gbc.setState(0xadc, 0x12f0, 0x9e90, 0x81ee, 0x8db4, 0x29c0, 0x1, 0x0);
        gbc.writeMem(0xadc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x12f0);
        EXPECT(gbc.pc(), 0xade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0299
        gbc.setState(0x3e2b, 0x7d19, 0xeba0, 0xacc7, 0x18e5, 0x782d, 0x0, 0x0);
        gbc.writeMem(0x3e2b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7d19);
        EXPECT(gbc.pc(), 0x3e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 029A
        gbc.setState(0xc1e3, 0xfc2e, 0x5dd0, 0x257, 0x6e5f, 0x2a8e, 0x0, 0x1);
        gbc.writeMem(0xc1e3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfc2e);
        EXPECT(gbc.pc(), 0xc1e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e3), 0xcb);
        EXPECT(gbc.readMem(0xc1e4), 0x55);
        // CB 55 029B
        gbc.setState(0x95cb, 0x30df, 0xb590, 0x2d6b, 0x784e, 0xb413, 0x0, 0x0);
        gbc.writeMem(0x95cb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x30df);
        EXPECT(gbc.pc(), 0x95cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95cb), 0xcb);
        EXPECT(gbc.readMem(0x95cc), 0x55);
        // CB 55 029C
        gbc.setState(0x3e69, 0xaeb, 0xc810, 0xf5e5, 0xc9d1, 0xf7d5, 0x1, 0x0);
        gbc.writeMem(0x3e69, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xaeb);
        EXPECT(gbc.pc(), 0x3e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 029E
        gbc.setState(0x1e26, 0x2832, 0x6260, 0x8955, 0xf6db, 0x1745, 0x1, 0x1);
        gbc.writeMem(0x1e26, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2832);
        EXPECT(gbc.pc(), 0x1e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 029F
        gbc.setState(0x132, 0x51a7, 0xf9e0, 0xb7c8, 0x1bc8, 0x718d, 0x0, 0x0);
        gbc.writeMem(0x132, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x51a7);
        EXPECT(gbc.pc(), 0x134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02A0
        gbc.setState(0x67c6, 0x3e02, 0x75c0, 0x3862, 0xc055, 0x9c07, 0x0, 0x0);
        gbc.writeMem(0x67c6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3e02);
        EXPECT(gbc.pc(), 0x67c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02A1
        gbc.setState(0xe284, 0xb064, 0x2840, 0xf960, 0xac80, 0xc5b0, 0x0, 0x0);
        gbc.writeMem(0xe284, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb064);
        EXPECT(gbc.pc(), 0xe286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe284), 0xcb);
        EXPECT(gbc.readMem(0xe285), 0x55);
        // CB 55 02A2
        gbc.setState(0xe0d1, 0xf1a8, 0xce30, 0x61b3, 0xe0fc, 0x8a1f, 0x0, 0x1);
        gbc.writeMem(0xe0d1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf1a8);
        EXPECT(gbc.pc(), 0xe0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d1), 0xcb);
        EXPECT(gbc.readMem(0xe0d2), 0x55);
        // CB 55 02A3
        gbc.setState(0x56e7, 0x9dce, 0x9c90, 0x5979, 0xf151, 0x80e9, 0x0, 0x0);
        gbc.writeMem(0x56e7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9dce);
        EXPECT(gbc.pc(), 0x56e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02A4
        gbc.setState(0xe9a2, 0xefb, 0x6620, 0x3ab, 0x1f73, 0x9317, 0x0, 0x0);
        gbc.writeMem(0xe9a2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xefb);
        EXPECT(gbc.pc(), 0xe9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a2), 0xcb);
        EXPECT(gbc.readMem(0xe9a3), 0x55);
        // CB 55 02A5
        gbc.setState(0x8147, 0x1b7e, 0x62e0, 0x5d10, 0x9330, 0x7dd9, 0x1, 0x1);
        gbc.writeMem(0x8147, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1b7e);
        EXPECT(gbc.pc(), 0x8149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8147), 0xcb);
        EXPECT(gbc.readMem(0x8148), 0x55);
        // CB 55 02A6
        gbc.setState(0xbf64, 0xbd50, 0x1ce0, 0xcc6f, 0x22e9, 0xdfae, 0x0, 0x0);
        gbc.writeMem(0xbf64, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xbd50);
        EXPECT(gbc.pc(), 0xbf66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf64), 0xcb);
        EXPECT(gbc.readMem(0xbf65), 0x55);
        // CB 55 02A8
        gbc.setState(0x64f3, 0xb873, 0xe2e0, 0xbfeb, 0x64d1, 0x1000, 0x1, 0x0);
        gbc.writeMem(0x64f3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb873);
        EXPECT(gbc.pc(), 0x64f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02A9
        gbc.setState(0x22b2, 0xc075, 0xe650, 0x5e79, 0x727f, 0x68e1, 0x0, 0x0);
        gbc.writeMem(0x22b2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc075);
        EXPECT(gbc.pc(), 0x22b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02AA
        gbc.setState(0x744b, 0xd34, 0xbf20, 0x876d, 0x2602, 0xf240, 0x1, 0x1);
        gbc.writeMem(0x744b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd34);
        EXPECT(gbc.pc(), 0x744d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02AB
        gbc.setState(0xb3ff, 0xf1df, 0x7180, 0xe68b, 0xee5a, 0x4532, 0x1, 0x0);
        gbc.writeMem(0xb3ff, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf1df);
        EXPECT(gbc.pc(), 0xb401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ff), 0xcb);
        EXPECT(gbc.readMem(0xb400), 0x55);
        // CB 55 02AC
        gbc.setState(0xed78, 0x8413, 0x2b10, 0x8846, 0x651e, 0x3d3c, 0x0, 0x1);
        gbc.writeMem(0xed78, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8413);
        EXPECT(gbc.pc(), 0xed7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed78), 0xcb);
        EXPECT(gbc.readMem(0xed79), 0x55);
        // CB 55 02AD
        gbc.setState(0xb847, 0xcaf7, 0x18e0, 0xc4da, 0x5aa8, 0x38ea, 0x1, 0x0);
        gbc.writeMem(0xb847, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcaf7);
        EXPECT(gbc.pc(), 0xb849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb847), 0xcb);
        EXPECT(gbc.readMem(0xb848), 0x55);
        // CB 55 02AE
        gbc.setState(0x52a2, 0xa09f, 0xbef0, 0x4ec7, 0x996f, 0xd51f, 0x0, 0x0);
        gbc.writeMem(0x52a2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa09f);
        EXPECT(gbc.pc(), 0x52a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02AF
        gbc.setState(0x7d50, 0xe990, 0x1070, 0x7768, 0xf30c, 0xd0a9, 0x0, 0x1);
        gbc.writeMem(0x7d50, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe990);
        EXPECT(gbc.pc(), 0x7d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02B0
        gbc.setState(0x8ba9, 0x89f3, 0xcf50, 0x1a0d, 0x84e0, 0x94bc, 0x1, 0x0);
        gbc.writeMem(0x8ba9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x89f3);
        EXPECT(gbc.pc(), 0x8bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba9), 0xcb);
        EXPECT(gbc.readMem(0x8baa), 0x55);
        // CB 55 02B1
        gbc.setState(0x73cd, 0xd2d8, 0x1f60, 0xae45, 0x7d16, 0x9b76, 0x0, 0x0);
        gbc.writeMem(0x73cd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd2d8);
        EXPECT(gbc.pc(), 0x73cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02B2
        gbc.setState(0x5b83, 0x72dd, 0xda80, 0xee5e, 0xfc5c, 0xbcc, 0x1, 0x0);
        gbc.writeMem(0x5b83, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x72dd);
        EXPECT(gbc.pc(), 0x5b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02B3
        gbc.setState(0xb35b, 0x1886, 0x71e0, 0xdae2, 0xb3be, 0xd7d7, 0x0, 0x1);
        gbc.writeMem(0xb35b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1886);
        EXPECT(gbc.pc(), 0xb35d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb35b), 0xcb);
        EXPECT(gbc.readMem(0xb35c), 0x55);
        // CB 55 02B4
        gbc.setState(0x25ce, 0x6c39, 0xbb20, 0xd0d2, 0x34d3, 0x136f, 0x0, 0x0);
        gbc.writeMem(0x25ce, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6c39);
        EXPECT(gbc.pc(), 0x25d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02B5
        gbc.setState(0x5d5f, 0xc01, 0x1c0, 0xb2ee, 0x35e8, 0x801b, 0x0, 0x1);
        gbc.writeMem(0x5d5f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc01);
        EXPECT(gbc.pc(), 0x5d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02B6
        gbc.setState(0x1019, 0xfca3, 0xed80, 0x2ccf, 0x42d7, 0xa87e, 0x1, 0x0);
        gbc.writeMem(0x1019, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfca3);
        EXPECT(gbc.pc(), 0x101b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02B8
        gbc.setState(0xe40f, 0xd857, 0xdb70, 0x9d70, 0xe07c, 0x4bd7, 0x0, 0x1);
        gbc.writeMem(0xe40f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd857);
        EXPECT(gbc.pc(), 0xe411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe40f), 0xcb);
        EXPECT(gbc.readMem(0xe410), 0x55);
        // CB 55 02B9
        gbc.setState(0xd59f, 0x45ce, 0xdfe0, 0xd514, 0xa796, 0xd91d, 0x1, 0x1);
        gbc.writeMem(0xd59f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x45ce);
        EXPECT(gbc.pc(), 0xd5a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59f), 0xcb);
        EXPECT(gbc.readMem(0xd5a0), 0x55);
        // CB 55 02BA
        gbc.setState(0xb3c0, 0x5d24, 0x80e0, 0x7949, 0xe0f4, 0x5e63, 0x0, 0x1);
        gbc.writeMem(0xb3c0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5d24);
        EXPECT(gbc.pc(), 0xb3c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c0), 0xcb);
        EXPECT(gbc.readMem(0xb3c1), 0x55);
        // CB 55 02BB
        gbc.setState(0x59df, 0x63eb, 0xd820, 0x4f96, 0x32d7, 0x71c7, 0x1, 0x0);
        gbc.writeMem(0x59df, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x63eb);
        EXPECT(gbc.pc(), 0x59e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02BC
        gbc.setState(0x948e, 0x4f3b, 0xfce0, 0xdabd, 0xd5b1, 0x3129, 0x0, 0x1);
        gbc.writeMem(0x948e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4f3b);
        EXPECT(gbc.pc(), 0x9490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948e), 0xcb);
        EXPECT(gbc.readMem(0x948f), 0x55);
        // CB 55 02BD
        gbc.setState(0x91fa, 0xd0ea, 0x3ce0, 0xe967, 0x70a9, 0xd994, 0x1, 0x1);
        gbc.writeMem(0x91fa, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd0ea);
        EXPECT(gbc.pc(), 0x91fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91fa), 0xcb);
        EXPECT(gbc.readMem(0x91fb), 0x55);
        // CB 55 02BE
        gbc.setState(0x56a7, 0xc5ea, 0x8530, 0xf4e4, 0x2176, 0x8ba5, 0x0, 0x1);
        gbc.writeMem(0x56a7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc5ea);
        EXPECT(gbc.pc(), 0x56a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02BF
        gbc.setState(0x6b7e, 0x3fd1, 0x64e0, 0xe400, 0xbee5, 0xa499, 0x1, 0x1);
        gbc.writeMem(0x6b7e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3fd1);
        EXPECT(gbc.pc(), 0x6b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02C0
        gbc.setState(0x299a, 0x5c48, 0x25b0, 0x9f5, 0xd668, 0x23d4, 0x0, 0x0);
        gbc.writeMem(0x299a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5c48);
        EXPECT(gbc.pc(), 0x299c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02C1
        gbc.setState(0xa13d, 0x58e6, 0xeec0, 0x4675, 0xa559, 0xad23, 0x0, 0x1);
        gbc.writeMem(0xa13d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x58e6);
        EXPECT(gbc.pc(), 0xa13f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa13d), 0xcb);
        EXPECT(gbc.readMem(0xa13e), 0x55);
        // CB 55 02C2
        gbc.setState(0xe0d1, 0x87e, 0x1e50, 0x753, 0xd4a7, 0x61f2, 0x0, 0x1);
        gbc.writeMem(0xe0d1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x87e);
        EXPECT(gbc.pc(), 0xe0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d1), 0xcb);
        EXPECT(gbc.readMem(0xe0d2), 0x55);
        // CB 55 02C3
        gbc.setState(0xdd0d, 0xf8e3, 0x4200, 0xa8b3, 0x63ab, 0xd3c4, 0x1, 0x1);
        gbc.writeMem(0xdd0d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf8e3);
        EXPECT(gbc.pc(), 0xdd0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd0d), 0xcb);
        EXPECT(gbc.readMem(0xdd0e), 0x55);
        // CB 55 02C4
        gbc.setState(0x4b72, 0x95b0, 0x9130, 0xc0c5, 0x8f16, 0xf0c8, 0x1, 0x0);
        gbc.writeMem(0x4b72, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x95b0);
        EXPECT(gbc.pc(), 0x4b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02C5
        gbc.setState(0x9575, 0x398, 0xd910, 0x593b, 0xcb84, 0x72db, 0x1, 0x0);
        gbc.writeMem(0x9575, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x398);
        EXPECT(gbc.pc(), 0x9577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9575), 0xcb);
        EXPECT(gbc.readMem(0x9576), 0x55);
        // CB 55 02C6
        gbc.setState(0x2aab, 0x44c5, 0xc520, 0xc9b7, 0xa31c, 0x1009, 0x0, 0x1);
        gbc.writeMem(0x2aab, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x44c5);
        EXPECT(gbc.pc(), 0x2aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02C8
        gbc.setState(0x42e2, 0xc7ca, 0x4bc0, 0x2f03, 0xbdcf, 0x804f, 0x1, 0x0);
        gbc.writeMem(0x42e2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc7ca);
        EXPECT(gbc.pc(), 0x42e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02CA
        gbc.setState(0x510, 0xe4e3, 0x2f50, 0x73f5, 0x5f01, 0x328e, 0x1, 0x1);
        gbc.writeMem(0x510, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe4e3);
        EXPECT(gbc.pc(), 0x512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02CB
        gbc.setState(0xc29d, 0x485, 0x90, 0x7e0, 0xe35c, 0x5c16, 0x1, 0x1);
        gbc.writeMem(0xc29d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x485);
        EXPECT(gbc.pc(), 0xc29f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc29d), 0xcb);
        EXPECT(gbc.readMem(0xc29e), 0x55);
        // CB 55 02CC
        gbc.setState(0xcc88, 0xc11f, 0xbbd0, 0x8dd8, 0xcd7b, 0x4ae4, 0x0, 0x1);
        gbc.writeMem(0xcc88, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc11f);
        EXPECT(gbc.pc(), 0xcc8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc88), 0xcb);
        EXPECT(gbc.readMem(0xcc89), 0x55);
        // CB 55 02CD
        gbc.setState(0xbf47, 0x8820, 0xa9c0, 0x80e0, 0x3b61, 0xd03e, 0x1, 0x0);
        gbc.writeMem(0xbf47, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8820);
        EXPECT(gbc.pc(), 0xbf49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf47), 0xcb);
        EXPECT(gbc.readMem(0xbf48), 0x55);
        // CB 55 02CE
        gbc.setState(0xbc, 0x1bf4, 0xa930, 0xb31b, 0x397d, 0x5eb7, 0x0, 0x0);
        gbc.writeMem(0xbc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1bf4);
        EXPECT(gbc.pc(), 0xbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02CF
        gbc.setState(0xe34c, 0xecd9, 0x71c0, 0xfbfb, 0x4666, 0xf5c8, 0x0, 0x1);
        gbc.writeMem(0xe34c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xecd9);
        EXPECT(gbc.pc(), 0xe34e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe34c), 0xcb);
        EXPECT(gbc.readMem(0xe34d), 0x55);
        // CB 55 02D1
        gbc.setState(0x9d92, 0xa8f3, 0xb110, 0x1980, 0x308b, 0x77d5, 0x1, 0x0);
        gbc.writeMem(0x9d92, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa8f3);
        EXPECT(gbc.pc(), 0x9d94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d92), 0xcb);
        EXPECT(gbc.readMem(0x9d93), 0x55);
        // CB 55 02D2
        gbc.setState(0x9809, 0x15d, 0x6ca0, 0x82d7, 0x699b, 0x7435, 0x1, 0x1);
        gbc.writeMem(0x9809, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x15d);
        EXPECT(gbc.pc(), 0x980b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9809), 0xcb);
        EXPECT(gbc.readMem(0x980a), 0x55);
        // CB 55 02D3
        gbc.setState(0x2790, 0xed1, 0xb630, 0xacf6, 0x2aab, 0xe778, 0x0, 0x1);
        gbc.writeMem(0x2790, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xed1);
        EXPECT(gbc.pc(), 0x2792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02D4
        gbc.setState(0xc47f, 0xc18f, 0xa440, 0xdb6c, 0xf461, 0x21a2, 0x0, 0x1);
        gbc.writeMem(0xc47f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc18f);
        EXPECT(gbc.pc(), 0xc481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc47f), 0xcb);
        EXPECT(gbc.readMem(0xc480), 0x55);
        // CB 55 02D5
        gbc.setState(0xc8ff, 0x41ce, 0x3100, 0x8ce8, 0xb394, 0x2a4a, 0x0, 0x0);
        gbc.writeMem(0xc8ff, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x41ce);
        EXPECT(gbc.pc(), 0xc901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ff), 0xcb);
        EXPECT(gbc.readMem(0xc900), 0x55);
        // CB 55 02D6
        gbc.setState(0xbb1b, 0x1ce1, 0xb30, 0x74b4, 0x3868, 0x6e2c, 0x0, 0x1);
        gbc.writeMem(0xbb1b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1ce1);
        EXPECT(gbc.pc(), 0xbb1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb1b), 0xcb);
        EXPECT(gbc.readMem(0xbb1c), 0x55);
        // CB 55 02D7
        gbc.setState(0x2bf0, 0x10c0, 0x9b30, 0xd8b7, 0x16c, 0x293b, 0x1, 0x1);
        gbc.writeMem(0x2bf0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x10c0);
        EXPECT(gbc.pc(), 0x2bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02D8
        gbc.setState(0x6ae2, 0x9b08, 0x6e60, 0x2ba4, 0xc043, 0xfb33, 0x0, 0x1);
        gbc.writeMem(0x6ae2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9b08);
        EXPECT(gbc.pc(), 0x6ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02DA
        gbc.setState(0xcb7a, 0xa68d, 0xf8e0, 0x9a91, 0xe18b, 0x4276, 0x1, 0x1);
        gbc.writeMem(0xcb7a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa68d);
        EXPECT(gbc.pc(), 0xcb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7a), 0xcb);
        EXPECT(gbc.readMem(0xcb7b), 0x55);
        // CB 55 02DB
        gbc.setState(0x5d9b, 0x6014, 0x4bb0, 0x571d, 0x4383, 0xd1a3, 0x0, 0x1);
        gbc.writeMem(0x5d9b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6014);
        EXPECT(gbc.pc(), 0x5d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02DC
        gbc.setState(0x61af, 0xcdc3, 0xea30, 0xdfff, 0x3f37, 0xb059, 0x0, 0x0);
        gbc.writeMem(0x61af, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcdc3);
        EXPECT(gbc.pc(), 0x61b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02DD
        gbc.setState(0xd65a, 0x5ee7, 0xf960, 0x92f1, 0xf4b7, 0x1bec, 0x1, 0x1);
        gbc.writeMem(0xd65a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5ee7);
        EXPECT(gbc.pc(), 0xd65c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65a), 0xcb);
        EXPECT(gbc.readMem(0xd65b), 0x55);
        // CB 55 02DE
        gbc.setState(0x4e89, 0x2d3f, 0xc170, 0x6d7a, 0x7841, 0x36dd, 0x1, 0x0);
        gbc.writeMem(0x4e89, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2d3f);
        EXPECT(gbc.pc(), 0x4e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02DF
        gbc.setState(0x6ed2, 0x440c, 0x2a10, 0xa368, 0x1390, 0xe6b4, 0x0, 0x0);
        gbc.writeMem(0x6ed2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x440c);
        EXPECT(gbc.pc(), 0x6ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02E0
        gbc.setState(0x7524, 0x9483, 0x1260, 0xb5f1, 0xc97c, 0xbd43, 0x1, 0x0);
        gbc.writeMem(0x7524, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9483);
        EXPECT(gbc.pc(), 0x7526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02E1
        gbc.setState(0xe2fe, 0x5b91, 0xf2c0, 0x2d1c, 0x52c0, 0xcbeb, 0x0, 0x1);
        gbc.writeMem(0xe2fe, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5b91);
        EXPECT(gbc.pc(), 0xe300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2fe), 0xcb);
        EXPECT(gbc.readMem(0xe2ff), 0x55);
        // CB 55 02E2
        gbc.setState(0x897a, 0xd51d, 0x3ab0, 0x71ba, 0xe6c7, 0x3717, 0x0, 0x0);
        gbc.writeMem(0x897a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd51d);
        EXPECT(gbc.pc(), 0x897c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x897a), 0xcb);
        EXPECT(gbc.readMem(0x897b), 0x55);
        // CB 55 02E3
        gbc.setState(0x4ab3, 0x5858, 0xb7f0, 0x9e50, 0x3101, 0xc77d, 0x1, 0x1);
        gbc.writeMem(0x4ab3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5858);
        EXPECT(gbc.pc(), 0x4ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02E4
        gbc.setState(0xb2e6, 0x82d, 0x3b00, 0xdffc, 0xd089, 0x21e4, 0x0, 0x0);
        gbc.writeMem(0xb2e6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x82d);
        EXPECT(gbc.pc(), 0xb2e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e6), 0xcb);
        EXPECT(gbc.readMem(0xb2e7), 0x55);
        // CB 55 02E5
        gbc.setState(0x4be3, 0x689e, 0xf440, 0x7bdf, 0x4e39, 0x22cb, 0x1, 0x0);
        gbc.writeMem(0x4be3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x689e);
        EXPECT(gbc.pc(), 0x4be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02E6
        gbc.setState(0xedee, 0xd9cd, 0x92b0, 0x1c1b, 0xe2a0, 0x9b7, 0x0, 0x0);
        gbc.writeMem(0xedee, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd9cd);
        EXPECT(gbc.pc(), 0xedf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedee), 0xcb);
        EXPECT(gbc.readMem(0xedef), 0x55);
        // CB 55 02E7
        gbc.setState(0x9e39, 0xe855, 0xa50, 0xd8e3, 0x8cd6, 0x8529, 0x1, 0x0);
        gbc.writeMem(0x9e39, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe855);
        EXPECT(gbc.pc(), 0x9e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e39), 0xcb);
        EXPECT(gbc.readMem(0x9e3a), 0x55);
        // CB 55 02E8
        gbc.setState(0x61a1, 0x878e, 0xfec0, 0x302d, 0xb65b, 0x20b8, 0x0, 0x0);
        gbc.writeMem(0x61a1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x878e);
        EXPECT(gbc.pc(), 0x61a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02E9
        gbc.setState(0xc5f4, 0x831a, 0x9810, 0xc03d, 0x341b, 0x3432, 0x1, 0x0);
        gbc.writeMem(0xc5f4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x831a);
        EXPECT(gbc.pc(), 0xc5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f4), 0xcb);
        EXPECT(gbc.readMem(0xc5f5), 0x55);
        // CB 55 02EA
        gbc.setState(0x5c3b, 0xf3e3, 0xf70, 0x560f, 0xf8c3, 0x8b5c, 0x0, 0x0);
        gbc.writeMem(0x5c3b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf3e3);
        EXPECT(gbc.pc(), 0x5c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02EB
        gbc.setState(0x659b, 0x390d, 0xeae0, 0x83aa, 0xc60f, 0x25f3, 0x1, 0x0);
        gbc.writeMem(0x659b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x390d);
        EXPECT(gbc.pc(), 0x659d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02EC
        gbc.setState(0xdf5f, 0x5f0a, 0x3300, 0x3c73, 0x62ec, 0xe8a1, 0x0, 0x1);
        gbc.writeMem(0xdf5f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5f0a);
        EXPECT(gbc.pc(), 0xdf61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf5f), 0xcb);
        EXPECT(gbc.readMem(0xdf60), 0x55);
        // CB 55 02ED
        gbc.setState(0x5e2f, 0x5d72, 0xa4c0, 0x539f, 0xb9d0, 0xd51f, 0x1, 0x1);
        gbc.writeMem(0x5e2f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5d72);
        EXPECT(gbc.pc(), 0x5e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02EE
        gbc.setState(0x3c39, 0x555e, 0xa9f0, 0xc1e5, 0x2444, 0xfcd2, 0x0, 0x1);
        gbc.writeMem(0x3c39, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x555e);
        EXPECT(gbc.pc(), 0x3c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02EF
        gbc.setState(0xd06a, 0xdfd7, 0x7d70, 0xba40, 0x576b, 0x2f1b, 0x1, 0x0);
        gbc.writeMem(0xd06a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdfd7);
        EXPECT(gbc.pc(), 0xd06c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd06a), 0xcb);
        EXPECT(gbc.readMem(0xd06b), 0x55);
        // CB 55 02F0
        gbc.setState(0x5439, 0x8fb, 0xaf60, 0x68e6, 0xfb5b, 0x5be2, 0x0, 0x0);
        gbc.writeMem(0x5439, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8fb);
        EXPECT(gbc.pc(), 0x543b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02F1
        gbc.setState(0x7547, 0x7c44, 0xc900, 0xdb9f, 0x73c8, 0xbd0b, 0x1, 0x0);
        gbc.writeMem(0x7547, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7c44);
        EXPECT(gbc.pc(), 0x7549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02F2
        gbc.setState(0xade4, 0xefe8, 0x5630, 0x4240, 0x3fb4, 0xede3, 0x0, 0x0);
        gbc.writeMem(0xade4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xefe8);
        EXPECT(gbc.pc(), 0xade6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade4), 0xcb);
        EXPECT(gbc.readMem(0xade5), 0x55);
        // CB 55 02F3
        gbc.setState(0x2280, 0xd814, 0xb7b0, 0x1bb6, 0x8698, 0x9946, 0x0, 0x1);
        gbc.writeMem(0x2280, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd814);
        EXPECT(gbc.pc(), 0x2282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02F4
        gbc.setState(0xdb60, 0x9c85, 0x20, 0xb112, 0xa0e1, 0xa6a2, 0x0, 0x0);
        gbc.writeMem(0xdb60, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9c85);
        EXPECT(gbc.pc(), 0xdb62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb60), 0xcb);
        EXPECT(gbc.readMem(0xdb61), 0x55);
        // CB 55 02F5
        gbc.setState(0xd02b, 0x8b03, 0xd0c0, 0xa8ce, 0x6d2a, 0x4710, 0x1, 0x0);
        gbc.writeMem(0xd02b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8b03);
        EXPECT(gbc.pc(), 0xd02d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02b), 0xcb);
        EXPECT(gbc.readMem(0xd02c), 0x55);
        // CB 55 02F6
        gbc.setState(0x6337, 0xb2fe, 0x24d0, 0x844d, 0x4be3, 0xacef, 0x1, 0x1);
        gbc.writeMem(0x6337, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb2fe);
        EXPECT(gbc.pc(), 0x6339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02F7
        gbc.setState(0x80f7, 0x9d, 0x5080, 0x48d8, 0xdbc3, 0xdc58, 0x1, 0x0);
        gbc.writeMem(0x80f7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9d);
        EXPECT(gbc.pc(), 0x80f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f7), 0xcb);
        EXPECT(gbc.readMem(0x80f8), 0x55);
        // CB 55 02F8
        gbc.setState(0x9df8, 0x82f1, 0x9dd0, 0x507a, 0x49f4, 0x600b, 0x1, 0x1);
        gbc.writeMem(0x9df8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x82f1);
        EXPECT(gbc.pc(), 0x9dfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df8), 0xcb);
        EXPECT(gbc.readMem(0x9df9), 0x55);
        // CB 55 02F9
        gbc.setState(0xb8ec, 0x92b4, 0xda30, 0xc667, 0xcfec, 0x7914, 0x1, 0x1);
        gbc.writeMem(0xb8ec, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x92b4);
        EXPECT(gbc.pc(), 0xb8ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ec), 0xcb);
        EXPECT(gbc.readMem(0xb8ed), 0x55);
        // CB 55 02FA
        gbc.setState(0xda70, 0xd43f, 0x1610, 0x2818, 0x7d11, 0xa1d, 0x1, 0x0);
        gbc.writeMem(0xda70, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd43f);
        EXPECT(gbc.pc(), 0xda72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda70), 0xcb);
        EXPECT(gbc.readMem(0xda71), 0x55);
        // CB 55 02FB
        gbc.setState(0x642d, 0xf93b, 0xe4d0, 0x10b5, 0xada8, 0x7ad3, 0x0, 0x1);
        gbc.writeMem(0x642d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf93b);
        EXPECT(gbc.pc(), 0x642f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02FC
        gbc.setState(0x4887, 0x63d0, 0xbb70, 0x3fdb, 0xe5a2, 0xac21, 0x0, 0x0);
        gbc.writeMem(0x4887, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x63d0);
        EXPECT(gbc.pc(), 0x4889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 02FD
        gbc.setState(0x1f3f, 0x3b92, 0x7700, 0xe22b, 0x863c, 0x6ad9, 0x0, 0x0);
        gbc.writeMem(0x1f3f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3b92);
        EXPECT(gbc.pc(), 0x1f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 02FE
        gbc.setState(0xd140, 0x576f, 0xe4b0, 0xc47a, 0xcc92, 0x6a47, 0x0, 0x1);
        gbc.writeMem(0xd140, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x576f);
        EXPECT(gbc.pc(), 0xd142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd140), 0xcb);
        EXPECT(gbc.readMem(0xd141), 0x55);
        // CB 55 02FF
        gbc.setState(0x2ffd, 0xd460, 0x5650, 0x898c, 0x9d9b, 0xa2b6, 0x0, 0x0);
        gbc.writeMem(0x2ffd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd460);
        EXPECT(gbc.pc(), 0x2fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0300
        gbc.setState(0x49b1, 0xce7d, 0xc7e0, 0xb971, 0x97c5, 0x245d, 0x1, 0x0);
        gbc.writeMem(0x49b1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xce7d);
        EXPECT(gbc.pc(), 0x49b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0301
        gbc.setState(0x9461, 0xa49a, 0xbbf0, 0xd5e9, 0x7dda, 0xdc3d, 0x1, 0x0);
        gbc.writeMem(0x9461, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa49a);
        EXPECT(gbc.pc(), 0x9463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9461), 0xcb);
        EXPECT(gbc.readMem(0x9462), 0x55);
        // CB 55 0302
        gbc.setState(0x7dd9, 0x6d9, 0x39d0, 0x615f, 0xe970, 0x1a46, 0x0, 0x1);
        gbc.writeMem(0x7dd9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6d9);
        EXPECT(gbc.pc(), 0x7ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0303
        gbc.setState(0xebf4, 0xfec6, 0xce70, 0x50b8, 0xcbe, 0x7713, 0x1, 0x1);
        gbc.writeMem(0xebf4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfec6);
        EXPECT(gbc.pc(), 0xebf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf4), 0xcb);
        EXPECT(gbc.readMem(0xebf5), 0x55);
        // CB 55 0304
        gbc.setState(0x4c41, 0xab1c, 0xacc0, 0x169b, 0xa143, 0x68c4, 0x1, 0x0);
        gbc.writeMem(0x4c41, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xab1c);
        EXPECT(gbc.pc(), 0x4c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0305
        gbc.setState(0xc4b8, 0x363d, 0x7160, 0xf25, 0x5779, 0x8e85, 0x0, 0x1);
        gbc.writeMem(0xc4b8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x363d);
        EXPECT(gbc.pc(), 0xc4ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b8), 0xcb);
        EXPECT(gbc.readMem(0xc4b9), 0x55);
        // CB 55 0306
        gbc.setState(0x4dd6, 0xfc93, 0x48c0, 0x3c68, 0xa601, 0xf42f, 0x0, 0x1);
        gbc.writeMem(0x4dd6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfc93);
        EXPECT(gbc.pc(), 0x4dd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0307
        gbc.setState(0x76e7, 0xb41d, 0xcee0, 0x22df, 0x9bc3, 0xd1c5, 0x0, 0x0);
        gbc.writeMem(0x76e7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb41d);
        EXPECT(gbc.pc(), 0x76e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0308
        gbc.setState(0x931d, 0x8927, 0x2ab0, 0xbb0, 0x11a8, 0x6a1, 0x1, 0x0);
        gbc.writeMem(0x931d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8927);
        EXPECT(gbc.pc(), 0x931f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x931d), 0xcb);
        EXPECT(gbc.readMem(0x931e), 0x55);
        // CB 55 0309
        gbc.setState(0x63bf, 0xcd9f, 0x35c0, 0x2052, 0xe1ca, 0xdce, 0x0, 0x1);
        gbc.writeMem(0x63bf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcd9f);
        EXPECT(gbc.pc(), 0x63c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 030A
        gbc.setState(0xa583, 0x471, 0xc1e0, 0xa2e1, 0x31a2, 0xae0d, 0x0, 0x0);
        gbc.writeMem(0xa583, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x471);
        EXPECT(gbc.pc(), 0xa585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa583), 0xcb);
        EXPECT(gbc.readMem(0xa584), 0x55);
        // CB 55 030B
        gbc.setState(0x7d3b, 0x7782, 0x3c60, 0xf9da, 0x5876, 0x35d3, 0x0, 0x1);
        gbc.writeMem(0x7d3b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7782);
        EXPECT(gbc.pc(), 0x7d3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 030C
        gbc.setState(0x13bd, 0xab81, 0x6080, 0x4713, 0x5876, 0x67b9, 0x1, 0x0);
        gbc.writeMem(0x13bd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xab81);
        EXPECT(gbc.pc(), 0x13bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 030D
        gbc.setState(0x1ec4, 0x7591, 0x1180, 0x17d3, 0xe4ab, 0xa905, 0x0, 0x1);
        gbc.writeMem(0x1ec4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7591);
        EXPECT(gbc.pc(), 0x1ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 030E
        gbc.setState(0x11fe, 0xe96a, 0x3c70, 0x437e, 0xab68, 0x4d47, 0x0, 0x1);
        gbc.writeMem(0x11fe, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe96a);
        EXPECT(gbc.pc(), 0x1200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 030F
        gbc.setState(0xc5bd, 0xf4eb, 0x90c0, 0x8b24, 0xc2a0, 0xde82, 0x0, 0x0);
        gbc.writeMem(0xc5bd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf4eb);
        EXPECT(gbc.pc(), 0xc5bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5bd), 0xcb);
        EXPECT(gbc.readMem(0xc5be), 0x55);
        // CB 55 0310
        gbc.setState(0xa217, 0x9635, 0x77c0, 0xa183, 0x103c, 0x30fc, 0x0, 0x1);
        gbc.writeMem(0xa217, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9635);
        EXPECT(gbc.pc(), 0xa219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa217), 0xcb);
        EXPECT(gbc.readMem(0xa218), 0x55);
        // CB 55 0312
        gbc.setState(0x400e, 0xd989, 0xf400, 0xc63c, 0x9dc2, 0x7ffd, 0x1, 0x1);
        gbc.writeMem(0x400e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd989);
        EXPECT(gbc.pc(), 0x4010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0313
        gbc.setState(0x45ab, 0x4f32, 0x8e60, 0x2771, 0xca46, 0xcf23, 0x1, 0x1);
        gbc.writeMem(0x45ab, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4f32);
        EXPECT(gbc.pc(), 0x45ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0314
        gbc.setState(0xdf88, 0x6e1f, 0xbce0, 0xc5a8, 0xe5dd, 0x80ae, 0x0, 0x1);
        gbc.writeMem(0xdf88, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6e1f);
        EXPECT(gbc.pc(), 0xdf8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf88), 0xcb);
        EXPECT(gbc.readMem(0xdf89), 0x55);
        // CB 55 0315
        gbc.setState(0x1477, 0x1a87, 0x5590, 0xd06, 0xe59, 0x7377, 0x1, 0x1);
        gbc.writeMem(0x1477, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1a87);
        EXPECT(gbc.pc(), 0x1479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0316
        gbc.setState(0xdd7e, 0xe73, 0x5a80, 0x9566, 0x4ee5, 0xf0fc, 0x0, 0x0);
        gbc.writeMem(0xdd7e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe73);
        EXPECT(gbc.pc(), 0xdd80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd7e), 0xcb);
        EXPECT(gbc.readMem(0xdd7f), 0x55);
        // CB 55 0317
        gbc.setState(0x3f0b, 0xd790, 0x2240, 0xc7c1, 0x3647, 0xd90d, 0x1, 0x1);
        gbc.writeMem(0x3f0b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd790);
        EXPECT(gbc.pc(), 0x3f0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0318
        gbc.setState(0x355d, 0x77b8, 0x92f0, 0x6865, 0x68d1, 0x9f4b, 0x0, 0x1);
        gbc.writeMem(0x355d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x77b8);
        EXPECT(gbc.pc(), 0x355f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0319
        gbc.setState(0x1010, 0xe11a, 0xdf00, 0x5443, 0xceca, 0xb776, 0x1, 0x0);
        gbc.writeMem(0x1010, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe11a);
        EXPECT(gbc.pc(), 0x1012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 031A
        gbc.setState(0xd7f5, 0x5d9f, 0xabc0, 0xee77, 0x3a31, 0x897c, 0x1, 0x0);
        gbc.writeMem(0xd7f5, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5d9f);
        EXPECT(gbc.pc(), 0xd7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f5), 0xcb);
        EXPECT(gbc.readMem(0xd7f6), 0x55);
        // CB 55 031B
        gbc.setState(0x75c, 0x2da0, 0x7b20, 0x229c, 0xcba5, 0x3a7b, 0x0, 0x1);
        gbc.writeMem(0x75c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2da0);
        EXPECT(gbc.pc(), 0x75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 031C
        gbc.setState(0x8852, 0xc932, 0xde80, 0x33a5, 0xc1df, 0x1623, 0x1, 0x1);
        gbc.writeMem(0x8852, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc932);
        EXPECT(gbc.pc(), 0x8854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8852), 0xcb);
        EXPECT(gbc.readMem(0x8853), 0x55);
        // CB 55 031D
        gbc.setState(0x6fd2, 0x7e5f, 0x67f0, 0x97b, 0x41a, 0xd3d9, 0x0, 0x1);
        gbc.writeMem(0x6fd2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7e5f);
        EXPECT(gbc.pc(), 0x6fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 031E
        gbc.setState(0xb010, 0xe993, 0xb560, 0x6d42, 0xdb3e, 0x666e, 0x0, 0x1);
        gbc.writeMem(0xb010, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe993);
        EXPECT(gbc.pc(), 0xb012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb010), 0xcb);
        EXPECT(gbc.readMem(0xb011), 0x55);
        // CB 55 031F
        gbc.setState(0x87d8, 0x12cc, 0xf8c0, 0x24e7, 0xa237, 0xbd3, 0x0, 0x1);
        gbc.writeMem(0x87d8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x12cc);
        EXPECT(gbc.pc(), 0x87da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d8), 0xcb);
        EXPECT(gbc.readMem(0x87d9), 0x55);
        // CB 55 0320
        gbc.setState(0x3f5b, 0x4ed5, 0xab30, 0x1aa9, 0x535e, 0xc785, 0x0, 0x1);
        gbc.writeMem(0x3f5b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4ed5);
        EXPECT(gbc.pc(), 0x3f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0321
        gbc.setState(0x7f42, 0x885d, 0x7710, 0x3d12, 0x39c1, 0x9d98, 0x0, 0x1);
        gbc.writeMem(0x7f42, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x885d);
        EXPECT(gbc.pc(), 0x7f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0322
        gbc.setState(0x403d, 0xdd39, 0xee80, 0x2a45, 0x34c2, 0x80ec, 0x0, 0x1);
        gbc.writeMem(0x403d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdd39);
        EXPECT(gbc.pc(), 0x403f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0323
        gbc.setState(0x4b59, 0xfc3a, 0x3cd0, 0xac52, 0xc7fb, 0xfd80, 0x0, 0x1);
        gbc.writeMem(0x4b59, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xfc3a);
        EXPECT(gbc.pc(), 0x4b5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0324
        gbc.setState(0x42bf, 0x7b4a, 0x5700, 0xe355, 0x8aea, 0xa35a, 0x1, 0x1);
        gbc.writeMem(0x42bf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7b4a);
        EXPECT(gbc.pc(), 0x42c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0325
        gbc.setState(0x2e84, 0xa9c7, 0xb020, 0x5f9b, 0xf0e2, 0x22e5, 0x0, 0x0);
        gbc.writeMem(0x2e84, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa9c7);
        EXPECT(gbc.pc(), 0x2e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0326
        gbc.setState(0x1cfe, 0x8c47, 0xe80, 0xdcb4, 0x1575, 0xe2a5, 0x0, 0x0);
        gbc.writeMem(0x1cfe, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8c47);
        EXPECT(gbc.pc(), 0x1d00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0327
        gbc.setState(0x413, 0x40cf, 0x49f0, 0x8195, 0x129, 0x441, 0x1, 0x0);
        gbc.writeMem(0x413, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x40cf);
        EXPECT(gbc.pc(), 0x415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0328
        gbc.setState(0xe565, 0x7ba9, 0x5820, 0x150d, 0x1135, 0x6bb6, 0x0, 0x1);
        gbc.writeMem(0xe565, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7ba9);
        EXPECT(gbc.pc(), 0xe567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe565), 0xcb);
        EXPECT(gbc.readMem(0xe566), 0x55);
        // CB 55 0329
        gbc.setState(0xd471, 0x3be9, 0xb9e0, 0xfb8, 0x2300, 0x7962, 0x0, 0x1);
        gbc.writeMem(0xd471, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3be9);
        EXPECT(gbc.pc(), 0xd473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd471), 0xcb);
        EXPECT(gbc.readMem(0xd472), 0x55);
        // CB 55 032A
        gbc.setState(0xe029, 0xfbfa, 0x7f20, 0x8e90, 0xbb05, 0x82ae, 0x0, 0x0);
        gbc.writeMem(0xe029, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfbfa);
        EXPECT(gbc.pc(), 0xe02b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe029), 0xcb);
        EXPECT(gbc.readMem(0xe02a), 0x55);
        // CB 55 032B
        gbc.setState(0x19d, 0x30af, 0x1d90, 0x1328, 0x2abf, 0xcbde, 0x0, 0x0);
        gbc.writeMem(0x19d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x30af);
        EXPECT(gbc.pc(), 0x19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 032C
        gbc.setState(0xbb5a, 0x2f1e, 0x6020, 0x47a1, 0x4bc1, 0x36bd, 0x0, 0x1);
        gbc.writeMem(0xbb5a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2f1e);
        EXPECT(gbc.pc(), 0xbb5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb5a), 0xcb);
        EXPECT(gbc.readMem(0xbb5b), 0x55);
        // CB 55 032D
        gbc.setState(0x2416, 0x7b7b, 0x58b0, 0xaae4, 0x3001, 0xadcb, 0x0, 0x0);
        gbc.writeMem(0x2416, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7b7b);
        EXPECT(gbc.pc(), 0x2418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 032E
        gbc.setState(0xdef, 0x18c3, 0xd5c0, 0x40fd, 0x25ce, 0x7c31, 0x0, 0x1);
        gbc.writeMem(0xdef, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x18c3);
        EXPECT(gbc.pc(), 0xdf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 032F
        gbc.setState(0xcb51, 0x43fb, 0x3910, 0xf875, 0xdb9d, 0xa044, 0x1, 0x1);
        gbc.writeMem(0xcb51, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x43fb);
        EXPECT(gbc.pc(), 0xcb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb51), 0xcb);
        EXPECT(gbc.readMem(0xcb52), 0x55);
        // CB 55 0330
        gbc.setState(0x32fb, 0x5380, 0x6870, 0x5427, 0xd856, 0x4a63, 0x1, 0x0);
        gbc.writeMem(0x32fb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5380);
        EXPECT(gbc.pc(), 0x32fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0331
        gbc.setState(0x7c35, 0xb289, 0xcf80, 0xbc16, 0x8677, 0xd025, 0x1, 0x1);
        gbc.writeMem(0x7c35, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb289);
        EXPECT(gbc.pc(), 0x7c37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0332
        gbc.setState(0x77de, 0xd84c, 0xd3a0, 0xbecb, 0x1e5b, 0x4fb5, 0x1, 0x1);
        gbc.writeMem(0x77de, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd84c);
        EXPECT(gbc.pc(), 0x77e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0333
        gbc.setState(0xed74, 0xd88d, 0xe0, 0xaf90, 0xd09c, 0x9f56, 0x0, 0x0);
        gbc.writeMem(0xed74, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd88d);
        EXPECT(gbc.pc(), 0xed76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed74), 0xcb);
        EXPECT(gbc.readMem(0xed75), 0x55);
        // CB 55 0334
        gbc.setState(0x251c, 0x6583, 0x690, 0x863c, 0x5412, 0x4e41, 0x0, 0x1);
        gbc.writeMem(0x251c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6583);
        EXPECT(gbc.pc(), 0x251e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0335
        gbc.setState(0x88f1, 0xb788, 0xf550, 0xdd44, 0x7e96, 0x57c1, 0x1, 0x0);
        gbc.writeMem(0x88f1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb788);
        EXPECT(gbc.pc(), 0x88f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f1), 0xcb);
        EXPECT(gbc.readMem(0x88f2), 0x55);
        // CB 55 0336
        gbc.setState(0x6e, 0xa390, 0xe4b0, 0x1a75, 0x69d5, 0xd17b, 0x0, 0x0);
        gbc.writeMem(0x6e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa390);
        EXPECT(gbc.pc(), 0x70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0337
        gbc.setState(0xe34c, 0x7c05, 0x3600, 0x4dfa, 0x1f5e, 0x69a2, 0x1, 0x1);
        gbc.writeMem(0xe34c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7c05);
        EXPECT(gbc.pc(), 0xe34e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe34c), 0xcb);
        EXPECT(gbc.readMem(0xe34d), 0x55);
        // CB 55 0338
        gbc.setState(0x48f7, 0x9d4b, 0x6920, 0xd474, 0xd010, 0xea1f, 0x0, 0x1);
        gbc.writeMem(0x48f7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9d4b);
        EXPECT(gbc.pc(), 0x48f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0339
        gbc.setState(0xa03a, 0x8495, 0xeea0, 0xea83, 0x7100, 0x2c0e, 0x0, 0x0);
        gbc.writeMem(0xa03a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8495);
        EXPECT(gbc.pc(), 0xa03c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa03a), 0xcb);
        EXPECT(gbc.readMem(0xa03b), 0x55);
        // CB 55 033A
        gbc.setState(0xa272, 0xbecf, 0xf000, 0x6ebe, 0xcb63, 0x8057, 0x0, 0x0);
        gbc.writeMem(0xa272, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbecf);
        EXPECT(gbc.pc(), 0xa274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa272), 0xcb);
        EXPECT(gbc.readMem(0xa273), 0x55);
        // CB 55 033B
        gbc.setState(0x9fde, 0x50c2, 0x2b0, 0xed93, 0x1479, 0x8c03, 0x0, 0x1);
        gbc.writeMem(0x9fde, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x50c2);
        EXPECT(gbc.pc(), 0x9fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fde), 0xcb);
        EXPECT(gbc.readMem(0x9fdf), 0x55);
        // CB 55 033C
        gbc.setState(0xcd11, 0x5b5a, 0x9df0, 0x688a, 0xd869, 0xcc89, 0x1, 0x1);
        gbc.writeMem(0xcd11, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5b5a);
        EXPECT(gbc.pc(), 0xcd13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd11), 0xcb);
        EXPECT(gbc.readMem(0xcd12), 0x55);
        // CB 55 033D
        gbc.setState(0x908c, 0xf827, 0xcfc0, 0x58bf, 0x7f82, 0xb88b, 0x1, 0x1);
        gbc.writeMem(0x908c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf827);
        EXPECT(gbc.pc(), 0x908e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x908c), 0xcb);
        EXPECT(gbc.readMem(0x908d), 0x55);
        // CB 55 033E
        gbc.setState(0x1335, 0xa0b0, 0xce90, 0x3568, 0x36d3, 0x5605, 0x0, 0x1);
        gbc.writeMem(0x1335, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa0b0);
        EXPECT(gbc.pc(), 0x1337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 033F
        gbc.setState(0x194e, 0xd755, 0xf990, 0xa1c, 0x1203, 0x9e92, 0x1, 0x1);
        gbc.writeMem(0x194e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd755);
        EXPECT(gbc.pc(), 0x1950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0340
        gbc.setState(0x76e2, 0x25a3, 0x82f0, 0xd7d6, 0x7e52, 0x481b, 0x1, 0x0);
        gbc.writeMem(0x76e2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x25a3);
        EXPECT(gbc.pc(), 0x76e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0341
        gbc.setState(0x3270, 0x5705, 0xc080, 0xab46, 0x82fc, 0x1e3f, 0x1, 0x0);
        gbc.writeMem(0x3270, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5705);
        EXPECT(gbc.pc(), 0x3272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0342
        gbc.setState(0xef1c, 0xe1dd, 0x3ef0, 0x2136, 0x6a7, 0x29d6, 0x1, 0x0);
        gbc.writeMem(0xef1c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe1dd);
        EXPECT(gbc.pc(), 0xef1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1c), 0xcb);
        EXPECT(gbc.readMem(0xef1d), 0x55);
        // CB 55 0343
        gbc.setState(0x54b4, 0xef54, 0x2680, 0xa2de, 0x6bef, 0x8c70, 0x1, 0x1);
        gbc.writeMem(0x54b4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xef54);
        EXPECT(gbc.pc(), 0x54b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0344
        gbc.setState(0xe0f7, 0x797b, 0xf660, 0xfe46, 0x6ef1, 0xdc70, 0x1, 0x1);
        gbc.writeMem(0xe0f7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x797b);
        EXPECT(gbc.pc(), 0xe0f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f7), 0xcb);
        EXPECT(gbc.readMem(0xe0f8), 0x55);
        // CB 55 0345
        gbc.setState(0xa170, 0xbdf0, 0xd670, 0x78aa, 0x885e, 0xae3a, 0x0, 0x0);
        gbc.writeMem(0xa170, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbdf0);
        EXPECT(gbc.pc(), 0xa172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa170), 0xcb);
        EXPECT(gbc.readMem(0xa171), 0x55);
        // CB 55 0346
        gbc.setState(0x74d8, 0xd3ea, 0xf2e0, 0x6656, 0x9ec3, 0x790c, 0x0, 0x1);
        gbc.writeMem(0x74d8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd3ea);
        EXPECT(gbc.pc(), 0x74da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0347
        gbc.setState(0xb865, 0x4225, 0x5d90, 0x2336, 0x74d8, 0x6899, 0x1, 0x1);
        gbc.writeMem(0xb865, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4225);
        EXPECT(gbc.pc(), 0xb867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb865), 0xcb);
        EXPECT(gbc.readMem(0xb866), 0x55);
        // CB 55 0348
        gbc.setState(0x47bd, 0x3335, 0xec50, 0x976e, 0x5501, 0x48cc, 0x1, 0x0);
        gbc.writeMem(0x47bd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3335);
        EXPECT(gbc.pc(), 0x47bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0349
        gbc.setState(0x8c58, 0x1bdf, 0xdca0, 0xa8ac, 0x7961, 0x6b1b, 0x0, 0x1);
        gbc.writeMem(0x8c58, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1bdf);
        EXPECT(gbc.pc(), 0x8c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c58), 0xcb);
        EXPECT(gbc.readMem(0x8c59), 0x55);
        // CB 55 034A
        gbc.setState(0xc868, 0x23a6, 0x7c40, 0x403e, 0xa608, 0x2f82, 0x0, 0x1);
        gbc.writeMem(0xc868, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x23a6);
        EXPECT(gbc.pc(), 0xc86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc868), 0xcb);
        EXPECT(gbc.readMem(0xc869), 0x55);
        // CB 55 034C
        gbc.setState(0xe080, 0x4e, 0xb220, 0x6a64, 0xaef3, 0xf275, 0x1, 0x1);
        gbc.writeMem(0xe080, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4e);
        EXPECT(gbc.pc(), 0xe082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe080), 0xcb);
        EXPECT(gbc.readMem(0xe081), 0x55);
        // CB 55 034D
        gbc.setState(0x3973, 0x99de, 0xfac0, 0xeec, 0xd645, 0x4c8, 0x0, 0x1);
        gbc.writeMem(0x3973, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x99de);
        EXPECT(gbc.pc(), 0x3975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 034E
        gbc.setState(0x513f, 0x9355, 0xee20, 0x89e4, 0xb466, 0xe2a0, 0x1, 0x0);
        gbc.writeMem(0x513f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9355);
        EXPECT(gbc.pc(), 0x5141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 034F
        gbc.setState(0x1df2, 0xba19, 0x4860, 0xd246, 0x6b52, 0x5f85, 0x0, 0x1);
        gbc.writeMem(0x1df2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xba19);
        EXPECT(gbc.pc(), 0x1df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0350
        gbc.setState(0x438c, 0xe6ff, 0x31f0, 0x8a64, 0x80f4, 0xd43d, 0x1, 0x0);
        gbc.writeMem(0x438c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe6ff);
        EXPECT(gbc.pc(), 0x438e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0351
        gbc.setState(0xe247, 0xfa1b, 0x4380, 0xda7c, 0xd5aa, 0xc0e5, 0x1, 0x0);
        gbc.writeMem(0xe247, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfa1b);
        EXPECT(gbc.pc(), 0xe249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe247), 0xcb);
        EXPECT(gbc.readMem(0xe248), 0x55);
        // CB 55 0352
        gbc.setState(0x96ae, 0x351c, 0xb9e0, 0x623d, 0xd42d, 0xb834, 0x1, 0x0);
        gbc.writeMem(0x96ae, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x351c);
        EXPECT(gbc.pc(), 0x96b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ae), 0xcb);
        EXPECT(gbc.readMem(0x96af), 0x55);
        // CB 55 0353
        gbc.setState(0x125b, 0xd1ff, 0xec00, 0x5b21, 0xafba, 0x448e, 0x0, 0x0);
        gbc.writeMem(0x125b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd1ff);
        EXPECT(gbc.pc(), 0x125d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0354
        gbc.setState(0x7f40, 0x477c, 0x5a50, 0xe94f, 0xeab3, 0xfff4, 0x0, 0x1);
        gbc.writeMem(0x7f40, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x477c);
        EXPECT(gbc.pc(), 0x7f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0355
        gbc.setState(0x2b68, 0x385c, 0x9c90, 0xee4c, 0xf770, 0x2282, 0x0, 0x1);
        gbc.writeMem(0x2b68, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x385c);
        EXPECT(gbc.pc(), 0x2b6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0356
        gbc.setState(0x6d76, 0x4e67, 0x26f0, 0xf7db, 0x1ff0, 0x1e63, 0x0, 0x1);
        gbc.writeMem(0x6d76, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4e67);
        EXPECT(gbc.pc(), 0x6d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0357
        gbc.setState(0x484c, 0xa8b8, 0xaf40, 0xa081, 0x1d28, 0x5212, 0x0, 0x1);
        gbc.writeMem(0x484c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa8b8);
        EXPECT(gbc.pc(), 0x484e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0358
        gbc.setState(0x5575, 0x6da8, 0xf180, 0x90b8, 0x4f1e, 0xa4dd, 0x0, 0x1);
        gbc.writeMem(0x5575, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6da8);
        EXPECT(gbc.pc(), 0x5577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0359
        gbc.setState(0x81fb, 0xc7d2, 0x1140, 0xd1d0, 0x550c, 0x7e3b, 0x1, 0x1);
        gbc.writeMem(0x81fb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc7d2);
        EXPECT(gbc.pc(), 0x81fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fb), 0xcb);
        EXPECT(gbc.readMem(0x81fc), 0x55);
        // CB 55 035A
        gbc.setState(0x7e5f, 0x4ad3, 0xd70, 0x53ea, 0x3981, 0xf1ad, 0x0, 0x0);
        gbc.writeMem(0x7e5f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4ad3);
        EXPECT(gbc.pc(), 0x7e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 035B
        gbc.setState(0x9e30, 0x754b, 0x9970, 0xe7ed, 0x851a, 0x4662, 0x1, 0x0);
        gbc.writeMem(0x9e30, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x754b);
        EXPECT(gbc.pc(), 0x9e32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e30), 0xcb);
        EXPECT(gbc.readMem(0x9e31), 0x55);
        // CB 55 035C
        gbc.setState(0xbc2d, 0x1d36, 0x830, 0xf44b, 0xdab, 0xffdf, 0x1, 0x0);
        gbc.writeMem(0xbc2d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1d36);
        EXPECT(gbc.pc(), 0xbc2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2d), 0xcb);
        EXPECT(gbc.readMem(0xbc2e), 0x55);
        // CB 55 035E
        gbc.setState(0x605c, 0x6227, 0x6460, 0x4ab, 0x8553, 0xe87f, 0x0, 0x0);
        gbc.writeMem(0x605c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6227);
        EXPECT(gbc.pc(), 0x605e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 035F
        gbc.setState(0x7e85, 0x67d9, 0xa6a0, 0x90f8, 0xfb35, 0xaaee, 0x1, 0x1);
        gbc.writeMem(0x7e85, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x67d9);
        EXPECT(gbc.pc(), 0x7e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0360
        gbc.setState(0xc90e, 0x48ad, 0x1d0, 0x9b93, 0x2b68, 0xee3f, 0x1, 0x1);
        gbc.writeMem(0xc90e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x48ad);
        EXPECT(gbc.pc(), 0xc910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90e), 0xcb);
        EXPECT(gbc.readMem(0xc90f), 0x55);
        // CB 55 0361
        gbc.setState(0x9315, 0x7e9f, 0x92a0, 0xc987, 0x937e, 0xe1bc, 0x0, 0x0);
        gbc.writeMem(0x9315, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7e9f);
        EXPECT(gbc.pc(), 0x9317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9315), 0xcb);
        EXPECT(gbc.readMem(0x9316), 0x55);
        // CB 55 0362
        gbc.setState(0xbea1, 0x951b, 0xb600, 0x95ce, 0xb495, 0x436b, 0x0, 0x0);
        gbc.writeMem(0xbea1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x951b);
        EXPECT(gbc.pc(), 0xbea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea1), 0xcb);
        EXPECT(gbc.readMem(0xbea2), 0x55);
        // CB 55 0363
        gbc.setState(0x1445, 0x3a88, 0x1820, 0x1fd1, 0x78c0, 0x9011, 0x0, 0x1);
        gbc.writeMem(0x1445, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3a88);
        EXPECT(gbc.pc(), 0x1447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0365
        gbc.setState(0x103c, 0xf127, 0x1d10, 0xb81, 0xfaf9, 0xe81f, 0x1, 0x0);
        gbc.writeMem(0x103c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf127);
        EXPECT(gbc.pc(), 0x103e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0366
        gbc.setState(0x1abf, 0xf13d, 0xcf10, 0xc640, 0x6e6e, 0xac3, 0x0, 0x0);
        gbc.writeMem(0x1abf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf13d);
        EXPECT(gbc.pc(), 0x1ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0367
        gbc.setState(0xb457, 0xc03a, 0x6b70, 0x6856, 0x609a, 0x83d1, 0x0, 0x0);
        gbc.writeMem(0xb457, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc03a);
        EXPECT(gbc.pc(), 0xb459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb457), 0xcb);
        EXPECT(gbc.readMem(0xb458), 0x55);
        // CB 55 0368
        gbc.setState(0xa83c, 0xe88c, 0x1a80, 0x6321, 0x73c4, 0xf55b, 0x0, 0x0);
        gbc.writeMem(0xa83c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe88c);
        EXPECT(gbc.pc(), 0xa83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa83c), 0xcb);
        EXPECT(gbc.readMem(0xa83d), 0x55);
        // CB 55 0369
        gbc.setState(0x6706, 0x6b59, 0xd000, 0x1546, 0x7ee0, 0x43d3, 0x0, 0x1);
        gbc.writeMem(0x6706, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6b59);
        EXPECT(gbc.pc(), 0x6708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 036A
        gbc.setState(0x2b6d, 0x3871, 0xb060, 0xce15, 0x8cab, 0x2e3a, 0x1, 0x0);
        gbc.writeMem(0x2b6d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3871);
        EXPECT(gbc.pc(), 0x2b6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 036B
        gbc.setState(0x6b1c, 0x67c7, 0x8540, 0xfe8, 0x6b13, 0x8908, 0x1, 0x0);
        gbc.writeMem(0x6b1c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x67c7);
        EXPECT(gbc.pc(), 0x6b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 036D
        gbc.setState(0x4ca9, 0xac0, 0x2260, 0xf9ec, 0x5b06, 0x8ad, 0x0, 0x0);
        gbc.writeMem(0x4ca9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xac0);
        EXPECT(gbc.pc(), 0x4cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 036E
        gbc.setState(0xe177, 0x55ca, 0x1190, 0xa9e5, 0xfc37, 0x18e6, 0x0, 0x0);
        gbc.writeMem(0xe177, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x55ca);
        EXPECT(gbc.pc(), 0xe179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe177), 0xcb);
        EXPECT(gbc.readMem(0xe178), 0x55);
        // CB 55 036F
        gbc.setState(0x3903, 0x29f5, 0xd20, 0xd37, 0xbdea, 0x19c9, 0x1, 0x0);
        gbc.writeMem(0x3903, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x29f5);
        EXPECT(gbc.pc(), 0x3905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0370
        gbc.setState(0x70dc, 0xb185, 0x8760, 0xf87b, 0x7e7b, 0x4cad, 0x1, 0x0);
        gbc.writeMem(0x70dc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb185);
        EXPECT(gbc.pc(), 0x70de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0371
        gbc.setState(0x4c06, 0x7061, 0x7700, 0x6c66, 0x9d53, 0xe0f5, 0x1, 0x1);
        gbc.writeMem(0x4c06, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7061);
        EXPECT(gbc.pc(), 0x4c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0372
        gbc.setState(0x9400, 0xd0ba, 0x1170, 0x985f, 0x1d6d, 0x5e2c, 0x0, 0x0);
        gbc.writeMem(0x9400, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd0ba);
        EXPECT(gbc.pc(), 0x9402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9400), 0xcb);
        EXPECT(gbc.readMem(0x9401), 0x55);
        // CB 55 0373
        gbc.setState(0x84b8, 0x1e8c, 0x9010, 0x2a20, 0xcedb, 0xe6e3, 0x1, 0x0);
        gbc.writeMem(0x84b8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1e8c);
        EXPECT(gbc.pc(), 0x84ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b8), 0xcb);
        EXPECT(gbc.readMem(0x84b9), 0x55);
        // CB 55 0374
        gbc.setState(0x5ae8, 0xf187, 0x2b60, 0x7356, 0x60a4, 0x7296, 0x1, 0x1);
        gbc.writeMem(0x5ae8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf187);
        EXPECT(gbc.pc(), 0x5aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0376
        gbc.setState(0xdf42, 0xc69f, 0x9780, 0x3ef, 0xc78c, 0xace7, 0x1, 0x1);
        gbc.writeMem(0xdf42, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc69f);
        EXPECT(gbc.pc(), 0xdf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf42), 0xcb);
        EXPECT(gbc.readMem(0xdf43), 0x55);
        // CB 55 0377
        gbc.setState(0x7da8, 0xed33, 0xb810, 0x99ba, 0x319a, 0x6743, 0x0, 0x1);
        gbc.writeMem(0x7da8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xed33);
        EXPECT(gbc.pc(), 0x7daa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0378
        gbc.setState(0xd374, 0x430f, 0x2290, 0xa313, 0xc67f, 0x85e6, 0x1, 0x0);
        gbc.writeMem(0xd374, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x430f);
        EXPECT(gbc.pc(), 0xd376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd374), 0xcb);
        EXPECT(gbc.readMem(0xd375), 0x55);
        // CB 55 0379
        gbc.setState(0xcadf, 0xa3bf, 0xd200, 0x727, 0x6d9a, 0x1607, 0x0, 0x1);
        gbc.writeMem(0xcadf, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa3bf);
        EXPECT(gbc.pc(), 0xcae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcadf), 0xcb);
        EXPECT(gbc.readMem(0xcae0), 0x55);
        // CB 55 037B
        gbc.setState(0xb30e, 0x8303, 0x9df0, 0x98d3, 0x1cc6, 0x715c, 0x1, 0x1);
        gbc.writeMem(0xb30e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8303);
        EXPECT(gbc.pc(), 0xb310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb30e), 0xcb);
        EXPECT(gbc.readMem(0xb30f), 0x55);
        // CB 55 037C
        gbc.setState(0xb983, 0xbb80, 0x47c0, 0xc6c, 0x68ef, 0x3700, 0x1, 0x0);
        gbc.writeMem(0xb983, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xbb80);
        EXPECT(gbc.pc(), 0xb985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb983), 0xcb);
        EXPECT(gbc.readMem(0xb984), 0x55);
        // CB 55 037D
        gbc.setState(0x8f7, 0xbde7, 0x9ef0, 0xe395, 0xe8ab, 0x3428, 0x0, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbde7);
        EXPECT(gbc.pc(), 0x8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 037E
        gbc.setState(0xe255, 0x653, 0xf570, 0xe595, 0x125b, 0xacf8, 0x0, 0x0);
        gbc.writeMem(0xe255, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x653);
        EXPECT(gbc.pc(), 0xe257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe255), 0xcb);
        EXPECT(gbc.readMem(0xe256), 0x55);
        // CB 55 037F
        gbc.setState(0xb472, 0x343d, 0xdba0, 0x4a74, 0x5455, 0x1570, 0x1, 0x1);
        gbc.writeMem(0xb472, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x343d);
        EXPECT(gbc.pc(), 0xb474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb472), 0xcb);
        EXPECT(gbc.readMem(0xb473), 0x55);
        // CB 55 0380
        gbc.setState(0x9389, 0x10c0, 0xc6b0, 0x5dd, 0x3bed, 0xe301, 0x0, 0x0);
        gbc.writeMem(0x9389, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x10c0);
        EXPECT(gbc.pc(), 0x938b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9389), 0xcb);
        EXPECT(gbc.readMem(0x938a), 0x55);
        // CB 55 0381
        gbc.setState(0x8906, 0x9fe2, 0x87c0, 0x966d, 0x6cca, 0xe8df, 0x1, 0x0);
        gbc.writeMem(0x8906, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9fe2);
        EXPECT(gbc.pc(), 0x8908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8906), 0xcb);
        EXPECT(gbc.readMem(0x8907), 0x55);
        // CB 55 0382
        gbc.setState(0xeef3, 0xae64, 0x7150, 0x8529, 0xce42, 0xf84, 0x0, 0x1);
        gbc.writeMem(0xeef3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xae64);
        EXPECT(gbc.pc(), 0xeef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef3), 0xcb);
        EXPECT(gbc.readMem(0xeef4), 0x55);
        // CB 55 0383
        gbc.setState(0xe5b8, 0x245f, 0xb6d0, 0xe184, 0xb48e, 0x4d3c, 0x0, 0x0);
        gbc.writeMem(0xe5b8, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x245f);
        EXPECT(gbc.pc(), 0xe5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b8), 0xcb);
        EXPECT(gbc.readMem(0xe5b9), 0x55);
        // CB 55 0384
        gbc.setState(0x34ab, 0xb6ce, 0x3b0, 0xb892, 0x55ff, 0x6529, 0x1, 0x1);
        gbc.writeMem(0x34ab, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb6ce);
        EXPECT(gbc.pc(), 0x34ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0387
        gbc.setState(0xdefc, 0x2c84, 0x2320, 0xbad8, 0xafde, 0x2fe4, 0x0, 0x0);
        gbc.writeMem(0xdefc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2c84);
        EXPECT(gbc.pc(), 0xdefe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdefc), 0xcb);
        EXPECT(gbc.readMem(0xdefd), 0x55);
        // CB 55 0388
        gbc.setState(0x7f95, 0xa02d, 0x77f0, 0x5387, 0x10cf, 0xbe31, 0x1, 0x1);
        gbc.writeMem(0x7f95, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa02d);
        EXPECT(gbc.pc(), 0x7f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 038A
        gbc.setState(0x9dd2, 0xb096, 0x19f0, 0xc431, 0xf77c, 0x8bc5, 0x1, 0x1);
        gbc.writeMem(0x9dd2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb096);
        EXPECT(gbc.pc(), 0x9dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd2), 0xcb);
        EXPECT(gbc.readMem(0x9dd3), 0x55);
        // CB 55 038B
        gbc.setState(0x3dbd, 0x5968, 0xc150, 0x2903, 0x188f, 0xe46f, 0x0, 0x1);
        gbc.writeMem(0x3dbd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5968);
        EXPECT(gbc.pc(), 0x3dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 038C
        gbc.setState(0xdc86, 0xccf5, 0x1130, 0x3801, 0x2799, 0xd2c7, 0x1, 0x1);
        gbc.writeMem(0xdc86, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xccf5);
        EXPECT(gbc.pc(), 0xdc88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc86), 0xcb);
        EXPECT(gbc.readMem(0xdc87), 0x55);
        // CB 55 038D
        gbc.setState(0x284e, 0x7e20, 0x7af0, 0xdb98, 0x864, 0xc5b6, 0x1, 0x0);
        gbc.writeMem(0x284e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7e20);
        EXPECT(gbc.pc(), 0x2850);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 038E
        gbc.setState(0x4171, 0x2a5a, 0x7d60, 0x6ec7, 0x19b9, 0xa008, 0x1, 0x0);
        gbc.writeMem(0x4171, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2a5a);
        EXPECT(gbc.pc(), 0x4173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 038F
        gbc.setState(0x8080, 0x1963, 0x84c0, 0xa464, 0xb60f, 0xd6d8, 0x0, 0x1);
        gbc.writeMem(0x8080, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1963);
        EXPECT(gbc.pc(), 0x8082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8080), 0xcb);
        EXPECT(gbc.readMem(0x8081), 0x55);
        // CB 55 0390
        gbc.setState(0xc68, 0x1775, 0x52a0, 0x3d05, 0xb1ef, 0x2992, 0x1, 0x0);
        gbc.writeMem(0xc68, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1775);
        EXPECT(gbc.pc(), 0xc6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0391
        gbc.setState(0xdb79, 0x3fcf, 0x6890, 0x8f28, 0x1f83, 0xf439, 0x0, 0x0);
        gbc.writeMem(0xdb79, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3fcf);
        EXPECT(gbc.pc(), 0xdb7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb79), 0xcb);
        EXPECT(gbc.readMem(0xdb7a), 0x55);
        // CB 55 0392
        gbc.setState(0xdee4, 0xdf1a, 0xd180, 0x749a, 0x57fe, 0x38d4, 0x0, 0x1);
        gbc.writeMem(0xdee4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdf1a);
        EXPECT(gbc.pc(), 0xdee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee4), 0xcb);
        EXPECT(gbc.readMem(0xdee5), 0x55);
        // CB 55 0393
        gbc.setState(0x3ab, 0xd99c, 0xe80, 0x539c, 0xa413, 0xa136, 0x0, 0x1);
        gbc.writeMem(0x3ab, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd99c);
        EXPECT(gbc.pc(), 0x3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 0394
        gbc.setState(0x4438, 0x59eb, 0x8210, 0x4ced, 0x8c95, 0xfdc9, 0x1, 0x1);
        gbc.writeMem(0x4438, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x59eb);
        EXPECT(gbc.pc(), 0x443a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0395
        gbc.setState(0x7fbc, 0xd4d1, 0xacd0, 0x1a93, 0xffb5, 0xcf46, 0x1, 0x1);
        gbc.writeMem(0x7fbc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd4d1);
        EXPECT(gbc.pc(), 0x7fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0396
        gbc.setState(0xc815, 0xba8a, 0x6a70, 0x6f1, 0xd9e, 0xeb3f, 0x0, 0x1);
        gbc.writeMem(0xc815, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xba8a);
        EXPECT(gbc.pc(), 0xc817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc815), 0xcb);
        EXPECT(gbc.readMem(0xc816), 0x55);
        // CB 55 0397
        gbc.setState(0x1bc0, 0x2356, 0x1230, 0x7b8f, 0xc5a, 0xa779, 0x1, 0x1);
        gbc.writeMem(0x1bc0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2356);
        EXPECT(gbc.pc(), 0x1bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0398
        gbc.setState(0xc9e, 0xbfb2, 0x9030, 0x946a, 0x46, 0xfb01, 0x0, 0x0);
        gbc.writeMem(0xc9e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbfb2);
        EXPECT(gbc.pc(), 0xca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 0399
        gbc.setState(0x3f7e, 0x3032, 0x56a0, 0xba9c, 0x2ca2, 0xd132, 0x1, 0x1);
        gbc.writeMem(0x3f7e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3032);
        EXPECT(gbc.pc(), 0x3f80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 039A
        gbc.setState(0x3288, 0xb8b2, 0xfda0, 0xf9e9, 0x2f77, 0x144, 0x1, 0x0);
        gbc.writeMem(0x3288, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb8b2);
        EXPECT(gbc.pc(), 0x328a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 039B
        gbc.setState(0x93c2, 0x9743, 0x8ab0, 0x9ffe, 0xae4c, 0xa353, 0x1, 0x1);
        gbc.writeMem(0x93c2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9743);
        EXPECT(gbc.pc(), 0x93c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c2), 0xcb);
        EXPECT(gbc.readMem(0x93c3), 0x55);
        // CB 55 039C
        gbc.setState(0xde1, 0xfb44, 0x6c00, 0xd2fe, 0x841f, 0xd3ab, 0x1, 0x0);
        gbc.writeMem(0xde1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfb44);
        EXPECT(gbc.pc(), 0xde3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 039D
        gbc.setState(0x2f6b, 0x5500, 0xe090, 0xe894, 0x12ad, 0x17e6, 0x1, 0x0);
        gbc.writeMem(0x2f6b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5500);
        EXPECT(gbc.pc(), 0x2f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 039E
        gbc.setState(0x571a, 0x3ab3, 0xb40, 0xac5f, 0xcd39, 0x696c, 0x1, 0x1);
        gbc.writeMem(0x571a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3ab3);
        EXPECT(gbc.pc(), 0x571c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 039F
        gbc.setState(0x90be, 0x20f0, 0x17f0, 0x8821, 0x596c, 0xd458, 0x1, 0x0);
        gbc.writeMem(0x90be, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x20f0);
        EXPECT(gbc.pc(), 0x90c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90be), 0xcb);
        EXPECT(gbc.readMem(0x90bf), 0x55);
        // CB 55 03A0
        gbc.setState(0x3d95, 0xd4ce, 0xb0b0, 0xc241, 0xb39, 0x5ba0, 0x1, 0x0);
        gbc.writeMem(0x3d95, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd4ce);
        EXPECT(gbc.pc(), 0x3d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03A1
        gbc.setState(0x7d84, 0x1f2c, 0xf900, 0xa260, 0x671b, 0x9ca1, 0x1, 0x0);
        gbc.writeMem(0x7d84, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1f2c);
        EXPECT(gbc.pc(), 0x7d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03A2
        gbc.setState(0x24e3, 0x6c64, 0x1510, 0xf870, 0x6095, 0x74fb, 0x1, 0x0);
        gbc.writeMem(0x24e3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6c64);
        EXPECT(gbc.pc(), 0x24e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03A3
        gbc.setState(0xceb4, 0xa0ae, 0x3830, 0x985e, 0x27f5, 0x6a32, 0x1, 0x1);
        gbc.writeMem(0xceb4, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa0ae);
        EXPECT(gbc.pc(), 0xceb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb4), 0xcb);
        EXPECT(gbc.readMem(0xceb5), 0x55);
        // CB 55 03A4
        gbc.setState(0xda09, 0xc220, 0x74b0, 0x75d0, 0x5400, 0xe265, 0x1, 0x1);
        gbc.writeMem(0xda09, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0xda0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda09), 0xcb);
        EXPECT(gbc.readMem(0xda0a), 0x55);
        // CB 55 03A5
        gbc.setState(0x3b1d, 0x58b6, 0xd8e0, 0xd4f, 0x10cd, 0x9b73, 0x1, 0x0);
        gbc.writeMem(0x3b1d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x58b6);
        EXPECT(gbc.pc(), 0x3b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03A7
        gbc.setState(0xd5ae, 0xa7ac, 0x77c0, 0x25e9, 0x900d, 0xe57, 0x1, 0x0);
        gbc.writeMem(0xd5ae, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa7ac);
        EXPECT(gbc.pc(), 0xd5b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ae), 0xcb);
        EXPECT(gbc.readMem(0xd5af), 0x55);
        // CB 55 03A8
        gbc.setState(0xe25a, 0x51f6, 0x2230, 0x513a, 0x668b, 0x9f24, 0x0, 0x1);
        gbc.writeMem(0xe25a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x51f6);
        EXPECT(gbc.pc(), 0xe25c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25a), 0xcb);
        EXPECT(gbc.readMem(0xe25b), 0x55);
        // CB 55 03A9
        gbc.setState(0x42cc, 0xa043, 0xbbf0, 0xe7ab, 0x2fb1, 0xc271, 0x1, 0x0);
        gbc.writeMem(0x42cc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa043);
        EXPECT(gbc.pc(), 0x42ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03AA
        gbc.setState(0xa8d3, 0x9f51, 0x6ca0, 0x42fd, 0xc667, 0x9510, 0x1, 0x0);
        gbc.writeMem(0xa8d3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9f51);
        EXPECT(gbc.pc(), 0xa8d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d3), 0xcb);
        EXPECT(gbc.readMem(0xa8d4), 0x55);
        // CB 55 03AB
        gbc.setState(0xe3ed, 0xc50b, 0xa860, 0xc6f6, 0xaa1, 0xf222, 0x1, 0x1);
        gbc.writeMem(0xe3ed, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc50b);
        EXPECT(gbc.pc(), 0xe3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ed), 0xcb);
        EXPECT(gbc.readMem(0xe3ee), 0x55);
        // CB 55 03AC
        gbc.setState(0x84e3, 0x555a, 0xf490, 0x141, 0x34e0, 0xed7e, 0x0, 0x1);
        gbc.writeMem(0x84e3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x555a);
        EXPECT(gbc.pc(), 0x84e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e3), 0xcb);
        EXPECT(gbc.readMem(0x84e4), 0x55);
        // CB 55 03AD
        gbc.setState(0x268f, 0xdc5a, 0x8df0, 0x6975, 0xdfc1, 0x14ba, 0x0, 0x1);
        gbc.writeMem(0x268f, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdc5a);
        EXPECT(gbc.pc(), 0x2691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03AE
        gbc.setState(0xe05b, 0x4d64, 0x6eb0, 0xa95, 0x701a, 0x62ce, 0x1, 0x0);
        gbc.writeMem(0xe05b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4d64);
        EXPECT(gbc.pc(), 0xe05d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05b), 0xcb);
        EXPECT(gbc.readMem(0xe05c), 0x55);
        // CB 55 03AF
        gbc.setState(0x5b56, 0x84f, 0x45e0, 0x81c2, 0x6b1e, 0xde08, 0x0, 0x0);
        gbc.writeMem(0x5b56, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x84f);
        EXPECT(gbc.pc(), 0x5b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03B0
        gbc.setState(0x62d2, 0x73c3, 0xfe10, 0xc14c, 0x921f, 0x6a78, 0x0, 0x0);
        gbc.writeMem(0x62d2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x73c3);
        EXPECT(gbc.pc(), 0x62d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03B1
        gbc.setState(0x54b1, 0xaad6, 0x7cc0, 0x6045, 0xe2d2, 0xce00, 0x0, 0x1);
        gbc.writeMem(0x54b1, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xaad6);
        EXPECT(gbc.pc(), 0x54b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03B2
        gbc.setState(0xc764, 0x51f5, 0xf5e0, 0xf3e5, 0x7f1f, 0x726a, 0x1, 0x0);
        gbc.writeMem(0xc764, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x51f5);
        EXPECT(gbc.pc(), 0xc766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc764), 0xcb);
        EXPECT(gbc.readMem(0xc765), 0x55);
        // CB 55 03B3
        gbc.setState(0xcd09, 0x4d8c, 0xba70, 0x74b3, 0x6892, 0xbd0d, 0x1, 0x1);
        gbc.writeMem(0xcd09, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4d8c);
        EXPECT(gbc.pc(), 0xcd0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd09), 0xcb);
        EXPECT(gbc.readMem(0xcd0a), 0x55);
        // CB 55 03B4
        gbc.setState(0xc965, 0x302, 0x3df0, 0x7e1d, 0xd801, 0x77a3, 0x0, 0x0);
        gbc.writeMem(0xc965, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x302);
        EXPECT(gbc.pc(), 0xc967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc965), 0xcb);
        EXPECT(gbc.readMem(0xc966), 0x55);
        // CB 55 03B5
        gbc.setState(0xc1c3, 0xeffd, 0xbd30, 0x6da3, 0x4c12, 0x6e52, 0x1, 0x0);
        gbc.writeMem(0xc1c3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xeffd);
        EXPECT(gbc.pc(), 0xc1c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c3), 0xcb);
        EXPECT(gbc.readMem(0xc1c4), 0x55);
        // CB 55 03B6
        gbc.setState(0x826d, 0xa6be, 0xa780, 0x4f9f, 0xc8f4, 0x394c, 0x0, 0x0);
        gbc.writeMem(0x826d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa6be);
        EXPECT(gbc.pc(), 0x826f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826d), 0xcb);
        EXPECT(gbc.readMem(0x826e), 0x55);
        // CB 55 03B7
        gbc.setState(0xee6, 0x8cf9, 0x3280, 0xcc5f, 0x3c89, 0xc900, 0x0, 0x0);
        gbc.writeMem(0xee6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8cf9);
        EXPECT(gbc.pc(), 0xee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03B8
        gbc.setState(0xbff2, 0xc30d, 0x3d40, 0x4989, 0x3c99, 0xa870, 0x1, 0x1);
        gbc.writeMem(0xbff2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc30d);
        EXPECT(gbc.pc(), 0xbff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff2), 0xcb);
        EXPECT(gbc.readMem(0xbff3), 0x55);
        // CB 55 03BA
        gbc.setState(0x412a, 0x16f4, 0x61b0, 0x46e2, 0x9fd6, 0x9be, 0x1, 0x0);
        gbc.writeMem(0x412a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x16f4);
        EXPECT(gbc.pc(), 0x412c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03BB
        gbc.setState(0xe8fc, 0x4544, 0x4a40, 0x2102, 0x93f0, 0x42a9, 0x1, 0x0);
        gbc.writeMem(0xe8fc, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4544);
        EXPECT(gbc.pc(), 0xe8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fc), 0xcb);
        EXPECT(gbc.readMem(0xe8fd), 0x55);
        // CB 55 03BC
        gbc.setState(0xbd55, 0x3685, 0xcc90, 0xdb9b, 0x8ce9, 0x172f, 0x1, 0x0);
        gbc.writeMem(0xbd55, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3685);
        EXPECT(gbc.pc(), 0xbd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd55), 0xcb);
        EXPECT(gbc.readMem(0xbd56), 0x55);
        // CB 55 03BD
        gbc.setState(0x8f61, 0xb0fb, 0x8390, 0x53a0, 0x2cf9, 0xd780, 0x1, 0x1);
        gbc.writeMem(0x8f61, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb0fb);
        EXPECT(gbc.pc(), 0x8f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f61), 0xcb);
        EXPECT(gbc.readMem(0x8f62), 0x55);
        // CB 55 03BE
        gbc.setState(0x316a, 0x5b2b, 0xa1e0, 0xb8a2, 0xb6c7, 0x70f3, 0x1, 0x1);
        gbc.writeMem(0x316a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5b2b);
        EXPECT(gbc.pc(), 0x316c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03BF
        gbc.setState(0xb163, 0xf9f8, 0x4fd0, 0xb98a, 0xcb0e, 0x815f, 0x0, 0x0);
        gbc.writeMem(0xb163, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf9f8);
        EXPECT(gbc.pc(), 0xb165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb163), 0xcb);
        EXPECT(gbc.readMem(0xb164), 0x55);
        // CB 55 03C0
        gbc.setState(0x8296, 0x2798, 0xe840, 0x77de, 0x8390, 0x16c1, 0x1, 0x1);
        gbc.writeMem(0x8296, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2798);
        EXPECT(gbc.pc(), 0x8298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8296), 0xcb);
        EXPECT(gbc.readMem(0x8297), 0x55);
        // CB 55 03C1
        gbc.setState(0x1029, 0xa2f3, 0xe2e0, 0xa946, 0x7ffb, 0xb4eb, 0x0, 0x0);
        gbc.writeMem(0x1029, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa2f3);
        EXPECT(gbc.pc(), 0x102b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03C2
        gbc.setState(0xd5b9, 0x70cc, 0xc840, 0xa510, 0xb47b, 0xac17, 0x0, 0x1);
        gbc.writeMem(0xd5b9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x70cc);
        EXPECT(gbc.pc(), 0xd5bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b9), 0xcb);
        EXPECT(gbc.readMem(0xd5ba), 0x55);
        // CB 55 03C3
        gbc.setState(0x8191, 0xcdfe, 0xca90, 0x5664, 0x96c5, 0xa7d7, 0x1, 0x1);
        gbc.writeMem(0x8191, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xcdfe);
        EXPECT(gbc.pc(), 0x8193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8191), 0xcb);
        EXPECT(gbc.readMem(0x8192), 0x55);
        // CB 55 03C4
        gbc.setState(0x4669, 0x7400, 0x9a80, 0x534f, 0x8ef7, 0xe31e, 0x1, 0x1);
        gbc.writeMem(0x4669, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7400);
        EXPECT(gbc.pc(), 0x466b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03C5
        gbc.setState(0xaa65, 0x1e4f, 0xf4f0, 0xd8ef, 0x4b89, 0xa5ad, 0x1, 0x0);
        gbc.writeMem(0xaa65, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1e4f);
        EXPECT(gbc.pc(), 0xaa67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa65), 0xcb);
        EXPECT(gbc.readMem(0xaa66), 0x55);
        // CB 55 03C6
        gbc.setState(0x2435, 0x6403, 0x4ec0, 0xb4, 0xc1ff, 0xcb76, 0x0, 0x1);
        gbc.writeMem(0x2435, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6403);
        EXPECT(gbc.pc(), 0x2437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03C7
        gbc.setState(0x7021, 0x584d, 0x1a00, 0x876a, 0x8d30, 0x2f9c, 0x0, 0x1);
        gbc.writeMem(0x7021, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x584d);
        EXPECT(gbc.pc(), 0x7023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03C8
        gbc.setState(0x7787, 0xc406, 0xb250, 0x9fc2, 0xfb07, 0x5531, 0x0, 0x1);
        gbc.writeMem(0x7787, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc406);
        EXPECT(gbc.pc(), 0x7789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03C9
        gbc.setState(0x620a, 0xf291, 0xbba0, 0xf14, 0x2fa3, 0xa11d, 0x1, 0x0);
        gbc.writeMem(0x620a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf291);
        EXPECT(gbc.pc(), 0x620c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03CA
        gbc.setState(0x3338, 0x627b, 0x9350, 0xddd9, 0xa30d, 0xe06e, 0x1, 0x0);
        gbc.writeMem(0x3338, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x627b);
        EXPECT(gbc.pc(), 0x333a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03CB
        gbc.setState(0x2ed9, 0xf898, 0xc290, 0x8628, 0x8d9b, 0x52fe, 0x0, 0x1);
        gbc.writeMem(0x2ed9, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf898);
        EXPECT(gbc.pc(), 0x2edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03CC
        gbc.setState(0x8d73, 0x6eed, 0xe7a0, 0xfd18, 0xbb6, 0xd06c, 0x1, 0x0);
        gbc.writeMem(0x8d73, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6eed);
        EXPECT(gbc.pc(), 0x8d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d73), 0xcb);
        EXPECT(gbc.readMem(0x8d74), 0x55);
        // CB 55 03CD
        gbc.setState(0x4abe, 0xd2b6, 0xb3e0, 0x27a4, 0xc441, 0xc6f7, 0x1, 0x0);
        gbc.writeMem(0x4abe, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd2b6);
        EXPECT(gbc.pc(), 0x4ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03CE
        gbc.setState(0x3dfd, 0xe779, 0xe730, 0xa357, 0x4bf, 0x8570, 0x0, 0x1);
        gbc.writeMem(0x3dfd, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe779);
        EXPECT(gbc.pc(), 0x3dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03CF
        gbc.setState(0x4b48, 0x64a, 0xa670, 0x206, 0xf67e, 0xc869, 0x1, 0x1);
        gbc.writeMem(0x4b48, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x64a);
        EXPECT(gbc.pc(), 0x4b4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03D0
        gbc.setState(0xc9f2, 0xc06b, 0xc50, 0x419e, 0xb2ec, 0x83d4, 0x0, 0x1);
        gbc.writeMem(0xc9f2, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc06b);
        EXPECT(gbc.pc(), 0xc9f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f2), 0xcb);
        EXPECT(gbc.readMem(0xc9f3), 0x55);
        // CB 55 03D1
        gbc.setState(0x8960, 0xf7ac, 0xb8b0, 0x7da5, 0xb757, 0xdeea, 0x0, 0x0);
        gbc.writeMem(0x8960, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf7ac);
        EXPECT(gbc.pc(), 0x8962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8960), 0xcb);
        EXPECT(gbc.readMem(0x8961), 0x55);
        // CB 55 03D2
        gbc.setState(0x4785, 0x17ba, 0x68d0, 0xc49f, 0xcf27, 0x393a, 0x0, 0x0);
        gbc.writeMem(0x4785, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x17ba);
        EXPECT(gbc.pc(), 0x4787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03D3
        gbc.setState(0xa07b, 0x3a93, 0x3a0, 0xb5c, 0xce90, 0x24da, 0x1, 0x0);
        gbc.writeMem(0xa07b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3a93);
        EXPECT(gbc.pc(), 0xa07d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07b), 0xcb);
        EXPECT(gbc.readMem(0xa07c), 0x55);
        // CB 55 03D4
        gbc.setState(0xea1d, 0xe488, 0xf500, 0x35a8, 0x12a0, 0xd34c, 0x1, 0x0);
        gbc.writeMem(0xea1d, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe488);
        EXPECT(gbc.pc(), 0xea1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea1d), 0xcb);
        EXPECT(gbc.readMem(0xea1e), 0x55);
        // CB 55 03D5
        gbc.setState(0x7b6b, 0x6e7d, 0xd1c0, 0x6723, 0x6b04, 0xe0e5, 0x0, 0x1);
        gbc.writeMem(0x7b6b, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6e7d);
        EXPECT(gbc.pc(), 0x7b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03D6
        gbc.setState(0x76f6, 0x5d6c, 0x9200, 0x9612, 0x245c, 0x4c7e, 0x0, 0x0);
        gbc.writeMem(0x76f6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5d6c);
        EXPECT(gbc.pc(), 0x76f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03D7
        gbc.setState(0xc4b3, 0x8a3a, 0x5ee0, 0x2e5d, 0xcef4, 0x3924, 0x0, 0x0);
        gbc.writeMem(0xc4b3, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8a3a);
        EXPECT(gbc.pc(), 0xc4b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b3), 0xcb);
        EXPECT(gbc.readMem(0xc4b4), 0x55);
        // CB 55 03D8
        gbc.setState(0x3f57, 0x389b, 0x3440, 0xdeae, 0x3476, 0xb1e1, 0x0, 0x0);
        gbc.writeMem(0x3f57, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x389b);
        EXPECT(gbc.pc(), 0x3f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03D9
        gbc.setState(0x15fb, 0xa3, 0xa250, 0x49ab, 0x3647, 0x2170, 0x0, 0x0);
        gbc.writeMem(0x15fb, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa3);
        EXPECT(gbc.pc(), 0x15fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03DA
        gbc.setState(0x4aa0, 0x1c18, 0x8dc0, 0x2f01, 0x4c95, 0xaea0, 0x0, 0x1);
        gbc.writeMem(0x4aa0, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1c18);
        EXPECT(gbc.pc(), 0x4aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03DB
        gbc.setState(0x79d6, 0x4e2c, 0x8650, 0x7b4, 0x1c25, 0xf9db, 0x0, 0x1);
        gbc.writeMem(0x79d6, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4e2c);
        EXPECT(gbc.pc(), 0x79d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03DC
        gbc.setState(0xbfe, 0xfed7, 0x300, 0x3b78, 0xb8c4, 0x9a03, 0x1, 0x1);
        gbc.writeMem(0xbfe, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfed7);
        EXPECT(gbc.pc(), 0xc00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03DE
        gbc.setState(0x6e91, 0x9b7c, 0x2330, 0xaf38, 0xd420, 0xe130, 0x0, 0x1);
        gbc.writeMem(0x6e91, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9b7c);
        EXPECT(gbc.pc(), 0x6e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03DF
        gbc.setState(0x4f7, 0x28f3, 0x24d0, 0xab08, 0xc254, 0x7b72, 0x0, 0x0);
        gbc.writeMem(0x4f7, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x28f3);
        EXPECT(gbc.pc(), 0x4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 55 03E0
        gbc.setState(0x5c0e, 0xed4a, 0x67c0, 0x8c1, 0xd2c9, 0x815d, 0x0, 0x1);
        gbc.writeMem(0x5c0e, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xed4a);
        EXPECT(gbc.pc(), 0x5c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03E1
        gbc.setState(0xb34a, 0xe458, 0x4430, 0x7fb5, 0x11b6, 0x94, 0x1, 0x0);
        gbc.writeMem(0xb34a, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe458);
        EXPECT(gbc.pc(), 0xb34c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb34a), 0xcb);
        EXPECT(gbc.readMem(0xb34b), 0x55);
        // CB 55 03E2
        gbc.setState(0xcbca, 0x9bb1, 0xb700, 0x8f4d, 0x8733, 0xfc36, 0x1, 0x0);
        gbc.writeMem(0xcbca, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9bb1);
        EXPECT(gbc.pc(), 0xcbcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbca), 0xcb);
        EXPECT(gbc.readMem(0xcbcb), 0x55);
        // CB 55 03E3
        gbc.setState(0x2709, 0x9a55, 0x7360, 0xdd89, 0xa091, 0x837, 0x1, 0x1);
        gbc.writeMem(0x2709, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9a55);
        EXPECT(gbc.pc(), 0x270b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 55 03E4
        gbc.setState(0xd49c, 0x6eee, 0x7310, 0x1ee0, 0xf14b, 0x288f, 0x1, 0x0);
        gbc.writeMem(0xd49c, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6eee);
        EXPECT(gbc.pc(), 0xd49e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49c), 0xcb);
        EXPECT(gbc.readMem(0xd49d), 0x55);
        // CB 55 03E5
        gbc.setState(0x8f59, 0x93dd, 0xcf00, 0x5010, 0x4938, 0xa590, 0x1, 0x1);
        gbc.writeMem(0x8f59, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x93dd);
        EXPECT(gbc.pc(), 0x8f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f59), 0xcb);
        EXPECT(gbc.readMem(0x8f5a), 0x55);
        // CB 55 03E6
        gbc.setState(0xc2ae, 0x82ef, 0xcc10, 0x7374, 0x3e0d, 0x8b1c, 0x1, 0x1);
        gbc.writeMem(0xc2ae, { 0xcb, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x82ef);
        EXPECT(gbc.pc(), 0xc2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ae), 0xcb);
        EXPECT(gbc.readMem(0xc2af), 0x55);
    }
