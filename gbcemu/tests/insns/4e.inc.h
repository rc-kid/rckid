    TEST(gbcemu, opcode_4e) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 4E 0000
        gbc.setState(0x358a, 0x844a, 0x7da0, 0x88ce, 0xb225, 0x699a, 0x0, 0x1);
        gbc.writeMem(0x358a, { 0x4e });
        gbc.writeMem(0x699a, { 0xc1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0x358b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0001
        gbc.setState(0xb757, 0xf220, 0x5180, 0x92c3, 0xe7dc, 0xd10, 0x1, 0x1);
        gbc.writeMem(0xd10, { 0x93 });
        gbc.writeMem(0xb757, { 0x4e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf220, gbc.sp());
        EXPECT(0xb758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb757));
        // 4E 0002
        gbc.setState(0x4658, 0x8e22, 0xb4b0, 0x1347, 0x5f2, 0xa2d9, 0x0, 0x0);
        gbc.writeMem(0x4658, { 0x4e });
        gbc.writeMem(0xa2d9, { 0x6f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8e22, gbc.sp());
        EXPECT(0x4659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa2d9));
        // 4E 0003
        gbc.setState(0x53a5, 0x1a3e, 0x260, 0xa1a9, 0xdf15, 0xaacc, 0x1, 0x0);
        gbc.writeMem(0x53a5, { 0x4e });
        gbc.writeMem(0xaacc, { 0x41 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1a3e, gbc.sp());
        EXPECT(0x53a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xaacc));
        // 4E 0004
        gbc.setState(0x53a5, 0xb7ca, 0x35b0, 0xbfa2, 0x7bf4, 0xbb48, 0x1, 0x1);
        gbc.writeMem(0x53a5, { 0x4e });
        gbc.writeMem(0xbb48, { 0x64 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb7ca, gbc.sp());
        EXPECT(0x53a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbb48));
        // 4E 0005
        gbc.setState(0xd299, 0x1525, 0xb200, 0xd990, 0x97cf, 0x8509, 0x1, 0x0);
        gbc.writeMem(0x8509, { 0xa4 });
        gbc.writeMem(0xd299, { 0x4e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1525, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8509));
        EXPECT(0x4e, gbc.readMem(0xd299));
        // 4E 0006
        gbc.setState(0x91ef, 0xd828, 0xea50, 0x5fb3, 0xc7fa, 0x435, 0x0, 0x0);
        gbc.writeMem(0x435, { 0x71 });
        gbc.writeMem(0x91ef, { 0x4e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd828, gbc.sp());
        EXPECT(0x91f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x91ef));
        // 4E 0007
        gbc.setState(0x1664, 0x174f, 0xdcd0, 0xc01f, 0x88df, 0xa549, 0x1, 0x1);
        gbc.writeMem(0x1664, { 0x4e });
        gbc.writeMem(0xa549, { 0x69 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x174f, gbc.sp());
        EXPECT(0x1665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa549));
        // 4E 0008
        gbc.setState(0x4fe4, 0x5fb0, 0x8a90, 0xedee, 0xf134, 0x8f03, 0x1, 0x1);
        gbc.writeMem(0x4fe4, { 0x4e });
        gbc.writeMem(0x8f03, { 0x92 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5fb0, gbc.sp());
        EXPECT(0x4fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8f03));
        // 4E 0009
        gbc.setState(0xcac4, 0x1482, 0xcfe0, 0x873c, 0x5c6b, 0xe271, 0x0, 0x1);
        gbc.writeMem(0xcac4, { 0x4e });
        gbc.writeMem(0xe271, { 0x79 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1482, gbc.sp());
        EXPECT(0xcac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcac4));
        EXPECT(0x79, gbc.readMem(0xe271));
        // 4E 000A
        gbc.setState(0x99d9, 0x9d11, 0xb500, 0xae3c, 0x3571, 0x5ba6, 0x1, 0x0);
        gbc.writeMem(0x5ba6, { 0x6f });
        gbc.writeMem(0x99d9, { 0x4e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9d11, gbc.sp());
        EXPECT(0x99da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x99d9));
        // 4E 000B
        gbc.setState(0x6041, 0x14b, 0x8e10, 0x9348, 0x4fd3, 0x1644, 0x0, 0x1);
        gbc.writeMem(0x1644, { 0xd9 });
        gbc.writeMem(0x6041, { 0x4e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x14b, gbc.sp());
        EXPECT(0x6042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 000C
        gbc.setState(0x89b0, 0x8c70, 0x7570, 0xe1cd, 0x30c1, 0xe911, 0x1, 0x0);
        gbc.writeMem(0x89b0, { 0x4e });
        gbc.writeMem(0xe911, { 0x5a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8c70, gbc.sp());
        EXPECT(0x89b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x89b0));
        EXPECT(0x5a, gbc.readMem(0xe911));
        // 4E 000D
        gbc.setState(0xcaf4, 0xdb89, 0x5620, 0x71b, 0x7165, 0x250a, 0x1, 0x0);
        gbc.writeMem(0x250a, { 0x55 });
        gbc.writeMem(0xcaf4, { 0x4e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdb89, gbc.sp());
        EXPECT(0xcaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcaf4));
        // 4E 000E
        gbc.setState(0xa9af, 0x5aab, 0xe930, 0x5980, 0x57ae, 0x7cc3, 0x1, 0x0);
        gbc.writeMem(0x7cc3, { 0xe4 });
        gbc.writeMem(0xa9af, { 0x4e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5aab, gbc.sp());
        EXPECT(0xa9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa9af));
        // 4E 000F
        gbc.setState(0x58e0, 0xb10, 0xec60, 0xf697, 0xa453, 0xd798, 0x0, 0x1);
        gbc.writeMem(0x58e0, { 0x4e });
        gbc.writeMem(0xd798, { 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0x58e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd798));
        // 4E 0010
        gbc.setState(0x40f0, 0x44bf, 0x59e0, 0xde90, 0xb70a, 0xdb66, 0x0, 0x1);
        gbc.writeMem(0x40f0, { 0x4e });
        gbc.writeMem(0xdb66, { 0xd0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x44bf, gbc.sp());
        EXPECT(0x40f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdb66));
        // 4E 0011
        gbc.setState(0xe9e3, 0x1513, 0x86c0, 0x8d7a, 0xc0b5, 0x9139, 0x0, 0x1);
        gbc.writeMem(0x9139, { 0x21 });
        gbc.writeMem(0xe9e3, { 0x4e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1513, gbc.sp());
        EXPECT(0xe9e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9139));
        EXPECT(0x4e, gbc.readMem(0xe9e3));
        // 4E 0012
        gbc.setState(0x32af, 0x900, 0xb600, 0x5304, 0xc017, 0xc82a, 0x1, 0x0);
        gbc.writeMem(0x32af, { 0x4e });
        gbc.writeMem(0xc82a, { 0xe5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x900, gbc.sp());
        EXPECT(0x32b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc82a));
        // 4E 0013
        gbc.setState(0xda2d, 0xe4ee, 0x1b70, 0x8955, 0x8bb6, 0xf861, 0x0, 0x1);
        gbc.writeMem(0xda2d, { 0x4e });
        gbc.writeMem(0xf861, { 0xba });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe4ee, gbc.sp());
        EXPECT(0xda2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xda2d));
        EXPECT(0xba, gbc.readMem(0xf861));
        // 4E 0014
        gbc.setState(0x24a6, 0x2274, 0x3b30, 0x9e6b, 0x76e8, 0xb78b, 0x1, 0x1);
        gbc.writeMem(0x24a6, { 0x4e });
        gbc.writeMem(0xb78b, { 0x39 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2274, gbc.sp());
        EXPECT(0x24a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb78b));
        // 4E 0015
        gbc.setState(0xe6a, 0x2ef1, 0x5380, 0xe3d1, 0x8a54, 0xad2d, 0x0, 0x1);
        gbc.writeMem(0xe6a, { 0x4e });
        gbc.writeMem(0xad2d, { 0xf8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2ef1, gbc.sp());
        EXPECT(0xe6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xad2d));
        // 4E 0017
        gbc.setState(0x660b, 0xbf4d, 0xa8f0, 0xc79d, 0xc0c, 0xdbce, 0x1, 0x0);
        gbc.writeMem(0x660b, { 0x4e });
        gbc.writeMem(0xdbce, { 0xe2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbf4d, gbc.sp());
        EXPECT(0x660c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdbce));
        // 4E 0018
        gbc.setState(0xac74, 0xe0b5, 0x16c0, 0x72c9, 0x2021, 0x2295, 0x1, 0x1);
        gbc.writeMem(0x2295, { 0x1e });
        gbc.writeMem(0xac74, { 0x4e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe0b5, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xac74));
        // 4E 0019
        gbc.setState(0x826b, 0x6253, 0xde80, 0xabd7, 0xa4d3, 0x1029, 0x0, 0x1);
        gbc.writeMem(0x1029, { 0x74 });
        gbc.writeMem(0x826b, { 0x4e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6253, gbc.sp());
        EXPECT(0x826c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x826b));
        // 4E 001A
        gbc.setState(0xc9a0, 0x4d0c, 0xdeb0, 0xf77f, 0x5e65, 0x69e2, 0x1, 0x0);
        gbc.writeMem(0x69e2, { 0xc4 });
        gbc.writeMem(0xc9a0, { 0x4e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4d0c, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc9a0));
        // 4E 001B
        gbc.setState(0xeea9, 0x8dc8, 0xc400, 0x7652, 0xb9c0, 0x2340, 0x0, 0x1);
        gbc.writeMem(0x2340, { 0x7e });
        gbc.writeMem(0xeea9, { 0x4e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8dc8, gbc.sp());
        EXPECT(0xeeaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xeea9));
        // 4E 001C
        gbc.setState(0x1652, 0x914b, 0xd9c0, 0x1744, 0x71ed, 0xbdf5, 0x0, 0x0);
        gbc.writeMem(0x1652, { 0x4e });
        gbc.writeMem(0xbdf5, { 0x5f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x914b, gbc.sp());
        EXPECT(0x1653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xbdf5));
        // 4E 001D
        gbc.setState(0xecc7, 0xab3, 0x2220, 0xc63a, 0x5326, 0x31bc, 0x1, 0x0);
        gbc.writeMem(0x31bc, { 0xd4 });
        gbc.writeMem(0xecc7, { 0x4e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xab3, gbc.sp());
        EXPECT(0xecc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xecc7));
        // 4E 001E
        gbc.setState(0xd302, 0x2381, 0xb7d0, 0x260e, 0xf9f6, 0xb1ff, 0x1, 0x1);
        gbc.writeMem(0xb1ff, { 0xac });
        gbc.writeMem(0xd302, { 0x4e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2381, gbc.sp());
        EXPECT(0xd303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb1ff));
        EXPECT(0x4e, gbc.readMem(0xd302));
        // 4E 001F
        gbc.setState(0x7a13, 0x64a4, 0x9a0, 0x79e2, 0x7034, 0xa7a8, 0x1, 0x0);
        gbc.writeMem(0x7a13, { 0x4e });
        gbc.writeMem(0xa7a8, { 0xe5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0x7a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa7a8));
        // 4E 0021
        gbc.setState(0xc806, 0xcdbc, 0x4f70, 0xa912, 0x7748, 0xc60e, 0x0, 0x1);
        gbc.writeMem(0xc60e, { 0x95 });
        gbc.writeMem(0xc806, { 0x4e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcdbc, gbc.sp());
        EXPECT(0xc807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc60e));
        EXPECT(0x4e, gbc.readMem(0xc806));
        // 4E 0022
        gbc.setState(0x1b23, 0xd04, 0xa100, 0x6e65, 0x7e7, 0x2651, 0x0, 0x1);
        gbc.writeMem(0x1b23, { 0x4e });
        gbc.writeMem(0x2651, { 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd04, gbc.sp());
        EXPECT(0x1b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0023
        gbc.setState(0x1c16, 0x3b11, 0xbbd0, 0xa55d, 0xda4c, 0x35c3, 0x1, 0x0);
        gbc.writeMem(0x1c16, { 0x4e });
        gbc.writeMem(0x35c3, { 0x57 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3b11, gbc.sp());
        EXPECT(0x1c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0024
        gbc.setState(0x376a, 0x807, 0x66b0, 0x290a, 0x1c8a, 0x431b, 0x1, 0x1);
        gbc.writeMem(0x376a, { 0x4e });
        gbc.writeMem(0x431b, { 0x24 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x807, gbc.sp());
        EXPECT(0x376b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0025
        gbc.setState(0xaa64, 0x78e, 0x14f0, 0x5541, 0x9417, 0x47c, 0x1, 0x0);
        gbc.writeMem(0x47c, { 0xab });
        gbc.writeMem(0xaa64, { 0x4e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x78e, gbc.sp());
        EXPECT(0xaa65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaa64));
        // 4E 0026
        gbc.setState(0x3c78, 0xcbd5, 0x1120, 0x115b, 0x81b1, 0x857f, 0x0, 0x0);
        gbc.writeMem(0x3c78, { 0x4e });
        gbc.writeMem(0x857f, { 0x55 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcbd5, gbc.sp());
        EXPECT(0x3c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x857f));
        // 4E 0027
        gbc.setState(0x9c11, 0x5209, 0x81a0, 0xaabf, 0x5119, 0xd436, 0x1, 0x1);
        gbc.writeMem(0x9c11, { 0x4e });
        gbc.writeMem(0xd436, { 0xec });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5209, gbc.sp());
        EXPECT(0x9c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9c11));
        EXPECT(0xec, gbc.readMem(0xd436));
        // 4E 0029
        gbc.setState(0xb559, 0x1c92, 0xe520, 0x3397, 0xbd4c, 0xc421, 0x1, 0x1);
        gbc.writeMem(0xb559, { 0x4e });
        gbc.writeMem(0xc421, { 0xad });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1c92, gbc.sp());
        EXPECT(0xb55a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb559));
        EXPECT(0xad, gbc.readMem(0xc421));
        // 4E 002A
        gbc.setState(0x334f, 0xa9b0, 0x2010, 0x9bca, 0x570c, 0xb1b, 0x1, 0x0);
        gbc.writeMem(0xb1b, { 0x77 });
        gbc.writeMem(0x334f, { 0x4e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa9b0, gbc.sp());
        EXPECT(0x3350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 002C
        gbc.setState(0xc8, 0x6c57, 0x1c0, 0xea6e, 0x992f, 0x9330, 0x0, 0x1);
        gbc.writeMem(0xc8, { 0x4e });
        gbc.writeMem(0x9330, { 0x72 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6c57, gbc.sp());
        EXPECT(0xc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9330));
        // 4E 002D
        gbc.setState(0x75e4, 0xc342, 0x8cc0, 0x7d02, 0xcce5, 0x14d4, 0x0, 0x0);
        gbc.writeMem(0x14d4, { 0xc9 });
        gbc.writeMem(0x75e4, { 0x4e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc342, gbc.sp());
        EXPECT(0x75e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 002F
        gbc.setState(0x6441, 0xa21, 0x5520, 0x8f75, 0x23ae, 0xbcc2, 0x1, 0x0);
        gbc.writeMem(0x6441, { 0x4e });
        gbc.writeMem(0xbcc2, { 0xad });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa21, gbc.sp());
        EXPECT(0x6442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xbcc2));
        // 4E 0030
        gbc.setState(0xc86, 0x90ee, 0x8270, 0x2e6, 0x2fe4, 0x7d47, 0x1, 0x0);
        gbc.writeMem(0xc86, { 0x4e });
        gbc.writeMem(0x7d47, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x90ee, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0031
        gbc.setState(0xa090, 0xabda, 0x8bc0, 0x4d6, 0xe30f, 0xb68a, 0x0, 0x0);
        gbc.writeMem(0xa090, { 0x4e });
        gbc.writeMem(0xb68a, { 0xfd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xabda, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa090));
        EXPECT(0xfd, gbc.readMem(0xb68a));
        // 4E 0032
        gbc.setState(0x85ea, 0xc886, 0x1b40, 0x1540, 0x81a, 0x23ac, 0x1, 0x0);
        gbc.writeMem(0x23ac, { 0x57 });
        gbc.writeMem(0x85ea, { 0x4e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc886, gbc.sp());
        EXPECT(0x85eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x85ea));
        // 4E 0033
        gbc.setState(0x4cbf, 0xe687, 0x2ce0, 0xbbe5, 0xdbb1, 0x5c14, 0x0, 0x1);
        gbc.writeMem(0x4cbf, { 0x4e });
        gbc.writeMem(0x5c14, { 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe687, gbc.sp());
        EXPECT(0x4cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0034
        gbc.setState(0x3040, 0x74ee, 0xb150, 0x3b8a, 0x1a09, 0xf0ee, 0x0, 0x0);
        gbc.writeMem(0x3040, { 0x4e });
        gbc.writeMem(0xf0ee, { 0xde });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x3041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf0ee));
        // 4E 0035
        gbc.setState(0x17e7, 0xf54c, 0x6720, 0xcd3b, 0x778a, 0xac93, 0x1, 0x1);
        gbc.writeMem(0x17e7, { 0x4e });
        gbc.writeMem(0xac93, { 0x12 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf54c, gbc.sp());
        EXPECT(0x17e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xac93));
        // 4E 0036
        gbc.setState(0xd139, 0x7ef8, 0x4a0, 0x286, 0xb57a, 0xac03, 0x1, 0x0);
        gbc.writeMem(0xac03, { 0xd6 });
        gbc.writeMem(0xd139, { 0x4e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7ef8, gbc.sp());
        EXPECT(0xd13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xac03));
        EXPECT(0x4e, gbc.readMem(0xd139));
        // 4E 0037
        gbc.setState(0xd625, 0xb7a9, 0xa650, 0x9abb, 0xe7c1, 0x40da, 0x0, 0x0);
        gbc.writeMem(0x40da, { 0xeb });
        gbc.writeMem(0xd625, { 0x4e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb7a9, gbc.sp());
        EXPECT(0xd626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd625));
        // 4E 0038
        gbc.setState(0x17ae, 0x4e7d, 0xbd10, 0xd727, 0xed57, 0x4234, 0x0, 0x1);
        gbc.writeMem(0x17ae, { 0x4e });
        gbc.writeMem(0x4234, { 0x6c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4e7d, gbc.sp());
        EXPECT(0x17af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0039
        gbc.setState(0xa32a, 0x62cb, 0xed50, 0x31a2, 0xe69e, 0xef04, 0x0, 0x1);
        gbc.writeMem(0xa32a, { 0x4e });
        gbc.writeMem(0xef04, { 0x71 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x62cb, gbc.sp());
        EXPECT(0xa32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa32a));
        EXPECT(0x71, gbc.readMem(0xef04));
        // 4E 003A
        gbc.setState(0xd870, 0x2a52, 0x47b0, 0xd34b, 0xdf91, 0xace9, 0x0, 0x1);
        gbc.writeMem(0xace9, { 0xd4 });
        gbc.writeMem(0xd870, { 0x4e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2a52, gbc.sp());
        EXPECT(0xd871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xace9));
        EXPECT(0x4e, gbc.readMem(0xd870));
        // 4E 003B
        gbc.setState(0xdfb8, 0x4d0f, 0xbe00, 0x69d4, 0x3787, 0xc21, 0x0, 0x0);
        gbc.writeMem(0xc21, { 0x6a });
        gbc.writeMem(0xdfb8, { 0x4e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4d0f, gbc.sp());
        EXPECT(0xdfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdfb8));
        // 4E 003C
        gbc.setState(0x86e0, 0x345, 0x7890, 0x210d, 0x8237, 0x5bd1, 0x1, 0x0);
        gbc.writeMem(0x5bd1, { 0x8 });
        gbc.writeMem(0x86e0, { 0x4e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x345, gbc.sp());
        EXPECT(0x86e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x86e0));
        // 4E 003D
        gbc.setState(0x9df4, 0x29e9, 0xc970, 0x6953, 0x2f83, 0xc7d6, 0x1, 0x0);
        gbc.writeMem(0x9df4, { 0x4e });
        gbc.writeMem(0xc7d6, { 0x68 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x29e9, gbc.sp());
        EXPECT(0x9df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9df4));
        EXPECT(0x68, gbc.readMem(0xc7d6));
        // 4E 003E
        gbc.setState(0xd16c, 0xc6a2, 0xc030, 0xa761, 0x3437, 0xd2a7, 0x0, 0x1);
        gbc.writeMem(0xd16c, { 0x4e });
        gbc.writeMem(0xd2a7, { 0x92 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0xd16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd16c));
        EXPECT(0x92, gbc.readMem(0xd2a7));
        // 4E 003F
        gbc.setState(0x1094, 0x2b56, 0x5360, 0x6457, 0xed82, 0xe9e2, 0x1, 0x0);
        gbc.writeMem(0x1094, { 0x4e });
        gbc.writeMem(0xe9e2, { 0xe4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2b56, gbc.sp());
        EXPECT(0x1095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xe9e2));
        // 4E 0040
        gbc.setState(0xe6c2, 0xb9a3, 0xdce0, 0xb384, 0x199a, 0x5500, 0x0, 0x0);
        gbc.writeMem(0x5500, { 0x35 });
        gbc.writeMem(0xe6c2, { 0x4e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb9a3, gbc.sp());
        EXPECT(0xe6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe6c2));
        // 4E 0041
        gbc.setState(0x5e0a, 0xc3d7, 0xa30, 0x7ef5, 0xaaac, 0xfb38, 0x1, 0x0);
        gbc.writeMem(0x5e0a, { 0x4e });
        gbc.writeMem(0xfb38, { 0x20 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc3d7, gbc.sp());
        EXPECT(0x5e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xfb38));
        // 4E 0042
        gbc.setState(0x6b7b, 0xb13f, 0xfdb0, 0x74f4, 0xa8c0, 0x5365, 0x0, 0x0);
        gbc.writeMem(0x5365, { 0xdf });
        gbc.writeMem(0x6b7b, { 0x4e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb13f, gbc.sp());
        EXPECT(0x6b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0043
        gbc.setState(0xa03f, 0x87e7, 0x5600, 0x48a6, 0x4839, 0x2ce, 0x1, 0x1);
        gbc.writeMem(0x2ce, { 0xee });
        gbc.writeMem(0xa03f, { 0x4e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x87e7, gbc.sp());
        EXPECT(0xa040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa03f));
        // 4E 0044
        gbc.setState(0xd706, 0x99e6, 0x3bf0, 0x532f, 0xa5cc, 0x8aa5, 0x0, 0x1);
        gbc.writeMem(0x8aa5, { 0x53 });
        gbc.writeMem(0xd706, { 0x4e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x99e6, gbc.sp());
        EXPECT(0xd707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8aa5));
        EXPECT(0x4e, gbc.readMem(0xd706));
        // 4E 0045
        gbc.setState(0xdf37, 0xf544, 0x8c60, 0xce29, 0x1efe, 0xb979, 0x0, 0x1);
        gbc.writeMem(0xb979, { 0xec });
        gbc.writeMem(0xdf37, { 0x4e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf544, gbc.sp());
        EXPECT(0xdf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xb979));
        EXPECT(0x4e, gbc.readMem(0xdf37));
        // 4E 0046
        gbc.setState(0xaa03, 0xef76, 0xd360, 0xb58c, 0x8f4c, 0x520c, 0x1, 0x0);
        gbc.writeMem(0x520c, { 0xf9 });
        gbc.writeMem(0xaa03, { 0x4e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xef76, gbc.sp());
        EXPECT(0xaa04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaa03));
        // 4E 0047
        gbc.setState(0x1bae, 0xfa2c, 0x7f20, 0x12f1, 0x1dba, 0x241a, 0x0, 0x1);
        gbc.writeMem(0x1bae, { 0x4e });
        gbc.writeMem(0x241a, { 0xa9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfa2c, gbc.sp());
        EXPECT(0x1baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0048
        gbc.setState(0x35f6, 0x9d35, 0xfe90, 0x1f4f, 0xa8ed, 0xc3f, 0x1, 0x0);
        gbc.writeMem(0xc3f, { 0x90 });
        gbc.writeMem(0x35f6, { 0x4e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9d35, gbc.sp());
        EXPECT(0x35f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0049
        gbc.setState(0xeb91, 0xf024, 0x75e0, 0x6e21, 0x72aa, 0xcdc7, 0x0, 0x1);
        gbc.writeMem(0xcdc7, { 0x17 });
        gbc.writeMem(0xeb91, { 0x4e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf024, gbc.sp());
        EXPECT(0xeb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xcdc7));
        EXPECT(0x4e, gbc.readMem(0xeb91));
        // 4E 004A
        gbc.setState(0x3537, 0x29fe, 0xd8f0, 0xba5, 0x995d, 0x70c1, 0x0, 0x0);
        gbc.writeMem(0x3537, { 0x4e });
        gbc.writeMem(0x70c1, { 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0x3538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 004B
        gbc.setState(0x814e, 0xd90, 0xdd90, 0x4bcd, 0x2e7c, 0x19a6, 0x1, 0x1);
        gbc.writeMem(0x19a6, { 0x24 });
        gbc.writeMem(0x814e, { 0x4e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd90, gbc.sp());
        EXPECT(0x814f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x814e));
        // 4E 004C
        gbc.setState(0xbc2, 0xaf2f, 0x1d60, 0xc9c0, 0xfa9f, 0x59c2, 0x0, 0x0);
        gbc.writeMem(0xbc2, { 0x4e });
        gbc.writeMem(0x59c2, { 0x18 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xaf2f, gbc.sp());
        EXPECT(0xbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 004D
        gbc.setState(0x4566, 0xd377, 0x6360, 0x618b, 0x2dd3, 0xcd98, 0x1, 0x1);
        gbc.writeMem(0x4566, { 0x4e });
        gbc.writeMem(0xcd98, { 0xe0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd377, gbc.sp());
        EXPECT(0x4567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xcd98));
        // 4E 004E
        gbc.setState(0xb5db, 0xc8d, 0xacc0, 0xd53d, 0xb84d, 0x9abd, 0x0, 0x0);
        gbc.writeMem(0x9abd, { 0x6e });
        gbc.writeMem(0xb5db, { 0x4e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc8d, gbc.sp());
        EXPECT(0xb5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9abd));
        EXPECT(0x4e, gbc.readMem(0xb5db));
        // 4E 004F
        gbc.setState(0x1ad2, 0x2043, 0xe8f0, 0x17b5, 0x51b8, 0x9baf, 0x1, 0x0);
        gbc.writeMem(0x1ad2, { 0x4e });
        gbc.writeMem(0x9baf, { 0x33 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2043, gbc.sp());
        EXPECT(0x1ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9baf));
        // 4E 0050
        gbc.setState(0x1ffa, 0x2082, 0xcf80, 0x315a, 0xb8a, 0xc254, 0x0, 0x0);
        gbc.writeMem(0x1ffa, { 0x4e });
        gbc.writeMem(0xc254, { 0xfa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2082, gbc.sp());
        EXPECT(0x1ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc254));
        // 4E 0051
        gbc.setState(0x7cf, 0x4c47, 0xcda0, 0x6f64, 0x700b, 0xad6d, 0x0, 0x1);
        gbc.writeMem(0x7cf, { 0x4e });
        gbc.writeMem(0xad6d, { 0x4d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4c47, gbc.sp());
        EXPECT(0x7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xad6d));
        // 4E 0052
        gbc.setState(0x44e, 0x1651, 0x4030, 0xa300, 0x3cd9, 0xf81, 0x0, 0x0);
        gbc.writeMem(0x44e, { 0x4e });
        gbc.writeMem(0xf81, { 0x95 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1651, gbc.sp());
        EXPECT(0x44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0053
        gbc.setState(0x8639, 0x95f3, 0x6120, 0x6648, 0x7f38, 0x6bf2, 0x0, 0x0);
        gbc.writeMem(0x6bf2, { 0xa7 });
        gbc.writeMem(0x8639, { 0x4e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x95f3, gbc.sp());
        EXPECT(0x863a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8639));
        // 4E 0054
        gbc.setState(0x7c9d, 0x957b, 0x2c80, 0x3078, 0x9a04, 0xda02, 0x0, 0x1);
        gbc.writeMem(0x7c9d, { 0x4e });
        gbc.writeMem(0xda02, { 0x1d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x957b, gbc.sp());
        EXPECT(0x7c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xda02));
        // 4E 0055
        gbc.setState(0x3c45, 0x867c, 0x5d80, 0x3fb4, 0x5bc5, 0x901e, 0x0, 0x0);
        gbc.writeMem(0x3c45, { 0x4e });
        gbc.writeMem(0x901e, { 0x14 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x867c, gbc.sp());
        EXPECT(0x3c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x901e));
        // 4E 0056
        gbc.setState(0x21af, 0x7d72, 0xe390, 0x8ef9, 0x8c80, 0x9374, 0x0, 0x0);
        gbc.writeMem(0x21af, { 0x4e });
        gbc.writeMem(0x9374, { 0xba });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7d72, gbc.sp());
        EXPECT(0x21b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x9374));
        // 4E 0057
        gbc.setState(0x9e65, 0x1d, 0x6d0, 0xab9b, 0x8d76, 0xa4a5, 0x1, 0x1);
        gbc.writeMem(0x9e65, { 0x4e });
        gbc.writeMem(0xa4a5, { 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1d, gbc.sp());
        EXPECT(0x9e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9e65));
        EXPECT(0x76, gbc.readMem(0xa4a5));
        // 4E 0058
        gbc.setState(0x5001, 0xf673, 0xa5d0, 0xd5db, 0xdfd1, 0xde2f, 0x1, 0x0);
        gbc.writeMem(0x5001, { 0x4e });
        gbc.writeMem(0xde2f, { 0x23 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf673, gbc.sp());
        EXPECT(0x5002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xde2f));
        // 4E 0059
        gbc.setState(0x947e, 0x1c5a, 0x9060, 0x33c0, 0x3ec3, 0x8821, 0x0, 0x0);
        gbc.writeMem(0x8821, { 0xe9 });
        gbc.writeMem(0x947e, { 0x4e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1c5a, gbc.sp());
        EXPECT(0x947f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8821));
        EXPECT(0x4e, gbc.readMem(0x947e));
        // 4E 005A
        gbc.setState(0x761a, 0xc707, 0xd240, 0xc998, 0xd23f, 0xd812, 0x1, 0x1);
        gbc.writeMem(0x761a, { 0x4e });
        gbc.writeMem(0xd812, { 0xe8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc707, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xd812));
        // 4E 005B
        gbc.setState(0x872, 0x6aa2, 0x1740, 0x9e8d, 0xc6d4, 0x32a2, 0x1, 0x0);
        gbc.writeMem(0x872, { 0x4e });
        gbc.writeMem(0x32a2, { 0xa1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6aa2, gbc.sp());
        EXPECT(0x873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 005C
        gbc.setState(0x8cf0, 0x6ef5, 0x7bf0, 0x80d0, 0xf4cd, 0x9171, 0x0, 0x0);
        gbc.writeMem(0x8cf0, { 0x4e });
        gbc.writeMem(0x9171, { 0xd6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6ef5, gbc.sp());
        EXPECT(0x8cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8cf0));
        EXPECT(0xd6, gbc.readMem(0x9171));
        // 4E 005D
        gbc.setState(0x100a, 0x5301, 0x6a50, 0xa2be, 0x5a94, 0x4079, 0x0, 0x1);
        gbc.writeMem(0x100a, { 0x4e });
        gbc.writeMem(0x4079, { 0x74 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5301, gbc.sp());
        EXPECT(0x100b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 005E
        gbc.setState(0x915b, 0x46cc, 0x5df0, 0x90e5, 0x766e, 0xa441, 0x0, 0x0);
        gbc.writeMem(0x915b, { 0x4e });
        gbc.writeMem(0xa441, { 0xc8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x46cc, gbc.sp());
        EXPECT(0x915c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x915b));
        EXPECT(0xc8, gbc.readMem(0xa441));
        // 4E 005F
        gbc.setState(0x35de, 0xfad5, 0xcd70, 0xcf7f, 0xa659, 0x9736, 0x1, 0x0);
        gbc.writeMem(0x35de, { 0x4e });
        gbc.writeMem(0x9736, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfad5, gbc.sp());
        EXPECT(0x35df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9736));
        // 4E 0060
        gbc.setState(0x12db, 0xec06, 0xf30, 0x7ee5, 0x10a4, 0x86a2, 0x0, 0x0);
        gbc.writeMem(0x12db, { 0x4e });
        gbc.writeMem(0x86a2, { 0xc1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xec06, gbc.sp());
        EXPECT(0x12dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x86a2));
        // 4E 0062
        gbc.setState(0x22fe, 0x89ec, 0x8950, 0xd816, 0x9dd3, 0x126b, 0x0, 0x1);
        gbc.writeMem(0x126b, { 0x52 });
        gbc.writeMem(0x22fe, { 0x4e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x89ec, gbc.sp());
        EXPECT(0x22ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0063
        gbc.setState(0xdde3, 0xc413, 0xc730, 0xa3e1, 0xd288, 0x10a5, 0x0, 0x1);
        gbc.writeMem(0x10a5, { 0x51 });
        gbc.writeMem(0xdde3, { 0x4e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc413, gbc.sp());
        EXPECT(0xdde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdde3));
        // 4E 0064
        gbc.setState(0xd386, 0xcd9b, 0xad0, 0xfd5a, 0x3eae, 0xd079, 0x1, 0x1);
        gbc.writeMem(0xd079, { 0x3b });
        gbc.writeMem(0xd386, { 0x4e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcd9b, gbc.sp());
        EXPECT(0xd387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd079));
        EXPECT(0x4e, gbc.readMem(0xd386));
        // 4E 0065
        gbc.setState(0x34f6, 0x25ea, 0x37b0, 0x94ef, 0x83e8, 0x21e7, 0x0, 0x1);
        gbc.writeMem(0x21e7, { 0x52 });
        gbc.writeMem(0x34f6, { 0x4e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x25ea, gbc.sp());
        EXPECT(0x34f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0066
        gbc.setState(0x984c, 0x17e, 0x1970, 0x1619, 0x9017, 0x8c7a, 0x0, 0x1);
        gbc.writeMem(0x8c7a, { 0x9f });
        gbc.writeMem(0x984c, { 0x4e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x17e, gbc.sp());
        EXPECT(0x984d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8c7a));
        EXPECT(0x4e, gbc.readMem(0x984c));
        // 4E 0067
        gbc.setState(0x5c5c, 0x8609, 0x7150, 0xd0b5, 0xf0df, 0xc7d5, 0x1, 0x0);
        gbc.writeMem(0x5c5c, { 0x4e });
        gbc.writeMem(0xc7d5, { 0x65 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8609, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc7d5));
        // 4E 0068
        gbc.setState(0xeddb, 0xb6da, 0x27d0, 0x6da6, 0xa62c, 0x18ef, 0x1, 0x0);
        gbc.writeMem(0x18ef, { 0x59 });
        gbc.writeMem(0xeddb, { 0x4e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb6da, gbc.sp());
        EXPECT(0xeddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xeddb));
        // 4E 0069
        gbc.setState(0xc882, 0x936b, 0x3c50, 0xa4e4, 0x87a2, 0xcaf8, 0x1, 0x0);
        gbc.writeMem(0xc882, { 0x4e });
        gbc.writeMem(0xcaf8, { 0x49 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x936b, gbc.sp());
        EXPECT(0xc883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc882));
        EXPECT(0x49, gbc.readMem(0xcaf8));
        // 4E 006A
        gbc.setState(0x1783, 0x33cc, 0x4770, 0x5723, 0x72c7, 0x8ed, 0x1, 0x1);
        gbc.writeMem(0x8ed, { 0x1a });
        gbc.writeMem(0x1783, { 0x4e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x33cc, gbc.sp());
        EXPECT(0x1784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 006B
        gbc.setState(0x6f36, 0xee9, 0xb10, 0x912a, 0x6566, 0xe381, 0x1, 0x0);
        gbc.writeMem(0x6f36, { 0x4e });
        gbc.writeMem(0xe381, { 0xcd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xee9, gbc.sp());
        EXPECT(0x6f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xe381));
        // 4E 006C
        gbc.setState(0x3407, 0xd00b, 0x1500, 0x8046, 0xefe9, 0x6483, 0x0, 0x1);
        gbc.writeMem(0x3407, { 0x4e });
        gbc.writeMem(0x6483, { 0x90 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd00b, gbc.sp());
        EXPECT(0x3408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 006D
        gbc.setState(0xedd1, 0x6d7a, 0x6450, 0x2588, 0x1f2e, 0x10b5, 0x0, 0x1);
        gbc.writeMem(0x10b5, { 0x24 });
        gbc.writeMem(0xedd1, { 0x4e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6d7a, gbc.sp());
        EXPECT(0xedd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xedd1));
        // 4E 006E
        gbc.setState(0x4129, 0x56c2, 0xbcb0, 0xf559, 0xcebb, 0x7e43, 0x0, 0x0);
        gbc.writeMem(0x4129, { 0x4e });
        gbc.writeMem(0x7e43, { 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x56c2, gbc.sp());
        EXPECT(0x412a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 006F
        gbc.setState(0xb407, 0x66c4, 0x4a60, 0x6ec, 0x826a, 0xe2b2, 0x1, 0x0);
        gbc.writeMem(0xb407, { 0x4e });
        gbc.writeMem(0xe2b2, { 0xa5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0xb408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb407));
        EXPECT(0xa5, gbc.readMem(0xe2b2));
        // 4E 0072
        gbc.setState(0xd28, 0xcf05, 0x9490, 0xc3ec, 0x34f9, 0x2f86, 0x0, 0x1);
        gbc.writeMem(0xd28, { 0x4e });
        gbc.writeMem(0x2f86, { 0x32 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcf05, gbc.sp());
        EXPECT(0xd29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0073
        gbc.setState(0xc995, 0x26b7, 0x30f0, 0x3438, 0xda64, 0x26fc, 0x0, 0x0);
        gbc.writeMem(0x26fc, { 0x45 });
        gbc.writeMem(0xc995, { 0x4e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x26b7, gbc.sp());
        EXPECT(0xc996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc995));
        // 4E 0074
        gbc.setState(0x6789, 0x82fc, 0x54a0, 0xe0af, 0x4ec3, 0x1157, 0x1, 0x1);
        gbc.writeMem(0x1157, { 0x90 });
        gbc.writeMem(0x6789, { 0x4e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x82fc, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0075
        gbc.setState(0x3657, 0x5808, 0xae70, 0xe2ea, 0xc095, 0xcb0a, 0x1, 0x1);
        gbc.writeMem(0x3657, { 0x4e });
        gbc.writeMem(0xcb0a, { 0x5b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5808, gbc.sp());
        EXPECT(0x3658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcb0a));
        // 4E 0076
        gbc.setState(0x3312, 0x7ea5, 0xf8b0, 0x3618, 0xa8f9, 0x18c5, 0x1, 0x0);
        gbc.writeMem(0x18c5, { 0xc5 });
        gbc.writeMem(0x3312, { 0x4e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7ea5, gbc.sp());
        EXPECT(0x3313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0077
        gbc.setState(0x84ec, 0xa5f9, 0xc190, 0xd4a5, 0xf17c, 0x47, 0x1, 0x0);
        gbc.writeMem(0x47, { 0x69 });
        gbc.writeMem(0x84ec, { 0x4e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa5f9, gbc.sp());
        EXPECT(0x84ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x84ec));
        // 4E 0078
        gbc.setState(0x7018, 0x8bea, 0x11c0, 0xe2f1, 0x3ff5, 0xf536, 0x0, 0x1);
        gbc.writeMem(0x7018, { 0x4e });
        gbc.writeMem(0xf536, { 0x88 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8bea, gbc.sp());
        EXPECT(0x7019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xf536));
        // 4E 0079
        gbc.setState(0xac11, 0x2a8b, 0xa0c0, 0x81f5, 0x6bf7, 0xeb55, 0x1, 0x1);
        gbc.writeMem(0xac11, { 0x4e });
        gbc.writeMem(0xeb55, { 0xf1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2a8b, gbc.sp());
        EXPECT(0xac12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xac11));
        EXPECT(0xf1, gbc.readMem(0xeb55));
        // 4E 007A
        gbc.setState(0x6483, 0xa5ce, 0x3990, 0x8d9c, 0x5970, 0x21a9, 0x1, 0x0);
        gbc.writeMem(0x21a9, { 0xcf });
        gbc.writeMem(0x6483, { 0x4e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa5ce, gbc.sp());
        EXPECT(0x6484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 007B
        gbc.setState(0xa3e2, 0x955e, 0x2ef0, 0x9294, 0x8a57, 0x6cb4, 0x0, 0x0);
        gbc.writeMem(0x6cb4, { 0xe4 });
        gbc.writeMem(0xa3e2, { 0x4e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x955e, gbc.sp());
        EXPECT(0xa3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa3e2));
        // 4E 007C
        gbc.setState(0xca02, 0xd157, 0xc4a0, 0xc829, 0x1070, 0x10f5, 0x1, 0x0);
        gbc.writeMem(0x10f5, { 0xee });
        gbc.writeMem(0xca02, { 0x4e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd157, gbc.sp());
        EXPECT(0xca03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xca02));
        // 4E 007D
        gbc.setState(0xe2e3, 0x5b77, 0x60d0, 0xa837, 0x3e89, 0x128b, 0x1, 0x1);
        gbc.writeMem(0x128b, { 0xc4 });
        gbc.writeMem(0xe2e3, { 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5b77, gbc.sp());
        EXPECT(0xe2e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe2e3));
        // 4E 007E
        gbc.setState(0xc1fd, 0xe09d, 0x36d0, 0xd801, 0xb21e, 0xff10, 0x0, 0x0);
        gbc.writeMem(0xc1fd, { 0x4e });
        gbc.writeMem(0xff10, { 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0xc1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc1fd));
        EXPECT(0xb7, gbc.readMem(0xff10));
        // 4E 007F
        gbc.setState(0x7684, 0xd077, 0x1970, 0x483b, 0x845b, 0xb32c, 0x1, 0x0);
        gbc.writeMem(0x7684, { 0x4e });
        gbc.writeMem(0xb32c, { 0x15 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd077, gbc.sp());
        EXPECT(0x7685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb32c));
        // 4E 0080
        gbc.setState(0x3222, 0xa59d, 0x64f0, 0xee80, 0x15c5, 0x9abc, 0x0, 0x0);
        gbc.writeMem(0x3222, { 0x4e });
        gbc.writeMem(0x9abc, { 0xcb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa59d, gbc.sp());
        EXPECT(0x3223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abc));
        // 4E 0081
        gbc.setState(0x8b21, 0x7f35, 0x6bd0, 0x89b3, 0x4f52, 0x4117, 0x0, 0x1);
        gbc.writeMem(0x4117, { 0x82 });
        gbc.writeMem(0x8b21, { 0x4e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7f35, gbc.sp());
        EXPECT(0x8b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8b21));
        // 4E 0082
        gbc.setState(0x6611, 0xc5bc, 0x3100, 0xddaf, 0xd2e3, 0x87aa, 0x1, 0x0);
        gbc.writeMem(0x6611, { 0x4e });
        gbc.writeMem(0x87aa, { 0x6d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc5bc, gbc.sp());
        EXPECT(0x6612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x87aa));
        // 4E 0083
        gbc.setState(0x225e, 0x4f54, 0x3390, 0xe4f0, 0xcccd, 0x18d6, 0x0, 0x0);
        gbc.writeMem(0x18d6, { 0xa4 });
        gbc.writeMem(0x225e, { 0x4e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4f54, gbc.sp());
        EXPECT(0x225f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0084
        gbc.setState(0x6430, 0x302, 0x50b0, 0x4c2f, 0x948, 0x9c72, 0x1, 0x1);
        gbc.writeMem(0x6430, { 0x4e });
        gbc.writeMem(0x9c72, { 0x15 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x302, gbc.sp());
        EXPECT(0x6431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9c72));
        // 4E 0085
        gbc.setState(0xbf0b, 0xbb15, 0x9790, 0x2eaa, 0xef63, 0xf0ba, 0x1, 0x0);
        gbc.writeMem(0xbf0b, { 0x4e });
        gbc.writeMem(0xf0ba, { 0x84 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbb15, gbc.sp());
        EXPECT(0xbf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbf0b));
        EXPECT(0x84, gbc.readMem(0xf0ba));
        // 4E 0086
        gbc.setState(0xd2ac, 0x1b85, 0x5c90, 0x607, 0x7612, 0xfd40, 0x1, 0x1);
        gbc.writeMem(0xd2ac, { 0x4e });
        gbc.writeMem(0xfd40, { 0xd6 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1b85, gbc.sp());
        EXPECT(0xd2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd2ac));
        EXPECT(0xd6, gbc.readMem(0xfd40));
        // 4E 0087
        gbc.setState(0x8f10, 0xf1e, 0x9010, 0xbcd9, 0x6d35, 0x7554, 0x1, 0x0);
        gbc.writeMem(0x7554, { 0x27 });
        gbc.writeMem(0x8f10, { 0x4e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf1e, gbc.sp());
        EXPECT(0x8f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8f10));
        // 4E 0088
        gbc.setState(0xea25, 0x7b6a, 0x6680, 0x235b, 0x970a, 0xe13, 0x0, 0x0);
        gbc.writeMem(0xe13, { 0xb3 });
        gbc.writeMem(0xea25, { 0x4e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7b6a, gbc.sp());
        EXPECT(0xea26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xea25));
        // 4E 0089
        gbc.setState(0x71c7, 0x3d5c, 0x8450, 0xb97f, 0x3a0f, 0x912b, 0x0, 0x1);
        gbc.writeMem(0x71c7, { 0x4e });
        gbc.writeMem(0x912b, { 0xce });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3d5c, gbc.sp());
        EXPECT(0x71c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x912b));
        // 4E 008A
        gbc.setState(0xdf5e, 0x267d, 0x9860, 0xa4b0, 0xa328, 0x6906, 0x1, 0x0);
        gbc.writeMem(0x6906, { 0xe9 });
        gbc.writeMem(0xdf5e, { 0x4e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x267d, gbc.sp());
        EXPECT(0xdf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdf5e));
        // 4E 008C
        gbc.setState(0xba9b, 0xb81d, 0x32a0, 0xa16, 0x7e3, 0x264b, 0x1, 0x1);
        gbc.writeMem(0x264b, { 0x58 });
        gbc.writeMem(0xba9b, { 0x4e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb81d, gbc.sp());
        EXPECT(0xba9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xba9b));
        // 4E 008D
        gbc.setState(0x7185, 0xbbe2, 0x1800, 0xb57b, 0x6e48, 0x6d11, 0x1, 0x0);
        gbc.writeMem(0x6d11, { 0x2e });
        gbc.writeMem(0x7185, { 0x4e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbbe2, gbc.sp());
        EXPECT(0x7186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 008E
        gbc.setState(0x4706, 0x711, 0x3ec0, 0xec10, 0x737, 0x3b99, 0x0, 0x1);
        gbc.writeMem(0x3b99, { 0x69 });
        gbc.writeMem(0x4706, { 0x4e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x711, gbc.sp());
        EXPECT(0x4707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 008F
        gbc.setState(0x6dce, 0xbc4a, 0xb080, 0x45fb, 0xe6fe, 0xa498, 0x1, 0x1);
        gbc.writeMem(0x6dce, { 0x4e });
        gbc.writeMem(0xa498, { 0xed });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbc4a, gbc.sp());
        EXPECT(0x6dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa498));
        // 4E 0090
        gbc.setState(0x5fc5, 0x1c7a, 0xc2c0, 0xdccc, 0x18c3, 0xfcd7, 0x0, 0x1);
        gbc.writeMem(0x5fc5, { 0x4e });
        gbc.writeMem(0xfcd7, { 0x92 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1c7a, gbc.sp());
        EXPECT(0x5fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xfcd7));
        // 4E 0091
        gbc.setState(0xf2b, 0x8f9b, 0x3ab0, 0x2f8e, 0x62ab, 0x5d79, 0x1, 0x1);
        gbc.writeMem(0xf2b, { 0x4e });
        gbc.writeMem(0x5d79, { 0x32 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0xf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0092
        gbc.setState(0xc125, 0xde, 0x4c10, 0x3e81, 0x1a87, 0x58d, 0x0, 0x0);
        gbc.writeMem(0x58d, { 0xae });
        gbc.writeMem(0xc125, { 0x4e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xde, gbc.sp());
        EXPECT(0xc126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc125));
        // 4E 0093
        gbc.setState(0xa5a2, 0xecf0, 0x8e50, 0xab80, 0xcaa8, 0xb432, 0x1, 0x1);
        gbc.writeMem(0xa5a2, { 0x4e });
        gbc.writeMem(0xb432, { 0xb4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xecf0, gbc.sp());
        EXPECT(0xa5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa5a2));
        EXPECT(0xb4, gbc.readMem(0xb432));
        // 4E 0094
        gbc.setState(0xbe46, 0x9f6d, 0x1470, 0x1ded, 0x5677, 0xce61, 0x1, 0x0);
        gbc.writeMem(0xbe46, { 0x4e });
        gbc.writeMem(0xce61, { 0xc8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9f6d, gbc.sp());
        EXPECT(0xbe47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbe46));
        EXPECT(0xc8, gbc.readMem(0xce61));
        // 4E 0095
        gbc.setState(0x60b8, 0xac14, 0x82f0, 0x2b4f, 0x54cb, 0x58b7, 0x0, 0x0);
        gbc.writeMem(0x58b7, { 0x41 });
        gbc.writeMem(0x60b8, { 0x4e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xac14, gbc.sp());
        EXPECT(0x60b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0097
        gbc.setState(0x80a8, 0xb1a8, 0x8550, 0x633c, 0xe8b7, 0x92fe, 0x0, 0x0);
        gbc.writeMem(0x80a8, { 0x4e });
        gbc.writeMem(0x92fe, { 0x2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb1a8, gbc.sp());
        EXPECT(0x80a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x80a8));
        EXPECT(0x2, gbc.readMem(0x92fe));
        // 4E 0098
        gbc.setState(0x97d9, 0xc7dc, 0x14c0, 0xfac, 0x865e, 0x9fae, 0x0, 0x1);
        gbc.writeMem(0x97d9, { 0x4e });
        gbc.writeMem(0x9fae, { 0xbb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc7dc, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x97d9));
        EXPECT(0xbb, gbc.readMem(0x9fae));
        // 4E 0099
        gbc.setState(0xbe26, 0x9503, 0x23f0, 0x5974, 0xa906, 0xe4eb, 0x1, 0x1);
        gbc.writeMem(0xbe26, { 0x4e });
        gbc.writeMem(0xe4eb, { 0x1b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9503, gbc.sp());
        EXPECT(0xbe27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbe26));
        EXPECT(0x1b, gbc.readMem(0xe4eb));
        // 4E 009A
        gbc.setState(0x56a2, 0x2108, 0x6920, 0x85cb, 0xab10, 0xe7d4, 0x0, 0x1);
        gbc.writeMem(0x56a2, { 0x4e });
        gbc.writeMem(0xe7d4, { 0xd0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2108, gbc.sp());
        EXPECT(0x56a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe7d4));
        // 4E 009B
        gbc.setState(0x7a74, 0x48e5, 0xd8a0, 0x4387, 0x71c9, 0xa74c, 0x0, 0x0);
        gbc.writeMem(0x7a74, { 0x4e });
        gbc.writeMem(0xa74c, { 0x7f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x48e5, gbc.sp());
        EXPECT(0x7a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa74c));
        // 4E 009C
        gbc.setState(0xcfa6, 0x68e7, 0xb6b0, 0x418b, 0x3139, 0x152d, 0x0, 0x1);
        gbc.writeMem(0x152d, { 0x38 });
        gbc.writeMem(0xcfa6, { 0x4e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x68e7, gbc.sp());
        EXPECT(0xcfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcfa6));
        // 4E 009D
        gbc.setState(0xcb1a, 0x6512, 0x5920, 0xdd75, 0xbd90, 0x94af, 0x0, 0x0);
        gbc.writeMem(0x94af, { 0x3a });
        gbc.writeMem(0xcb1a, { 0x4e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6512, gbc.sp());
        EXPECT(0xcb1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x94af));
        EXPECT(0x4e, gbc.readMem(0xcb1a));
        // 4E 009F
        gbc.setState(0x7dde, 0xdd48, 0x48f0, 0xe000, 0x4137, 0x71b7, 0x1, 0x1);
        gbc.writeMem(0x71b7, { 0xb7 });
        gbc.writeMem(0x7dde, { 0x4e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdd48, gbc.sp());
        EXPECT(0x7ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00A0
        gbc.setState(0x1f51, 0x649f, 0x51a0, 0xc17, 0x4961, 0x72e, 0x0, 0x1);
        gbc.writeMem(0x72e, { 0x5a });
        gbc.writeMem(0x1f51, { 0x4e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x649f, gbc.sp());
        EXPECT(0x1f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00A1
        gbc.setState(0xc07c, 0xff8c, 0x2460, 0xcf4a, 0x7cf6, 0xb27, 0x0, 0x1);
        gbc.writeMem(0xb27, { 0xb2 });
        gbc.writeMem(0xc07c, { 0x4e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xff8c, gbc.sp());
        EXPECT(0xc07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc07c));
        // 4E 00A2
        gbc.setState(0x7d8b, 0xb6b6, 0xfd70, 0xd1e3, 0x9c42, 0xb833, 0x1, 0x1);
        gbc.writeMem(0x7d8b, { 0x4e });
        gbc.writeMem(0xb833, { 0xf8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb6b6, gbc.sp());
        EXPECT(0x7d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb833));
        // 4E 00A3
        gbc.setState(0xd5b5, 0x3f2e, 0x1a00, 0x49dc, 0xad9b, 0x469e, 0x0, 0x1);
        gbc.writeMem(0x469e, { 0x24 });
        gbc.writeMem(0xd5b5, { 0x4e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3f2e, gbc.sp());
        EXPECT(0xd5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd5b5));
        // 4E 00A4
        gbc.setState(0xeb7c, 0xce29, 0x9f50, 0xc8e0, 0x621b, 0xb442, 0x1, 0x0);
        gbc.writeMem(0xb442, { 0x76 });
        gbc.writeMem(0xeb7c, { 0x4e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xce29, gbc.sp());
        EXPECT(0xeb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb442));
        EXPECT(0x4e, gbc.readMem(0xeb7c));
        // 4E 00A5
        gbc.setState(0x9488, 0x42b2, 0xae50, 0xbec, 0xdf1b, 0xe04e, 0x0, 0x1);
        gbc.writeMem(0x9488, { 0x4e });
        gbc.writeMem(0xe04e, { 0xf2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x42b2, gbc.sp());
        EXPECT(0x9489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9488));
        EXPECT(0xf2, gbc.readMem(0xe04e));
        // 4E 00A6
        gbc.setState(0xdb7, 0x6e8f, 0x5e40, 0x13e7, 0xdb72, 0x1c8b, 0x1, 0x1);
        gbc.writeMem(0xdb7, { 0x4e });
        gbc.writeMem(0x1c8b, { 0x8b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6e8f, gbc.sp());
        EXPECT(0xdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00A7
        gbc.setState(0x7c83, 0xf58a, 0xc450, 0x2f39, 0x7bc8, 0xe6a8, 0x0, 0x0);
        gbc.writeMem(0x7c83, { 0x4e });
        gbc.writeMem(0xe6a8, { 0x88 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf58a, gbc.sp());
        EXPECT(0x7c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe6a8));
        // 4E 00A8
        gbc.setState(0xe313, 0x6b60, 0x6050, 0x9792, 0xbab6, 0xb102, 0x0, 0x0);
        gbc.writeMem(0xb102, { 0xd5 });
        gbc.writeMem(0xe313, { 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6b60, gbc.sp());
        EXPECT(0xe314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb102));
        EXPECT(0x4e, gbc.readMem(0xe313));
        // 4E 00A9
        gbc.setState(0x93fb, 0x3cb, 0x3800, 0x2cdd, 0x30f2, 0x31ec, 0x0, 0x1);
        gbc.writeMem(0x31ec, { 0x89 });
        gbc.writeMem(0x93fb, { 0x4e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0x93fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x93fb));
        // 4E 00AA
        gbc.setState(0x4fa4, 0x1f42, 0x45d0, 0x9384, 0xaa42, 0x58a2, 0x0, 0x0);
        gbc.writeMem(0x4fa4, { 0x4e });
        gbc.writeMem(0x58a2, { 0x2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1f42, gbc.sp());
        EXPECT(0x4fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00AB
        gbc.setState(0x559b, 0xfe96, 0xb0b0, 0x12ab, 0xb103, 0xa30f, 0x0, 0x0);
        gbc.writeMem(0x559b, { 0x4e });
        gbc.writeMem(0xa30f, { 0x15 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfe96, gbc.sp());
        EXPECT(0x559c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa30f));
        // 4E 00AC
        gbc.setState(0x25c, 0xa91f, 0xf2a0, 0xeafc, 0xc2f2, 0x4e75, 0x1, 0x1);
        gbc.writeMem(0x25c, { 0x4e });
        gbc.writeMem(0x4e75, { 0xad });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0x25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00AD
        gbc.setState(0xa472, 0x367c, 0xd910, 0x2b1e, 0x1abd, 0x6ee9, 0x0, 0x1);
        gbc.writeMem(0x6ee9, { 0xb3 });
        gbc.writeMem(0xa472, { 0x4e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x367c, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa472));
        // 4E 00AE
        gbc.setState(0xeeac, 0x332c, 0x6050, 0xb41c, 0x7ad9, 0x667, 0x0, 0x0);
        gbc.writeMem(0x667, { 0x8f });
        gbc.writeMem(0xeeac, { 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x332c, gbc.sp());
        EXPECT(0xeead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xeeac));
        // 4E 00AF
        gbc.setState(0xc515, 0xc763, 0x99e0, 0xac25, 0xa5c, 0xfc70, 0x0, 0x1);
        gbc.writeMem(0xc515, { 0x4e });
        gbc.writeMem(0xfc70, { 0x4d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc763, gbc.sp());
        EXPECT(0xc516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc515));
        EXPECT(0x4d, gbc.readMem(0xfc70));
        // 4E 00B0
        gbc.setState(0xa353, 0x9fd4, 0x8470, 0x97b4, 0x175b, 0x4013, 0x0, 0x1);
        gbc.writeMem(0x4013, { 0xdb });
        gbc.writeMem(0xa353, { 0x4e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9fd4, gbc.sp());
        EXPECT(0xa354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa353));
        // 4E 00B1
        gbc.setState(0xa4af, 0xb349, 0x4670, 0x9f86, 0xe05e, 0x373c, 0x1, 0x0);
        gbc.writeMem(0x373c, { 0x48 });
        gbc.writeMem(0xa4af, { 0x4e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb349, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa4af));
        // 4E 00B2
        gbc.setState(0x2365, 0x6c7d, 0x9e20, 0x9310, 0x98f2, 0x708a, 0x0, 0x0);
        gbc.writeMem(0x2365, { 0x4e });
        gbc.writeMem(0x708a, { 0x2f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6c7d, gbc.sp());
        EXPECT(0x2366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00B3
        gbc.setState(0x1f3a, 0x3625, 0xfbe0, 0x3382, 0x1bbf, 0xf783, 0x0, 0x1);
        gbc.writeMem(0x1f3a, { 0x4e });
        gbc.writeMem(0xf783, { 0x72 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3625, gbc.sp());
        EXPECT(0x1f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xf783));
        // 4E 00B4
        gbc.setState(0x82cf, 0xc1f7, 0xb850, 0xe705, 0xeec, 0x1882, 0x0, 0x0);
        gbc.writeMem(0x1882, { 0xcb });
        gbc.writeMem(0x82cf, { 0x4e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc1f7, gbc.sp());
        EXPECT(0x82d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x82cf));
        // 4E 00B5
        gbc.setState(0x33bb, 0xcea2, 0x5cd0, 0x5d3e, 0xaf64, 0x555d, 0x1, 0x0);
        gbc.writeMem(0x33bb, { 0x4e });
        gbc.writeMem(0x555d, { 0xf4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcea2, gbc.sp());
        EXPECT(0x33bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00B6
        gbc.setState(0xb79c, 0x929a, 0x2200, 0x2e23, 0x8a14, 0xc721, 0x0, 0x0);
        gbc.writeMem(0xb79c, { 0x4e });
        gbc.writeMem(0xc721, { 0x30 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x929a, gbc.sp());
        EXPECT(0xb79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb79c));
        EXPECT(0x30, gbc.readMem(0xc721));
        // 4E 00B7
        gbc.setState(0x915a, 0xb96a, 0xef40, 0xb343, 0x9ba4, 0x37e5, 0x1, 0x0);
        gbc.writeMem(0x37e5, { 0xf4 });
        gbc.writeMem(0x915a, { 0x4e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb96a, gbc.sp());
        EXPECT(0x915b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x915a));
        // 4E 00B8
        gbc.setState(0x2649, 0x2850, 0x90b0, 0x3c41, 0x5bfd, 0x11db, 0x1, 0x1);
        gbc.writeMem(0x11db, { 0xbc });
        gbc.writeMem(0x2649, { 0x4e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0x264a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00B9
        gbc.setState(0x89a3, 0xe002, 0x6260, 0x2d21, 0xb3e6, 0x5f84, 0x0, 0x1);
        gbc.writeMem(0x5f84, { 0xc9 });
        gbc.writeMem(0x89a3, { 0x4e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe002, gbc.sp());
        EXPECT(0x89a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x89a3));
        // 4E 00BA
        gbc.setState(0x60c1, 0x2d75, 0x8860, 0xa612, 0xe20f, 0x9b54, 0x0, 0x1);
        gbc.writeMem(0x60c1, { 0x4e });
        gbc.writeMem(0x9b54, { 0x93 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2d75, gbc.sp());
        EXPECT(0x60c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9b54));
        // 4E 00BC
        gbc.setState(0x8d9e, 0xbe53, 0xc760, 0x54a6, 0x5ea, 0x4b20, 0x0, 0x0);
        gbc.writeMem(0x4b20, { 0x8c });
        gbc.writeMem(0x8d9e, { 0x4e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbe53, gbc.sp());
        EXPECT(0x8d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8d9e));
        // 4E 00BD
        gbc.setState(0xad4f, 0xb7ab, 0xf520, 0xba5, 0xe544, 0x671e, 0x1, 0x0);
        gbc.writeMem(0x671e, { 0xe });
        gbc.writeMem(0xad4f, { 0x4e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0xad50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xad4f));
        // 4E 00BE
        gbc.setState(0x4505, 0x43d, 0xe530, 0x47cc, 0x90d2, 0x4ff4, 0x1, 0x1);
        gbc.writeMem(0x4505, { 0x4e });
        gbc.writeMem(0x4ff4, { 0xc4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x43d, gbc.sp());
        EXPECT(0x4506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00BF
        gbc.setState(0x34ca, 0x8637, 0xe2c0, 0xb185, 0x7e63, 0x98f, 0x1, 0x0);
        gbc.writeMem(0x98f, { 0x40 });
        gbc.writeMem(0x34ca, { 0x4e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8637, gbc.sp());
        EXPECT(0x34cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00C0
        gbc.setState(0x4bb7, 0x609a, 0x1e40, 0xb2e9, 0x8463, 0x4aa1, 0x0, 0x1);
        gbc.writeMem(0x4aa1, { 0xaa });
        gbc.writeMem(0x4bb7, { 0x4e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x609a, gbc.sp());
        EXPECT(0x4bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00C1
        gbc.setState(0x79d1, 0xcd04, 0xdf60, 0xdb55, 0x92f8, 0xd754, 0x0, 0x0);
        gbc.writeMem(0x79d1, { 0x4e });
        gbc.writeMem(0xd754, { 0x3b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcd04, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd754));
        // 4E 00C2
        gbc.setState(0xce02, 0x70e4, 0x3fe0, 0xfe2f, 0x7b56, 0x2a8a, 0x1, 0x1);
        gbc.writeMem(0x2a8a, { 0x3b });
        gbc.writeMem(0xce02, { 0x4e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x70e4, gbc.sp());
        EXPECT(0xce03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xce02));
        // 4E 00C3
        gbc.setState(0xc30a, 0x5050, 0xebd0, 0x75a4, 0x6980, 0xe352, 0x0, 0x0);
        gbc.writeMem(0xc30a, { 0x4e });
        gbc.writeMem(0xe352, { 0x7d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5050, gbc.sp());
        EXPECT(0xc30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc30a));
        EXPECT(0x7d, gbc.readMem(0xe352));
        // 4E 00C4
        gbc.setState(0x2cb8, 0xaa9f, 0xf9b0, 0x2734, 0x73c1, 0x96b0, 0x1, 0x0);
        gbc.writeMem(0x2cb8, { 0x4e });
        gbc.writeMem(0x96b0, { 0x2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaa9f, gbc.sp());
        EXPECT(0x2cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x96b0));
        // 4E 00C6
        gbc.setState(0x72b9, 0x6620, 0xd050, 0x8b47, 0x40fd, 0xf102, 0x1, 0x1);
        gbc.writeMem(0x72b9, { 0x4e });
        gbc.writeMem(0xf102, { 0xf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6620, gbc.sp());
        EXPECT(0x72ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xf102));
        // 4E 00C7
        gbc.setState(0x6bd, 0xf3e4, 0xf650, 0x614d, 0x79a, 0xba20, 0x1, 0x0);
        gbc.writeMem(0x6bd, { 0x4e });
        gbc.writeMem(0xba20, { 0xad });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf3e4, gbc.sp());
        EXPECT(0x6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xba20));
        // 4E 00C8
        gbc.setState(0x10a6, 0x2d26, 0xe7f0, 0x1f8e, 0x1b4a, 0xfa24, 0x1, 0x1);
        gbc.writeMem(0x10a6, { 0x4e });
        gbc.writeMem(0xfa24, { 0x87 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2d26, gbc.sp());
        EXPECT(0x10a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xfa24));
        // 4E 00C9
        gbc.setState(0x5e5a, 0xea5e, 0x2d40, 0xd269, 0x2a83, 0x85af, 0x1, 0x0);
        gbc.writeMem(0x5e5a, { 0x4e });
        gbc.writeMem(0x85af, { 0xd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xea5e, gbc.sp());
        EXPECT(0x5e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x85af));
        // 4E 00CA
        gbc.setState(0xc34b, 0x693f, 0xf290, 0xad3f, 0x9d6, 0x6862, 0x1, 0x1);
        gbc.writeMem(0x6862, { 0xb5 });
        gbc.writeMem(0xc34b, { 0x4e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x693f, gbc.sp());
        EXPECT(0xc34c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc34b));
        // 4E 00CB
        gbc.setState(0x16d8, 0x5337, 0xd3d0, 0xae3f, 0x6319, 0xec93, 0x1, 0x1);
        gbc.writeMem(0x16d8, { 0x4e });
        gbc.writeMem(0xec93, { 0x3f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5337, gbc.sp());
        EXPECT(0x16d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xec93));
        // 4E 00CC
        gbc.setState(0x1a0c, 0x678b, 0xe160, 0x7f82, 0x35d8, 0xb2e2, 0x1, 0x1);
        gbc.writeMem(0x1a0c, { 0x4e });
        gbc.writeMem(0xb2e2, { 0x52 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x678b, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb2e2));
        // 4E 00CD
        gbc.setState(0xa51f, 0xf203, 0x100, 0xbc14, 0xfa7, 0xb01f, 0x1, 0x1);
        gbc.writeMem(0xa51f, { 0x4e });
        gbc.writeMem(0xb01f, { 0xe3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf203, gbc.sp());
        EXPECT(0xa520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa51f));
        EXPECT(0xe3, gbc.readMem(0xb01f));
        // 4E 00CE
        gbc.setState(0x8afa, 0x6c9f, 0x6e70, 0x92e7, 0xcfac, 0x8b30, 0x1, 0x1);
        gbc.writeMem(0x8afa, { 0x4e });
        gbc.writeMem(0x8b30, { 0xef });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6c9f, gbc.sp());
        EXPECT(0x8afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8afa));
        EXPECT(0xef, gbc.readMem(0x8b30));
        // 4E 00CF
        gbc.setState(0xa6c2, 0xd5d0, 0x9b10, 0x8588, 0x4c97, 0x146a, 0x1, 0x1);
        gbc.writeMem(0x146a, { 0x5 });
        gbc.writeMem(0xa6c2, { 0x4e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd5d0, gbc.sp());
        EXPECT(0xa6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa6c2));
        // 4E 00D0
        gbc.setState(0x746c, 0x9032, 0x9150, 0x3f34, 0x2cbe, 0x7687, 0x1, 0x0);
        gbc.writeMem(0x746c, { 0x4e });
        gbc.writeMem(0x7687, { 0x65 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9032, gbc.sp());
        EXPECT(0x746d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00D1
        gbc.setState(0x5cc, 0x1d88, 0x6640, 0x60ca, 0x70b0, 0x19c1, 0x1, 0x1);
        gbc.writeMem(0x5cc, { 0x4e });
        gbc.writeMem(0x19c1, { 0x5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1d88, gbc.sp());
        EXPECT(0x5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00D2
        gbc.setState(0xc8ce, 0x532d, 0x8fd0, 0x971, 0x8add, 0x6efb, 0x1, 0x1);
        gbc.writeMem(0x6efb, { 0x4e });
        gbc.writeMem(0xc8ce, { 0x4e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x532d, gbc.sp());
        EXPECT(0xc8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc8ce));
        // 4E 00D3
        gbc.setState(0x35fc, 0xa052, 0xf420, 0x4c8f, 0xee40, 0x5157, 0x0, 0x1);
        gbc.writeMem(0x35fc, { 0x4e });
        gbc.writeMem(0x5157, { 0x92 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa052, gbc.sp());
        EXPECT(0x35fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00D4
        gbc.setState(0xe9e0, 0xc3f9, 0xce70, 0x9f3f, 0x9b43, 0x55dd, 0x1, 0x1);
        gbc.writeMem(0x55dd, { 0x34 });
        gbc.writeMem(0xe9e0, { 0x4e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc3f9, gbc.sp());
        EXPECT(0xe9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe9e0));
        // 4E 00D5
        gbc.setState(0x9e65, 0x5d32, 0xa9f0, 0x2664, 0xd8, 0x80a6, 0x1, 0x1);
        gbc.writeMem(0x80a6, { 0xe8 });
        gbc.writeMem(0x9e65, { 0x4e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5d32, gbc.sp());
        EXPECT(0x9e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x80a6));
        EXPECT(0x4e, gbc.readMem(0x9e65));
        // 4E 00D6
        gbc.setState(0x4086, 0xf90, 0x5070, 0xcff1, 0xab5, 0x87d6, 0x0, 0x0);
        gbc.writeMem(0x4086, { 0x4e });
        gbc.writeMem(0x87d6, { 0x32 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf90, gbc.sp());
        EXPECT(0x4087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x87d6));
        // 4E 00D8
        gbc.setState(0xaf6c, 0x28a0, 0x2fb0, 0x40cf, 0x6d55, 0x72fc, 0x1, 0x0);
        gbc.writeMem(0x72fc, { 0x1c });
        gbc.writeMem(0xaf6c, { 0x4e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x28a0, gbc.sp());
        EXPECT(0xaf6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaf6c));
        // 4E 00D9
        gbc.setState(0xb472, 0x268e, 0x3190, 0x3f04, 0x723e, 0xaa88, 0x0, 0x1);
        gbc.writeMem(0xaa88, { 0xba });
        gbc.writeMem(0xb472, { 0x4e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x268e, gbc.sp());
        EXPECT(0xb473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xaa88));
        EXPECT(0x4e, gbc.readMem(0xb472));
        // 4E 00DB
        gbc.setState(0xa8fe, 0x1e29, 0x4ac0, 0x2667, 0x6027, 0xd0ad, 0x1, 0x0);
        gbc.writeMem(0xa8fe, { 0x4e });
        gbc.writeMem(0xd0ad, { 0xbd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1e29, gbc.sp());
        EXPECT(0xa8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa8fe));
        EXPECT(0xbd, gbc.readMem(0xd0ad));
        // 4E 00DC
        gbc.setState(0x1ab1, 0x58da, 0xbd20, 0xf95f, 0xa6fb, 0x5f3f, 0x0, 0x1);
        gbc.writeMem(0x1ab1, { 0x4e });
        gbc.writeMem(0x5f3f, { 0x69 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x58da, gbc.sp());
        EXPECT(0x1ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00DD
        gbc.setState(0x2f69, 0xf690, 0x870, 0x6a9f, 0x2ffc, 0xc741, 0x0, 0x0);
        gbc.writeMem(0x2f69, { 0x4e });
        gbc.writeMem(0xc741, { 0x9d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf690, gbc.sp());
        EXPECT(0x2f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc741));
        // 4E 00DF
        gbc.setState(0x8307, 0x903c, 0x8130, 0x34ea, 0xe746, 0xe5c9, 0x0, 0x1);
        gbc.writeMem(0x8307, { 0x4e });
        gbc.writeMem(0xe5c9, { 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x903c, gbc.sp());
        EXPECT(0x8308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8307));
        EXPECT(0x97, gbc.readMem(0xe5c9));
        // 4E 00E0
        gbc.setState(0x8854, 0xb692, 0x33c0, 0xc00a, 0x5752, 0x11b2, 0x1, 0x0);
        gbc.writeMem(0x11b2, { 0xf6 });
        gbc.writeMem(0x8854, { 0x4e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb692, gbc.sp());
        EXPECT(0x8855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8854));
        // 4E 00E1
        gbc.setState(0x5811, 0xe286, 0x2710, 0xa1c1, 0xc364, 0x1ba8, 0x1, 0x1);
        gbc.writeMem(0x1ba8, { 0xcd });
        gbc.writeMem(0x5811, { 0x4e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe286, gbc.sp());
        EXPECT(0x5812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00E2
        gbc.setState(0x1f91, 0xc52, 0x20f0, 0xf406, 0x2326, 0x6d57, 0x1, 0x0);
        gbc.writeMem(0x1f91, { 0x4e });
        gbc.writeMem(0x6d57, { 0x34 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc52, gbc.sp());
        EXPECT(0x1f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00E3
        gbc.setState(0x3fa5, 0xd6cf, 0x78a0, 0x4d29, 0x37a6, 0x5f29, 0x1, 0x0);
        gbc.writeMem(0x3fa5, { 0x4e });
        gbc.writeMem(0x5f29, { 0x28 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd6cf, gbc.sp());
        EXPECT(0x3fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00E4
        gbc.setState(0x953c, 0xb23d, 0x5350, 0x1cd9, 0x8312, 0xa0be, 0x1, 0x1);
        gbc.writeMem(0x953c, { 0x4e });
        gbc.writeMem(0xa0be, { 0xc4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb23d, gbc.sp());
        EXPECT(0x953d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x953c));
        EXPECT(0xc4, gbc.readMem(0xa0be));
        // 4E 00E5
        gbc.setState(0x2a6f, 0x5618, 0xe010, 0x6d2f, 0x161b, 0x17d1, 0x1, 0x1);
        gbc.writeMem(0x17d1, { 0xef });
        gbc.writeMem(0x2a6f, { 0x4e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5618, gbc.sp());
        EXPECT(0x2a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00E6
        gbc.setState(0x304b, 0xda5f, 0xcc80, 0x6308, 0xa5a0, 0x9b1f, 0x0, 0x1);
        gbc.writeMem(0x304b, { 0x4e });
        gbc.writeMem(0x9b1f, { 0xfd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xda5f, gbc.sp());
        EXPECT(0x304c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9b1f));
        // 4E 00E7
        gbc.setState(0x971f, 0x812c, 0x5550, 0x526b, 0x4923, 0xcf2f, 0x0, 0x1);
        gbc.writeMem(0x971f, { 0x4e });
        gbc.writeMem(0xcf2f, { 0x1b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x812c, gbc.sp());
        EXPECT(0x9720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x971f));
        EXPECT(0x1b, gbc.readMem(0xcf2f));
        // 4E 00E8
        gbc.setState(0x1904, 0xd2be, 0xdc80, 0x34ab, 0x2437, 0xe2ff, 0x0, 0x1);
        gbc.writeMem(0x1904, { 0x4e });
        gbc.writeMem(0xe2ff, { 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd2be, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe2ff));
        // 4E 00E9
        gbc.setState(0x282e, 0x5897, 0x2b40, 0x315c, 0xf6ec, 0x2bd4, 0x0, 0x1);
        gbc.writeMem(0x282e, { 0x4e });
        gbc.writeMem(0x2bd4, { 0x14 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5897, gbc.sp());
        EXPECT(0x282f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00EA
        gbc.setState(0x36c6, 0x930d, 0x9e00, 0xbd1a, 0x76f3, 0xa724, 0x0, 0x1);
        gbc.writeMem(0x36c6, { 0x4e });
        gbc.writeMem(0xa724, { 0xb6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x930d, gbc.sp());
        EXPECT(0x36c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa724));
        // 4E 00EB
        gbc.setState(0xef02, 0x886, 0xb2c0, 0x801c, 0x3f7a, 0x7aa3, 0x1, 0x0);
        gbc.writeMem(0x7aa3, { 0xf });
        gbc.writeMem(0xef02, { 0x4e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x886, gbc.sp());
        EXPECT(0xef03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xef02));
        // 4E 00EC
        gbc.setState(0xe811, 0xd2f6, 0x7270, 0xce04, 0x31fc, 0x7a8d, 0x0, 0x0);
        gbc.writeMem(0x7a8d, { 0x17 });
        gbc.writeMem(0xe811, { 0x4e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0xe812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe811));
        // 4E 00ED
        gbc.setState(0x368f, 0xf3e3, 0xec20, 0x1144, 0xfbc1, 0xe12b, 0x1, 0x1);
        gbc.writeMem(0x368f, { 0x4e });
        gbc.writeMem(0xe12b, { 0xa4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf3e3, gbc.sp());
        EXPECT(0x3690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe12b));
        // 4E 00EE
        gbc.setState(0x68b9, 0x52c9, 0xff0, 0xffc3, 0xa876, 0x4b8e, 0x0, 0x0);
        gbc.writeMem(0x4b8e, { 0x41 });
        gbc.writeMem(0x68b9, { 0x4e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x52c9, gbc.sp());
        EXPECT(0x68ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00EF
        gbc.setState(0x53de, 0x451a, 0x1ee0, 0x9f99, 0x38b8, 0x60bb, 0x0, 0x1);
        gbc.writeMem(0x53de, { 0x4e });
        gbc.writeMem(0x60bb, { 0xd3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x451a, gbc.sp());
        EXPECT(0x53df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00F0
        gbc.setState(0x1477, 0xe55d, 0x97b0, 0xded6, 0xed95, 0x2869, 0x0, 0x0);
        gbc.writeMem(0x1477, { 0x4e });
        gbc.writeMem(0x2869, { 0x69 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe55d, gbc.sp());
        EXPECT(0x1478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00F1
        gbc.setState(0x4e69, 0xb57b, 0x58f0, 0x1bc1, 0x863e, 0x4582, 0x0, 0x1);
        gbc.writeMem(0x4582, { 0xf2 });
        gbc.writeMem(0x4e69, { 0x4e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb57b, gbc.sp());
        EXPECT(0x4e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00F2
        gbc.setState(0xdec, 0x9cf, 0xb90, 0xca4c, 0xe56a, 0xe824, 0x0, 0x1);
        gbc.writeMem(0xdec, { 0x4e });
        gbc.writeMem(0xe824, { 0x9b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9cf, gbc.sp());
        EXPECT(0xded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe824));
        // 4E 00F3
        gbc.setState(0x2b9f, 0xd400, 0xde20, 0xe51b, 0x2425, 0x94c3, 0x0, 0x0);
        gbc.writeMem(0x2b9f, { 0x4e });
        gbc.writeMem(0x94c3, { 0xb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd400, gbc.sp());
        EXPECT(0x2ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x94c3));
        // 4E 00F4
        gbc.setState(0xc8ce, 0x1264, 0x6720, 0x3cbd, 0xa62a, 0x90e5, 0x0, 0x0);
        gbc.writeMem(0x90e5, { 0x22 });
        gbc.writeMem(0xc8ce, { 0x4e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1264, gbc.sp());
        EXPECT(0xc8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x90e5));
        EXPECT(0x4e, gbc.readMem(0xc8ce));
        // 4E 00F5
        gbc.setState(0x1b2f, 0xe600, 0xe9e0, 0xcfb4, 0x49e3, 0xd6a4, 0x0, 0x1);
        gbc.writeMem(0x1b2f, { 0x4e });
        gbc.writeMem(0xd6a4, { 0x8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe600, gbc.sp());
        EXPECT(0x1b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xd6a4));
        // 4E 00F6
        gbc.setState(0x9b9, 0x29ae, 0x6ce0, 0x6b6f, 0xe751, 0x5867, 0x1, 0x0);
        gbc.writeMem(0x9b9, { 0x4e });
        gbc.writeMem(0x5867, { 0xb2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x29ae, gbc.sp());
        EXPECT(0x9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00F7
        gbc.setState(0xa87a, 0xaba9, 0x5200, 0xb6ce, 0xa5d3, 0x272d, 0x1, 0x0);
        gbc.writeMem(0x272d, { 0xa1 });
        gbc.writeMem(0xa87a, { 0x4e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaba9, gbc.sp());
        EXPECT(0xa87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa87a));
        // 4E 00F8
        gbc.setState(0x9b33, 0x7125, 0x9300, 0x2620, 0x3082, 0xe74a, 0x0, 0x1);
        gbc.writeMem(0x9b33, { 0x4e });
        gbc.writeMem(0xe74a, { 0x54 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7125, gbc.sp());
        EXPECT(0x9b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9b33));
        EXPECT(0x54, gbc.readMem(0xe74a));
        // 4E 00F9
        gbc.setState(0x678d, 0x4f3e, 0x8440, 0xa400, 0xaf2f, 0x45ed, 0x0, 0x1);
        gbc.writeMem(0x45ed, { 0x73 });
        gbc.writeMem(0x678d, { 0x4e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4f3e, gbc.sp());
        EXPECT(0x678e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00FA
        gbc.setState(0x526b, 0x7f35, 0x88b0, 0x76c4, 0xeef7, 0xc12a, 0x1, 0x1);
        gbc.writeMem(0x526b, { 0x4e });
        gbc.writeMem(0xc12a, { 0x13 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7f35, gbc.sp());
        EXPECT(0x526c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc12a));
        // 4E 00FB
        gbc.setState(0xe9e, 0x8253, 0xfb20, 0xee68, 0xccec, 0xfd70, 0x0, 0x0);
        gbc.writeMem(0xe9e, { 0x4e });
        gbc.writeMem(0xfd70, { 0x22 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8253, gbc.sp());
        EXPECT(0xe9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xfd70));
        // 4E 00FC
        gbc.setState(0x7940, 0xb1dd, 0x6a30, 0x42a, 0xada3, 0x6097, 0x0, 0x0);
        gbc.writeMem(0x6097, { 0x4a });
        gbc.writeMem(0x7940, { 0x4e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb1dd, gbc.sp());
        EXPECT(0x7941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 00FD
        gbc.setState(0x6aeb, 0xcfc4, 0x1150, 0x588d, 0x236c, 0x817b, 0x1, 0x1);
        gbc.writeMem(0x6aeb, { 0x4e });
        gbc.writeMem(0x817b, { 0x87 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcfc4, gbc.sp());
        EXPECT(0x6aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x817b));
        // 4E 00FE
        gbc.setState(0x60b0, 0x520f, 0xf40, 0x1ce5, 0x1a84, 0x5822, 0x0, 0x1);
        gbc.writeMem(0x5822, { 0xe4 });
        gbc.writeMem(0x60b0, { 0x4e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x520f, gbc.sp());
        EXPECT(0x60b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 00FF
        gbc.setState(0xe9f4, 0x27ec, 0x9740, 0xef00, 0xae78, 0x4926, 0x1, 0x1);
        gbc.writeMem(0x4926, { 0xf2 });
        gbc.writeMem(0xe9f4, { 0x4e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x27ec, gbc.sp());
        EXPECT(0xe9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe9f4));
        // 4E 0100
        gbc.setState(0x368d, 0x9a59, 0x4700, 0xae8a, 0x589e, 0xb83a, 0x0, 0x0);
        gbc.writeMem(0x368d, { 0x4e });
        gbc.writeMem(0xb83a, { 0xa2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9a59, gbc.sp());
        EXPECT(0x368e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb83a));
        // 4E 0101
        gbc.setState(0x37e0, 0x65f5, 0xf2b0, 0x418c, 0x6fb, 0x370, 0x0, 0x0);
        gbc.writeMem(0x370, { 0xdf });
        gbc.writeMem(0x37e0, { 0x4e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x65f5, gbc.sp());
        EXPECT(0x37e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0102
        gbc.setState(0x6d94, 0x7d7, 0xb010, 0x2dfc, 0xa75, 0x8505, 0x0, 0x0);
        gbc.writeMem(0x6d94, { 0x4e });
        gbc.writeMem(0x8505, { 0x36 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7d7, gbc.sp());
        EXPECT(0x6d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8505));
        // 4E 0103
        gbc.setState(0xcc43, 0x7b9c, 0x3800, 0x74b6, 0x1ac7, 0x7945, 0x0, 0x0);
        gbc.writeMem(0x7945, { 0xa4 });
        gbc.writeMem(0xcc43, { 0x4e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7b9c, gbc.sp());
        EXPECT(0xcc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcc43));
        // 4E 0104
        gbc.setState(0x9ae8, 0xe78a, 0x63d0, 0xfdad, 0x6dac, 0x299b, 0x0, 0x0);
        gbc.writeMem(0x299b, { 0xcc });
        gbc.writeMem(0x9ae8, { 0x4e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe78a, gbc.sp());
        EXPECT(0x9ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9ae8));
        // 4E 0105
        gbc.setState(0xb97d, 0x7891, 0xc6b0, 0x5902, 0x41aa, 0x5e54, 0x0, 0x0);
        gbc.writeMem(0x5e54, { 0xe0 });
        gbc.writeMem(0xb97d, { 0x4e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7891, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb97d));
        // 4E 0106
        gbc.setState(0x3344, 0xc41d, 0xed0, 0x1482, 0x82fc, 0xc7a5, 0x1, 0x1);
        gbc.writeMem(0x3344, { 0x4e });
        gbc.writeMem(0xc7a5, { 0xf1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc41d, gbc.sp());
        EXPECT(0x3345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc7a5));
        // 4E 0107
        gbc.setState(0x198d, 0x674e, 0x54f0, 0xabd5, 0xde13, 0x4d94, 0x1, 0x1);
        gbc.writeMem(0x198d, { 0x4e });
        gbc.writeMem(0x4d94, { 0x88 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x674e, gbc.sp());
        EXPECT(0x198e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0108
        gbc.setState(0xd685, 0xbcd4, 0xf810, 0xdf25, 0x4e6c, 0x9f13, 0x0, 0x1);
        gbc.writeMem(0x9f13, { 0xa9 });
        gbc.writeMem(0xd685, { 0x4e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0xd686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x9f13));
        EXPECT(0x4e, gbc.readMem(0xd685));
        // 4E 0109
        gbc.setState(0x6784, 0x2619, 0x7b30, 0x94f1, 0x28c1, 0xb0b5, 0x1, 0x0);
        gbc.writeMem(0x6784, { 0x4e });
        gbc.writeMem(0xb0b5, { 0x21 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2619, gbc.sp());
        EXPECT(0x6785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb0b5));
        // 4E 010A
        gbc.setState(0x676, 0x78aa, 0xeb00, 0xfa7e, 0x4268, 0x4e9c, 0x1, 0x1);
        gbc.writeMem(0x676, { 0x4e });
        gbc.writeMem(0x4e9c, { 0xc0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x78aa, gbc.sp());
        EXPECT(0x677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 010B
        gbc.setState(0xd7bb, 0x8631, 0xd9b0, 0x6d4b, 0x9cf4, 0x60af, 0x0, 0x1);
        gbc.writeMem(0x60af, { 0x1b });
        gbc.writeMem(0xd7bb, { 0x4e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8631, gbc.sp());
        EXPECT(0xd7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd7bb));
        // 4E 010C
        gbc.setState(0x8299, 0x9994, 0x3b60, 0x8f7a, 0x8b7e, 0xab0d, 0x0, 0x1);
        gbc.writeMem(0x8299, { 0x4e });
        gbc.writeMem(0xab0d, { 0x99 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9994, gbc.sp());
        EXPECT(0x829a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8299));
        EXPECT(0x99, gbc.readMem(0xab0d));
        // 4E 010D
        gbc.setState(0x5e49, 0x3730, 0x3fe0, 0x8dae, 0x4c84, 0x14c3, 0x0, 0x1);
        gbc.writeMem(0x14c3, { 0x69 });
        gbc.writeMem(0x5e49, { 0x4e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3730, gbc.sp());
        EXPECT(0x5e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 010E
        gbc.setState(0x38da, 0xdc52, 0x9970, 0x69e, 0xee7c, 0x6526, 0x1, 0x1);
        gbc.writeMem(0x38da, { 0x4e });
        gbc.writeMem(0x6526, { 0xda });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdc52, gbc.sp());
        EXPECT(0x38db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0111
        gbc.setState(0xcc57, 0x1fdf, 0xd910, 0xb5e1, 0x963b, 0xdc4f, 0x0, 0x0);
        gbc.writeMem(0xcc57, { 0x4e });
        gbc.writeMem(0xdc4f, { 0x5a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1fdf, gbc.sp());
        EXPECT(0xcc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcc57));
        EXPECT(0x5a, gbc.readMem(0xdc4f));
        // 4E 0112
        gbc.setState(0xbe26, 0xcc6e, 0xb4a0, 0x8d03, 0x42e2, 0x9155, 0x0, 0x0);
        gbc.writeMem(0x9155, { 0xc });
        gbc.writeMem(0xbe26, { 0x4e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcc6e, gbc.sp());
        EXPECT(0xbe27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9155));
        EXPECT(0x4e, gbc.readMem(0xbe26));
        // 4E 0113
        gbc.setState(0x6e1c, 0xf04f, 0x6d80, 0xd0f8, 0x7f18, 0xff7c, 0x0, 0x0);
        gbc.writeMem(0x6e1c, { 0x4e });
        gbc.writeMem(0xff7c, { 0x9c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf04f, gbc.sp());
        EXPECT(0x6e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xff7c));
        // 4E 0114
        gbc.setState(0xc370, 0x7bf, 0x54f0, 0xcf8f, 0xa605, 0xb606, 0x1, 0x1);
        gbc.writeMem(0xb606, { 0x9d });
        gbc.writeMem(0xc370, { 0x4e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7bf, gbc.sp());
        EXPECT(0xc371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb606));
        EXPECT(0x4e, gbc.readMem(0xc370));
        // 4E 0115
        gbc.setState(0xefed, 0xd2b6, 0x2760, 0x67a7, 0xcbac, 0xfb1d, 0x0, 0x0);
        gbc.writeMem(0xefed, { 0x4e });
        gbc.writeMem(0xfb1d, { 0x23 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd2b6, gbc.sp());
        EXPECT(0xefee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xefed));
        EXPECT(0x23, gbc.readMem(0xfb1d));
        // 4E 0117
        gbc.setState(0xa00f, 0x7baf, 0x2e70, 0xd870, 0x53eb, 0x154b, 0x0, 0x1);
        gbc.writeMem(0x154b, { 0x92 });
        gbc.writeMem(0xa00f, { 0x4e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7baf, gbc.sp());
        EXPECT(0xa010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa00f));
        // 4E 0119
        gbc.setState(0x6bc3, 0xd5fb, 0xd7c0, 0x844a, 0x4ab6, 0xef82, 0x0, 0x1);
        gbc.writeMem(0x6bc3, { 0x4e });
        gbc.writeMem(0xef82, { 0x7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd5fb, gbc.sp());
        EXPECT(0x6bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xef82));
        // 4E 011A
        gbc.setState(0x6d05, 0xd0bf, 0x8170, 0xf64, 0x232b, 0xec41, 0x0, 0x0);
        gbc.writeMem(0x6d05, { 0x4e });
        gbc.writeMem(0xec41, { 0x37 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd0bf, gbc.sp());
        EXPECT(0x6d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xec41));
        // 4E 011B
        gbc.setState(0xa9d7, 0x4a1d, 0xc3e0, 0x5394, 0x18cb, 0x7fe7, 0x0, 0x1);
        gbc.writeMem(0x7fe7, { 0xad });
        gbc.writeMem(0xa9d7, { 0x4e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4a1d, gbc.sp());
        EXPECT(0xa9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa9d7));
        // 4E 011C
        gbc.setState(0x319, 0x54f5, 0x8550, 0x51ba, 0x76ac, 0x7a35, 0x1, 0x0);
        gbc.writeMem(0x319, { 0x4e });
        gbc.writeMem(0x7a35, { 0xde });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x54f5, gbc.sp());
        EXPECT(0x31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 011D
        gbc.setState(0x17bb, 0xb47c, 0x7730, 0x9cc7, 0x6de8, 0x9f6e, 0x0, 0x1);
        gbc.writeMem(0x17bb, { 0x4e });
        gbc.writeMem(0x9f6e, { 0xe0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb47c, gbc.sp());
        EXPECT(0x17bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9f6e));
        // 4E 011E
        gbc.setState(0xd990, 0x7386, 0x1110, 0xc1b1, 0xef10, 0x6a11, 0x1, 0x0);
        gbc.writeMem(0x6a11, { 0xc });
        gbc.writeMem(0xd990, { 0x4e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7386, gbc.sp());
        EXPECT(0xd991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd990));
        // 4E 011F
        gbc.setState(0x30e8, 0x8c4c, 0x9920, 0xabc8, 0x27, 0xdee5, 0x1, 0x0);
        gbc.writeMem(0x30e8, { 0x4e });
        gbc.writeMem(0xdee5, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8c4c, gbc.sp());
        EXPECT(0x30e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdee5));
        // 4E 0120
        gbc.setState(0x98a, 0xf503, 0xae60, 0x417b, 0xeb59, 0x6d55, 0x0, 0x0);
        gbc.writeMem(0x98a, { 0x4e });
        gbc.writeMem(0x6d55, { 0xfb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf503, gbc.sp());
        EXPECT(0x98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0121
        gbc.setState(0x1720, 0xd2c5, 0x8450, 0xb093, 0x63fd, 0xdafa, 0x1, 0x0);
        gbc.writeMem(0x1720, { 0x4e });
        gbc.writeMem(0xdafa, { 0xf7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd2c5, gbc.sp());
        EXPECT(0x1721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xdafa));
        // 4E 0122
        gbc.setState(0x5bd5, 0xa0f5, 0xc630, 0x4e61, 0x4daa, 0x2c1f, 0x1, 0x1);
        gbc.writeMem(0x2c1f, { 0x18 });
        gbc.writeMem(0x5bd5, { 0x4e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa0f5, gbc.sp());
        EXPECT(0x5bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0123
        gbc.setState(0x363, 0x6ac, 0xf360, 0x7197, 0x8dd4, 0x7d13, 0x1, 0x1);
        gbc.writeMem(0x363, { 0x4e });
        gbc.writeMem(0x7d13, { 0x9e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6ac, gbc.sp());
        EXPECT(0x364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0124
        gbc.setState(0x3603, 0x750f, 0xcce0, 0x70ce, 0xcb65, 0x9517, 0x1, 0x0);
        gbc.writeMem(0x3603, { 0x4e });
        gbc.writeMem(0x9517, { 0xb3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x750f, gbc.sp());
        EXPECT(0x3604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9517));
        // 4E 0125
        gbc.setState(0xc3b9, 0xa2af, 0x4830, 0x3bd2, 0x1857, 0x657b, 0x1, 0x1);
        gbc.writeMem(0x657b, { 0xe });
        gbc.writeMem(0xc3b9, { 0x4e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa2af, gbc.sp());
        EXPECT(0xc3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc3b9));
        // 4E 0126
        gbc.setState(0x3ea7, 0x25ef, 0x6d80, 0x8aac, 0xb4bb, 0x7370, 0x0, 0x1);
        gbc.writeMem(0x3ea7, { 0x4e });
        gbc.writeMem(0x7370, { 0x66 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x25ef, gbc.sp());
        EXPECT(0x3ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0127
        gbc.setState(0xb80b, 0x7be5, 0xe600, 0x6e19, 0x1cdc, 0x4e9d, 0x0, 0x1);
        gbc.writeMem(0x4e9d, { 0xb });
        gbc.writeMem(0xb80b, { 0x4e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7be5, gbc.sp());
        EXPECT(0xb80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb80b));
        // 4E 0128
        gbc.setState(0xba4e, 0x2d3b, 0xd530, 0x4236, 0xae6a, 0xfeb7, 0x1, 0x0);
        gbc.writeMem(0xba4e, { 0x4e });
        gbc.writeMem(0xfeb7, { 0x95 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d3b, gbc.sp());
        EXPECT(0xba4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xba4e));
        EXPECT(0x95, gbc.readMem(0xfeb7));
        // 4E 0129
        gbc.setState(0x6962, 0xd0e2, 0xdcd0, 0x5b47, 0x6aea, 0xfa2e, 0x0, 0x1);
        gbc.writeMem(0x6962, { 0x4e });
        gbc.writeMem(0xfa2e, { 0xb9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd0e2, gbc.sp());
        EXPECT(0x6963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xfa2e));
        // 4E 012A
        gbc.setState(0x9a5e, 0xe84a, 0xc3a0, 0x7b3c, 0x2725, 0x9345, 0x1, 0x0);
        gbc.writeMem(0x9345, { 0x4a });
        gbc.writeMem(0x9a5e, { 0x4e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe84a, gbc.sp());
        EXPECT(0x9a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9345));
        EXPECT(0x4e, gbc.readMem(0x9a5e));
        // 4E 012B
        gbc.setState(0xb18e, 0x835d, 0xbef0, 0x44c6, 0xb4d0, 0xc1d8, 0x1, 0x1);
        gbc.writeMem(0xb18e, { 0x4e });
        gbc.writeMem(0xc1d8, { 0xd6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x835d, gbc.sp());
        EXPECT(0xb18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb18e));
        EXPECT(0xd6, gbc.readMem(0xc1d8));
        // 4E 012C
        gbc.setState(0x62d5, 0x7d63, 0x7040, 0x229c, 0x3700, 0x3a23, 0x0, 0x0);
        gbc.writeMem(0x3a23, { 0xbd });
        gbc.writeMem(0x62d5, { 0x4e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7d63, gbc.sp());
        EXPECT(0x62d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 012D
        gbc.setState(0xbec9, 0xf053, 0x2ac0, 0xfcf5, 0xaaf2, 0x48a4, 0x1, 0x1);
        gbc.writeMem(0x48a4, { 0xd0 });
        gbc.writeMem(0xbec9, { 0x4e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf053, gbc.sp());
        EXPECT(0xbeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbec9));
        // 4E 012E
        gbc.setState(0x7c6e, 0x327a, 0x1590, 0xd403, 0xe4f3, 0x3882, 0x0, 0x1);
        gbc.writeMem(0x3882, { 0xe });
        gbc.writeMem(0x7c6e, { 0x4e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x327a, gbc.sp());
        EXPECT(0x7c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 012F
        gbc.setState(0x7a9a, 0x9bb4, 0xe2f0, 0xfaab, 0xefc8, 0x6859, 0x1, 0x1);
        gbc.writeMem(0x6859, { 0x6d });
        gbc.writeMem(0x7a9a, { 0x4e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9bb4, gbc.sp());
        EXPECT(0x7a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0130
        gbc.setState(0xcc6b, 0x18a2, 0x55c0, 0x57c6, 0x35af, 0x7b7d, 0x0, 0x0);
        gbc.writeMem(0x7b7d, { 0x35 });
        gbc.writeMem(0xcc6b, { 0x4e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x18a2, gbc.sp());
        EXPECT(0xcc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcc6b));
        // 4E 0131
        gbc.setState(0xf0d, 0x157c, 0x60b0, 0x3c9c, 0x82f8, 0x67d2, 0x1, 0x1);
        gbc.writeMem(0xf0d, { 0x4e });
        gbc.writeMem(0x67d2, { 0xf4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x157c, gbc.sp());
        EXPECT(0xf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0132
        gbc.setState(0x1dda, 0x70f0, 0xe940, 0xe552, 0x1b6c, 0x3be, 0x0, 0x1);
        gbc.writeMem(0x3be, { 0x58 });
        gbc.writeMem(0x1dda, { 0x4e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x70f0, gbc.sp());
        EXPECT(0x1ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0133
        gbc.setState(0x967f, 0xef6b, 0xedf0, 0x134, 0xec1d, 0x2e76, 0x0, 0x1);
        gbc.writeMem(0x2e76, { 0x42 });
        gbc.writeMem(0x967f, { 0x4e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xef6b, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x967f));
        // 4E 0134
        gbc.setState(0x3b0a, 0x1c6e, 0xbeb0, 0x3fa0, 0xfc80, 0x4909, 0x1, 0x1);
        gbc.writeMem(0x3b0a, { 0x4e });
        gbc.writeMem(0x4909, { 0x6c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1c6e, gbc.sp());
        EXPECT(0x3b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0135
        gbc.setState(0xa2ed, 0xe9b9, 0x8790, 0xe47b, 0xced4, 0xb3e5, 0x1, 0x1);
        gbc.writeMem(0xa2ed, { 0x4e });
        gbc.writeMem(0xb3e5, { 0xe6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe9b9, gbc.sp());
        EXPECT(0xa2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa2ed));
        EXPECT(0xe6, gbc.readMem(0xb3e5));
        // 4E 0136
        gbc.setState(0x933c, 0xfbc7, 0xc720, 0xb932, 0x31f9, 0x6afb, 0x0, 0x1);
        gbc.writeMem(0x6afb, { 0xfd });
        gbc.writeMem(0x933c, { 0x4e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfbc7, gbc.sp());
        EXPECT(0x933d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x933c));
        // 4E 0137
        gbc.setState(0x56ff, 0x7924, 0x1a90, 0x1a58, 0xda47, 0xefdc, 0x1, 0x0);
        gbc.writeMem(0x56ff, { 0x4e });
        gbc.writeMem(0xefdc, { 0x3c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7924, gbc.sp());
        EXPECT(0x5700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xefdc));
        // 4E 0138
        gbc.setState(0x3a7b, 0x24b3, 0x6ad0, 0x3c60, 0xff26, 0x185, 0x0, 0x1);
        gbc.writeMem(0x185, { 0x18 });
        gbc.writeMem(0x3a7b, { 0x4e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x24b3, gbc.sp());
        EXPECT(0x3a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0139
        gbc.setState(0x7daf, 0x8f3b, 0xf710, 0x41d0, 0xdab0, 0xb129, 0x0, 0x1);
        gbc.writeMem(0x7daf, { 0x4e });
        gbc.writeMem(0xb129, { 0x7e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8f3b, gbc.sp());
        EXPECT(0x7db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb129));
        // 4E 013A
        gbc.setState(0xb68a, 0xe0, 0xa810, 0x638f, 0x44cd, 0xa5e8, 0x1, 0x0);
        gbc.writeMem(0xa5e8, { 0xef });
        gbc.writeMem(0xb68a, { 0x4e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe0, gbc.sp());
        EXPECT(0xb68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa5e8));
        EXPECT(0x4e, gbc.readMem(0xb68a));
        // 4E 013B
        gbc.setState(0x6375, 0xd42c, 0x96f0, 0x17f3, 0xe11, 0x2e25, 0x0, 0x1);
        gbc.writeMem(0x2e25, { 0xce });
        gbc.writeMem(0x6375, { 0x4e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd42c, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 013C
        gbc.setState(0x6d20, 0x77a9, 0xda50, 0x4791, 0xd3e8, 0x3719, 0x0, 0x0);
        gbc.writeMem(0x3719, { 0xb0 });
        gbc.writeMem(0x6d20, { 0x4e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x77a9, gbc.sp());
        EXPECT(0x6d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 013E
        gbc.setState(0x275b, 0xfa5f, 0x5460, 0xfe2c, 0x1856, 0xd14b, 0x1, 0x0);
        gbc.writeMem(0x275b, { 0x4e });
        gbc.writeMem(0xd14b, { 0xdc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfa5f, gbc.sp());
        EXPECT(0x275c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd14b));
        // 4E 013F
        gbc.setState(0x11aa, 0xed45, 0x2910, 0xb21b, 0x6ef5, 0x64, 0x1, 0x1);
        gbc.writeMem(0x64, { 0x71 });
        gbc.writeMem(0x11aa, { 0x4e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xed45, gbc.sp());
        EXPECT(0x11ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0140
        gbc.setState(0xb13a, 0xda81, 0xe100, 0xe9e8, 0x7b7c, 0x9cbf, 0x1, 0x0);
        gbc.writeMem(0x9cbf, { 0xdb });
        gbc.writeMem(0xb13a, { 0x4e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xda81, gbc.sp());
        EXPECT(0xb13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x9cbf));
        EXPECT(0x4e, gbc.readMem(0xb13a));
        // 4E 0141
        gbc.setState(0x91e0, 0x7506, 0xe570, 0x9fa0, 0x2d23, 0xd377, 0x1, 0x1);
        gbc.writeMem(0x91e0, { 0x4e });
        gbc.writeMem(0xd377, { 0x6d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7506, gbc.sp());
        EXPECT(0x91e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x91e0));
        EXPECT(0x6d, gbc.readMem(0xd377));
        // 4E 0142
        gbc.setState(0x3e7d, 0x4c7b, 0x2970, 0xd78f, 0xda2f, 0xc908, 0x0, 0x0);
        gbc.writeMem(0x3e7d, { 0x4e });
        gbc.writeMem(0xc908, { 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4c7b, gbc.sp());
        EXPECT(0x3e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc908));
        // 4E 0144
        gbc.setState(0x5b06, 0xc977, 0x7c80, 0x2a42, 0x76e3, 0x29c7, 0x1, 0x1);
        gbc.writeMem(0x29c7, { 0xc4 });
        gbc.writeMem(0x5b06, { 0x4e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc977, gbc.sp());
        EXPECT(0x5b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0145
        gbc.setState(0x121b, 0x2753, 0x1ac0, 0x4398, 0x2399, 0x11be, 0x0, 0x0);
        gbc.writeMem(0x11be, { 0x2b });
        gbc.writeMem(0x121b, { 0x4e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2753, gbc.sp());
        EXPECT(0x121c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0146
        gbc.setState(0x4328, 0x67c3, 0x7410, 0x6231, 0xb4f2, 0x108e, 0x1, 0x0);
        gbc.writeMem(0x108e, { 0x9f });
        gbc.writeMem(0x4328, { 0x4e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x67c3, gbc.sp());
        EXPECT(0x4329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0147
        gbc.setState(0x1451, 0x1c42, 0xb030, 0x9d03, 0x696c, 0x5fb1, 0x1, 0x0);
        gbc.writeMem(0x1451, { 0x4e });
        gbc.writeMem(0x5fb1, { 0xaf });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1c42, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0148
        gbc.setState(0x8f31, 0xf0d0, 0x6030, 0x8098, 0xd150, 0x1b62, 0x0, 0x0);
        gbc.writeMem(0x1b62, { 0xcc });
        gbc.writeMem(0x8f31, { 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf0d0, gbc.sp());
        EXPECT(0x8f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8f31));
        // 4E 014A
        gbc.setState(0xa826, 0x5e3a, 0x8540, 0x8747, 0x5fbc, 0xff0c, 0x0, 0x1);
        gbc.writeMem(0xa826, { 0x4e });
        gbc.writeMem(0xff0c, { 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5e3a, gbc.sp());
        EXPECT(0xa827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa826));
        EXPECT(0x94, gbc.readMem(0xff0c));
        // 4E 014B
        gbc.setState(0x7f5e, 0xe9f0, 0xc340, 0x256c, 0x68db, 0x2843, 0x1, 0x0);
        gbc.writeMem(0x2843, { 0xbe });
        gbc.writeMem(0x7f5e, { 0x4e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe9f0, gbc.sp());
        EXPECT(0x7f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 014C
        gbc.setState(0x37bd, 0x970, 0xe090, 0xb2c, 0x6b03, 0x62cb, 0x0, 0x1);
        gbc.writeMem(0x37bd, { 0x4e });
        gbc.writeMem(0x62cb, { 0x1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x970, gbc.sp());
        EXPECT(0x37be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 014D
        gbc.setState(0x5047, 0x8d10, 0x77e0, 0x8a9a, 0xd960, 0xf3a, 0x1, 0x0);
        gbc.writeMem(0xf3a, { 0x3b });
        gbc.writeMem(0x5047, { 0x4e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8d10, gbc.sp());
        EXPECT(0x5048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 014E
        gbc.setState(0x884f, 0x127b, 0xdd40, 0x31f0, 0x6d64, 0x9cc8, 0x0, 0x1);
        gbc.writeMem(0x884f, { 0x4e });
        gbc.writeMem(0x9cc8, { 0xa7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x127b, gbc.sp());
        EXPECT(0x8850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x884f));
        EXPECT(0xa7, gbc.readMem(0x9cc8));
        // 4E 014F
        gbc.setState(0x9820, 0xff0c, 0x2290, 0x4ca5, 0xe1d5, 0xe40c, 0x0, 0x1);
        gbc.writeMem(0x9820, { 0x4e });
        gbc.writeMem(0xe40c, { 0x3b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xff0c, gbc.sp());
        EXPECT(0x9821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9820));
        EXPECT(0x3b, gbc.readMem(0xe40c));
        // 4E 0150
        gbc.setState(0x551c, 0xa4c8, 0x6980, 0x7612, 0x4b16, 0x4350, 0x1, 0x0);
        gbc.writeMem(0x4350, { 0x22 });
        gbc.writeMem(0x551c, { 0x4e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa4c8, gbc.sp());
        EXPECT(0x551d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0151
        gbc.setState(0x8965, 0x32a2, 0xd820, 0x11f, 0x4137, 0x15a9, 0x0, 0x1);
        gbc.writeMem(0x15a9, { 0xe6 });
        gbc.writeMem(0x8965, { 0x4e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x32a2, gbc.sp());
        EXPECT(0x8966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8965));
        // 4E 0152
        gbc.setState(0xdde1, 0xe4b6, 0x8e70, 0x2a35, 0x31a1, 0x9853, 0x0, 0x1);
        gbc.writeMem(0x9853, { 0x57 });
        gbc.writeMem(0xdde1, { 0x4e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe4b6, gbc.sp());
        EXPECT(0xdde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9853));
        EXPECT(0x4e, gbc.readMem(0xdde1));
        // 4E 0153
        gbc.setState(0x66bd, 0xed31, 0x86a0, 0x990f, 0x5ebc, 0xccc3, 0x0, 0x1);
        gbc.writeMem(0x66bd, { 0x4e });
        gbc.writeMem(0xccc3, { 0xf2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xed31, gbc.sp());
        EXPECT(0x66be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xccc3));
        // 4E 0154
        gbc.setState(0x6d18, 0x7e55, 0x38b0, 0x53b, 0xcc14, 0xa261, 0x1, 0x1);
        gbc.writeMem(0x6d18, { 0x4e });
        gbc.writeMem(0xa261, { 0x93 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7e55, gbc.sp());
        EXPECT(0x6d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa261));
        // 4E 0155
        gbc.setState(0xbe0f, 0xc71b, 0xc430, 0xfd2f, 0x94e5, 0x640a, 0x0, 0x1);
        gbc.writeMem(0x640a, { 0xbe });
        gbc.writeMem(0xbe0f, { 0x4e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc71b, gbc.sp());
        EXPECT(0xbe10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbe0f));
        // 4E 0156
        gbc.setState(0x29d3, 0xf557, 0x9c50, 0xe6b8, 0xb725, 0x9a4b, 0x0, 0x0);
        gbc.writeMem(0x29d3, { 0x4e });
        gbc.writeMem(0x9a4b, { 0xdf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf557, gbc.sp());
        EXPECT(0x29d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9a4b));
        // 4E 0157
        gbc.setState(0x1da0, 0xf0b8, 0xd3e0, 0x76ab, 0xf534, 0xe557, 0x1, 0x0);
        gbc.writeMem(0x1da0, { 0x4e });
        gbc.writeMem(0xe557, { 0x83 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf0b8, gbc.sp());
        EXPECT(0x1da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xe557));
        // 4E 0158
        gbc.setState(0x66bd, 0xe8b8, 0x92f0, 0x3833, 0xb68b, 0xc6ba, 0x0, 0x0);
        gbc.writeMem(0x66bd, { 0x4e });
        gbc.writeMem(0xc6ba, { 0xff });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe8b8, gbc.sp());
        EXPECT(0x66be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc6ba));
        // 4E 0159
        gbc.setState(0x4e5b, 0xde13, 0xdcb0, 0x4f61, 0x1cc4, 0x738e, 0x0, 0x1);
        gbc.writeMem(0x4e5b, { 0x4e });
        gbc.writeMem(0x738e, { 0xbc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xde13, gbc.sp());
        EXPECT(0x4e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 015A
        gbc.setState(0x9f1, 0x8727, 0x1db0, 0xb773, 0xc483, 0x9aca, 0x0, 0x0);
        gbc.writeMem(0x9f1, { 0x4e });
        gbc.writeMem(0x9aca, { 0x8b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8727, gbc.sp());
        EXPECT(0x9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x9aca));
        // 4E 015B
        gbc.setState(0x2857, 0xa30d, 0x2650, 0x6095, 0xddc, 0xfabe, 0x0, 0x0);
        gbc.writeMem(0x2857, { 0x4e });
        gbc.writeMem(0xfabe, { 0x8d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa30d, gbc.sp());
        EXPECT(0x2858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xfabe));
        // 4E 015C
        gbc.setState(0xad4c, 0x77dd, 0xce10, 0xeaf4, 0x70e0, 0xd3af, 0x0, 0x1);
        gbc.writeMem(0xad4c, { 0x4e });
        gbc.writeMem(0xd3af, { 0xa3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x77dd, gbc.sp());
        EXPECT(0xad4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xad4c));
        EXPECT(0xa3, gbc.readMem(0xd3af));
        // 4E 015D
        gbc.setState(0x556a, 0x5e1a, 0xb1a0, 0xf2f7, 0xf628, 0x5b40, 0x1, 0x0);
        gbc.writeMem(0x556a, { 0x4e });
        gbc.writeMem(0x5b40, { 0x1b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5e1a, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 015E
        gbc.setState(0x2af7, 0x503a, 0xfca0, 0x84fd, 0xb5d2, 0x7e2e, 0x1, 0x1);
        gbc.writeMem(0x2af7, { 0x4e });
        gbc.writeMem(0x7e2e, { 0x83 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x503a, gbc.sp());
        EXPECT(0x2af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 015F
        gbc.setState(0xb493, 0x5d76, 0x2b20, 0x3db0, 0x70d5, 0xecc2, 0x0, 0x1);
        gbc.writeMem(0xb493, { 0x4e });
        gbc.writeMem(0xecc2, { 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5d76, gbc.sp());
        EXPECT(0xb494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb493));
        EXPECT(0x53, gbc.readMem(0xecc2));
        // 4E 0160
        gbc.setState(0xc679, 0xf00d, 0xe00, 0x955d, 0xd2af, 0xfc3e, 0x0, 0x1);
        gbc.writeMem(0xc679, { 0x4e });
        gbc.writeMem(0xfc3e, { 0x81 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf00d, gbc.sp());
        EXPECT(0xc67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc679));
        EXPECT(0x81, gbc.readMem(0xfc3e));
        // 4E 0161
        gbc.setState(0xadec, 0xb9dd, 0xe360, 0x5b2c, 0xad3d, 0xf1d5, 0x1, 0x0);
        gbc.writeMem(0xadec, { 0x4e });
        gbc.writeMem(0xf1d5, { 0x46 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb9dd, gbc.sp());
        EXPECT(0xaded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xadec));
        EXPECT(0x46, gbc.readMem(0xf1d5));
        // 4E 0162
        gbc.setState(0x2674, 0x3ccb, 0xb6f0, 0x4ff0, 0x7272, 0xe565, 0x1, 0x1);
        gbc.writeMem(0x2674, { 0x4e });
        gbc.writeMem(0xe565, { 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3ccb, gbc.sp());
        EXPECT(0x2675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe565));
        // 4E 0163
        gbc.setState(0x478d, 0x6872, 0x6560, 0x9086, 0xe4ba, 0xb9de, 0x1, 0x1);
        gbc.writeMem(0x478d, { 0x4e });
        gbc.writeMem(0xb9de, { 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6872, gbc.sp());
        EXPECT(0x478e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb9de));
        // 4E 0164
        gbc.setState(0xc52e, 0xaf45, 0xd4a0, 0x2bc3, 0xe6b4, 0xfb20, 0x0, 0x0);
        gbc.writeMem(0xc52e, { 0x4e });
        gbc.writeMem(0xfb20, { 0x1f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaf45, gbc.sp());
        EXPECT(0xc52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc52e));
        EXPECT(0x1f, gbc.readMem(0xfb20));
        // 4E 0165
        gbc.setState(0x8b19, 0xee, 0xc130, 0x6a95, 0x8161, 0xa873, 0x0, 0x0);
        gbc.writeMem(0x8b19, { 0x4e });
        gbc.writeMem(0xa873, { 0x44 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xee, gbc.sp());
        EXPECT(0x8b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8b19));
        EXPECT(0x44, gbc.readMem(0xa873));
        // 4E 0167
        gbc.setState(0x147, 0x7e5c, 0x5440, 0x4eb, 0x390e, 0x5de8, 0x0, 0x1);
        gbc.writeMem(0x147, { 0x4e });
        gbc.writeMem(0x5de8, { 0x7b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7e5c, gbc.sp());
        EXPECT(0x148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0168
        gbc.setState(0x76be, 0x655c, 0x96b0, 0x1eb5, 0xef9e, 0x347f, 0x1, 0x0);
        gbc.writeMem(0x347f, { 0x4e });
        gbc.writeMem(0x76be, { 0x4e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x655c, gbc.sp());
        EXPECT(0x76bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0169
        gbc.setState(0x1f25, 0x6f34, 0x8a0, 0x505b, 0xaa66, 0x432b, 0x1, 0x1);
        gbc.writeMem(0x1f25, { 0x4e });
        gbc.writeMem(0x432b, { 0x82 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6f34, gbc.sp());
        EXPECT(0x1f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 016A
        gbc.setState(0x93b5, 0xc8e2, 0x5760, 0xc94f, 0x219c, 0x202e, 0x0, 0x0);
        gbc.writeMem(0x202e, { 0x71 });
        gbc.writeMem(0x93b5, { 0x4e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc8e2, gbc.sp());
        EXPECT(0x93b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x93b5));
        // 4E 016B
        gbc.setState(0x35a8, 0xabdf, 0x210, 0xae7a, 0x77da, 0x74, 0x1, 0x1);
        gbc.writeMem(0x74, { 0x2f });
        gbc.writeMem(0x35a8, { 0x4e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xabdf, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 016C
        gbc.setState(0x5d88, 0xd71f, 0xe250, 0x617e, 0xb069, 0x22fa, 0x0, 0x1);
        gbc.writeMem(0x22fa, { 0x71 });
        gbc.writeMem(0x5d88, { 0x4e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd71f, gbc.sp());
        EXPECT(0x5d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 016D
        gbc.setState(0xadd9, 0x3dec, 0x5800, 0x5bd9, 0x5807, 0x426a, 0x0, 0x0);
        gbc.writeMem(0x426a, { 0x1b });
        gbc.writeMem(0xadd9, { 0x4e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3dec, gbc.sp());
        EXPECT(0xadda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xadd9));
        // 4E 016E
        gbc.setState(0x46ec, 0xb967, 0x9910, 0xcb17, 0x1193, 0x725e, 0x0, 0x1);
        gbc.writeMem(0x46ec, { 0x4e });
        gbc.writeMem(0x725e, { 0x32 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb967, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 016F
        gbc.setState(0x5abd, 0xc4a9, 0x7670, 0xa298, 0x7548, 0xd112, 0x0, 0x0);
        gbc.writeMem(0x5abd, { 0x4e });
        gbc.writeMem(0xd112, { 0xd1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc4a9, gbc.sp());
        EXPECT(0x5abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd112));
        // 4E 0170
        gbc.setState(0x9b81, 0x40dd, 0x3d60, 0x53ad, 0x1a07, 0x9390, 0x1, 0x1);
        gbc.writeMem(0x9390, { 0xc7 });
        gbc.writeMem(0x9b81, { 0x4e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x40dd, gbc.sp());
        EXPECT(0x9b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9390));
        EXPECT(0x4e, gbc.readMem(0x9b81));
        // 4E 0171
        gbc.setState(0x6974, 0xf50, 0x2aa0, 0x7fe0, 0xeb78, 0xb644, 0x0, 0x1);
        gbc.writeMem(0x6974, { 0x4e });
        gbc.writeMem(0xb644, { 0x87 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf50, gbc.sp());
        EXPECT(0x6975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb644));
        // 4E 0172
        gbc.setState(0xbf0c, 0x92ae, 0x4ee0, 0xcc55, 0x6ca9, 0x98b3, 0x1, 0x0);
        gbc.writeMem(0x98b3, { 0x88 });
        gbc.writeMem(0xbf0c, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x92ae, gbc.sp());
        EXPECT(0xbf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x98b3));
        EXPECT(0x4e, gbc.readMem(0xbf0c));
        // 4E 0174
        gbc.setState(0xa45c, 0xf3ad, 0x2b40, 0x1069, 0x7f76, 0x5439, 0x0, 0x0);
        gbc.writeMem(0x5439, { 0x41 });
        gbc.writeMem(0xa45c, { 0x4e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf3ad, gbc.sp());
        EXPECT(0xa45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa45c));
        // 4E 0176
        gbc.setState(0xc78, 0x73cd, 0xb950, 0x651, 0xca59, 0xb3cb, 0x0, 0x1);
        gbc.writeMem(0xc78, { 0x4e });
        gbc.writeMem(0xb3cb, { 0x23 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x73cd, gbc.sp());
        EXPECT(0xc79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xb3cb));
        // 4E 0177
        gbc.setState(0x4e83, 0x525c, 0x4d90, 0xefc2, 0xd13a, 0xc16b, 0x0, 0x1);
        gbc.writeMem(0x4e83, { 0x4e });
        gbc.writeMem(0xc16b, { 0x4b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0x4e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc16b));
        // 4E 0178
        gbc.setState(0x64b6, 0x549, 0xd210, 0xe917, 0x98d5, 0xdaac, 0x0, 0x0);
        gbc.writeMem(0x64b6, { 0x4e });
        gbc.writeMem(0xdaac, { 0xc3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x549, gbc.sp());
        EXPECT(0x64b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdaac));
        // 4E 0179
        gbc.setState(0xc39c, 0x57a0, 0xb6e0, 0xce80, 0x4947, 0x6baa, 0x0, 0x1);
        gbc.writeMem(0x6baa, { 0x46 });
        gbc.writeMem(0xc39c, { 0x4e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x57a0, gbc.sp());
        EXPECT(0xc39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc39c));
        // 4E 017A
        gbc.setState(0x899, 0xfda5, 0xc70, 0x998f, 0x8c09, 0x906f, 0x1, 0x0);
        gbc.writeMem(0x899, { 0x4e });
        gbc.writeMem(0x906f, { 0x12 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfda5, gbc.sp());
        EXPECT(0x89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x906f));
        // 4E 017B
        gbc.setState(0xdc82, 0x9439, 0x3160, 0x7e0d, 0x1b47, 0x45ee, 0x0, 0x1);
        gbc.writeMem(0x45ee, { 0xaa });
        gbc.writeMem(0xdc82, { 0x4e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9439, gbc.sp());
        EXPECT(0xdc83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdc82));
        // 4E 017C
        gbc.setState(0xe49a, 0x4c54, 0x4f00, 0x8972, 0xbc8a, 0x76ac, 0x1, 0x1);
        gbc.writeMem(0x76ac, { 0x84 });
        gbc.writeMem(0xe49a, { 0x4e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4c54, gbc.sp());
        EXPECT(0xe49b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe49a));
        // 4E 017D
        gbc.setState(0x4e2c, 0x7644, 0xe80, 0xe4d1, 0xa540, 0x6d54, 0x0, 0x0);
        gbc.writeMem(0x4e2c, { 0x4e });
        gbc.writeMem(0x6d54, { 0x89 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7644, gbc.sp());
        EXPECT(0x4e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 017E
        gbc.setState(0x2206, 0x1779, 0x4260, 0x8352, 0xc43f, 0x861, 0x1, 0x0);
        gbc.writeMem(0x861, { 0xe });
        gbc.writeMem(0x2206, { 0x4e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1779, gbc.sp());
        EXPECT(0x2207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 017F
        gbc.setState(0x152d, 0x7a85, 0xc730, 0xe5eb, 0x9e62, 0xeeac, 0x0, 0x1);
        gbc.writeMem(0x152d, { 0x4e });
        gbc.writeMem(0xeeac, { 0x87 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7a85, gbc.sp());
        EXPECT(0x152e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeeac));
        // 4E 0180
        gbc.setState(0x9c8d, 0x7514, 0x4220, 0xd2da, 0xbeb4, 0x2a57, 0x0, 0x1);
        gbc.writeMem(0x2a57, { 0xc0 });
        gbc.writeMem(0x9c8d, { 0x4e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7514, gbc.sp());
        EXPECT(0x9c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9c8d));
        // 4E 0181
        gbc.setState(0x5aa5, 0x41f5, 0xe5e0, 0xf23e, 0x8bef, 0x7c7d, 0x1, 0x0);
        gbc.writeMem(0x5aa5, { 0x4e });
        gbc.writeMem(0x7c7d, { 0x9e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x41f5, gbc.sp());
        EXPECT(0x5aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0182
        gbc.setState(0x4158, 0x4e4b, 0xa0b0, 0x9c63, 0xe9d3, 0x69bb, 0x0, 0x1);
        gbc.writeMem(0x4158, { 0x4e });
        gbc.writeMem(0x69bb, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4e4b, gbc.sp());
        EXPECT(0x4159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0183
        gbc.setState(0x151, 0x1105, 0x5780, 0x3375, 0x9ec4, 0x8f34, 0x1, 0x0);
        gbc.writeMem(0x151, { 0x4e });
        gbc.writeMem(0x8f34, { 0x88 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1105, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8f34));
        // 4E 0184
        gbc.setState(0x5, 0x502f, 0x60a0, 0xd65, 0x837e, 0x7326, 0x1, 0x1);
        gbc.writeMem(0x5, { 0x4e });
        gbc.writeMem(0x7326, { 0xaf });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x502f, gbc.sp());
        EXPECT(0x6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0185
        gbc.setState(0x4362, 0x2f86, 0xf060, 0xb2db, 0xa2b1, 0x2a20, 0x1, 0x1);
        gbc.writeMem(0x2a20, { 0xdf });
        gbc.writeMem(0x4362, { 0x4e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2f86, gbc.sp());
        EXPECT(0x4363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0186
        gbc.setState(0xce39, 0x4fa8, 0xc870, 0x8a1b, 0x4c44, 0xd64, 0x0, 0x1);
        gbc.writeMem(0xd64, { 0xd7 });
        gbc.writeMem(0xce39, { 0x4e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4fa8, gbc.sp());
        EXPECT(0xce3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xce39));
        // 4E 0187
        gbc.setState(0xa782, 0x3119, 0xa730, 0xf423, 0x9957, 0xbd10, 0x1, 0x0);
        gbc.writeMem(0xa782, { 0x4e });
        gbc.writeMem(0xbd10, { 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3119, gbc.sp());
        EXPECT(0xa783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa782));
        EXPECT(0x8a, gbc.readMem(0xbd10));
        // 4E 0188
        gbc.setState(0xd060, 0xb713, 0xe490, 0x57a3, 0x46f4, 0x1ebe, 0x0, 0x0);
        gbc.writeMem(0x1ebe, { 0x66 });
        gbc.writeMem(0xd060, { 0x4e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb713, gbc.sp());
        EXPECT(0xd061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd060));
        // 4E 0189
        gbc.setState(0x9425, 0xc448, 0xf2c0, 0x2e69, 0x65ac, 0x7742, 0x0, 0x1);
        gbc.writeMem(0x7742, { 0x2e });
        gbc.writeMem(0x9425, { 0x4e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc448, gbc.sp());
        EXPECT(0x9426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9425));
        // 4E 018A
        gbc.setState(0xb06f, 0xa416, 0x5f30, 0xceb5, 0xce94, 0x153d, 0x1, 0x0);
        gbc.writeMem(0x153d, { 0x5 });
        gbc.writeMem(0xb06f, { 0x4e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa416, gbc.sp());
        EXPECT(0xb070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb06f));
        // 4E 018B
        gbc.setState(0x8c00, 0x7fe1, 0xeee0, 0x4cf3, 0x4bba, 0xa234, 0x1, 0x1);
        gbc.writeMem(0x8c00, { 0x4e });
        gbc.writeMem(0xa234, { 0x41 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8c00));
        EXPECT(0x41, gbc.readMem(0xa234));
        // 4E 018C
        gbc.setState(0xc7e, 0xadce, 0x9f80, 0xcbb6, 0x1ee4, 0x397, 0x1, 0x1);
        gbc.writeMem(0x397, { 0x9c });
        gbc.writeMem(0xc7e, { 0x4e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xadce, gbc.sp());
        EXPECT(0xc7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 018D
        gbc.setState(0xac9c, 0x5589, 0x2c20, 0x6059, 0x3b33, 0x2aec, 0x0, 0x1);
        gbc.writeMem(0x2aec, { 0x12 });
        gbc.writeMem(0xac9c, { 0x4e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5589, gbc.sp());
        EXPECT(0xac9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xac9c));
        // 4E 018E
        gbc.setState(0xe509, 0x34f0, 0x22a0, 0x5553, 0x1fb0, 0xfcf7, 0x0, 0x1);
        gbc.writeMem(0xe509, { 0x4e });
        gbc.writeMem(0xfcf7, { 0xaa });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x34f0, gbc.sp());
        EXPECT(0xe50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe509));
        EXPECT(0xaa, gbc.readMem(0xfcf7));
        // 4E 018F
        gbc.setState(0x1613, 0xbbda, 0x8d50, 0xa776, 0xd092, 0xeb04, 0x1, 0x1);
        gbc.writeMem(0x1613, { 0x4e });
        gbc.writeMem(0xeb04, { 0x88 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbbda, gbc.sp());
        EXPECT(0x1614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xeb04));
        // 4E 0190
        gbc.setState(0x455a, 0x5293, 0xf8e0, 0x6d13, 0xcca7, 0xdc23, 0x1, 0x0);
        gbc.writeMem(0x455a, { 0x4e });
        gbc.writeMem(0xdc23, { 0x34 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5293, gbc.sp());
        EXPECT(0x455b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xdc23));
        // 4E 0191
        gbc.setState(0x4e44, 0xc1d3, 0x5a20, 0x9d3, 0x92c8, 0x5310, 0x1, 0x1);
        gbc.writeMem(0x4e44, { 0x4e });
        gbc.writeMem(0x5310, { 0x93 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc1d3, gbc.sp());
        EXPECT(0x4e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0192
        gbc.setState(0x27e2, 0x993d, 0x98d0, 0x7dd0, 0xcb, 0x7450, 0x0, 0x0);
        gbc.writeMem(0x27e2, { 0x4e });
        gbc.writeMem(0x7450, { 0xa8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x993d, gbc.sp());
        EXPECT(0x27e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0193
        gbc.setState(0x746, 0x7768, 0xffb0, 0x36aa, 0x26f, 0x1e69, 0x1, 0x0);
        gbc.writeMem(0x746, { 0x4e });
        gbc.writeMem(0x1e69, { 0x24 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7768, gbc.sp());
        EXPECT(0x747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0194
        gbc.setState(0x5bf8, 0x6e79, 0x1cf0, 0xce3, 0xae0b, 0xc96f, 0x0, 0x0);
        gbc.writeMem(0x5bf8, { 0x4e });
        gbc.writeMem(0xc96f, { 0x66 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6e79, gbc.sp());
        EXPECT(0x5bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc96f));
        // 4E 0196
        gbc.setState(0xc97, 0x25ca, 0x7510, 0xe0b1, 0x40bd, 0xc80d, 0x0, 0x0);
        gbc.writeMem(0xc97, { 0x4e });
        gbc.writeMem(0xc80d, { 0x86 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x25ca, gbc.sp());
        EXPECT(0xc98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc80d));
        // 4E 0197
        gbc.setState(0xd42b, 0x6b68, 0x6370, 0x1992, 0x646d, 0x9e7b, 0x0, 0x1);
        gbc.writeMem(0x9e7b, { 0x74 });
        gbc.writeMem(0xd42b, { 0x4e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6b68, gbc.sp());
        EXPECT(0xd42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9e7b));
        EXPECT(0x4e, gbc.readMem(0xd42b));
        // 4E 0198
        gbc.setState(0x2e3d, 0xdec1, 0x40f0, 0x62d7, 0x4850, 0x3d6a, 0x1, 0x0);
        gbc.writeMem(0x2e3d, { 0x4e });
        gbc.writeMem(0x3d6a, { 0x82 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdec1, gbc.sp());
        EXPECT(0x2e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 019A
        gbc.setState(0x3af9, 0x77b, 0xc580, 0x616, 0xa61d, 0x71e1, 0x0, 0x1);
        gbc.writeMem(0x3af9, { 0x4e });
        gbc.writeMem(0x71e1, { 0x17 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x77b, gbc.sp());
        EXPECT(0x3afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 019C
        gbc.setState(0xa9dc, 0x1bab, 0x5620, 0x39da, 0x91b5, 0x810a, 0x0, 0x1);
        gbc.writeMem(0x810a, { 0x48 });
        gbc.writeMem(0xa9dc, { 0x4e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1bab, gbc.sp());
        EXPECT(0xa9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x810a));
        EXPECT(0x4e, gbc.readMem(0xa9dc));
        // 4E 019D
        gbc.setState(0x55cf, 0x6ce3, 0x8200, 0x5dc7, 0x421a, 0xb10e, 0x1, 0x1);
        gbc.writeMem(0x55cf, { 0x4e });
        gbc.writeMem(0xb10e, { 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6ce3, gbc.sp());
        EXPECT(0x55d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb10e));
        // 4E 019E
        gbc.setState(0x982b, 0x217e, 0x3f40, 0x271e, 0x1976, 0x1cfb, 0x0, 0x0);
        gbc.writeMem(0x1cfb, { 0x43 });
        gbc.writeMem(0x982b, { 0x4e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x217e, gbc.sp());
        EXPECT(0x982c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x982b));
        // 4E 019F
        gbc.setState(0x566a, 0x9b90, 0x5400, 0xfb6f, 0xebac, 0x9529, 0x0, 0x1);
        gbc.writeMem(0x566a, { 0x4e });
        gbc.writeMem(0x9529, { 0x12 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9b90, gbc.sp());
        EXPECT(0x566b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9529));
        // 4E 01A0
        gbc.setState(0x68c9, 0xe0d1, 0x33b0, 0x8eed, 0xdc01, 0xe297, 0x1, 0x0);
        gbc.writeMem(0x68c9, { 0x4e });
        gbc.writeMem(0xe297, { 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe0d1, gbc.sp());
        EXPECT(0x68ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe297));
        // 4E 01A1
        gbc.setState(0x27e4, 0x553e, 0xffc0, 0x9252, 0x3fb0, 0x50b, 0x0, 0x0);
        gbc.writeMem(0x50b, { 0x6c });
        gbc.writeMem(0x27e4, { 0x4e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x553e, gbc.sp());
        EXPECT(0x27e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01A2
        gbc.setState(0x6189, 0x9734, 0xac0, 0xc48, 0x3c72, 0xd319, 0x0, 0x0);
        gbc.writeMem(0x6189, { 0x4e });
        gbc.writeMem(0xd319, { 0xd6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9734, gbc.sp());
        EXPECT(0x618a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd319));
        // 4E 01A3
        gbc.setState(0xe65, 0x4540, 0x6f00, 0xaa7c, 0x1a0b, 0x43fc, 0x0, 0x1);
        gbc.writeMem(0xe65, { 0x4e });
        gbc.writeMem(0x43fc, { 0xdd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4540, gbc.sp());
        EXPECT(0xe66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01A4
        gbc.setState(0x1a14, 0xdc6c, 0xd880, 0xfa97, 0xfb62, 0x281a, 0x0, 0x0);
        gbc.writeMem(0x1a14, { 0x4e });
        gbc.writeMem(0x281a, { 0x6b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdc6c, gbc.sp());
        EXPECT(0x1a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01A5
        gbc.setState(0x3333, 0xb906, 0x8c10, 0x18ea, 0xd59c, 0xb1ba, 0x0, 0x0);
        gbc.writeMem(0x3333, { 0x4e });
        gbc.writeMem(0xb1ba, { 0xaf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb906, gbc.sp());
        EXPECT(0x3334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xb1ba));
        // 4E 01A6
        gbc.setState(0x3d3e, 0x1c36, 0x9ff0, 0xd41b, 0xb0d1, 0xd165, 0x0, 0x0);
        gbc.writeMem(0x3d3e, { 0x4e });
        gbc.writeMem(0xd165, { 0xa1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1c36, gbc.sp());
        EXPECT(0x3d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd165));
        // 4E 01A7
        gbc.setState(0x5dca, 0x850e, 0x1b70, 0x8ee1, 0xfbf6, 0xf7e, 0x1, 0x0);
        gbc.writeMem(0xf7e, { 0xfd });
        gbc.writeMem(0x5dca, { 0x4e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x850e, gbc.sp());
        EXPECT(0x5dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01A8
        gbc.setState(0x342f, 0x825, 0xaf30, 0x2315, 0x4ff1, 0x6cd3, 0x0, 0x0);
        gbc.writeMem(0x342f, { 0x4e });
        gbc.writeMem(0x6cd3, { 0xf4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x825, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01A9
        gbc.setState(0x64bf, 0x2068, 0x26f0, 0x8ad6, 0xee9a, 0xc05a, 0x0, 0x1);
        gbc.writeMem(0x64bf, { 0x4e });
        gbc.writeMem(0xc05a, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2068, gbc.sp());
        EXPECT(0x64c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc05a));
        // 4E 01AA
        gbc.setState(0xbaea, 0x85df, 0xe000, 0x6aeb, 0x78b8, 0x70f4, 0x1, 0x0);
        gbc.writeMem(0x70f4, { 0x5c });
        gbc.writeMem(0xbaea, { 0x4e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x85df, gbc.sp());
        EXPECT(0xbaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbaea));
        // 4E 01AB
        gbc.setState(0xd0ed, 0xf0e4, 0x1aa0, 0x5005, 0x3304, 0x24ba, 0x0, 0x1);
        gbc.writeMem(0x24ba, { 0x4a });
        gbc.writeMem(0xd0ed, { 0x4e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf0e4, gbc.sp());
        EXPECT(0xd0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd0ed));
        // 4E 01AC
        gbc.setState(0x64e7, 0xbc2b, 0xa70, 0xb1c3, 0x731e, 0xdbc3, 0x0, 0x0);
        gbc.writeMem(0x64e7, { 0x4e });
        gbc.writeMem(0xdbc3, { 0xfd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbc2b, gbc.sp());
        EXPECT(0x64e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xdbc3));
        // 4E 01AD
        gbc.setState(0x39da, 0x9a96, 0x4470, 0x62ce, 0x9be6, 0x6e7c, 0x1, 0x1);
        gbc.writeMem(0x39da, { 0x4e });
        gbc.writeMem(0x6e7c, { 0xe7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9a96, gbc.sp());
        EXPECT(0x39db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01AE
        gbc.setState(0x69d2, 0x6712, 0xaa10, 0x5373, 0xdaae, 0x255e, 0x0, 0x0);
        gbc.writeMem(0x255e, { 0xfa });
        gbc.writeMem(0x69d2, { 0x4e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6712, gbc.sp());
        EXPECT(0x69d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01AF
        gbc.setState(0x4d78, 0xecd2, 0xab70, 0x21b8, 0xdbe8, 0x7943, 0x0, 0x0);
        gbc.writeMem(0x4d78, { 0x4e });
        gbc.writeMem(0x7943, { 0x12 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xecd2, gbc.sp());
        EXPECT(0x4d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01B0
        gbc.setState(0x907a, 0xb8ce, 0x96a0, 0xe594, 0xaaaa, 0x9264, 0x1, 0x0);
        gbc.writeMem(0x907a, { 0x4e });
        gbc.writeMem(0x9264, { 0x3b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb8ce, gbc.sp());
        EXPECT(0x907b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x907a));
        EXPECT(0x3b, gbc.readMem(0x9264));
        // 4E 01B1
        gbc.setState(0x1ce3, 0xd21f, 0x3360, 0x2df9, 0xf42a, 0xbdc, 0x0, 0x0);
        gbc.writeMem(0xbdc, { 0x8b });
        gbc.writeMem(0x1ce3, { 0x4e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd21f, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01B2
        gbc.setState(0xb235, 0x32bc, 0x1660, 0x9248, 0xd29c, 0x771a, 0x0, 0x1);
        gbc.writeMem(0x771a, { 0x58 });
        gbc.writeMem(0xb235, { 0x4e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x32bc, gbc.sp());
        EXPECT(0xb236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb235));
        // 4E 01B3
        gbc.setState(0x7803, 0x1cd8, 0xf8c0, 0xcd28, 0x9ce6, 0x1592, 0x1, 0x1);
        gbc.writeMem(0x1592, { 0xa3 });
        gbc.writeMem(0x7803, { 0x4e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1cd8, gbc.sp());
        EXPECT(0x7804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01B4
        gbc.setState(0x916e, 0x9410, 0x3840, 0x5550, 0x8800, 0xf63d, 0x1, 0x0);
        gbc.writeMem(0x916e, { 0x4e });
        gbc.writeMem(0xf63d, { 0x1c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9410, gbc.sp());
        EXPECT(0x916f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x916e));
        EXPECT(0x1c, gbc.readMem(0xf63d));
        // 4E 01B5
        gbc.setState(0xd03d, 0x9714, 0xe0, 0xd107, 0xfc48, 0x1b77, 0x1, 0x1);
        gbc.writeMem(0x1b77, { 0x74 });
        gbc.writeMem(0xd03d, { 0x4e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0xd03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd03d));
        // 4E 01B6
        gbc.setState(0xed96, 0x360c, 0x4090, 0x99d, 0x8433, 0x9fd7, 0x1, 0x1);
        gbc.writeMem(0x9fd7, { 0x72 });
        gbc.writeMem(0xed96, { 0x4e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x360c, gbc.sp());
        EXPECT(0xed97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9fd7));
        EXPECT(0x4e, gbc.readMem(0xed96));
        // 4E 01B7
        gbc.setState(0xab50, 0x4848, 0x7dd0, 0x7b6c, 0xe63e, 0x52b5, 0x0, 0x0);
        gbc.writeMem(0x52b5, { 0x94 });
        gbc.writeMem(0xab50, { 0x4e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4848, gbc.sp());
        EXPECT(0xab51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xab50));
        // 4E 01B8
        gbc.setState(0xcd60, 0xfe9f, 0x97c0, 0x30f6, 0x7b07, 0x7abf, 0x1, 0x1);
        gbc.writeMem(0x7abf, { 0xb4 });
        gbc.writeMem(0xcd60, { 0x4e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfe9f, gbc.sp());
        EXPECT(0xcd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcd60));
        // 4E 01B9
        gbc.setState(0x8814, 0x7a22, 0xd7b0, 0x984d, 0x1c41, 0x50a2, 0x0, 0x0);
        gbc.writeMem(0x50a2, { 0x82 });
        gbc.writeMem(0x8814, { 0x4e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7a22, gbc.sp());
        EXPECT(0x8815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8814));
        // 4E 01BA
        gbc.setState(0x7870, 0x4f1b, 0xee60, 0x2085, 0x4a52, 0xb5b0, 0x0, 0x1);
        gbc.writeMem(0x7870, { 0x4e });
        gbc.writeMem(0xb5b0, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4f1b, gbc.sp());
        EXPECT(0x7871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb5b0));
        // 4E 01BB
        gbc.setState(0xe5dc, 0x7da9, 0x18c0, 0x4a61, 0x42bf, 0x77cf, 0x0, 0x0);
        gbc.writeMem(0x77cf, { 0x71 });
        gbc.writeMem(0xe5dc, { 0x4e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7da9, gbc.sp());
        EXPECT(0xe5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe5dc));
        // 4E 01BC
        gbc.setState(0x3598, 0x73c2, 0xad90, 0x41f7, 0x68a5, 0xd9cc, 0x0, 0x0);
        gbc.writeMem(0x3598, { 0x4e });
        gbc.writeMem(0xd9cc, { 0xa9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x73c2, gbc.sp());
        EXPECT(0x3599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xd9cc));
        // 4E 01BD
        gbc.setState(0xb111, 0x39f0, 0xdd40, 0xc7e, 0x1dc0, 0xff3d, 0x1, 0x1);
        gbc.writeMem(0xb111, { 0x4e });
        gbc.writeMem(0xff3d, { 0xcb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x39f0, gbc.sp());
        EXPECT(0xb112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb111));
        EXPECT(0xcb, gbc.readMem(0xff3d));
        // 4E 01BE
        gbc.setState(0x87a2, 0x59bf, 0x1ae0, 0x49ed, 0xff72, 0x2cb5, 0x0, 0x1);
        gbc.writeMem(0x2cb5, { 0x5d });
        gbc.writeMem(0x87a2, { 0x4e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x59bf, gbc.sp());
        EXPECT(0x87a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x87a2));
        // 4E 01BF
        gbc.setState(0xbad0, 0xed72, 0x8180, 0x2811, 0x85b0, 0x6c2b, 0x0, 0x0);
        gbc.writeMem(0x6c2b, { 0x13 });
        gbc.writeMem(0xbad0, { 0x4e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xed72, gbc.sp());
        EXPECT(0xbad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbad0));
        // 4E 01C0
        gbc.setState(0x79d5, 0xecd6, 0xf5e0, 0x24b8, 0xf9a6, 0xd895, 0x1, 0x0);
        gbc.writeMem(0x79d5, { 0x4e });
        gbc.writeMem(0xd895, { 0x46 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xecd6, gbc.sp());
        EXPECT(0x79d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xd895));
        // 4E 01C1
        gbc.setState(0xa249, 0xfb0c, 0xa2d0, 0x92d0, 0x47a7, 0xafcf, 0x1, 0x0);
        gbc.writeMem(0xa249, { 0x4e });
        gbc.writeMem(0xafcf, { 0x10 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfb0c, gbc.sp());
        EXPECT(0xa24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa249));
        EXPECT(0x10, gbc.readMem(0xafcf));
        // 4E 01C2
        gbc.setState(0x21b4, 0x5fc0, 0x3050, 0x4caa, 0xd036, 0xe417, 0x0, 0x0);
        gbc.writeMem(0x21b4, { 0x4e });
        gbc.writeMem(0xe417, { 0x24 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0x21b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xe417));
        // 4E 01C5
        gbc.setState(0x88c1, 0x4385, 0x6820, 0x2724, 0x599e, 0x6df9, 0x0, 0x0);
        gbc.writeMem(0x6df9, { 0x1c });
        gbc.writeMem(0x88c1, { 0x4e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4385, gbc.sp());
        EXPECT(0x88c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x88c1));
        // 4E 01C6
        gbc.setState(0xb779, 0xac30, 0x29c0, 0x8ebc, 0x45ab, 0xc45b, 0x1, 0x1);
        gbc.writeMem(0xb779, { 0x4e });
        gbc.writeMem(0xc45b, { 0x5e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xac30, gbc.sp());
        EXPECT(0xb77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb779));
        EXPECT(0x5e, gbc.readMem(0xc45b));
        // 4E 01C7
        gbc.setState(0x866c, 0xc8bc, 0x9b60, 0xea6e, 0x53aa, 0xdabf, 0x1, 0x1);
        gbc.writeMem(0x866c, { 0x4e });
        gbc.writeMem(0xdabf, { 0x49 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc8bc, gbc.sp());
        EXPECT(0x866d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x866c));
        EXPECT(0x49, gbc.readMem(0xdabf));
        // 4E 01C8
        gbc.setState(0xbdf1, 0x52c2, 0x4160, 0xc470, 0x5f34, 0x8e75, 0x1, 0x0);
        gbc.writeMem(0x8e75, { 0xc0 });
        gbc.writeMem(0xbdf1, { 0x4e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x52c2, gbc.sp());
        EXPECT(0xbdf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x8e75));
        EXPECT(0x4e, gbc.readMem(0xbdf1));
        // 4E 01C9
        gbc.setState(0x80b3, 0xe706, 0x3b60, 0xf02f, 0x4aff, 0xfe63, 0x1, 0x1);
        gbc.writeMem(0x80b3, { 0x4e });
        gbc.writeMem(0xfe63, { 0x7d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe706, gbc.sp());
        EXPECT(0x80b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x80b3));
        EXPECT(0x7d, gbc.readMem(0xfe63));
        // 4E 01CB
        gbc.setState(0xce95, 0xd753, 0x93f0, 0xb51b, 0x686a, 0x9fb7, 0x1, 0x1);
        gbc.writeMem(0x9fb7, { 0x9f });
        gbc.writeMem(0xce95, { 0x4e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd753, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9fb7));
        EXPECT(0x4e, gbc.readMem(0xce95));
        // 4E 01CC
        gbc.setState(0x805c, 0x4f6f, 0xbe40, 0x53f4, 0xa3f4, 0x1ea, 0x1, 0x1);
        gbc.writeMem(0x1ea, { 0xbd });
        gbc.writeMem(0x805c, { 0x4e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4f6f, gbc.sp());
        EXPECT(0x805d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x805c));
        // 4E 01CD
        gbc.setState(0x8d26, 0xab5, 0xacb0, 0x51b5, 0x6403, 0xf77e, 0x0, 0x1);
        gbc.writeMem(0x8d26, { 0x4e });
        gbc.writeMem(0xf77e, { 0x4c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xab5, gbc.sp());
        EXPECT(0x8d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8d26));
        EXPECT(0x4c, gbc.readMem(0xf77e));
        // 4E 01CE
        gbc.setState(0xef09, 0x873d, 0xf9a0, 0x3780, 0xd324, 0x1f5c, 0x0, 0x1);
        gbc.writeMem(0x1f5c, { 0x24 });
        gbc.writeMem(0xef09, { 0x4e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x873d, gbc.sp());
        EXPECT(0xef0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xef09));
        // 4E 01CF
        gbc.setState(0x124c, 0xb23, 0x3f10, 0xffed, 0xfcef, 0xabf5, 0x0, 0x0);
        gbc.writeMem(0x124c, { 0x4e });
        gbc.writeMem(0xabf5, { 0x14 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb23, gbc.sp());
        EXPECT(0x124d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xabf5));
        // 4E 01D0
        gbc.setState(0x91f5, 0xd80, 0xd840, 0xb215, 0x2256, 0x962, 0x0, 0x1);
        gbc.writeMem(0x962, { 0x59 });
        gbc.writeMem(0x91f5, { 0x4e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd80, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x91f5));
        // 4E 01D1
        gbc.setState(0x4394, 0xf4b7, 0x59d0, 0x2a3b, 0x915f, 0x72c, 0x1, 0x0);
        gbc.writeMem(0x72c, { 0x30 });
        gbc.writeMem(0x4394, { 0x4e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf4b7, gbc.sp());
        EXPECT(0x4395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01D4
        gbc.setState(0x32f1, 0x9761, 0xec20, 0xe173, 0xcb1a, 0x36d6, 0x0, 0x1);
        gbc.writeMem(0x32f1, { 0x4e });
        gbc.writeMem(0x36d6, { 0xa0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9761, gbc.sp());
        EXPECT(0x32f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01D5
        gbc.setState(0x601e, 0xcea8, 0xc1f0, 0xf37b, 0x3c34, 0x9607, 0x1, 0x1);
        gbc.writeMem(0x601e, { 0x4e });
        gbc.writeMem(0x9607, { 0x2a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcea8, gbc.sp());
        EXPECT(0x601f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x9607));
        // 4E 01D6
        gbc.setState(0xe631, 0x9f4d, 0x41a0, 0xa028, 0x62e1, 0xd8a7, 0x0, 0x0);
        gbc.writeMem(0xd8a7, { 0x16 });
        gbc.writeMem(0xe631, { 0x4e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9f4d, gbc.sp());
        EXPECT(0xe632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd8a7));
        EXPECT(0x4e, gbc.readMem(0xe631));
        // 4E 01D7
        gbc.setState(0xead4, 0x20bf, 0x4630, 0xb248, 0xc6e8, 0x84fc, 0x1, 0x1);
        gbc.writeMem(0x84fc, { 0x71 });
        gbc.writeMem(0xead4, { 0x4e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x20bf, gbc.sp());
        EXPECT(0xead5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x84fc));
        EXPECT(0x4e, gbc.readMem(0xead4));
        // 4E 01D8
        gbc.setState(0x1de3, 0xcd5b, 0x8940, 0x9b2b, 0x4481, 0x4bdf, 0x0, 0x0);
        gbc.writeMem(0x1de3, { 0x4e });
        gbc.writeMem(0x4bdf, { 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcd5b, gbc.sp());
        EXPECT(0x1de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01D9
        gbc.setState(0xa90c, 0xdc94, 0x19b0, 0x245e, 0x11e4, 0x621f, 0x1, 0x1);
        gbc.writeMem(0x621f, { 0x9a });
        gbc.writeMem(0xa90c, { 0x4e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdc94, gbc.sp());
        EXPECT(0xa90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa90c));
        // 4E 01DA
        gbc.setState(0x41b, 0xc3b0, 0x7f30, 0x9af, 0x3786, 0xe495, 0x0, 0x1);
        gbc.writeMem(0x41b, { 0x4e });
        gbc.writeMem(0xe495, { 0x5f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc3b0, gbc.sp());
        EXPECT(0x41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xe495));
        // 4E 01DB
        gbc.setState(0xd21d, 0xca5e, 0x1f80, 0x1ea3, 0xa2d4, 0x2cff, 0x1, 0x0);
        gbc.writeMem(0x2cff, { 0x90 });
        gbc.writeMem(0xd21d, { 0x4e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xca5e, gbc.sp());
        EXPECT(0xd21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd21d));
        // 4E 01DC
        gbc.setState(0x83fb, 0x875e, 0x1fa0, 0x9b97, 0xa08e, 0x559d, 0x1, 0x1);
        gbc.writeMem(0x559d, { 0x86 });
        gbc.writeMem(0x83fb, { 0x4e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x875e, gbc.sp());
        EXPECT(0x83fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x83fb));
        // 4E 01DD
        gbc.setState(0xaa48, 0xa2d1, 0x6cd0, 0xb07, 0x8fbb, 0xb909, 0x1, 0x0);
        gbc.writeMem(0xaa48, { 0x4e });
        gbc.writeMem(0xb909, { 0xea });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa2d1, gbc.sp());
        EXPECT(0xaa49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaa48));
        EXPECT(0xea, gbc.readMem(0xb909));
        // 4E 01DE
        gbc.setState(0xdc8c, 0xf4d1, 0x26d0, 0xb946, 0xaf87, 0xfb04, 0x1, 0x0);
        gbc.writeMem(0xdc8c, { 0x4e });
        gbc.writeMem(0xfb04, { 0x1f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf4d1, gbc.sp());
        EXPECT(0xdc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdc8c));
        EXPECT(0x1f, gbc.readMem(0xfb04));
        // 4E 01DF
        gbc.setState(0x5dc1, 0xf1fe, 0x8bb0, 0x61f9, 0x94b7, 0x19d9, 0x1, 0x0);
        gbc.writeMem(0x19d9, { 0xed });
        gbc.writeMem(0x5dc1, { 0x4e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf1fe, gbc.sp());
        EXPECT(0x5dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01E0
        gbc.setState(0x4558, 0xb99, 0x6770, 0xccd4, 0xf610, 0xc7c, 0x1, 0x1);
        gbc.writeMem(0xc7c, { 0xa5 });
        gbc.writeMem(0x4558, { 0x4e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb99, gbc.sp());
        EXPECT(0x4559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01E1
        gbc.setState(0x46a4, 0x4a23, 0xabf0, 0xd338, 0x660, 0xf970, 0x0, 0x1);
        gbc.writeMem(0x46a4, { 0x4e });
        gbc.writeMem(0xf970, { 0x52 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4a23, gbc.sp());
        EXPECT(0x46a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xf970));
        // 4E 01E2
        gbc.setState(0x1c99, 0x6f24, 0x6c00, 0xac19, 0xfcaf, 0x25c0, 0x0, 0x1);
        gbc.writeMem(0x1c99, { 0x4e });
        gbc.writeMem(0x25c0, { 0x2b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6f24, gbc.sp());
        EXPECT(0x1c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01E3
        gbc.setState(0xbdd3, 0x310c, 0xc630, 0xa691, 0xba95, 0x93cf, 0x0, 0x1);
        gbc.writeMem(0x93cf, { 0x88 });
        gbc.writeMem(0xbdd3, { 0x4e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x310c, gbc.sp());
        EXPECT(0xbdd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x93cf));
        EXPECT(0x4e, gbc.readMem(0xbdd3));
        // 4E 01E4
        gbc.setState(0x17ff, 0x4fc9, 0xd530, 0xdebb, 0x9084, 0x3e9c, 0x1, 0x1);
        gbc.writeMem(0x17ff, { 0x4e });
        gbc.writeMem(0x3e9c, { 0x9a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0x1800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01E5
        gbc.setState(0x4bcc, 0xc0e8, 0xcb20, 0x1451, 0x9bbc, 0xeaac, 0x0, 0x1);
        gbc.writeMem(0x4bcc, { 0x4e });
        gbc.writeMem(0xeaac, { 0xa3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0x4bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xeaac));
        // 4E 01E6
        gbc.setState(0xb056, 0x113b, 0x4ff0, 0xcac5, 0x4679, 0x8ee1, 0x0, 0x0);
        gbc.writeMem(0x8ee1, { 0x94 });
        gbc.writeMem(0xb056, { 0x4e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x113b, gbc.sp());
        EXPECT(0xb057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8ee1));
        EXPECT(0x4e, gbc.readMem(0xb056));
        // 4E 01E7
        gbc.setState(0xc3a5, 0x9dc7, 0x1a00, 0x4bc3, 0xcdb3, 0x5963, 0x1, 0x0);
        gbc.writeMem(0x5963, { 0x9f });
        gbc.writeMem(0xc3a5, { 0x4e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9dc7, gbc.sp());
        EXPECT(0xc3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc3a5));
        // 4E 01E8
        gbc.setState(0x1786, 0xf2e5, 0x2cf0, 0xe84a, 0xa8e0, 0x26cc, 0x0, 0x1);
        gbc.writeMem(0x1786, { 0x4e });
        gbc.writeMem(0x26cc, { 0x78 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf2e5, gbc.sp());
        EXPECT(0x1787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01E9
        gbc.setState(0xec32, 0x11a2, 0x99b0, 0xba79, 0xdebb, 0x8b8d, 0x1, 0x1);
        gbc.writeMem(0x8b8d, { 0x7 });
        gbc.writeMem(0xec32, { 0x4e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x11a2, gbc.sp());
        EXPECT(0xec33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8b8d));
        EXPECT(0x4e, gbc.readMem(0xec32));
        // 4E 01EA
        gbc.setState(0x1f0d, 0x10dc, 0xcfc0, 0xf282, 0x90e2, 0x2dfe, 0x0, 0x0);
        gbc.writeMem(0x1f0d, { 0x4e });
        gbc.writeMem(0x2dfe, { 0xb8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x10dc, gbc.sp());
        EXPECT(0x1f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01EB
        gbc.setState(0xc9c5, 0xfb48, 0xe510, 0x2abf, 0x1632, 0x74c0, 0x1, 0x0);
        gbc.writeMem(0x74c0, { 0xf1 });
        gbc.writeMem(0xc9c5, { 0x4e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfb48, gbc.sp());
        EXPECT(0xc9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc9c5));
        // 4E 01EC
        gbc.setState(0x2400, 0x1883, 0x8770, 0xa5c8, 0xad84, 0xb766, 0x1, 0x1);
        gbc.writeMem(0x2400, { 0x4e });
        gbc.writeMem(0xb766, { 0xad });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1883, gbc.sp());
        EXPECT(0x2401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb766));
        // 4E 01ED
        gbc.setState(0x78ef, 0x735e, 0xa100, 0xc509, 0x7d5e, 0x2c8e, 0x1, 0x0);
        gbc.writeMem(0x2c8e, { 0x7f });
        gbc.writeMem(0x78ef, { 0x4e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x735e, gbc.sp());
        EXPECT(0x78f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01EF
        gbc.setState(0xed14, 0x8e59, 0xec30, 0xcbcf, 0xa99a, 0xeb83, 0x0, 0x0);
        gbc.writeMem(0xeb83, { 0x6d });
        gbc.writeMem(0xed14, { 0x4e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8e59, gbc.sp());
        EXPECT(0xed15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xeb83));
        EXPECT(0x4e, gbc.readMem(0xed14));
        // 4E 01F0
        gbc.setState(0xeefc, 0x62f7, 0xbed0, 0x1b05, 0x80eb, 0x8ab8, 0x1, 0x0);
        gbc.writeMem(0x8ab8, { 0x8b });
        gbc.writeMem(0xeefc, { 0x4e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x62f7, gbc.sp());
        EXPECT(0xeefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8ab8));
        EXPECT(0x4e, gbc.readMem(0xeefc));
        // 4E 01F1
        gbc.setState(0xa4, 0xcb2e, 0x35e0, 0xba92, 0xdb76, 0x1656, 0x0, 0x0);
        gbc.writeMem(0xa4, { 0x4e });
        gbc.writeMem(0x1656, { 0x17 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcb2e, gbc.sp());
        EXPECT(0xa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01F2
        gbc.setState(0xc64b, 0xdefd, 0x4c90, 0xea10, 0x9006, 0x4654, 0x0, 0x1);
        gbc.writeMem(0x4654, { 0x43 });
        gbc.writeMem(0xc64b, { 0x4e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdefd, gbc.sp());
        EXPECT(0xc64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc64b));
        // 4E 01F3
        gbc.setState(0x4746, 0xd89b, 0x79b0, 0x2528, 0xa4fe, 0x5745, 0x0, 0x0);
        gbc.writeMem(0x4746, { 0x4e });
        gbc.writeMem(0x5745, { 0xd9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd89b, gbc.sp());
        EXPECT(0x4747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01F4
        gbc.setState(0x7540, 0x2842, 0xac0, 0x9d45, 0x3c46, 0x13e8, 0x0, 0x1);
        gbc.writeMem(0x13e8, { 0x40 });
        gbc.writeMem(0x7540, { 0x4e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2842, gbc.sp());
        EXPECT(0x7541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01F5
        gbc.setState(0x76a8, 0x44c0, 0xe090, 0x3717, 0x2c36, 0x6bd8, 0x0, 0x0);
        gbc.writeMem(0x6bd8, { 0xe0 });
        gbc.writeMem(0x76a8, { 0x4e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x44c0, gbc.sp());
        EXPECT(0x76a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01F6
        gbc.setState(0x2fda, 0x3ffc, 0x93b0, 0xdb85, 0xc048, 0x1f2f, 0x1, 0x1);
        gbc.writeMem(0x1f2f, { 0x85 });
        gbc.writeMem(0x2fda, { 0x4e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3ffc, gbc.sp());
        EXPECT(0x2fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 01F7
        gbc.setState(0x49f8, 0xae4e, 0x8cc0, 0x4e6a, 0xee04, 0xd014, 0x1, 0x0);
        gbc.writeMem(0x49f8, { 0x4e });
        gbc.writeMem(0xd014, { 0xcb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xae4e, gbc.sp());
        EXPECT(0x49f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd014));
        // 4E 01F8
        gbc.setState(0xcdbb, 0x5837, 0x37a0, 0x6f49, 0x5742, 0x92d5, 0x1, 0x0);
        gbc.writeMem(0x92d5, { 0x6f });
        gbc.writeMem(0xcdbb, { 0x4e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5837, gbc.sp());
        EXPECT(0xcdbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x92d5));
        EXPECT(0x4e, gbc.readMem(0xcdbb));
        // 4E 01F9
        gbc.setState(0x4235, 0x8b32, 0xbe30, 0x80e4, 0xb7ba, 0xb1a6, 0x1, 0x1);
        gbc.writeMem(0x4235, { 0x4e });
        gbc.writeMem(0xb1a6, { 0x8a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8b32, gbc.sp());
        EXPECT(0x4236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb1a6));
        // 4E 01FA
        gbc.setState(0x6599, 0xf365, 0x7f60, 0x860f, 0xd87f, 0x19a8, 0x0, 0x0);
        gbc.writeMem(0x19a8, { 0xa6 });
        gbc.writeMem(0x6599, { 0x4e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf365, gbc.sp());
        EXPECT(0x659a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 01FB
        gbc.setState(0x42d0, 0xa281, 0xea20, 0x7ea2, 0xc28f, 0xc5a1, 0x0, 0x1);
        gbc.writeMem(0x42d0, { 0x4e });
        gbc.writeMem(0xc5a1, { 0x30 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa281, gbc.sp());
        EXPECT(0x42d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc5a1));
        // 4E 01FC
        gbc.setState(0xe0da, 0xf752, 0xa600, 0x73cc, 0x55a3, 0x741e, 0x1, 0x1);
        gbc.writeMem(0x741e, { 0x90 });
        gbc.writeMem(0xe0da, { 0x4e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf752, gbc.sp());
        EXPECT(0xe0db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe0da));
        // 4E 01FD
        gbc.setState(0xc4f1, 0x876f, 0x1cd0, 0xb637, 0xe740, 0xe233, 0x1, 0x0);
        gbc.writeMem(0xc4f1, { 0x4e });
        gbc.writeMem(0xe233, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x876f, gbc.sp());
        EXPECT(0xc4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc4f1));
        EXPECT(0x3c, gbc.readMem(0xe233));
        // 4E 01FE
        gbc.setState(0xa5ea, 0xb473, 0x5710, 0x31f8, 0xa4dc, 0x76e2, 0x0, 0x1);
        gbc.writeMem(0x76e2, { 0xa });
        gbc.writeMem(0xa5ea, { 0x4e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb473, gbc.sp());
        EXPECT(0xa5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa5ea));
        // 4E 01FF
        gbc.setState(0x8a5, 0xc1c1, 0xe890, 0xa5b5, 0xa282, 0x1a84, 0x1, 0x1);
        gbc.writeMem(0x8a5, { 0x4e });
        gbc.writeMem(0x1a84, { 0x1d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc1c1, gbc.sp());
        EXPECT(0x8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0200
        gbc.setState(0x4e82, 0xca96, 0x25b0, 0x94a6, 0xa58b, 0xcb33, 0x1, 0x0);
        gbc.writeMem(0x4e82, { 0x4e });
        gbc.writeMem(0xcb33, { 0x5f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xca96, gbc.sp());
        EXPECT(0x4e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xcb33));
        // 4E 0201
        gbc.setState(0x7501, 0x3594, 0x15a0, 0xb405, 0x35dc, 0xad72, 0x0, 0x0);
        gbc.writeMem(0x7501, { 0x4e });
        gbc.writeMem(0xad72, { 0x2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3594, gbc.sp());
        EXPECT(0x7502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xad72));
        // 4E 0202
        gbc.setState(0x4336, 0x2294, 0xf180, 0x3ba3, 0x65a3, 0xa69c, 0x0, 0x0);
        gbc.writeMem(0x4336, { 0x4e });
        gbc.writeMem(0xa69c, { 0x88 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2294, gbc.sp());
        EXPECT(0x4337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa69c));
        // 4E 0203
        gbc.setState(0xffb, 0x20fc, 0x26f0, 0xa6cf, 0x97db, 0xf95, 0x0, 0x1);
        gbc.writeMem(0xf95, { 0x99 });
        gbc.writeMem(0xffb, { 0x4e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x20fc, gbc.sp());
        EXPECT(0xffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0204
        gbc.setState(0x7870, 0xd25, 0x69f0, 0xdd32, 0x48aa, 0x871, 0x1, 0x0);
        gbc.writeMem(0x871, { 0xf4 });
        gbc.writeMem(0x7870, { 0x4e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd25, gbc.sp());
        EXPECT(0x7871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0205
        gbc.setState(0x459, 0x47c, 0xa8b0, 0x3067, 0xab71, 0xcb2b, 0x1, 0x1);
        gbc.writeMem(0x459, { 0x4e });
        gbc.writeMem(0xcb2b, { 0xd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x47c, gbc.sp());
        EXPECT(0x45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xcb2b));
        // 4E 0206
        gbc.setState(0xa1fa, 0x2566, 0xa120, 0x4237, 0x8e7e, 0x7d43, 0x1, 0x0);
        gbc.writeMem(0x7d43, { 0xf3 });
        gbc.writeMem(0xa1fa, { 0x4e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2566, gbc.sp());
        EXPECT(0xa1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa1fa));
        // 4E 0207
        gbc.setState(0xa40c, 0xbbad, 0x9460, 0x6c21, 0x7dc7, 0x35b2, 0x0, 0x0);
        gbc.writeMem(0x35b2, { 0x8 });
        gbc.writeMem(0xa40c, { 0x4e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbbad, gbc.sp());
        EXPECT(0xa40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa40c));
        // 4E 0208
        gbc.setState(0x82ba, 0x69c4, 0xa690, 0x1298, 0xce4a, 0x2de8, 0x1, 0x0);
        gbc.writeMem(0x2de8, { 0x81 });
        gbc.writeMem(0x82ba, { 0x4e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x69c4, gbc.sp());
        EXPECT(0x82bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x82ba));
        // 4E 0209
        gbc.setState(0x503a, 0x35e3, 0x9450, 0xa3f0, 0xc2b7, 0x1848, 0x0, 0x1);
        gbc.writeMem(0x1848, { 0x87 });
        gbc.writeMem(0x503a, { 0x4e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x35e3, gbc.sp());
        EXPECT(0x503b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 020A
        gbc.setState(0x5e9e, 0xad25, 0xd20, 0xa9b7, 0x932d, 0x2ef3, 0x0, 0x0);
        gbc.writeMem(0x2ef3, { 0x99 });
        gbc.writeMem(0x5e9e, { 0x4e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xad25, gbc.sp());
        EXPECT(0x5e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 020B
        gbc.setState(0xe44a, 0x29a4, 0xbe70, 0x5442, 0xee93, 0x5bf6, 0x1, 0x0);
        gbc.writeMem(0x5bf6, { 0xc5 });
        gbc.writeMem(0xe44a, { 0x4e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x29a4, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe44a));
        // 4E 020C
        gbc.setState(0x7f14, 0x85bb, 0x8bb0, 0xc8f1, 0x6ef2, 0x50d7, 0x1, 0x1);
        gbc.writeMem(0x50d7, { 0x6 });
        gbc.writeMem(0x7f14, { 0x4e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x85bb, gbc.sp());
        EXPECT(0x7f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 020D
        gbc.setState(0x98a3, 0x71ab, 0x4b10, 0x63f8, 0x7e8e, 0xcf6a, 0x1, 0x1);
        gbc.writeMem(0x98a3, { 0x4e });
        gbc.writeMem(0xcf6a, { 0x82 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x71ab, gbc.sp());
        EXPECT(0x98a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x98a3));
        EXPECT(0x82, gbc.readMem(0xcf6a));
        // 4E 020E
        gbc.setState(0xea50, 0x9baa, 0xa530, 0x6672, 0xd558, 0x528c, 0x1, 0x1);
        gbc.writeMem(0x528c, { 0x1f });
        gbc.writeMem(0xea50, { 0x4e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9baa, gbc.sp());
        EXPECT(0xea51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xea50));
        // 4E 020F
        gbc.setState(0x16e8, 0x8273, 0x42e0, 0xa230, 0xe768, 0xa39c, 0x1, 0x0);
        gbc.writeMem(0x16e8, { 0x4e });
        gbc.writeMem(0xa39c, { 0x73 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8273, gbc.sp());
        EXPECT(0x16e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa39c));
        // 4E 0210
        gbc.setState(0xb9ff, 0x95f7, 0x9360, 0xdc70, 0x72ce, 0x8c30, 0x0, 0x1);
        gbc.writeMem(0x8c30, { 0x73 });
        gbc.writeMem(0xb9ff, { 0x4e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x95f7, gbc.sp());
        EXPECT(0xba00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8c30));
        EXPECT(0x4e, gbc.readMem(0xb9ff));
        // 4E 0211
        gbc.setState(0x389a, 0x6285, 0x44e0, 0x2159, 0x9135, 0x465, 0x1, 0x1);
        gbc.writeMem(0x465, { 0x1d });
        gbc.writeMem(0x389a, { 0x4e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6285, gbc.sp());
        EXPECT(0x389b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0213
        gbc.setState(0x6c4, 0x7aaa, 0x8ec0, 0x647, 0x83b0, 0xa4da, 0x1, 0x0);
        gbc.writeMem(0x6c4, { 0x4e });
        gbc.writeMem(0xa4da, { 0x65 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7aaa, gbc.sp());
        EXPECT(0x6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa4da));
        // 4E 0214
        gbc.setState(0xe343, 0xe32e, 0x9390, 0xac6c, 0xf426, 0xef53, 0x0, 0x0);
        gbc.writeMem(0xe343, { 0x4e });
        gbc.writeMem(0xef53, { 0x6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe32e, gbc.sp());
        EXPECT(0xe344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe343));
        EXPECT(0x6, gbc.readMem(0xef53));
        // 4E 0215
        gbc.setState(0x6551, 0x8da9, 0xe5e0, 0x327a, 0xc417, 0x631f, 0x0, 0x1);
        gbc.writeMem(0x631f, { 0x8c });
        gbc.writeMem(0x6551, { 0x4e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8da9, gbc.sp());
        EXPECT(0x6552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0216
        gbc.setState(0x8043, 0x6077, 0x8260, 0x11f0, 0xffa3, 0x55f4, 0x0, 0x1);
        gbc.writeMem(0x55f4, { 0xf2 });
        gbc.writeMem(0x8043, { 0x4e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6077, gbc.sp());
        EXPECT(0x8044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8043));
        // 4E 0217
        gbc.setState(0x6841, 0x44a2, 0x7990, 0x625f, 0x7083, 0xbc67, 0x1, 0x0);
        gbc.writeMem(0x6841, { 0x4e });
        gbc.writeMem(0xbc67, { 0x26 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x44a2, gbc.sp());
        EXPECT(0x6842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbc67));
        // 4E 0218
        gbc.setState(0x4b51, 0xbdb0, 0x7650, 0x1ae1, 0xdc6e, 0x7590, 0x1, 0x1);
        gbc.writeMem(0x4b51, { 0x4e });
        gbc.writeMem(0x7590, { 0xd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbdb0, gbc.sp());
        EXPECT(0x4b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0219
        gbc.setState(0xa5a0, 0x9e6, 0x60b0, 0x32ee, 0xaf7d, 0x43f2, 0x0, 0x1);
        gbc.writeMem(0x43f2, { 0x31 });
        gbc.writeMem(0xa5a0, { 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0xa5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa5a0));
        // 4E 021A
        gbc.setState(0xeb19, 0x5e36, 0x5d40, 0x31d7, 0xad89, 0xec21, 0x0, 0x1);
        gbc.writeMem(0xeb19, { 0x4e });
        gbc.writeMem(0xec21, { 0x99 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5e36, gbc.sp());
        EXPECT(0xeb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xeb19));
        EXPECT(0x99, gbc.readMem(0xec21));
        // 4E 021B
        gbc.setState(0x989d, 0x84fc, 0x50, 0xe653, 0x987e, 0xe909, 0x0, 0x0);
        gbc.writeMem(0x989d, { 0x4e });
        gbc.writeMem(0xe909, { 0xfe });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x84fc, gbc.sp());
        EXPECT(0x989e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x989d));
        EXPECT(0xfe, gbc.readMem(0xe909));
        // 4E 021C
        gbc.setState(0xb822, 0xd15d, 0x3180, 0xec8b, 0x17d9, 0x5c3f, 0x1, 0x1);
        gbc.writeMem(0x5c3f, { 0x21 });
        gbc.writeMem(0xb822, { 0x4e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd15d, gbc.sp());
        EXPECT(0xb823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb822));
        // 4E 021D
        gbc.setState(0xd231, 0xb20a, 0x2180, 0xc07c, 0xfd26, 0xff39, 0x0, 0x0);
        gbc.writeMem(0xd231, { 0x4e });
        gbc.writeMem(0xff39, { 0xc3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb20a, gbc.sp());
        EXPECT(0xd232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd231));
        EXPECT(0xc3, gbc.readMem(0xff39));
        // 4E 021E
        gbc.setState(0x2cf2, 0x1b0a, 0x1da0, 0x81d, 0x4b4b, 0x638, 0x0, 0x1);
        gbc.writeMem(0x638, { 0xc5 });
        gbc.writeMem(0x2cf2, { 0x4e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1b0a, gbc.sp());
        EXPECT(0x2cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 021F
        gbc.setState(0xc2b1, 0x8a4a, 0x2ae0, 0x294, 0x3c0f, 0xc344, 0x1, 0x1);
        gbc.writeMem(0xc2b1, { 0x4e });
        gbc.writeMem(0xc344, { 0xd5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8a4a, gbc.sp());
        EXPECT(0xc2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc2b1));
        EXPECT(0xd5, gbc.readMem(0xc344));
        // 4E 0220
        gbc.setState(0xaec7, 0xb39e, 0x5f90, 0x3150, 0x5a11, 0x9066, 0x0, 0x1);
        gbc.writeMem(0x9066, { 0x66 });
        gbc.writeMem(0xaec7, { 0x4e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb39e, gbc.sp());
        EXPECT(0xaec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9066));
        EXPECT(0x4e, gbc.readMem(0xaec7));
        // 4E 0221
        gbc.setState(0x44b6, 0x4664, 0xb8c0, 0x9914, 0x634b, 0xdef7, 0x0, 0x0);
        gbc.writeMem(0x44b6, { 0x4e });
        gbc.writeMem(0xdef7, { 0x8e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4664, gbc.sp());
        EXPECT(0x44b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xdef7));
        // 4E 0222
        gbc.setState(0xba2e, 0xfe75, 0xae00, 0x9a7e, 0xfa47, 0xa8ef, 0x1, 0x1);
        gbc.writeMem(0xa8ef, { 0xb9 });
        gbc.writeMem(0xba2e, { 0x4e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfe75, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa8ef));
        EXPECT(0x4e, gbc.readMem(0xba2e));
        // 4E 0223
        gbc.setState(0x6b7a, 0x4629, 0x8050, 0xe3ac, 0x8be7, 0xf15c, 0x1, 0x1);
        gbc.writeMem(0x6b7a, { 0x4e });
        gbc.writeMem(0xf15c, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4629, gbc.sp());
        EXPECT(0x6b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xf15c));
        // 4E 0224
        gbc.setState(0x3edf, 0x30a0, 0x5f70, 0x2b6, 0x31bf, 0xbdb0, 0x1, 0x1);
        gbc.writeMem(0x3edf, { 0x4e });
        gbc.writeMem(0xbdb0, { 0x25 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x30a0, gbc.sp());
        EXPECT(0x3ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbdb0));
        // 4E 0225
        gbc.setState(0xa159, 0xc662, 0x9020, 0x8d0b, 0xba06, 0x58e2, 0x0, 0x0);
        gbc.writeMem(0x58e2, { 0x21 });
        gbc.writeMem(0xa159, { 0x4e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc662, gbc.sp());
        EXPECT(0xa15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa159));
        // 4E 0226
        gbc.setState(0x3b9d, 0x1ad3, 0x8660, 0x55d8, 0x690e, 0xd0d8, 0x0, 0x1);
        gbc.writeMem(0x3b9d, { 0x4e });
        gbc.writeMem(0xd0d8, { 0xd3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1ad3, gbc.sp());
        EXPECT(0x3b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xd0d8));
        // 4E 0227
        gbc.setState(0x5d24, 0x9364, 0x13f0, 0x76aa, 0x48c9, 0x2b37, 0x1, 0x1);
        gbc.writeMem(0x2b37, { 0x4b });
        gbc.writeMem(0x5d24, { 0x4e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9364, gbc.sp());
        EXPECT(0x5d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0229
        gbc.setState(0xa27e, 0x54cd, 0xf440, 0xa23e, 0xddc1, 0xe57c, 0x1, 0x1);
        gbc.writeMem(0xa27e, { 0x4e });
        gbc.writeMem(0xe57c, { 0x8b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x54cd, gbc.sp());
        EXPECT(0xa27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa27e));
        EXPECT(0x8b, gbc.readMem(0xe57c));
        // 4E 022B
        gbc.setState(0xdd42, 0xe61f, 0xfaf0, 0x6601, 0x103f, 0xd640, 0x1, 0x0);
        gbc.writeMem(0xd640, { 0x25 });
        gbc.writeMem(0xdd42, { 0x4e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe61f, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd640));
        EXPECT(0x4e, gbc.readMem(0xdd42));
        // 4E 022C
        gbc.setState(0xdf10, 0xf349, 0xab60, 0x4a25, 0x10c8, 0x9933, 0x0, 0x1);
        gbc.writeMem(0x9933, { 0xd3 });
        gbc.writeMem(0xdf10, { 0x4e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf349, gbc.sp());
        EXPECT(0xdf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x9933));
        EXPECT(0x4e, gbc.readMem(0xdf10));
        // 4E 022D
        gbc.setState(0x8e7d, 0x6d64, 0xac40, 0xdd69, 0x9179, 0x4009, 0x0, 0x0);
        gbc.writeMem(0x4009, { 0x1b });
        gbc.writeMem(0x8e7d, { 0x4e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6d64, gbc.sp());
        EXPECT(0x8e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8e7d));
        // 4E 022E
        gbc.setState(0xe9fb, 0xf6a9, 0xf490, 0x2123, 0x895a, 0x74c8, 0x1, 0x0);
        gbc.writeMem(0x74c8, { 0x5b });
        gbc.writeMem(0xe9fb, { 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf6a9, gbc.sp());
        EXPECT(0xe9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe9fb));
        // 4E 022F
        gbc.setState(0x32a6, 0x8653, 0x3a10, 0x3f50, 0xa18f, 0xf17c, 0x0, 0x1);
        gbc.writeMem(0x32a6, { 0x4e });
        gbc.writeMem(0xf17c, { 0x3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8653, gbc.sp());
        EXPECT(0x32a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xf17c));
        // 4E 0230
        gbc.setState(0x863f, 0xd53c, 0x79f0, 0xe233, 0x97fb, 0xff49, 0x0, 0x0);
        gbc.writeMem(0x863f, { 0x4e });
        gbc.writeMem(0xff49, { 0xf0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd53c, gbc.sp());
        EXPECT(0x8640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x863f));
        EXPECT(0xf0, gbc.readMem(0xff49));
        // 4E 0231
        gbc.setState(0x5dd5, 0xe69b, 0x2720, 0x9ab7, 0x9f74, 0x4437, 0x1, 0x0);
        gbc.writeMem(0x4437, { 0x2f });
        gbc.writeMem(0x5dd5, { 0x4e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe69b, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0232
        gbc.setState(0x8506, 0x4dbf, 0x68a0, 0xf68b, 0x1fcc, 0x2b77, 0x1, 0x1);
        gbc.writeMem(0x2b77, { 0x7d });
        gbc.writeMem(0x8506, { 0x4e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4dbf, gbc.sp());
        EXPECT(0x8507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8506));
        // 4E 0234
        gbc.setState(0xc243, 0x988e, 0xcf20, 0x8c66, 0x55fc, 0x7635, 0x0, 0x1);
        gbc.writeMem(0x7635, { 0xe0 });
        gbc.writeMem(0xc243, { 0x4e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x988e, gbc.sp());
        EXPECT(0xc244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc243));
        // 4E 0235
        gbc.setState(0xed4f, 0x532, 0x8070, 0x73fa, 0x1234, 0xb202, 0x1, 0x1);
        gbc.writeMem(0xb202, { 0xb });
        gbc.writeMem(0xed4f, { 0x4e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x532, gbc.sp());
        EXPECT(0xed50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb202));
        EXPECT(0x4e, gbc.readMem(0xed4f));
        // 4E 0236
        gbc.setState(0xca79, 0x498f, 0xa570, 0xd49b, 0x76ae, 0x2929, 0x1, 0x1);
        gbc.writeMem(0x2929, { 0xe1 });
        gbc.writeMem(0xca79, { 0x4e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x498f, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xca79));
        // 4E 0237
        gbc.setState(0xda15, 0xa0ea, 0xda70, 0xbcd0, 0x58a2, 0x5988, 0x0, 0x1);
        gbc.writeMem(0x5988, { 0x47 });
        gbc.writeMem(0xda15, { 0x4e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa0ea, gbc.sp());
        EXPECT(0xda16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xda15));
        // 4E 0238
        gbc.setState(0x1fb2, 0xf27c, 0xeb60, 0xc2, 0x1257, 0x8cfb, 0x0, 0x0);
        gbc.writeMem(0x1fb2, { 0x4e });
        gbc.writeMem(0x8cfb, { 0xef });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf27c, gbc.sp());
        EXPECT(0x1fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8cfb));
        // 4E 0239
        gbc.setState(0xacd7, 0x91a5, 0x27e0, 0xd4b5, 0x4853, 0x21ff, 0x1, 0x0);
        gbc.writeMem(0x21ff, { 0x65 });
        gbc.writeMem(0xacd7, { 0x4e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x91a5, gbc.sp());
        EXPECT(0xacd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xacd7));
        // 4E 023B
        gbc.setState(0x9711, 0x9c8b, 0xd040, 0x4a5e, 0x9503, 0x5b97, 0x0, 0x0);
        gbc.writeMem(0x5b97, { 0x7e });
        gbc.writeMem(0x9711, { 0x4e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9c8b, gbc.sp());
        EXPECT(0x9712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9711));
        // 4E 023C
        gbc.setState(0x1d80, 0xc0b0, 0x8df0, 0xd9a4, 0xbbbd, 0x5a00, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0x4e });
        gbc.writeMem(0x5a00, { 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 023D
        gbc.setState(0xab3e, 0xb2f4, 0x4550, 0x989d, 0xc5b0, 0x3a42, 0x1, 0x1);
        gbc.writeMem(0x3a42, { 0x85 });
        gbc.writeMem(0xab3e, { 0x4e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb2f4, gbc.sp());
        EXPECT(0xab3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xab3e));
        // 4E 023E
        gbc.setState(0x7bd3, 0xc77e, 0x54d0, 0x1d86, 0xc149, 0xd47d, 0x1, 0x1);
        gbc.writeMem(0x7bd3, { 0x4e });
        gbc.writeMem(0xd47d, { 0xe0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc77e, gbc.sp());
        EXPECT(0x7bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd47d));
        // 4E 023F
        gbc.setState(0x901c, 0xe69e, 0xb8b0, 0x703, 0x9a93, 0x3e2e, 0x0, 0x1);
        gbc.writeMem(0x3e2e, { 0x73 });
        gbc.writeMem(0x901c, { 0x4e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe69e, gbc.sp());
        EXPECT(0x901d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x901c));
        // 4E 0240
        gbc.setState(0xda05, 0xae94, 0x95e0, 0x674d, 0xccf3, 0x8985, 0x0, 0x0);
        gbc.writeMem(0x8985, { 0x3b });
        gbc.writeMem(0xda05, { 0x4e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xae94, gbc.sp());
        EXPECT(0xda06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8985));
        EXPECT(0x4e, gbc.readMem(0xda05));
        // 4E 0241
        gbc.setState(0x1de9, 0x19db, 0x83a0, 0x3e53, 0xada5, 0x9cb6, 0x1, 0x0);
        gbc.writeMem(0x1de9, { 0x4e });
        gbc.writeMem(0x9cb6, { 0x50 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x19db, gbc.sp());
        EXPECT(0x1dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9cb6));
        // 4E 0242
        gbc.setState(0xc04e, 0x890d, 0x1950, 0xf019, 0x8a84, 0x160b, 0x1, 0x1);
        gbc.writeMem(0x160b, { 0x5 });
        gbc.writeMem(0xc04e, { 0x4e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x890d, gbc.sp());
        EXPECT(0xc04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc04e));
        // 4E 0243
        gbc.setState(0x9452, 0x91ca, 0xf020, 0xe971, 0x7494, 0xc88c, 0x0, 0x1);
        gbc.writeMem(0x9452, { 0x4e });
        gbc.writeMem(0xc88c, { 0x18 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x91ca, gbc.sp());
        EXPECT(0x9453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9452));
        EXPECT(0x18, gbc.readMem(0xc88c));
        // 4E 0244
        gbc.setState(0xd5a5, 0x9c9e, 0xf310, 0x6355, 0x1235, 0xefb1, 0x0, 0x1);
        gbc.writeMem(0xd5a5, { 0x4e });
        gbc.writeMem(0xefb1, { 0x5a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9c9e, gbc.sp());
        EXPECT(0xd5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd5a5));
        EXPECT(0x5a, gbc.readMem(0xefb1));
        // 4E 0246
        gbc.setState(0xcbff, 0x1347, 0xa280, 0x6ebd, 0x3040, 0xf524, 0x0, 0x1);
        gbc.writeMem(0xcbff, { 0x4e });
        gbc.writeMem(0xf524, { 0x1f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1347, gbc.sp());
        EXPECT(0xcc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcbff));
        EXPECT(0x1f, gbc.readMem(0xf524));
        // 4E 0247
        gbc.setState(0x3ee6, 0xfc29, 0xe990, 0xafe1, 0xa4a3, 0xc9ee, 0x0, 0x0);
        gbc.writeMem(0x3ee6, { 0x4e });
        gbc.writeMem(0xc9ee, { 0x5b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfc29, gbc.sp());
        EXPECT(0x3ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc9ee));
        // 4E 0248
        gbc.setState(0x669a, 0xf594, 0x9330, 0xcc3e, 0x4da7, 0x7f5c, 0x0, 0x0);
        gbc.writeMem(0x669a, { 0x4e });
        gbc.writeMem(0x7f5c, { 0x81 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf594, gbc.sp());
        EXPECT(0x669b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0249
        gbc.setState(0xcd9a, 0xdb2a, 0x6660, 0xa72c, 0xb4a0, 0x8a05, 0x0, 0x0);
        gbc.writeMem(0x8a05, { 0x46 });
        gbc.writeMem(0xcd9a, { 0x4e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdb2a, gbc.sp());
        EXPECT(0xcd9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x8a05));
        EXPECT(0x4e, gbc.readMem(0xcd9a));
        // 4E 024A
        gbc.setState(0x3ee3, 0x30b7, 0x1690, 0xaf2a, 0x1d4d, 0xfb9d, 0x0, 0x0);
        gbc.writeMem(0x3ee3, { 0x4e });
        gbc.writeMem(0xfb9d, { 0x41 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x30b7, gbc.sp());
        EXPECT(0x3ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xfb9d));
        // 4E 024B
        gbc.setState(0x614f, 0x621d, 0x6440, 0xac22, 0x9c79, 0xb882, 0x1, 0x1);
        gbc.writeMem(0x614f, { 0x4e });
        gbc.writeMem(0xb882, { 0xbb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x621d, gbc.sp());
        EXPECT(0x6150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb882));
        // 4E 024C
        gbc.setState(0xcc38, 0x4c2b, 0xf9a0, 0x7939, 0xcd9b, 0x1b51, 0x0, 0x0);
        gbc.writeMem(0x1b51, { 0xb3 });
        gbc.writeMem(0xcc38, { 0x4e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4c2b, gbc.sp());
        EXPECT(0xcc39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcc38));
        // 4E 024D
        gbc.setState(0xc927, 0xb7ff, 0x400, 0xe094, 0xef7a, 0xceb2, 0x0, 0x0);
        gbc.writeMem(0xc927, { 0x4e });
        gbc.writeMem(0xceb2, { 0x11 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb7ff, gbc.sp());
        EXPECT(0xc928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc927));
        EXPECT(0x11, gbc.readMem(0xceb2));
        // 4E 024E
        gbc.setState(0x162b, 0x5112, 0xed0, 0xa932, 0xfa88, 0x78dd, 0x0, 0x0);
        gbc.writeMem(0x162b, { 0x4e });
        gbc.writeMem(0x78dd, { 0x35 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5112, gbc.sp());
        EXPECT(0x162c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 024F
        gbc.setState(0xd462, 0x6e29, 0x5530, 0xaa3e, 0xe6c7, 0xc184, 0x1, 0x1);
        gbc.writeMem(0xc184, { 0xe2 });
        gbc.writeMem(0xd462, { 0x4e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6e29, gbc.sp());
        EXPECT(0xd463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc184));
        EXPECT(0x4e, gbc.readMem(0xd462));
        // 4E 0250
        gbc.setState(0x8bb5, 0xf107, 0xc6b0, 0x971a, 0xc65, 0x720b, 0x0, 0x0);
        gbc.writeMem(0x720b, { 0xe });
        gbc.writeMem(0x8bb5, { 0x4e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf107, gbc.sp());
        EXPECT(0x8bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8bb5));
        // 4E 0251
        gbc.setState(0xce91, 0x2877, 0x6650, 0xf4fb, 0x1f60, 0x4d7d, 0x1, 0x1);
        gbc.writeMem(0x4d7d, { 0xca });
        gbc.writeMem(0xce91, { 0x4e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2877, gbc.sp());
        EXPECT(0xce92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xce91));
        // 4E 0252
        gbc.setState(0x1d3e, 0xe87b, 0x4530, 0x673d, 0x8974, 0x9054, 0x1, 0x0);
        gbc.writeMem(0x1d3e, { 0x4e });
        gbc.writeMem(0x9054, { 0x7e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe87b, gbc.sp());
        EXPECT(0x1d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9054));
        // 4E 0253
        gbc.setState(0x8e97, 0x8ef9, 0xd930, 0x4cf9, 0x8041, 0x8fd8, 0x1, 0x1);
        gbc.writeMem(0x8e97, { 0x4e });
        gbc.writeMem(0x8fd8, { 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8ef9, gbc.sp());
        EXPECT(0x8e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8e97));
        EXPECT(0x2c, gbc.readMem(0x8fd8));
        // 4E 0254
        gbc.setState(0xb8db, 0x2383, 0x5c30, 0xd28c, 0x5fa8, 0x5e03, 0x0, 0x1);
        gbc.writeMem(0x5e03, { 0xf8 });
        gbc.writeMem(0xb8db, { 0x4e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2383, gbc.sp());
        EXPECT(0xb8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb8db));
        // 4E 0255
        gbc.setState(0xef87, 0x34fc, 0x2940, 0x2790, 0xa1b, 0x2d3f, 0x0, 0x0);
        gbc.writeMem(0x2d3f, { 0x9d });
        gbc.writeMem(0xef87, { 0x4e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x34fc, gbc.sp());
        EXPECT(0xef88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xef87));
        // 4E 0256
        gbc.setState(0x990, 0xcca4, 0xa690, 0x92c7, 0x929e, 0xadb8, 0x0, 0x0);
        gbc.writeMem(0x990, { 0x4e });
        gbc.writeMem(0xadb8, { 0xc6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcca4, gbc.sp());
        EXPECT(0x991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xadb8));
        // 4E 0257
        gbc.setState(0xd503, 0x2b0b, 0x4630, 0x24d0, 0x1028, 0x1303, 0x1, 0x0);
        gbc.writeMem(0x1303, { 0x7d });
        gbc.writeMem(0xd503, { 0x4e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2b0b, gbc.sp());
        EXPECT(0xd504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd503));
        // 4E 0258
        gbc.setState(0x38fe, 0xf31c, 0x24e0, 0xc7be, 0xeec7, 0x7414, 0x0, 0x0);
        gbc.writeMem(0x38fe, { 0x4e });
        gbc.writeMem(0x7414, { 0xc2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf31c, gbc.sp());
        EXPECT(0x38ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0259
        gbc.setState(0x2af8, 0x2465, 0x7ac0, 0xf5f3, 0x6d66, 0xb945, 0x0, 0x0);
        gbc.writeMem(0x2af8, { 0x4e });
        gbc.writeMem(0xb945, { 0x93 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2465, gbc.sp());
        EXPECT(0x2af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb945));
        // 4E 025A
        gbc.setState(0x79aa, 0x620d, 0xe820, 0x1dd7, 0x182b, 0x9023, 0x0, 0x0);
        gbc.writeMem(0x79aa, { 0x4e });
        gbc.writeMem(0x9023, { 0x1c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x620d, gbc.sp());
        EXPECT(0x79ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9023));
        // 4E 025B
        gbc.setState(0x715, 0xc2ba, 0x3a60, 0x7126, 0x517a, 0x6ee3, 0x0, 0x0);
        gbc.writeMem(0x715, { 0x4e });
        gbc.writeMem(0x6ee3, { 0x3e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc2ba, gbc.sp());
        EXPECT(0x716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 025C
        gbc.setState(0x1065, 0x46c, 0x6010, 0x17b5, 0xde8e, 0xfb57, 0x0, 0x0);
        gbc.writeMem(0x1065, { 0x4e });
        gbc.writeMem(0xfb57, { 0x1c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x46c, gbc.sp());
        EXPECT(0x1066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xfb57));
        // 4E 025D
        gbc.setState(0xe559, 0x862, 0xe3b0, 0xbb84, 0x5a7b, 0xc5a1, 0x0, 0x1);
        gbc.writeMem(0xc5a1, { 0x30 });
        gbc.writeMem(0xe559, { 0x4e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x862, gbc.sp());
        EXPECT(0xe55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc5a1));
        EXPECT(0x4e, gbc.readMem(0xe559));
        // 4E 025E
        gbc.setState(0x679e, 0x70be, 0xaa00, 0xe10c, 0x7410, 0x5129, 0x0, 0x0);
        gbc.writeMem(0x5129, { 0xe1 });
        gbc.writeMem(0x679e, { 0x4e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x70be, gbc.sp());
        EXPECT(0x679f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 025F
        gbc.setState(0xe37, 0x2e6, 0x270, 0x9219, 0xfb9c, 0x99b9, 0x0, 0x1);
        gbc.writeMem(0xe37, { 0x4e });
        gbc.writeMem(0x99b9, { 0xbf });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2e6, gbc.sp());
        EXPECT(0xe38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x99b9));
        // 4E 0260
        gbc.setState(0x33ea, 0x3a1a, 0xe550, 0xd1fb, 0x3108, 0x982, 0x0, 0x1);
        gbc.writeMem(0x982, { 0x28 });
        gbc.writeMem(0x33ea, { 0x4e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3a1a, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0261
        gbc.setState(0xa826, 0x61fb, 0x56b0, 0x87, 0xcd5b, 0x2c38, 0x1, 0x1);
        gbc.writeMem(0x2c38, { 0x82 });
        gbc.writeMem(0xa826, { 0x4e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x61fb, gbc.sp());
        EXPECT(0xa827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa826));
        // 4E 0263
        gbc.setState(0xd3f9, 0x2a70, 0x7580, 0xd7d7, 0x86aa, 0xd9d1, 0x1, 0x1);
        gbc.writeMem(0xd3f9, { 0x4e });
        gbc.writeMem(0xd9d1, { 0x92 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2a70, gbc.sp());
        EXPECT(0xd3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd3f9));
        EXPECT(0x92, gbc.readMem(0xd9d1));
        // 4E 0265
        gbc.setState(0x73b6, 0x7e4b, 0xfb70, 0xf4c2, 0x6ecf, 0x8ea1, 0x0, 0x1);
        gbc.writeMem(0x73b6, { 0x4e });
        gbc.writeMem(0x8ea1, { 0xad });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7e4b, gbc.sp());
        EXPECT(0x73b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x8ea1));
        // 4E 0266
        gbc.setState(0xbf81, 0x3db5, 0xbda0, 0x3fe2, 0xee60, 0x946, 0x1, 0x1);
        gbc.writeMem(0x946, { 0xec });
        gbc.writeMem(0xbf81, { 0x4e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3db5, gbc.sp());
        EXPECT(0xbf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbf81));
        // 4E 0267
        gbc.setState(0x9395, 0x549c, 0xcea0, 0x1214, 0x39fa, 0x5e2c, 0x0, 0x0);
        gbc.writeMem(0x5e2c, { 0x35 });
        gbc.writeMem(0x9395, { 0x4e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x549c, gbc.sp());
        EXPECT(0x9396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9395));
        // 4E 0268
        gbc.setState(0xe434, 0x788b, 0xa60, 0x84d6, 0x6d7b, 0xe576, 0x0, 0x1);
        gbc.writeMem(0xe434, { 0x4e });
        gbc.writeMem(0xe576, { 0x4f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x788b, gbc.sp());
        EXPECT(0xe435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe434));
        EXPECT(0x4f, gbc.readMem(0xe576));
        // 4E 0269
        gbc.setState(0xce25, 0x1bcb, 0xfee0, 0xe6da, 0x9a09, 0x1173, 0x1, 0x1);
        gbc.writeMem(0x1173, { 0xfb });
        gbc.writeMem(0xce25, { 0x4e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1bcb, gbc.sp());
        EXPECT(0xce26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xce25));
        // 4E 026A
        gbc.setState(0x83f4, 0x7f93, 0x9eb0, 0xbbac, 0x5340, 0x779, 0x0, 0x1);
        gbc.writeMem(0x779, { 0x99 });
        gbc.writeMem(0x83f4, { 0x4e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7f93, gbc.sp());
        EXPECT(0x83f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x83f4));
        // 4E 026B
        gbc.setState(0x2955, 0xbcfc, 0x4cf0, 0x7791, 0x79f1, 0x97f6, 0x0, 0x1);
        gbc.writeMem(0x2955, { 0x4e });
        gbc.writeMem(0x97f6, { 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbcfc, gbc.sp());
        EXPECT(0x2956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x97f6));
        // 4E 026C
        gbc.setState(0x2deb, 0xd05c, 0x2ca0, 0x5bf7, 0x1f33, 0xeb28, 0x1, 0x1);
        gbc.writeMem(0x2deb, { 0x4e });
        gbc.writeMem(0xeb28, { 0x14 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd05c, gbc.sp());
        EXPECT(0x2dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xeb28));
        // 4E 026D
        gbc.setState(0x5f8, 0xda98, 0xaaf0, 0x4271, 0xec55, 0x4b22, 0x0, 0x0);
        gbc.writeMem(0x5f8, { 0x4e });
        gbc.writeMem(0x4b22, { 0x2c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0x5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 026E
        gbc.setState(0x33c6, 0xd99, 0x6ca0, 0x39ac, 0xdfb5, 0xadf0, 0x0, 0x0);
        gbc.writeMem(0x33c6, { 0x4e });
        gbc.writeMem(0xadf0, { 0xb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd99, gbc.sp());
        EXPECT(0x33c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xadf0));
        // 4E 0270
        gbc.setState(0x2c4, 0x88e9, 0x8f0, 0x1987, 0x8711, 0x1110, 0x1, 0x1);
        gbc.writeMem(0x2c4, { 0x4e });
        gbc.writeMem(0x1110, { 0xf9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0x2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0272
        gbc.setState(0x5e10, 0x581f, 0x9340, 0xf5e3, 0x7464, 0x95f8, 0x0, 0x1);
        gbc.writeMem(0x5e10, { 0x4e });
        gbc.writeMem(0x95f8, { 0x8c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x581f, gbc.sp());
        EXPECT(0x5e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x95f8));
        // 4E 0273
        gbc.setState(0xd91b, 0xb053, 0xd350, 0x419d, 0x127c, 0x5c82, 0x0, 0x1);
        gbc.writeMem(0x5c82, { 0x52 });
        gbc.writeMem(0xd91b, { 0x4e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb053, gbc.sp());
        EXPECT(0xd91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd91b));
        // 4E 0274
        gbc.setState(0x7ba6, 0xa7ff, 0x5280, 0xf480, 0x3009, 0x758f, 0x1, 0x0);
        gbc.writeMem(0x758f, { 0x16 });
        gbc.writeMem(0x7ba6, { 0x4e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa7ff, gbc.sp());
        EXPECT(0x7ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0275
        gbc.setState(0x3150, 0x55f4, 0x2ec0, 0xd9b5, 0xf07, 0xc637, 0x1, 0x0);
        gbc.writeMem(0x3150, { 0x4e });
        gbc.writeMem(0xc637, { 0xf4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x55f4, gbc.sp());
        EXPECT(0x3151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xc637));
        // 4E 0276
        gbc.setState(0x6d27, 0xa757, 0xc170, 0xdbe8, 0xf511, 0xaeb5, 0x1, 0x0);
        gbc.writeMem(0x6d27, { 0x4e });
        gbc.writeMem(0xaeb5, { 0xce });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa757, gbc.sp());
        EXPECT(0x6d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xaeb5));
        // 4E 0277
        gbc.setState(0xe092, 0xeec1, 0x5e70, 0x239a, 0x45f8, 0xdc06, 0x1, 0x1);
        gbc.writeMem(0xdc06, { 0xb7 });
        gbc.writeMem(0xe092, { 0x4e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xeec1, gbc.sp());
        EXPECT(0xe093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdc06));
        EXPECT(0x4e, gbc.readMem(0xe092));
        // 4E 0278
        gbc.setState(0xe469, 0xfbd6, 0x7730, 0x2312, 0xf174, 0x502c, 0x1, 0x0);
        gbc.writeMem(0x502c, { 0x5d });
        gbc.writeMem(0xe469, { 0x4e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfbd6, gbc.sp());
        EXPECT(0xe46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe469));
        // 4E 0279
        gbc.setState(0x5ad7, 0x44, 0xaf90, 0xfb7b, 0x43d7, 0xec5f, 0x1, 0x1);
        gbc.writeMem(0x5ad7, { 0x4e });
        gbc.writeMem(0xec5f, { 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x44, gbc.sp());
        EXPECT(0x5ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xec5f));
        // 4E 027A
        gbc.setState(0x3f9a, 0x5bd8, 0xf6b0, 0x372d, 0xab8c, 0x3018, 0x0, 0x1);
        gbc.writeMem(0x3018, { 0x3f });
        gbc.writeMem(0x3f9a, { 0x4e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5bd8, gbc.sp());
        EXPECT(0x3f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 027B
        gbc.setState(0x3d38, 0xa0ff, 0xac10, 0xf620, 0xb054, 0x1056, 0x0, 0x0);
        gbc.writeMem(0x1056, { 0xa });
        gbc.writeMem(0x3d38, { 0x4e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa0ff, gbc.sp());
        EXPECT(0x3d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 027C
        gbc.setState(0x60b8, 0x366b, 0x9ef0, 0x730b, 0x2982, 0xf558, 0x1, 0x0);
        gbc.writeMem(0x60b8, { 0x4e });
        gbc.writeMem(0xf558, { 0x8c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x366b, gbc.sp());
        EXPECT(0x60b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xf558));
        // 4E 027E
        gbc.setState(0x9969, 0x1cd5, 0x92f0, 0xf166, 0x139, 0xd8e6, 0x1, 0x1);
        gbc.writeMem(0x9969, { 0x4e });
        gbc.writeMem(0xd8e6, { 0xc6 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1cd5, gbc.sp());
        EXPECT(0x996a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9969));
        EXPECT(0xc6, gbc.readMem(0xd8e6));
        // 4E 027F
        gbc.setState(0xaf44, 0xc37b, 0x5cd0, 0xd1a1, 0x698f, 0x8100, 0x1, 0x1);
        gbc.writeMem(0x8100, { 0xea });
        gbc.writeMem(0xaf44, { 0x4e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc37b, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x8100));
        EXPECT(0x4e, gbc.readMem(0xaf44));
        // 4E 0280
        gbc.setState(0x3f1, 0x3464, 0x91b0, 0x7429, 0xf85a, 0xcf4e, 0x1, 0x1);
        gbc.writeMem(0x3f1, { 0x4e });
        gbc.writeMem(0xcf4e, { 0x55 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3464, gbc.sp());
        EXPECT(0x3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcf4e));
        // 4E 0281
        gbc.setState(0x5b7e, 0xe872, 0x2e30, 0x338b, 0x8e62, 0x486, 0x1, 0x0);
        gbc.writeMem(0x486, { 0x16 });
        gbc.writeMem(0x5b7e, { 0x4e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe872, gbc.sp());
        EXPECT(0x5b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0282
        gbc.setState(0xd5c5, 0xa81d, 0xccc0, 0xd7c3, 0xfb19, 0xfe1f, 0x1, 0x0);
        gbc.writeMem(0xd5c5, { 0x4e });
        gbc.writeMem(0xfe1f, { 0xb1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa81d, gbc.sp());
        EXPECT(0xd5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd5c5));
        EXPECT(0xb1, gbc.readMem(0xfe1f));
        // 4E 0283
        gbc.setState(0x7fdb, 0x821e, 0x67b0, 0x10a5, 0x2116, 0x1248, 0x1, 0x1);
        gbc.writeMem(0x1248, { 0xfc });
        gbc.writeMem(0x7fdb, { 0x4e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x821e, gbc.sp());
        EXPECT(0x7fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0284
        gbc.setState(0xa359, 0xb6f, 0xb1d0, 0x765b, 0xdf90, 0x5e65, 0x0, 0x0);
        gbc.writeMem(0x5e65, { 0x3d });
        gbc.writeMem(0xa359, { 0x4e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb6f, gbc.sp());
        EXPECT(0xa35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa359));
        // 4E 0285
        gbc.setState(0x5151, 0xf464, 0xceb0, 0x2241, 0xfb23, 0xc0f3, 0x1, 0x1);
        gbc.writeMem(0x5151, { 0x4e });
        gbc.writeMem(0xc0f3, { 0x46 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf464, gbc.sp());
        EXPECT(0x5152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xc0f3));
        // 4E 0286
        gbc.setState(0xcdc7, 0x4f0c, 0x1c50, 0xe31d, 0x1d0b, 0x4687, 0x0, 0x0);
        gbc.writeMem(0x4687, { 0xee });
        gbc.writeMem(0xcdc7, { 0x4e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4f0c, gbc.sp());
        EXPECT(0xcdc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcdc7));
        // 4E 0287
        gbc.setState(0x86ef, 0x2b88, 0x2ea0, 0xdf91, 0xe2cc, 0x4cca, 0x0, 0x1);
        gbc.writeMem(0x4cca, { 0x29 });
        gbc.writeMem(0x86ef, { 0x4e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2b88, gbc.sp());
        EXPECT(0x86f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x86ef));
        // 4E 0288
        gbc.setState(0xba07, 0x8042, 0x1240, 0xebd2, 0x9813, 0xd8b6, 0x1, 0x0);
        gbc.writeMem(0xba07, { 0x4e });
        gbc.writeMem(0xd8b6, { 0x6a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8042, gbc.sp());
        EXPECT(0xba08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xba07));
        EXPECT(0x6a, gbc.readMem(0xd8b6));
        // 4E 0289
        gbc.setState(0x9b42, 0x6b6, 0x8970, 0x491b, 0x2d61, 0x1e4b, 0x0, 0x0);
        gbc.writeMem(0x1e4b, { 0x1f });
        gbc.writeMem(0x9b42, { 0x4e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6b6, gbc.sp());
        EXPECT(0x9b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9b42));
        // 4E 028A
        gbc.setState(0x1fd7, 0x884e, 0xff10, 0x38ad, 0xab23, 0x5980, 0x1, 0x1);
        gbc.writeMem(0x1fd7, { 0x4e });
        gbc.writeMem(0x5980, { 0x9e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x884e, gbc.sp());
        EXPECT(0x1fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 028B
        gbc.setState(0x1aa0, 0x53f, 0xc710, 0x82f3, 0xda7f, 0xeb35, 0x0, 0x0);
        gbc.writeMem(0x1aa0, { 0x4e });
        gbc.writeMem(0xeb35, { 0x90 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x53f, gbc.sp());
        EXPECT(0x1aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xeb35));
        // 4E 028C
        gbc.setState(0x7594, 0x697c, 0xb3c0, 0x9145, 0x106, 0x1984, 0x0, 0x0);
        gbc.writeMem(0x1984, { 0x24 });
        gbc.writeMem(0x7594, { 0x4e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x697c, gbc.sp());
        EXPECT(0x7595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 028D
        gbc.setState(0x85ae, 0x988f, 0x3c10, 0x3491, 0xedff, 0xf988, 0x1, 0x1);
        gbc.writeMem(0x85ae, { 0x4e });
        gbc.writeMem(0xf988, { 0x8c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x988f, gbc.sp());
        EXPECT(0x85af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x85ae));
        EXPECT(0x8c, gbc.readMem(0xf988));
        // 4E 028E
        gbc.setState(0x74ec, 0xf1f5, 0xae60, 0x3ffd, 0x2dc3, 0xbfe, 0x1, 0x0);
        gbc.writeMem(0xbfe, { 0xd3 });
        gbc.writeMem(0x74ec, { 0x4e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf1f5, gbc.sp());
        EXPECT(0x74ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 028F
        gbc.setState(0x90c, 0x6324, 0x30a0, 0x7588, 0x3f99, 0x49d4, 0x1, 0x0);
        gbc.writeMem(0x90c, { 0x4e });
        gbc.writeMem(0x49d4, { 0xfa });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6324, gbc.sp());
        EXPECT(0x90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0290
        gbc.setState(0xdbbb, 0xf013, 0x2670, 0xda13, 0x7768, 0x3813, 0x0, 0x1);
        gbc.writeMem(0x3813, { 0x43 });
        gbc.writeMem(0xdbbb, { 0x4e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf013, gbc.sp());
        EXPECT(0xdbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdbbb));
        // 4E 0291
        gbc.setState(0x179, 0x10d7, 0xecf0, 0xf768, 0x56a5, 0x8f83, 0x0, 0x0);
        gbc.writeMem(0x179, { 0x4e });
        gbc.writeMem(0x8f83, { 0xaf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x10d7, gbc.sp());
        EXPECT(0x17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x8f83));
        // 4E 0292
        gbc.setState(0x9f8e, 0xf3ee, 0x4670, 0xc6bf, 0x94b5, 0x35ab, 0x1, 0x1);
        gbc.writeMem(0x35ab, { 0x9f });
        gbc.writeMem(0x9f8e, { 0x4e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf3ee, gbc.sp());
        EXPECT(0x9f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9f8e));
        // 4E 0293
        gbc.setState(0x55f3, 0x8324, 0x1750, 0x1cd8, 0x5131, 0x1867, 0x1, 0x0);
        gbc.writeMem(0x1867, { 0x16 });
        gbc.writeMem(0x55f3, { 0x4e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8324, gbc.sp());
        EXPECT(0x55f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0294
        gbc.setState(0xe5af, 0xd137, 0x10f0, 0x77cd, 0x11f3, 0x9e3e, 0x0, 0x0);
        gbc.writeMem(0x9e3e, { 0xfe });
        gbc.writeMem(0xe5af, { 0x4e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd137, gbc.sp());
        EXPECT(0xe5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9e3e));
        EXPECT(0x4e, gbc.readMem(0xe5af));
        // 4E 0295
        gbc.setState(0xed93, 0xe34d, 0x8c80, 0xd0aa, 0x119e, 0xf120, 0x1, 0x1);
        gbc.writeMem(0xed93, { 0x4e });
        gbc.writeMem(0xf120, { 0x95 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe34d, gbc.sp());
        EXPECT(0xed94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xed93));
        EXPECT(0x95, gbc.readMem(0xf120));
        // 4E 0296
        gbc.setState(0x8130, 0xd135, 0x4dd0, 0xc814, 0x90db, 0x360f, 0x1, 0x0);
        gbc.writeMem(0x360f, { 0x5e });
        gbc.writeMem(0x8130, { 0x4e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd135, gbc.sp());
        EXPECT(0x8131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8130));
        // 4E 0297
        gbc.setState(0xcd66, 0x7d5d, 0xffb0, 0x97b1, 0x695f, 0x8508, 0x1, 0x0);
        gbc.writeMem(0x8508, { 0xa6 });
        gbc.writeMem(0xcd66, { 0x4e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0xcd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8508));
        EXPECT(0x4e, gbc.readMem(0xcd66));
        // 4E 0298
        gbc.setState(0x56cc, 0x49d8, 0x30e0, 0x9f28, 0x3425, 0xf2c8, 0x0, 0x0);
        gbc.writeMem(0x56cc, { 0x4e });
        gbc.writeMem(0xf2c8, { 0xdc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x49d8, gbc.sp());
        EXPECT(0x56cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xf2c8));
        // 4E 0299
        gbc.setState(0x33ef, 0x629a, 0x1c20, 0xf2f0, 0x86d2, 0x9fea, 0x0, 0x1);
        gbc.writeMem(0x33ef, { 0x4e });
        gbc.writeMem(0x9fea, { 0x1d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x629a, gbc.sp());
        EXPECT(0x33f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9fea));
        // 4E 029A
        gbc.setState(0xde8, 0xfac3, 0xe600, 0xb53e, 0x1383, 0x4bd0, 0x0, 0x1);
        gbc.writeMem(0xde8, { 0x4e });
        gbc.writeMem(0x4bd0, { 0xa });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfac3, gbc.sp());
        EXPECT(0xde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 029B
        gbc.setState(0x1a38, 0x73ad, 0xe0d0, 0x1408, 0xd4f3, 0x5c93, 0x0, 0x0);
        gbc.writeMem(0x1a38, { 0x4e });
        gbc.writeMem(0x5c93, { 0x31 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x73ad, gbc.sp());
        EXPECT(0x1a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 029D
        gbc.setState(0x934e, 0x29ec, 0xb980, 0x35eb, 0x8d36, 0xdb8b, 0x1, 0x1);
        gbc.writeMem(0x934e, { 0x4e });
        gbc.writeMem(0xdb8b, { 0xdd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x29ec, gbc.sp());
        EXPECT(0x934f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x934e));
        EXPECT(0xdd, gbc.readMem(0xdb8b));
        // 4E 029E
        gbc.setState(0x40bb, 0x7797, 0x2050, 0xfa4d, 0xec51, 0x57f3, 0x0, 0x0);
        gbc.writeMem(0x40bb, { 0x4e });
        gbc.writeMem(0x57f3, { 0xf1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7797, gbc.sp());
        EXPECT(0x40bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 029F
        gbc.setState(0x55c2, 0xab3f, 0xc370, 0xe64e, 0xe24d, 0x4957, 0x0, 0x1);
        gbc.writeMem(0x4957, { 0x4a });
        gbc.writeMem(0x55c2, { 0x4e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xab3f, gbc.sp());
        EXPECT(0x55c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02A0
        gbc.setState(0x9e47, 0x9ea2, 0xd6c0, 0xf4ef, 0x5f0, 0xa067, 0x1, 0x1);
        gbc.writeMem(0x9e47, { 0x4e });
        gbc.writeMem(0xa067, { 0x1e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9ea2, gbc.sp());
        EXPECT(0x9e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9e47));
        EXPECT(0x1e, gbc.readMem(0xa067));
        // 4E 02A1
        gbc.setState(0x6b43, 0xe8b3, 0x60b0, 0x294f, 0x5f7a, 0x63d4, 0x1, 0x0);
        gbc.writeMem(0x63d4, { 0x61 });
        gbc.writeMem(0x6b43, { 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe8b3, gbc.sp());
        EXPECT(0x6b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02A2
        gbc.setState(0xdf4f, 0x7b03, 0xe4c0, 0x3a50, 0x553a, 0x37ff, 0x1, 0x1);
        gbc.writeMem(0x37ff, { 0x9e });
        gbc.writeMem(0xdf4f, { 0x4e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7b03, gbc.sp());
        EXPECT(0xdf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdf4f));
        // 4E 02A3
        gbc.setState(0xea70, 0x8d4d, 0x3fa0, 0xfdf7, 0x9164, 0x2104, 0x0, 0x0);
        gbc.writeMem(0x2104, { 0x0 });
        gbc.writeMem(0xea70, { 0x4e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8d4d, gbc.sp());
        EXPECT(0xea71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xea70));
        // 4E 02A5
        gbc.setState(0x7c4e, 0xcfe8, 0x1e10, 0x397b, 0xb1, 0x1973, 0x1, 0x0);
        gbc.writeMem(0x1973, { 0x8e });
        gbc.writeMem(0x7c4e, { 0x4e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcfe8, gbc.sp());
        EXPECT(0x7c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02A6
        gbc.setState(0xa324, 0x2434, 0xda0, 0x7d56, 0xa3e6, 0x6086, 0x0, 0x1);
        gbc.writeMem(0x6086, { 0x8d });
        gbc.writeMem(0xa324, { 0x4e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2434, gbc.sp());
        EXPECT(0xa325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa324));
        // 4E 02A7
        gbc.setState(0xb74b, 0x20fb, 0xc290, 0x7bcc, 0xf5c3, 0xaa32, 0x1, 0x1);
        gbc.writeMem(0xaa32, { 0xee });
        gbc.writeMem(0xb74b, { 0x4e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x20fb, gbc.sp());
        EXPECT(0xb74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xaa32));
        EXPECT(0x4e, gbc.readMem(0xb74b));
        // 4E 02A8
        gbc.setState(0xa891, 0xd7e0, 0x46b0, 0x1992, 0x8fd6, 0x5405, 0x0, 0x1);
        gbc.writeMem(0x5405, { 0xa8 });
        gbc.writeMem(0xa891, { 0x4e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd7e0, gbc.sp());
        EXPECT(0xa892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa891));
        // 4E 02A9
        gbc.setState(0x8d40, 0xed89, 0x3060, 0x4edd, 0x54b9, 0xe565, 0x1, 0x1);
        gbc.writeMem(0x8d40, { 0x4e });
        gbc.writeMem(0xe565, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xed89, gbc.sp());
        EXPECT(0x8d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8d40));
        EXPECT(0x5d, gbc.readMem(0xe565));
        // 4E 02AA
        gbc.setState(0x6e21, 0xb304, 0x9df0, 0xdcd6, 0xe46f, 0x33f8, 0x0, 0x0);
        gbc.writeMem(0x33f8, { 0x12 });
        gbc.writeMem(0x6e21, { 0x4e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb304, gbc.sp());
        EXPECT(0x6e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02AB
        gbc.setState(0xceb6, 0x2a93, 0xb380, 0x565f, 0xd28, 0x4cd9, 0x0, 0x0);
        gbc.writeMem(0x4cd9, { 0xe0 });
        gbc.writeMem(0xceb6, { 0x4e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2a93, gbc.sp());
        EXPECT(0xceb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xceb6));
        // 4E 02AC
        gbc.setState(0xaeec, 0xccae, 0xa600, 0x4c82, 0xc9d7, 0x15c9, 0x1, 0x0);
        gbc.writeMem(0x15c9, { 0xe5 });
        gbc.writeMem(0xaeec, { 0x4e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xccae, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaeec));
        // 4E 02AD
        gbc.setState(0x4633, 0x3fe8, 0xc500, 0x1065, 0xee40, 0xf59f, 0x1, 0x0);
        gbc.writeMem(0x4633, { 0x4e });
        gbc.writeMem(0xf59f, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3fe8, gbc.sp());
        EXPECT(0x4634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf59f));
        // 4E 02AE
        gbc.setState(0x1599, 0x5535, 0xaa60, 0x3008, 0x937e, 0x6504, 0x0, 0x1);
        gbc.writeMem(0x1599, { 0x4e });
        gbc.writeMem(0x6504, { 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5535, gbc.sp());
        EXPECT(0x159a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02AF
        gbc.setState(0x8aea, 0x9f57, 0xd4d0, 0x83c5, 0x881c, 0x350e, 0x0, 0x0);
        gbc.writeMem(0x350e, { 0x5f });
        gbc.writeMem(0x8aea, { 0x4e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9f57, gbc.sp());
        EXPECT(0x8aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8aea));
        // 4E 02B0
        gbc.setState(0x4c3c, 0xa28e, 0xcb20, 0xc179, 0x7a71, 0xb84f, 0x0, 0x0);
        gbc.writeMem(0x4c3c, { 0x4e });
        gbc.writeMem(0xb84f, { 0x1b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa28e, gbc.sp());
        EXPECT(0x4c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xb84f));
        // 4E 02B1
        gbc.setState(0x36c1, 0x55e5, 0x3880, 0xdf92, 0x2df1, 0x5a5a, 0x1, 0x1);
        gbc.writeMem(0x36c1, { 0x4e });
        gbc.writeMem(0x5a5a, { 0xe1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x55e5, gbc.sp());
        EXPECT(0x36c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02B2
        gbc.setState(0x7aea, 0x904f, 0xbb00, 0x545c, 0x387f, 0xd603, 0x0, 0x1);
        gbc.writeMem(0x7aea, { 0x4e });
        gbc.writeMem(0xd603, { 0x29 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x904f, gbc.sp());
        EXPECT(0x7aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd603));
        // 4E 02B3
        gbc.setState(0xe187, 0x92f5, 0x44c0, 0xe5f4, 0x9e86, 0x6ec, 0x0, 0x0);
        gbc.writeMem(0x6ec, { 0x18 });
        gbc.writeMem(0xe187, { 0x4e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0xe188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe187));
        // 4E 02B4
        gbc.setState(0xce81, 0xe1e1, 0xba60, 0x8242, 0xc90e, 0x2336, 0x1, 0x0);
        gbc.writeMem(0x2336, { 0xf4 });
        gbc.writeMem(0xce81, { 0x4e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe1e1, gbc.sp());
        EXPECT(0xce82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xce81));
        // 4E 02B6
        gbc.setState(0x90a3, 0xf6d0, 0x8160, 0x81e5, 0x6f84, 0x8d37, 0x0, 0x0);
        gbc.writeMem(0x8d37, { 0x6c });
        gbc.writeMem(0x90a3, { 0x4e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf6d0, gbc.sp());
        EXPECT(0x90a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8d37));
        EXPECT(0x4e, gbc.readMem(0x90a3));
        // 4E 02B7
        gbc.setState(0x9473, 0xb5e4, 0x1f80, 0x43f8, 0x539c, 0xff28, 0x1, 0x1);
        gbc.writeMem(0x9473, { 0x4e });
        gbc.writeMem(0xff28, { 0x95 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb5e4, gbc.sp());
        EXPECT(0x9474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9473));
        EXPECT(0x95, gbc.readMem(0xff28));
        // 4E 02B8
        gbc.setState(0x82a4, 0xad8d, 0xe590, 0x5016, 0xa45c, 0x68f, 0x0, 0x0);
        gbc.writeMem(0x68f, { 0x1e });
        gbc.writeMem(0x82a4, { 0x4e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xad8d, gbc.sp());
        EXPECT(0x82a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x82a4));
        // 4E 02B9
        gbc.setState(0x6c60, 0x763e, 0xbb50, 0xcf0b, 0x439, 0xf633, 0x0, 0x1);
        gbc.writeMem(0x6c60, { 0x4e });
        gbc.writeMem(0xf633, { 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x763e, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf633));
        // 4E 02BA
        gbc.setState(0x401a, 0xd5fa, 0xa930, 0xa7dd, 0x7b6, 0xb343, 0x0, 0x0);
        gbc.writeMem(0x401a, { 0x4e });
        gbc.writeMem(0xb343, { 0xa3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd5fa, gbc.sp());
        EXPECT(0x401b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb343));
        // 4E 02BB
        gbc.setState(0xdb92, 0x8954, 0x16f0, 0x8ce7, 0x4afa, 0xae5d, 0x1, 0x1);
        gbc.writeMem(0xae5d, { 0x94 });
        gbc.writeMem(0xdb92, { 0x4e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8954, gbc.sp());
        EXPECT(0xdb93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xae5d));
        EXPECT(0x4e, gbc.readMem(0xdb92));
        // 4E 02BC
        gbc.setState(0x47fc, 0x9517, 0x42c0, 0x89ea, 0x88f1, 0xde1b, 0x1, 0x1);
        gbc.writeMem(0x47fc, { 0x4e });
        gbc.writeMem(0xde1b, { 0xb4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9517, gbc.sp());
        EXPECT(0x47fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xde1b));
        // 4E 02BD
        gbc.setState(0x20cb, 0x8712, 0x8570, 0x688d, 0xc52f, 0x7953, 0x1, 0x1);
        gbc.writeMem(0x20cb, { 0x4e });
        gbc.writeMem(0x7953, { 0x90 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8712, gbc.sp());
        EXPECT(0x20cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02BE
        gbc.setState(0x3d5e, 0xbf6e, 0xc490, 0x1f60, 0x6cf6, 0xbf5f, 0x1, 0x1);
        gbc.writeMem(0x3d5e, { 0x4e });
        gbc.writeMem(0xbf5f, { 0x7a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbf6e, gbc.sp());
        EXPECT(0x3d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbf5f));
        // 4E 02BF
        gbc.setState(0x8528, 0x232, 0x6410, 0xa0c6, 0x6702, 0xaccc, 0x0, 0x0);
        gbc.writeMem(0x8528, { 0x4e });
        gbc.writeMem(0xaccc, { 0x57 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x232, gbc.sp());
        EXPECT(0x8529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8528));
        EXPECT(0x57, gbc.readMem(0xaccc));
        // 4E 02C0
        gbc.setState(0x682a, 0x4d93, 0xfa40, 0xb6d5, 0x3a64, 0x5e2b, 0x0, 0x1);
        gbc.writeMem(0x5e2b, { 0x12 });
        gbc.writeMem(0x682a, { 0x4e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4d93, gbc.sp());
        EXPECT(0x682b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02C1
        gbc.setState(0xe241, 0xa3df, 0xb3c0, 0x2680, 0xa49c, 0xde1a, 0x1, 0x1);
        gbc.writeMem(0xde1a, { 0x60 });
        gbc.writeMem(0xe241, { 0x4e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa3df, gbc.sp());
        EXPECT(0xe242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xde1a));
        EXPECT(0x4e, gbc.readMem(0xe241));
        // 4E 02C2
        gbc.setState(0x9d75, 0x99a5, 0x9410, 0xc1d8, 0xe933, 0xcca8, 0x0, 0x1);
        gbc.writeMem(0x9d75, { 0x4e });
        gbc.writeMem(0xcca8, { 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x99a5, gbc.sp());
        EXPECT(0x9d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9d75));
        EXPECT(0xac, gbc.readMem(0xcca8));
        // 4E 02C3
        gbc.setState(0x6147, 0x3c27, 0x4440, 0x10fe, 0xda96, 0xb2a2, 0x0, 0x1);
        gbc.writeMem(0x6147, { 0x4e });
        gbc.writeMem(0xb2a2, { 0x74 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3c27, gbc.sp());
        EXPECT(0x6148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xb2a2));
        // 4E 02C4
        gbc.setState(0x822b, 0xf662, 0x5f0, 0x36ac, 0x7da2, 0x5466, 0x0, 0x1);
        gbc.writeMem(0x5466, { 0xfd });
        gbc.writeMem(0x822b, { 0x4e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf662, gbc.sp());
        EXPECT(0x822c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x822b));
        // 4E 02C5
        gbc.setState(0xc4fa, 0xc480, 0x91a0, 0x617, 0x621, 0x5640, 0x1, 0x0);
        gbc.writeMem(0x5640, { 0xde });
        gbc.writeMem(0xc4fa, { 0x4e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc480, gbc.sp());
        EXPECT(0xc4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc4fa));
        // 4E 02C6
        gbc.setState(0x881e, 0x6e04, 0x7be0, 0xf272, 0x3ab1, 0x5cc8, 0x1, 0x1);
        gbc.writeMem(0x5cc8, { 0x2b });
        gbc.writeMem(0x881e, { 0x4e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6e04, gbc.sp());
        EXPECT(0x881f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x881e));
        // 4E 02C7
        gbc.setState(0x4d23, 0xddff, 0x650, 0x86fc, 0x4317, 0x6d26, 0x0, 0x1);
        gbc.writeMem(0x4d23, { 0x4e });
        gbc.writeMem(0x6d26, { 0x7f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xddff, gbc.sp());
        EXPECT(0x4d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02C8
        gbc.setState(0xc772, 0xd1ad, 0xade0, 0xe8f5, 0x983d, 0x30dc, 0x1, 0x0);
        gbc.writeMem(0x30dc, { 0x47 });
        gbc.writeMem(0xc772, { 0x4e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd1ad, gbc.sp());
        EXPECT(0xc773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc772));
        // 4E 02C9
        gbc.setState(0xd567, 0x3e5e, 0x14a0, 0x5fbf, 0x2b71, 0xf949, 0x1, 0x1);
        gbc.writeMem(0xd567, { 0x4e });
        gbc.writeMem(0xf949, { 0x92 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3e5e, gbc.sp());
        EXPECT(0xd568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd567));
        EXPECT(0x92, gbc.readMem(0xf949));
        // 4E 02CA
        gbc.setState(0x4d3b, 0xaf6f, 0x3f90, 0x5e86, 0x2d53, 0x1384, 0x1, 0x1);
        gbc.writeMem(0x1384, { 0x65 });
        gbc.writeMem(0x4d3b, { 0x4e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaf6f, gbc.sp());
        EXPECT(0x4d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02CB
        gbc.setState(0x5f40, 0xe967, 0xe160, 0xf685, 0x7d26, 0x1a90, 0x0, 0x1);
        gbc.writeMem(0x1a90, { 0x4 });
        gbc.writeMem(0x5f40, { 0x4e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe967, gbc.sp());
        EXPECT(0x5f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02CC
        gbc.setState(0x538c, 0xd687, 0x5220, 0xe655, 0xcc12, 0x71dd, 0x0, 0x0);
        gbc.writeMem(0x538c, { 0x4e });
        gbc.writeMem(0x71dd, { 0xd9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd687, gbc.sp());
        EXPECT(0x538d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02CD
        gbc.setState(0x7efd, 0x8624, 0x3d10, 0x7b03, 0xe4da, 0x6544, 0x1, 0x1);
        gbc.writeMem(0x6544, { 0x17 });
        gbc.writeMem(0x7efd, { 0x4e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8624, gbc.sp());
        EXPECT(0x7efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02CE
        gbc.setState(0x86c9, 0xd666, 0x2bb0, 0xc03a, 0xb113, 0x489d, 0x1, 0x1);
        gbc.writeMem(0x489d, { 0xd });
        gbc.writeMem(0x86c9, { 0x4e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd666, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x86c9));
        // 4E 02CF
        gbc.setState(0x956d, 0x770e, 0x8620, 0x8c10, 0x2488, 0xcc44, 0x0, 0x0);
        gbc.writeMem(0x956d, { 0x4e });
        gbc.writeMem(0xcc44, { 0xe6 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x770e, gbc.sp());
        EXPECT(0x956e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x956d));
        EXPECT(0xe6, gbc.readMem(0xcc44));
        // 4E 02D0
        gbc.setState(0x4778, 0x39fc, 0xcb10, 0x77bd, 0xe53c, 0x75cd, 0x1, 0x1);
        gbc.writeMem(0x4778, { 0x4e });
        gbc.writeMem(0x75cd, { 0x8f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02D1
        gbc.setState(0xb747, 0x4805, 0xa5e0, 0xbfd6, 0xd78e, 0xd085, 0x0, 0x1);
        gbc.writeMem(0xb747, { 0x4e });
        gbc.writeMem(0xd085, { 0x36 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4805, gbc.sp());
        EXPECT(0xb748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb747));
        EXPECT(0x36, gbc.readMem(0xd085));
        // 4E 02D2
        gbc.setState(0xcfe6, 0xfc3b, 0x60b0, 0x283b, 0xbcbb, 0x5bf0, 0x0, 0x0);
        gbc.writeMem(0x5bf0, { 0x64 });
        gbc.writeMem(0xcfe6, { 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfc3b, gbc.sp());
        EXPECT(0xcfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcfe6));
        // 4E 02D3
        gbc.setState(0xb2f1, 0x506b, 0xe500, 0x75b4, 0x8b1, 0x9142, 0x0, 0x1);
        gbc.writeMem(0x9142, { 0xc3 });
        gbc.writeMem(0xb2f1, { 0x4e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x506b, gbc.sp());
        EXPECT(0xb2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9142));
        EXPECT(0x4e, gbc.readMem(0xb2f1));
        // 4E 02D4
        gbc.setState(0x25f0, 0x8bdc, 0x6050, 0xf476, 0x1df5, 0x192a, 0x1, 0x1);
        gbc.writeMem(0x192a, { 0xb0 });
        gbc.writeMem(0x25f0, { 0x4e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8bdc, gbc.sp());
        EXPECT(0x25f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02D5
        gbc.setState(0xbbf2, 0x9bd4, 0x8780, 0x26da, 0x29d2, 0x4573, 0x0, 0x0);
        gbc.writeMem(0x4573, { 0x14 });
        gbc.writeMem(0xbbf2, { 0x4e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9bd4, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbbf2));
        // 4E 02D6
        gbc.setState(0x2c7b, 0xea59, 0x9840, 0xefa1, 0x291, 0x983e, 0x0, 0x1);
        gbc.writeMem(0x2c7b, { 0x4e });
        gbc.writeMem(0x983e, { 0xd8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xea59, gbc.sp());
        EXPECT(0x2c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x983e));
        // 4E 02D7
        gbc.setState(0xcf47, 0xc226, 0xa460, 0xdfb2, 0x4c2d, 0x2791, 0x0, 0x1);
        gbc.writeMem(0x2791, { 0x59 });
        gbc.writeMem(0xcf47, { 0x4e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc226, gbc.sp());
        EXPECT(0xcf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcf47));
        // 4E 02D8
        gbc.setState(0xbd74, 0x6ecd, 0x1f20, 0x36c2, 0xc238, 0x203c, 0x1, 0x1);
        gbc.writeMem(0x203c, { 0x3f });
        gbc.writeMem(0xbd74, { 0x4e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6ecd, gbc.sp());
        EXPECT(0xbd75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbd74));
        // 4E 02D9
        gbc.setState(0x9e68, 0xd16a, 0x2d80, 0xd9, 0xc3b9, 0xf29d, 0x0, 0x0);
        gbc.writeMem(0x9e68, { 0x4e });
        gbc.writeMem(0xf29d, { 0x9e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd16a, gbc.sp());
        EXPECT(0x9e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9e68));
        EXPECT(0x9e, gbc.readMem(0xf29d));
        // 4E 02DA
        gbc.setState(0x83ed, 0x71d2, 0xc9b0, 0x3ab5, 0x4bbd, 0x139f, 0x0, 0x0);
        gbc.writeMem(0x139f, { 0x4c });
        gbc.writeMem(0x83ed, { 0x4e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x71d2, gbc.sp());
        EXPECT(0x83ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x83ed));
        // 4E 02DB
        gbc.setState(0x72fd, 0x95b8, 0x8150, 0x371f, 0xa055, 0xdcfd, 0x0, 0x0);
        gbc.writeMem(0x72fd, { 0x4e });
        gbc.writeMem(0xdcfd, { 0x66 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x95b8, gbc.sp());
        EXPECT(0x72fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdcfd));
        // 4E 02DC
        gbc.setState(0x937c, 0xda98, 0xb7a0, 0xb6d9, 0xeb50, 0xfd33, 0x0, 0x0);
        gbc.writeMem(0x937c, { 0x4e });
        gbc.writeMem(0xfd33, { 0x49 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0x937d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x937c));
        EXPECT(0x49, gbc.readMem(0xfd33));
        // 4E 02DD
        gbc.setState(0x680b, 0xc1a2, 0x51e0, 0x54b5, 0x5ca3, 0xef91, 0x0, 0x0);
        gbc.writeMem(0x680b, { 0x4e });
        gbc.writeMem(0xef91, { 0x11 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc1a2, gbc.sp());
        EXPECT(0x680c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xef91));
        // 4E 02DE
        gbc.setState(0x3a9, 0xe1e5, 0x6bc0, 0x2fa1, 0xaddf, 0xef2, 0x0, 0x0);
        gbc.writeMem(0x3a9, { 0x4e });
        gbc.writeMem(0xef2, { 0xaa });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe1e5, gbc.sp());
        EXPECT(0x3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02DF
        gbc.setState(0x68a6, 0x4fba, 0xa540, 0x1bb2, 0x1d12, 0x3182, 0x0, 0x0);
        gbc.writeMem(0x3182, { 0x3f });
        gbc.writeMem(0x68a6, { 0x4e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4fba, gbc.sp());
        EXPECT(0x68a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02E1
        gbc.setState(0x9978, 0x2434, 0x6a90, 0xf03, 0x48d1, 0x8194, 0x0, 0x0);
        gbc.writeMem(0x8194, { 0x2 });
        gbc.writeMem(0x9978, { 0x4e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2434, gbc.sp());
        EXPECT(0x9979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x8194));
        EXPECT(0x4e, gbc.readMem(0x9978));
        // 4E 02E2
        gbc.setState(0x4174, 0x3a6, 0x82b0, 0xa46e, 0x12f8, 0x1127, 0x0, 0x0);
        gbc.writeMem(0x1127, { 0x29 });
        gbc.writeMem(0x4174, { 0x4e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3a6, gbc.sp());
        EXPECT(0x4175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02E3
        gbc.setState(0xaf60, 0xbf5c, 0x10, 0x6421, 0x3230, 0xdf0c, 0x0, 0x1);
        gbc.writeMem(0xaf60, { 0x4e });
        gbc.writeMem(0xdf0c, { 0xe0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbf5c, gbc.sp());
        EXPECT(0xaf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaf60));
        EXPECT(0xe0, gbc.readMem(0xdf0c));
        // 4E 02E4
        gbc.setState(0x9148, 0x81db, 0x7850, 0x62a4, 0x2740, 0x2bf4, 0x0, 0x1);
        gbc.writeMem(0x2bf4, { 0xbd });
        gbc.writeMem(0x9148, { 0x4e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x81db, gbc.sp());
        EXPECT(0x9149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9148));
        // 4E 02E5
        gbc.setState(0x82e8, 0x3c43, 0x2f30, 0x209d, 0xf239, 0xe7a9, 0x1, 0x1);
        gbc.writeMem(0x82e8, { 0x4e });
        gbc.writeMem(0xe7a9, { 0xd1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3c43, gbc.sp());
        EXPECT(0x82e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x82e8));
        EXPECT(0xd1, gbc.readMem(0xe7a9));
        // 4E 02E6
        gbc.setState(0x8f02, 0x90af, 0xcb0, 0xdaab, 0x6baf, 0x4e51, 0x0, 0x0);
        gbc.writeMem(0x4e51, { 0x1e });
        gbc.writeMem(0x8f02, { 0x4e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x90af, gbc.sp());
        EXPECT(0x8f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8f02));
        // 4E 02E7
        gbc.setState(0x16f5, 0x1e45, 0x72b0, 0xac7a, 0x8dd1, 0xc4b2, 0x0, 0x1);
        gbc.writeMem(0x16f5, { 0x4e });
        gbc.writeMem(0xc4b2, { 0x2c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1e45, gbc.sp());
        EXPECT(0x16f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc4b2));
        // 4E 02E8
        gbc.setState(0x4435, 0x5ad, 0x1b0, 0x4ba4, 0xf0da, 0x4527, 0x1, 0x1);
        gbc.writeMem(0x4435, { 0x4e });
        gbc.writeMem(0x4527, { 0xc8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5ad, gbc.sp());
        EXPECT(0x4436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02E9
        gbc.setState(0x1a57, 0xa626, 0x1130, 0x347e, 0x79e5, 0x3563, 0x0, 0x1);
        gbc.writeMem(0x1a57, { 0x4e });
        gbc.writeMem(0x3563, { 0xe4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa626, gbc.sp());
        EXPECT(0x1a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02EA
        gbc.setState(0x298c, 0x444c, 0x6170, 0x5212, 0x1ca, 0x4d2, 0x1, 0x0);
        gbc.writeMem(0x4d2, { 0xb0 });
        gbc.writeMem(0x298c, { 0x4e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x444c, gbc.sp());
        EXPECT(0x298d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02EB
        gbc.setState(0xe047, 0x9969, 0x6720, 0x9adc, 0x29f3, 0xae94, 0x0, 0x0);
        gbc.writeMem(0xae94, { 0x1c });
        gbc.writeMem(0xe047, { 0x4e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9969, gbc.sp());
        EXPECT(0xe048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xae94));
        EXPECT(0x4e, gbc.readMem(0xe047));
        // 4E 02EC
        gbc.setState(0xa17, 0x9f77, 0xeeb0, 0x849f, 0xdcd7, 0xce33, 0x0, 0x1);
        gbc.writeMem(0xa17, { 0x4e });
        gbc.writeMem(0xce33, { 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9f77, gbc.sp());
        EXPECT(0xa18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xce33));
        // 4E 02ED
        gbc.setState(0x6393, 0x18fd, 0xe500, 0x5dae, 0xd0b6, 0x16b1, 0x0, 0x1);
        gbc.writeMem(0x16b1, { 0x64 });
        gbc.writeMem(0x6393, { 0x4e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x18fd, gbc.sp());
        EXPECT(0x6394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02EF
        gbc.setState(0xcb8e, 0xcc45, 0x2410, 0xeb53, 0x25b8, 0x86ff, 0x0, 0x0);
        gbc.writeMem(0x86ff, { 0x4 });
        gbc.writeMem(0xcb8e, { 0x4e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcc45, gbc.sp());
        EXPECT(0xcb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x86ff));
        EXPECT(0x4e, gbc.readMem(0xcb8e));
        // 4E 02F1
        gbc.setState(0xa7ef, 0x3f34, 0x27e0, 0x4cf, 0x6979, 0x6b4b, 0x0, 0x0);
        gbc.writeMem(0x6b4b, { 0x1f });
        gbc.writeMem(0xa7ef, { 0x4e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3f34, gbc.sp());
        EXPECT(0xa7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa7ef));
        // 4E 02F2
        gbc.setState(0x8cce, 0x83dc, 0xe2a0, 0x3fdb, 0x33e1, 0xa5b9, 0x1, 0x0);
        gbc.writeMem(0x8cce, { 0x4e });
        gbc.writeMem(0xa5b9, { 0xc0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x83dc, gbc.sp());
        EXPECT(0x8ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8cce));
        EXPECT(0xc0, gbc.readMem(0xa5b9));
        // 4E 02F3
        gbc.setState(0xcf29, 0x5331, 0x63b0, 0xc8cf, 0xc209, 0x9ccb, 0x1, 0x1);
        gbc.writeMem(0x9ccb, { 0x2b });
        gbc.writeMem(0xcf29, { 0x4e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5331, gbc.sp());
        EXPECT(0xcf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9ccb));
        EXPECT(0x4e, gbc.readMem(0xcf29));
        // 4E 02F4
        gbc.setState(0x94b, 0x11ab, 0xe730, 0x3ebf, 0xbd84, 0xcead, 0x0, 0x1);
        gbc.writeMem(0x94b, { 0x4e });
        gbc.writeMem(0xcead, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x11ab, gbc.sp());
        EXPECT(0x94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcead));
        // 4E 02F5
        gbc.setState(0x7874, 0x8feb, 0x8270, 0xcfe7, 0xa537, 0x7cb9, 0x1, 0x1);
        gbc.writeMem(0x7874, { 0x4e });
        gbc.writeMem(0x7cb9, { 0xf0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8feb, gbc.sp());
        EXPECT(0x7875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02F6
        gbc.setState(0x280d, 0xea2c, 0x7750, 0x9165, 0x6d67, 0x207e, 0x0, 0x1);
        gbc.writeMem(0x207e, { 0xbc });
        gbc.writeMem(0x280d, { 0x4e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xea2c, gbc.sp());
        EXPECT(0x280e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 02F8
        gbc.setState(0xe3b, 0xa9cc, 0x6c00, 0x2f01, 0x385, 0x3f75, 0x1, 0x1);
        gbc.writeMem(0xe3b, { 0x4e });
        gbc.writeMem(0x3f75, { 0xe });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa9cc, gbc.sp());
        EXPECT(0xe3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02F9
        gbc.setState(0xa0bb, 0x7f9, 0xc1d0, 0x7e7a, 0x83fe, 0x7a6f, 0x1, 0x0);
        gbc.writeMem(0x7a6f, { 0x53 });
        gbc.writeMem(0xa0bb, { 0x4e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7f9, gbc.sp());
        EXPECT(0xa0bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa0bb));
        // 4E 02FA
        gbc.setState(0xb951, 0x461c, 0xcd60, 0x6c3d, 0xb985, 0x310f, 0x1, 0x1);
        gbc.writeMem(0x310f, { 0x52 });
        gbc.writeMem(0xb951, { 0x4e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x461c, gbc.sp());
        EXPECT(0xb952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb951));
        // 4E 02FB
        gbc.setState(0x84b7, 0xdbba, 0x71c0, 0x3c95, 0x958a, 0xbc23, 0x1, 0x1);
        gbc.writeMem(0x84b7, { 0x4e });
        gbc.writeMem(0xbc23, { 0x8c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdbba, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x84b7));
        EXPECT(0x8c, gbc.readMem(0xbc23));
        // 4E 02FC
        gbc.setState(0xad76, 0x9116, 0x540, 0x203f, 0x8bf4, 0x992f, 0x0, 0x0);
        gbc.writeMem(0x992f, { 0x73 });
        gbc.writeMem(0xad76, { 0x4e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9116, gbc.sp());
        EXPECT(0xad77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x992f));
        EXPECT(0x4e, gbc.readMem(0xad76));
        // 4E 02FD
        gbc.setState(0x99a7, 0x61c6, 0x2050, 0x3774, 0x710b, 0x60ae, 0x1, 0x1);
        gbc.writeMem(0x60ae, { 0x96 });
        gbc.writeMem(0x99a7, { 0x4e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x61c6, gbc.sp());
        EXPECT(0x99a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x99a7));
        // 4E 02FE
        gbc.setState(0x3432, 0x189d, 0x6100, 0x463c, 0x2743, 0x3a7d, 0x1, 0x0);
        gbc.writeMem(0x3432, { 0x4e });
        gbc.writeMem(0x3a7d, { 0x30 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x189d, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 02FF
        gbc.setState(0x3e3a, 0x6b08, 0x6aa0, 0x103b, 0x8342, 0x4dbd, 0x1, 0x1);
        gbc.writeMem(0x3e3a, { 0x4e });
        gbc.writeMem(0x4dbd, { 0x80 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6b08, gbc.sp());
        EXPECT(0x3e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0300
        gbc.setState(0x37c3, 0x25c, 0x5ed0, 0x33ab, 0x2ba4, 0xb07, 0x1, 0x0);
        gbc.writeMem(0xb07, { 0xe9 });
        gbc.writeMem(0x37c3, { 0x4e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x25c, gbc.sp());
        EXPECT(0x37c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0301
        gbc.setState(0xab78, 0x162, 0xf680, 0x1f4d, 0x76a0, 0x6580, 0x1, 0x0);
        gbc.writeMem(0x6580, { 0xc3 });
        gbc.writeMem(0xab78, { 0x4e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x162, gbc.sp());
        EXPECT(0xab79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xab78));
        // 4E 0302
        gbc.setState(0x9c3f, 0xeff4, 0x8e50, 0xcf99, 0x1588, 0x761b, 0x0, 0x1);
        gbc.writeMem(0x761b, { 0x22 });
        gbc.writeMem(0x9c3f, { 0x4e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xeff4, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9c3f));
        // 4E 0303
        gbc.setState(0x6e87, 0x7117, 0x350, 0x1478, 0x9142, 0x6ad7, 0x1, 0x1);
        gbc.writeMem(0x6ad7, { 0xb5 });
        gbc.writeMem(0x6e87, { 0x4e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7117, gbc.sp());
        EXPECT(0x6e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0304
        gbc.setState(0x1fc5, 0xf567, 0x8f10, 0x7177, 0xb7bd, 0x7d6b, 0x0, 0x0);
        gbc.writeMem(0x1fc5, { 0x4e });
        gbc.writeMem(0x7d6b, { 0x49 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf567, gbc.sp());
        EXPECT(0x1fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0305
        gbc.setState(0x9f82, 0xc3b4, 0x5e40, 0x4bf2, 0x29c8, 0x8f3f, 0x1, 0x1);
        gbc.writeMem(0x8f3f, { 0x68 });
        gbc.writeMem(0x9f82, { 0x4e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc3b4, gbc.sp());
        EXPECT(0x9f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8f3f));
        EXPECT(0x4e, gbc.readMem(0x9f82));
        // 4E 0306
        gbc.setState(0xc43b, 0x899c, 0x2a0, 0xffae, 0xea75, 0xd0d8, 0x0, 0x0);
        gbc.writeMem(0xc43b, { 0x4e });
        gbc.writeMem(0xd0d8, { 0xd3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x899c, gbc.sp());
        EXPECT(0xc43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc43b));
        EXPECT(0xd3, gbc.readMem(0xd0d8));
        // 4E 0307
        gbc.setState(0x1e6e, 0xc981, 0x2540, 0x6799, 0x10ea, 0x62f0, 0x1, 0x0);
        gbc.writeMem(0x1e6e, { 0x4e });
        gbc.writeMem(0x62f0, { 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc981, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0308
        gbc.setState(0xedd9, 0x8be5, 0xe840, 0xe472, 0xd24b, 0x5e65, 0x0, 0x1);
        gbc.writeMem(0x5e65, { 0x3d });
        gbc.writeMem(0xedd9, { 0x4e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8be5, gbc.sp());
        EXPECT(0xedda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xedd9));
        // 4E 0309
        gbc.setState(0x89cf, 0x3876, 0x1070, 0xc58a, 0xdbe0, 0xbb4a, 0x1, 0x0);
        gbc.writeMem(0x89cf, { 0x4e });
        gbc.writeMem(0xbb4a, { 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0x89d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x89cf));
        EXPECT(0x3f, gbc.readMem(0xbb4a));
        // 4E 030A
        gbc.setState(0xb196, 0xa447, 0x1e50, 0xbb0f, 0x7548, 0x4448, 0x1, 0x1);
        gbc.writeMem(0x4448, { 0x88 });
        gbc.writeMem(0xb196, { 0x4e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0xb197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb196));
        // 4E 030B
        gbc.setState(0xe676, 0x4934, 0x2140, 0xf56d, 0x4f5f, 0x763d, 0x0, 0x0);
        gbc.writeMem(0x763d, { 0x52 });
        gbc.writeMem(0xe676, { 0x4e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4934, gbc.sp());
        EXPECT(0xe677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe676));
        // 4E 030C
        gbc.setState(0xdb42, 0x791, 0xbe00, 0x6042, 0x5e88, 0x27a5, 0x1, 0x1);
        gbc.writeMem(0x27a5, { 0x5a });
        gbc.writeMem(0xdb42, { 0x4e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x791, gbc.sp());
        EXPECT(0xdb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdb42));
        // 4E 030D
        gbc.setState(0x2909, 0xcdfc, 0x44d0, 0x3595, 0xbaf2, 0xa678, 0x1, 0x1);
        gbc.writeMem(0x2909, { 0x4e });
        gbc.writeMem(0xa678, { 0xe6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcdfc, gbc.sp());
        EXPECT(0x290a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa678));
        // 4E 030E
        gbc.setState(0x6bbd, 0xef65, 0xd130, 0x82ef, 0xd7c, 0xda0f, 0x1, 0x1);
        gbc.writeMem(0x6bbd, { 0x4e });
        gbc.writeMem(0xda0f, { 0xb1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xef65, gbc.sp());
        EXPECT(0x6bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xda0f));
        // 4E 030F
        gbc.setState(0xe808, 0x79d4, 0x7920, 0xf14, 0x8104, 0xc447, 0x0, 0x1);
        gbc.writeMem(0xc447, { 0x26 });
        gbc.writeMem(0xe808, { 0x4e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x79d4, gbc.sp());
        EXPECT(0xe809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc447));
        EXPECT(0x4e, gbc.readMem(0xe808));
        // 4E 0310
        gbc.setState(0x1d3e, 0xe148, 0x7c50, 0x7c91, 0x46bd, 0x1c36, 0x1, 0x1);
        gbc.writeMem(0x1c36, { 0xc8 });
        gbc.writeMem(0x1d3e, { 0x4e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe148, gbc.sp());
        EXPECT(0x1d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0311
        gbc.setState(0x5643, 0x2208, 0xb910, 0x2212, 0x1bba, 0x206a, 0x1, 0x1);
        gbc.writeMem(0x206a, { 0x43 });
        gbc.writeMem(0x5643, { 0x4e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2208, gbc.sp());
        EXPECT(0x5644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0312
        gbc.setState(0xf56, 0xc231, 0xcee0, 0xd965, 0xe02a, 0x29b5, 0x1, 0x1);
        gbc.writeMem(0xf56, { 0x4e });
        gbc.writeMem(0x29b5, { 0x35 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc231, gbc.sp());
        EXPECT(0xf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0313
        gbc.setState(0x162b, 0xc519, 0x9670, 0xf7bd, 0x717, 0x406e, 0x1, 0x1);
        gbc.writeMem(0x162b, { 0x4e });
        gbc.writeMem(0x406e, { 0xd4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc519, gbc.sp());
        EXPECT(0x162c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0314
        gbc.setState(0xa9ef, 0xff0e, 0x27f0, 0x12fd, 0x64de, 0x690d, 0x0, 0x0);
        gbc.writeMem(0x690d, { 0xe2 });
        gbc.writeMem(0xa9ef, { 0x4e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xff0e, gbc.sp());
        EXPECT(0xa9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa9ef));
        // 4E 0315
        gbc.setState(0x902f, 0xaee5, 0x8850, 0xaf24, 0x6f9a, 0xefa8, 0x0, 0x1);
        gbc.writeMem(0x902f, { 0x4e });
        gbc.writeMem(0xefa8, { 0xf0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0x9030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x902f));
        EXPECT(0xf0, gbc.readMem(0xefa8));
        // 4E 0316
        gbc.setState(0xce25, 0x9be2, 0x4f70, 0xca42, 0x2d44, 0xedf4, 0x0, 0x0);
        gbc.writeMem(0xce25, { 0x4e });
        gbc.writeMem(0xedf4, { 0x2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9be2, gbc.sp());
        EXPECT(0xce26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xce25));
        EXPECT(0x2, gbc.readMem(0xedf4));
        // 4E 0317
        gbc.setState(0x35f0, 0xeb, 0xee80, 0xb9e9, 0x6b73, 0x65a2, 0x0, 0x0);
        gbc.writeMem(0x35f0, { 0x4e });
        gbc.writeMem(0x65a2, { 0x86 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeb, gbc.sp());
        EXPECT(0x35f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0318
        gbc.setState(0x9309, 0x6d14, 0x2050, 0xa89b, 0x5051, 0xc7a8, 0x1, 0x0);
        gbc.writeMem(0x9309, { 0x4e });
        gbc.writeMem(0xc7a8, { 0x2a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6d14, gbc.sp());
        EXPECT(0x930a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9309));
        EXPECT(0x2a, gbc.readMem(0xc7a8));
        // 4E 0319
        gbc.setState(0x2486, 0xe2ae, 0xd210, 0x5356, 0xf893, 0x8648, 0x1, 0x0);
        gbc.writeMem(0x2486, { 0x4e });
        gbc.writeMem(0x8648, { 0xd3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe2ae, gbc.sp());
        EXPECT(0x2487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x8648));
        // 4E 031A
        gbc.setState(0x2573, 0x17ff, 0xdd40, 0x13f3, 0xfc45, 0x7c59, 0x0, 0x0);
        gbc.writeMem(0x2573, { 0x4e });
        gbc.writeMem(0x7c59, { 0xcf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x17ff, gbc.sp());
        EXPECT(0x2574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 031B
        gbc.setState(0x7471, 0x8d8b, 0xd10, 0xdec4, 0xcfcc, 0x100a, 0x0, 0x1);
        gbc.writeMem(0x100a, { 0x19 });
        gbc.writeMem(0x7471, { 0x4e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8d8b, gbc.sp());
        EXPECT(0x7472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 031E
        gbc.setState(0x40a4, 0xc1da, 0x1b70, 0xf6e3, 0xaa43, 0x1781, 0x0, 0x0);
        gbc.writeMem(0x1781, { 0x22 });
        gbc.writeMem(0x40a4, { 0x4e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc1da, gbc.sp());
        EXPECT(0x40a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 031F
        gbc.setState(0x7b0a, 0xf038, 0x5c30, 0x3a, 0x28b1, 0x4b70, 0x1, 0x0);
        gbc.writeMem(0x4b70, { 0xa3 });
        gbc.writeMem(0x7b0a, { 0x4e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf038, gbc.sp());
        EXPECT(0x7b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0320
        gbc.setState(0x5fe4, 0x43e7, 0x28c0, 0x7111, 0x637b, 0x55ab, 0x1, 0x0);
        gbc.writeMem(0x55ab, { 0xf5 });
        gbc.writeMem(0x5fe4, { 0x4e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x43e7, gbc.sp());
        EXPECT(0x5fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0321
        gbc.setState(0x61bf, 0xe49f, 0x8f00, 0xd148, 0xd08d, 0x47e1, 0x0, 0x1);
        gbc.writeMem(0x47e1, { 0x9d });
        gbc.writeMem(0x61bf, { 0x4e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe49f, gbc.sp());
        EXPECT(0x61c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0322
        gbc.setState(0xcf73, 0x400, 0x8a0, 0x8dfe, 0xf58f, 0xe91d, 0x0, 0x1);
        gbc.writeMem(0xcf73, { 0x4e });
        gbc.writeMem(0xe91d, { 0xd5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x400, gbc.sp());
        EXPECT(0xcf74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcf73));
        EXPECT(0xd5, gbc.readMem(0xe91d));
        // 4E 0323
        gbc.setState(0xcbf9, 0x5018, 0xc0, 0x1a46, 0x79b2, 0xab12, 0x0, 0x1);
        gbc.writeMem(0xab12, { 0x25 });
        gbc.writeMem(0xcbf9, { 0x4e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5018, gbc.sp());
        EXPECT(0xcbfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xab12));
        EXPECT(0x4e, gbc.readMem(0xcbf9));
        // 4E 0324
        gbc.setState(0x2566, 0x3145, 0x3db0, 0xeeef, 0x279d, 0x324a, 0x0, 0x1);
        gbc.writeMem(0x2566, { 0x4e });
        gbc.writeMem(0x324a, { 0x3e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3145, gbc.sp());
        EXPECT(0x2567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0325
        gbc.setState(0xbc0c, 0x9dee, 0x7350, 0x8100, 0x2d7d, 0x4e49, 0x1, 0x0);
        gbc.writeMem(0x4e49, { 0x85 });
        gbc.writeMem(0xbc0c, { 0x4e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9dee, gbc.sp());
        EXPECT(0xbc0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbc0c));
        // 4E 0326
        gbc.setState(0xdb9b, 0x7ad1, 0x99e0, 0xf29b, 0x4ccb, 0x852, 0x1, 0x0);
        gbc.writeMem(0x852, { 0x51 });
        gbc.writeMem(0xdb9b, { 0x4e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7ad1, gbc.sp());
        EXPECT(0xdb9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdb9b));
        // 4E 0327
        gbc.setState(0x4f6f, 0x9771, 0xc90, 0x5a3e, 0x882b, 0xc91e, 0x1, 0x0);
        gbc.writeMem(0x4f6f, { 0x4e });
        gbc.writeMem(0xc91e, { 0xdd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9771, gbc.sp());
        EXPECT(0x4f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xc91e));
        // 4E 0328
        gbc.setState(0xda6f, 0x2095, 0x8530, 0xa1ea, 0xcebf, 0x4819, 0x0, 0x1);
        gbc.writeMem(0x4819, { 0x4e });
        gbc.writeMem(0xda6f, { 0x4e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2095, gbc.sp());
        EXPECT(0xda70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xda6f));
        // 4E 0329
        gbc.setState(0x9fdc, 0xc11e, 0xd020, 0x7802, 0xc85c, 0x3a89, 0x0, 0x1);
        gbc.writeMem(0x3a89, { 0xf4 });
        gbc.writeMem(0x9fdc, { 0x4e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc11e, gbc.sp());
        EXPECT(0x9fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9fdc));
        // 4E 032A
        gbc.setState(0x1a7f, 0x5cb3, 0x7880, 0xb18e, 0xb699, 0xc599, 0x1, 0x1);
        gbc.writeMem(0x1a7f, { 0x4e });
        gbc.writeMem(0xc599, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5cb3, gbc.sp());
        EXPECT(0x1a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc599));
        // 4E 032D
        gbc.setState(0x79e6, 0x6ca, 0x3460, 0x89, 0xfb86, 0xba85, 0x1, 0x1);
        gbc.writeMem(0x79e6, { 0x4e });
        gbc.writeMem(0xba85, { 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6ca, gbc.sp());
        EXPECT(0x79e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xba85));
        // 4E 032E
        gbc.setState(0x1c65, 0xa921, 0xf400, 0xedce, 0xb6e8, 0xbd5a, 0x0, 0x0);
        gbc.writeMem(0x1c65, { 0x4e });
        gbc.writeMem(0xbd5a, { 0x4c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa921, gbc.sp());
        EXPECT(0x1c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbd5a));
        // 4E 032F
        gbc.setState(0xbfd8, 0x8dac, 0xc70, 0xeb60, 0xeada, 0x2b7, 0x0, 0x1);
        gbc.writeMem(0x2b7, { 0xa8 });
        gbc.writeMem(0xbfd8, { 0x4e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8dac, gbc.sp());
        EXPECT(0xbfd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbfd8));
        // 4E 0330
        gbc.setState(0x8442, 0xbb02, 0x6e40, 0x3f46, 0x7bb8, 0x2aa5, 0x1, 0x0);
        gbc.writeMem(0x2aa5, { 0x69 });
        gbc.writeMem(0x8442, { 0x4e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbb02, gbc.sp());
        EXPECT(0x8443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8442));
        // 4E 0331
        gbc.setState(0x6549, 0xe3a3, 0xea80, 0xa8a3, 0x20e8, 0xb287, 0x1, 0x0);
        gbc.writeMem(0x6549, { 0x4e });
        gbc.writeMem(0xb287, { 0x57 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe3a3, gbc.sp());
        EXPECT(0x654a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb287));
        // 4E 0332
        gbc.setState(0xd2a4, 0xcfd3, 0xb6c0, 0x6fd2, 0x215, 0x49d2, 0x0, 0x0);
        gbc.writeMem(0x49d2, { 0xb8 });
        gbc.writeMem(0xd2a4, { 0x4e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcfd3, gbc.sp());
        EXPECT(0xd2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd2a4));
        // 4E 0333
        gbc.setState(0x4006, 0xb09f, 0x1f40, 0x688f, 0xe9cf, 0x9e68, 0x1, 0x0);
        gbc.writeMem(0x4006, { 0x4e });
        gbc.writeMem(0x9e68, { 0x18 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb09f, gbc.sp());
        EXPECT(0x4007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x9e68));
        // 4E 0334
        gbc.setState(0xaf72, 0x4f62, 0xdac0, 0x3bde, 0x2f41, 0xe81e, 0x0, 0x0);
        gbc.writeMem(0xaf72, { 0x4e });
        gbc.writeMem(0xe81e, { 0x29 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4f62, gbc.sp());
        EXPECT(0xaf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaf72));
        EXPECT(0x29, gbc.readMem(0xe81e));
        // 4E 0335
        gbc.setState(0x490c, 0xe21a, 0x52b0, 0x8158, 0x9ee9, 0xea00, 0x1, 0x0);
        gbc.writeMem(0x490c, { 0x4e });
        gbc.writeMem(0xea00, { 0xed });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe21a, gbc.sp());
        EXPECT(0x490d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xea00));
        // 4E 0336
        gbc.setState(0x2f4f, 0x310f, 0x1180, 0xe814, 0x9c42, 0xf7c2, 0x0, 0x0);
        gbc.writeMem(0x2f4f, { 0x4e });
        gbc.writeMem(0xf7c2, { 0xd6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x310f, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xf7c2));
        // 4E 0337
        gbc.setState(0x7151, 0x58e8, 0x8e10, 0xc441, 0x67f3, 0x9920, 0x1, 0x1);
        gbc.writeMem(0x7151, { 0x4e });
        gbc.writeMem(0x9920, { 0x5a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x58e8, gbc.sp());
        EXPECT(0x7152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9920));
        // 4E 0338
        gbc.setState(0x2347, 0x9d1d, 0xda50, 0xbe7e, 0x4afb, 0xa0ba, 0x0, 0x1);
        gbc.writeMem(0x2347, { 0x4e });
        gbc.writeMem(0xa0ba, { 0xc5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9d1d, gbc.sp());
        EXPECT(0x2348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa0ba));
        // 4E 0339
        gbc.setState(0x5c55, 0x5c04, 0x64d0, 0x1d78, 0x5816, 0x7d44, 0x0, 0x0);
        gbc.writeMem(0x5c55, { 0x4e });
        gbc.writeMem(0x7d44, { 0x27 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5c04, gbc.sp());
        EXPECT(0x5c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 033A
        gbc.setState(0xd9d6, 0xffb7, 0xdf0, 0xc872, 0xb82e, 0x5ac5, 0x1, 0x0);
        gbc.writeMem(0x5ac5, { 0xcb });
        gbc.writeMem(0xd9d6, { 0x4e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xffb7, gbc.sp());
        EXPECT(0xd9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd9d6));
        // 4E 033B
        gbc.setState(0xd89b, 0x62c5, 0x4d70, 0x3d51, 0x742c, 0xa6b8, 0x1, 0x0);
        gbc.writeMem(0xa6b8, { 0x1b });
        gbc.writeMem(0xd89b, { 0x4e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x62c5, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xa6b8));
        EXPECT(0x4e, gbc.readMem(0xd89b));
        // 4E 033C
        gbc.setState(0x4b27, 0x2932, 0xe5d0, 0x836b, 0x20c6, 0x8a4a, 0x0, 0x1);
        gbc.writeMem(0x4b27, { 0x4e });
        gbc.writeMem(0x8a4a, { 0x6b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2932, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8a4a));
        // 4E 033D
        gbc.setState(0x8979, 0x7a26, 0xac50, 0xb6e9, 0xd665, 0x9afa, 0x0, 0x1);
        gbc.writeMem(0x8979, { 0x4e });
        gbc.writeMem(0x9afa, { 0xa });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7a26, gbc.sp());
        EXPECT(0x897a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8979));
        EXPECT(0xa, gbc.readMem(0x9afa));
        // 4E 033E
        gbc.setState(0x2fda, 0x9df9, 0x940, 0x35d3, 0x6953, 0xc17b, 0x1, 0x1);
        gbc.writeMem(0x2fda, { 0x4e });
        gbc.writeMem(0xc17b, { 0xff });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9df9, gbc.sp());
        EXPECT(0x2fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc17b));
        // 4E 033F
        gbc.setState(0x720, 0xc763, 0xd260, 0x12dd, 0x1cd9, 0xde76, 0x0, 0x0);
        gbc.writeMem(0x720, { 0x4e });
        gbc.writeMem(0xde76, { 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc763, gbc.sp());
        EXPECT(0x721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xde76));
        // 4E 0340
        gbc.setState(0xb4d4, 0x3fe, 0xdaa0, 0x5cf4, 0xc612, 0x2558, 0x0, 0x1);
        gbc.writeMem(0x2558, { 0x81 });
        gbc.writeMem(0xb4d4, { 0x4e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3fe, gbc.sp());
        EXPECT(0xb4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb4d4));
        // 4E 0341
        gbc.setState(0xe6a1, 0x99e3, 0x5f00, 0x61e5, 0xc651, 0x9065, 0x1, 0x0);
        gbc.writeMem(0x9065, { 0x4d });
        gbc.writeMem(0xe6a1, { 0x4e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x99e3, gbc.sp());
        EXPECT(0xe6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9065));
        EXPECT(0x4e, gbc.readMem(0xe6a1));
        // 4E 0342
        gbc.setState(0x44dd, 0x60e8, 0x24d0, 0xc86d, 0x9db, 0xa638, 0x1, 0x0);
        gbc.writeMem(0x44dd, { 0x4e });
        gbc.writeMem(0xa638, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x60e8, gbc.sp());
        EXPECT(0x44de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa638));
        // 4E 0343
        gbc.setState(0xdd20, 0x49a1, 0xf4e0, 0xf505, 0xce98, 0x994e, 0x0, 0x1);
        gbc.writeMem(0x994e, { 0xb2 });
        gbc.writeMem(0xdd20, { 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x49a1, gbc.sp());
        EXPECT(0xdd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x994e));
        EXPECT(0x4e, gbc.readMem(0xdd20));
        // 4E 0344
        gbc.setState(0x38de, 0x3118, 0x45e0, 0x532c, 0xdd07, 0x2551, 0x1, 0x1);
        gbc.writeMem(0x2551, { 0x44 });
        gbc.writeMem(0x38de, { 0x4e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3118, gbc.sp());
        EXPECT(0x38df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0345
        gbc.setState(0xb84d, 0x2d43, 0x6a70, 0xde34, 0x6e7a, 0x9e65, 0x0, 0x1);
        gbc.writeMem(0x9e65, { 0x95 });
        gbc.writeMem(0xb84d, { 0x4e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2d43, gbc.sp());
        EXPECT(0xb84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9e65));
        EXPECT(0x4e, gbc.readMem(0xb84d));
        // 4E 0346
        gbc.setState(0xe9da, 0x22f2, 0xe5a0, 0x1825, 0xd997, 0x8221, 0x1, 0x1);
        gbc.writeMem(0x8221, { 0x68 });
        gbc.writeMem(0xe9da, { 0x4e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x22f2, gbc.sp());
        EXPECT(0xe9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8221));
        EXPECT(0x4e, gbc.readMem(0xe9da));
        // 4E 0347
        gbc.setState(0x2632, 0x9725, 0xe5a0, 0x6f50, 0x9995, 0xb62a, 0x1, 0x1);
        gbc.writeMem(0x2632, { 0x4e });
        gbc.writeMem(0xb62a, { 0x3e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9725, gbc.sp());
        EXPECT(0x2633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb62a));
        // 4E 0348
        gbc.setState(0xb511, 0x7fbf, 0xdc0, 0x96ff, 0xf0f8, 0xebb9, 0x1, 0x1);
        gbc.writeMem(0xb511, { 0x4e });
        gbc.writeMem(0xebb9, { 0x14 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7fbf, gbc.sp());
        EXPECT(0xb512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb511));
        EXPECT(0x14, gbc.readMem(0xebb9));
        // 4E 0349
        gbc.setState(0x8ba, 0x617a, 0x1db0, 0x2b01, 0xed9f, 0x5087, 0x1, 0x1);
        gbc.writeMem(0x8ba, { 0x4e });
        gbc.writeMem(0x5087, { 0x4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x617a, gbc.sp());
        EXPECT(0x8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 034A
        gbc.setState(0xe41c, 0xe918, 0xe240, 0x78b2, 0xc574, 0x7a32, 0x1, 0x0);
        gbc.writeMem(0x7a32, { 0xd2 });
        gbc.writeMem(0xe41c, { 0x4e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe918, gbc.sp());
        EXPECT(0xe41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe41c));
        // 4E 034B
        gbc.setState(0x5c54, 0x6cdf, 0xc6f0, 0xc89b, 0x2397, 0x1d59, 0x1, 0x1);
        gbc.writeMem(0x1d59, { 0xfe });
        gbc.writeMem(0x5c54, { 0x4e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6cdf, gbc.sp());
        EXPECT(0x5c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 034C
        gbc.setState(0xa7da, 0x3e49, 0x7930, 0x62a7, 0x2172, 0x6172, 0x0, 0x1);
        gbc.writeMem(0x6172, { 0x6c });
        gbc.writeMem(0xa7da, { 0x4e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3e49, gbc.sp());
        EXPECT(0xa7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa7da));
        // 4E 034D
        gbc.setState(0x5ee2, 0x5314, 0xcf50, 0x4e77, 0xbc5, 0xc485, 0x1, 0x1);
        gbc.writeMem(0x5ee2, { 0x4e });
        gbc.writeMem(0xc485, { 0x76 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5314, gbc.sp());
        EXPECT(0x5ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc485));
        // 4E 034E
        gbc.setState(0xd003, 0x7a09, 0xd420, 0xdab7, 0xf044, 0x9cbe, 0x0, 0x0);
        gbc.writeMem(0x9cbe, { 0xa0 });
        gbc.writeMem(0xd003, { 0x4e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7a09, gbc.sp());
        EXPECT(0xd004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9cbe));
        EXPECT(0x4e, gbc.readMem(0xd003));
        // 4E 034F
        gbc.setState(0x73fb, 0xc405, 0xf710, 0x17e9, 0xf795, 0xb082, 0x0, 0x1);
        gbc.writeMem(0x73fb, { 0x4e });
        gbc.writeMem(0xb082, { 0x31 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc405, gbc.sp());
        EXPECT(0x73fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb082));
        // 4E 0351
        gbc.setState(0x9611, 0xf36b, 0xa8a0, 0x4056, 0x50a4, 0x770, 0x0, 0x1);
        gbc.writeMem(0x770, { 0x1c });
        gbc.writeMem(0x9611, { 0x4e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf36b, gbc.sp());
        EXPECT(0x9612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9611));
        // 4E 0352
        gbc.setState(0xef6d, 0xaf67, 0x340, 0xce5d, 0xd483, 0x544, 0x1, 0x1);
        gbc.writeMem(0x544, { 0x1c });
        gbc.writeMem(0xef6d, { 0x4e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaf67, gbc.sp());
        EXPECT(0xef6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xef6d));
        // 4E 0353
        gbc.setState(0xcfa0, 0xeffe, 0xf7b0, 0x3468, 0xe771, 0x423e, 0x0, 0x0);
        gbc.writeMem(0x423e, { 0x83 });
        gbc.writeMem(0xcfa0, { 0x4e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xeffe, gbc.sp());
        EXPECT(0xcfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcfa0));
        // 4E 0354
        gbc.setState(0xb8f5, 0x8402, 0x9130, 0x5469, 0xc578, 0x2c03, 0x0, 0x0);
        gbc.writeMem(0x2c03, { 0x28 });
        gbc.writeMem(0xb8f5, { 0x4e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8402, gbc.sp());
        EXPECT(0xb8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb8f5));
        // 4E 0355
        gbc.setState(0x2e9a, 0xf6f7, 0xfe10, 0x9311, 0xa7a0, 0xd1ea, 0x0, 0x1);
        gbc.writeMem(0x2e9a, { 0x4e });
        gbc.writeMem(0xd1ea, { 0x3c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf6f7, gbc.sp());
        EXPECT(0x2e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd1ea));
        // 4E 0356
        gbc.setState(0xc123, 0x8db2, 0xb9f0, 0x658a, 0x478a, 0x6890, 0x1, 0x1);
        gbc.writeMem(0x6890, { 0x38 });
        gbc.writeMem(0xc123, { 0x4e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8db2, gbc.sp());
        EXPECT(0xc124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc123));
        // 4E 0357
        gbc.setState(0xde02, 0xdf7e, 0x7080, 0x59d8, 0xdd21, 0xe46d, 0x1, 0x1);
        gbc.writeMem(0xde02, { 0x4e });
        gbc.writeMem(0xe46d, { 0xeb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdf7e, gbc.sp());
        EXPECT(0xde03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xde02));
        EXPECT(0xeb, gbc.readMem(0xe46d));
        // 4E 0358
        gbc.setState(0x6170, 0x633e, 0x6630, 0x856a, 0xcdac, 0x2b64, 0x1, 0x0);
        gbc.writeMem(0x2b64, { 0x21 });
        gbc.writeMem(0x6170, { 0x4e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x633e, gbc.sp());
        EXPECT(0x6171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0359
        gbc.setState(0xa036, 0x5d46, 0x7660, 0x5357, 0xfae9, 0x4587, 0x1, 0x1);
        gbc.writeMem(0x4587, { 0xaa });
        gbc.writeMem(0xa036, { 0x4e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5d46, gbc.sp());
        EXPECT(0xa037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa036));
        // 4E 035A
        gbc.setState(0x56a8, 0x9d5a, 0x9400, 0x91e8, 0xd68e, 0xa93, 0x1, 0x1);
        gbc.writeMem(0xa93, { 0xa4 });
        gbc.writeMem(0x56a8, { 0x4e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9d5a, gbc.sp());
        EXPECT(0x56a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 035B
        gbc.setState(0x720, 0x6834, 0xf660, 0x8cf7, 0xec7, 0xbaee, 0x1, 0x0);
        gbc.writeMem(0x720, { 0x4e });
        gbc.writeMem(0xbaee, { 0xf4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6834, gbc.sp());
        EXPECT(0x721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xbaee));
        // 4E 035C
        gbc.setState(0x6ec1, 0x9baf, 0x97e0, 0x5086, 0xeab8, 0x736d, 0x1, 0x1);
        gbc.writeMem(0x6ec1, { 0x4e });
        gbc.writeMem(0x736d, { 0x5a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9baf, gbc.sp());
        EXPECT(0x6ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 035D
        gbc.setState(0x16c4, 0xa4dd, 0x10b0, 0xb43d, 0x1825, 0x4eb1, 0x0, 0x0);
        gbc.writeMem(0x16c4, { 0x4e });
        gbc.writeMem(0x4eb1, { 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa4dd, gbc.sp());
        EXPECT(0x16c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 035E
        gbc.setState(0xde65, 0x9468, 0x2960, 0x76a8, 0x3a19, 0x9bef, 0x1, 0x1);
        gbc.writeMem(0x9bef, { 0x4e });
        gbc.writeMem(0xde65, { 0x4e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9468, gbc.sp());
        EXPECT(0xde66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9bef));
        EXPECT(0x4e, gbc.readMem(0xde65));
        // 4E 035F
        gbc.setState(0x4c58, 0x614f, 0x3120, 0x7b9a, 0x6c90, 0x2f18, 0x0, 0x1);
        gbc.writeMem(0x2f18, { 0x8 });
        gbc.writeMem(0x4c58, { 0x4e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x614f, gbc.sp());
        EXPECT(0x4c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0360
        gbc.setState(0x3cc7, 0xe706, 0x7bb0, 0x8e86, 0xd99d, 0xc33e, 0x0, 0x0);
        gbc.writeMem(0x3cc7, { 0x4e });
        gbc.writeMem(0xc33e, { 0x72 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe706, gbc.sp());
        EXPECT(0x3cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc33e));
        // 4E 0361
        gbc.setState(0x97c6, 0x6ef3, 0x5de0, 0xbb9b, 0x8057, 0xb8c9, 0x0, 0x1);
        gbc.writeMem(0x97c6, { 0x4e });
        gbc.writeMem(0xb8c9, { 0x51 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6ef3, gbc.sp());
        EXPECT(0x97c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x97c6));
        EXPECT(0x51, gbc.readMem(0xb8c9));
        // 4E 0362
        gbc.setState(0x4f88, 0x2ac1, 0xab70, 0xb559, 0x5301, 0x430a, 0x1, 0x0);
        gbc.writeMem(0x430a, { 0x7c });
        gbc.writeMem(0x4f88, { 0x4e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2ac1, gbc.sp());
        EXPECT(0x4f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0363
        gbc.setState(0xb373, 0xf1, 0xb060, 0xbc63, 0x529a, 0xb173, 0x0, 0x0);
        gbc.writeMem(0xb173, { 0x41 });
        gbc.writeMem(0xb373, { 0x4e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf1, gbc.sp());
        EXPECT(0xb374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb173));
        EXPECT(0x4e, gbc.readMem(0xb373));
        // 4E 0364
        gbc.setState(0x969b, 0x59df, 0x2c60, 0x64b, 0xd56f, 0x3fdf, 0x0, 0x1);
        gbc.writeMem(0x3fdf, { 0x2f });
        gbc.writeMem(0x969b, { 0x4e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x59df, gbc.sp());
        EXPECT(0x969c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x969b));
        // 4E 0365
        gbc.setState(0x94dd, 0x3d4b, 0xb350, 0xbd3a, 0xa0c2, 0xca5d, 0x1, 0x1);
        gbc.writeMem(0x94dd, { 0x4e });
        gbc.writeMem(0xca5d, { 0xd1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3d4b, gbc.sp());
        EXPECT(0x94de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x94dd));
        EXPECT(0xd1, gbc.readMem(0xca5d));
        // 4E 0366
        gbc.setState(0xaf2, 0xf25f, 0x2280, 0x73a2, 0xcc5d, 0x5a94, 0x1, 0x1);
        gbc.writeMem(0xaf2, { 0x4e });
        gbc.writeMem(0x5a94, { 0x7a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf25f, gbc.sp());
        EXPECT(0xaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0367
        gbc.setState(0x2aef, 0x8ded, 0xbfb0, 0x97cc, 0xf6b7, 0x5b4e, 0x1, 0x0);
        gbc.writeMem(0x2aef, { 0x4e });
        gbc.writeMem(0x5b4e, { 0xfd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8ded, gbc.sp());
        EXPECT(0x2af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0368
        gbc.setState(0xa05a, 0xf216, 0xec0, 0x72ce, 0xaf65, 0xde1f, 0x1, 0x0);
        gbc.writeMem(0xa05a, { 0x4e });
        gbc.writeMem(0xde1f, { 0x5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf216, gbc.sp());
        EXPECT(0xa05b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa05a));
        EXPECT(0x5, gbc.readMem(0xde1f));
        // 4E 0369
        gbc.setState(0x2311, 0x980b, 0xe010, 0x2a67, 0xa4a1, 0x46f2, 0x0, 0x0);
        gbc.writeMem(0x2311, { 0x4e });
        gbc.writeMem(0x46f2, { 0x52 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x980b, gbc.sp());
        EXPECT(0x2312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 036A
        gbc.setState(0x92fd, 0x6ba5, 0x3050, 0xa6a6, 0xacbe, 0xec93, 0x0, 0x0);
        gbc.writeMem(0x92fd, { 0x4e });
        gbc.writeMem(0xec93, { 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6ba5, gbc.sp());
        EXPECT(0x92fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x92fd));
        EXPECT(0x3f, gbc.readMem(0xec93));
        // 4E 036B
        gbc.setState(0xe273, 0xc079, 0x7fa0, 0x9b80, 0x6aed, 0x99bd, 0x0, 0x0);
        gbc.writeMem(0x99bd, { 0xa9 });
        gbc.writeMem(0xe273, { 0x4e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc079, gbc.sp());
        EXPECT(0xe274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x99bd));
        EXPECT(0x4e, gbc.readMem(0xe273));
        // 4E 036C
        gbc.setState(0x579a, 0xd602, 0xe2e0, 0x6d59, 0x23de, 0x79fe, 0x1, 0x0);
        gbc.writeMem(0x579a, { 0x4e });
        gbc.writeMem(0x79fe, { 0xcd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd602, gbc.sp());
        EXPECT(0x579b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 036D
        gbc.setState(0x26ac, 0xd2f7, 0x5e40, 0xab94, 0xc3ea, 0xea91, 0x1, 0x0);
        gbc.writeMem(0x26ac, { 0x4e });
        gbc.writeMem(0xea91, { 0x61 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd2f7, gbc.sp());
        EXPECT(0x26ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xea91));
        // 4E 036E
        gbc.setState(0xc2c4, 0x4f2f, 0x6450, 0x89fd, 0xa1d, 0x749, 0x0, 0x1);
        gbc.writeMem(0x749, { 0xc4 });
        gbc.writeMem(0xc2c4, { 0x4e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4f2f, gbc.sp());
        EXPECT(0xc2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc2c4));
        // 4E 036F
        gbc.setState(0xe4be, 0xe39c, 0xc0d0, 0x3046, 0xf214, 0xac72, 0x1, 0x0);
        gbc.writeMem(0xac72, { 0x66 });
        gbc.writeMem(0xe4be, { 0x4e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe39c, gbc.sp());
        EXPECT(0xe4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xac72));
        EXPECT(0x4e, gbc.readMem(0xe4be));
        // 4E 0370
        gbc.setState(0x5240, 0x85ea, 0x97b0, 0xfd9, 0xf8, 0x3f1, 0x0, 0x0);
        gbc.writeMem(0x3f1, { 0xf6 });
        gbc.writeMem(0x5240, { 0x4e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x85ea, gbc.sp());
        EXPECT(0x5241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0371
        gbc.setState(0x31b3, 0xd52c, 0x1500, 0xc428, 0xa6d4, 0xf29a, 0x0, 0x0);
        gbc.writeMem(0x31b3, { 0x4e });
        gbc.writeMem(0xf29a, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd52c, gbc.sp());
        EXPECT(0x31b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf29a));
        // 4E 0372
        gbc.setState(0x408c, 0xb0f0, 0xfeb0, 0x4e68, 0xfb39, 0x938a, 0x1, 0x1);
        gbc.writeMem(0x408c, { 0x4e });
        gbc.writeMem(0x938a, { 0xf7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb0f0, gbc.sp());
        EXPECT(0x408d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x938a));
        // 4E 0373
        gbc.setState(0xe784, 0x470c, 0x7d70, 0x75e9, 0x4787, 0xd0ad, 0x1, 0x0);
        gbc.writeMem(0xd0ad, { 0xbd });
        gbc.writeMem(0xe784, { 0x4e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x470c, gbc.sp());
        EXPECT(0xe785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd0ad));
        EXPECT(0x4e, gbc.readMem(0xe784));
        // 4E 0374
        gbc.setState(0xdd0, 0xced7, 0x9c0, 0xaa02, 0x2d6d, 0x500e, 0x0, 0x0);
        gbc.writeMem(0xdd0, { 0x4e });
        gbc.writeMem(0x500e, { 0x72 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xced7, gbc.sp());
        EXPECT(0xdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0375
        gbc.setState(0xdcfe, 0xba, 0xf330, 0x4f1, 0x851e, 0xae26, 0x1, 0x0);
        gbc.writeMem(0xae26, { 0x13 });
        gbc.writeMem(0xdcfe, { 0x4e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xba, gbc.sp());
        EXPECT(0xdcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xae26));
        EXPECT(0x4e, gbc.readMem(0xdcfe));
        // 4E 0376
        gbc.setState(0x998c, 0xf7ae, 0x4590, 0x81ae, 0xc7e, 0x461c, 0x0, 0x1);
        gbc.writeMem(0x461c, { 0x1c });
        gbc.writeMem(0x998c, { 0x4e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf7ae, gbc.sp());
        EXPECT(0x998d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x998c));
        // 4E 0377
        gbc.setState(0xaf97, 0xee8, 0xa8d0, 0x2e4b, 0x751d, 0x1a0f, 0x0, 0x1);
        gbc.writeMem(0x1a0f, { 0x39 });
        gbc.writeMem(0xaf97, { 0x4e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xee8, gbc.sp());
        EXPECT(0xaf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaf97));
        // 4E 0378
        gbc.setState(0x90f4, 0x6e3d, 0x7030, 0x92d9, 0xfda1, 0xcd36, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0x4e });
        gbc.writeMem(0xcd36, { 0x72 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6e3d, gbc.sp());
        EXPECT(0x90f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x90f4));
        EXPECT(0x72, gbc.readMem(0xcd36));
        // 4E 0379
        gbc.setState(0xbbce, 0xe353, 0xdad0, 0xd6b3, 0xfd16, 0xcb45, 0x0, 0x1);
        gbc.writeMem(0xbbce, { 0x4e });
        gbc.writeMem(0xcb45, { 0xc8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe353, gbc.sp());
        EXPECT(0xbbcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbbce));
        EXPECT(0xc8, gbc.readMem(0xcb45));
        // 4E 037A
        gbc.setState(0xb477, 0x4738, 0x4c40, 0x887d, 0x12fd, 0xbf5f, 0x1, 0x0);
        gbc.writeMem(0xb477, { 0x4e });
        gbc.writeMem(0xbf5f, { 0x7a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4738, gbc.sp());
        EXPECT(0xb478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb477));
        EXPECT(0x7a, gbc.readMem(0xbf5f));
        // 4E 037B
        gbc.setState(0x7690, 0x383d, 0x820, 0x95d3, 0xb91d, 0xe66c, 0x0, 0x1);
        gbc.writeMem(0x7690, { 0x4e });
        gbc.writeMem(0xe66c, { 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0x7691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe66c));
        // 4E 037C
        gbc.setState(0xc603, 0xa7c4, 0x5130, 0x604b, 0x3ff6, 0x439, 0x1, 0x1);
        gbc.writeMem(0x439, { 0xda });
        gbc.writeMem(0xc603, { 0x4e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa7c4, gbc.sp());
        EXPECT(0xc604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc603));
        // 4E 037D
        gbc.setState(0x9f8e, 0xf398, 0xfaa0, 0xb3b8, 0x7713, 0x888a, 0x0, 0x0);
        gbc.writeMem(0x888a, { 0x5d });
        gbc.writeMem(0x9f8e, { 0x4e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf398, gbc.sp());
        EXPECT(0x9f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x888a));
        EXPECT(0x4e, gbc.readMem(0x9f8e));
        // 4E 037E
        gbc.setState(0x7f62, 0x5490, 0x2550, 0x7c6d, 0xeb64, 0xd743, 0x1, 0x0);
        gbc.writeMem(0x7f62, { 0x4e });
        gbc.writeMem(0xd743, { 0x36 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5490, gbc.sp());
        EXPECT(0x7f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd743));
        // 4E 037F
        gbc.setState(0x1039, 0x5cee, 0xd670, 0x449, 0xffb8, 0x5388, 0x1, 0x1);
        gbc.writeMem(0x1039, { 0x4e });
        gbc.writeMem(0x5388, { 0x46 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5cee, gbc.sp());
        EXPECT(0x103a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0381
        gbc.setState(0xe97, 0xeb30, 0x92f0, 0x5809, 0x2f77, 0x1f61, 0x0, 0x0);
        gbc.writeMem(0xe97, { 0x4e });
        gbc.writeMem(0x1f61, { 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xeb30, gbc.sp());
        EXPECT(0xe98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0383
        gbc.setState(0x92d1, 0x2d58, 0x63d0, 0x868a, 0xa7ac, 0x6525, 0x0, 0x1);
        gbc.writeMem(0x6525, { 0xc6 });
        gbc.writeMem(0x92d1, { 0x4e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2d58, gbc.sp());
        EXPECT(0x92d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x92d1));
        // 4E 0384
        gbc.setState(0x3c13, 0xed26, 0xf010, 0x5e04, 0x949f, 0x1d9d, 0x0, 0x1);
        gbc.writeMem(0x1d9d, { 0x65 });
        gbc.writeMem(0x3c13, { 0x4e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xed26, gbc.sp());
        EXPECT(0x3c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0385
        gbc.setState(0x36e9, 0x6f22, 0x2450, 0xa005, 0x5f72, 0xf17f, 0x1, 0x0);
        gbc.writeMem(0x36e9, { 0x4e });
        gbc.writeMem(0xf17f, { 0x77 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6f22, gbc.sp());
        EXPECT(0x36ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xf17f));
        // 4E 0386
        gbc.setState(0x6a87, 0x67be, 0xa190, 0xbee9, 0xe7c1, 0xef58, 0x0, 0x0);
        gbc.writeMem(0x6a87, { 0x4e });
        gbc.writeMem(0xef58, { 0xe9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x67be, gbc.sp());
        EXPECT(0x6a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xef58));
        // 4E 0387
        gbc.setState(0xdc30, 0x13aa, 0xc270, 0x4420, 0xfc28, 0xb5f3, 0x0, 0x1);
        gbc.writeMem(0xb5f3, { 0x47 });
        gbc.writeMem(0xdc30, { 0x4e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x13aa, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb5f3));
        EXPECT(0x4e, gbc.readMem(0xdc30));
        // 4E 0388
        gbc.setState(0x28c2, 0x2a1e, 0x6470, 0x7846, 0xbe58, 0x783a, 0x0, 0x1);
        gbc.writeMem(0x28c2, { 0x4e });
        gbc.writeMem(0x783a, { 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2a1e, gbc.sp());
        EXPECT(0x28c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0389
        gbc.setState(0xdfcd, 0x6134, 0xf4a0, 0xacac, 0x39d8, 0xac81, 0x0, 0x0);
        gbc.writeMem(0xac81, { 0x27 });
        gbc.writeMem(0xdfcd, { 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6134, gbc.sp());
        EXPECT(0xdfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xac81));
        EXPECT(0x4e, gbc.readMem(0xdfcd));
        // 4E 038A
        gbc.setState(0x637e, 0xab7b, 0x8750, 0xd5d9, 0x3634, 0x9951, 0x0, 0x0);
        gbc.writeMem(0x637e, { 0x4e });
        gbc.writeMem(0x9951, { 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xab7b, gbc.sp());
        EXPECT(0x637f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9951));
        // 4E 038B
        gbc.setState(0x3922, 0x5159, 0x5d40, 0xa4a8, 0xc41b, 0xe47c, 0x1, 0x1);
        gbc.writeMem(0x3922, { 0x4e });
        gbc.writeMem(0xe47c, { 0x72 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5159, gbc.sp());
        EXPECT(0x3923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xe47c));
        // 4E 038C
        gbc.setState(0xe05a, 0xbbe8, 0x9c0, 0xbbeb, 0x40cd, 0x6920, 0x0, 0x1);
        gbc.writeMem(0x6920, { 0x9b });
        gbc.writeMem(0xe05a, { 0x4e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbbe8, gbc.sp());
        EXPECT(0xe05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe05a));
        // 4E 038D
        gbc.setState(0x6425, 0x96d, 0x4590, 0x8f61, 0xefcb, 0x8045, 0x0, 0x0);
        gbc.writeMem(0x6425, { 0x4e });
        gbc.writeMem(0x8045, { 0xf3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x96d, gbc.sp());
        EXPECT(0x6426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8045));
        // 4E 038E
        gbc.setState(0x43e3, 0xb8b3, 0xa2b0, 0xd0b2, 0x440b, 0x3e1f, 0x0, 0x1);
        gbc.writeMem(0x3e1f, { 0xeb });
        gbc.writeMem(0x43e3, { 0x4e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb8b3, gbc.sp());
        EXPECT(0x43e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0390
        gbc.setState(0xa803, 0x7d69, 0xd3c0, 0x820a, 0xdedc, 0x5ea5, 0x0, 0x0);
        gbc.writeMem(0x5ea5, { 0xde });
        gbc.writeMem(0xa803, { 0x4e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7d69, gbc.sp());
        EXPECT(0xa804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa803));
        // 4E 0391
        gbc.setState(0x368a, 0x961f, 0x99e0, 0x5d78, 0xeea3, 0xee4, 0x0, 0x1);
        gbc.writeMem(0xee4, { 0xe7 });
        gbc.writeMem(0x368a, { 0x4e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x961f, gbc.sp());
        EXPECT(0x368b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0392
        gbc.setState(0x39c1, 0xd3a0, 0xcd70, 0xb211, 0x570f, 0x6601, 0x1, 0x1);
        gbc.writeMem(0x39c1, { 0x4e });
        gbc.writeMem(0x6601, { 0x60 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd3a0, gbc.sp());
        EXPECT(0x39c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 0393
        gbc.setState(0x943b, 0xd87f, 0xcc60, 0x643b, 0x115c, 0x9ce7, 0x1, 0x1);
        gbc.writeMem(0x943b, { 0x4e });
        gbc.writeMem(0x9ce7, { 0x36 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd87f, gbc.sp());
        EXPECT(0x943c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x943b));
        EXPECT(0x36, gbc.readMem(0x9ce7));
        // 4E 0395
        gbc.setState(0x334, 0xe035, 0x1b20, 0xbbbe, 0x6976, 0x5a36, 0x1, 0x0);
        gbc.writeMem(0x334, { 0x4e });
        gbc.writeMem(0x5a36, { 0x7b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0x335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 0396
        gbc.setState(0xe67e, 0xdad0, 0xd640, 0xa4ad, 0xbdf6, 0x9946, 0x0, 0x0);
        gbc.writeMem(0x9946, { 0x2e });
        gbc.writeMem(0xe67e, { 0x4e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdad0, gbc.sp());
        EXPECT(0xe67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9946));
        EXPECT(0x4e, gbc.readMem(0xe67e));
        // 4E 0397
        gbc.setState(0xe466, 0xe0a9, 0x1510, 0x5361, 0xc98, 0xb56d, 0x0, 0x1);
        gbc.writeMem(0xb56d, { 0xd });
        gbc.writeMem(0xe466, { 0x4e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe0a9, gbc.sp());
        EXPECT(0xe467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xb56d));
        EXPECT(0x4e, gbc.readMem(0xe466));
        // 4E 0398
        gbc.setState(0xc89e, 0xfdf9, 0xcb80, 0x3fff, 0x4d9d, 0x1aba, 0x1, 0x0);
        gbc.writeMem(0x1aba, { 0x2 });
        gbc.writeMem(0xc89e, { 0x4e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfdf9, gbc.sp());
        EXPECT(0xc89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc89e));
        // 4E 0399
        gbc.setState(0x4fa8, 0x50be, 0x5fd0, 0x2c94, 0xd961, 0xdea0, 0x1, 0x1);
        gbc.writeMem(0x4fa8, { 0x4e });
        gbc.writeMem(0xdea0, { 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x50be, gbc.sp());
        EXPECT(0x4fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdea0));
        // 4E 039A
        gbc.setState(0x5b8d, 0x34d5, 0xb7e0, 0xe58f, 0xa656, 0xb407, 0x0, 0x1);
        gbc.writeMem(0x5b8d, { 0x4e });
        gbc.writeMem(0xb407, { 0xc3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x34d5, gbc.sp());
        EXPECT(0x5b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb407));
        // 4E 039B
        gbc.setState(0x5ae1, 0x2872, 0x2760, 0x9449, 0x2930, 0x6539, 0x1, 0x0);
        gbc.writeMem(0x5ae1, { 0x4e });
        gbc.writeMem(0x6539, { 0xd7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2872, gbc.sp());
        EXPECT(0x5ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 039C
        gbc.setState(0x7d7e, 0x8da7, 0x3170, 0x82d5, 0x21bf, 0x8bca, 0x1, 0x0);
        gbc.writeMem(0x7d7e, { 0x4e });
        gbc.writeMem(0x8bca, { 0xd1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0x7d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x8bca));
        // 4E 039D
        gbc.setState(0x3525, 0xf077, 0x6600, 0xe0a7, 0xc47f, 0xe04b, 0x1, 0x1);
        gbc.writeMem(0x3525, { 0x4e });
        gbc.writeMem(0xe04b, { 0xe });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf077, gbc.sp());
        EXPECT(0x3526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe04b));
        // 4E 039E
        gbc.setState(0x4ad7, 0xb709, 0xcd50, 0x5f8d, 0xa6a4, 0xf845, 0x0, 0x1);
        gbc.writeMem(0x4ad7, { 0x4e });
        gbc.writeMem(0xf845, { 0xd6 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb709, gbc.sp());
        EXPECT(0x4ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xf845));
        // 4E 039F
        gbc.setState(0x282, 0x3d96, 0x2110, 0x59c0, 0x9712, 0x3891, 0x0, 0x1);
        gbc.writeMem(0x282, { 0x4e });
        gbc.writeMem(0x3891, { 0xe8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3d96, gbc.sp());
        EXPECT(0x283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 03A0
        gbc.setState(0x1d73, 0xfb4b, 0xf9b0, 0x97ea, 0xac8c, 0xa245, 0x1, 0x0);
        gbc.writeMem(0x1d73, { 0x4e });
        gbc.writeMem(0xa245, { 0x7c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfb4b, gbc.sp());
        EXPECT(0x1d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa245));
        // 4E 03A1
        gbc.setState(0xd731, 0xcc15, 0x1cf0, 0x9e51, 0x1ba2, 0xdc33, 0x1, 0x0);
        gbc.writeMem(0xd731, { 0x4e });
        gbc.writeMem(0xdc33, { 0x2b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcc15, gbc.sp());
        EXPECT(0xd732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd731));
        EXPECT(0x2b, gbc.readMem(0xdc33));
        // 4E 03A2
        gbc.setState(0x7c8, 0xd190, 0xc690, 0x5956, 0x200, 0xbc8f, 0x1, 0x1);
        gbc.writeMem(0x7c8, { 0x4e });
        gbc.writeMem(0xbc8f, { 0x62 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd190, gbc.sp());
        EXPECT(0x7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xbc8f));
        // 4E 03A3
        gbc.setState(0x7c83, 0xc078, 0xa120, 0x97de, 0x5cb, 0x1043, 0x1, 0x1);
        gbc.writeMem(0x1043, { 0xe6 });
        gbc.writeMem(0x7c83, { 0x4e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc078, gbc.sp());
        EXPECT(0x7c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03A4
        gbc.setState(0x63ba, 0x27d2, 0xa5c0, 0x8a2e, 0x396f, 0xd1f6, 0x1, 0x0);
        gbc.writeMem(0x63ba, { 0x4e });
        gbc.writeMem(0xd1f6, { 0xd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x27d2, gbc.sp());
        EXPECT(0x63bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xd1f6));
        // 4E 03A5
        gbc.setState(0x9d18, 0x102d, 0x9340, 0x22fd, 0x7f4a, 0xe3c4, 0x0, 0x0);
        gbc.writeMem(0x9d18, { 0x4e });
        gbc.writeMem(0xe3c4, { 0x92 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x102d, gbc.sp());
        EXPECT(0x9d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9d18));
        EXPECT(0x92, gbc.readMem(0xe3c4));
        // 4E 03A6
        gbc.setState(0xb871, 0xecc1, 0xdff0, 0x8218, 0x1994, 0x502a, 0x0, 0x1);
        gbc.writeMem(0x502a, { 0x96 });
        gbc.writeMem(0xb871, { 0x4e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xecc1, gbc.sp());
        EXPECT(0xb872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb871));
        // 4E 03A7
        gbc.setState(0x20dd, 0xd6c5, 0x98a0, 0x7be, 0x8a75, 0x8765, 0x0, 0x1);
        gbc.writeMem(0x20dd, { 0x4e });
        gbc.writeMem(0x8765, { 0x59 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd6c5, gbc.sp());
        EXPECT(0x20de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x8765));
        // 4E 03A8
        gbc.setState(0x5fde, 0x6240, 0x3060, 0xeb8d, 0x51ba, 0xc807, 0x0, 0x0);
        gbc.writeMem(0x5fde, { 0x4e });
        gbc.writeMem(0xc807, { 0x4c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6240, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc807));
        // 4E 03A9
        gbc.setState(0x7e85, 0xa37e, 0xfd10, 0x9fa0, 0x5f81, 0xe44b, 0x1, 0x0);
        gbc.writeMem(0x7e85, { 0x4e });
        gbc.writeMem(0xe44b, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa37e, gbc.sp());
        EXPECT(0x7e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe44b));
        // 4E 03AA
        gbc.setState(0xdb48, 0x5347, 0x89b0, 0x627d, 0x4bb4, 0xcdcd, 0x1, 0x0);
        gbc.writeMem(0xcdcd, { 0xc1 });
        gbc.writeMem(0xdb48, { 0x4e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5347, gbc.sp());
        EXPECT(0xdb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcdcd));
        EXPECT(0x4e, gbc.readMem(0xdb48));
        // 4E 03AC
        gbc.setState(0xeb85, 0x516f, 0xcb40, 0x6ea1, 0x71c9, 0x213d, 0x1, 0x0);
        gbc.writeMem(0x213d, { 0x89 });
        gbc.writeMem(0xeb85, { 0x4e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x516f, gbc.sp());
        EXPECT(0xeb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xeb85));
        // 4E 03AD
        gbc.setState(0x3a00, 0xd567, 0xa440, 0x7b09, 0x46ec, 0x3b19, 0x1, 0x0);
        gbc.writeMem(0x3a00, { 0x4e });
        gbc.writeMem(0x3b19, { 0x5d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd567, gbc.sp());
        EXPECT(0x3a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03AE
        gbc.setState(0x957c, 0xce9e, 0xfa60, 0x8479, 0xb62f, 0x9679, 0x1, 0x1);
        gbc.writeMem(0x957c, { 0x4e });
        gbc.writeMem(0x9679, { 0xb4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xce9e, gbc.sp());
        EXPECT(0x957d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x957c));
        EXPECT(0xb4, gbc.readMem(0x9679));
        // 4E 03AF
        gbc.setState(0x791e, 0xdebc, 0x9830, 0xaa9b, 0x1dbb, 0xf3cf, 0x1, 0x0);
        gbc.writeMem(0x791e, { 0x4e });
        gbc.writeMem(0xf3cf, { 0x85 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdebc, gbc.sp());
        EXPECT(0x791f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xf3cf));
        // 4E 03B0
        gbc.setState(0xc1c4, 0x523e, 0x7ab0, 0x3b62, 0x229e, 0x1ae5, 0x1, 0x1);
        gbc.writeMem(0x1ae5, { 0xd8 });
        gbc.writeMem(0xc1c4, { 0x4e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0xc1c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc1c4));
        // 4E 03B1
        gbc.setState(0x2114, 0xd63e, 0x1180, 0xa4f1, 0xe226, 0x6deb, 0x0, 0x1);
        gbc.writeMem(0x2114, { 0x4e });
        gbc.writeMem(0x6deb, { 0xf6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd63e, gbc.sp());
        EXPECT(0x2115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03B2
        gbc.setState(0x293c, 0x7d2d, 0x4fc0, 0x8fc0, 0x7f4b, 0x274b, 0x1, 0x0);
        gbc.writeMem(0x274b, { 0x9d });
        gbc.writeMem(0x293c, { 0x4e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7d2d, gbc.sp());
        EXPECT(0x293d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03B3
        gbc.setState(0x5fbe, 0x6a13, 0x4750, 0x1458, 0x94c, 0x93a0, 0x1, 0x1);
        gbc.writeMem(0x5fbe, { 0x4e });
        gbc.writeMem(0x93a0, { 0x73 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6a13, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x93a0));
        // 4E 03B5
        gbc.setState(0xa550, 0x1fd9, 0xc580, 0xf262, 0xd2b9, 0x3174, 0x1, 0x1);
        gbc.writeMem(0x3174, { 0x8 });
        gbc.writeMem(0xa550, { 0x4e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1fd9, gbc.sp());
        EXPECT(0xa551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa550));
        // 4E 03B6
        gbc.setState(0xd37f, 0x60ef, 0xd2b0, 0x9ac4, 0xe796, 0x279e, 0x1, 0x1);
        gbc.writeMem(0x279e, { 0xb4 });
        gbc.writeMem(0xd37f, { 0x4e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x60ef, gbc.sp());
        EXPECT(0xd380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd37f));
        // 4E 03B7
        gbc.setState(0x2547, 0xa295, 0x5bb0, 0x1376, 0xffd0, 0x7a01, 0x0, 0x0);
        gbc.writeMem(0x2547, { 0x4e });
        gbc.writeMem(0x7a01, { 0xff });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa295, gbc.sp());
        EXPECT(0x2548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 03B8
        gbc.setState(0x4574, 0x2f5b, 0x2d50, 0x2a62, 0xdb7c, 0xe3c0, 0x0, 0x1);
        gbc.writeMem(0x4574, { 0x4e });
        gbc.writeMem(0xe3c0, { 0xcc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2f5b, gbc.sp());
        EXPECT(0x4575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xe3c0));
        // 4E 03B9
        gbc.setState(0xc1bd, 0xd174, 0xd780, 0xb922, 0x8032, 0x7024, 0x0, 0x1);
        gbc.writeMem(0x7024, { 0x61 });
        gbc.writeMem(0xc1bd, { 0x4e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd174, gbc.sp());
        EXPECT(0xc1be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc1bd));
        // 4E 03BA
        gbc.setState(0xa166, 0x2d0c, 0x3f0, 0xe418, 0xcc3c, 0xd9af, 0x0, 0x0);
        gbc.writeMem(0xa166, { 0x4e });
        gbc.writeMem(0xd9af, { 0xc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2d0c, gbc.sp());
        EXPECT(0xa167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa166));
        EXPECT(0xc, gbc.readMem(0xd9af));
        // 4E 03BB
        gbc.setState(0x40, 0x7b2, 0xa050, 0x8e0a, 0xc7af, 0x8574, 0x1, 0x0);
        gbc.writeMem(0x40, { 0x4e });
        gbc.writeMem(0x8574, { 0x78 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7b2, gbc.sp());
        EXPECT(0x41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8574));
        // 4E 03BC
        gbc.setState(0x6546, 0x2349, 0x9950, 0xe3e7, 0x2d68, 0xcea1, 0x0, 0x0);
        gbc.writeMem(0x6546, { 0x4e });
        gbc.writeMem(0xcea1, { 0xba });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2349, gbc.sp());
        EXPECT(0x6547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xcea1));
        // 4E 03BD
        gbc.setState(0x1142, 0xca5c, 0x7dc0, 0xf0aa, 0x36d2, 0xe5a3, 0x1, 0x0);
        gbc.writeMem(0x1142, { 0x4e });
        gbc.writeMem(0xe5a3, { 0xf1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xca5c, gbc.sp());
        EXPECT(0x1143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe5a3));
        // 4E 03BE
        gbc.setState(0x5b42, 0x2f39, 0x4db0, 0xe56d, 0x75c5, 0x2b5, 0x1, 0x1);
        gbc.writeMem(0x2b5, { 0x3b });
        gbc.writeMem(0x5b42, { 0x4e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2f39, gbc.sp());
        EXPECT(0x5b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 03C0
        gbc.setState(0x7ddd, 0xae8c, 0xe020, 0x8f20, 0xb21f, 0xc3a0, 0x1, 0x1);
        gbc.writeMem(0x7ddd, { 0x4e });
        gbc.writeMem(0xc3a0, { 0x26 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0x7dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc3a0));
        // 4E 03C1
        gbc.setState(0x3854, 0xc90d, 0xdca0, 0xe845, 0xb6f9, 0xe943, 0x1, 0x1);
        gbc.writeMem(0x3854, { 0x4e });
        gbc.writeMem(0xe943, { 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc90d, gbc.sp());
        EXPECT(0x3855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe943));
        // 4E 03C2
        gbc.setState(0xeb7d, 0xb223, 0x83d0, 0xa220, 0xcc05, 0xf958, 0x0, 0x1);
        gbc.writeMem(0xeb7d, { 0x4e });
        gbc.writeMem(0xf958, { 0x31 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb223, gbc.sp());
        EXPECT(0xeb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xeb7d));
        EXPECT(0x31, gbc.readMem(0xf958));
        // 4E 03C3
        gbc.setState(0x5b64, 0xbefc, 0xa330, 0x678f, 0xb0e9, 0xdd5b, 0x0, 0x1);
        gbc.writeMem(0x5b64, { 0x4e });
        gbc.writeMem(0xdd5b, { 0x11 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbefc, gbc.sp());
        EXPECT(0x5b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdd5b));
        // 4E 03C4
        gbc.setState(0x68ca, 0xb380, 0xeb20, 0x9c23, 0xe7db, 0x5b6d, 0x0, 0x1);
        gbc.writeMem(0x5b6d, { 0x1a });
        gbc.writeMem(0x68ca, { 0x4e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb380, gbc.sp());
        EXPECT(0x68cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03C5
        gbc.setState(0x99aa, 0xf0a3, 0x36d0, 0x31d6, 0xbfa7, 0x6314, 0x1, 0x1);
        gbc.writeMem(0x6314, { 0xb8 });
        gbc.writeMem(0x99aa, { 0x4e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf0a3, gbc.sp());
        EXPECT(0x99ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x99aa));
        // 4E 03C6
        gbc.setState(0x9cf3, 0x35ba, 0xcef0, 0xce4e, 0x4fe4, 0x1ff7, 0x0, 0x1);
        gbc.writeMem(0x1ff7, { 0x84 });
        gbc.writeMem(0x9cf3, { 0x4e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x35ba, gbc.sp());
        EXPECT(0x9cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9cf3));
        // 4E 03C7
        gbc.setState(0x1c85, 0x5006, 0x6f30, 0xc07f, 0x5276, 0xde7c, 0x0, 0x0);
        gbc.writeMem(0x1c85, { 0x4e });
        gbc.writeMem(0xde7c, { 0xbe });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5006, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xde7c));
        // 4E 03C8
        gbc.setState(0x4484, 0x5f0c, 0x43b0, 0x86d8, 0x7515, 0xf88, 0x0, 0x0);
        gbc.writeMem(0xf88, { 0x32 });
        gbc.writeMem(0x4484, { 0x4e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5f0c, gbc.sp());
        EXPECT(0x4485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 03C9
        gbc.setState(0xac65, 0x7682, 0xd1f0, 0x3572, 0x5fa8, 0x665, 0x1, 0x0);
        gbc.writeMem(0x665, { 0x50 });
        gbc.writeMem(0xac65, { 0x4e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7682, gbc.sp());
        EXPECT(0xac66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xac65));
        // 4E 03CA
        gbc.setState(0x5896, 0x6ea4, 0x6c80, 0xb79d, 0xc84b, 0x4ffe, 0x0, 0x1);
        gbc.writeMem(0x4ffe, { 0x5a });
        gbc.writeMem(0x5896, { 0x4e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6ea4, gbc.sp());
        EXPECT(0x5897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03CB
        gbc.setState(0xebec, 0x5c25, 0x61b0, 0xb393, 0x6937, 0xde65, 0x0, 0x1);
        gbc.writeMem(0xde65, { 0xae });
        gbc.writeMem(0xebec, { 0x4e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5c25, gbc.sp());
        EXPECT(0xebed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xde65));
        EXPECT(0x4e, gbc.readMem(0xebec));
        // 4E 03CC
        gbc.setState(0xa29d, 0xd5c3, 0x1c50, 0x39fa, 0xc515, 0x5a10, 0x0, 0x0);
        gbc.writeMem(0x5a10, { 0x96 });
        gbc.writeMem(0xa29d, { 0x4e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd5c3, gbc.sp());
        EXPECT(0xa29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa29d));
        // 4E 03CD
        gbc.setState(0x4afc, 0xd553, 0x67a0, 0xd654, 0x843, 0x2427, 0x0, 0x1);
        gbc.writeMem(0x2427, { 0xf1 });
        gbc.writeMem(0x4afc, { 0x4e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd553, gbc.sp());
        EXPECT(0x4afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03CE
        gbc.setState(0xbf94, 0xf9b1, 0xa0d0, 0xde36, 0x1e94, 0x526f, 0x1, 0x1);
        gbc.writeMem(0x526f, { 0x37 });
        gbc.writeMem(0xbf94, { 0x4e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf9b1, gbc.sp());
        EXPECT(0xbf95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbf94));
        // 4E 03CF
        gbc.setState(0x1f76, 0x5bf9, 0xacd0, 0x7ad4, 0xfb7a, 0xa430, 0x0, 0x0);
        gbc.writeMem(0x1f76, { 0x4e });
        gbc.writeMem(0xa430, { 0x67 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5bf9, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa430));
        // 4E 03D0
        gbc.setState(0x4c79, 0x7877, 0x91d0, 0x42e8, 0x117b, 0xd1b, 0x0, 0x0);
        gbc.writeMem(0xd1b, { 0xa0 });
        gbc.writeMem(0x4c79, { 0x4e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 03D1
        gbc.setState(0x391c, 0x51fa, 0x6f20, 0x2e39, 0x81d2, 0x4346, 0x0, 0x1);
        gbc.writeMem(0x391c, { 0x4e });
        gbc.writeMem(0x4346, { 0x1d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x51fa, gbc.sp());
        EXPECT(0x391d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03D2
        gbc.setState(0xd445, 0x9c09, 0xabb0, 0xcfd, 0xf5d5, 0x90cd, 0x0, 0x1);
        gbc.writeMem(0x90cd, { 0x59 });
        gbc.writeMem(0xd445, { 0x4e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9c09, gbc.sp());
        EXPECT(0xd446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x90cd));
        EXPECT(0x4e, gbc.readMem(0xd445));
        // 4E 03D4
        gbc.setState(0xefb4, 0x4f8a, 0x2f90, 0x1323, 0x903b, 0x6107, 0x1, 0x0);
        gbc.writeMem(0x6107, { 0x4c });
        gbc.writeMem(0xefb4, { 0x4e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4f8a, gbc.sp());
        EXPECT(0xefb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xefb4));
        // 4E 03D5
        gbc.setState(0x3b09, 0x61c0, 0x9bf0, 0x8c01, 0x2b9e, 0xa422, 0x0, 0x1);
        gbc.writeMem(0x3b09, { 0x4e });
        gbc.writeMem(0xa422, { 0x20 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x61c0, gbc.sp());
        EXPECT(0x3b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa422));
        // 4E 03D6
        gbc.setState(0x4bb6, 0xbb72, 0x2fe0, 0xad59, 0xfb46, 0x8ba5, 0x1, 0x1);
        gbc.writeMem(0x4bb6, { 0x4e });
        gbc.writeMem(0x8ba5, { 0xe5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbb72, gbc.sp());
        EXPECT(0x4bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8ba5));
        // 4E 03D7
        gbc.setState(0x802c, 0x701d, 0xeb30, 0x211c, 0xe89c, 0x7881, 0x1, 0x0);
        gbc.writeMem(0x7881, { 0x73 });
        gbc.writeMem(0x802c, { 0x4e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x701d, gbc.sp());
        EXPECT(0x802d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x802c));
        // 4E 03D8
        gbc.setState(0xc782, 0x3cf8, 0x46d0, 0x4317, 0x5217, 0x9c2f, 0x0, 0x0);
        gbc.writeMem(0x9c2f, { 0xd });
        gbc.writeMem(0xc782, { 0x4e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3cf8, gbc.sp());
        EXPECT(0xc783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9c2f));
        EXPECT(0x4e, gbc.readMem(0xc782));
        // 4E 03D9
        gbc.setState(0x481a, 0xcfce, 0xeec0, 0x55e4, 0x295, 0x690e, 0x1, 0x1);
        gbc.writeMem(0x481a, { 0x4e });
        gbc.writeMem(0x690e, { 0x38 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcfce, gbc.sp());
        EXPECT(0x481b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03DA
        gbc.setState(0x69eb, 0xf3cd, 0x6c50, 0xa50b, 0xe592, 0xcc28, 0x0, 0x1);
        gbc.writeMem(0x69eb, { 0x4e });
        gbc.writeMem(0xcc28, { 0xaf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf3cd, gbc.sp());
        EXPECT(0x69ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xcc28));
        // 4E 03DB
        gbc.setState(0x4fc6, 0xe084, 0xf3a0, 0xc32c, 0x7782, 0xc27f, 0x0, 0x0);
        gbc.writeMem(0x4fc6, { 0x4e });
        gbc.writeMem(0xc27f, { 0x19 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe084, gbc.sp());
        EXPECT(0x4fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc27f));
        // 4E 03DC
        gbc.setState(0x33ce, 0xf939, 0x49d0, 0x993f, 0xac49, 0x5fa3, 0x1, 0x1);
        gbc.writeMem(0x33ce, { 0x4e });
        gbc.writeMem(0x5fa3, { 0x4f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf939, gbc.sp());
        EXPECT(0x33cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 03DD
        gbc.setState(0xa60d, 0xdd4a, 0xfda0, 0xac55, 0xb40, 0xc5bc, 0x0, 0x0);
        gbc.writeMem(0xa60d, { 0x4e });
        gbc.writeMem(0xc5bc, { 0xdb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdd4a, gbc.sp());
        EXPECT(0xa60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa60d));
        EXPECT(0xdb, gbc.readMem(0xc5bc));
        // 4E 03DE
        gbc.setState(0x1651, 0xd353, 0x4ea0, 0xf936, 0x738e, 0x5370, 0x0, 0x1);
        gbc.writeMem(0x1651, { 0x4e });
        gbc.writeMem(0x5370, { 0x2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd353, gbc.sp());
        EXPECT(0x1652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03DF
        gbc.setState(0x1d85, 0x32e4, 0xaca0, 0x2870, 0x18b, 0x5987, 0x0, 0x0);
        gbc.writeMem(0x1d85, { 0x4e });
        gbc.writeMem(0x5987, { 0x6a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x32e4, gbc.sp());
        EXPECT(0x1d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03E0
        gbc.setState(0xa52f, 0xd05c, 0xd4e0, 0x94f3, 0xc341, 0xda6b, 0x1, 0x1);
        gbc.writeMem(0xa52f, { 0x4e });
        gbc.writeMem(0xda6b, { 0x71 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd05c, gbc.sp());
        EXPECT(0xa530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa52f));
        EXPECT(0x71, gbc.readMem(0xda6b));
        // 4E 03E1
        gbc.setState(0xb1c5, 0xf35d, 0x95f0, 0xd165, 0xcae, 0x9804, 0x0, 0x1);
        gbc.writeMem(0x9804, { 0x4d });
        gbc.writeMem(0xb1c5, { 0x4e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf35d, gbc.sp());
        EXPECT(0xb1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9804));
        EXPECT(0x4e, gbc.readMem(0xb1c5));
        // 4E 03E3
        gbc.setState(0x2e63, 0x902c, 0x3980, 0xe034, 0x1ee1, 0x416, 0x0, 0x1);
        gbc.writeMem(0x416, { 0xf7 });
        gbc.writeMem(0x2e63, { 0x4e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x902c, gbc.sp());
        EXPECT(0x2e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4E 03E4
        gbc.setState(0xcc15, 0x8535, 0x2b10, 0x150, 0xf7d8, 0x57ff, 0x1, 0x0);
        gbc.writeMem(0x57ff, { 0x88 });
        gbc.writeMem(0xcc15, { 0x4e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8535, gbc.sp());
        EXPECT(0xcc16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcc15));
        // 4E 03E5
        gbc.setState(0x4847, 0xef3e, 0xbef0, 0x5f3a, 0x3ab7, 0x88f4, 0x1, 0x0);
        gbc.writeMem(0x4847, { 0x4e });
        gbc.writeMem(0x88f4, { 0xa6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xef3e, gbc.sp());
        EXPECT(0x4848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x88f4));
        // 4E 03E6
        gbc.setState(0x4e11, 0xde9, 0xdd90, 0xefd4, 0x95d5, 0x2e67, 0x1, 0x0);
        gbc.writeMem(0x2e67, { 0x4f });
        gbc.writeMem(0x4e11, { 0x4e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xde9, gbc.sp());
        EXPECT(0x4e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4E 03E7
        gbc.setState(0x791c, 0xb08d, 0x25f0, 0x3dbd, 0x549, 0x6788, 0x0, 0x0);
        gbc.writeMem(0x6788, { 0x11 });
        gbc.writeMem(0x791c, { 0x4e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb08d, gbc.sp());
        EXPECT(0x791d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
