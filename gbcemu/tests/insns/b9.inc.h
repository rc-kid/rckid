    TEST(gbcemu, opcode_b9) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // B9 0000
        gbc.setState(0x5174, 0xf69f, 0x26b0, 0xfac4, 0x74e8, 0x9df, 0x1, 0x1);
        gbc.writeMem(0x5174, { 0xb9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf69f, gbc.sp());
        EXPECT(0x5175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0001
        gbc.setState(0x13a, 0x4e75, 0xc30, 0xfbab, 0xf001, 0xe13a, 0x0, 0x0);
        gbc.writeMem(0x13a, { 0xb9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4e75, gbc.sp());
        EXPECT(0x13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0002
        gbc.setState(0xbe83, 0x4c8a, 0x8cc0, 0xff7f, 0xeef8, 0x27a6, 0x1, 0x1);
        gbc.writeMem(0xbe83, { 0xb9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4c8a, gbc.sp());
        EXPECT(0xbe84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbe83));
        // B9 0003
        gbc.setState(0xb4d0, 0x635b, 0xf6d0, 0x821e, 0xea03, 0xdcb9, 0x0, 0x1);
        gbc.writeMem(0xb4d0, { 0xb9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x635b, gbc.sp());
        EXPECT(0xb4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb4d0));
        // B9 0004
        gbc.setState(0x5758, 0x7a75, 0xad50, 0xa343, 0x1e2d, 0x36a7, 0x1, 0x0);
        gbc.writeMem(0x5758, { 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7a75, gbc.sp());
        EXPECT(0x5759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0005
        gbc.setState(0xb2da, 0x4d35, 0xd100, 0x7425, 0x16bc, 0x641b, 0x1, 0x0);
        gbc.writeMem(0xb2da, { 0xb9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4d35, gbc.sp());
        EXPECT(0xb2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb2da));
        // B9 0006
        gbc.setState(0xe456, 0x8a4b, 0xf900, 0x2b49, 0x2846, 0x4e6e, 0x1, 0x1);
        gbc.writeMem(0xe456, { 0xb9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8a4b, gbc.sp());
        EXPECT(0xe457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe456));
        // B9 0007
        gbc.setState(0x9546, 0x3b1d, 0x2c60, 0x6d8f, 0xdac0, 0x7603, 0x1, 0x0);
        gbc.writeMem(0x9546, { 0xb9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3b1d, gbc.sp());
        EXPECT(0x9547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9546));
        // B9 0008
        gbc.setState(0x2b2, 0x1f00, 0x6ad0, 0x9348, 0x9ce9, 0x7f22, 0x1, 0x1);
        gbc.writeMem(0x2b2, { 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1f00, gbc.sp());
        EXPECT(0x2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0009
        gbc.setState(0xe838, 0xe56a, 0xa910, 0x431d, 0xdad, 0x4e3a, 0x1, 0x0);
        gbc.writeMem(0xe838, { 0xb9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe56a, gbc.sp());
        EXPECT(0xe839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe838));
        // B9 000A
        gbc.setState(0x5eda, 0x12a0, 0xd110, 0x2551, 0xe5fb, 0x3c24, 0x0, 0x0);
        gbc.writeMem(0x5eda, { 0xb9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x12a0, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 000B
        gbc.setState(0xfb8, 0x6714, 0x7010, 0xbf80, 0x97e0, 0x306, 0x0, 0x0);
        gbc.writeMem(0xfb8, { 0xb9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6714, gbc.sp());
        EXPECT(0xfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 000C
        gbc.setState(0xcf8f, 0xcb77, 0xf1f0, 0x49f3, 0xa9de, 0xec0f, 0x0, 0x0);
        gbc.writeMem(0xcf8f, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcb77, gbc.sp());
        EXPECT(0xcf90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcf8f));
        // B9 000F
        gbc.setState(0x6120, 0x10c5, 0x7cf0, 0x31d5, 0xe71d, 0xabb4, 0x1, 0x1);
        gbc.writeMem(0x6120, { 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x10c5, gbc.sp());
        EXPECT(0x6121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0010
        gbc.setState(0x3be6, 0x96fd, 0x56c0, 0x632a, 0x7070, 0xd0f, 0x1, 0x1);
        gbc.writeMem(0x3be6, { 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x96fd, gbc.sp());
        EXPECT(0x3be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0011
        gbc.setState(0x31af, 0x7bef, 0x9e20, 0xc875, 0x7c05, 0x22f8, 0x1, 0x1);
        gbc.writeMem(0x31af, { 0xb9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0x31b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0012
        gbc.setState(0x6162, 0x5ffc, 0xd700, 0x4030, 0xda59, 0x7937, 0x0, 0x0);
        gbc.writeMem(0x6162, { 0xb9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5ffc, gbc.sp());
        EXPECT(0x6163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0013
        gbc.setState(0xdac9, 0xab2e, 0x55f0, 0xa019, 0x98b6, 0x29fa, 0x1, 0x1);
        gbc.writeMem(0xdac9, { 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xab2e, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdac9));
        // B9 0014
        gbc.setState(0xcec0, 0x7a42, 0xe620, 0x6544, 0x9519, 0xa07c, 0x0, 0x0);
        gbc.writeMem(0xcec0, { 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7a42, gbc.sp());
        EXPECT(0xcec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcec0));
        // B9 0015
        gbc.setState(0x9649, 0x2cf9, 0xf110, 0x81bb, 0x7009, 0x88e0, 0x1, 0x1);
        gbc.writeMem(0x9649, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2cf9, gbc.sp());
        EXPECT(0x964a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9649));
        // B9 0016
        gbc.setState(0xd3ec, 0xf08e, 0x38e0, 0x6b08, 0xe7d8, 0x17cf, 0x1, 0x1);
        gbc.writeMem(0xd3ec, { 0xb9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf08e, gbc.sp());
        EXPECT(0xd3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd3ec));
        // B9 0017
        gbc.setState(0xdf25, 0x6430, 0xbf20, 0xca83, 0xe5ec, 0x2c2d, 0x0, 0x1);
        gbc.writeMem(0xdf25, { 0xb9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6430, gbc.sp());
        EXPECT(0xdf26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdf25));
        // B9 0018
        gbc.setState(0x18e0, 0x7791, 0x6b70, 0x2030, 0xbfa, 0xca5, 0x1, 0x0);
        gbc.writeMem(0x18e0, { 0xb9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7791, gbc.sp());
        EXPECT(0x18e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0019
        gbc.setState(0x6844, 0x1f33, 0x1b70, 0xc8eb, 0x1f35, 0xed8f, 0x1, 0x0);
        gbc.writeMem(0x6844, { 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1f33, gbc.sp());
        EXPECT(0x6845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 001A
        gbc.setState(0xb572, 0x74b1, 0xd390, 0x43f9, 0x291, 0xf7ce, 0x0, 0x0);
        gbc.writeMem(0xb572, { 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x74b1, gbc.sp());
        EXPECT(0xb573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb572));
        // B9 001C
        gbc.setState(0x7c96, 0x9f93, 0xbd10, 0x47bc, 0x65ee, 0xc782, 0x0, 0x1);
        gbc.writeMem(0x7c96, { 0xb9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9f93, gbc.sp());
        EXPECT(0x7c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 001D
        gbc.setState(0x37a2, 0x2b7, 0xdba0, 0xcabe, 0x30a8, 0x8d19, 0x0, 0x0);
        gbc.writeMem(0x37a2, { 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2b7, gbc.sp());
        EXPECT(0x37a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 001E
        gbc.setState(0x1a9d, 0x9f2d, 0xb950, 0xd439, 0x4384, 0x50d, 0x1, 0x1);
        gbc.writeMem(0x1a9d, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9f2d, gbc.sp());
        EXPECT(0x1a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 001F
        gbc.setState(0x9059, 0x4f20, 0xb990, 0x17ce, 0xf6d4, 0xa253, 0x1, 0x0);
        gbc.writeMem(0x9059, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4f20, gbc.sp());
        EXPECT(0x905a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9059));
        // B9 0021
        gbc.setState(0x479a, 0x5546, 0xbce0, 0x9df8, 0xfa14, 0xb8dd, 0x1, 0x0);
        gbc.writeMem(0x479a, { 0xb9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5546, gbc.sp());
        EXPECT(0x479b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0022
        gbc.setState(0x6187, 0xeaf1, 0xa70, 0xdfe9, 0xf970, 0x5f69, 0x0, 0x0);
        gbc.writeMem(0x6187, { 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xeaf1, gbc.sp());
        EXPECT(0x6188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0023
        gbc.setState(0xa3f, 0xa71e, 0x3340, 0x28e6, 0xeca6, 0x23b7, 0x0, 0x1);
        gbc.writeMem(0xa3f, { 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa71e, gbc.sp());
        EXPECT(0xa40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0024
        gbc.setState(0xc4c0, 0x913c, 0x7fd0, 0xdb9a, 0x262e, 0xaa2a, 0x0, 0x1);
        gbc.writeMem(0xc4c0, { 0xb9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x913c, gbc.sp());
        EXPECT(0xc4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc4c0));
        // B9 0025
        gbc.setState(0xca14, 0xf782, 0x3b00, 0xf9e2, 0xe015, 0x7d8c, 0x0, 0x0);
        gbc.writeMem(0xca14, { 0xb9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf782, gbc.sp());
        EXPECT(0xca15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xca14));
        // B9 0026
        gbc.setState(0x86c1, 0x7958, 0xd920, 0x300, 0x2fc0, 0xa9cb, 0x1, 0x1);
        gbc.writeMem(0x86c1, { 0xb9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7958, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x86c1));
        // B9 0028
        gbc.setState(0x4c0, 0xadbe, 0xabd0, 0xd126, 0xca70, 0x44ef, 0x0, 0x0);
        gbc.writeMem(0x4c0, { 0xb9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xadbe, gbc.sp());
        EXPECT(0x4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0029
        gbc.setState(0xc7fe, 0xd1f8, 0xf900, 0x285a, 0xbd31, 0xc7b3, 0x1, 0x1);
        gbc.writeMem(0xc7fe, { 0xb9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd1f8, gbc.sp());
        EXPECT(0xc7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc7fe));
        // B9 002A
        gbc.setState(0x8b39, 0xab80, 0x81a0, 0x165, 0xbcab, 0xfdb3, 0x0, 0x0);
        gbc.writeMem(0x8b39, { 0xb9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xab80, gbc.sp());
        EXPECT(0x8b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8b39));
        // B9 002C
        gbc.setState(0x829a, 0x8f83, 0x3d00, 0x55c4, 0x1fa0, 0xd305, 0x0, 0x1);
        gbc.writeMem(0x829a, { 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8f83, gbc.sp());
        EXPECT(0x829b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x829a));
        // B9 002D
        gbc.setState(0xdeb6, 0x769c, 0x40f0, 0x3907, 0x97c1, 0x54ec, 0x0, 0x1);
        gbc.writeMem(0xdeb6, { 0xb9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x769c, gbc.sp());
        EXPECT(0xdeb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdeb6));
        // B9 002E
        gbc.setState(0x5e79, 0x4fba, 0x1590, 0xcd9e, 0x741a, 0xfe4e, 0x1, 0x0);
        gbc.writeMem(0x5e79, { 0xb9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4fba, gbc.sp());
        EXPECT(0x5e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 002F
        gbc.setState(0xcaa7, 0x7870, 0x4020, 0xbd99, 0xb1b, 0xaac3, 0x1, 0x1);
        gbc.writeMem(0xcaa7, { 0xb9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7870, gbc.sp());
        EXPECT(0xcaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcaa7));
        // B9 0030
        gbc.setState(0x9f32, 0xfd1f, 0xb140, 0x4bff, 0x29bc, 0x4f38, 0x0, 0x0);
        gbc.writeMem(0x9f32, { 0xb9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfd1f, gbc.sp());
        EXPECT(0x9f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9f32));
        // B9 0031
        gbc.setState(0x7a31, 0x13a1, 0x5e60, 0xb96f, 0x15bb, 0x17d1, 0x1, 0x1);
        gbc.writeMem(0x7a31, { 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x13a1, gbc.sp());
        EXPECT(0x7a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0033
        gbc.setState(0x3d00, 0xbcec, 0x5420, 0xf0db, 0x7fe6, 0x3f12, 0x1, 0x1);
        gbc.writeMem(0x3d00, { 0xb9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbcec, gbc.sp());
        EXPECT(0x3d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0034
        gbc.setState(0xe2e4, 0x9bb, 0x61a0, 0x267e, 0xd86c, 0x6937, 0x1, 0x1);
        gbc.writeMem(0xe2e4, { 0xb9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9bb, gbc.sp());
        EXPECT(0xe2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe2e4));
        // B9 0035
        gbc.setState(0x3b76, 0x2238, 0x6370, 0x39b6, 0x3025, 0x46f5, 0x1, 0x1);
        gbc.writeMem(0x3b76, { 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2238, gbc.sp());
        EXPECT(0x3b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0036
        gbc.setState(0xb176, 0xa878, 0xa950, 0x8983, 0x7317, 0xafed, 0x0, 0x1);
        gbc.writeMem(0xb176, { 0xb9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa878, gbc.sp());
        EXPECT(0xb177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb176));
        // B9 0037
        gbc.setState(0x7e93, 0xe280, 0x58b0, 0x3dc0, 0xdb3e, 0xaf3f, 0x1, 0x1);
        gbc.writeMem(0x7e93, { 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe280, gbc.sp());
        EXPECT(0x7e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0039
        gbc.setState(0x8581, 0xd7da, 0xbdc0, 0xab45, 0xcfb1, 0xa48e, 0x1, 0x0);
        gbc.writeMem(0x8581, { 0xb9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd7da, gbc.sp());
        EXPECT(0x8582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8581));
        // B9 003A
        gbc.setState(0xca39, 0x7d7d, 0xc760, 0x9208, 0x59b0, 0xa3f1, 0x1, 0x0);
        gbc.writeMem(0xca39, { 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0xca3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xca39));
        // B9 003B
        gbc.setState(0x1ca0, 0xce13, 0x2440, 0x5af0, 0x1013, 0xdbe9, 0x0, 0x1);
        gbc.writeMem(0x1ca0, { 0xb9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xce13, gbc.sp());
        EXPECT(0x1ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 003C
        gbc.setState(0xdc77, 0x1160, 0x15a0, 0x6264, 0xf7f2, 0xfcb3, 0x0, 0x0);
        gbc.writeMem(0xdc77, { 0xb9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1160, gbc.sp());
        EXPECT(0xdc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdc77));
        // B9 003D
        gbc.setState(0x7bfa, 0x2156, 0x7df0, 0xa222, 0x6f65, 0xf325, 0x1, 0x1);
        gbc.writeMem(0x7bfa, { 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2156, gbc.sp());
        EXPECT(0x7bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 003E
        gbc.setState(0x2889, 0xa7db, 0x80, 0x271f, 0x3386, 0x2175, 0x0, 0x0);
        gbc.writeMem(0x2889, { 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa7db, gbc.sp());
        EXPECT(0x288a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 003F
        gbc.setState(0xd003, 0x1790, 0xd9e0, 0xae79, 0x3333, 0x5284, 0x0, 0x0);
        gbc.writeMem(0xd003, { 0xb9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1790, gbc.sp());
        EXPECT(0xd004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd003));
        // B9 0040
        gbc.setState(0xc02d, 0x64ef, 0xfb80, 0x59e5, 0x8d63, 0x6f80, 0x0, 0x1);
        gbc.writeMem(0xc02d, { 0xb9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x64ef, gbc.sp());
        EXPECT(0xc02e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc02d));
        // B9 0041
        gbc.setState(0xe592, 0xc98b, 0x7700, 0xea9, 0x8283, 0xe81e, 0x1, 0x0);
        gbc.writeMem(0xe592, { 0xb9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc98b, gbc.sp());
        EXPECT(0xe593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe592));
        // B9 0042
        gbc.setState(0xee57, 0x40dc, 0xcbc0, 0xd856, 0x909a, 0x6749, 0x0, 0x1);
        gbc.writeMem(0xee57, { 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x40dc, gbc.sp());
        EXPECT(0xee58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xee57));
        // B9 0043
        gbc.setState(0xc3e4, 0xa7c8, 0x3970, 0xee2d, 0x8c1a, 0x6bea, 0x1, 0x0);
        gbc.writeMem(0xc3e4, { 0xb9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa7c8, gbc.sp());
        EXPECT(0xc3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc3e4));
        // B9 0044
        gbc.setState(0xaf5c, 0xe11d, 0x7a0, 0x3290, 0x6dd6, 0x2a3b, 0x1, 0x1);
        gbc.writeMem(0xaf5c, { 0xb9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe11d, gbc.sp());
        EXPECT(0xaf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaf5c));
        // B9 0045
        gbc.setState(0x5e8b, 0x4924, 0x59c0, 0xfa33, 0x9f69, 0x248f, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4924, gbc.sp());
        EXPECT(0x5e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0046
        gbc.setState(0xbe88, 0x64c1, 0x1350, 0x2be9, 0xdb00, 0x8626, 0x0, 0x1);
        gbc.writeMem(0xbe88, { 0xb9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x64c1, gbc.sp());
        EXPECT(0xbe89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbe88));
        // B9 0047
        gbc.setState(0x3b6d, 0x3a8d, 0x2df0, 0xf6e4, 0x6cb8, 0x2bb8, 0x1, 0x0);
        gbc.writeMem(0x3b6d, { 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3a8d, gbc.sp());
        EXPECT(0x3b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0048
        gbc.setState(0x3057, 0xc6cc, 0xaf0, 0x2ffa, 0xac4, 0xbf8f, 0x0, 0x0);
        gbc.writeMem(0x3057, { 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc6cc, gbc.sp());
        EXPECT(0x3058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0049
        gbc.setState(0xc345, 0x55f, 0x63f0, 0x53a4, 0x2903, 0x2dbd, 0x0, 0x1);
        gbc.writeMem(0xc345, { 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x55f, gbc.sp());
        EXPECT(0xc346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc345));
        // B9 004A
        gbc.setState(0x7a8e, 0xcfdc, 0x44c0, 0x5c38, 0x9c88, 0x9d89, 0x1, 0x1);
        gbc.writeMem(0x7a8e, { 0xb9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcfdc, gbc.sp());
        EXPECT(0x7a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 004B
        gbc.setState(0x990a, 0x7735, 0x5430, 0x8d1e, 0x67db, 0xb3bc, 0x0, 0x0);
        gbc.writeMem(0x990a, { 0xb9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7735, gbc.sp());
        EXPECT(0x990b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x990a));
        // B9 004C
        gbc.setState(0x4c9c, 0x424c, 0x2400, 0x4a66, 0x9381, 0xa16a, 0x1, 0x1);
        gbc.writeMem(0x4c9c, { 0xb9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0x4c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 004D
        gbc.setState(0xcb83, 0xf3ab, 0xaa90, 0x699, 0xff1d, 0xb5e7, 0x1, 0x1);
        gbc.writeMem(0xcb83, { 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf3ab, gbc.sp());
        EXPECT(0xcb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcb83));
        // B9 004E
        gbc.setState(0xbac7, 0x55e4, 0x9ae0, 0xa38d, 0x876d, 0x2d72, 0x1, 0x0);
        gbc.writeMem(0xbac7, { 0xb9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0xbac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbac7));
        // B9 004F
        gbc.setState(0x6f5a, 0x9f14, 0x3a30, 0x8587, 0x244f, 0xd3a7, 0x0, 0x1);
        gbc.writeMem(0x6f5a, { 0xb9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9f14, gbc.sp());
        EXPECT(0x6f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0050
        gbc.setState(0x6a7a, 0xa8a3, 0x74e0, 0xa687, 0x9d4a, 0xb978, 0x0, 0x0);
        gbc.writeMem(0x6a7a, { 0xb9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa8a3, gbc.sp());
        EXPECT(0x6a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0051
        gbc.setState(0x3382, 0xabc2, 0x7e0, 0xc8dc, 0xb591, 0x9ef5, 0x0, 0x0);
        gbc.writeMem(0x3382, { 0xb9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0x3383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0052
        gbc.setState(0x3e7, 0x2e8a, 0x11d0, 0x5046, 0x8790, 0xb45b, 0x0, 0x1);
        gbc.writeMem(0x3e7, { 0xb9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2e8a, gbc.sp());
        EXPECT(0x3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0053
        gbc.setState(0x8fcc, 0xfce1, 0xb220, 0x5ba9, 0x67f9, 0xb016, 0x1, 0x1);
        gbc.writeMem(0x8fcc, { 0xb9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfce1, gbc.sp());
        EXPECT(0x8fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8fcc));
        // B9 0054
        gbc.setState(0x93b, 0xdb4a, 0xe980, 0x71db, 0x9d27, 0xfe42, 0x0, 0x1);
        gbc.writeMem(0x93b, { 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdb4a, gbc.sp());
        EXPECT(0x93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0055
        gbc.setState(0x2eda, 0x29af, 0x4b30, 0x1a97, 0x24d2, 0x5f6f, 0x0, 0x0);
        gbc.writeMem(0x2eda, { 0xb9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x29af, gbc.sp());
        EXPECT(0x2edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0056
        gbc.setState(0x4fe2, 0xd73e, 0x8bb0, 0x1165, 0xc522, 0xe046, 0x1, 0x0);
        gbc.writeMem(0x4fe2, { 0xb9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd73e, gbc.sp());
        EXPECT(0x4fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0057
        gbc.setState(0xecd1, 0x286a, 0x8580, 0x5f11, 0x3b1b, 0x6f04, 0x1, 0x1);
        gbc.writeMem(0xecd1, { 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x286a, gbc.sp());
        EXPECT(0xecd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xecd1));
        // B9 0058
        gbc.setState(0x225b, 0x91fd, 0x2080, 0x9a38, 0x8cc8, 0x5774, 0x1, 0x0);
        gbc.writeMem(0x225b, { 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x91fd, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0059
        gbc.setState(0xb5ed, 0xa6c, 0xc60, 0xaf3a, 0xd547, 0xdfa6, 0x1, 0x0);
        gbc.writeMem(0xb5ed, { 0xb9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa6c, gbc.sp());
        EXPECT(0xb5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb5ed));
        // B9 005A
        gbc.setState(0xc1fd, 0x1974, 0x90f0, 0x8abd, 0x3c6a, 0x6307, 0x1, 0x0);
        gbc.writeMem(0xc1fd, { 0xb9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1974, gbc.sp());
        EXPECT(0xc1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc1fd));
        // B9 005B
        gbc.setState(0x23fe, 0xd260, 0x7070, 0x6c58, 0x312f, 0x4412, 0x1, 0x0);
        gbc.writeMem(0x23fe, { 0xb9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd260, gbc.sp());
        EXPECT(0x23ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 005C
        gbc.setState(0xaec3, 0x746e, 0xc970, 0x98c9, 0xa7e6, 0xe4f7, 0x1, 0x1);
        gbc.writeMem(0xaec3, { 0xb9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x746e, gbc.sp());
        EXPECT(0xaec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaec3));
        // B9 005D
        gbc.setState(0x3ed7, 0xb3f, 0xcb70, 0xe107, 0x5d43, 0x9d2c, 0x1, 0x0);
        gbc.writeMem(0x3ed7, { 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb3f, gbc.sp());
        EXPECT(0x3ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 005E
        gbc.setState(0x77c, 0x2260, 0xbe0, 0x8682, 0xce84, 0x90ed, 0x0, 0x1);
        gbc.writeMem(0x77c, { 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2260, gbc.sp());
        EXPECT(0x77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 005F
        gbc.setState(0xa6d0, 0x4fa, 0x68e0, 0x57aa, 0xafe6, 0x8130, 0x1, 0x0);
        gbc.writeMem(0xa6d0, { 0xb9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4fa, gbc.sp());
        EXPECT(0xa6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa6d0));
        // B9 0060
        gbc.setState(0x97a4, 0xadaa, 0xcdb0, 0xd11a, 0x7270, 0xb341, 0x1, 0x0);
        gbc.writeMem(0x97a4, { 0xb9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xadaa, gbc.sp());
        EXPECT(0x97a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x97a4));
        // B9 0061
        gbc.setState(0xef92, 0xde95, 0x5940, 0xb997, 0xe019, 0x1cfa, 0x0, 0x1);
        gbc.writeMem(0xef92, { 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xde95, gbc.sp());
        EXPECT(0xef93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xef92));
        // B9 0062
        gbc.setState(0x8059, 0x55ce, 0x8210, 0x5b, 0xcbd5, 0x7dd6, 0x1, 0x0);
        gbc.writeMem(0x8059, { 0xb9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x55ce, gbc.sp());
        EXPECT(0x805a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8059));
        // B9 0063
        gbc.setState(0xb0ed, 0xab27, 0xc1b0, 0xfe5b, 0x4737, 0x4280, 0x0, 0x0);
        gbc.writeMem(0xb0ed, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xab27, gbc.sp());
        EXPECT(0xb0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb0ed));
        // B9 0064
        gbc.setState(0x59cc, 0xd6d9, 0x8590, 0xee5, 0x13a9, 0xab16, 0x0, 0x1);
        gbc.writeMem(0x59cc, { 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd6d9, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0065
        gbc.setState(0x46ad, 0x7741, 0x9640, 0x8991, 0x3c67, 0x8d75, 0x1, 0x1);
        gbc.writeMem(0x46ad, { 0xb9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0x46ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0066
        gbc.setState(0x490c, 0xe18b, 0xfc10, 0x7a33, 0x64c0, 0x86f9, 0x1, 0x1);
        gbc.writeMem(0x490c, { 0xb9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe18b, gbc.sp());
        EXPECT(0x490d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0067
        gbc.setState(0xd3b, 0x8280, 0xeca0, 0x3cf5, 0x9e63, 0x7c0, 0x0, 0x1);
        gbc.writeMem(0xd3b, { 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8280, gbc.sp());
        EXPECT(0xd3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0068
        gbc.setState(0x9abd, 0x4fa5, 0xb250, 0x57d5, 0xa660, 0xd0ee, 0x0, 0x1);
        gbc.writeMem(0x9abd, { 0xb9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4fa5, gbc.sp());
        EXPECT(0x9abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9abd));
        // B9 0069
        gbc.setState(0x6069, 0x6152, 0x5930, 0xe6d5, 0x3b2a, 0x8d82, 0x1, 0x1);
        gbc.writeMem(0x6069, { 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6152, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 006A
        gbc.setState(0x1aa9, 0xac1e, 0x63e0, 0x5a40, 0xcebd, 0x5a, 0x1, 0x1);
        gbc.writeMem(0x1aa9, { 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xac1e, gbc.sp());
        EXPECT(0x1aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 006B
        gbc.setState(0x4f5f, 0xc26f, 0x9fe0, 0x4e14, 0x7a0f, 0x356f, 0x0, 0x0);
        gbc.writeMem(0x4f5f, { 0xb9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc26f, gbc.sp());
        EXPECT(0x4f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 006C
        gbc.setState(0xe849, 0x2874, 0xdda0, 0x5a58, 0x8332, 0xf91, 0x1, 0x0);
        gbc.writeMem(0xe849, { 0xb9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2874, gbc.sp());
        EXPECT(0xe84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe849));
        // B9 006E
        gbc.setState(0x9fe3, 0xa69d, 0xee60, 0x9644, 0xde71, 0x3fa4, 0x0, 0x0);
        gbc.writeMem(0x9fe3, { 0xb9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa69d, gbc.sp());
        EXPECT(0x9fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9fe3));
        // B9 0070
        gbc.setState(0x5e74, 0x181d, 0x8450, 0x1834, 0x383c, 0x9a9d, 0x1, 0x1);
        gbc.writeMem(0x5e74, { 0xb9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x181d, gbc.sp());
        EXPECT(0x5e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0071
        gbc.setState(0x3e58, 0x5ee3, 0x4690, 0xfe0a, 0xe35f, 0x7502, 0x0, 0x1);
        gbc.writeMem(0x3e58, { 0xb9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5ee3, gbc.sp());
        EXPECT(0x3e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0072
        gbc.setState(0x2535, 0x581f, 0xde20, 0x54be, 0x57e4, 0x3aa7, 0x1, 0x0);
        gbc.writeMem(0x2535, { 0xb9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x581f, gbc.sp());
        EXPECT(0x2536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0073
        gbc.setState(0x109c, 0x1aad, 0xb590, 0x1a2d, 0xceb0, 0x300f, 0x0, 0x1);
        gbc.writeMem(0x109c, { 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1aad, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0075
        gbc.setState(0xd108, 0x304d, 0xf00, 0x5a7f, 0xda59, 0xb1b, 0x0, 0x0);
        gbc.writeMem(0xd108, { 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0xd109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd108));
        // B9 0076
        gbc.setState(0xa82b, 0x3e44, 0x20d0, 0x71b1, 0x6611, 0x5c74, 0x0, 0x0);
        gbc.writeMem(0xa82b, { 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3e44, gbc.sp());
        EXPECT(0xa82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa82b));
        // B9 0077
        gbc.setState(0xb88, 0x4ac0, 0x2270, 0xef47, 0x6355, 0x4b88, 0x1, 0x1);
        gbc.writeMem(0xb88, { 0xb9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4ac0, gbc.sp());
        EXPECT(0xb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0078
        gbc.setState(0xef54, 0x9db4, 0x9680, 0x51e6, 0x5dcb, 0xb0d, 0x1, 0x0);
        gbc.writeMem(0xef54, { 0xb9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9db4, gbc.sp());
        EXPECT(0xef55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xef54));
        // B9 0079
        gbc.setState(0x399d, 0xdd0d, 0xb140, 0x3add, 0x9e24, 0x8fb4, 0x1, 0x0);
        gbc.writeMem(0x399d, { 0xb9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdd0d, gbc.sp());
        EXPECT(0x399e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 007A
        gbc.setState(0x4937, 0xea29, 0xb880, 0x57ea, 0xab41, 0xc6c0, 0x1, 0x0);
        gbc.writeMem(0x4937, { 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xea29, gbc.sp());
        EXPECT(0x4938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 007B
        gbc.setState(0xb197, 0x9957, 0xecf0, 0x801, 0x7cc, 0x4682, 0x0, 0x1);
        gbc.writeMem(0xb197, { 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9957, gbc.sp());
        EXPECT(0xb198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb197));
        // B9 007C
        gbc.setState(0x5321, 0x1680, 0xcbd0, 0xefa, 0xc090, 0x550, 0x1, 0x0);
        gbc.writeMem(0x5321, { 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1680, gbc.sp());
        EXPECT(0x5322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 007D
        gbc.setState(0x88b1, 0xfbd3, 0x3b60, 0x955c, 0xa3ad, 0x230d, 0x0, 0x1);
        gbc.writeMem(0x88b1, { 0xb9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfbd3, gbc.sp());
        EXPECT(0x88b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x88b1));
        // B9 007F
        gbc.setState(0x682e, 0xd338, 0xbbb0, 0x18d1, 0x2773, 0xd661, 0x1, 0x0);
        gbc.writeMem(0x682e, { 0xb9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd338, gbc.sp());
        EXPECT(0x682f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0080
        gbc.setState(0x57d9, 0x70c8, 0x4af0, 0x8076, 0xcaeb, 0xdec5, 0x0, 0x0);
        gbc.writeMem(0x57d9, { 0xb9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0x57da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0081
        gbc.setState(0x75f3, 0x2017, 0x6cb0, 0xf908, 0x8486, 0xe36e, 0x1, 0x1);
        gbc.writeMem(0x75f3, { 0xb9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2017, gbc.sp());
        EXPECT(0x75f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0082
        gbc.setState(0x2522, 0x4618, 0x72f0, 0x279, 0xe15d, 0xf066, 0x1, 0x0);
        gbc.writeMem(0x2522, { 0xb9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4618, gbc.sp());
        EXPECT(0x2523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0083
        gbc.setState(0x7aa, 0x765d, 0xc940, 0x83e0, 0x237e, 0x558, 0x0, 0x1);
        gbc.writeMem(0x7aa, { 0xb9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x765d, gbc.sp());
        EXPECT(0x7ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0085
        gbc.setState(0xa1fe, 0x96ad, 0xe090, 0x8acd, 0xe804, 0x3c72, 0x0, 0x0);
        gbc.writeMem(0xa1fe, { 0xb9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x96ad, gbc.sp());
        EXPECT(0xa1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa1fe));
        // B9 0086
        gbc.setState(0x36ce, 0xa5c5, 0x3590, 0xa76, 0x23ae, 0xd77e, 0x1, 0x0);
        gbc.writeMem(0x36ce, { 0xb9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa5c5, gbc.sp());
        EXPECT(0x36cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0087
        gbc.setState(0x20d3, 0xf72e, 0xfcd0, 0x3926, 0x2db3, 0x8579, 0x0, 0x0);
        gbc.writeMem(0x20d3, { 0xb9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0x20d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0088
        gbc.setState(0xe8fb, 0x6a09, 0xa9e0, 0x4032, 0xb614, 0x4da5, 0x0, 0x0);
        gbc.writeMem(0xe8fb, { 0xb9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6a09, gbc.sp());
        EXPECT(0xe8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe8fb));
        // B9 0089
        gbc.setState(0xc19, 0x8809, 0x2aa0, 0x1365, 0x175e, 0xee5d, 0x0, 0x1);
        gbc.writeMem(0xc19, { 0xb9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8809, gbc.sp());
        EXPECT(0xc1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 008A
        gbc.setState(0x3386, 0x76d5, 0xd8c0, 0x9f9c, 0x41cd, 0xf67d, 0x0, 0x0);
        gbc.writeMem(0x3386, { 0xb9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x76d5, gbc.sp());
        EXPECT(0x3387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 008C
        gbc.setState(0xcd20, 0x259, 0xf3b0, 0xc078, 0xc672, 0xf820, 0x1, 0x0);
        gbc.writeMem(0xcd20, { 0xb9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x259, gbc.sp());
        EXPECT(0xcd21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcd20));
        // B9 008D
        gbc.setState(0x3a4f, 0xb73c, 0xb050, 0x7563, 0x61db, 0xa784, 0x1, 0x1);
        gbc.writeMem(0x3a4f, { 0xb9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb73c, gbc.sp());
        EXPECT(0x3a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0090
        gbc.setState(0xc469, 0x26c0, 0xa0f0, 0x917e, 0x92ea, 0x95e7, 0x1, 0x0);
        gbc.writeMem(0xc469, { 0xb9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x26c0, gbc.sp());
        EXPECT(0xc46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc469));
        // B9 0091
        gbc.setState(0x266, 0xac83, 0xcc0, 0x4c40, 0xef1b, 0x3709, 0x1, 0x1);
        gbc.writeMem(0x266, { 0xb9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xac83, gbc.sp());
        EXPECT(0x267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0092
        gbc.setState(0xbfdb, 0x97e9, 0x7a0, 0x160a, 0xedcd, 0x5bc6, 0x1, 0x1);
        gbc.writeMem(0xbfdb, { 0xb9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x97e9, gbc.sp());
        EXPECT(0xbfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbfdb));
        // B9 0093
        gbc.setState(0x5f51, 0xceef, 0xe5d0, 0xa5ae, 0x6ee4, 0x8c6, 0x0, 0x1);
        gbc.writeMem(0x5f51, { 0xb9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xceef, gbc.sp());
        EXPECT(0x5f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0095
        gbc.setState(0xb8a8, 0x50e3, 0x78e0, 0x5627, 0x7c55, 0x695b, 0x1, 0x0);
        gbc.writeMem(0xb8a8, { 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x50e3, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb8a8));
        // B9 0096
        gbc.setState(0x9a26, 0x5c9c, 0x9850, 0x2807, 0x4374, 0xdf21, 0x0, 0x1);
        gbc.writeMem(0x9a26, { 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5c9c, gbc.sp());
        EXPECT(0x9a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a26));
        // B9 0097
        gbc.setState(0xe3ef, 0xb80d, 0x4750, 0xee39, 0xf454, 0x1d1c, 0x1, 0x0);
        gbc.writeMem(0xe3ef, { 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb80d, gbc.sp());
        EXPECT(0xe3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe3ef));
        // B9 0098
        gbc.setState(0xef36, 0xf756, 0xa4b0, 0xbdcd, 0xa363, 0xca27, 0x0, 0x1);
        gbc.writeMem(0xef36, { 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf756, gbc.sp());
        EXPECT(0xef37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xef36));
        // B9 0099
        gbc.setState(0x1297, 0x9a0d, 0xf700, 0x3639, 0xc68f, 0x2c9c, 0x0, 0x0);
        gbc.writeMem(0x1297, { 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9a0d, gbc.sp());
        EXPECT(0x1298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 009A
        gbc.setState(0xc8fa, 0xf101, 0x64d0, 0x44fa, 0x4d56, 0x6b4d, 0x1, 0x0);
        gbc.writeMem(0xc8fa, { 0xb9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf101, gbc.sp());
        EXPECT(0xc8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc8fa));
        // B9 009B
        gbc.setState(0xa7a6, 0x334, 0x3110, 0x3ed7, 0x4b07, 0x962b, 0x0, 0x0);
        gbc.writeMem(0xa7a6, { 0xb9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x334, gbc.sp());
        EXPECT(0xa7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa7a6));
        // B9 009C
        gbc.setState(0x133c, 0x885e, 0x9cc0, 0x8a20, 0x5c11, 0x951e, 0x1, 0x1);
        gbc.writeMem(0x133c, { 0xb9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x885e, gbc.sp());
        EXPECT(0x133d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 009D
        gbc.setState(0x7c59, 0xc31f, 0xd80, 0x3ba5, 0x4c59, 0x4f20, 0x0, 0x1);
        gbc.writeMem(0x7c59, { 0xb9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc31f, gbc.sp());
        EXPECT(0x7c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 009E
        gbc.setState(0x5121, 0x74f5, 0xd470, 0xbb16, 0x1975, 0x5cf4, 0x1, 0x0);
        gbc.writeMem(0x5121, { 0xb9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x74f5, gbc.sp());
        EXPECT(0x5122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 009F
        gbc.setState(0xe79d, 0xd8d0, 0xae10, 0xd563, 0x25cb, 0xd25b, 0x0, 0x1);
        gbc.writeMem(0xe79d, { 0xb9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd8d0, gbc.sp());
        EXPECT(0xe79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe79d));
        // B9 00A0
        gbc.setState(0xec34, 0xd3fc, 0xa680, 0xeeaa, 0x4ad9, 0xb1e5, 0x1, 0x0);
        gbc.writeMem(0xec34, { 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd3fc, gbc.sp());
        EXPECT(0xec35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xec34));
        // B9 00A1
        gbc.setState(0x3289, 0x44f4, 0x79d0, 0xe183, 0xcb30, 0x51f3, 0x0, 0x1);
        gbc.writeMem(0x3289, { 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x44f4, gbc.sp());
        EXPECT(0x328a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00A2
        gbc.setState(0x20a6, 0x46f9, 0x7c80, 0x274, 0x85d1, 0xf51d, 0x1, 0x0);
        gbc.writeMem(0x20a6, { 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x46f9, gbc.sp());
        EXPECT(0x20a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00A3
        gbc.setState(0x1630, 0x91e8, 0xf490, 0x4e40, 0x81d8, 0xf0bb, 0x0, 0x1);
        gbc.writeMem(0x1630, { 0xb9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0x1631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00A4
        gbc.setState(0x8414, 0x7e1c, 0xdd60, 0x37f6, 0xb043, 0xdbc7, 0x0, 0x1);
        gbc.writeMem(0x8414, { 0xb9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7e1c, gbc.sp());
        EXPECT(0x8415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8414));
        // B9 00A5
        gbc.setState(0x31f0, 0x90a8, 0xe8b0, 0xa6bb, 0x591, 0x4d4, 0x0, 0x0);
        gbc.writeMem(0x31f0, { 0xb9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x90a8, gbc.sp());
        EXPECT(0x31f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00A6
        gbc.setState(0x511f, 0xd19b, 0xb940, 0x47ae, 0x5a0d, 0xb228, 0x0, 0x1);
        gbc.writeMem(0x511f, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd19b, gbc.sp());
        EXPECT(0x5120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00A7
        gbc.setState(0x64cd, 0x8cfb, 0xfc70, 0x92fd, 0x6400, 0x1580, 0x0, 0x0);
        gbc.writeMem(0x64cd, { 0xb9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8cfb, gbc.sp());
        EXPECT(0x64ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00A8
        gbc.setState(0x6f14, 0xf78c, 0x2d00, 0xa08d, 0x30e3, 0x5839, 0x0, 0x1);
        gbc.writeMem(0x6f14, { 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf78c, gbc.sp());
        EXPECT(0x6f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00A9
        gbc.setState(0x3097, 0x192c, 0xef10, 0xdbe3, 0x7341, 0xc2ec, 0x0, 0x1);
        gbc.writeMem(0x3097, { 0xb9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x192c, gbc.sp());
        EXPECT(0x3098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00AA
        gbc.setState(0x4c1a, 0x7e44, 0xf5f0, 0xa7c3, 0x93c4, 0x9c1a, 0x1, 0x1);
        gbc.writeMem(0x4c1a, { 0xb9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7e44, gbc.sp());
        EXPECT(0x4c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00AB
        gbc.setState(0xe0aa, 0x682e, 0xdca0, 0xaac7, 0xb592, 0x9e0, 0x1, 0x0);
        gbc.writeMem(0xe0aa, { 0xb9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x682e, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe0aa));
        // B9 00AC
        gbc.setState(0xb5be, 0xf338, 0xa700, 0x7353, 0xd19, 0xd254, 0x0, 0x1);
        gbc.writeMem(0xb5be, { 0xb9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf338, gbc.sp());
        EXPECT(0xb5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb5be));
        // B9 00AD
        gbc.setState(0x857a, 0x45b5, 0x7220, 0xe391, 0x1315, 0xc2fe, 0x0, 0x1);
        gbc.writeMem(0x857a, { 0xb9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x45b5, gbc.sp());
        EXPECT(0x857b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x857a));
        // B9 00AE
        gbc.setState(0x7e90, 0x50b1, 0x95f0, 0x2901, 0x90ab, 0x82e2, 0x0, 0x0);
        gbc.writeMem(0x7e90, { 0xb9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x50b1, gbc.sp());
        EXPECT(0x7e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00AF
        gbc.setState(0x73fb, 0x873d, 0x6e0, 0x13a1, 0xb252, 0x5d21, 0x1, 0x1);
        gbc.writeMem(0x73fb, { 0xb9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x873d, gbc.sp());
        EXPECT(0x73fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00B0
        gbc.setState(0x3f26, 0x5d13, 0x5380, 0xc9f3, 0x47a8, 0x7c03, 0x1, 0x0);
        gbc.writeMem(0x3f26, { 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5d13, gbc.sp());
        EXPECT(0x3f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00B1
        gbc.setState(0xbee, 0x92f1, 0x5140, 0x836b, 0x1976, 0x4226, 0x1, 0x1);
        gbc.writeMem(0xbee, { 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x92f1, gbc.sp());
        EXPECT(0xbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00B2
        gbc.setState(0xaea7, 0x6473, 0xf8c0, 0x38eb, 0x9cbb, 0xabe7, 0x0, 0x1);
        gbc.writeMem(0xaea7, { 0xb9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6473, gbc.sp());
        EXPECT(0xaea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaea7));
        // B9 00B3
        gbc.setState(0xc912, 0x8263, 0x920, 0xce98, 0xffd6, 0xf507, 0x1, 0x0);
        gbc.writeMem(0xc912, { 0xb9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0xc913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc912));
        // B9 00B5
        gbc.setState(0x72b8, 0x9a39, 0x2500, 0x7d89, 0xb33d, 0x5b92, 0x0, 0x0);
        gbc.writeMem(0x72b8, { 0xb9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9a39, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00B6
        gbc.setState(0x20a0, 0x7207, 0x8d80, 0xbb59, 0x5a30, 0xa538, 0x0, 0x1);
        gbc.writeMem(0x20a0, { 0xb9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7207, gbc.sp());
        EXPECT(0x20a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00B7
        gbc.setState(0x3da, 0xe35d, 0x1240, 0x9724, 0x40ae, 0xe396, 0x0, 0x0);
        gbc.writeMem(0x3da, { 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe35d, gbc.sp());
        EXPECT(0x3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00B8
        gbc.setState(0xdd39, 0x3a91, 0xf160, 0x17f9, 0xf504, 0x3b2b, 0x0, 0x1);
        gbc.writeMem(0xdd39, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3a91, gbc.sp());
        EXPECT(0xdd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdd39));
        // B9 00B9
        gbc.setState(0xa1ac, 0xedd8, 0x70b0, 0x16e0, 0xe4c, 0xe0a7, 0x1, 0x0);
        gbc.writeMem(0xa1ac, { 0xb9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xedd8, gbc.sp());
        EXPECT(0xa1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa1ac));
        // B9 00BA
        gbc.setState(0xcae1, 0xd0cf, 0x3eb0, 0xf157, 0xfa17, 0xd062, 0x1, 0x1);
        gbc.writeMem(0xcae1, { 0xb9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd0cf, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcae1));
        // B9 00BB
        gbc.setState(0xa2c4, 0x10f5, 0x55e0, 0x640d, 0x36c9, 0xe6db, 0x1, 0x0);
        gbc.writeMem(0xa2c4, { 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x10f5, gbc.sp());
        EXPECT(0xa2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa2c4));
        // B9 00BC
        gbc.setState(0xdbc1, 0xb698, 0xf1d0, 0x2844, 0xcb7d, 0x79b2, 0x1, 0x0);
        gbc.writeMem(0xdbc1, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb698, gbc.sp());
        EXPECT(0xdbc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdbc1));
        // B9 00BD
        gbc.setState(0x2521, 0xdad5, 0x9b90, 0xb7ad, 0x90e2, 0x3ce7, 0x0, 0x0);
        gbc.writeMem(0x2521, { 0xb9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdad5, gbc.sp());
        EXPECT(0x2522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00BE
        gbc.setState(0x2c7a, 0x4c9d, 0x8210, 0x78a2, 0x6683, 0x134e, 0x0, 0x0);
        gbc.writeMem(0x2c7a, { 0xb9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0x2c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00BF
        gbc.setState(0xdf60, 0x3349, 0xec0, 0x8c19, 0xc8d9, 0x3537, 0x1, 0x1);
        gbc.writeMem(0xdf60, { 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3349, gbc.sp());
        EXPECT(0xdf61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdf60));
        // B9 00C0
        gbc.setState(0xa1d4, 0xb2ea, 0x33f0, 0x4421, 0x803a, 0x72e3, 0x0, 0x0);
        gbc.writeMem(0xa1d4, { 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb2ea, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa1d4));
        // B9 00C1
        gbc.setState(0xab98, 0x5d7e, 0x5370, 0xf5ce, 0xf983, 0xd21d, 0x1, 0x1);
        gbc.writeMem(0xab98, { 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5d7e, gbc.sp());
        EXPECT(0xab99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xab98));
        // B9 00C2
        gbc.setState(0x53c4, 0x8563, 0x7f70, 0x99e3, 0x7632, 0xd481, 0x1, 0x1);
        gbc.writeMem(0x53c4, { 0xb9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8563, gbc.sp());
        EXPECT(0x53c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00C3
        gbc.setState(0xe68, 0xaa15, 0xc7b0, 0xc297, 0xfb2a, 0x2eb3, 0x1, 0x0);
        gbc.writeMem(0xe68, { 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaa15, gbc.sp());
        EXPECT(0xe69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00C4
        gbc.setState(0x5480, 0xfd4c, 0xd2b0, 0x753c, 0x7f5a, 0x51e8, 0x1, 0x1);
        gbc.writeMem(0x5480, { 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfd4c, gbc.sp());
        EXPECT(0x5481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00C5
        gbc.setState(0xa5b4, 0x2c86, 0x3a50, 0x18ac, 0x6eec, 0xf376, 0x0, 0x1);
        gbc.writeMem(0xa5b4, { 0xb9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2c86, gbc.sp());
        EXPECT(0xa5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa5b4));
        // B9 00C6
        gbc.setState(0x1680, 0x721, 0x2cb0, 0x54f6, 0xa31, 0x35ac, 0x0, 0x1);
        gbc.writeMem(0x1680, { 0xb9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0x1681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00C7
        gbc.setState(0x1a88, 0x992d, 0xdb30, 0xd2d8, 0x89e0, 0x451a, 0x0, 0x1);
        gbc.writeMem(0x1a88, { 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x992d, gbc.sp());
        EXPECT(0x1a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00C9
        gbc.setState(0x758b, 0x3a75, 0xf070, 0x2f64, 0x4048, 0x2736, 0x0, 0x0);
        gbc.writeMem(0x758b, { 0xb9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3a75, gbc.sp());
        EXPECT(0x758c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00CA
        gbc.setState(0x1301, 0xa0c0, 0x31a0, 0xaef0, 0x7b7d, 0xa960, 0x0, 0x1);
        gbc.writeMem(0x1301, { 0xb9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa0c0, gbc.sp());
        EXPECT(0x1302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00CC
        gbc.setState(0x3725, 0x51db, 0xda60, 0xd069, 0x82b3, 0x7dbc, 0x1, 0x1);
        gbc.writeMem(0x3725, { 0xb9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x51db, gbc.sp());
        EXPECT(0x3726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00CD
        gbc.setState(0x5872, 0xd169, 0x21a0, 0x484a, 0x69e, 0x7deb, 0x0, 0x1);
        gbc.writeMem(0x5872, { 0xb9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd169, gbc.sp());
        EXPECT(0x5873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00CE
        gbc.setState(0xeb87, 0xbd25, 0xf9b0, 0xde4, 0x62f9, 0x1307, 0x0, 0x0);
        gbc.writeMem(0xeb87, { 0xb9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbd25, gbc.sp());
        EXPECT(0xeb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xeb87));
        // B9 00CF
        gbc.setState(0xda63, 0x37de, 0xcef0, 0xf8bb, 0x5843, 0x4041, 0x1, 0x1);
        gbc.writeMem(0xda63, { 0xb9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x37de, gbc.sp());
        EXPECT(0xda64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xda63));
        // B9 00D0
        gbc.setState(0xcd26, 0x2414, 0x9ad0, 0x48a2, 0x78d, 0x3ca4, 0x0, 0x1);
        gbc.writeMem(0xcd26, { 0xb9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2414, gbc.sp());
        EXPECT(0xcd27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcd26));
        // B9 00D1
        gbc.setState(0x9e44, 0x508c, 0x9470, 0xe4fa, 0x77a5, 0x3d92, 0x1, 0x1);
        gbc.writeMem(0x9e44, { 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x508c, gbc.sp());
        EXPECT(0x9e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9e44));
        // B9 00D2
        gbc.setState(0x67a3, 0xbdff, 0x7370, 0xad58, 0x900d, 0x2a2b, 0x0, 0x1);
        gbc.writeMem(0x67a3, { 0xb9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbdff, gbc.sp());
        EXPECT(0x67a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00D3
        gbc.setState(0xe2c2, 0xb293, 0x69f0, 0x68bc, 0x16fb, 0xde5c, 0x1, 0x1);
        gbc.writeMem(0xe2c2, { 0xb9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0xe2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe2c2));
        // B9 00D5
        gbc.setState(0x2b81, 0xa463, 0x3920, 0x140b, 0x5ba8, 0xfda5, 0x1, 0x1);
        gbc.writeMem(0x2b81, { 0xb9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa463, gbc.sp());
        EXPECT(0x2b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00D6
        gbc.setState(0x88f4, 0xb734, 0x17e0, 0xc42b, 0xff0c, 0xd887, 0x1, 0x0);
        gbc.writeMem(0x88f4, { 0xb9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb734, gbc.sp());
        EXPECT(0x88f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x88f4));
        // B9 00D7
        gbc.setState(0xc961, 0xa747, 0x5df0, 0x4ca7, 0x8844, 0x617, 0x1, 0x0);
        gbc.writeMem(0xc961, { 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa747, gbc.sp());
        EXPECT(0xc962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc961));
        // B9 00D8
        gbc.setState(0x8044, 0x188f, 0xd0f0, 0x67a, 0x74e1, 0x380d, 0x1, 0x1);
        gbc.writeMem(0x8044, { 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x188f, gbc.sp());
        EXPECT(0x8045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8044));
        // B9 00D9
        gbc.setState(0x9f7a, 0xd4b5, 0x4350, 0x3094, 0x604d, 0xb193, 0x1, 0x1);
        gbc.writeMem(0x9f7a, { 0xb9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd4b5, gbc.sp());
        EXPECT(0x9f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9f7a));
        // B9 00DA
        gbc.setState(0x38f9, 0x4b33, 0x650, 0x4902, 0xfe08, 0x3e29, 0x0, 0x0);
        gbc.writeMem(0x38f9, { 0xb9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4b33, gbc.sp());
        EXPECT(0x38fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00DB
        gbc.setState(0x9146, 0xc5c4, 0xdef0, 0x273b, 0xb80a, 0x9897, 0x0, 0x1);
        gbc.writeMem(0x9146, { 0xb9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc5c4, gbc.sp());
        EXPECT(0x9147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9146));
        // B9 00DC
        gbc.setState(0xe63a, 0xae22, 0x2740, 0xbbff, 0x7e06, 0xb513, 0x0, 0x0);
        gbc.writeMem(0xe63a, { 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xae22, gbc.sp());
        EXPECT(0xe63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe63a));
        // B9 00DD
        gbc.setState(0x4ed8, 0xd09e, 0xb790, 0x52da, 0x9dac, 0x6307, 0x1, 0x0);
        gbc.writeMem(0x4ed8, { 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd09e, gbc.sp());
        EXPECT(0x4ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00DE
        gbc.setState(0xa44, 0xea26, 0x3420, 0x13bb, 0xdff3, 0x6130, 0x1, 0x1);
        gbc.writeMem(0xa44, { 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xea26, gbc.sp());
        EXPECT(0xa45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00DF
        gbc.setState(0xda0b, 0xa1b6, 0x4230, 0x29cb, 0x262b, 0x68da, 0x0, 0x0);
        gbc.writeMem(0xda0b, { 0xb9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa1b6, gbc.sp());
        EXPECT(0xda0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xda0b));
        // B9 00E0
        gbc.setState(0x5f77, 0x9f46, 0xa920, 0x2f73, 0x5687, 0x84d0, 0x1, 0x0);
        gbc.writeMem(0x5f77, { 0xb9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9f46, gbc.sp());
        EXPECT(0x5f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00E1
        gbc.setState(0xdad0, 0x4d34, 0x6910, 0x902b, 0x722f, 0xc5c0, 0x1, 0x1);
        gbc.writeMem(0xdad0, { 0xb9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4d34, gbc.sp());
        EXPECT(0xdad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdad0));
        // B9 00E2
        gbc.setState(0xa2ec, 0xf167, 0xe260, 0xaf6d, 0x4ae1, 0x517, 0x1, 0x0);
        gbc.writeMem(0xa2ec, { 0xb9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf167, gbc.sp());
        EXPECT(0xa2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa2ec));
        // B9 00E3
        gbc.setState(0x74c8, 0xfdc, 0xc620, 0xe3f2, 0xff11, 0x8041, 0x0, 0x0);
        gbc.writeMem(0x74c8, { 0xb9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfdc, gbc.sp());
        EXPECT(0x74c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00E4
        gbc.setState(0xcb20, 0xef70, 0x4370, 0x6e09, 0x1468, 0x1f01, 0x0, 0x0);
        gbc.writeMem(0xcb20, { 0xb9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xef70, gbc.sp());
        EXPECT(0xcb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcb20));
        // B9 00E5
        gbc.setState(0x5479, 0x4081, 0x5b10, 0xe354, 0xa9ba, 0x3398, 0x1, 0x1);
        gbc.writeMem(0x5479, { 0xb9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4081, gbc.sp());
        EXPECT(0x547a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00E6
        gbc.setState(0xcf37, 0xec35, 0xa950, 0x5e85, 0x474f, 0x3064, 0x0, 0x0);
        gbc.writeMem(0xcf37, { 0xb9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xec35, gbc.sp());
        EXPECT(0xcf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcf37));
        // B9 00E7
        gbc.setState(0xece6, 0x5fd0, 0x2530, 0x67b7, 0xfcba, 0x94c3, 0x1, 0x0);
        gbc.writeMem(0xece6, { 0xb9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5fd0, gbc.sp());
        EXPECT(0xece7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xece6));
        // B9 00E8
        gbc.setState(0x48ab, 0xf67e, 0xc1a0, 0x4ef0, 0x2094, 0x6739, 0x1, 0x0);
        gbc.writeMem(0x48ab, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf67e, gbc.sp());
        EXPECT(0x48ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00E9
        gbc.setState(0xc53b, 0x132c, 0xafa0, 0x3b8, 0xec35, 0x95b6, 0x0, 0x0);
        gbc.writeMem(0xc53b, { 0xb9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x132c, gbc.sp());
        EXPECT(0xc53c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc53b));
        // B9 00EA
        gbc.setState(0xeb5c, 0xe2e6, 0xef0, 0x7a51, 0xb84a, 0x7574, 0x1, 0x0);
        gbc.writeMem(0xeb5c, { 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe2e6, gbc.sp());
        EXPECT(0xeb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xeb5c));
        // B9 00EB
        gbc.setState(0x5066, 0xffc, 0x62b0, 0x33c2, 0x75bf, 0x74af, 0x0, 0x1);
        gbc.writeMem(0x5066, { 0xb9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xffc, gbc.sp());
        EXPECT(0x5067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00EC
        gbc.setState(0x7419, 0x88f, 0xcff0, 0xbe9c, 0x9e68, 0x45a1, 0x0, 0x1);
        gbc.writeMem(0x7419, { 0xb9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x88f, gbc.sp());
        EXPECT(0x741a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00ED
        gbc.setState(0x68b5, 0x8009, 0xd0c0, 0xcb4d, 0x38d7, 0x793e, 0x0, 0x1);
        gbc.writeMem(0x68b5, { 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8009, gbc.sp());
        EXPECT(0x68b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00EE
        gbc.setState(0xe0a5, 0x8244, 0xa260, 0x8203, 0x142d, 0x2ae4, 0x0, 0x0);
        gbc.writeMem(0xe0a5, { 0xb9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8244, gbc.sp());
        EXPECT(0xe0a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe0a5));
        // B9 00EF
        gbc.setState(0x6b0d, 0xb0c3, 0x5100, 0x7a7b, 0xfc62, 0x65f5, 0x0, 0x1);
        gbc.writeMem(0x6b0d, { 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb0c3, gbc.sp());
        EXPECT(0x6b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00F0
        gbc.setState(0xfe7, 0xae55, 0x4cd0, 0x163b, 0x1395, 0x271e, 0x0, 0x0);
        gbc.writeMem(0xfe7, { 0xb9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xae55, gbc.sp());
        EXPECT(0xfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00F1
        gbc.setState(0x335c, 0x3bbe, 0x5890, 0x45a7, 0x8812, 0x5912, 0x1, 0x0);
        gbc.writeMem(0x335c, { 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3bbe, gbc.sp());
        EXPECT(0x335d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00F2
        gbc.setState(0xa410, 0xc8a2, 0x8d50, 0x6389, 0xa06a, 0x1301, 0x0, 0x1);
        gbc.writeMem(0xa410, { 0xb9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc8a2, gbc.sp());
        EXPECT(0xa411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa410));
        // B9 00F3
        gbc.setState(0xbcba, 0xbf2f, 0x6f30, 0xaf13, 0x68d7, 0x14f8, 0x1, 0x0);
        gbc.writeMem(0xbcba, { 0xb9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbf2f, gbc.sp());
        EXPECT(0xbcbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbcba));
        // B9 00F4
        gbc.setState(0xd7a9, 0x2e36, 0x5500, 0x5f18, 0xd19b, 0xe6c0, 0x0, 0x0);
        gbc.writeMem(0xd7a9, { 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2e36, gbc.sp());
        EXPECT(0xd7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd7a9));
        // B9 00F5
        gbc.setState(0x93d1, 0x5c9c, 0x75b0, 0xda3c, 0x28cb, 0x46fa, 0x0, 0x0);
        gbc.writeMem(0x93d1, { 0xb9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5c9c, gbc.sp());
        EXPECT(0x93d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x93d1));
        // B9 00F6
        gbc.setState(0x702c, 0xbd9e, 0x1080, 0x28bc, 0x318b, 0x83e9, 0x0, 0x0);
        gbc.writeMem(0x702c, { 0xb9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbd9e, gbc.sp());
        EXPECT(0x702d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00F7
        gbc.setState(0x69ab, 0x8314, 0xe810, 0x4417, 0xe0e9, 0xcc1d, 0x1, 0x1);
        gbc.writeMem(0x69ab, { 0xb9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0x69ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00F8
        gbc.setState(0xd6d5, 0xe17b, 0xd5b0, 0x7400, 0x2117, 0x9493, 0x1, 0x1);
        gbc.writeMem(0xd6d5, { 0xb9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe17b, gbc.sp());
        EXPECT(0xd6d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd6d5));
        // B9 00F9
        gbc.setState(0x4c2e, 0x61e3, 0x1bd0, 0x146e, 0xa356, 0x79a2, 0x1, 0x0);
        gbc.writeMem(0x4c2e, { 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x61e3, gbc.sp());
        EXPECT(0x4c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00FB
        gbc.setState(0xc70d, 0xbb1, 0x8cb0, 0x6b1f, 0xf8c5, 0xd613, 0x1, 0x1);
        gbc.writeMem(0xc70d, { 0xb9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbb1, gbc.sp());
        EXPECT(0xc70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc70d));
        // B9 00FC
        gbc.setState(0x7e83, 0x5d23, 0xd000, 0x5ec6, 0xfaca, 0x425b, 0x1, 0x1);
        gbc.writeMem(0x7e83, { 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5d23, gbc.sp());
        EXPECT(0x7e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00FD
        gbc.setState(0x1817, 0xb635, 0x98d0, 0x7480, 0x3fe4, 0xd5fe, 0x1, 0x1);
        gbc.writeMem(0x1817, { 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb635, gbc.sp());
        EXPECT(0x1818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 00FE
        gbc.setState(0x2d37, 0x795c, 0xe40, 0xb5eb, 0x28dc, 0xb3f1, 0x0, 0x1);
        gbc.writeMem(0x2d37, { 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x795c, gbc.sp());
        EXPECT(0x2d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 00FF
        gbc.setState(0xdc61, 0x303f, 0x9570, 0xc776, 0x18e1, 0x1e29, 0x1, 0x1);
        gbc.writeMem(0xdc61, { 0xb9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x303f, gbc.sp());
        EXPECT(0xdc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdc61));
        // B9 0100
        gbc.setState(0x4fa8, 0x34b2, 0x85f0, 0xa927, 0xa1e7, 0x58a8, 0x1, 0x1);
        gbc.writeMem(0x4fa8, { 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x34b2, gbc.sp());
        EXPECT(0x4fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0101
        gbc.setState(0xbc67, 0xa5bf, 0xa0f0, 0x7c1, 0xf7d0, 0x7df5, 0x1, 0x0);
        gbc.writeMem(0xbc67, { 0xb9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa5bf, gbc.sp());
        EXPECT(0xbc68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbc67));
        // B9 0102
        gbc.setState(0xd9f3, 0xf15c, 0x20d0, 0x4ed3, 0x6768, 0x2ed3, 0x1, 0x1);
        gbc.writeMem(0xd9f3, { 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf15c, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd9f3));
        // B9 0103
        gbc.setState(0x5ca2, 0xb0c4, 0x20b0, 0xcc59, 0x70d9, 0xb5a8, 0x0, 0x1);
        gbc.writeMem(0x5ca2, { 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb0c4, gbc.sp());
        EXPECT(0x5ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0104
        gbc.setState(0xa849, 0xe050, 0x5830, 0x29c9, 0xb534, 0xcc7b, 0x1, 0x0);
        gbc.writeMem(0xa849, { 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe050, gbc.sp());
        EXPECT(0xa84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa849));
        // B9 0105
        gbc.setState(0xade2, 0xe389, 0x7520, 0x8d57, 0x63d7, 0x60d1, 0x1, 0x0);
        gbc.writeMem(0xade2, { 0xb9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe389, gbc.sp());
        EXPECT(0xade3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xade2));
        // B9 0106
        gbc.setState(0x9c18, 0xf2e6, 0x9230, 0xd6bf, 0xb13, 0x9ca8, 0x1, 0x1);
        gbc.writeMem(0x9c18, { 0xb9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x9c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9c18));
        // B9 0107
        gbc.setState(0xdca0, 0x259f, 0x3140, 0xeb34, 0xb5dd, 0xcee5, 0x0, 0x1);
        gbc.writeMem(0xdca0, { 0xb9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x259f, gbc.sp());
        EXPECT(0xdca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdca0));
        // B9 0108
        gbc.setState(0x8a64, 0x5bdb, 0x99f0, 0x7667, 0x6cbe, 0xde15, 0x1, 0x1);
        gbc.writeMem(0x8a64, { 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5bdb, gbc.sp());
        EXPECT(0x8a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8a64));
        // B9 0109
        gbc.setState(0x4b3c, 0x6048, 0x7ce0, 0x62d3, 0x2a90, 0x7dab, 0x0, 0x0);
        gbc.writeMem(0x4b3c, { 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6048, gbc.sp());
        EXPECT(0x4b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 010A
        gbc.setState(0x16e6, 0xebbc, 0xfc50, 0x5a55, 0x1cd5, 0x5b29, 0x1, 0x1);
        gbc.writeMem(0x16e6, { 0xb9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xebbc, gbc.sp());
        EXPECT(0x16e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 010B
        gbc.setState(0xd467, 0x3cfb, 0xbfc0, 0x9a9, 0x879d, 0x38ed, 0x1, 0x1);
        gbc.writeMem(0xd467, { 0xb9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0xd468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd467));
        // B9 010C
        gbc.setState(0xee71, 0x6e31, 0x3c50, 0xc758, 0x82fe, 0x4be4, 0x0, 0x0);
        gbc.writeMem(0xee71, { 0xb9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6e31, gbc.sp());
        EXPECT(0xee72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xee71));
        // B9 010D
        gbc.setState(0xa129, 0x1521, 0x5b30, 0xa304, 0x3bb3, 0x17c6, 0x0, 0x1);
        gbc.writeMem(0xa129, { 0xb9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1521, gbc.sp());
        EXPECT(0xa12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa129));
        // B9 010E
        gbc.setState(0x3819, 0x4a1c, 0x47f0, 0x7313, 0x8c75, 0x8c8e, 0x0, 0x0);
        gbc.writeMem(0x3819, { 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4a1c, gbc.sp());
        EXPECT(0x381a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 010F
        gbc.setState(0x29ea, 0xf755, 0xc740, 0x372, 0x2180, 0xe49b, 0x1, 0x1);
        gbc.writeMem(0x29ea, { 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf755, gbc.sp());
        EXPECT(0x29eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0110
        gbc.setState(0x4355, 0x9483, 0x9980, 0x26fc, 0x702a, 0xe4b3, 0x0, 0x1);
        gbc.writeMem(0x4355, { 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9483, gbc.sp());
        EXPECT(0x4356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0111
        gbc.setState(0xbae6, 0xb25b, 0x5800, 0x636, 0x9401, 0x22f4, 0x1, 0x1);
        gbc.writeMem(0xbae6, { 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb25b, gbc.sp());
        EXPECT(0xbae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbae6));
        // B9 0112
        gbc.setState(0xc9f2, 0xc45c, 0xe170, 0xe969, 0xd705, 0x8824, 0x0, 0x0);
        gbc.writeMem(0xc9f2, { 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc45c, gbc.sp());
        EXPECT(0xc9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc9f2));
        // B9 0113
        gbc.setState(0x9274, 0x33fd, 0xee0, 0xb5f6, 0xef37, 0x2c67, 0x0, 0x1);
        gbc.writeMem(0x9274, { 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x33fd, gbc.sp());
        EXPECT(0x9275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9274));
        // B9 0114
        gbc.setState(0x9ecc, 0x396f, 0x78b0, 0xdb8c, 0xc594, 0xe96a, 0x1, 0x0);
        gbc.writeMem(0x9ecc, { 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x396f, gbc.sp());
        EXPECT(0x9ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9ecc));
        // B9 0115
        gbc.setState(0x3ed6, 0x1405, 0xb360, 0xdef0, 0xb383, 0xfa34, 0x1, 0x1);
        gbc.writeMem(0x3ed6, { 0xb9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1405, gbc.sp());
        EXPECT(0x3ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0116
        gbc.setState(0xc25c, 0x923, 0x6a60, 0x1a52, 0x308f, 0x111a, 0x0, 0x0);
        gbc.writeMem(0xc25c, { 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x923, gbc.sp());
        EXPECT(0xc25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc25c));
        // B9 0117
        gbc.setState(0x5c33, 0x1450, 0xc760, 0x8bb6, 0xee4f, 0xe202, 0x1, 0x0);
        gbc.writeMem(0x5c33, { 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1450, gbc.sp());
        EXPECT(0x5c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0118
        gbc.setState(0xee85, 0xfa4b, 0xbe80, 0x173f, 0xfc27, 0x3a4e, 0x1, 0x1);
        gbc.writeMem(0xee85, { 0xb9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfa4b, gbc.sp());
        EXPECT(0xee86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xee85));
        // B9 0119
        gbc.setState(0x1e59, 0x9eea, 0x11a0, 0x2df4, 0x7ab6, 0xef34, 0x0, 0x1);
        gbc.writeMem(0x1e59, { 0xb9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9eea, gbc.sp());
        EXPECT(0x1e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 011A
        gbc.setState(0x416a, 0x30ec, 0xd860, 0xfbc2, 0xd8d, 0x640d, 0x1, 0x0);
        gbc.writeMem(0x416a, { 0xb9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x30ec, gbc.sp());
        EXPECT(0x416b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 011B
        gbc.setState(0x95ed, 0xecb9, 0xa960, 0xad58, 0x9ea6, 0x75f, 0x0, 0x1);
        gbc.writeMem(0x95ed, { 0xb9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xecb9, gbc.sp());
        EXPECT(0x95ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x95ed));
        // B9 011C
        gbc.setState(0x69b9, 0x741c, 0x72e0, 0x581a, 0xcf6, 0x2650, 0x0, 0x1);
        gbc.writeMem(0x69b9, { 0xb9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x741c, gbc.sp());
        EXPECT(0x69ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 011D
        gbc.setState(0x560e, 0xbae5, 0xdec0, 0x4f3e, 0x49a1, 0x4a42, 0x0, 0x0);
        gbc.writeMem(0x560e, { 0xb9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbae5, gbc.sp());
        EXPECT(0x560f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 011E
        gbc.setState(0xc058, 0xf06f, 0x9e50, 0xbbe6, 0x7653, 0x6a84, 0x0, 0x1);
        gbc.writeMem(0xc058, { 0xb9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf06f, gbc.sp());
        EXPECT(0xc059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc058));
        // B9 011F
        gbc.setState(0x3792, 0x4de8, 0xaa0, 0x414b, 0x8028, 0x866f, 0x1, 0x0);
        gbc.writeMem(0x3792, { 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4de8, gbc.sp());
        EXPECT(0x3793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0120
        gbc.setState(0xb7f6, 0xcdbe, 0x8520, 0x839b, 0xb9d2, 0x4ffb, 0x0, 0x1);
        gbc.writeMem(0xb7f6, { 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0xb7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb7f6));
        // B9 0121
        gbc.setState(0xe31d, 0xc163, 0x44b0, 0xa6f1, 0x70d0, 0xf73a, 0x1, 0x1);
        gbc.writeMem(0xe31d, { 0xb9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc163, gbc.sp());
        EXPECT(0xe31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe31d));
        // B9 0122
        gbc.setState(0x7c2e, 0xf985, 0x6360, 0x8b1, 0xaf59, 0x99df, 0x1, 0x1);
        gbc.writeMem(0x7c2e, { 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf985, gbc.sp());
        EXPECT(0x7c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0123
        gbc.setState(0x4ee5, 0x2cce, 0x5e10, 0x70e1, 0x87b4, 0x88e6, 0x0, 0x0);
        gbc.writeMem(0x4ee5, { 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2cce, gbc.sp());
        EXPECT(0x4ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0124
        gbc.setState(0x8d4, 0xa893, 0x1790, 0xd5d6, 0x8f29, 0xabe8, 0x0, 0x1);
        gbc.writeMem(0x8d4, { 0xb9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa893, gbc.sp());
        EXPECT(0x8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0125
        gbc.setState(0x7d29, 0xcfa4, 0x98c0, 0xbcb2, 0x844d, 0x9ab5, 0x0, 0x1);
        gbc.writeMem(0x7d29, { 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcfa4, gbc.sp());
        EXPECT(0x7d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0126
        gbc.setState(0x769f, 0x4ac, 0xb20, 0x3e90, 0x4ba7, 0x6f8e, 0x0, 0x0);
        gbc.writeMem(0x769f, { 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4ac, gbc.sp());
        EXPECT(0x76a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0127
        gbc.setState(0xcb4f, 0x713c, 0x7330, 0xc1c, 0xdf5, 0x8a76, 0x0, 0x0);
        gbc.writeMem(0xcb4f, { 0xb9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x713c, gbc.sp());
        EXPECT(0xcb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcb4f));
        // B9 0128
        gbc.setState(0x4c0d, 0xf022, 0x3230, 0xb5ff, 0xd4c3, 0xf4d6, 0x1, 0x0);
        gbc.writeMem(0x4c0d, { 0xb9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf022, gbc.sp());
        EXPECT(0x4c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0129
        gbc.setState(0x81b2, 0x7528, 0x51d0, 0xa6ac, 0xa332, 0x2b2d, 0x0, 0x0);
        gbc.writeMem(0x81b2, { 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7528, gbc.sp());
        EXPECT(0x81b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x81b2));
        // B9 012A
        gbc.setState(0x5c0d, 0x9e6, 0x4f80, 0x187f, 0xd37b, 0xc367, 0x0, 0x0);
        gbc.writeMem(0x5c0d, { 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0x5c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 012B
        gbc.setState(0x902a, 0x4628, 0x930, 0x7253, 0x7ee4, 0x17b9, 0x0, 0x0);
        gbc.writeMem(0x902a, { 0xb9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4628, gbc.sp());
        EXPECT(0x902b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x902a));
        // B9 012C
        gbc.setState(0x31f7, 0x342b, 0x5d50, 0xb046, 0x1530, 0x9693, 0x0, 0x0);
        gbc.writeMem(0x31f7, { 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x342b, gbc.sp());
        EXPECT(0x31f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 012D
        gbc.setState(0x9ab0, 0xe54f, 0x2a50, 0x972e, 0x1177, 0x16c7, 0x1, 0x0);
        gbc.writeMem(0x9ab0, { 0xb9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe54f, gbc.sp());
        EXPECT(0x9ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9ab0));
        // B9 012E
        gbc.setState(0x8135, 0x7fe1, 0x16d0, 0xd906, 0x4357, 0xfa6, 0x0, 0x1);
        gbc.writeMem(0x8135, { 0xb9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0x8136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8135));
        // B9 012F
        gbc.setState(0xa325, 0xcd16, 0x6570, 0x91a7, 0xcedd, 0x98fc, 0x0, 0x1);
        gbc.writeMem(0xa325, { 0xb9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcd16, gbc.sp());
        EXPECT(0xa326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa325));
        // B9 0130
        gbc.setState(0xebe4, 0xa687, 0x4bb0, 0x43ca, 0xaafd, 0x41e0, 0x0, 0x1);
        gbc.writeMem(0xebe4, { 0xb9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa687, gbc.sp());
        EXPECT(0xebe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xebe4));
        // B9 0131
        gbc.setState(0x17ae, 0x7ceb, 0xbc90, 0x3012, 0x890a, 0x7c51, 0x1, 0x1);
        gbc.writeMem(0x17ae, { 0xb9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7ceb, gbc.sp());
        EXPECT(0x17af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0132
        gbc.setState(0x659c, 0x808, 0xec0, 0x50ab, 0xed26, 0x9d14, 0x1, 0x0);
        gbc.writeMem(0x659c, { 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x808, gbc.sp());
        EXPECT(0x659d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0133
        gbc.setState(0xc0bf, 0xba9f, 0x6640, 0x4cff, 0xff22, 0xb213, 0x0, 0x1);
        gbc.writeMem(0xc0bf, { 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xba9f, gbc.sp());
        EXPECT(0xc0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc0bf));
        // B9 0134
        gbc.setState(0x493d, 0x6cf3, 0xee60, 0x13b7, 0xa3e6, 0x4989, 0x1, 0x0);
        gbc.writeMem(0x493d, { 0xb9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6cf3, gbc.sp());
        EXPECT(0x493e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0135
        gbc.setState(0x1a73, 0xde5f, 0x9e0, 0x32eb, 0xe3ed, 0x6142, 0x1, 0x0);
        gbc.writeMem(0x1a73, { 0xb9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xde5f, gbc.sp());
        EXPECT(0x1a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0136
        gbc.setState(0xb755, 0xffb9, 0x5c90, 0x34ac, 0x6e68, 0xdb38, 0x0, 0x0);
        gbc.writeMem(0xb755, { 0xb9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xffb9, gbc.sp());
        EXPECT(0xb756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb755));
        // B9 0137
        gbc.setState(0xcaee, 0x631f, 0x3d20, 0x7c7d, 0x2f96, 0xd6a6, 0x1, 0x1);
        gbc.writeMem(0xcaee, { 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x631f, gbc.sp());
        EXPECT(0xcaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcaee));
        // B9 0138
        gbc.setState(0xab03, 0xe534, 0xc170, 0x4b6f, 0xd77b, 0x648f, 0x0, 0x1);
        gbc.writeMem(0xab03, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe534, gbc.sp());
        EXPECT(0xab04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xab03));
        // B9 0139
        gbc.setState(0x9c3d, 0x9255, 0xfb10, 0x4bd7, 0xb2ae, 0xfd47, 0x0, 0x0);
        gbc.writeMem(0x9c3d, { 0xb9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9255, gbc.sp());
        EXPECT(0x9c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9c3d));
        // B9 013A
        gbc.setState(0x626c, 0x5115, 0x7df0, 0xf399, 0xe843, 0xd669, 0x1, 0x1);
        gbc.writeMem(0x626c, { 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5115, gbc.sp());
        EXPECT(0x626d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 013B
        gbc.setState(0x37f1, 0xa9be, 0xe110, 0xffa0, 0x7084, 0x609b, 0x1, 0x1);
        gbc.writeMem(0x37f1, { 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa9be, gbc.sp());
        EXPECT(0x37f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 013C
        gbc.setState(0xaa82, 0x87f8, 0xde40, 0x1f9d, 0xbf53, 0x543f, 0x0, 0x0);
        gbc.writeMem(0xaa82, { 0xb9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x87f8, gbc.sp());
        EXPECT(0xaa83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaa82));
        // B9 013D
        gbc.setState(0x96f5, 0x4bba, 0xd8f0, 0x385b, 0x439d, 0xa7ac, 0x1, 0x0);
        gbc.writeMem(0x96f5, { 0xb9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4bba, gbc.sp());
        EXPECT(0x96f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x96f5));
        // B9 013E
        gbc.setState(0xb589, 0xaeb4, 0x5c60, 0x95c5, 0x2575, 0xbac9, 0x1, 0x1);
        gbc.writeMem(0xb589, { 0xb9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaeb4, gbc.sp());
        EXPECT(0xb58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb589));
        // B9 013F
        gbc.setState(0xbc90, 0x5fb4, 0x6c50, 0xe595, 0xfada, 0xa0d2, 0x1, 0x0);
        gbc.writeMem(0xbc90, { 0xb9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5fb4, gbc.sp());
        EXPECT(0xbc91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbc90));
        // B9 0140
        gbc.setState(0x12d0, 0xacb9, 0x3d00, 0xf5a8, 0xd1f2, 0x3fef, 0x1, 0x1);
        gbc.writeMem(0x12d0, { 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xacb9, gbc.sp());
        EXPECT(0x12d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0141
        gbc.setState(0x45a3, 0x2b2, 0x1b10, 0xc5ae, 0xaa40, 0x23e3, 0x0, 0x0);
        gbc.writeMem(0x45a3, { 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2b2, gbc.sp());
        EXPECT(0x45a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0142
        gbc.setState(0x9da8, 0x1a17, 0x4700, 0x9a03, 0x293c, 0x5a30, 0x1, 0x0);
        gbc.writeMem(0x9da8, { 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1a17, gbc.sp());
        EXPECT(0x9da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9da8));
        // B9 0143
        gbc.setState(0x5e14, 0x6b97, 0xa3d0, 0xc956, 0xca0a, 0x3fce, 0x1, 0x0);
        gbc.writeMem(0x5e14, { 0xb9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6b97, gbc.sp());
        EXPECT(0x5e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0144
        gbc.setState(0x8828, 0x7f5a, 0x2d70, 0x646f, 0x6033, 0x1f99, 0x1, 0x0);
        gbc.writeMem(0x8828, { 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7f5a, gbc.sp());
        EXPECT(0x8829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8828));
        // B9 0145
        gbc.setState(0xcb42, 0xfabd, 0x8e50, 0xf24, 0x1f8, 0x1d18, 0x0, 0x1);
        gbc.writeMem(0xcb42, { 0xb9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfabd, gbc.sp());
        EXPECT(0xcb43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcb42));
        // B9 0148
        gbc.setState(0x293e, 0x84f, 0x7c20, 0xa835, 0x426f, 0x6049, 0x0, 0x1);
        gbc.writeMem(0x293e, { 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x84f, gbc.sp());
        EXPECT(0x293f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0149
        gbc.setState(0x5a9e, 0x26e5, 0x5340, 0xd10d, 0xf615, 0xdeea, 0x1, 0x1);
        gbc.writeMem(0x5a9e, { 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x26e5, gbc.sp());
        EXPECT(0x5a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 014A
        gbc.setState(0xb97a, 0x9f69, 0x9790, 0xa81c, 0xd669, 0x7e46, 0x1, 0x1);
        gbc.writeMem(0xb97a, { 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9f69, gbc.sp());
        EXPECT(0xb97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb97a));
        // B9 014B
        gbc.setState(0xc365, 0xd034, 0xb8b0, 0x31d7, 0x2746, 0x6663, 0x1, 0x1);
        gbc.writeMem(0xc365, { 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd034, gbc.sp());
        EXPECT(0xc366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc365));
        // B9 014C
        gbc.setState(0xa91b, 0x6c09, 0x5670, 0x306c, 0xd18e, 0xf01c, 0x1, 0x1);
        gbc.writeMem(0xa91b, { 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6c09, gbc.sp());
        EXPECT(0xa91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa91b));
        // B9 014D
        gbc.setState(0x9e6b, 0x8c42, 0x4d0, 0xb1e1, 0xa4fc, 0xd492, 0x0, 0x1);
        gbc.writeMem(0x9e6b, { 0xb9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8c42, gbc.sp());
        EXPECT(0x9e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9e6b));
        // B9 014E
        gbc.setState(0x5d77, 0xe75e, 0xfbd0, 0x6c48, 0x754a, 0x8049, 0x1, 0x1);
        gbc.writeMem(0x5d77, { 0xb9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe75e, gbc.sp());
        EXPECT(0x5d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 014F
        gbc.setState(0x63b7, 0xc9c, 0x90f0, 0x89b5, 0xc679, 0x821, 0x0, 0x0);
        gbc.writeMem(0x63b7, { 0xb9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc9c, gbc.sp());
        EXPECT(0x63b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0150
        gbc.setState(0x8a90, 0xae5c, 0x8ea0, 0xb7fe, 0xbbd4, 0xe6a0, 0x1, 0x0);
        gbc.writeMem(0x8a90, { 0xb9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xae5c, gbc.sp());
        EXPECT(0x8a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8a90));
        // B9 0152
        gbc.setState(0x8ae4, 0xf78f, 0x6160, 0x3cd6, 0x3661, 0xebe1, 0x0, 0x0);
        gbc.writeMem(0x8ae4, { 0xb9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf78f, gbc.sp());
        EXPECT(0x8ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8ae4));
        // B9 0153
        gbc.setState(0x836f, 0x2938, 0x3710, 0x3af7, 0xb8d6, 0x6d06, 0x1, 0x1);
        gbc.writeMem(0x836f, { 0xb9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2938, gbc.sp());
        EXPECT(0x8370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x836f));
        // B9 0154
        gbc.setState(0x1ec, 0x5a87, 0x89a0, 0x1a2b, 0x710, 0x9a0e, 0x0, 0x0);
        gbc.writeMem(0x1ec, { 0xb9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5a87, gbc.sp());
        EXPECT(0x1ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0155
        gbc.setState(0xde91, 0x981f, 0x48d0, 0x69b8, 0x4faa, 0x3e60, 0x0, 0x1);
        gbc.writeMem(0xde91, { 0xb9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x981f, gbc.sp());
        EXPECT(0xde92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xde91));
        // B9 0157
        gbc.setState(0x630d, 0xe1eb, 0x8790, 0xdbe3, 0x123d, 0x15c0, 0x0, 0x0);
        gbc.writeMem(0x630d, { 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe1eb, gbc.sp());
        EXPECT(0x630e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0158
        gbc.setState(0xbbe9, 0x84f4, 0x6000, 0x2302, 0xde3c, 0x3bba, 0x0, 0x1);
        gbc.writeMem(0xbbe9, { 0xb9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x84f4, gbc.sp());
        EXPECT(0xbbea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbbe9));
        // B9 0159
        gbc.setState(0xcf9d, 0xe7bc, 0xbd50, 0x34ab, 0x8df8, 0x5c6d, 0x0, 0x1);
        gbc.writeMem(0xcf9d, { 0xb9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe7bc, gbc.sp());
        EXPECT(0xcf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcf9d));
        // B9 015A
        gbc.setState(0x1a1a, 0x2260, 0x8e20, 0x6791, 0x91b8, 0xd451, 0x1, 0x1);
        gbc.writeMem(0x1a1a, { 0xb9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2260, gbc.sp());
        EXPECT(0x1a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 015B
        gbc.setState(0x68a, 0xee73, 0x7ac0, 0x8784, 0xb578, 0xd1e1, 0x0, 0x0);
        gbc.writeMem(0x68a, { 0xb9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xee73, gbc.sp());
        EXPECT(0x68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 015C
        gbc.setState(0x6eff, 0x8a6e, 0x7920, 0x8029, 0x3393, 0xfa05, 0x1, 0x0);
        gbc.writeMem(0x6eff, { 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8a6e, gbc.sp());
        EXPECT(0x6f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 015D
        gbc.setState(0xbb8c, 0x1adc, 0x4e50, 0x422c, 0x892, 0x9c05, 0x1, 0x1);
        gbc.writeMem(0xbb8c, { 0xb9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0xbb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbb8c));
        // B9 015E
        gbc.setState(0x8df6, 0xc777, 0x5550, 0xa573, 0x5188, 0xdc32, 0x0, 0x1);
        gbc.writeMem(0x8df6, { 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc777, gbc.sp());
        EXPECT(0x8df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8df6));
        // B9 015F
        gbc.setState(0x450b, 0x5d56, 0x6fd0, 0x762d, 0xb4f7, 0x92f9, 0x1, 0x0);
        gbc.writeMem(0x450b, { 0xb9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5d56, gbc.sp());
        EXPECT(0x450c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0160
        gbc.setState(0x3678, 0x1b6f, 0x9ec0, 0x87ef, 0x1850, 0x11c6, 0x0, 0x1);
        gbc.writeMem(0x3678, { 0xb9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1b6f, gbc.sp());
        EXPECT(0x3679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0161
        gbc.setState(0x7fa6, 0xa3b2, 0xaf40, 0xaae5, 0x9445, 0x36c5, 0x0, 0x0);
        gbc.writeMem(0x7fa6, { 0xb9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa3b2, gbc.sp());
        EXPECT(0x7fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0162
        gbc.setState(0x9aa, 0xde67, 0x5580, 0x4ba2, 0xccde, 0xbe8b, 0x1, 0x1);
        gbc.writeMem(0x9aa, { 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xde67, gbc.sp());
        EXPECT(0x9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0163
        gbc.setState(0xe4a2, 0x7672, 0x7460, 0xa298, 0x926, 0x6af, 0x0, 0x1);
        gbc.writeMem(0xe4a2, { 0xb9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7672, gbc.sp());
        EXPECT(0xe4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe4a2));
        // B9 0165
        gbc.setState(0xdca9, 0x8309, 0xaec0, 0xd674, 0x69c4, 0x79ac, 0x0, 0x1);
        gbc.writeMem(0xdca9, { 0xb9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0xdcaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdca9));
        // B9 0166
        gbc.setState(0xb3d0, 0xa7f9, 0xc990, 0xe78, 0xc07d, 0x5b60, 0x0, 0x0);
        gbc.writeMem(0xb3d0, { 0xb9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa7f9, gbc.sp());
        EXPECT(0xb3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb3d0));
        // B9 0167
        gbc.setState(0x5676, 0x5bce, 0xe000, 0x70c6, 0x5861, 0x2348, 0x1, 0x0);
        gbc.writeMem(0x5676, { 0xb9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5bce, gbc.sp());
        EXPECT(0x5677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0168
        gbc.setState(0x7601, 0xe3dd, 0xee20, 0x6394, 0x75c6, 0x657c, 0x0, 0x1);
        gbc.writeMem(0x7601, { 0xb9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe3dd, gbc.sp());
        EXPECT(0x7602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0169
        gbc.setState(0x7c0f, 0x2e, 0x5f60, 0xc62a, 0xf43b, 0x2f2f, 0x1, 0x1);
        gbc.writeMem(0x7c0f, { 0xb9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2e, gbc.sp());
        EXPECT(0x7c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 016A
        gbc.setState(0x1a42, 0x1a9e, 0xec60, 0xb20b, 0x7e7d, 0x19a1, 0x0, 0x1);
        gbc.writeMem(0x1a42, { 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1a9e, gbc.sp());
        EXPECT(0x1a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 016B
        gbc.setState(0x3a74, 0xcfad, 0xf180, 0x3128, 0x69ca, 0x9d5f, 0x0, 0x1);
        gbc.writeMem(0x3a74, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcfad, gbc.sp());
        EXPECT(0x3a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 016C
        gbc.setState(0x123d, 0x69d9, 0xd220, 0xfac6, 0xd6f9, 0xd0a1, 0x0, 0x1);
        gbc.writeMem(0x123d, { 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x69d9, gbc.sp());
        EXPECT(0x123e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 016D
        gbc.setState(0x7358, 0xc4b3, 0xe950, 0x30ce, 0x6d18, 0xb57a, 0x0, 0x0);
        gbc.writeMem(0x7358, { 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc4b3, gbc.sp());
        EXPECT(0x7359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 016E
        gbc.setState(0x3330, 0x2b7c, 0xc100, 0xc923, 0x385b, 0xa45e, 0x0, 0x1);
        gbc.writeMem(0x3330, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2b7c, gbc.sp());
        EXPECT(0x3331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 016F
        gbc.setState(0x4dc6, 0x2c1a, 0xf510, 0x31fb, 0x53b2, 0xd927, 0x0, 0x1);
        gbc.writeMem(0x4dc6, { 0xb9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2c1a, gbc.sp());
        EXPECT(0x4dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0170
        gbc.setState(0x7a49, 0xb68e, 0xcd60, 0xda7, 0xf7fe, 0x1f99, 0x1, 0x0);
        gbc.writeMem(0x7a49, { 0xb9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb68e, gbc.sp());
        EXPECT(0x7a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0171
        gbc.setState(0xc89d, 0xa1c4, 0xba80, 0x838d, 0xdc2b, 0xf587, 0x1, 0x0);
        gbc.writeMem(0xc89d, { 0xb9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa1c4, gbc.sp());
        EXPECT(0xc89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc89d));
        // B9 0172
        gbc.setState(0x7bb, 0x9a1c, 0x2b80, 0xe83e, 0xd5ce, 0x9602, 0x0, 0x1);
        gbc.writeMem(0x7bb, { 0xb9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9a1c, gbc.sp());
        EXPECT(0x7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0173
        gbc.setState(0x3f27, 0x3786, 0x6d20, 0xb0d2, 0x8a79, 0x6666, 0x1, 0x0);
        gbc.writeMem(0x3f27, { 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3786, gbc.sp());
        EXPECT(0x3f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0174
        gbc.setState(0xc95e, 0x4df0, 0xf260, 0xfe83, 0x6f13, 0x8a5a, 0x0, 0x0);
        gbc.writeMem(0xc95e, { 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4df0, gbc.sp());
        EXPECT(0xc95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc95e));
        // B9 0176
        gbc.setState(0xe43b, 0x9c7d, 0x8350, 0xe853, 0x8866, 0x17d8, 0x1, 0x1);
        gbc.writeMem(0xe43b, { 0xb9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9c7d, gbc.sp());
        EXPECT(0xe43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe43b));
        // B9 0177
        gbc.setState(0xd503, 0x1a6d, 0x94f0, 0xccc2, 0xc252, 0xda5, 0x0, 0x0);
        gbc.writeMem(0xd503, { 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1a6d, gbc.sp());
        EXPECT(0xd504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd503));
        // B9 0179
        gbc.setState(0xa414, 0xfea0, 0x1050, 0x4b96, 0xf3f9, 0x5c27, 0x1, 0x0);
        gbc.writeMem(0xa414, { 0xb9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfea0, gbc.sp());
        EXPECT(0xa415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa414));
        // B9 017A
        gbc.setState(0x716b, 0x6baf, 0x4310, 0xa044, 0x4697, 0x581c, 0x0, 0x1);
        gbc.writeMem(0x716b, { 0xb9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6baf, gbc.sp());
        EXPECT(0x716c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 017B
        gbc.setState(0xb86, 0xba4b, 0x820, 0x49ce, 0x5166, 0x291f, 0x0, 0x0);
        gbc.writeMem(0xb86, { 0xb9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0xb87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 017C
        gbc.setState(0xd970, 0xf864, 0x8c60, 0xceab, 0x5f00, 0xb311, 0x0, 0x1);
        gbc.writeMem(0xd970, { 0xb9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf864, gbc.sp());
        EXPECT(0xd971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd970));
        // B9 017D
        gbc.setState(0x9058, 0x8141, 0x48f0, 0x4077, 0x79f7, 0x8c6a, 0x1, 0x1);
        gbc.writeMem(0x9058, { 0xb9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8141, gbc.sp());
        EXPECT(0x9059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9058));
        // B9 017E
        gbc.setState(0x894b, 0x25c1, 0x6e90, 0x4e85, 0x1bb, 0xfc50, 0x1, 0x1);
        gbc.writeMem(0x894b, { 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x25c1, gbc.sp());
        EXPECT(0x894c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x894b));
        // B9 017F
        gbc.setState(0x2ef8, 0xba7c, 0xf9c0, 0x506a, 0x6694, 0xe727, 0x1, 0x1);
        gbc.writeMem(0x2ef8, { 0xb9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xba7c, gbc.sp());
        EXPECT(0x2ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0180
        gbc.setState(0xb78b, 0xd0c5, 0x66f0, 0x96d1, 0x45fb, 0x7272, 0x1, 0x0);
        gbc.writeMem(0xb78b, { 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd0c5, gbc.sp());
        EXPECT(0xb78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb78b));
        // B9 0181
        gbc.setState(0x8de8, 0xf259, 0xddc0, 0xbe4b, 0xb4e2, 0xc102, 0x1, 0x0);
        gbc.writeMem(0x8de8, { 0xb9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf259, gbc.sp());
        EXPECT(0x8de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8de8));
        // B9 0183
        gbc.setState(0x56e1, 0xf2b0, 0x9420, 0xb642, 0x609f, 0x49df, 0x1, 0x1);
        gbc.writeMem(0x56e1, { 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf2b0, gbc.sp());
        EXPECT(0x56e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0184
        gbc.setState(0xaec, 0x6527, 0x290, 0x6c66, 0x1fc, 0x899b, 0x1, 0x0);
        gbc.writeMem(0xaec, { 0xb9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6527, gbc.sp());
        EXPECT(0xaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0185
        gbc.setState(0xae5d, 0x28ac, 0x5f00, 0xcfce, 0xdab4, 0xeb88, 0x0, 0x0);
        gbc.writeMem(0xae5d, { 0xb9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x28ac, gbc.sp());
        EXPECT(0xae5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xae5d));
        // B9 0186
        gbc.setState(0x73c0, 0x34fc, 0x4130, 0xae7b, 0x293e, 0xb740, 0x0, 0x1);
        gbc.writeMem(0x73c0, { 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x34fc, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0187
        gbc.setState(0x1ccf, 0x5aa6, 0xe1f0, 0x630, 0x3715, 0x41cd, 0x1, 0x1);
        gbc.writeMem(0x1ccf, { 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5aa6, gbc.sp());
        EXPECT(0x1cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0188
        gbc.setState(0x977, 0x57fd, 0x6e80, 0x96e9, 0x3910, 0x93de, 0x1, 0x0);
        gbc.writeMem(0x977, { 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x57fd, gbc.sp());
        EXPECT(0x978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0189
        gbc.setState(0x402b, 0x22cf, 0x4370, 0x50ba, 0x9fcb, 0x9d80, 0x0, 0x1);
        gbc.writeMem(0x402b, { 0xb9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x22cf, gbc.sp());
        EXPECT(0x402c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 018A
        gbc.setState(0x2de8, 0x9c3f, 0x5d0, 0x525, 0x5b48, 0xc992, 0x0, 0x1);
        gbc.writeMem(0x2de8, { 0xb9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9c3f, gbc.sp());
        EXPECT(0x2de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 018B
        gbc.setState(0x4eab, 0xbd9c, 0x68f0, 0x7466, 0xdfa1, 0x886, 0x0, 0x0);
        gbc.writeMem(0x4eab, { 0xb9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbd9c, gbc.sp());
        EXPECT(0x4eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 018C
        gbc.setState(0xa0fb, 0x35c6, 0xcee0, 0x3196, 0x2a0d, 0x5cb6, 0x1, 0x1);
        gbc.writeMem(0xa0fb, { 0xb9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x35c6, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa0fb));
        // B9 018D
        gbc.setState(0xce5a, 0x30ab, 0x8590, 0xc042, 0x5616, 0xc97c, 0x0, 0x1);
        gbc.writeMem(0xce5a, { 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x30ab, gbc.sp());
        EXPECT(0xce5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xce5a));
        // B9 018E
        gbc.setState(0xa874, 0x6802, 0x5170, 0x28dd, 0xb3e6, 0xf87b, 0x0, 0x1);
        gbc.writeMem(0xa874, { 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6802, gbc.sp());
        EXPECT(0xa875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa874));
        // B9 018F
        gbc.setState(0xdf7e, 0x806f, 0xcb70, 0x2d8c, 0x2b91, 0xa902, 0x0, 0x1);
        gbc.writeMem(0xdf7e, { 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x806f, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdf7e));
        // B9 0190
        gbc.setState(0x5ee7, 0xf153, 0x2c00, 0x8013, 0xb883, 0x3407, 0x1, 0x1);
        gbc.writeMem(0x5ee7, { 0xb9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf153, gbc.sp());
        EXPECT(0x5ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0191
        gbc.setState(0xc528, 0xcc2e, 0xd7b0, 0xc184, 0x9da9, 0xd187, 0x0, 0x1);
        gbc.writeMem(0xc528, { 0xb9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcc2e, gbc.sp());
        EXPECT(0xc529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc528));
        // B9 0192
        gbc.setState(0x60fe, 0x30fb, 0x7380, 0xd436, 0x173b, 0x4a9c, 0x0, 0x0);
        gbc.writeMem(0x60fe, { 0xb9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x30fb, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0193
        gbc.setState(0xe614, 0x4e97, 0x7100, 0xd7b8, 0x5fda, 0xc884, 0x0, 0x0);
        gbc.writeMem(0xe614, { 0xb9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4e97, gbc.sp());
        EXPECT(0xe615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe614));
        // B9 0194
        gbc.setState(0xac1, 0xd59, 0x98f0, 0x4e4b, 0xc09c, 0x4ab5, 0x1, 0x0);
        gbc.writeMem(0xac1, { 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd59, gbc.sp());
        EXPECT(0xac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0195
        gbc.setState(0x5c5c, 0x4d36, 0x3e30, 0x2ca, 0x4849, 0x1646, 0x0, 0x1);
        gbc.writeMem(0x5c5c, { 0xb9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4d36, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0196
        gbc.setState(0xd7ff, 0xc0b1, 0x7490, 0xf912, 0x61c5, 0x4b6b, 0x1, 0x0);
        gbc.writeMem(0xd7ff, { 0xb9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc0b1, gbc.sp());
        EXPECT(0xd800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd7ff));
        // B9 0197
        gbc.setState(0x997d, 0x9e85, 0xe520, 0xb95b, 0xf5c5, 0x3428, 0x1, 0x1);
        gbc.writeMem(0x997d, { 0xb9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9e85, gbc.sp());
        EXPECT(0x997e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x997d));
        // B9 0198
        gbc.setState(0x89ea, 0x99f3, 0xd880, 0x2cf3, 0x14ec, 0xb547, 0x1, 0x1);
        gbc.writeMem(0x89ea, { 0xb9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x99f3, gbc.sp());
        EXPECT(0x89eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x89ea));
        // B9 019A
        gbc.setState(0x6c17, 0xbe68, 0x4780, 0xb42f, 0xcbbe, 0x80b5, 0x1, 0x1);
        gbc.writeMem(0x6c17, { 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbe68, gbc.sp());
        EXPECT(0x6c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 019B
        gbc.setState(0x5c9f, 0x8166, 0xd250, 0x9d5d, 0xd3c7, 0x5466, 0x0, 0x0);
        gbc.writeMem(0x5c9f, { 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8166, gbc.sp());
        EXPECT(0x5ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 019C
        gbc.setState(0x6307, 0xeab3, 0xfd70, 0xe23c, 0xf760, 0x7cf, 0x1, 0x0);
        gbc.writeMem(0x6307, { 0xb9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xeab3, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 019D
        gbc.setState(0xe6a7, 0xc759, 0x6d70, 0x4553, 0x98bd, 0x7d8d, 0x0, 0x1);
        gbc.writeMem(0xe6a7, { 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc759, gbc.sp());
        EXPECT(0xe6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe6a7));
        // B9 019E
        gbc.setState(0x9ffc, 0x8a14, 0x9f0, 0x5436, 0x3844, 0xf505, 0x1, 0x1);
        gbc.writeMem(0x9ffc, { 0xb9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8a14, gbc.sp());
        EXPECT(0x9ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9ffc));
        // B9 019F
        gbc.setState(0x982d, 0xa8df, 0x8080, 0x9042, 0x8764, 0x2203, 0x1, 0x0);
        gbc.writeMem(0x982d, { 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa8df, gbc.sp());
        EXPECT(0x982e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x982d));
        // B9 01A0
        gbc.setState(0x718a, 0x3f5b, 0xb170, 0x580e, 0xc6b8, 0x6dda, 0x0, 0x1);
        gbc.writeMem(0x718a, { 0xb9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3f5b, gbc.sp());
        EXPECT(0x718b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01A1
        gbc.setState(0x4252, 0x90f3, 0x8690, 0x5661, 0x4c38, 0x9593, 0x1, 0x0);
        gbc.writeMem(0x4252, { 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x90f3, gbc.sp());
        EXPECT(0x4253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01A2
        gbc.setState(0x487, 0xa003, 0x6db0, 0xaee7, 0xf51f, 0xdd19, 0x1, 0x1);
        gbc.writeMem(0x487, { 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa003, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01A3
        gbc.setState(0x5a0c, 0x19ad, 0xb920, 0x5792, 0xa255, 0x8efc, 0x0, 0x0);
        gbc.writeMem(0x5a0c, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x19ad, gbc.sp());
        EXPECT(0x5a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01A4
        gbc.setState(0xc39e, 0x4554, 0xf200, 0xf660, 0x1edd, 0xd234, 0x0, 0x1);
        gbc.writeMem(0xc39e, { 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4554, gbc.sp());
        EXPECT(0xc39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc39e));
        // B9 01A5
        gbc.setState(0x32ee, 0x794a, 0x1240, 0xbf8b, 0x5151, 0xfea0, 0x1, 0x0);
        gbc.writeMem(0x32ee, { 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x794a, gbc.sp());
        EXPECT(0x32ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01A6
        gbc.setState(0x9acc, 0x898f, 0xaa80, 0x8705, 0xee00, 0xbc82, 0x0, 0x0);
        gbc.writeMem(0x9acc, { 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x898f, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9acc));
        // B9 01A7
        gbc.setState(0xcf4a, 0xf846, 0xee70, 0xea35, 0x819c, 0xff70, 0x1, 0x0);
        gbc.writeMem(0xcf4a, { 0xb9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf846, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcf4a));
        // B9 01A9
        gbc.setState(0xa36c, 0x282c, 0x98f0, 0xc91c, 0xd606, 0x186f, 0x1, 0x1);
        gbc.writeMem(0xa36c, { 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x282c, gbc.sp());
        EXPECT(0xa36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa36c));
        // B9 01AA
        gbc.setState(0x1b80, 0xfb29, 0xa20, 0xc1b2, 0xc64b, 0x918d, 0x0, 0x1);
        gbc.writeMem(0x1b80, { 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfb29, gbc.sp());
        EXPECT(0x1b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01AB
        gbc.setState(0x9acc, 0x79eb, 0xdb10, 0xdbff, 0xf654, 0x1695, 0x1, 0x1);
        gbc.writeMem(0x9acc, { 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x79eb, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9acc));
        // B9 01AC
        gbc.setState(0xae01, 0xe9ad, 0x13a0, 0xb424, 0x6f7, 0x632a, 0x0, 0x0);
        gbc.writeMem(0xae01, { 0xb9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe9ad, gbc.sp());
        EXPECT(0xae02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xae01));
        // B9 01AD
        gbc.setState(0x9f1a, 0x2ba4, 0xbcc0, 0xc528, 0xa687, 0xa098, 0x1, 0x0);
        gbc.writeMem(0x9f1a, { 0xb9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2ba4, gbc.sp());
        EXPECT(0x9f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9f1a));
        // B9 01AE
        gbc.setState(0xec63, 0x12a4, 0x9310, 0x5aa, 0xfde5, 0x41e1, 0x0, 0x0);
        gbc.writeMem(0xec63, { 0xb9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x12a4, gbc.sp());
        EXPECT(0xec64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xec63));
        // B9 01AF
        gbc.setState(0x74d8, 0xf29, 0x2040, 0x7e5f, 0x1d12, 0x48c6, 0x0, 0x1);
        gbc.writeMem(0x74d8, { 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf29, gbc.sp());
        EXPECT(0x74d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01B0
        gbc.setState(0x9972, 0x9b6e, 0x7aa0, 0x2f02, 0x20bd, 0x5bb5, 0x1, 0x0);
        gbc.writeMem(0x9972, { 0xb9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9b6e, gbc.sp());
        EXPECT(0x9973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9972));
        // B9 01B1
        gbc.setState(0xaf0b, 0x60d0, 0x97b0, 0xe538, 0x64fd, 0x9f0b, 0x0, 0x0);
        gbc.writeMem(0xaf0b, { 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x60d0, gbc.sp());
        EXPECT(0xaf0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaf0b));
        // B9 01B2
        gbc.setState(0x7916, 0x686e, 0xbd80, 0x35e, 0x5fbc, 0x90c4, 0x1, 0x1);
        gbc.writeMem(0x7916, { 0xb9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x686e, gbc.sp());
        EXPECT(0x7917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01B3
        gbc.setState(0x1161, 0x9fe9, 0xaf00, 0x8c18, 0x71c1, 0x5fc, 0x1, 0x0);
        gbc.writeMem(0x1161, { 0xb9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9fe9, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01B4
        gbc.setState(0xea99, 0x53e0, 0x2e10, 0x3c75, 0xe6fc, 0x51d9, 0x0, 0x1);
        gbc.writeMem(0xea99, { 0xb9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x53e0, gbc.sp());
        EXPECT(0xea9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xea99));
        // B9 01B5
        gbc.setState(0xb38b, 0xa562, 0xa5c0, 0xbc86, 0x8cdb, 0xc45f, 0x0, 0x1);
        gbc.writeMem(0xb38b, { 0xb9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa562, gbc.sp());
        EXPECT(0xb38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb38b));
        // B9 01B6
        gbc.setState(0xd8c8, 0x4572, 0x72e0, 0xe140, 0xd8f9, 0xa43, 0x1, 0x1);
        gbc.writeMem(0xd8c8, { 0xb9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4572, gbc.sp());
        EXPECT(0xd8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd8c8));
        // B9 01B7
        gbc.setState(0x9d05, 0x27, 0x3bd0, 0x88a1, 0x2955, 0x71a2, 0x0, 0x0);
        gbc.writeMem(0x9d05, { 0xb9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x27, gbc.sp());
        EXPECT(0x9d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9d05));
        // B9 01B8
        gbc.setState(0x5de7, 0xa8b, 0x9540, 0xea22, 0x4d56, 0x35cb, 0x1, 0x1);
        gbc.writeMem(0x5de7, { 0xb9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa8b, gbc.sp());
        EXPECT(0x5de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01B9
        gbc.setState(0x8598, 0x6d35, 0xc410, 0x5d7, 0xcf12, 0x8976, 0x1, 0x0);
        gbc.writeMem(0x8598, { 0xb9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6d35, gbc.sp());
        EXPECT(0x8599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8598));
        // B9 01BA
        gbc.setState(0x1859, 0x134, 0x59b0, 0xe10e, 0x8e63, 0x9fc7, 0x0, 0x1);
        gbc.writeMem(0x1859, { 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x134, gbc.sp());
        EXPECT(0x185a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01BB
        gbc.setState(0x56bd, 0x9edf, 0x24e0, 0x4668, 0x5c, 0x21d0, 0x1, 0x1);
        gbc.writeMem(0x56bd, { 0xb9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9edf, gbc.sp());
        EXPECT(0x56be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01BC
        gbc.setState(0x6f42, 0x2eaa, 0x80b0, 0xb148, 0x93c1, 0x6d99, 0x0, 0x0);
        gbc.writeMem(0x6f42, { 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2eaa, gbc.sp());
        EXPECT(0x6f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01BD
        gbc.setState(0x71f8, 0xe729, 0x9580, 0xcb45, 0x94c5, 0xd3b9, 0x0, 0x1);
        gbc.writeMem(0x71f8, { 0xb9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe729, gbc.sp());
        EXPECT(0x71f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01BE
        gbc.setState(0x955c, 0xf09, 0x7b0, 0x4ebf, 0xa644, 0xb9ac, 0x0, 0x0);
        gbc.writeMem(0x955c, { 0xb9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0x955d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x955c));
        // B9 01BF
        gbc.setState(0xa9f9, 0x6eab, 0xfc60, 0x5d09, 0xda54, 0x8959, 0x0, 0x0);
        gbc.writeMem(0xa9f9, { 0xb9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6eab, gbc.sp());
        EXPECT(0xa9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa9f9));
        // B9 01C0
        gbc.setState(0xd68a, 0x9709, 0xd7f0, 0x6159, 0xa0eb, 0x17a1, 0x1, 0x1);
        gbc.writeMem(0xd68a, { 0xb9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9709, gbc.sp());
        EXPECT(0xd68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd68a));
        // B9 01C1
        gbc.setState(0x3c13, 0xfd75, 0x9120, 0xf2fc, 0x46a8, 0x6b8f, 0x0, 0x1);
        gbc.writeMem(0x3c13, { 0xb9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfd75, gbc.sp());
        EXPECT(0x3c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01C2
        gbc.setState(0xbb4b, 0x72a3, 0x6af0, 0x78b8, 0xdcd7, 0x469a, 0x1, 0x1);
        gbc.writeMem(0xbb4b, { 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x72a3, gbc.sp());
        EXPECT(0xbb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbb4b));
        // B9 01C4
        gbc.setState(0x29c, 0xb5fc, 0x8660, 0x7e29, 0x45c6, 0x9e66, 0x1, 0x0);
        gbc.writeMem(0x29c, { 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb5fc, gbc.sp());
        EXPECT(0x29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01C5
        gbc.setState(0x5e96, 0x2454, 0xa960, 0x465b, 0x1299, 0xd195, 0x0, 0x0);
        gbc.writeMem(0x5e96, { 0xb9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2454, gbc.sp());
        EXPECT(0x5e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01C6
        gbc.setState(0x5eb3, 0x9b16, 0xc500, 0x70e3, 0x812a, 0x38e4, 0x0, 0x1);
        gbc.writeMem(0x5eb3, { 0xb9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9b16, gbc.sp());
        EXPECT(0x5eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01C7
        gbc.setState(0xeed3, 0xf0d9, 0xa510, 0xd0f1, 0x6f83, 0x4ca0, 0x0, 0x1);
        gbc.writeMem(0xeed3, { 0xb9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0xeed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xeed3));
        // B9 01C8
        gbc.setState(0x40da, 0x9317, 0x42f0, 0x2d72, 0x824d, 0xaf2b, 0x1, 0x1);
        gbc.writeMem(0x40da, { 0xb9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9317, gbc.sp());
        EXPECT(0x40db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01C9
        gbc.setState(0x441d, 0x3b0f, 0x2c20, 0x59b1, 0xfc7f, 0xe981, 0x1, 0x1);
        gbc.writeMem(0x441d, { 0xb9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3b0f, gbc.sp());
        EXPECT(0x441e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01CA
        gbc.setState(0xcf14, 0xde3d, 0xc520, 0xed15, 0x1ac8, 0x453d, 0x1, 0x1);
        gbc.writeMem(0xcf14, { 0xb9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xde3d, gbc.sp());
        EXPECT(0xcf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcf14));
        // B9 01CB
        gbc.setState(0xed79, 0xb057, 0x7de0, 0xbc2d, 0x7927, 0x9454, 0x1, 0x1);
        gbc.writeMem(0xed79, { 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb057, gbc.sp());
        EXPECT(0xed7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xed79));
        // B9 01CC
        gbc.setState(0x7b44, 0x85ac, 0x9170, 0xe02b, 0x5fbd, 0x4925, 0x1, 0x1);
        gbc.writeMem(0x7b44, { 0xb9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x85ac, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01CD
        gbc.setState(0x2661, 0xabd5, 0x53e0, 0xc428, 0x6f81, 0xeeb5, 0x1, 0x0);
        gbc.writeMem(0x2661, { 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xabd5, gbc.sp());
        EXPECT(0x2662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01CE
        gbc.setState(0xe716, 0x46e5, 0x4760, 0x1488, 0x8ebc, 0x742f, 0x0, 0x0);
        gbc.writeMem(0xe716, { 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x46e5, gbc.sp());
        EXPECT(0xe717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe716));
        // B9 01CF
        gbc.setState(0xde1, 0xdba6, 0x8640, 0x3f5d, 0xe533, 0x716d, 0x1, 0x1);
        gbc.writeMem(0xde1, { 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdba6, gbc.sp());
        EXPECT(0xde2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01D0
        gbc.setState(0x70a9, 0x6bcf, 0xfaa0, 0x584e, 0x53b3, 0x439d, 0x0, 0x1);
        gbc.writeMem(0x70a9, { 0xb9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6bcf, gbc.sp());
        EXPECT(0x70aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01D1
        gbc.setState(0x6015, 0xf670, 0x2780, 0x3f95, 0x7f56, 0xfbdc, 0x0, 0x0);
        gbc.writeMem(0x6015, { 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf670, gbc.sp());
        EXPECT(0x6016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01D2
        gbc.setState(0xb99b, 0xb094, 0x45f0, 0x5d35, 0x15c0, 0xa7, 0x0, 0x1);
        gbc.writeMem(0xb99b, { 0xb9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb094, gbc.sp());
        EXPECT(0xb99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb99b));
        // B9 01D3
        gbc.setState(0xc42c, 0xe2a8, 0x45f0, 0x63b4, 0x43b7, 0x7c90, 0x1, 0x1);
        gbc.writeMem(0xc42c, { 0xb9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe2a8, gbc.sp());
        EXPECT(0xc42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc42c));
        // B9 01D4
        gbc.setState(0x1d13, 0x326a, 0xaa10, 0x164a, 0xf0bd, 0xfaf2, 0x1, 0x1);
        gbc.writeMem(0x1d13, { 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x326a, gbc.sp());
        EXPECT(0x1d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01D5
        gbc.setState(0xeb8e, 0xca43, 0x1a0, 0x2ac0, 0xeae2, 0xf06, 0x0, 0x0);
        gbc.writeMem(0xeb8e, { 0xb9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xca43, gbc.sp());
        EXPECT(0xeb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xeb8e));
        // B9 01D6
        gbc.setState(0x3f44, 0x748, 0x7b70, 0x6b62, 0xda15, 0x2a7b, 0x1, 0x1);
        gbc.writeMem(0x3f44, { 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x748, gbc.sp());
        EXPECT(0x3f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01D7
        gbc.setState(0x133b, 0x17e8, 0xfea0, 0x213e, 0xcc0d, 0x1724, 0x0, 0x1);
        gbc.writeMem(0x133b, { 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x17e8, gbc.sp());
        EXPECT(0x133c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01D8
        gbc.setState(0x33ae, 0xbb52, 0x1bd0, 0xfd81, 0x1b3e, 0x7a5b, 0x0, 0x1);
        gbc.writeMem(0x33ae, { 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbb52, gbc.sp());
        EXPECT(0x33af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01D9
        gbc.setState(0x639b, 0x198, 0xc500, 0x8bce, 0x14ce, 0x538f, 0x0, 0x1);
        gbc.writeMem(0x639b, { 0xb9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x198, gbc.sp());
        EXPECT(0x639c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01DA
        gbc.setState(0x1ed7, 0xc99f, 0xc1e0, 0x266a, 0xfca6, 0xd5a8, 0x1, 0x0);
        gbc.writeMem(0x1ed7, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc99f, gbc.sp());
        EXPECT(0x1ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01DB
        gbc.setState(0x2941, 0x8f9a, 0x1b70, 0xfa16, 0xf537, 0x4089, 0x0, 0x0);
        gbc.writeMem(0x2941, { 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8f9a, gbc.sp());
        EXPECT(0x2942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01DC
        gbc.setState(0x2b6e, 0xd470, 0xaa90, 0xd90, 0x6e51, 0xbdb, 0x1, 0x1);
        gbc.writeMem(0x2b6e, { 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd470, gbc.sp());
        EXPECT(0x2b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01DD
        gbc.setState(0x226d, 0x9ace, 0x8b40, 0x92dd, 0x2a64, 0x688, 0x0, 0x0);
        gbc.writeMem(0x226d, { 0xb9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9ace, gbc.sp());
        EXPECT(0x226e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01DE
        gbc.setState(0xcd1e, 0xbced, 0xf5e0, 0x1ae, 0x3e87, 0x940f, 0x1, 0x1);
        gbc.writeMem(0xcd1e, { 0xb9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbced, gbc.sp());
        EXPECT(0xcd1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcd1e));
        // B9 01DF
        gbc.setState(0x5ae1, 0x72b2, 0x6a90, 0x86e8, 0xb854, 0xc800, 0x1, 0x0);
        gbc.writeMem(0x5ae1, { 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x72b2, gbc.sp());
        EXPECT(0x5ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01E0
        gbc.setState(0x2faf, 0x9ceb, 0x8a00, 0x5f09, 0x4004, 0xde80, 0x0, 0x0);
        gbc.writeMem(0x2faf, { 0xb9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9ceb, gbc.sp());
        EXPECT(0x2fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01E2
        gbc.setState(0xceca, 0xa9a4, 0x62a0, 0xcae2, 0x4ee, 0x40c9, 0x0, 0x1);
        gbc.writeMem(0xceca, { 0xb9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa9a4, gbc.sp());
        EXPECT(0xcecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xceca));
        // B9 01E3
        gbc.setState(0xd62d, 0x2bc2, 0xd530, 0x225e, 0x22ca, 0x2ef1, 0x0, 0x0);
        gbc.writeMem(0xd62d, { 0xb9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2bc2, gbc.sp());
        EXPECT(0xd62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd62d));
        // B9 01E5
        gbc.setState(0x81a8, 0xa593, 0xa8a0, 0xfb66, 0x1ed7, 0x58f9, 0x1, 0x0);
        gbc.writeMem(0x81a8, { 0xb9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa593, gbc.sp());
        EXPECT(0x81a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x81a8));
        // B9 01E6
        gbc.setState(0x83d6, 0x585a, 0x9d30, 0xf12e, 0x3fc4, 0xd09c, 0x0, 0x1);
        gbc.writeMem(0x83d6, { 0xb9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x585a, gbc.sp());
        EXPECT(0x83d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x83d6));
        // B9 01E7
        gbc.setState(0x3c2, 0x8f91, 0x3880, 0x6f7d, 0x9c12, 0x6b74, 0x0, 0x1);
        gbc.writeMem(0x3c2, { 0xb9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8f91, gbc.sp());
        EXPECT(0x3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01E8
        gbc.setState(0x6dbb, 0xa634, 0xad80, 0x4acb, 0x9a13, 0xd389, 0x0, 0x0);
        gbc.writeMem(0x6dbb, { 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa634, gbc.sp());
        EXPECT(0x6dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01E9
        gbc.setState(0x8816, 0xac69, 0xc070, 0xc3ae, 0x1380, 0x2d62, 0x1, 0x1);
        gbc.writeMem(0x8816, { 0xb9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xac69, gbc.sp());
        EXPECT(0x8817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8816));
        // B9 01EA
        gbc.setState(0x4bba, 0xf87d, 0xca60, 0x6ed7, 0x5956, 0x70df, 0x0, 0x0);
        gbc.writeMem(0x4bba, { 0xb9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf87d, gbc.sp());
        EXPECT(0x4bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01EB
        gbc.setState(0x3ea8, 0x45c, 0x1ba0, 0x8db3, 0x36d3, 0x1c6d, 0x0, 0x0);
        gbc.writeMem(0x3ea8, { 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x45c, gbc.sp());
        EXPECT(0x3ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01EC
        gbc.setState(0x462, 0xc2a4, 0x4150, 0xbf08, 0x488d, 0x1b87, 0x0, 0x0);
        gbc.writeMem(0x462, { 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc2a4, gbc.sp());
        EXPECT(0x463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01ED
        gbc.setState(0x84b2, 0x2b73, 0x5430, 0x70d2, 0x369f, 0xab84, 0x0, 0x1);
        gbc.writeMem(0x84b2, { 0xb9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2b73, gbc.sp());
        EXPECT(0x84b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x84b2));
        // B9 01EE
        gbc.setState(0x7c9e, 0xb879, 0x9c90, 0x48d4, 0xc857, 0x1d2d, 0x0, 0x1);
        gbc.writeMem(0x7c9e, { 0xb9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb879, gbc.sp());
        EXPECT(0x7c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01EF
        gbc.setState(0x6189, 0x379c, 0x49b0, 0x503a, 0xa1b8, 0x2567, 0x0, 0x0);
        gbc.writeMem(0x6189, { 0xb9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x379c, gbc.sp());
        EXPECT(0x618a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01F0
        gbc.setState(0x6788, 0xf88f, 0x3300, 0x2972, 0xa275, 0xe362, 0x0, 0x0);
        gbc.writeMem(0x6788, { 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf88f, gbc.sp());
        EXPECT(0x6789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01F1
        gbc.setState(0x2a54, 0x9b5a, 0x36a0, 0x312b, 0x335d, 0xdec, 0x1, 0x0);
        gbc.writeMem(0x2a54, { 0xb9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9b5a, gbc.sp());
        EXPECT(0x2a55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01F2
        gbc.setState(0xbe44, 0xda13, 0x7080, 0x778c, 0xaa84, 0xde02, 0x1, 0x1);
        gbc.writeMem(0xbe44, { 0xb9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xda13, gbc.sp());
        EXPECT(0xbe45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbe44));
        // B9 01F3
        gbc.setState(0xcf5b, 0x3c5b, 0x7b10, 0xe751, 0xa008, 0x5082, 0x0, 0x1);
        gbc.writeMem(0xcf5b, { 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3c5b, gbc.sp());
        EXPECT(0xcf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcf5b));
        // B9 01F5
        gbc.setState(0x6c8d, 0x7a63, 0x45b0, 0x9d4c, 0xac05, 0x2a78, 0x0, 0x1);
        gbc.writeMem(0x6c8d, { 0xb9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7a63, gbc.sp());
        EXPECT(0x6c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 01F6
        gbc.setState(0x81df, 0x959d, 0x5c0, 0xae47, 0x7fd4, 0x8046, 0x0, 0x0);
        gbc.writeMem(0x81df, { 0xb9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x959d, gbc.sp());
        EXPECT(0x81e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x81df));
        // B9 01F7
        gbc.setState(0x9fe8, 0xa9c2, 0x94d0, 0x7fa5, 0xa5dc, 0xed85, 0x1, 0x0);
        gbc.writeMem(0x9fe8, { 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa9c2, gbc.sp());
        EXPECT(0x9fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9fe8));
        // B9 01F8
        gbc.setState(0x97a4, 0xafec, 0x6fe0, 0x605a, 0x57c2, 0x1f9b, 0x0, 0x0);
        gbc.writeMem(0x97a4, { 0xb9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xafec, gbc.sp());
        EXPECT(0x97a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x97a4));
        // B9 01F9
        gbc.setState(0x8edd, 0x1a8b, 0x3e40, 0x22b0, 0x6193, 0x7ef3, 0x1, 0x0);
        gbc.writeMem(0x8edd, { 0xb9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1a8b, gbc.sp());
        EXPECT(0x8ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8edd));
        // B9 01FA
        gbc.setState(0xd9da, 0x57f5, 0x2080, 0x68e, 0x7fa3, 0x7142, 0x0, 0x0);
        gbc.writeMem(0xd9da, { 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x57f5, gbc.sp());
        EXPECT(0xd9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd9da));
        // B9 01FB
        gbc.setState(0x40f7, 0x3319, 0xe4f0, 0x8e5d, 0x183a, 0xf403, 0x1, 0x1);
        gbc.writeMem(0x40f7, { 0xb9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3319, gbc.sp());
        EXPECT(0x40f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01FC
        gbc.setState(0x1f11, 0xdc1f, 0x3320, 0xde21, 0x4fd3, 0x8d4b, 0x1, 0x0);
        gbc.writeMem(0x1f11, { 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdc1f, gbc.sp());
        EXPECT(0x1f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 01FE
        gbc.setState(0xa3ed, 0xdc1a, 0x45f0, 0x938, 0xf574, 0xb9ad, 0x0, 0x1);
        gbc.writeMem(0xa3ed, { 0xb9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdc1a, gbc.sp());
        EXPECT(0xa3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa3ed));
        // B9 01FF
        gbc.setState(0xeb3b, 0x868a, 0xef40, 0xb0b9, 0x446a, 0x650e, 0x1, 0x0);
        gbc.writeMem(0xeb3b, { 0xb9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x868a, gbc.sp());
        EXPECT(0xeb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xeb3b));
        // B9 0200
        gbc.setState(0x3443, 0x32c7, 0xe990, 0x6d2b, 0x9a7b, 0x48c3, 0x1, 0x0);
        gbc.writeMem(0x3443, { 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x32c7, gbc.sp());
        EXPECT(0x3444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0201
        gbc.setState(0xceb6, 0xd612, 0xcd30, 0xffdf, 0xd031, 0xeaf8, 0x0, 0x1);
        gbc.writeMem(0xceb6, { 0xb9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd612, gbc.sp());
        EXPECT(0xceb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xceb6));
        // B9 0202
        gbc.setState(0xbac4, 0xa410, 0xaad0, 0xdb2d, 0x97e2, 0xc0f0, 0x0, 0x1);
        gbc.writeMem(0xbac4, { 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa410, gbc.sp());
        EXPECT(0xbac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbac4));
        // B9 0203
        gbc.setState(0x6831, 0x26fb, 0x4670, 0x9091, 0xed53, 0x5586, 0x0, 0x0);
        gbc.writeMem(0x6831, { 0xb9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x26fb, gbc.sp());
        EXPECT(0x6832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0204
        gbc.setState(0x353b, 0x5e8c, 0xde30, 0x14d9, 0x3ef3, 0xe4db, 0x1, 0x0);
        gbc.writeMem(0x353b, { 0xb9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5e8c, gbc.sp());
        EXPECT(0x353c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0205
        gbc.setState(0x930b, 0x1478, 0x1960, 0xab63, 0xc483, 0xdd16, 0x1, 0x0);
        gbc.writeMem(0x930b, { 0xb9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1478, gbc.sp());
        EXPECT(0x930c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x930b));
        // B9 0206
        gbc.setState(0x7d50, 0x91ab, 0xf6f0, 0xe431, 0x4110, 0xbdbc, 0x1, 0x1);
        gbc.writeMem(0x7d50, { 0xb9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x91ab, gbc.sp());
        EXPECT(0x7d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0207
        gbc.setState(0x4af5, 0x58a2, 0x5860, 0x8525, 0x38dd, 0xecb2, 0x1, 0x0);
        gbc.writeMem(0x4af5, { 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x58a2, gbc.sp());
        EXPECT(0x4af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0208
        gbc.setState(0x6356, 0xc0a5, 0x6ac0, 0xffb1, 0xdc4a, 0xf73c, 0x1, 0x0);
        gbc.writeMem(0x6356, { 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc0a5, gbc.sp());
        EXPECT(0x6357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0209
        gbc.setState(0x83a9, 0xe601, 0x80b0, 0xb2ac, 0x988, 0xad7, 0x1, 0x1);
        gbc.writeMem(0x83a9, { 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe601, gbc.sp());
        EXPECT(0x83aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x83a9));
        // B9 020A
        gbc.setState(0xd486, 0x45c8, 0x8380, 0xe42c, 0xb6d8, 0x4162, 0x1, 0x1);
        gbc.writeMem(0xd486, { 0xb9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x45c8, gbc.sp());
        EXPECT(0xd487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd486));
        // B9 020B
        gbc.setState(0x6ddf, 0x97de, 0x7e60, 0xef92, 0xd8fa, 0x65be, 0x1, 0x1);
        gbc.writeMem(0x6ddf, { 0xb9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x97de, gbc.sp());
        EXPECT(0x6de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 020C
        gbc.setState(0x9ee5, 0x314d, 0xc1e0, 0x3d5, 0x3f9a, 0xea21, 0x1, 0x0);
        gbc.writeMem(0x9ee5, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x314d, gbc.sp());
        EXPECT(0x9ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9ee5));
        // B9 020D
        gbc.setState(0x6c4c, 0x659, 0x7fa0, 0x98ed, 0x4c4a, 0xa1be, 0x1, 0x0);
        gbc.writeMem(0x6c4c, { 0xb9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x659, gbc.sp());
        EXPECT(0x6c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 020E
        gbc.setState(0x4e6b, 0xb5ca, 0xb8d0, 0xe263, 0xc2f, 0x1792, 0x1, 0x0);
        gbc.writeMem(0x4e6b, { 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb5ca, gbc.sp());
        EXPECT(0x4e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 020F
        gbc.setState(0x7d21, 0x951f, 0x5050, 0x6bf0, 0x4d2e, 0x1b6, 0x0, 0x0);
        gbc.writeMem(0x7d21, { 0xb9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x951f, gbc.sp());
        EXPECT(0x7d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0210
        gbc.setState(0x4dcf, 0x574a, 0x5670, 0x96ee, 0x1fa, 0x5f20, 0x0, 0x1);
        gbc.writeMem(0x4dcf, { 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x574a, gbc.sp());
        EXPECT(0x4dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0211
        gbc.setState(0xd91, 0x3a38, 0xdf90, 0x80a7, 0xe853, 0x7f4c, 0x1, 0x1);
        gbc.writeMem(0xd91, { 0xb9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3a38, gbc.sp());
        EXPECT(0xd92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0212
        gbc.setState(0x816, 0x3c33, 0xd0c0, 0xd7ae, 0xd1b1, 0x9102, 0x0, 0x0);
        gbc.writeMem(0x816, { 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3c33, gbc.sp());
        EXPECT(0x817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0213
        gbc.setState(0xd699, 0x917, 0xec10, 0xceee, 0x5016, 0x5e83, 0x0, 0x1);
        gbc.writeMem(0xd699, { 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x917, gbc.sp());
        EXPECT(0xd69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd699));
        // B9 0214
        gbc.setState(0xbf0f, 0xcaa7, 0xdfd0, 0x8b23, 0xcaef, 0xc067, 0x1, 0x1);
        gbc.writeMem(0xbf0f, { 0xb9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcaa7, gbc.sp());
        EXPECT(0xbf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbf0f));
        // B9 0216
        gbc.setState(0x3230, 0xb9a4, 0xa0a0, 0x3ec2, 0x210f, 0xd2f0, 0x1, 0x0);
        gbc.writeMem(0x3230, { 0xb9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb9a4, gbc.sp());
        EXPECT(0x3231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0217
        gbc.setState(0x86dc, 0xa0b2, 0x67c0, 0x3816, 0x4c17, 0x7620, 0x1, 0x1);
        gbc.writeMem(0x86dc, { 0xb9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa0b2, gbc.sp());
        EXPECT(0x86dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x86dc));
        // B9 0218
        gbc.setState(0xc23b, 0x20af, 0xb2a0, 0xb03e, 0x9b7b, 0xebb9, 0x0, 0x1);
        gbc.writeMem(0xc23b, { 0xb9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x20af, gbc.sp());
        EXPECT(0xc23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc23b));
        // B9 0219
        gbc.setState(0x3774, 0xe50, 0x30a0, 0x4e2b, 0xa190, 0x320a, 0x1, 0x1);
        gbc.writeMem(0x3774, { 0xb9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe50, gbc.sp());
        EXPECT(0x3775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 021A
        gbc.setState(0xb0ed, 0x447d, 0xf3d0, 0x383c, 0x548d, 0xff1b, 0x1, 0x0);
        gbc.writeMem(0xb0ed, { 0xb9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x447d, gbc.sp());
        EXPECT(0xb0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb0ed));
        // B9 021B
        gbc.setState(0x8ce2, 0xfe70, 0x9150, 0xfa1c, 0x1eb9, 0xce36, 0x1, 0x1);
        gbc.writeMem(0x8ce2, { 0xb9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfe70, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8ce2));
        // B9 021C
        gbc.setState(0x4ac8, 0xf27e, 0xa630, 0x453c, 0x186b, 0x2302, 0x0, 0x0);
        gbc.writeMem(0x4ac8, { 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf27e, gbc.sp());
        EXPECT(0x4ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 021D
        gbc.setState(0xc4af, 0x327b, 0x5000, 0x7061, 0x65dc, 0xb0e1, 0x1, 0x1);
        gbc.writeMem(0xc4af, { 0xb9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x327b, gbc.sp());
        EXPECT(0xc4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc4af));
        // B9 021F
        gbc.setState(0x6cb5, 0xaa7f, 0x1590, 0x34b3, 0xc263, 0x80c5, 0x0, 0x0);
        gbc.writeMem(0x6cb5, { 0xb9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xaa7f, gbc.sp());
        EXPECT(0x6cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0220
        gbc.setState(0xbdd7, 0xa154, 0xf420, 0xcd75, 0x44f1, 0x2864, 0x1, 0x0);
        gbc.writeMem(0xbdd7, { 0xb9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa154, gbc.sp());
        EXPECT(0xbdd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbdd7));
        // B9 0221
        gbc.setState(0x8084, 0x6dca, 0xc720, 0x5744, 0xbd9c, 0xd7de, 0x0, 0x1);
        gbc.writeMem(0x8084, { 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6dca, gbc.sp());
        EXPECT(0x8085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8084));
        // B9 0222
        gbc.setState(0x518a, 0xb878, 0xde80, 0xa705, 0x51b5, 0x3843, 0x0, 0x1);
        gbc.writeMem(0x518a, { 0xb9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb878, gbc.sp());
        EXPECT(0x518b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0223
        gbc.setState(0x6984, 0x95a3, 0x4ee0, 0x7320, 0x59d, 0xf51f, 0x0, 0x1);
        gbc.writeMem(0x6984, { 0xb9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x95a3, gbc.sp());
        EXPECT(0x6985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0225
        gbc.setState(0x995e, 0x7986, 0x8870, 0x89db, 0x8e4, 0x6540, 0x1, 0x1);
        gbc.writeMem(0x995e, { 0xb9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7986, gbc.sp());
        EXPECT(0x995f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x995e));
        // B9 0226
        gbc.setState(0x556f, 0x6fc5, 0x3130, 0x8657, 0x1dec, 0x481b, 0x0, 0x0);
        gbc.writeMem(0x556f, { 0xb9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6fc5, gbc.sp());
        EXPECT(0x5570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0227
        gbc.setState(0xd24e, 0xdb86, 0xc810, 0x4420, 0xd101, 0x7d55, 0x0, 0x1);
        gbc.writeMem(0xd24e, { 0xb9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdb86, gbc.sp());
        EXPECT(0xd24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd24e));
        // B9 0228
        gbc.setState(0xe475, 0x1c67, 0x58b0, 0xd11a, 0x4dd8, 0xae19, 0x0, 0x1);
        gbc.writeMem(0xe475, { 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1c67, gbc.sp());
        EXPECT(0xe476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe475));
        // B9 0229
        gbc.setState(0x4511, 0xbe64, 0x3870, 0x4271, 0xfd58, 0x5c77, 0x0, 0x1);
        gbc.writeMem(0x4511, { 0xb9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbe64, gbc.sp());
        EXPECT(0x4512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 022A
        gbc.setState(0xa625, 0xbb97, 0x9840, 0xb5b2, 0x5b9a, 0x6643, 0x0, 0x0);
        gbc.writeMem(0xa625, { 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbb97, gbc.sp());
        EXPECT(0xa626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa625));
        // B9 022B
        gbc.setState(0xcb80, 0xaba7, 0xe700, 0xa318, 0xc253, 0x45b8, 0x0, 0x0);
        gbc.writeMem(0xcb80, { 0xb9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaba7, gbc.sp());
        EXPECT(0xcb81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcb80));
        // B9 022C
        gbc.setState(0x1031, 0xb315, 0xf690, 0x396, 0x24b9, 0xa409, 0x1, 0x0);
        gbc.writeMem(0x1031, { 0xb9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb315, gbc.sp());
        EXPECT(0x1032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 022D
        gbc.setState(0xa808, 0xd5ff, 0x57e0, 0x1e1e, 0xc446, 0x7302, 0x0, 0x0);
        gbc.writeMem(0xa808, { 0xb9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd5ff, gbc.sp());
        EXPECT(0xa809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa808));
        // B9 022E
        gbc.setState(0xe567, 0xf620, 0x7990, 0xb542, 0x5a5b, 0x1b72, 0x1, 0x0);
        gbc.writeMem(0xe567, { 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf620, gbc.sp());
        EXPECT(0xe568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe567));
        // B9 022F
        gbc.setState(0xe1a9, 0x1341, 0xc720, 0x731c, 0xc4d0, 0xdf71, 0x0, 0x1);
        gbc.writeMem(0xe1a9, { 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1341, gbc.sp());
        EXPECT(0xe1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe1a9));
        // B9 0230
        gbc.setState(0x8d6d, 0xec3e, 0x64e0, 0xc557, 0x45b, 0xcdde, 0x1, 0x1);
        gbc.writeMem(0x8d6d, { 0xb9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xec3e, gbc.sp());
        EXPECT(0x8d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8d6d));
        // B9 0231
        gbc.setState(0x7908, 0xae9, 0x350, 0x5616, 0x822e, 0x621e, 0x1, 0x0);
        gbc.writeMem(0x7908, { 0xb9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xae9, gbc.sp());
        EXPECT(0x7909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0232
        gbc.setState(0x23a0, 0x38ce, 0x49d0, 0x4963, 0xac42, 0xba71, 0x1, 0x1);
        gbc.writeMem(0x23a0, { 0xb9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x38ce, gbc.sp());
        EXPECT(0x23a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0233
        gbc.setState(0x1868, 0xbf37, 0x2c00, 0x8d53, 0x8888, 0xaba1, 0x1, 0x0);
        gbc.writeMem(0x1868, { 0xb9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbf37, gbc.sp());
        EXPECT(0x1869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0234
        gbc.setState(0x5124, 0xe76a, 0x2500, 0x2382, 0x57ae, 0xa5ce, 0x1, 0x1);
        gbc.writeMem(0x5124, { 0xb9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe76a, gbc.sp());
        EXPECT(0x5125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0235
        gbc.setState(0xefad, 0x644c, 0xdbd0, 0x8d7, 0x95c4, 0x8889, 0x0, 0x0);
        gbc.writeMem(0xefad, { 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x644c, gbc.sp());
        EXPECT(0xefae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xefad));
        // B9 0236
        gbc.setState(0x6b96, 0x5b13, 0x6e00, 0x7273, 0x7be9, 0x5a64, 0x0, 0x0);
        gbc.writeMem(0x6b96, { 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5b13, gbc.sp());
        EXPECT(0x6b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0238
        gbc.setState(0xc9f2, 0x8ecf, 0x56d0, 0xe4b0, 0x87b4, 0xe76b, 0x0, 0x1);
        gbc.writeMem(0xc9f2, { 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8ecf, gbc.sp());
        EXPECT(0xc9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc9f2));
        // B9 0239
        gbc.setState(0x2ef1, 0xb774, 0x4ab0, 0x52eb, 0xd721, 0xab5a, 0x0, 0x0);
        gbc.writeMem(0x2ef1, { 0xb9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb774, gbc.sp());
        EXPECT(0x2ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 023A
        gbc.setState(0xcbab, 0xac43, 0x8910, 0x1d97, 0x5692, 0xa3a, 0x0, 0x1);
        gbc.writeMem(0xcbab, { 0xb9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xac43, gbc.sp());
        EXPECT(0xcbac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcbab));
        // B9 023B
        gbc.setState(0xbb5, 0xebb7, 0x2c0, 0x54d4, 0x4590, 0x50fc, 0x1, 0x1);
        gbc.writeMem(0xbb5, { 0xb9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xebb7, gbc.sp());
        EXPECT(0xbb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 023C
        gbc.setState(0x37c7, 0xffb1, 0xb0, 0xf744, 0xc67e, 0x625d, 0x1, 0x1);
        gbc.writeMem(0x37c7, { 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xffb1, gbc.sp());
        EXPECT(0x37c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 023D
        gbc.setState(0x934a, 0xc942, 0x4ce0, 0x7642, 0xf7a5, 0x4d75, 0x0, 0x0);
        gbc.writeMem(0x934a, { 0xb9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc942, gbc.sp());
        EXPECT(0x934b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x934a));
        // B9 023E
        gbc.setState(0x2375, 0x77bc, 0x6710, 0x75cd, 0x2017, 0xf6bf, 0x1, 0x0);
        gbc.writeMem(0x2375, { 0xb9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x77bc, gbc.sp());
        EXPECT(0x2376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 023F
        gbc.setState(0x7174, 0x310a, 0x1650, 0x3fa7, 0x8614, 0xfa62, 0x1, 0x0);
        gbc.writeMem(0x7174, { 0xb9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x310a, gbc.sp());
        EXPECT(0x7175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0240
        gbc.setState(0x57a8, 0xf296, 0x5900, 0xd698, 0xa06e, 0x3959, 0x0, 0x1);
        gbc.writeMem(0x57a8, { 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf296, gbc.sp());
        EXPECT(0x57a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0241
        gbc.setState(0xb01a, 0x9e49, 0x8040, 0xa3f2, 0x31c7, 0x6017, 0x1, 0x1);
        gbc.writeMem(0xb01a, { 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9e49, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb01a));
        // B9 0242
        gbc.setState(0x147a, 0xa6f6, 0xc9d0, 0x5cbe, 0x6c71, 0x9bc9, 0x0, 0x1);
        gbc.writeMem(0x147a, { 0xb9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa6f6, gbc.sp());
        EXPECT(0x147b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0243
        gbc.setState(0xe63a, 0x9c38, 0x9780, 0x59be, 0xf79b, 0x6182, 0x1, 0x1);
        gbc.writeMem(0xe63a, { 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9c38, gbc.sp());
        EXPECT(0xe63b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe63a));
        // B9 0244
        gbc.setState(0x4592, 0xcc08, 0x3930, 0x1434, 0x255f, 0xb756, 0x0, 0x1);
        gbc.writeMem(0x4592, { 0xb9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcc08, gbc.sp());
        EXPECT(0x4593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0245
        gbc.setState(0x498f, 0x4d1d, 0xe4e0, 0x184f, 0x1bb, 0xbbda, 0x0, 0x0);
        gbc.writeMem(0x498f, { 0xb9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4d1d, gbc.sp());
        EXPECT(0x4990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0247
        gbc.setState(0x11fc, 0xb141, 0xf0d0, 0x8224, 0xde1f, 0xa671, 0x1, 0x1);
        gbc.writeMem(0x11fc, { 0xb9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb141, gbc.sp());
        EXPECT(0x11fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0248
        gbc.setState(0x8c80, 0x89fd, 0x3770, 0x9aac, 0x9692, 0x1fe2, 0x1, 0x0);
        gbc.writeMem(0x8c80, { 0xb9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x89fd, gbc.sp());
        EXPECT(0x8c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8c80));
        // B9 0249
        gbc.setState(0x92d3, 0x5f5, 0xa4a0, 0x960, 0x4047, 0x2933, 0x1, 0x0);
        gbc.writeMem(0x92d3, { 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5f5, gbc.sp());
        EXPECT(0x92d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x92d3));
        // B9 024A
        gbc.setState(0x3bc0, 0xed36, 0x2730, 0x12bf, 0x234c, 0x7bfd, 0x1, 0x0);
        gbc.writeMem(0x3bc0, { 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xed36, gbc.sp());
        EXPECT(0x3bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 024B
        gbc.setState(0x3ea7, 0x1143, 0xdf00, 0xa601, 0x3b1c, 0x6397, 0x1, 0x0);
        gbc.writeMem(0x3ea7, { 0xb9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1143, gbc.sp());
        EXPECT(0x3ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 024C
        gbc.setState(0xbaa, 0x3259, 0x68d0, 0x10f, 0x94fb, 0xc7be, 0x0, 0x1);
        gbc.writeMem(0xbaa, { 0xb9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3259, gbc.sp());
        EXPECT(0xbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 024D
        gbc.setState(0x2c38, 0x6838, 0x7aa0, 0x1c28, 0xe7c1, 0x3a09, 0x1, 0x0);
        gbc.writeMem(0x2c38, { 0xb9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6838, gbc.sp());
        EXPECT(0x2c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 024E
        gbc.setState(0x4c98, 0x6322, 0xb820, 0x108a, 0x1a3e, 0xd7ec, 0x0, 0x1);
        gbc.writeMem(0x4c98, { 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6322, gbc.sp());
        EXPECT(0x4c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 024F
        gbc.setState(0x9a3b, 0x12ff, 0xe6e0, 0x8eed, 0xe5, 0xf6f7, 0x0, 0x0);
        gbc.writeMem(0x9a3b, { 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x12ff, gbc.sp());
        EXPECT(0x9a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a3b));
        // B9 0250
        gbc.setState(0x8550, 0x65e4, 0x8250, 0xf340, 0x9d8e, 0x81d7, 0x1, 0x0);
        gbc.writeMem(0x8550, { 0xb9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x65e4, gbc.sp());
        EXPECT(0x8551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8550));
        // B9 0251
        gbc.setState(0x4246, 0xb5c, 0x3d00, 0xe3b5, 0xb6d8, 0x21eb, 0x0, 0x0);
        gbc.writeMem(0x4246, { 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb5c, gbc.sp());
        EXPECT(0x4247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0252
        gbc.setState(0xd17a, 0x550d, 0x6c0, 0x5327, 0x3b0d, 0x979f, 0x0, 0x1);
        gbc.writeMem(0xd17a, { 0xb9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x550d, gbc.sp());
        EXPECT(0xd17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd17a));
        // B9 0253
        gbc.setState(0xa496, 0x58d5, 0x8b90, 0xf53d, 0x56f2, 0x1bfa, 0x0, 0x1);
        gbc.writeMem(0xa496, { 0xb9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x58d5, gbc.sp());
        EXPECT(0xa497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa496));
        // B9 0254
        gbc.setState(0x1bff, 0x3ca5, 0x5530, 0x5099, 0x1260, 0xfa6b, 0x0, 0x1);
        gbc.writeMem(0x1bff, { 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3ca5, gbc.sp());
        EXPECT(0x1c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0255
        gbc.setState(0x3580, 0xa4d8, 0xa330, 0xa66e, 0x3d95, 0xf1bd, 0x1, 0x1);
        gbc.writeMem(0x3580, { 0xb9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa4d8, gbc.sp());
        EXPECT(0x3581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0256
        gbc.setState(0x50f5, 0x1267, 0xa290, 0x45a8, 0xdf11, 0xb4ba, 0x1, 0x1);
        gbc.writeMem(0x50f5, { 0xb9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1267, gbc.sp());
        EXPECT(0x50f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0257
        gbc.setState(0x7fac, 0x948a, 0xf1b0, 0x475, 0xd5bb, 0xf9f1, 0x0, 0x1);
        gbc.writeMem(0x7fac, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x948a, gbc.sp());
        EXPECT(0x7fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0258
        gbc.setState(0x6fd4, 0x6cd0, 0x9210, 0xf5e8, 0xc3bc, 0xaa43, 0x1, 0x0);
        gbc.writeMem(0x6fd4, { 0xb9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6cd0, gbc.sp());
        EXPECT(0x6fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0259
        gbc.setState(0x16ac, 0xefd3, 0x5e80, 0x804a, 0x5df2, 0x2ac1, 0x1, 0x0);
        gbc.writeMem(0x16ac, { 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xefd3, gbc.sp());
        EXPECT(0x16ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 025A
        gbc.setState(0x417c, 0x9e21, 0xb2b0, 0x9130, 0xea5c, 0xc336, 0x1, 0x0);
        gbc.writeMem(0x417c, { 0xb9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9e21, gbc.sp());
        EXPECT(0x417d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 025B
        gbc.setState(0x66f2, 0xb4af, 0x6cc0, 0x3f03, 0xc51a, 0xdd32, 0x0, 0x0);
        gbc.writeMem(0x66f2, { 0xb9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb4af, gbc.sp());
        EXPECT(0x66f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 025C
        gbc.setState(0xe781, 0x8b42, 0x46e0, 0xc099, 0x2ad8, 0xad27, 0x0, 0x0);
        gbc.writeMem(0xe781, { 0xb9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8b42, gbc.sp());
        EXPECT(0xe782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe781));
        // B9 025D
        gbc.setState(0x5420, 0xa8b8, 0x9e10, 0xf284, 0x861b, 0x9717, 0x1, 0x0);
        gbc.writeMem(0x5420, { 0xb9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa8b8, gbc.sp());
        EXPECT(0x5421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 025E
        gbc.setState(0x1d7c, 0x9004, 0x41b0, 0x5776, 0x8612, 0x303f, 0x1, 0x0);
        gbc.writeMem(0x1d7c, { 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9004, gbc.sp());
        EXPECT(0x1d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 025F
        gbc.setState(0x79f8, 0xf8da, 0x6430, 0xcf4e, 0x84c4, 0x6ca1, 0x0, 0x1);
        gbc.writeMem(0x79f8, { 0xb9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf8da, gbc.sp());
        EXPECT(0x79f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0260
        gbc.setState(0xde79, 0xd945, 0x6b30, 0x51a1, 0xa8be, 0xc597, 0x0, 0x1);
        gbc.writeMem(0xde79, { 0xb9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd945, gbc.sp());
        EXPECT(0xde7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xde79));
        // B9 0261
        gbc.setState(0x43a2, 0xd4b, 0x6420, 0x5cee, 0x8872, 0xbb31, 0x1, 0x1);
        gbc.writeMem(0x43a2, { 0xb9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd4b, gbc.sp());
        EXPECT(0x43a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0262
        gbc.setState(0xb8b1, 0x39c2, 0x34e0, 0x69ab, 0x5c8c, 0x8165, 0x1, 0x0);
        gbc.writeMem(0xb8b1, { 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x39c2, gbc.sp());
        EXPECT(0xb8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb8b1));
        // B9 0263
        gbc.setState(0x2df2, 0xcf5f, 0xfd30, 0xc725, 0x9576, 0x4aa, 0x0, 0x1);
        gbc.writeMem(0x2df2, { 0xb9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcf5f, gbc.sp());
        EXPECT(0x2df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0264
        gbc.setState(0xc4df, 0x6602, 0xe9d0, 0x9920, 0x6477, 0x731f, 0x1, 0x1);
        gbc.writeMem(0xc4df, { 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6602, gbc.sp());
        EXPECT(0xc4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc4df));
        // B9 0265
        gbc.setState(0x2be4, 0x775a, 0xfbc0, 0x1f14, 0xb308, 0x912f, 0x1, 0x0);
        gbc.writeMem(0x2be4, { 0xb9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x775a, gbc.sp());
        EXPECT(0x2be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0266
        gbc.setState(0xa4ba, 0x4187, 0x2770, 0x5e5b, 0xe96a, 0x83b4, 0x1, 0x0);
        gbc.writeMem(0xa4ba, { 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4187, gbc.sp());
        EXPECT(0xa4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa4ba));
        // B9 0267
        gbc.setState(0x9891, 0xb0f2, 0x9fb0, 0xc10e, 0xffba, 0xeee4, 0x1, 0x0);
        gbc.writeMem(0x9891, { 0xb9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb0f2, gbc.sp());
        EXPECT(0x9892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9891));
        // B9 0268
        gbc.setState(0x189f, 0x9b, 0xe680, 0x663f, 0xedc5, 0x8a45, 0x1, 0x1);
        gbc.writeMem(0x189f, { 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9b, gbc.sp());
        EXPECT(0x18a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0269
        gbc.setState(0x5f64, 0x343c, 0xc470, 0xb792, 0x98a8, 0x90ab, 0x1, 0x1);
        gbc.writeMem(0x5f64, { 0xb9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x343c, gbc.sp());
        EXPECT(0x5f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 026A
        gbc.setState(0x388e, 0xb875, 0xc250, 0xd6c3, 0x4512, 0x5fbc, 0x1, 0x0);
        gbc.writeMem(0x388e, { 0xb9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb875, gbc.sp());
        EXPECT(0x388f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 026B
        gbc.setState(0xa328, 0x3ce0, 0x5a0, 0x5d2, 0x415e, 0x256d, 0x1, 0x0);
        gbc.writeMem(0xa328, { 0xb9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3ce0, gbc.sp());
        EXPECT(0xa329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa328));
        // B9 026C
        gbc.setState(0xd5f4, 0xf905, 0xec60, 0xcae2, 0x8811, 0x231a, 0x1, 0x0);
        gbc.writeMem(0xd5f4, { 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf905, gbc.sp());
        EXPECT(0xd5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd5f4));
        // B9 026D
        gbc.setState(0xeb2e, 0x32e8, 0xa570, 0xd7de, 0x567b, 0xcab7, 0x1, 0x1);
        gbc.writeMem(0xeb2e, { 0xb9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x32e8, gbc.sp());
        EXPECT(0xeb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xeb2e));
        // B9 026E
        gbc.setState(0x6096, 0x5a36, 0x5b50, 0x4488, 0x74e0, 0x8f70, 0x1, 0x1);
        gbc.writeMem(0x6096, { 0xb9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5a36, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 026F
        gbc.setState(0x48ea, 0x35e2, 0xf330, 0x68bd, 0x30f2, 0x1273, 0x1, 0x0);
        gbc.writeMem(0x48ea, { 0xb9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x35e2, gbc.sp());
        EXPECT(0x48eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0270
        gbc.setState(0xc1e4, 0x172c, 0x7410, 0x5920, 0x3b37, 0xb678, 0x0, 0x0);
        gbc.writeMem(0xc1e4, { 0xb9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x172c, gbc.sp());
        EXPECT(0xc1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc1e4));
        // B9 0271
        gbc.setState(0x3b63, 0x27ec, 0xb530, 0x97d1, 0xc270, 0x7574, 0x0, 0x0);
        gbc.writeMem(0x3b63, { 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x27ec, gbc.sp());
        EXPECT(0x3b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0272
        gbc.setState(0x690e, 0xe35d, 0x2870, 0x3e77, 0x34a1, 0x58fa, 0x1, 0x1);
        gbc.writeMem(0x690e, { 0xb9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe35d, gbc.sp());
        EXPECT(0x690f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0273
        gbc.setState(0x3f88, 0xb1c4, 0xfad0, 0x7e05, 0xe05, 0xd207, 0x1, 0x1);
        gbc.writeMem(0x3f88, { 0xb9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0x3f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0274
        gbc.setState(0x2b71, 0x9d23, 0xb1a0, 0xf0d6, 0xcd4c, 0x7ad9, 0x1, 0x1);
        gbc.writeMem(0x2b71, { 0xb9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9d23, gbc.sp());
        EXPECT(0x2b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0275
        gbc.setState(0x225e, 0xf449, 0x4af0, 0x8118, 0x96db, 0xb183, 0x0, 0x1);
        gbc.writeMem(0x225e, { 0xb9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf449, gbc.sp());
        EXPECT(0x225f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0276
        gbc.setState(0xda74, 0xc3a1, 0x9490, 0x4867, 0x7027, 0xd506, 0x1, 0x0);
        gbc.writeMem(0xda74, { 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc3a1, gbc.sp());
        EXPECT(0xda75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xda74));
        // B9 0277
        gbc.setState(0x1dcf, 0x2138, 0xcbc0, 0x93da, 0x5a6c, 0xbd86, 0x0, 0x1);
        gbc.writeMem(0x1dcf, { 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2138, gbc.sp());
        EXPECT(0x1dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0278
        gbc.setState(0xe001, 0x4236, 0x7a90, 0xdb28, 0xaf79, 0xe130, 0x0, 0x1);
        gbc.writeMem(0xe001, { 0xb9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4236, gbc.sp());
        EXPECT(0xe002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe001));
        // B9 0279
        gbc.setState(0xc45b, 0x3b89, 0xeb50, 0x8ccc, 0x7262, 0x9f4c, 0x1, 0x1);
        gbc.writeMem(0xc45b, { 0xb9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3b89, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc45b));
        // B9 027A
        gbc.setState(0x51, 0x2464, 0xfff0, 0xaeab, 0xd891, 0x3403, 0x1, 0x1);
        gbc.writeMem(0x51, { 0xb9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2464, gbc.sp());
        EXPECT(0x52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 027B
        gbc.setState(0x5586, 0x8f14, 0x5400, 0x480e, 0x546e, 0x4549, 0x1, 0x1);
        gbc.writeMem(0x5586, { 0xb9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8f14, gbc.sp());
        EXPECT(0x5587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 027C
        gbc.setState(0x63f8, 0xd134, 0xb1e0, 0xf0ee, 0xcca4, 0xfec6, 0x1, 0x1);
        gbc.writeMem(0x63f8, { 0xb9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd134, gbc.sp());
        EXPECT(0x63f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 027D
        gbc.setState(0xa049, 0x23c3, 0x6650, 0xd297, 0x253, 0xdee3, 0x0, 0x1);
        gbc.writeMem(0xa049, { 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x23c3, gbc.sp());
        EXPECT(0xa04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa049));
        // B9 027E
        gbc.setState(0x9bfa, 0x18fb, 0xfaa0, 0x9d06, 0xdf7b, 0xff47, 0x1, 0x1);
        gbc.writeMem(0x9bfa, { 0xb9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x18fb, gbc.sp());
        EXPECT(0x9bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9bfa));
        // B9 027F
        gbc.setState(0x67a6, 0xb80d, 0x6190, 0xe386, 0x9c03, 0x6bcb, 0x1, 0x0);
        gbc.writeMem(0x67a6, { 0xb9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb80d, gbc.sp());
        EXPECT(0x67a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0280
        gbc.setState(0x3810, 0x1e86, 0x6df0, 0x5407, 0x3490, 0xa55a, 0x0, 0x1);
        gbc.writeMem(0x3810, { 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1e86, gbc.sp());
        EXPECT(0x3811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0281
        gbc.setState(0x69ee, 0x2cef, 0x4f70, 0xa57d, 0x1779, 0x2c86, 0x1, 0x0);
        gbc.writeMem(0x69ee, { 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2cef, gbc.sp());
        EXPECT(0x69ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0282
        gbc.setState(0x3f09, 0x7f3a, 0x92f0, 0x4708, 0x400, 0x7cad, 0x0, 0x0);
        gbc.writeMem(0x3f09, { 0xb9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7f3a, gbc.sp());
        EXPECT(0x3f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0283
        gbc.setState(0x61c7, 0x84d2, 0xf6b0, 0xbad0, 0xeb5a, 0xc944, 0x1, 0x1);
        gbc.writeMem(0x61c7, { 0xb9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x84d2, gbc.sp());
        EXPECT(0x61c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0284
        gbc.setState(0x1958, 0x9177, 0x6070, 0xac9c, 0x6e47, 0x1b5f, 0x1, 0x0);
        gbc.writeMem(0x1958, { 0xb9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9177, gbc.sp());
        EXPECT(0x1959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0285
        gbc.setState(0x48eb, 0xa525, 0x7780, 0x785e, 0x6c6f, 0xdf45, 0x0, 0x1);
        gbc.writeMem(0x48eb, { 0xb9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa525, gbc.sp());
        EXPECT(0x48ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0286
        gbc.setState(0xa2cc, 0xf46e, 0x8400, 0x6a01, 0x428a, 0xded9, 0x0, 0x1);
        gbc.writeMem(0xa2cc, { 0xb9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf46e, gbc.sp());
        EXPECT(0xa2cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa2cc));
        // B9 0287
        gbc.setState(0xb5ec, 0xc6d1, 0x6a60, 0x2fd6, 0xd594, 0x87a2, 0x0, 0x0);
        gbc.writeMem(0xb5ec, { 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc6d1, gbc.sp());
        EXPECT(0xb5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb5ec));
        // B9 0288
        gbc.setState(0x70c2, 0xf895, 0xe140, 0x659, 0x15a6, 0x5a7f, 0x0, 0x0);
        gbc.writeMem(0x70c2, { 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf895, gbc.sp());
        EXPECT(0x70c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0289
        gbc.setState(0x80e4, 0x9973, 0xd390, 0x3922, 0xc2e4, 0xc4e1, 0x1, 0x1);
        gbc.writeMem(0x80e4, { 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9973, gbc.sp());
        EXPECT(0x80e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x80e4));
        // B9 028A
        gbc.setState(0xcd9d, 0x3692, 0xe230, 0x53a5, 0x9a25, 0xe307, 0x1, 0x0);
        gbc.writeMem(0xcd9d, { 0xb9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3692, gbc.sp());
        EXPECT(0xcd9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcd9d));
        // B9 028B
        gbc.setState(0x9b57, 0x7dc, 0x4eb0, 0x6267, 0xeb02, 0xf124, 0x1, 0x0);
        gbc.writeMem(0x9b57, { 0xb9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7dc, gbc.sp());
        EXPECT(0x9b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9b57));
        // B9 028C
        gbc.setState(0x1422, 0x9b1b, 0x490, 0x6721, 0x7fcc, 0x2f4a, 0x0, 0x1);
        gbc.writeMem(0x1422, { 0xb9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9b1b, gbc.sp());
        EXPECT(0x1423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 028D
        gbc.setState(0x89bf, 0x7bbe, 0x540, 0xa997, 0x7b16, 0xb799, 0x0, 0x1);
        gbc.writeMem(0x89bf, { 0xb9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7bbe, gbc.sp());
        EXPECT(0x89c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x89bf));
        // B9 028E
        gbc.setState(0x4858, 0xc860, 0x7dd0, 0x65fc, 0x45a, 0x9297, 0x0, 0x1);
        gbc.writeMem(0x4858, { 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc860, gbc.sp());
        EXPECT(0x4859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 028F
        gbc.setState(0xb1d8, 0xa2b6, 0x1cc0, 0x70bd, 0x8d44, 0x3245, 0x1, 0x0);
        gbc.writeMem(0xb1d8, { 0xb9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa2b6, gbc.sp());
        EXPECT(0xb1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb1d8));
        // B9 0290
        gbc.setState(0x8db4, 0x5965, 0x730, 0x5f1d, 0x48ce, 0x5b74, 0x0, 0x0);
        gbc.writeMem(0x8db4, { 0xb9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5965, gbc.sp());
        EXPECT(0x8db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8db4));
        // B9 0291
        gbc.setState(0xd591, 0x2446, 0x210, 0x5501, 0xa625, 0xfc20, 0x1, 0x0);
        gbc.writeMem(0xd591, { 0xb9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2446, gbc.sp());
        EXPECT(0xd592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd591));
        // B9 0292
        gbc.setState(0x1de7, 0x7820, 0x6b00, 0xd1b9, 0x8eb8, 0x8755, 0x1, 0x1);
        gbc.writeMem(0x1de7, { 0xb9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7820, gbc.sp());
        EXPECT(0x1de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0293
        gbc.setState(0x4a91, 0xeca1, 0xfed0, 0x57b8, 0x8583, 0x53fd, 0x0, 0x1);
        gbc.writeMem(0x4a91, { 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xeca1, gbc.sp());
        EXPECT(0x4a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0294
        gbc.setState(0x8345, 0x98eb, 0xea80, 0xa2d9, 0x9325, 0x9afc, 0x0, 0x1);
        gbc.writeMem(0x8345, { 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x98eb, gbc.sp());
        EXPECT(0x8346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8345));
        // B9 0296
        gbc.setState(0x4942, 0x9179, 0xc6b0, 0x6e26, 0xc02d, 0x3584, 0x0, 0x1);
        gbc.writeMem(0x4942, { 0xb9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9179, gbc.sp());
        EXPECT(0x4943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0297
        gbc.setState(0xed15, 0xf9db, 0x2010, 0x9673, 0x9745, 0x6b40, 0x0, 0x0);
        gbc.writeMem(0xed15, { 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf9db, gbc.sp());
        EXPECT(0xed16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xed15));
        // B9 0298
        gbc.setState(0x99ac, 0x5da0, 0xe210, 0x924, 0xe646, 0xc27, 0x1, 0x1);
        gbc.writeMem(0x99ac, { 0xb9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5da0, gbc.sp());
        EXPECT(0x99ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x99ac));
        // B9 0299
        gbc.setState(0x9993, 0xe3bb, 0x2740, 0x17, 0x6b00, 0xeecb, 0x0, 0x1);
        gbc.writeMem(0x9993, { 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe3bb, gbc.sp());
        EXPECT(0x9994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9993));
        // B9 029B
        gbc.setState(0xa0ae, 0x523e, 0x34c0, 0xb2b6, 0x2689, 0xa090, 0x1, 0x0);
        gbc.writeMem(0xa0ae, { 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0xa0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa0ae));
        // B9 029C
        gbc.setState(0x1050, 0xfb80, 0x4870, 0xc7e4, 0xeef, 0xc9b1, 0x0, 0x1);
        gbc.writeMem(0x1050, { 0xb9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfb80, gbc.sp());
        EXPECT(0x1051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 029D
        gbc.setState(0xe6cd, 0x3af9, 0x1540, 0xca8a, 0x8972, 0xcf24, 0x1, 0x1);
        gbc.writeMem(0xe6cd, { 0xb9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0xe6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe6cd));
        // B9 029E
        gbc.setState(0x526d, 0x96ee, 0x63f0, 0x19ce, 0x3c3e, 0x1d01, 0x0, 0x0);
        gbc.writeMem(0x526d, { 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x96ee, gbc.sp());
        EXPECT(0x526e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 029F
        gbc.setState(0xc122, 0x2bc0, 0xb050, 0x6aff, 0xc0a7, 0xf5a8, 0x0, 0x1);
        gbc.writeMem(0xc122, { 0xb9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2bc0, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc122));
        // B9 02A0
        gbc.setState(0x30c8, 0x91a7, 0x2910, 0x8110, 0x8812, 0x1e89, 0x1, 0x1);
        gbc.writeMem(0x30c8, { 0xb9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x91a7, gbc.sp());
        EXPECT(0x30c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02A1
        gbc.setState(0x5d6b, 0x6ace, 0xd070, 0xccd0, 0xbd, 0x7c0b, 0x1, 0x0);
        gbc.writeMem(0x5d6b, { 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6ace, gbc.sp());
        EXPECT(0x5d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02A2
        gbc.setState(0x344b, 0x6306, 0xea40, 0x5135, 0xb665, 0x7864, 0x1, 0x0);
        gbc.writeMem(0x344b, { 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6306, gbc.sp());
        EXPECT(0x344c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02A3
        gbc.setState(0x2e5e, 0xd9bf, 0x8c80, 0x1b5d, 0xb3dd, 0x3be9, 0x1, 0x1);
        gbc.writeMem(0x2e5e, { 0xb9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd9bf, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02A4
        gbc.setState(0x5b33, 0xeec8, 0xf6e0, 0xad2e, 0xe170, 0xb033, 0x1, 0x1);
        gbc.writeMem(0x5b33, { 0xb9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeec8, gbc.sp());
        EXPECT(0x5b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02A5
        gbc.setState(0xbc9a, 0xd14b, 0x5ed0, 0xd551, 0xe619, 0x1625, 0x0, 0x0);
        gbc.writeMem(0xbc9a, { 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd14b, gbc.sp());
        EXPECT(0xbc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbc9a));
        // B9 02A6
        gbc.setState(0x52a, 0x51be, 0xac10, 0x990d, 0xd313, 0x2af8, 0x1, 0x0);
        gbc.writeMem(0x52a, { 0xb9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x51be, gbc.sp());
        EXPECT(0x52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02A7
        gbc.setState(0xe549, 0x8c6c, 0x86a0, 0x9c5e, 0x6085, 0xb371, 0x0, 0x0);
        gbc.writeMem(0xe549, { 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8c6c, gbc.sp());
        EXPECT(0xe54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe549));
        // B9 02A8
        gbc.setState(0xe1a9, 0xfe53, 0x9c00, 0x7f1d, 0xd9c3, 0xa820, 0x0, 0x1);
        gbc.writeMem(0xe1a9, { 0xb9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfe53, gbc.sp());
        EXPECT(0xe1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe1a9));
        // B9 02A9
        gbc.setState(0xc172, 0xea0a, 0x2b10, 0x4669, 0xd9d0, 0x7cd4, 0x0, 0x0);
        gbc.writeMem(0xc172, { 0xb9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xea0a, gbc.sp());
        EXPECT(0xc173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc172));
        // B9 02AA
        gbc.setState(0xc6c6, 0xdc1e, 0xeae0, 0x9756, 0xe8f3, 0x21df, 0x0, 0x0);
        gbc.writeMem(0xc6c6, { 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdc1e, gbc.sp());
        EXPECT(0xc6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc6c6));
        // B9 02AB
        gbc.setState(0x507f, 0x511, 0x3470, 0x64c9, 0x5124, 0x8377, 0x1, 0x1);
        gbc.writeMem(0x507f, { 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x511, gbc.sp());
        EXPECT(0x5080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02AC
        gbc.setState(0x17ab, 0x184e, 0xeca0, 0x59d3, 0x4416, 0xbad4, 0x1, 0x0);
        gbc.writeMem(0x17ab, { 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x184e, gbc.sp());
        EXPECT(0x17ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02AD
        gbc.setState(0x858d, 0x8097, 0x8250, 0xb382, 0xba2d, 0x8ee1, 0x1, 0x1);
        gbc.writeMem(0x858d, { 0xb9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8097, gbc.sp());
        EXPECT(0x858e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x858d));
        // B9 02AE
        gbc.setState(0x964d, 0x3542, 0xcf50, 0xc681, 0xf4fe, 0xa1e7, 0x1, 0x1);
        gbc.writeMem(0x964d, { 0xb9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3542, gbc.sp());
        EXPECT(0x964e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x964d));
        // B9 02AF
        gbc.setState(0x1712, 0x7929, 0xd170, 0x5c94, 0xfa3a, 0x2d01, 0x1, 0x1);
        gbc.writeMem(0x1712, { 0xb9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7929, gbc.sp());
        EXPECT(0x1713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02B0
        gbc.setState(0x7460, 0x16ec, 0xcf40, 0x54de, 0x86fb, 0x6da6, 0x1, 0x0);
        gbc.writeMem(0x7460, { 0xb9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x16ec, gbc.sp());
        EXPECT(0x7461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02B1
        gbc.setState(0x24dd, 0x6928, 0x2d90, 0xb6c7, 0xc251, 0x2b67, 0x0, 0x1);
        gbc.writeMem(0x24dd, { 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6928, gbc.sp());
        EXPECT(0x24de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02B2
        gbc.setState(0xbe65, 0x8043, 0xfa0, 0xf3c1, 0x5883, 0xfbcd, 0x1, 0x0);
        gbc.writeMem(0xbe65, { 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8043, gbc.sp());
        EXPECT(0xbe66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbe65));
        // B9 02B3
        gbc.setState(0x526c, 0x4254, 0xf280, 0x62c3, 0x5483, 0xcfb0, 0x0, 0x1);
        gbc.writeMem(0x526c, { 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4254, gbc.sp());
        EXPECT(0x526d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02B4
        gbc.setState(0x3537, 0xb731, 0xfae0, 0xf813, 0x8aa7, 0x9769, 0x1, 0x0);
        gbc.writeMem(0x3537, { 0xb9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb731, gbc.sp());
        EXPECT(0x3538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02B5
        gbc.setState(0xb89c, 0x5c4f, 0x2da0, 0x319, 0xdc0a, 0xed0d, 0x1, 0x1);
        gbc.writeMem(0xb89c, { 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5c4f, gbc.sp());
        EXPECT(0xb89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb89c));
        // B9 02B6
        gbc.setState(0x3254, 0x76da, 0x7a10, 0xa955, 0x4e47, 0x831a, 0x0, 0x1);
        gbc.writeMem(0x3254, { 0xb9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x76da, gbc.sp());
        EXPECT(0x3255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02B7
        gbc.setState(0x47e5, 0x17ad, 0x32a0, 0x11e6, 0x3938, 0x61d3, 0x0, 0x0);
        gbc.writeMem(0x47e5, { 0xb9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0x47e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02B8
        gbc.setState(0xe94d, 0xb580, 0xe230, 0x2b33, 0x27f0, 0xb028, 0x1, 0x0);
        gbc.writeMem(0xe94d, { 0xb9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb580, gbc.sp());
        EXPECT(0xe94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe94d));
        // B9 02B9
        gbc.setState(0xd77c, 0x4261, 0xc7d0, 0xb3b7, 0x5a50, 0xd802, 0x1, 0x0);
        gbc.writeMem(0xd77c, { 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4261, gbc.sp());
        EXPECT(0xd77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd77c));
        // B9 02BA
        gbc.setState(0x560b, 0x8b7c, 0xc000, 0xc164, 0x4de8, 0x33e9, 0x0, 0x1);
        gbc.writeMem(0x560b, { 0xb9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8b7c, gbc.sp());
        EXPECT(0x560c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02BB
        gbc.setState(0xe54, 0x2238, 0xc1b0, 0x63d5, 0xdc1f, 0x5a93, 0x1, 0x1);
        gbc.writeMem(0xe54, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2238, gbc.sp());
        EXPECT(0xe55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02BC
        gbc.setState(0xabbc, 0x90e3, 0xf0f0, 0x4745, 0xa7ab, 0xdecf, 0x0, 0x1);
        gbc.writeMem(0xabbc, { 0xb9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x90e3, gbc.sp());
        EXPECT(0xabbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xabbc));
        // B9 02BD
        gbc.setState(0x6a0, 0x24b8, 0x34a0, 0xcd1e, 0xfa67, 0xe01b, 0x0, 0x0);
        gbc.writeMem(0x6a0, { 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x24b8, gbc.sp());
        EXPECT(0x6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02BE
        gbc.setState(0x18ab, 0xbc7d, 0xb290, 0x8fa7, 0xd098, 0x25a6, 0x1, 0x1);
        gbc.writeMem(0x18ab, { 0xb9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbc7d, gbc.sp());
        EXPECT(0x18ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02BF
        gbc.setState(0x6161, 0x2e4e, 0xf1d0, 0x9a9c, 0xaf23, 0x3eb2, 0x0, 0x0);
        gbc.writeMem(0x6161, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2e4e, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02C0
        gbc.setState(0xc6b3, 0x4d17, 0xc2f0, 0xe09d, 0x1d14, 0x4d4f, 0x0, 0x0);
        gbc.writeMem(0xc6b3, { 0xb9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4d17, gbc.sp());
        EXPECT(0xc6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc6b3));
        // B9 02C1
        gbc.setState(0x2ae0, 0x520, 0x9ba0, 0xe47, 0xf01b, 0x60ae, 0x0, 0x0);
        gbc.writeMem(0x2ae0, { 0xb9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x520, gbc.sp());
        EXPECT(0x2ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02C2
        gbc.setState(0xa6e2, 0x5e58, 0xd630, 0x4f28, 0xcbe4, 0x196c, 0x1, 0x1);
        gbc.writeMem(0xa6e2, { 0xb9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5e58, gbc.sp());
        EXPECT(0xa6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa6e2));
        // B9 02C3
        gbc.setState(0x498, 0x3619, 0xb500, 0xe26e, 0xc223, 0xfe8e, 0x0, 0x1);
        gbc.writeMem(0x498, { 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3619, gbc.sp());
        EXPECT(0x499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02C4
        gbc.setState(0x527b, 0x225f, 0x1560, 0x3a1e, 0x3885, 0xc93f, 0x1, 0x1);
        gbc.writeMem(0x527b, { 0xb9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x225f, gbc.sp());
        EXPECT(0x527c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02C5
        gbc.setState(0x2d11, 0x14ac, 0xb570, 0x9ba3, 0x4748, 0x84cc, 0x0, 0x0);
        gbc.writeMem(0x2d11, { 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x14ac, gbc.sp());
        EXPECT(0x2d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02C6
        gbc.setState(0x3a2f, 0xe803, 0x8040, 0x5170, 0x47d4, 0xd235, 0x1, 0x1);
        gbc.writeMem(0x3a2f, { 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe803, gbc.sp());
        EXPECT(0x3a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02C7
        gbc.setState(0x6f23, 0xf0f1, 0x4a10, 0xfd80, 0x2dfb, 0xe984, 0x0, 0x0);
        gbc.writeMem(0x6f23, { 0xb9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf0f1, gbc.sp());
        EXPECT(0x6f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02C8
        gbc.setState(0xe9fa, 0xfbbb, 0x3360, 0x716b, 0xf85b, 0xe52c, 0x1, 0x1);
        gbc.writeMem(0xe9fa, { 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0xe9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe9fa));
        // B9 02C9
        gbc.setState(0x8c31, 0xbb38, 0x4180, 0xa763, 0x4f9d, 0x3ea1, 0x0, 0x0);
        gbc.writeMem(0x8c31, { 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbb38, gbc.sp());
        EXPECT(0x8c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8c31));
        // B9 02CA
        gbc.setState(0x55f9, 0x493e, 0x690, 0xd6d, 0xbdf4, 0xf2c, 0x0, 0x1);
        gbc.writeMem(0x55f9, { 0xb9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x493e, gbc.sp());
        EXPECT(0x55fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02CB
        gbc.setState(0x84b3, 0xe0ea, 0x2e80, 0x4b9b, 0x96c6, 0x3ffa, 0x0, 0x1);
        gbc.writeMem(0x84b3, { 0xb9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe0ea, gbc.sp());
        EXPECT(0x84b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x84b3));
        // B9 02CC
        gbc.setState(0x5724, 0x23c3, 0xc300, 0x7556, 0x92d0, 0xd3e9, 0x1, 0x1);
        gbc.writeMem(0x5724, { 0xb9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x23c3, gbc.sp());
        EXPECT(0x5725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02CD
        gbc.setState(0xd61b, 0x3a6c, 0xb080, 0x7e23, 0x9037, 0x4804, 0x0, 0x1);
        gbc.writeMem(0xd61b, { 0xb9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3a6c, gbc.sp());
        EXPECT(0xd61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd61b));
        // B9 02CE
        gbc.setState(0x22a9, 0x8661, 0xbf00, 0x98c9, 0xa4b6, 0x17f3, 0x1, 0x0);
        gbc.writeMem(0x22a9, { 0xb9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8661, gbc.sp());
        EXPECT(0x22aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02CF
        gbc.setState(0x23a7, 0xe2d4, 0xad20, 0x911a, 0x22f7, 0xd460, 0x1, 0x1);
        gbc.writeMem(0x23a7, { 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe2d4, gbc.sp());
        EXPECT(0x23a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02D0
        gbc.setState(0x80c7, 0x440b, 0xf880, 0x6da2, 0x8744, 0x41a8, 0x0, 0x1);
        gbc.writeMem(0x80c7, { 0xb9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x440b, gbc.sp());
        EXPECT(0x80c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x80c7));
        // B9 02D1
        gbc.setState(0xc0f2, 0xe778, 0x72a0, 0x6c6e, 0x8052, 0xb73f, 0x0, 0x0);
        gbc.writeMem(0xc0f2, { 0xb9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe778, gbc.sp());
        EXPECT(0xc0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc0f2));
        // B9 02D2
        gbc.setState(0xa4ba, 0x8dcf, 0x7a0, 0x91fc, 0x6940, 0x6f03, 0x0, 0x1);
        gbc.writeMem(0xa4ba, { 0xb9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8dcf, gbc.sp());
        EXPECT(0xa4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa4ba));
        // B9 02D4
        gbc.setState(0x7b5f, 0x1491, 0xf200, 0x4e0b, 0xebfc, 0x5510, 0x1, 0x0);
        gbc.writeMem(0x7b5f, { 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1491, gbc.sp());
        EXPECT(0x7b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02D5
        gbc.setState(0xbcc0, 0x98f7, 0x7450, 0x7b9e, 0x4d95, 0xf674, 0x1, 0x1);
        gbc.writeMem(0xbcc0, { 0xb9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x98f7, gbc.sp());
        EXPECT(0xbcc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbcc0));
        // B9 02D6
        gbc.setState(0x7852, 0xc1e2, 0xdd20, 0xbb44, 0xbfeb, 0x7eb0, 0x1, 0x0);
        gbc.writeMem(0x7852, { 0xb9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc1e2, gbc.sp());
        EXPECT(0x7853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02D7
        gbc.setState(0x2547, 0x60b2, 0xe9c0, 0x61e4, 0xf2c1, 0xb5b, 0x0, 0x1);
        gbc.writeMem(0x2547, { 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x60b2, gbc.sp());
        EXPECT(0x2548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02D8
        gbc.setState(0xd8dc, 0xf97b, 0x7bb0, 0x1e6c, 0xc2b0, 0xe0c5, 0x0, 0x0);
        gbc.writeMem(0xd8dc, { 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf97b, gbc.sp());
        EXPECT(0xd8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd8dc));
        // B9 02D9
        gbc.setState(0x19c7, 0x6c5f, 0xc410, 0xd660, 0x9f48, 0x9a72, 0x1, 0x0);
        gbc.writeMem(0x19c7, { 0xb9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6c5f, gbc.sp());
        EXPECT(0x19c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02DA
        gbc.setState(0x294c, 0xf3fe, 0xccc0, 0xcf6f, 0xcba7, 0xa681, 0x1, 0x1);
        gbc.writeMem(0x294c, { 0xb9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf3fe, gbc.sp());
        EXPECT(0x294d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02DB
        gbc.setState(0x33e0, 0x25dc, 0xcbc0, 0x9b5f, 0x22a0, 0x5e70, 0x0, 0x0);
        gbc.writeMem(0x33e0, { 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x25dc, gbc.sp());
        EXPECT(0x33e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02DC
        gbc.setState(0x9647, 0x115f, 0xb00, 0x896e, 0x495f, 0x9950, 0x0, 0x0);
        gbc.writeMem(0x9647, { 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0x9648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9647));
        // B9 02DD
        gbc.setState(0x2f42, 0x3fa7, 0xff80, 0xf7e0, 0x7c4b, 0x4da, 0x1, 0x1);
        gbc.writeMem(0x2f42, { 0xb9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3fa7, gbc.sp());
        EXPECT(0x2f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02DE
        gbc.setState(0xb309, 0x2062, 0xce80, 0xb541, 0x5a2c, 0x4b10, 0x0, 0x1);
        gbc.writeMem(0xb309, { 0xb9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2062, gbc.sp());
        EXPECT(0xb30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb309));
        // B9 02DF
        gbc.setState(0x51fe, 0xa8fe, 0xad30, 0x8e8b, 0xfe95, 0xea0c, 0x1, 0x0);
        gbc.writeMem(0x51fe, { 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa8fe, gbc.sp());
        EXPECT(0x51ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02E0
        gbc.setState(0x6b2f, 0x1b52, 0x2e90, 0x6f43, 0x7a8c, 0x81ac, 0x0, 0x1);
        gbc.writeMem(0x6b2f, { 0xb9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1b52, gbc.sp());
        EXPECT(0x6b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02E1
        gbc.setState(0xaf54, 0x97a4, 0xb6f0, 0x963b, 0xc0d9, 0xcc0e, 0x1, 0x1);
        gbc.writeMem(0xaf54, { 0xb9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x97a4, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaf54));
        // B9 02E2
        gbc.setState(0x4ae2, 0xdd89, 0x2110, 0xb27d, 0xf30d, 0xa50, 0x0, 0x1);
        gbc.writeMem(0x4ae2, { 0xb9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdd89, gbc.sp());
        EXPECT(0x4ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02E3
        gbc.setState(0x338d, 0x4c5a, 0xac00, 0x599, 0x22b1, 0xcf90, 0x0, 0x1);
        gbc.writeMem(0x338d, { 0xb9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4c5a, gbc.sp());
        EXPECT(0x338e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02E5
        gbc.setState(0x916d, 0xecb4, 0x8700, 0x4be, 0x59ee, 0x7376, 0x1, 0x1);
        gbc.writeMem(0x916d, { 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xecb4, gbc.sp());
        EXPECT(0x916e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x916d));
        // B9 02E6
        gbc.setState(0x165a, 0xb9df, 0x4c40, 0x58b, 0xa409, 0x1a7d, 0x1, 0x0);
        gbc.writeMem(0x165a, { 0xb9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb9df, gbc.sp());
        EXPECT(0x165b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02E7
        gbc.setState(0xade2, 0x5ed8, 0xd560, 0xe242, 0x4a98, 0x2cb8, 0x1, 0x1);
        gbc.writeMem(0xade2, { 0xb9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5ed8, gbc.sp());
        EXPECT(0xade3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xade2));
        // B9 02E8
        gbc.setState(0x64a7, 0xe73, 0x56e0, 0x9577, 0xe11, 0xf721, 0x0, 0x0);
        gbc.writeMem(0x64a7, { 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe73, gbc.sp());
        EXPECT(0x64a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02E9
        gbc.setState(0xedc1, 0x9607, 0x4680, 0x79d8, 0xdc5, 0xb25d, 0x1, 0x0);
        gbc.writeMem(0xedc1, { 0xb9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9607, gbc.sp());
        EXPECT(0xedc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xedc1));
        // B9 02EA
        gbc.setState(0xb37b, 0x890e, 0x2100, 0xedf3, 0xf9b2, 0x70a2, 0x1, 0x0);
        gbc.writeMem(0xb37b, { 0xb9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x890e, gbc.sp());
        EXPECT(0xb37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb37b));
        // B9 02EB
        gbc.setState(0xea69, 0x97ad, 0x2130, 0x8962, 0x246f, 0x2ab5, 0x1, 0x1);
        gbc.writeMem(0xea69, { 0xb9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x97ad, gbc.sp());
        EXPECT(0xea6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xea69));
        // B9 02EC
        gbc.setState(0xe119, 0xb143, 0x1ff0, 0xdb22, 0x7ade, 0x723e, 0x1, 0x0);
        gbc.writeMem(0xe119, { 0xb9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb143, gbc.sp());
        EXPECT(0xe11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe119));
        // B9 02ED
        gbc.setState(0xcac2, 0xdc13, 0x4480, 0x25f4, 0x8145, 0xefd2, 0x0, 0x0);
        gbc.writeMem(0xcac2, { 0xb9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdc13, gbc.sp());
        EXPECT(0xcac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcac2));
        // B9 02EE
        gbc.setState(0xb87, 0x5f7e, 0xa190, 0x9d60, 0x3a1d, 0x29b0, 0x1, 0x0);
        gbc.writeMem(0xb87, { 0xb9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5f7e, gbc.sp());
        EXPECT(0xb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02EF
        gbc.setState(0xd889, 0xb597, 0x4e50, 0x7422, 0x7a23, 0x3116, 0x0, 0x0);
        gbc.writeMem(0xd889, { 0xb9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb597, gbc.sp());
        EXPECT(0xd88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd889));
        // B9 02F0
        gbc.setState(0x81b, 0x1eed, 0x9e00, 0x262f, 0xf132, 0x47b7, 0x0, 0x1);
        gbc.writeMem(0x81b, { 0xb9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1eed, gbc.sp());
        EXPECT(0x81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02F1
        gbc.setState(0x20df, 0x45c, 0xffa0, 0x2689, 0x6780, 0x7a21, 0x0, 0x1);
        gbc.writeMem(0x20df, { 0xb9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x45c, gbc.sp());
        EXPECT(0x20e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02F2
        gbc.setState(0xb813, 0x4462, 0xf3a0, 0x74ca, 0xb9db, 0x113e, 0x1, 0x0);
        gbc.writeMem(0xb813, { 0xb9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4462, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb813));
        // B9 02F3
        gbc.setState(0x989d, 0xa768, 0xda70, 0xb2da, 0x4c4, 0x7d11, 0x0, 0x0);
        gbc.writeMem(0x989d, { 0xb9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa768, gbc.sp());
        EXPECT(0x989e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x989d));
        // B9 02F4
        gbc.setState(0x33ca, 0xc0e6, 0x1350, 0xf91b, 0x636c, 0x77dc, 0x0, 0x0);
        gbc.writeMem(0x33ca, { 0xb9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc0e6, gbc.sp());
        EXPECT(0x33cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02F5
        gbc.setState(0x50c6, 0x42bc, 0x4540, 0xf22a, 0x66d, 0x6f43, 0x0, 0x1);
        gbc.writeMem(0x50c6, { 0xb9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x42bc, gbc.sp());
        EXPECT(0x50c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02F6
        gbc.setState(0xef69, 0xa14e, 0x2cb0, 0xa4d9, 0xde51, 0x11bf, 0x1, 0x1);
        gbc.writeMem(0xef69, { 0xb9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa14e, gbc.sp());
        EXPECT(0xef6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xef69));
        // B9 02F7
        gbc.setState(0x2e98, 0xe66a, 0x5d90, 0xe674, 0x4d8f, 0x982d, 0x1, 0x1);
        gbc.writeMem(0x2e98, { 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe66a, gbc.sp());
        EXPECT(0x2e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02F8
        gbc.setState(0x432f, 0x5343, 0xc420, 0x72f4, 0xa638, 0xfb62, 0x0, 0x1);
        gbc.writeMem(0x432f, { 0xb9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5343, gbc.sp());
        EXPECT(0x4330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02F9
        gbc.setState(0xe57b, 0xeeaa, 0xb4e0, 0x66c7, 0xfdc7, 0xc91f, 0x0, 0x1);
        gbc.writeMem(0xe57b, { 0xb9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeeaa, gbc.sp());
        EXPECT(0xe57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe57b));
        // B9 02FA
        gbc.setState(0x7ac3, 0xae3c, 0x32b0, 0x63e0, 0xe122, 0xfe09, 0x1, 0x1);
        gbc.writeMem(0x7ac3, { 0xb9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xae3c, gbc.sp());
        EXPECT(0x7ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02FB
        gbc.setState(0x753c, 0xbc9b, 0x3410, 0x8b55, 0x7be3, 0xaa80, 0x1, 0x0);
        gbc.writeMem(0x753c, { 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0x753d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02FC
        gbc.setState(0x4ffe, 0xeac3, 0xa5a0, 0xfb0d, 0x79d7, 0x1897, 0x0, 0x1);
        gbc.writeMem(0x4ffe, { 0xb9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0x4fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 02FE
        gbc.setState(0x575d, 0xcb9b, 0x1a50, 0xa85a, 0xba20, 0x25f0, 0x1, 0x1);
        gbc.writeMem(0x575d, { 0xb9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcb9b, gbc.sp());
        EXPECT(0x575e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 02FF
        gbc.setState(0xc6d9, 0xb796, 0xdef0, 0x74d1, 0x44d9, 0xac4f, 0x0, 0x1);
        gbc.writeMem(0xc6d9, { 0xb9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb796, gbc.sp());
        EXPECT(0xc6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc6d9));
        // B9 0300
        gbc.setState(0xc7cd, 0xc5d5, 0xc160, 0xdba1, 0xad93, 0x18c, 0x1, 0x1);
        gbc.writeMem(0xc7cd, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc5d5, gbc.sp());
        EXPECT(0xc7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc7cd));
        // B9 0301
        gbc.setState(0xde97, 0x326, 0x5980, 0x2773, 0x890e, 0x428, 0x0, 0x1);
        gbc.writeMem(0xde97, { 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x326, gbc.sp());
        EXPECT(0xde98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xde97));
        // B9 0302
        gbc.setState(0xd97b, 0x3c8e, 0xe000, 0xc3e8, 0x21, 0x56d1, 0x0, 0x1);
        gbc.writeMem(0xd97b, { 0xb9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3c8e, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd97b));
        // B9 0303
        gbc.setState(0x9aca, 0xdfad, 0x3990, 0x4004, 0x1f1a, 0x337b, 0x0, 0x1);
        gbc.writeMem(0x9aca, { 0xb9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdfad, gbc.sp());
        EXPECT(0x9acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9aca));
        // B9 0304
        gbc.setState(0x4570, 0x6815, 0xe1e0, 0x1dfc, 0xd77f, 0x30ee, 0x0, 0x1);
        gbc.writeMem(0x4570, { 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6815, gbc.sp());
        EXPECT(0x4571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0305
        gbc.setState(0x4f61, 0x3773, 0x52d0, 0x43b9, 0x954a, 0x688f, 0x1, 0x0);
        gbc.writeMem(0x4f61, { 0xb9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3773, gbc.sp());
        EXPECT(0x4f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0306
        gbc.setState(0xc29f, 0xba14, 0x6420, 0xc6a1, 0x9ee5, 0xdb35, 0x0, 0x0);
        gbc.writeMem(0xc29f, { 0xb9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xba14, gbc.sp());
        EXPECT(0xc2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc29f));
        // B9 0308
        gbc.setState(0x54fb, 0xea6a, 0x3970, 0x6faa, 0x862c, 0x2cd2, 0x1, 0x0);
        gbc.writeMem(0x54fb, { 0xb9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xea6a, gbc.sp());
        EXPECT(0x54fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0309
        gbc.setState(0x831c, 0x5b6d, 0x14d0, 0x52d3, 0x3904, 0xfd63, 0x1, 0x1);
        gbc.writeMem(0x831c, { 0xb9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5b6d, gbc.sp());
        EXPECT(0x831d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x831c));
        // B9 030A
        gbc.setState(0x10b1, 0x142a, 0x2ec0, 0x7342, 0xc83a, 0xc81c, 0x0, 0x0);
        gbc.writeMem(0x10b1, { 0xb9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x142a, gbc.sp());
        EXPECT(0x10b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 030B
        gbc.setState(0x9111, 0xa9b, 0x91e0, 0xe231, 0xf24a, 0x82b7, 0x1, 0x1);
        gbc.writeMem(0x9111, { 0xb9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa9b, gbc.sp());
        EXPECT(0x9112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9111));
        // B9 030C
        gbc.setState(0x7631, 0xb11b, 0x6940, 0xe18f, 0x1e4e, 0xd5bc, 0x1, 0x1);
        gbc.writeMem(0x7631, { 0xb9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb11b, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 030D
        gbc.setState(0x73dc, 0xdf2a, 0x65a0, 0xfe76, 0x4a8d, 0xa5ba, 0x1, 0x0);
        gbc.writeMem(0x73dc, { 0xb9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdf2a, gbc.sp());
        EXPECT(0x73dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 030E
        gbc.setState(0x4e6e, 0x8ac8, 0xac70, 0x1c2f, 0xa51e, 0xda20, 0x0, 0x1);
        gbc.writeMem(0x4e6e, { 0xb9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8ac8, gbc.sp());
        EXPECT(0x4e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 030F
        gbc.setState(0xdb24, 0x278d, 0x4b30, 0x60e2, 0xff2e, 0xa2b0, 0x1, 0x0);
        gbc.writeMem(0xdb24, { 0xb9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x278d, gbc.sp());
        EXPECT(0xdb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdb24));
        // B9 0310
        gbc.setState(0x3bea, 0xdb00, 0x3140, 0xa96d, 0xa837, 0x5b95, 0x0, 0x0);
        gbc.writeMem(0x3bea, { 0xb9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdb00, gbc.sp());
        EXPECT(0x3beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0312
        gbc.setState(0xdf4a, 0x5faa, 0xfe60, 0x36e, 0x7a5, 0xf3a0, 0x0, 0x0);
        gbc.writeMem(0xdf4a, { 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5faa, gbc.sp());
        EXPECT(0xdf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdf4a));
        // B9 0313
        gbc.setState(0x8f4d, 0x3766, 0x10, 0xe763, 0x21cd, 0xddac, 0x1, 0x1);
        gbc.writeMem(0x8f4d, { 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3766, gbc.sp());
        EXPECT(0x8f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8f4d));
        // B9 0314
        gbc.setState(0xb5d3, 0xd71e, 0xc300, 0x8faf, 0xa99b, 0x64e, 0x0, 0x0);
        gbc.writeMem(0xb5d3, { 0xb9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd71e, gbc.sp());
        EXPECT(0xb5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb5d3));
        // B9 0315
        gbc.setState(0x39ea, 0x598b, 0xbdc0, 0x5eed, 0x84bb, 0x574d, 0x1, 0x1);
        gbc.writeMem(0x39ea, { 0xb9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x598b, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0316
        gbc.setState(0x3c2b, 0x10a4, 0x6ba0, 0x1ae6, 0xf93, 0x862e, 0x0, 0x0);
        gbc.writeMem(0x3c2b, { 0xb9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x10a4, gbc.sp());
        EXPECT(0x3c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0317
        gbc.setState(0xc3d2, 0x923d, 0xd9d0, 0x50df, 0x32bb, 0xb939, 0x0, 0x0);
        gbc.writeMem(0xc3d2, { 0xb9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x923d, gbc.sp());
        EXPECT(0xc3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc3d2));
        // B9 0318
        gbc.setState(0x10cf, 0x681d, 0x1c0, 0xb528, 0x68df, 0x8230, 0x1, 0x1);
        gbc.writeMem(0x10cf, { 0xb9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x681d, gbc.sp());
        EXPECT(0x10d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0319
        gbc.setState(0x6e0b, 0xd6e3, 0x4870, 0x56d, 0x8e7d, 0xc4c0, 0x0, 0x1);
        gbc.writeMem(0x6e0b, { 0xb9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd6e3, gbc.sp());
        EXPECT(0x6e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 031B
        gbc.setState(0xae78, 0x7ca9, 0x6350, 0xa9fa, 0xc75f, 0x776b, 0x1, 0x0);
        gbc.writeMem(0xae78, { 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7ca9, gbc.sp());
        EXPECT(0xae79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xae78));
        // B9 031C
        gbc.setState(0x4de6, 0x9d95, 0x2ed0, 0x4218, 0x87ac, 0x9fc7, 0x1, 0x1);
        gbc.writeMem(0x4de6, { 0xb9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9d95, gbc.sp());
        EXPECT(0x4de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 031D
        gbc.setState(0x7edf, 0xd2d6, 0x6c60, 0x64af, 0x57e7, 0x7e13, 0x0, 0x1);
        gbc.writeMem(0x7edf, { 0xb9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd2d6, gbc.sp());
        EXPECT(0x7ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 031E
        gbc.setState(0x2b4c, 0x393d, 0x4f70, 0x955a, 0x7d8d, 0x5aa, 0x0, 0x0);
        gbc.writeMem(0x2b4c, { 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x393d, gbc.sp());
        EXPECT(0x2b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 031F
        gbc.setState(0x5438, 0x9abd, 0x1670, 0xc9c6, 0xde32, 0xccce, 0x1, 0x0);
        gbc.writeMem(0x5438, { 0xb9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9abd, gbc.sp());
        EXPECT(0x5439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0320
        gbc.setState(0x8de0, 0xd8d2, 0x4b20, 0x2e68, 0x535e, 0x744e, 0x1, 0x0);
        gbc.writeMem(0x8de0, { 0xb9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd8d2, gbc.sp());
        EXPECT(0x8de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8de0));
        // B9 0321
        gbc.setState(0x34ef, 0xcda9, 0x2740, 0x5b99, 0x7e69, 0x8f69, 0x0, 0x0);
        gbc.writeMem(0x34ef, { 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcda9, gbc.sp());
        EXPECT(0x34f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0322
        gbc.setState(0x3b7a, 0x3a2f, 0x7e60, 0x1808, 0xd18f, 0x196e, 0x0, 0x0);
        gbc.writeMem(0x3b7a, { 0xb9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3a2f, gbc.sp());
        EXPECT(0x3b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0323
        gbc.setState(0x9c66, 0x1273, 0xaf40, 0x40e2, 0x8a8f, 0x6edb, 0x0, 0x0);
        gbc.writeMem(0x9c66, { 0xb9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1273, gbc.sp());
        EXPECT(0x9c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9c66));
        // B9 0324
        gbc.setState(0x653, 0x193f, 0x3890, 0x52ac, 0xa83c, 0x6ff4, 0x0, 0x0);
        gbc.writeMem(0x653, { 0xb9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x193f, gbc.sp());
        EXPECT(0x654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0325
        gbc.setState(0x3f29, 0xfece, 0xf1e0, 0xe5ce, 0xefbc, 0x4fad, 0x0, 0x1);
        gbc.writeMem(0x3f29, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfece, gbc.sp());
        EXPECT(0x3f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0326
        gbc.setState(0x6acd, 0x9e32, 0xb510, 0x4c43, 0xdfca, 0xfe1, 0x1, 0x0);
        gbc.writeMem(0x6acd, { 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9e32, gbc.sp());
        EXPECT(0x6ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0327
        gbc.setState(0x4c71, 0x448, 0x6670, 0xf458, 0x6d9e, 0xd00e, 0x1, 0x1);
        gbc.writeMem(0x4c71, { 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x448, gbc.sp());
        EXPECT(0x4c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0328
        gbc.setState(0x95b2, 0xec37, 0x6eb0, 0x43ba, 0x18, 0xfdef, 0x1, 0x0);
        gbc.writeMem(0x95b2, { 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xec37, gbc.sp());
        EXPECT(0x95b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x95b2));
        // B9 0329
        gbc.setState(0xbfe, 0xcc42, 0x2c0, 0xc5b, 0x60, 0xe169, 0x1, 0x0);
        gbc.writeMem(0xbfe, { 0xb9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcc42, gbc.sp());
        EXPECT(0xbff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 032A
        gbc.setState(0x5a3a, 0xc2fa, 0xcbd0, 0xffe5, 0x7ba1, 0xd83e, 0x1, 0x1);
        gbc.writeMem(0x5a3a, { 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc2fa, gbc.sp());
        EXPECT(0x5a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 032B
        gbc.setState(0x86e2, 0xdbbb, 0x9d60, 0x8c2d, 0x30db, 0xccd0, 0x0, 0x1);
        gbc.writeMem(0x86e2, { 0xb9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdbbb, gbc.sp());
        EXPECT(0x86e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x86e2));
        // B9 032C
        gbc.setState(0xdb5f, 0x736a, 0xcf20, 0xb86d, 0xe975, 0xca67, 0x1, 0x0);
        gbc.writeMem(0xdb5f, { 0xb9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x736a, gbc.sp());
        EXPECT(0xdb60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdb5f));
        // B9 032D
        gbc.setState(0xc47c, 0x833b, 0xeb00, 0xeab0, 0xc706, 0x7cb0, 0x1, 0x0);
        gbc.writeMem(0xc47c, { 0xb9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x833b, gbc.sp());
        EXPECT(0xc47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc47c));
        // B9 032E
        gbc.setState(0x8ba9, 0x855f, 0x1b90, 0x40a0, 0xbd0f, 0x855e, 0x0, 0x1);
        gbc.writeMem(0x8ba9, { 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x855f, gbc.sp());
        EXPECT(0x8baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8ba9));
        // B9 032F
        gbc.setState(0x5a51, 0xc71e, 0x5460, 0x9b04, 0xc8f9, 0x4ec5, 0x1, 0x1);
        gbc.writeMem(0x5a51, { 0xb9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc71e, gbc.sp());
        EXPECT(0x5a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0330
        gbc.setState(0x84ed, 0x2397, 0x4ff0, 0x9f15, 0xeb58, 0x5b18, 0x1, 0x1);
        gbc.writeMem(0x84ed, { 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2397, gbc.sp());
        EXPECT(0x84ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x84ed));
        // B9 0331
        gbc.setState(0x4b0, 0xfe56, 0x6dc0, 0xe6bd, 0x89aa, 0x3aba, 0x0, 0x0);
        gbc.writeMem(0x4b0, { 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0x4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0333
        gbc.setState(0x6f46, 0xbc4d, 0x55a0, 0xb2b, 0x14e5, 0x8f63, 0x1, 0x0);
        gbc.writeMem(0x6f46, { 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbc4d, gbc.sp());
        EXPECT(0x6f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0334
        gbc.setState(0x7bd1, 0x377e, 0xf480, 0x87a7, 0xb18b, 0x6e5e, 0x0, 0x1);
        gbc.writeMem(0x7bd1, { 0xb9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x377e, gbc.sp());
        EXPECT(0x7bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0336
        gbc.setState(0xb8ff, 0xa721, 0xe910, 0x2c8e, 0xebee, 0x47c7, 0x1, 0x1);
        gbc.writeMem(0xb8ff, { 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa721, gbc.sp());
        EXPECT(0xb900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb8ff));
        // B9 0337
        gbc.setState(0x6b55, 0x96bf, 0xa040, 0xe6c2, 0x156d, 0x3d6e, 0x1, 0x0);
        gbc.writeMem(0x6b55, { 0xb9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x96bf, gbc.sp());
        EXPECT(0x6b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0338
        gbc.setState(0xab8e, 0xbe8c, 0xc0d0, 0x722d, 0xfffe, 0x6fee, 0x1, 0x1);
        gbc.writeMem(0xab8e, { 0xb9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbe8c, gbc.sp());
        EXPECT(0xab8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xab8e));
        // B9 0339
        gbc.setState(0x4b39, 0x63de, 0xf70, 0xeaca, 0xf2b8, 0x53ed, 0x0, 0x1);
        gbc.writeMem(0x4b39, { 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x63de, gbc.sp());
        EXPECT(0x4b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 033A
        gbc.setState(0xe3ac, 0xaa7, 0x7d60, 0xca3e, 0x72e3, 0x352d, 0x0, 0x1);
        gbc.writeMem(0xe3ac, { 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaa7, gbc.sp());
        EXPECT(0xe3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe3ac));
        // B9 033B
        gbc.setState(0x12da, 0xda4d, 0xa8a0, 0x9a02, 0xa9f8, 0x79bb, 0x0, 0x1);
        gbc.writeMem(0x12da, { 0xb9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xda4d, gbc.sp());
        EXPECT(0x12db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 033C
        gbc.setState(0x44d, 0x287b, 0x6ca0, 0xb3a8, 0x5caa, 0x62dc, 0x0, 0x1);
        gbc.writeMem(0x44d, { 0xb9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x287b, gbc.sp());
        EXPECT(0x44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 033D
        gbc.setState(0xa54d, 0x8e, 0xf7c0, 0x6369, 0xf385, 0x18b0, 0x1, 0x1);
        gbc.writeMem(0xa54d, { 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8e, gbc.sp());
        EXPECT(0xa54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa54d));
        // B9 033E
        gbc.setState(0x3ecd, 0x466d, 0xd7a0, 0x3a2f, 0x3c84, 0xedf, 0x1, 0x1);
        gbc.writeMem(0x3ecd, { 0xb9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x466d, gbc.sp());
        EXPECT(0x3ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 033F
        gbc.setState(0x79d, 0x677a, 0xa20, 0x2771, 0xaaaf, 0x83ce, 0x1, 0x1);
        gbc.writeMem(0x79d, { 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x677a, gbc.sp());
        EXPECT(0x79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0340
        gbc.setState(0x26a, 0x37c1, 0xc810, 0x6321, 0xcd87, 0xd7c0, 0x0, 0x0);
        gbc.writeMem(0x26a, { 0xb9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x37c1, gbc.sp());
        EXPECT(0x26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0341
        gbc.setState(0xa540, 0x11ae, 0x3b00, 0xee4, 0xaa06, 0x9a5, 0x1, 0x1);
        gbc.writeMem(0xa540, { 0xb9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x11ae, gbc.sp());
        EXPECT(0xa541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa540));
        // B9 0342
        gbc.setState(0x9050, 0x94aa, 0xede0, 0x74db, 0x7e5d, 0x638c, 0x1, 0x0);
        gbc.writeMem(0x9050, { 0xb9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0x9051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9050));
        // B9 0343
        gbc.setState(0xcbc5, 0xd390, 0x9a80, 0xae3a, 0x53ae, 0x9193, 0x1, 0x0);
        gbc.writeMem(0xcbc5, { 0xb9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd390, gbc.sp());
        EXPECT(0xcbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcbc5));
        // B9 0344
        gbc.setState(0xee62, 0x4088, 0xb510, 0xfd2c, 0x40d4, 0x410e, 0x0, 0x1);
        gbc.writeMem(0xee62, { 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4088, gbc.sp());
        EXPECT(0xee63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xee62));
        // B9 0345
        gbc.setState(0xbcd0, 0x5596, 0x7f10, 0xc6b1, 0x61d1, 0x2068, 0x1, 0x1);
        gbc.writeMem(0xbcd0, { 0xb9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5596, gbc.sp());
        EXPECT(0xbcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbcd0));
        // B9 0346
        gbc.setState(0x8e5f, 0xca14, 0x6d70, 0x28d0, 0x4b87, 0xd91b, 0x0, 0x0);
        gbc.writeMem(0x8e5f, { 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xca14, gbc.sp());
        EXPECT(0x8e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8e5f));
        // B9 0347
        gbc.setState(0x9e63, 0xa94f, 0xebf0, 0xbca4, 0x5585, 0xc5a5, 0x1, 0x1);
        gbc.writeMem(0x9e63, { 0xb9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa94f, gbc.sp());
        EXPECT(0x9e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9e63));
        // B9 0348
        gbc.setState(0x2090, 0x976e, 0x5830, 0xaf41, 0xa1ab, 0x82fc, 0x1, 0x0);
        gbc.writeMem(0x2090, { 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x976e, gbc.sp());
        EXPECT(0x2091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0349
        gbc.setState(0x36b4, 0x76ba, 0xf9c0, 0x6e0e, 0x4de6, 0xa8d2, 0x1, 0x1);
        gbc.writeMem(0x36b4, { 0xb9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x76ba, gbc.sp());
        EXPECT(0x36b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 034A
        gbc.setState(0x81b7, 0x3e73, 0xca30, 0xd63c, 0xc437, 0x7e4f, 0x1, 0x0);
        gbc.writeMem(0x81b7, { 0xb9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3e73, gbc.sp());
        EXPECT(0x81b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x81b7));
        // B9 034B
        gbc.setState(0x775e, 0x8464, 0xeea0, 0x9af9, 0x1dc1, 0xdbd8, 0x1, 0x1);
        gbc.writeMem(0x775e, { 0xb9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8464, gbc.sp());
        EXPECT(0x775f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 034C
        gbc.setState(0xd37a, 0xa44b, 0x26e0, 0x24f7, 0xb5fd, 0xdb7b, 0x0, 0x1);
        gbc.writeMem(0xd37a, { 0xb9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa44b, gbc.sp());
        EXPECT(0xd37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd37a));
        // B9 034D
        gbc.setState(0x63dc, 0xf2df, 0xf120, 0x3180, 0x2d44, 0x82eb, 0x0, 0x0);
        gbc.writeMem(0x63dc, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf2df, gbc.sp());
        EXPECT(0x63dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 034E
        gbc.setState(0xb9cf, 0x52ed, 0x2ae0, 0x4a6, 0xb7fc, 0xcf64, 0x1, 0x1);
        gbc.writeMem(0xb9cf, { 0xb9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x52ed, gbc.sp());
        EXPECT(0xb9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb9cf));
        // B9 034F
        gbc.setState(0xc186, 0xdd65, 0x2550, 0x9e44, 0xcfbf, 0x70c3, 0x1, 0x1);
        gbc.writeMem(0xc186, { 0xb9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdd65, gbc.sp());
        EXPECT(0xc187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc186));
        // B9 0350
        gbc.setState(0xb1ec, 0xa8e1, 0x89f0, 0x7d6, 0xa000, 0x9aa, 0x0, 0x1);
        gbc.writeMem(0xb1ec, { 0xb9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa8e1, gbc.sp());
        EXPECT(0xb1ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb1ec));
        // B9 0351
        gbc.setState(0x7b2, 0xf3f1, 0x1d00, 0x6373, 0x6c2c, 0x3b33, 0x0, 0x1);
        gbc.writeMem(0x7b2, { 0xb9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf3f1, gbc.sp());
        EXPECT(0x7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0352
        gbc.setState(0x2da1, 0x730b, 0x1920, 0x2738, 0xa868, 0xde9e, 0x0, 0x1);
        gbc.writeMem(0x2da1, { 0xb9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x730b, gbc.sp());
        EXPECT(0x2da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0353
        gbc.setState(0x9a8d, 0xc8dd, 0x3f00, 0xd91c, 0x4b14, 0xef3e, 0x0, 0x0);
        gbc.writeMem(0x9a8d, { 0xb9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc8dd, gbc.sp());
        EXPECT(0x9a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a8d));
        // B9 0354
        gbc.setState(0xc289, 0x9bef, 0x5fe0, 0xf8ca, 0x9634, 0x9298, 0x0, 0x0);
        gbc.writeMem(0xc289, { 0xb9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9bef, gbc.sp());
        EXPECT(0xc28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc289));
        // B9 0355
        gbc.setState(0xa667, 0x397a, 0x93a0, 0x86c, 0x5a2f, 0xf2d7, 0x0, 0x1);
        gbc.writeMem(0xa667, { 0xb9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x397a, gbc.sp());
        EXPECT(0xa668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa667));
        // B9 0356
        gbc.setState(0xdd5a, 0xd15, 0xf090, 0x4082, 0x9b4f, 0x1038, 0x1, 0x1);
        gbc.writeMem(0xdd5a, { 0xb9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd15, gbc.sp());
        EXPECT(0xdd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdd5a));
        // B9 0357
        gbc.setState(0x45d0, 0xaec7, 0xca70, 0xc97c, 0xe63f, 0xc5, 0x0, 0x1);
        gbc.writeMem(0x45d0, { 0xb9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xaec7, gbc.sp());
        EXPECT(0x45d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0358
        gbc.setState(0x46bd, 0x4da7, 0xecc0, 0x698, 0x5543, 0x6c6c, 0x1, 0x0);
        gbc.writeMem(0x46bd, { 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4da7, gbc.sp());
        EXPECT(0x46be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0359
        gbc.setState(0x6b9f, 0xe7ab, 0x78f0, 0xf5a8, 0x2767, 0xace6, 0x1, 0x0);
        gbc.writeMem(0x6b9f, { 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe7ab, gbc.sp());
        EXPECT(0x6ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 035A
        gbc.setState(0xbb98, 0x3622, 0xca40, 0xc403, 0xc914, 0xaa55, 0x1, 0x1);
        gbc.writeMem(0xbb98, { 0xb9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3622, gbc.sp());
        EXPECT(0xbb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbb98));
        // B9 035B
        gbc.setState(0x18cd, 0xea72, 0xb10, 0x91, 0x9896, 0x80f9, 0x0, 0x0);
        gbc.writeMem(0x18cd, { 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xea72, gbc.sp());
        EXPECT(0x18ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 035C
        gbc.setState(0x3c19, 0x3b49, 0x22c0, 0x8c84, 0xabdc, 0xde9c, 0x1, 0x0);
        gbc.writeMem(0x3c19, { 0xb9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3b49, gbc.sp());
        EXPECT(0x3c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 035D
        gbc.setState(0xe20e, 0x7024, 0x4b20, 0x937f, 0x2a2b, 0xdcbd, 0x1, 0x0);
        gbc.writeMem(0xe20e, { 0xb9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7024, gbc.sp());
        EXPECT(0xe20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe20e));
        // B9 035E
        gbc.setState(0x1adb, 0xa219, 0xb790, 0x8aba, 0x38cd, 0x6798, 0x1, 0x0);
        gbc.writeMem(0x1adb, { 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa219, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 035F
        gbc.setState(0x8413, 0x7bed, 0xfd20, 0x5995, 0x81e1, 0xaedf, 0x0, 0x1);
        gbc.writeMem(0x8413, { 0xb9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7bed, gbc.sp());
        EXPECT(0x8414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8413));
        // B9 0360
        gbc.setState(0xbd25, 0x1e7, 0x7b60, 0x4777, 0x4405, 0x1f8c, 0x0, 0x0);
        gbc.writeMem(0xbd25, { 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1e7, gbc.sp());
        EXPECT(0xbd26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbd25));
        // B9 0361
        gbc.setState(0xcc6e, 0x9d57, 0x1240, 0x7b3d, 0x2dff, 0x6b06, 0x1, 0x0);
        gbc.writeMem(0xcc6e, { 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9d57, gbc.sp());
        EXPECT(0xcc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcc6e));
        // B9 0362
        gbc.setState(0x9345, 0x497e, 0x7410, 0xd11a, 0xabf4, 0x38e3, 0x1, 0x0);
        gbc.writeMem(0x9345, { 0xb9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x497e, gbc.sp());
        EXPECT(0x9346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9345));
        // B9 0363
        gbc.setState(0x2774, 0x7ad4, 0x71e0, 0x7fd4, 0x6af3, 0x8c05, 0x1, 0x1);
        gbc.writeMem(0x2774, { 0xb9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0x2775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0364
        gbc.setState(0x5eb1, 0x9eed, 0xea40, 0xa330, 0x6b63, 0xdf63, 0x1, 0x1);
        gbc.writeMem(0x5eb1, { 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9eed, gbc.sp());
        EXPECT(0x5eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0365
        gbc.setState(0x9a89, 0xf19f, 0x3a90, 0xbb09, 0x457b, 0xa30, 0x0, 0x0);
        gbc.writeMem(0x9a89, { 0xb9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf19f, gbc.sp());
        EXPECT(0x9a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a89));
        // B9 0366
        gbc.setState(0x9ed7, 0x8f97, 0x2b70, 0xd3fd, 0x585c, 0xca5, 0x1, 0x0);
        gbc.writeMem(0x9ed7, { 0xb9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8f97, gbc.sp());
        EXPECT(0x9ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9ed7));
        // B9 0367
        gbc.setState(0x1ee, 0x91d2, 0xa400, 0x7298, 0xa722, 0x4596, 0x1, 0x1);
        gbc.writeMem(0x1ee, { 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x91d2, gbc.sp());
        EXPECT(0x1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0368
        gbc.setState(0x7125, 0xd887, 0x3420, 0xa103, 0xfb34, 0x3af, 0x0, 0x0);
        gbc.writeMem(0x7125, { 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd887, gbc.sp());
        EXPECT(0x7126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 036A
        gbc.setState(0x9a66, 0xb6e, 0xf4c0, 0x5966, 0x2c25, 0x5c2f, 0x0, 0x1);
        gbc.writeMem(0x9a66, { 0xb9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb6e, gbc.sp());
        EXPECT(0x9a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a66));
        // B9 036B
        gbc.setState(0x23d8, 0x91f3, 0x8d80, 0xe03b, 0xd22c, 0x88f8, 0x1, 0x1);
        gbc.writeMem(0x23d8, { 0xb9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x91f3, gbc.sp());
        EXPECT(0x23d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 036C
        gbc.setState(0x1f16, 0xb2c0, 0x4300, 0xf452, 0x9fbe, 0x97f0, 0x0, 0x0);
        gbc.writeMem(0x1f16, { 0xb9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb2c0, gbc.sp());
        EXPECT(0x1f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 036D
        gbc.setState(0x7fb5, 0x6e1b, 0x44a0, 0x696b, 0x97b9, 0x23be, 0x1, 0x0);
        gbc.writeMem(0x7fb5, { 0xb9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6e1b, gbc.sp());
        EXPECT(0x7fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 036E
        gbc.setState(0x725d, 0xe2cb, 0x1d30, 0x5e30, 0xb1ad, 0xdd12, 0x1, 0x1);
        gbc.writeMem(0x725d, { 0xb9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe2cb, gbc.sp());
        EXPECT(0x725e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 036F
        gbc.setState(0x1c2b, 0xfcfa, 0x1180, 0x83eb, 0x69f3, 0x505, 0x0, 0x0);
        gbc.writeMem(0x1c2b, { 0xb9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfcfa, gbc.sp());
        EXPECT(0x1c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0370
        gbc.setState(0xf3b, 0x1b37, 0xcd80, 0xe547, 0xe70b, 0x53df, 0x1, 0x0);
        gbc.writeMem(0xf3b, { 0xb9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1b37, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0371
        gbc.setState(0x8094, 0xc607, 0xff90, 0xed8d, 0xa817, 0x55bc, 0x0, 0x0);
        gbc.writeMem(0x8094, { 0xb9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc607, gbc.sp());
        EXPECT(0x8095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8094));
        // B9 0372
        gbc.setState(0xb255, 0x8b72, 0xc9b0, 0x12a0, 0xb5d4, 0xf87d, 0x0, 0x1);
        gbc.writeMem(0xb255, { 0xb9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8b72, gbc.sp());
        EXPECT(0xb256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb255));
        // B9 0373
        gbc.setState(0xbdf4, 0xcabd, 0xed20, 0x8151, 0xa66c, 0x67d1, 0x1, 0x0);
        gbc.writeMem(0xbdf4, { 0xb9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0xbdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbdf4));
        // B9 0374
        gbc.setState(0xd303, 0xa5f4, 0xd270, 0x9ef6, 0x95, 0x5df0, 0x0, 0x0);
        gbc.writeMem(0xd303, { 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa5f4, gbc.sp());
        EXPECT(0xd304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd303));
        // B9 0375
        gbc.setState(0xa9ed, 0x785f, 0x160, 0x3e8e, 0x8eaf, 0x2eab, 0x1, 0x0);
        gbc.writeMem(0xa9ed, { 0xb9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x785f, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa9ed));
        // B9 0376
        gbc.setState(0xdf0f, 0xa807, 0x80b0, 0xd410, 0x62ba, 0x3b1d, 0x1, 0x0);
        gbc.writeMem(0xdf0f, { 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa807, gbc.sp());
        EXPECT(0xdf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdf0f));
        // B9 0377
        gbc.setState(0xeba7, 0x96e0, 0x7930, 0xd468, 0xea54, 0x8e76, 0x0, 0x1);
        gbc.writeMem(0xeba7, { 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x96e0, gbc.sp());
        EXPECT(0xeba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xeba7));
        // B9 0378
        gbc.setState(0xed2d, 0x6afc, 0x6010, 0x8e0a, 0xb994, 0x2496, 0x1, 0x1);
        gbc.writeMem(0xed2d, { 0xb9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6afc, gbc.sp());
        EXPECT(0xed2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xed2d));
        // B9 0379
        gbc.setState(0x1f5e, 0x8a0d, 0x7890, 0x7b5b, 0x5c2b, 0x9977, 0x0, 0x1);
        gbc.writeMem(0x1f5e, { 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8a0d, gbc.sp());
        EXPECT(0x1f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 037A
        gbc.setState(0x877a, 0x5c92, 0xbbf0, 0x866d, 0x3b60, 0x9520, 0x1, 0x0);
        gbc.writeMem(0x877a, { 0xb9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5c92, gbc.sp());
        EXPECT(0x877b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x877a));
        // B9 037B
        gbc.setState(0x6372, 0x169e, 0x51b0, 0xff5c, 0x17e, 0xaeec, 0x0, 0x1);
        gbc.writeMem(0x6372, { 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x169e, gbc.sp());
        EXPECT(0x6373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 037C
        gbc.setState(0x9222, 0x14d9, 0x35b0, 0x4d83, 0x3fdf, 0x6617, 0x1, 0x0);
        gbc.writeMem(0x9222, { 0xb9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x14d9, gbc.sp());
        EXPECT(0x9223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9222));
        // B9 037D
        gbc.setState(0x60a8, 0x8ad7, 0xd070, 0xe201, 0x7fea, 0x3e12, 0x0, 0x0);
        gbc.writeMem(0x60a8, { 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8ad7, gbc.sp());
        EXPECT(0x60a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 037E
        gbc.setState(0x8a34, 0x959, 0xd5e0, 0x9ca6, 0xdd4, 0xb178, 0x0, 0x1);
        gbc.writeMem(0x8a34, { 0xb9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x959, gbc.sp());
        EXPECT(0x8a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8a34));
        // B9 037F
        gbc.setState(0xd7ec, 0xa4ae, 0xcc20, 0xa756, 0x6d05, 0xa27a, 0x0, 0x0);
        gbc.writeMem(0xd7ec, { 0xb9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa4ae, gbc.sp());
        EXPECT(0xd7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd7ec));
        // B9 0380
        gbc.setState(0xbad9, 0xf45a, 0xc160, 0xcc80, 0x6573, 0x1df0, 0x0, 0x1);
        gbc.writeMem(0xbad9, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf45a, gbc.sp());
        EXPECT(0xbada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbad9));
        // B9 0381
        gbc.setState(0x3ea8, 0x7453, 0xb5a0, 0x7509, 0xd155, 0x8bc7, 0x1, 0x1);
        gbc.writeMem(0x3ea8, { 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7453, gbc.sp());
        EXPECT(0x3ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0382
        gbc.setState(0xbbe8, 0x39be, 0x1040, 0x4473, 0xa3bf, 0xfcfb, 0x0, 0x1);
        gbc.writeMem(0xbbe8, { 0xb9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x39be, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbbe8));
        // B9 0383
        gbc.setState(0x5429, 0xb8e2, 0x9290, 0xece4, 0x5329, 0x17b5, 0x0, 0x1);
        gbc.writeMem(0x5429, { 0xb9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb8e2, gbc.sp());
        EXPECT(0x542a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0384
        gbc.setState(0xcef4, 0x9956, 0xfa80, 0x6ba9, 0x4374, 0x83e6, 0x0, 0x1);
        gbc.writeMem(0xcef4, { 0xb9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9956, gbc.sp());
        EXPECT(0xcef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcef4));
        // B9 0385
        gbc.setState(0x945b, 0xad1b, 0x1150, 0xb69, 0x14d8, 0x105b, 0x1, 0x0);
        gbc.writeMem(0x945b, { 0xb9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xad1b, gbc.sp());
        EXPECT(0x945c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x945b));
        // B9 0386
        gbc.setState(0x1974, 0x845f, 0xee0, 0xd3c, 0x950e, 0xb3f8, 0x1, 0x1);
        gbc.writeMem(0x1974, { 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x845f, gbc.sp());
        EXPECT(0x1975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0387
        gbc.setState(0x31e1, 0x44b2, 0x37d0, 0xdd5d, 0xc394, 0x9ee3, 0x1, 0x1);
        gbc.writeMem(0x31e1, { 0xb9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x44b2, gbc.sp());
        EXPECT(0x31e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0388
        gbc.setState(0xa7e5, 0x9f90, 0xc130, 0x5763, 0x80e4, 0xf6c8, 0x1, 0x0);
        gbc.writeMem(0xa7e5, { 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9f90, gbc.sp());
        EXPECT(0xa7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa7e5));
        // B9 0389
        gbc.setState(0x19d, 0x9bde, 0x76c0, 0x7bae, 0x7a2f, 0x89a4, 0x1, 0x1);
        gbc.writeMem(0x19d, { 0xb9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9bde, gbc.sp());
        EXPECT(0x19e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 038A
        gbc.setState(0xfe, 0x7ad0, 0x2aa0, 0x2e45, 0x5784, 0xe311, 0x0, 0x0);
        gbc.writeMem(0xfe, { 0xb9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7ad0, gbc.sp());
        EXPECT(0xff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 038B
        gbc.setState(0xbcad, 0xced0, 0x55a0, 0x23b5, 0xb85e, 0x4aa8, 0x1, 0x0);
        gbc.writeMem(0xbcad, { 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xced0, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbcad));
        // B9 038C
        gbc.setState(0x1b0d, 0xd911, 0x5dc0, 0xc69b, 0x32ef, 0xbd30, 0x0, 0x0);
        gbc.writeMem(0x1b0d, { 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd911, gbc.sp());
        EXPECT(0x1b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 038D
        gbc.setState(0x7364, 0x545a, 0x390, 0x9a8a, 0x1989, 0x21e0, 0x0, 0x0);
        gbc.writeMem(0x7364, { 0xb9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x545a, gbc.sp());
        EXPECT(0x7365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 038E
        gbc.setState(0x504, 0x4ae4, 0x3310, 0xbca2, 0xcd9a, 0xdbf6, 0x0, 0x0);
        gbc.writeMem(0x504, { 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4ae4, gbc.sp());
        EXPECT(0x505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 038F
        gbc.setState(0x514d, 0x4d12, 0x97a0, 0x3444, 0x5877, 0x2498, 0x0, 0x0);
        gbc.writeMem(0x514d, { 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4d12, gbc.sp());
        EXPECT(0x514e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0390
        gbc.setState(0x39ea, 0x2b9a, 0x3fc0, 0x1c52, 0xfb9a, 0x64ed, 0x0, 0x1);
        gbc.writeMem(0x39ea, { 0xb9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2b9a, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0391
        gbc.setState(0x5743, 0xa96e, 0xf410, 0x6150, 0x2967, 0x28de, 0x0, 0x1);
        gbc.writeMem(0x5743, { 0xb9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa96e, gbc.sp());
        EXPECT(0x5744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 0392
        gbc.setState(0x381e, 0xa3f5, 0x7a30, 0x9a5, 0x5f45, 0xc384, 0x0, 0x0);
        gbc.writeMem(0x381e, { 0xb9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa3f5, gbc.sp());
        EXPECT(0x381f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0393
        gbc.setState(0xb426, 0x38a0, 0x48a0, 0x520c, 0xf04e, 0x4e86, 0x0, 0x0);
        gbc.writeMem(0xb426, { 0xb9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x38a0, gbc.sp());
        EXPECT(0xb427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb426));
        // B9 0395
        gbc.setState(0xb68c, 0x6173, 0x7c50, 0x6936, 0x5d1c, 0x14cb, 0x1, 0x0);
        gbc.writeMem(0xb68c, { 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6173, gbc.sp());
        EXPECT(0xb68d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb68c));
        // B9 0396
        gbc.setState(0x9a3d, 0xdc4e, 0xfe50, 0xb6b4, 0x78ed, 0xf4fa, 0x1, 0x1);
        gbc.writeMem(0x9a3d, { 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdc4e, gbc.sp());
        EXPECT(0x9a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a3d));
        // B9 0397
        gbc.setState(0x43a2, 0xff62, 0x8840, 0x968f, 0x692e, 0x2ebd, 0x1, 0x0);
        gbc.writeMem(0x43a2, { 0xb9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xff62, gbc.sp());
        EXPECT(0x43a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 0398
        gbc.setState(0x8fd0, 0xae63, 0x1240, 0x75da, 0x148f, 0x28bc, 0x0, 0x0);
        gbc.writeMem(0x8fd0, { 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xae63, gbc.sp());
        EXPECT(0x8fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8fd0));
        // B9 0399
        gbc.setState(0x5caa, 0xa79f, 0xad40, 0x1737, 0x158, 0xfdc4, 0x1, 0x1);
        gbc.writeMem(0x5caa, { 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa79f, gbc.sp());
        EXPECT(0x5cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 039A
        gbc.setState(0x6f7c, 0x3d74, 0x80f0, 0xd708, 0xc670, 0x6d82, 0x0, 0x1);
        gbc.writeMem(0x6f7c, { 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3d74, gbc.sp());
        EXPECT(0x6f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 039B
        gbc.setState(0xde1, 0x4f5a, 0x9930, 0xd1b9, 0x7b97, 0x2a92, 0x0, 0x0);
        gbc.writeMem(0xde1, { 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4f5a, gbc.sp());
        EXPECT(0xde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 039C
        gbc.setState(0x37cd, 0x1d4d, 0xaf30, 0xe17a, 0x5cfd, 0x24af, 0x0, 0x1);
        gbc.writeMem(0x37cd, { 0xb9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0x37ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 039D
        gbc.setState(0x8dc5, 0x891a, 0xf10, 0xfa84, 0x6f8b, 0xb80, 0x0, 0x0);
        gbc.writeMem(0x8dc5, { 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x891a, gbc.sp());
        EXPECT(0x8dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8dc5));
        // B9 039E
        gbc.setState(0x2e0d, 0xb1bb, 0x2a70, 0x9d46, 0x6509, 0xeee4, 0x1, 0x0);
        gbc.writeMem(0x2e0d, { 0xb9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb1bb, gbc.sp());
        EXPECT(0x2e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 039F
        gbc.setState(0xa23c, 0xd849, 0x2f60, 0x1e19, 0x9841, 0x314c, 0x1, 0x0);
        gbc.writeMem(0xa23c, { 0xb9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd849, gbc.sp());
        EXPECT(0xa23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa23c));
        // B9 03A0
        gbc.setState(0x7447, 0xdeb9, 0xb3c0, 0xb79c, 0x2ab2, 0x7d02, 0x0, 0x1);
        gbc.writeMem(0x7447, { 0xb9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdeb9, gbc.sp());
        EXPECT(0x7448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03A1
        gbc.setState(0xcf36, 0x9fab, 0xc3d0, 0x6a15, 0x78fe, 0x1cc4, 0x1, 0x0);
        gbc.writeMem(0xcf36, { 0xb9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9fab, gbc.sp());
        EXPECT(0xcf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcf36));
        // B9 03A2
        gbc.setState(0x4d28, 0x66ba, 0x9760, 0x5196, 0xcb80, 0xac2a, 0x1, 0x0);
        gbc.writeMem(0x4d28, { 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x66ba, gbc.sp());
        EXPECT(0x4d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03A3
        gbc.setState(0x49a6, 0xec39, 0x7260, 0x9c6d, 0xf605, 0x4b3e, 0x1, 0x0);
        gbc.writeMem(0x49a6, { 0xb9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xec39, gbc.sp());
        EXPECT(0x49a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03A4
        gbc.setState(0xb5c7, 0x5c73, 0xdab0, 0x43, 0xae95, 0x81df, 0x1, 0x0);
        gbc.writeMem(0xb5c7, { 0xb9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5c73, gbc.sp());
        EXPECT(0xb5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb5c7));
        // B9 03A5
        gbc.setState(0x4c5b, 0x18f6, 0xad20, 0x2f33, 0xe191, 0x3fe2, 0x0, 0x0);
        gbc.writeMem(0x4c5b, { 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x18f6, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03A6
        gbc.setState(0x7db, 0xc8cf, 0x5930, 0x7135, 0xf511, 0xc232, 0x0, 0x1);
        gbc.writeMem(0x7db, { 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc8cf, gbc.sp());
        EXPECT(0x7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03A7
        gbc.setState(0xafb8, 0x1598, 0xd350, 0xbe98, 0x7b6d, 0x5d7a, 0x1, 0x1);
        gbc.writeMem(0xafb8, { 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1598, gbc.sp());
        EXPECT(0xafb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xafb8));
        // B9 03A8
        gbc.setState(0x2d1a, 0x801, 0xd6f0, 0x6e90, 0xaf2e, 0x6653, 0x1, 0x1);
        gbc.writeMem(0x2d1a, { 0xb9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x801, gbc.sp());
        EXPECT(0x2d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03A9
        gbc.setState(0x3af5, 0xdfcf, 0x6520, 0x32fc, 0xdf8c, 0xc4e2, 0x1, 0x1);
        gbc.writeMem(0x3af5, { 0xb9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdfcf, gbc.sp());
        EXPECT(0x3af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03AA
        gbc.setState(0x2f48, 0x5c6, 0x8180, 0x373d, 0xb968, 0x943d, 0x1, 0x1);
        gbc.writeMem(0x2f48, { 0xb9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5c6, gbc.sp());
        EXPECT(0x2f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03AB
        gbc.setState(0xb15, 0x853, 0x9440, 0x66c4, 0xd5e2, 0x39bb, 0x0, 0x0);
        gbc.writeMem(0xb15, { 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x853, gbc.sp());
        EXPECT(0xb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03AC
        gbc.setState(0x3fbd, 0xb6f4, 0xcad0, 0x36db, 0xf244, 0x8891, 0x0, 0x1);
        gbc.writeMem(0x3fbd, { 0xb9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb6f4, gbc.sp());
        EXPECT(0x3fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03AD
        gbc.setState(0x7a70, 0xb2e0, 0x5e90, 0x3b93, 0x52a3, 0xc3fe, 0x1, 0x1);
        gbc.writeMem(0x7a70, { 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb2e0, gbc.sp());
        EXPECT(0x7a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03AE
        gbc.setState(0x7bd4, 0x7968, 0x910, 0xe456, 0x3019, 0xc316, 0x1, 0x0);
        gbc.writeMem(0x7bd4, { 0xb9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7968, gbc.sp());
        EXPECT(0x7bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03AF
        gbc.setState(0x46eb, 0x14dd, 0x7cc0, 0xef54, 0xa036, 0xf437, 0x1, 0x0);
        gbc.writeMem(0x46eb, { 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x14dd, gbc.sp());
        EXPECT(0x46ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03B0
        gbc.setState(0xc58e, 0xe470, 0xaf00, 0x169b, 0xe364, 0xecc1, 0x0, 0x1);
        gbc.writeMem(0xc58e, { 0xb9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0xc58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc58e));
        // B9 03B1
        gbc.setState(0x14a6, 0x5f6d, 0xd3f0, 0x934, 0x9897, 0x5789, 0x0, 0x0);
        gbc.writeMem(0x14a6, { 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5f6d, gbc.sp());
        EXPECT(0x14a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03B2
        gbc.setState(0x79d8, 0x81f8, 0x1e30, 0x1310, 0xeb60, 0x320d, 0x1, 0x1);
        gbc.writeMem(0x79d8, { 0xb9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x81f8, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03B3
        gbc.setState(0x1f72, 0xde1d, 0x3020, 0x5b49, 0x201, 0x72b5, 0x1, 0x0);
        gbc.writeMem(0x1f72, { 0xb9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xde1d, gbc.sp());
        EXPECT(0x1f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03B4
        gbc.setState(0xbc50, 0xa30d, 0x1c10, 0x9bcd, 0x1b7c, 0xcca0, 0x1, 0x0);
        gbc.writeMem(0xbc50, { 0xb9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa30d, gbc.sp());
        EXPECT(0xbc51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbc50));
        // B9 03B5
        gbc.setState(0x6933, 0xc7eb, 0x5990, 0x3f42, 0xe3e8, 0x944b, 0x0, 0x1);
        gbc.writeMem(0x6933, { 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc7eb, gbc.sp());
        EXPECT(0x6934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03B6
        gbc.setState(0x9b3f, 0xbf1b, 0xb80, 0x1708, 0xa7c6, 0x3731, 0x0, 0x1);
        gbc.writeMem(0x9b3f, { 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbf1b, gbc.sp());
        EXPECT(0x9b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9b3f));
        // B9 03B7
        gbc.setState(0xcef2, 0x43a0, 0xfbc0, 0xc4dd, 0x7b6, 0x6b81, 0x1, 0x0);
        gbc.writeMem(0xcef2, { 0xb9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x43a0, gbc.sp());
        EXPECT(0xcef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcef2));
        // B9 03B9
        gbc.setState(0x4304, 0xa6d3, 0xe640, 0x6428, 0xec0e, 0x8697, 0x1, 0x1);
        gbc.writeMem(0x4304, { 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa6d3, gbc.sp());
        EXPECT(0x4305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03BA
        gbc.setState(0xbfcc, 0x88d2, 0xb640, 0x9e5, 0xcde3, 0x5f75, 0x0, 0x1);
        gbc.writeMem(0xbfcc, { 0xb9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x88d2, gbc.sp());
        EXPECT(0xbfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbfcc));
        // B9 03BB
        gbc.setState(0xcb27, 0x5f58, 0x7e80, 0x1a5e, 0xc6e3, 0xcd6c, 0x1, 0x0);
        gbc.writeMem(0xcb27, { 0xb9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5f58, gbc.sp());
        EXPECT(0xcb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcb27));
        // B9 03BD
        gbc.setState(0x3ef8, 0x87b, 0x2b20, 0xefd, 0xdba3, 0x8207, 0x0, 0x1);
        gbc.writeMem(0x3ef8, { 0xb9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x87b, gbc.sp());
        EXPECT(0x3ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03BE
        gbc.setState(0x2368, 0xd48c, 0xb6e0, 0xcc4d, 0x8559, 0x3c6f, 0x1, 0x1);
        gbc.writeMem(0x2368, { 0xb9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd48c, gbc.sp());
        EXPECT(0x2369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03BF
        gbc.setState(0xd8f6, 0xe4ca, 0xae50, 0x8d53, 0x7d94, 0xa64c, 0x1, 0x0);
        gbc.writeMem(0xd8f6, { 0xb9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe4ca, gbc.sp());
        EXPECT(0xd8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd8f6));
        // B9 03C0
        gbc.setState(0xab6c, 0x1cb1, 0x6da0, 0xfed4, 0xf72d, 0x46ad, 0x0, 0x0);
        gbc.writeMem(0xab6c, { 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1cb1, gbc.sp());
        EXPECT(0xab6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xab6c));
        // B9 03C2
        gbc.setState(0x30ff, 0x567, 0xf390, 0x72b2, 0x17f7, 0x3653, 0x0, 0x1);
        gbc.writeMem(0x30ff, { 0xb9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x567, gbc.sp());
        EXPECT(0x3100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03C3
        gbc.setState(0x5f8a, 0x5211, 0x9d90, 0x5bfe, 0x9806, 0x4ef5, 0x0, 0x0);
        gbc.writeMem(0x5f8a, { 0xb9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5211, gbc.sp());
        EXPECT(0x5f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03C4
        gbc.setState(0x31fc, 0xe942, 0x84c0, 0x80c4, 0xe2a, 0xcb8, 0x0, 0x1);
        gbc.writeMem(0x31fc, { 0xb9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe942, gbc.sp());
        EXPECT(0x31fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03C5
        gbc.setState(0x699b, 0x7ee2, 0x9610, 0x400d, 0x2bcf, 0xda1a, 0x0, 0x0);
        gbc.writeMem(0x699b, { 0xb9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7ee2, gbc.sp());
        EXPECT(0x699c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03C6
        gbc.setState(0x7105, 0xb591, 0x47d0, 0xcbc2, 0x5d88, 0xf084, 0x0, 0x0);
        gbc.writeMem(0x7105, { 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb591, gbc.sp());
        EXPECT(0x7106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03C7
        gbc.setState(0xd2d7, 0xb2fb, 0xdf40, 0x78, 0x3eae, 0xae1a, 0x0, 0x0);
        gbc.writeMem(0xd2d7, { 0xb9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb2fb, gbc.sp());
        EXPECT(0xd2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd2d7));
        // B9 03C8
        gbc.setState(0x4b69, 0xd507, 0xd30, 0x35fb, 0x9bd9, 0xbf46, 0x1, 0x1);
        gbc.writeMem(0x4b69, { 0xb9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd507, gbc.sp());
        EXPECT(0x4b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03C9
        gbc.setState(0x6b9d, 0x1cba, 0x87c0, 0x8509, 0xb527, 0x99da, 0x1, 0x1);
        gbc.writeMem(0x6b9d, { 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1cba, gbc.sp());
        EXPECT(0x6b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03CA
        gbc.setState(0xa475, 0xe64b, 0x8fe0, 0xf0c2, 0x30fe, 0x8cf5, 0x0, 0x0);
        gbc.writeMem(0xa475, { 0xb9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe64b, gbc.sp());
        EXPECT(0xa476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa475));
        // B9 03CB
        gbc.setState(0x4a18, 0x4f82, 0xd940, 0xe421, 0x17fd, 0xc368, 0x1, 0x0);
        gbc.writeMem(0x4a18, { 0xb9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4f82, gbc.sp());
        EXPECT(0x4a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03CC
        gbc.setState(0xaa2d, 0xe738, 0xfee0, 0xc195, 0xb216, 0xbdfe, 0x0, 0x0);
        gbc.writeMem(0xaa2d, { 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe738, gbc.sp());
        EXPECT(0xaa2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaa2d));
        // B9 03CD
        gbc.setState(0xa777, 0xad2c, 0x8240, 0xeb26, 0xef1d, 0xea4f, 0x1, 0x1);
        gbc.writeMem(0xa777, { 0xb9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xad2c, gbc.sp());
        EXPECT(0xa778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa777));
        // B9 03CF
        gbc.setState(0x91e3, 0xfb1c, 0xb7e0, 0x1399, 0x3025, 0x2c21, 0x1, 0x1);
        gbc.writeMem(0x91e3, { 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfb1c, gbc.sp());
        EXPECT(0x91e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x91e3));
        // B9 03D0
        gbc.setState(0xbf37, 0x8684, 0x79b0, 0x70ab, 0xb679, 0x49fc, 0x1, 0x0);
        gbc.writeMem(0xbf37, { 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8684, gbc.sp());
        EXPECT(0xbf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbf37));
        // B9 03D1
        gbc.setState(0x3038, 0xf5e8, 0xf160, 0xf3a4, 0xf2a5, 0x6cc, 0x0, 0x1);
        gbc.writeMem(0x3038, { 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf5e8, gbc.sp());
        EXPECT(0x3039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03D2
        gbc.setState(0x2a2e, 0x53e2, 0xb630, 0x2abb, 0xeb9c, 0xdf66, 0x0, 0x0);
        gbc.writeMem(0x2a2e, { 0xb9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x53e2, gbc.sp());
        EXPECT(0x2a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03D4
        gbc.setState(0x546a, 0x6f2c, 0x97a0, 0x9488, 0x3a43, 0x2ba6, 0x0, 0x1);
        gbc.writeMem(0x546a, { 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6f2c, gbc.sp());
        EXPECT(0x546b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03D5
        gbc.setState(0x6de6, 0x4127, 0x510, 0x2a65, 0xdc42, 0x8317, 0x0, 0x1);
        gbc.writeMem(0x6de6, { 0xb9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4127, gbc.sp());
        EXPECT(0x6de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03D6
        gbc.setState(0x34c2, 0x5932, 0x6bf0, 0x7e9c, 0xb556, 0x114b, 0x0, 0x1);
        gbc.writeMem(0x34c2, { 0xb9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5932, gbc.sp());
        EXPECT(0x34c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03D7
        gbc.setState(0x435a, 0x86e5, 0x9310, 0x64ee, 0xeb32, 0x9339, 0x1, 0x1);
        gbc.writeMem(0x435a, { 0xb9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x86e5, gbc.sp());
        EXPECT(0x435b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03D8
        gbc.setState(0x6b0d, 0x818c, 0xc420, 0x30be, 0x1980, 0xbcc, 0x0, 0x0);
        gbc.writeMem(0x6b0d, { 0xb9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x818c, gbc.sp());
        EXPECT(0x6b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03D9
        gbc.setState(0x10d, 0x4fb0, 0xbb20, 0xc88, 0xe727, 0x1515, 0x1, 0x1);
        gbc.writeMem(0x10d, { 0xb9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4fb0, gbc.sp());
        EXPECT(0x10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03DA
        gbc.setState(0x1202, 0xd6d8, 0x2a30, 0xd315, 0x197c, 0xf992, 0x0, 0x1);
        gbc.writeMem(0x1202, { 0xb9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd6d8, gbc.sp());
        EXPECT(0x1203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03DC
        gbc.setState(0xaacc, 0x3cd4, 0xe620, 0xa59f, 0x7a63, 0x14f2, 0x0, 0x0);
        gbc.writeMem(0xaacc, { 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3cd4, gbc.sp());
        EXPECT(0xaacd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaacc));
        // B9 03DD
        gbc.setState(0xde32, 0xdbad, 0x23b0, 0x24e5, 0xaed8, 0xc488, 0x1, 0x0);
        gbc.writeMem(0xde32, { 0xb9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdbad, gbc.sp());
        EXPECT(0xde33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xde32));
        // B9 03DE
        gbc.setState(0x9819, 0x10d2, 0xe5c0, 0xf5d3, 0xbd67, 0x16d4, 0x0, 0x1);
        gbc.writeMem(0x9819, { 0xb9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x10d2, gbc.sp());
        EXPECT(0x981a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9819));
        // B9 03DF
        gbc.setState(0x1748, 0x59eb, 0x260, 0xd7a6, 0x9f1a, 0x9bbd, 0x0, 0x1);
        gbc.writeMem(0x1748, { 0xb9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x59eb, gbc.sp());
        EXPECT(0x1749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03E0
        gbc.setState(0xcebf, 0xe86f, 0x4f40, 0xc82d, 0x453b, 0x2961, 0x1, 0x1);
        gbc.writeMem(0xcebf, { 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe86f, gbc.sp());
        EXPECT(0xcec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcebf));
        // B9 03E1
        gbc.setState(0x3502, 0x581, 0xf900, 0xc5d8, 0x9507, 0x94f7, 0x1, 0x0);
        gbc.writeMem(0x3502, { 0xb9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x581, gbc.sp());
        EXPECT(0x3503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03E2
        gbc.setState(0x565c, 0x548b, 0xe1d0, 0xde1e, 0x5807, 0x3102, 0x0, 0x0);
        gbc.writeMem(0x565c, { 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x548b, gbc.sp());
        EXPECT(0x565d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B9 03E3
        gbc.setState(0x638e, 0xd207, 0x7d50, 0xc9c6, 0xd8ee, 0x33e8, 0x0, 0x1);
        gbc.writeMem(0x638e, { 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd207, gbc.sp());
        EXPECT(0x638f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // B9 03E5
        gbc.setState(0x9d20, 0x9cdb, 0xa690, 0x27eb, 0xbdfa, 0x1241, 0x0, 0x1);
        gbc.writeMem(0x9d20, { 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9d20));
        // B9 03E6
        gbc.setState(0xbe3d, 0x4c86, 0x3720, 0xc5bb, 0xe7fb, 0xebfe, 0x1, 0x0);
        gbc.writeMem(0xbe3d, { 0xb9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4c86, gbc.sp());
        EXPECT(0xbe3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbe3d));
        // B9 03E7
        gbc.setState(0xeb12, 0xe197, 0xdd00, 0xcd48, 0x4fc3, 0xb0e, 0x0, 0x0);
        gbc.writeMem(0xeb12, { 0xb9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe197, gbc.sp());
        EXPECT(0xeb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xeb12));
    }
