    TEST(gbcemu, opcode_cb_00) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 00 0000
        gbc.setState(0xc817, 0xe460, 0x21e0, 0xbd27, 0x376d, 0x50a3, 0x1, 0x0);
        gbc.writeMem(0xc817, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe460);
        EXPECT(gbc.pc(), 0xc819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc817), 0xcb);
        EXPECT(gbc.readMem(0xc818), 0x0);
        // CB 00 0001
        gbc.setState(0x576d, 0xc239, 0x8480, 0x7d86, 0xac60, 0x810c, 0x0, 0x1);
        gbc.writeMem(0x576d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc239);
        EXPECT(gbc.pc(), 0x576f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0002
        gbc.setState(0x5b76, 0xbb16, 0xaf30, 0x31fd, 0xf793, 0xd1f9, 0x0, 0x1);
        gbc.writeMem(0x5b76, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbb16);
        EXPECT(gbc.pc(), 0x5b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0003
        gbc.setState(0xa2ea, 0x5b0c, 0xb7a0, 0x36ca, 0x1fe3, 0x713c, 0x1, 0x1);
        gbc.writeMem(0xa2ea, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5b0c);
        EXPECT(gbc.pc(), 0xa2ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ea), 0xcb);
        EXPECT(gbc.readMem(0xa2eb), 0x0);
        // CB 00 0004
        gbc.setState(0x54e9, 0xbc33, 0xdab0, 0xe299, 0x9aab, 0x7328, 0x0, 0x1);
        gbc.writeMem(0x54e9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbc33);
        EXPECT(gbc.pc(), 0x54eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0005
        gbc.setState(0x48d, 0x59d, 0xb6c0, 0x64d5, 0xb6fc, 0x1410, 0x1, 0x0);
        gbc.writeMem(0x48d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x59d);
        EXPECT(gbc.pc(), 0x48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0006
        gbc.setState(0x9455, 0x460, 0xb030, 0x853a, 0x63c6, 0xe6ad, 0x1, 0x0);
        gbc.writeMem(0x9455, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x460);
        EXPECT(gbc.pc(), 0x9457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9455), 0xcb);
        EXPECT(gbc.readMem(0x9456), 0x0);
        // CB 00 0008
        gbc.setState(0x7365, 0x4d9c, 0x8700, 0x15c0, 0x5dbc, 0x6433, 0x1, 0x0);
        gbc.writeMem(0x7365, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4d9c);
        EXPECT(gbc.pc(), 0x7367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0009
        gbc.setState(0x2762, 0x9f2f, 0xab0, 0x6878, 0xccc5, 0xcc51, 0x0, 0x0);
        gbc.writeMem(0x2762, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9f2f);
        EXPECT(gbc.pc(), 0x2764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 000A
        gbc.setState(0x1af6, 0x2012, 0xfdf0, 0xcae9, 0x3e27, 0xc590, 0x0, 0x1);
        gbc.writeMem(0x1af6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2012);
        EXPECT(gbc.pc(), 0x1af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 000B
        gbc.setState(0xa2b7, 0x7e1f, 0x6ed0, 0x57c8, 0xb561, 0x1dfa, 0x1, 0x0);
        gbc.writeMem(0xa2b7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7e1f);
        EXPECT(gbc.pc(), 0xa2b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b7), 0xcb);
        EXPECT(gbc.readMem(0xa2b8), 0x0);
        // CB 00 000C
        gbc.setState(0x550a, 0x669c, 0xdbf0, 0x3e8f, 0xe6e8, 0xb659, 0x0, 0x1);
        gbc.writeMem(0x550a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x669c);
        EXPECT(gbc.pc(), 0x550c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 000D
        gbc.setState(0x2028, 0xf6f8, 0xe160, 0x85c0, 0x1649, 0xcb61, 0x0, 0x0);
        gbc.writeMem(0x2028, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf6f8);
        EXPECT(gbc.pc(), 0x202a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 000E
        gbc.setState(0x4816, 0xdf9e, 0xca70, 0xe9ad, 0xf811, 0xb96e, 0x0, 0x0);
        gbc.writeMem(0x4816, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdf9e);
        EXPECT(gbc.pc(), 0x4818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 000F
        gbc.setState(0x5e2a, 0x7f66, 0x9fd0, 0x2544, 0xd67b, 0x2c9c, 0x1, 0x0);
        gbc.writeMem(0x5e2a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7f66);
        EXPECT(gbc.pc(), 0x5e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0010
        gbc.setState(0x6ab4, 0x1160, 0xcc90, 0xbe02, 0xef62, 0x1ead, 0x1, 0x0);
        gbc.writeMem(0x6ab4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1160);
        EXPECT(gbc.pc(), 0x6ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0011
        gbc.setState(0xbe70, 0x7529, 0xcc20, 0x6d94, 0x1826, 0xae98, 0x1, 0x1);
        gbc.writeMem(0xbe70, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7529);
        EXPECT(gbc.pc(), 0xbe72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe70), 0xcb);
        EXPECT(gbc.readMem(0xbe71), 0x0);
        // CB 00 0012
        gbc.setState(0x50e, 0xba02, 0xea10, 0xa50b, 0xf6e2, 0xb392, 0x1, 0x0);
        gbc.writeMem(0x50e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xba02);
        EXPECT(gbc.pc(), 0x510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0013
        gbc.setState(0xe233, 0xfcb0, 0x1bc0, 0xc90, 0x4c3f, 0xa096, 0x1, 0x1);
        gbc.writeMem(0xe233, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfcb0);
        EXPECT(gbc.pc(), 0xe235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe233), 0xcb);
        EXPECT(gbc.readMem(0xe234), 0x0);
        // CB 00 0014
        gbc.setState(0x3047, 0x38d6, 0x4fd0, 0xc19c, 0xb4d9, 0xaa06, 0x0, 0x0);
        gbc.writeMem(0x3047, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x38d6);
        EXPECT(gbc.pc(), 0x3049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0015
        gbc.setState(0x2d6c, 0xdae6, 0x83a0, 0x5b10, 0x56b9, 0x72f4, 0x0, 0x1);
        gbc.writeMem(0x2d6c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdae6);
        EXPECT(gbc.pc(), 0x2d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0016
        gbc.setState(0x43f, 0xeabe, 0xe1a0, 0x2b74, 0x9a26, 0x54df, 0x1, 0x0);
        gbc.writeMem(0x43f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xeabe);
        EXPECT(gbc.pc(), 0x441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0017
        gbc.setState(0xb851, 0x93d6, 0xbd40, 0x316e, 0x65d5, 0xe6e9, 0x1, 0x0);
        gbc.writeMem(0xb851, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x93d6);
        EXPECT(gbc.pc(), 0xb853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb851), 0xcb);
        EXPECT(gbc.readMem(0xb852), 0x0);
        // CB 00 0018
        gbc.setState(0x60e7, 0xac24, 0x780, 0xa54d, 0x92f4, 0x1321, 0x1, 0x0);
        gbc.writeMem(0x60e7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xac24);
        EXPECT(gbc.pc(), 0x60e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0019
        gbc.setState(0x3eea, 0x61b7, 0x4630, 0x7f7c, 0xde60, 0x236c, 0x0, 0x0);
        gbc.writeMem(0x3eea, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x61b7);
        EXPECT(gbc.pc(), 0x3eec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 001A
        gbc.setState(0x53be, 0x83ce, 0x4cd0, 0x8f52, 0x36ea, 0x949d, 0x0, 0x0);
        gbc.writeMem(0x53be, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x83ce);
        EXPECT(gbc.pc(), 0x53c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 001B
        gbc.setState(0xb1a8, 0x181c, 0x65a0, 0x1976, 0x826, 0x5dc2, 0x0, 0x1);
        gbc.writeMem(0xb1a8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x181c);
        EXPECT(gbc.pc(), 0xb1aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a8), 0xcb);
        EXPECT(gbc.readMem(0xb1a9), 0x0);
        // CB 00 001C
        gbc.setState(0xccf8, 0x57ba, 0x4b30, 0x6c53, 0xd6c7, 0x93ee, 0x0, 0x0);
        gbc.writeMem(0xccf8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x57ba);
        EXPECT(gbc.pc(), 0xccfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf8), 0xcb);
        EXPECT(gbc.readMem(0xccf9), 0x0);
        // CB 00 001D
        gbc.setState(0x61a5, 0x10a8, 0x3830, 0x12e1, 0x2e68, 0x9a23, 0x1, 0x0);
        gbc.writeMem(0x61a5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x10a8);
        EXPECT(gbc.pc(), 0x61a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 001E
        gbc.setState(0x7188, 0xa7ba, 0x3690, 0xf8f3, 0x9eae, 0x2417, 0x0, 0x1);
        gbc.writeMem(0x7188, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa7ba);
        EXPECT(gbc.pc(), 0x718a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 001F
        gbc.setState(0x33c9, 0xc24b, 0xbfb0, 0x8661, 0x6a7c, 0x1129, 0x1, 0x0);
        gbc.writeMem(0x33c9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc24b);
        EXPECT(gbc.pc(), 0x33cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0020
        gbc.setState(0x8c6f, 0x6f78, 0x5510, 0xd50, 0x9144, 0x1cab, 0x1, 0x0);
        gbc.writeMem(0x8c6f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6f78);
        EXPECT(gbc.pc(), 0x8c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c6f), 0xcb);
        EXPECT(gbc.readMem(0x8c70), 0x0);
        // CB 00 0021
        gbc.setState(0x494c, 0x2904, 0xc560, 0xc866, 0x5015, 0x3fc5, 0x1, 0x1);
        gbc.writeMem(0x494c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2904);
        EXPECT(gbc.pc(), 0x494e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0022
        gbc.setState(0x5693, 0x191b, 0x86a0, 0x8b7b, 0xce3c, 0x3878, 0x0, 0x1);
        gbc.writeMem(0x5693, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x191b);
        EXPECT(gbc.pc(), 0x5695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0023
        gbc.setState(0x6ad1, 0xef63, 0x5cc0, 0x98c5, 0x6d76, 0xc596, 0x0, 0x0);
        gbc.writeMem(0x6ad1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xef63);
        EXPECT(gbc.pc(), 0x6ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0024
        gbc.setState(0xed24, 0x3594, 0x8cd0, 0x8bf4, 0xdec4, 0x7e5d, 0x1, 0x1);
        gbc.writeMem(0xed24, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3594);
        EXPECT(gbc.pc(), 0xed26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed24), 0xcb);
        EXPECT(gbc.readMem(0xed25), 0x0);
        // CB 00 0027
        gbc.setState(0x69a4, 0x14d6, 0x1c40, 0xac0f, 0x3a56, 0xe4a8, 0x0, 0x1);
        gbc.writeMem(0x69a4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x14d6);
        EXPECT(gbc.pc(), 0x69a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0028
        gbc.setState(0x57c9, 0xc0c5, 0xf590, 0xf323, 0xf9f1, 0xbefa, 0x1, 0x0);
        gbc.writeMem(0x57c9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc0c5);
        EXPECT(gbc.pc(), 0x57cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0029
        gbc.setState(0x9836, 0xcf39, 0x970, 0x27d4, 0xaf74, 0x8a9c, 0x1, 0x0);
        gbc.writeMem(0x9836, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xcf39);
        EXPECT(gbc.pc(), 0x9838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9836), 0xcb);
        EXPECT(gbc.readMem(0x9837), 0x0);
        // CB 00 002A
        gbc.setState(0x10af, 0x665a, 0x30e0, 0xf20d, 0xc5df, 0x2342, 0x1, 0x0);
        gbc.writeMem(0x10af, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x665a);
        EXPECT(gbc.pc(), 0x10b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 002B
        gbc.setState(0x564c, 0x5c80, 0xa560, 0xe5a5, 0xc556, 0xd13d, 0x1, 0x1);
        gbc.writeMem(0x564c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5c80);
        EXPECT(gbc.pc(), 0x564e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 002C
        gbc.setState(0x1bb, 0x609e, 0x59e0, 0xe615, 0xc1a, 0xde58, 0x0, 0x1);
        gbc.writeMem(0x1bb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x609e);
        EXPECT(gbc.pc(), 0x1bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 002D
        gbc.setState(0x9987, 0xe635, 0x7340, 0x88d9, 0x8ce4, 0x8cb1, 0x1, 0x1);
        gbc.writeMem(0x9987, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe635);
        EXPECT(gbc.pc(), 0x9989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9987), 0xcb);
        EXPECT(gbc.readMem(0x9988), 0x0);
        // CB 00 002E
        gbc.setState(0x72da, 0x2db6, 0xb8f0, 0xdeac, 0x9f02, 0xb96e, 0x0, 0x0);
        gbc.writeMem(0x72da, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2db6);
        EXPECT(gbc.pc(), 0x72dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0030
        gbc.setState(0xc166, 0x1d40, 0x8ec0, 0x3c62, 0x9164, 0x41d4, 0x0, 0x0);
        gbc.writeMem(0xc166, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1d40);
        EXPECT(gbc.pc(), 0xc168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc166), 0xcb);
        EXPECT(gbc.readMem(0xc167), 0x0);
        // CB 00 0031
        gbc.setState(0x26eb, 0xc200, 0x1b10, 0x42e7, 0x4909, 0xf44e, 0x1, 0x1);
        gbc.writeMem(0x26eb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc200);
        EXPECT(gbc.pc(), 0x26ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0032
        gbc.setState(0x13bb, 0x9e81, 0x6f00, 0xb3f5, 0x76fd, 0xe297, 0x0, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9e81);
        EXPECT(gbc.pc(), 0x13bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0033
        gbc.setState(0xc8b8, 0xb79d, 0xf540, 0xd8d, 0xdedd, 0x7e09, 0x0, 0x1);
        gbc.writeMem(0xc8b8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb79d);
        EXPECT(gbc.pc(), 0xc8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b8), 0xcb);
        EXPECT(gbc.readMem(0xc8b9), 0x0);
        // CB 00 0035
        gbc.setState(0x232b, 0xc03b, 0x5970, 0x20c7, 0xb97e, 0x88c9, 0x0, 0x0);
        gbc.writeMem(0x232b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc03b);
        EXPECT(gbc.pc(), 0x232d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0036
        gbc.setState(0xe781, 0x279c, 0x8c80, 0x87d0, 0x30e3, 0x2384, 0x1, 0x1);
        gbc.writeMem(0xe781, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x279c);
        EXPECT(gbc.pc(), 0xe783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe781), 0xcb);
        EXPECT(gbc.readMem(0xe782), 0x0);
        // CB 00 0037
        gbc.setState(0xbe02, 0x6638, 0x2280, 0xcbb5, 0xd279, 0xd79, 0x0, 0x0);
        gbc.writeMem(0xbe02, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6638);
        EXPECT(gbc.pc(), 0xbe04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe02), 0xcb);
        EXPECT(gbc.readMem(0xbe03), 0x0);
        // CB 00 0038
        gbc.setState(0x9d70, 0xf697, 0xa0c0, 0x7796, 0x88f5, 0x3ea4, 0x1, 0x1);
        gbc.writeMem(0x9d70, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf697);
        EXPECT(gbc.pc(), 0x9d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d70), 0xcb);
        EXPECT(gbc.readMem(0x9d71), 0x0);
        // CB 00 0039
        gbc.setState(0x14ec, 0x5509, 0x800, 0xda0f, 0x1941, 0x8ec8, 0x0, 0x0);
        gbc.writeMem(0x14ec, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5509);
        EXPECT(gbc.pc(), 0x14ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 003A
        gbc.setState(0xef28, 0xcee2, 0x10b0, 0xfaaa, 0x6c9a, 0x1c5f, 0x1, 0x0);
        gbc.writeMem(0xef28, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcee2);
        EXPECT(gbc.pc(), 0xef2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef28), 0xcb);
        EXPECT(gbc.readMem(0xef29), 0x0);
        // CB 00 003B
        gbc.setState(0x906f, 0x3a7, 0x26c0, 0xd5f8, 0x717b, 0x2fe5, 0x1, 0x0);
        gbc.writeMem(0x906f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3a7);
        EXPECT(gbc.pc(), 0x9071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x906f), 0xcb);
        EXPECT(gbc.readMem(0x9070), 0x0);
        // CB 00 003C
        gbc.setState(0x4a7e, 0x3179, 0x2ce0, 0xbe6f, 0x7f06, 0x28d4, 0x0, 0x0);
        gbc.writeMem(0x4a7e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3179);
        EXPECT(gbc.pc(), 0x4a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 003D
        gbc.setState(0x7986, 0xb0, 0xc900, 0xd070, 0x6ff5, 0xff56, 0x0, 0x0);
        gbc.writeMem(0x7986, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb0);
        EXPECT(gbc.pc(), 0x7988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 003E
        gbc.setState(0x3619, 0x88cd, 0x9540, 0x2f0e, 0x3e05, 0xa703, 0x1, 0x1);
        gbc.writeMem(0x3619, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x88cd);
        EXPECT(gbc.pc(), 0x361b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 003F
        gbc.setState(0xcbc3, 0xbff7, 0xead0, 0xa0fc, 0xebbe, 0xc851, 0x1, 0x0);
        gbc.writeMem(0xcbc3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xbff7);
        EXPECT(gbc.pc(), 0xcbc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbc3), 0xcb);
        EXPECT(gbc.readMem(0xcbc4), 0x0);
        // CB 00 0040
        gbc.setState(0x60d0, 0xa5f5, 0x8ee0, 0x26e1, 0x1022, 0x78df, 0x1, 0x1);
        gbc.writeMem(0x60d0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa5f5);
        EXPECT(gbc.pc(), 0x60d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0042
        gbc.setState(0x3f76, 0xacf6, 0x590, 0x3249, 0x4c17, 0xde8, 0x1, 0x0);
        gbc.writeMem(0x3f76, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xacf6);
        EXPECT(gbc.pc(), 0x3f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0043
        gbc.setState(0x5e3f, 0xb74b, 0x830, 0x5358, 0x144d, 0xdd62, 0x0, 0x1);
        gbc.writeMem(0x5e3f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb74b);
        EXPECT(gbc.pc(), 0x5e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0044
        gbc.setState(0xc4a2, 0xaa2, 0x6ff0, 0x4f60, 0x681a, 0xac36, 0x0, 0x1);
        gbc.writeMem(0xc4a2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xaa2);
        EXPECT(gbc.pc(), 0xc4a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a2), 0xcb);
        EXPECT(gbc.readMem(0xc4a3), 0x0);
        // CB 00 0045
        gbc.setState(0x5746, 0xfff, 0xc3d0, 0xcac8, 0xeb1c, 0x2feb, 0x1, 0x1);
        gbc.writeMem(0x5746, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfff);
        EXPECT(gbc.pc(), 0x5748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0046
        gbc.setState(0xb106, 0x4f14, 0xd4e0, 0x770d, 0xf75c, 0x5e2c, 0x0, 0x1);
        gbc.writeMem(0xb106, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4f14);
        EXPECT(gbc.pc(), 0xb108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb106), 0xcb);
        EXPECT(gbc.readMem(0xb107), 0x0);
        // CB 00 0047
        gbc.setState(0xc10d, 0xcd68, 0xfa70, 0x3aee, 0x8456, 0x9ac6, 0x0, 0x1);
        gbc.writeMem(0xc10d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcd68);
        EXPECT(gbc.pc(), 0xc10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10d), 0xcb);
        EXPECT(gbc.readMem(0xc10e), 0x0);
        // CB 00 0049
        gbc.setState(0x4f92, 0x8471, 0x40b0, 0x4f14, 0x91b2, 0xe3ce, 0x1, 0x1);
        gbc.writeMem(0x4f92, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8471);
        EXPECT(gbc.pc(), 0x4f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 004A
        gbc.setState(0x4198, 0x5b7c, 0xf310, 0x4a20, 0x7177, 0xa9f5, 0x0, 0x1);
        gbc.writeMem(0x4198, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5b7c);
        EXPECT(gbc.pc(), 0x419a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 004B
        gbc.setState(0xeead, 0xf25d, 0x6710, 0x5379, 0x58bd, 0xa14d, 0x0, 0x1);
        gbc.writeMem(0xeead, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf25d);
        EXPECT(gbc.pc(), 0xeeaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeead), 0xcb);
        EXPECT(gbc.readMem(0xeeae), 0x0);
        // CB 00 004C
        gbc.setState(0x1939, 0x681f, 0xd180, 0x27dd, 0x9bc1, 0x223e, 0x1, 0x0);
        gbc.writeMem(0x1939, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x681f);
        EXPECT(gbc.pc(), 0x193b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 004D
        gbc.setState(0x27d9, 0xd920, 0x59c0, 0x5e66, 0x832c, 0x3e96, 0x1, 0x0);
        gbc.writeMem(0x27d9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd920);
        EXPECT(gbc.pc(), 0x27db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 004E
        gbc.setState(0x243, 0x2e46, 0x92a0, 0xd00d, 0x2243, 0xad8e, 0x1, 0x0);
        gbc.writeMem(0x243, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2e46);
        EXPECT(gbc.pc(), 0x245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 004F
        gbc.setState(0x9617, 0x14b0, 0xe6c0, 0xfe4b, 0xa112, 0xa4c2, 0x1, 0x1);
        gbc.writeMem(0x9617, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x14b0);
        EXPECT(gbc.pc(), 0x9619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9617), 0xcb);
        EXPECT(gbc.readMem(0x9618), 0x0);
        // CB 00 0050
        gbc.setState(0x460f, 0xdfb, 0x4420, 0xe721, 0xcfac, 0xd6b0, 0x1, 0x0);
        gbc.writeMem(0x460f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdfb);
        EXPECT(gbc.pc(), 0x4611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0051
        gbc.setState(0x59a2, 0xff1c, 0x1f70, 0xb42e, 0xf652, 0x5e94, 0x0, 0x0);
        gbc.writeMem(0x59a2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xff1c);
        EXPECT(gbc.pc(), 0x59a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0052
        gbc.setState(0x127b, 0x6ce9, 0x5ed0, 0x56a8, 0x1f10, 0x5061, 0x1, 0x1);
        gbc.writeMem(0x127b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6ce9);
        EXPECT(gbc.pc(), 0x127d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0053
        gbc.setState(0xbd17, 0x2684, 0x31d0, 0x57df, 0x7da8, 0x4a42, 0x0, 0x0);
        gbc.writeMem(0xbd17, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2684);
        EXPECT(gbc.pc(), 0xbd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd17), 0xcb);
        EXPECT(gbc.readMem(0xbd18), 0x0);
        // CB 00 0054
        gbc.setState(0x9594, 0x449b, 0x8570, 0x778c, 0x9c5c, 0x839b, 0x1, 0x1);
        gbc.writeMem(0x9594, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x449b);
        EXPECT(gbc.pc(), 0x9596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9594), 0xcb);
        EXPECT(gbc.readMem(0x9595), 0x0);
        // CB 00 0055
        gbc.setState(0xeb5b, 0x959, 0xb420, 0x393e, 0x773e, 0x43c3, 0x0, 0x0);
        gbc.writeMem(0xeb5b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x959);
        EXPECT(gbc.pc(), 0xeb5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb5b), 0xcb);
        EXPECT(gbc.readMem(0xeb5c), 0x0);
        // CB 00 0056
        gbc.setState(0x140f, 0x3d3a, 0x82e0, 0xaddf, 0x363e, 0xbb7b, 0x1, 0x0);
        gbc.writeMem(0x140f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3d3a);
        EXPECT(gbc.pc(), 0x1411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0057
        gbc.setState(0x5e32, 0x9def, 0x8c40, 0xf4b2, 0xbd11, 0x5cae, 0x1, 0x0);
        gbc.writeMem(0x5e32, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9def);
        EXPECT(gbc.pc(), 0x5e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0058
        gbc.setState(0x73fb, 0x9cc7, 0x96c0, 0xc57d, 0xe90c, 0x2fc6, 0x1, 0x1);
        gbc.writeMem(0x73fb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9cc7);
        EXPECT(gbc.pc(), 0x73fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0059
        gbc.setState(0x8cc, 0x1970, 0x9af0, 0xa245, 0x661d, 0xc84, 0x0, 0x0);
        gbc.writeMem(0x8cc, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1970);
        EXPECT(gbc.pc(), 0x8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 005A
        gbc.setState(0xcfd6, 0x38f6, 0x5690, 0x87a9, 0xee8a, 0x6a7f, 0x1, 0x1);
        gbc.writeMem(0xcfd6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x38f6);
        EXPECT(gbc.pc(), 0xcfd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd6), 0xcb);
        EXPECT(gbc.readMem(0xcfd7), 0x0);
        // CB 00 005B
        gbc.setState(0xccdd, 0xa430, 0x3d10, 0x75b0, 0x167c, 0x8693, 0x1, 0x0);
        gbc.writeMem(0xccdd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa430);
        EXPECT(gbc.pc(), 0xccdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccdd), 0xcb);
        EXPECT(gbc.readMem(0xccde), 0x0);
        // CB 00 005C
        gbc.setState(0xc8a3, 0x3f61, 0xaf20, 0x9291, 0x356f, 0x78dd, 0x1, 0x0);
        gbc.writeMem(0xc8a3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3f61);
        EXPECT(gbc.pc(), 0xc8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a3), 0xcb);
        EXPECT(gbc.readMem(0xc8a4), 0x0);
        // CB 00 005D
        gbc.setState(0xd68f, 0xc6bb, 0x830, 0xcce0, 0xedd4, 0xecf0, 0x0, 0x1);
        gbc.writeMem(0xd68f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc6bb);
        EXPECT(gbc.pc(), 0xd691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68f), 0xcb);
        EXPECT(gbc.readMem(0xd690), 0x0);
        // CB 00 005F
        gbc.setState(0xfe1, 0xd8a, 0xd7a0, 0x737b, 0xc8e8, 0x229c, 0x1, 0x0);
        gbc.writeMem(0xfe1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd8a);
        EXPECT(gbc.pc(), 0xfe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0061
        gbc.setState(0x4bf4, 0xefe2, 0x1de0, 0x720d, 0x517e, 0x532d, 0x0, 0x1);
        gbc.writeMem(0x4bf4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xefe2);
        EXPECT(gbc.pc(), 0x4bf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0062
        gbc.setState(0x3e6d, 0xa6c4, 0xc940, 0xcb2a, 0xecf5, 0xb2ed, 0x0, 0x0);
        gbc.writeMem(0x3e6d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa6c4);
        EXPECT(gbc.pc(), 0x3e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0063
        gbc.setState(0x25d, 0xaaa, 0x8da0, 0x3384, 0x6e01, 0xa4aa, 0x0, 0x1);
        gbc.writeMem(0x25d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xaaa);
        EXPECT(gbc.pc(), 0x25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0064
        gbc.setState(0x5eb8, 0xc3e9, 0x150, 0x2e4d, 0xe769, 0x508b, 0x0, 0x0);
        gbc.writeMem(0x5eb8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc3e9);
        EXPECT(gbc.pc(), 0x5eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0065
        gbc.setState(0x1f3c, 0xeee5, 0xc9d0, 0xced5, 0xb7b0, 0x5070, 0x1, 0x0);
        gbc.writeMem(0x1f3c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xeee5);
        EXPECT(gbc.pc(), 0x1f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0066
        gbc.setState(0xd797, 0x2b08, 0xc140, 0x2979, 0x6dfc, 0xb60c, 0x1, 0x1);
        gbc.writeMem(0xd797, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2b08);
        EXPECT(gbc.pc(), 0xd799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd797), 0xcb);
        EXPECT(gbc.readMem(0xd798), 0x0);
        // CB 00 0067
        gbc.setState(0x5dfa, 0xbfdc, 0xc870, 0x99ee, 0xd1fa, 0x7281, 0x1, 0x0);
        gbc.writeMem(0x5dfa, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbfdc);
        EXPECT(gbc.pc(), 0x5dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0068
        gbc.setState(0xb3db, 0x487a, 0x6820, 0x9c8c, 0x69ac, 0xd2b8, 0x1, 0x1);
        gbc.writeMem(0xb3db, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x487a);
        EXPECT(gbc.pc(), 0xb3dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3db), 0xcb);
        EXPECT(gbc.readMem(0xb3dc), 0x0);
        // CB 00 0069
        gbc.setState(0x739b, 0x1782, 0x2930, 0xda65, 0xe9c6, 0xbc72, 0x0, 0x0);
        gbc.writeMem(0x739b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1782);
        EXPECT(gbc.pc(), 0x739d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 006A
        gbc.setState(0x4c5b, 0xbd4b, 0x52e0, 0x565c, 0x7a1e, 0x2e4c, 0x1, 0x0);
        gbc.writeMem(0x4c5b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbd4b);
        EXPECT(gbc.pc(), 0x4c5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 006B
        gbc.setState(0xdbaf, 0x7166, 0x6b10, 0x4b5a, 0x1b42, 0x8ad2, 0x0, 0x1);
        gbc.writeMem(0xdbaf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7166);
        EXPECT(gbc.pc(), 0xdbb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbaf), 0xcb);
        EXPECT(gbc.readMem(0xdbb0), 0x0);
        // CB 00 006C
        gbc.setState(0x3d01, 0xc986, 0x6e30, 0x1286, 0x54c9, 0xfbe3, 0x1, 0x1);
        gbc.writeMem(0x3d01, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc986);
        EXPECT(gbc.pc(), 0x3d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 006D
        gbc.setState(0x8190, 0x1b73, 0x1020, 0x2fcf, 0xdfda, 0x3ebb, 0x0, 0x1);
        gbc.writeMem(0x8190, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1b73);
        EXPECT(gbc.pc(), 0x8192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8190), 0xcb);
        EXPECT(gbc.readMem(0x8191), 0x0);
        // CB 00 006E
        gbc.setState(0x97af, 0x53e7, 0x5300, 0x8259, 0x2b43, 0xf09b, 0x1, 0x0);
        gbc.writeMem(0x97af, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x53e7);
        EXPECT(gbc.pc(), 0x97b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97af), 0xcb);
        EXPECT(gbc.readMem(0x97b0), 0x0);
        // CB 00 006F
        gbc.setState(0xa884, 0xefa6, 0x110, 0xeef3, 0x431, 0x6418, 0x1, 0x0);
        gbc.writeMem(0xa884, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xefa6);
        EXPECT(gbc.pc(), 0xa886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa884), 0xcb);
        EXPECT(gbc.readMem(0xa885), 0x0);
        // CB 00 0070
        gbc.setState(0xc265, 0x3f65, 0x5660, 0x2370, 0xcdfa, 0x517, 0x1, 0x0);
        gbc.writeMem(0xc265, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3f65);
        EXPECT(gbc.pc(), 0xc267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc265), 0xcb);
        EXPECT(gbc.readMem(0xc266), 0x0);
        // CB 00 0071
        gbc.setState(0xb776, 0x29a4, 0xb960, 0xc448, 0x68fc, 0x4701, 0x1, 0x1);
        gbc.writeMem(0xb776, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x29a4);
        EXPECT(gbc.pc(), 0xb778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb776), 0xcb);
        EXPECT(gbc.readMem(0xb777), 0x0);
        // CB 00 0072
        gbc.setState(0xa345, 0x61e3, 0x9c20, 0x38ed, 0x8361, 0x25a9, 0x1, 0x0);
        gbc.writeMem(0xa345, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x61e3);
        EXPECT(gbc.pc(), 0xa347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa345), 0xcb);
        EXPECT(gbc.readMem(0xa346), 0x0);
        // CB 00 0074
        gbc.setState(0x968a, 0xbb91, 0xf0c0, 0x9c5, 0x1151, 0xcd53, 0x0, 0x1);
        gbc.writeMem(0x968a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbb91);
        EXPECT(gbc.pc(), 0x968c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968a), 0xcb);
        EXPECT(gbc.readMem(0x968b), 0x0);
        // CB 00 0075
        gbc.setState(0x9833, 0x4df7, 0x3b10, 0x346, 0xcbf5, 0x457e, 0x0, 0x0);
        gbc.writeMem(0x9833, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4df7);
        EXPECT(gbc.pc(), 0x9835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9833), 0xcb);
        EXPECT(gbc.readMem(0x9834), 0x0);
        // CB 00 0076
        gbc.setState(0x8e91, 0x3490, 0xe5c0, 0x3731, 0x51ab, 0x48f1, 0x1, 0x1);
        gbc.writeMem(0x8e91, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3490);
        EXPECT(gbc.pc(), 0x8e93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e91), 0xcb);
        EXPECT(gbc.readMem(0x8e92), 0x0);
        // CB 00 0077
        gbc.setState(0x76a3, 0x7b9, 0x6470, 0xfaa5, 0xe4ce, 0x751a, 0x0, 0x1);
        gbc.writeMem(0x76a3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7b9);
        EXPECT(gbc.pc(), 0x76a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0078
        gbc.setState(0x9509, 0x6dc2, 0xecd0, 0x379c, 0xe39b, 0x7d5, 0x0, 0x1);
        gbc.writeMem(0x9509, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6dc2);
        EXPECT(gbc.pc(), 0x950b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9509), 0xcb);
        EXPECT(gbc.readMem(0x950a), 0x0);
        // CB 00 007A
        gbc.setState(0x77a6, 0x4c29, 0x6e30, 0xd0ce, 0x25be, 0x5c2a, 0x1, 0x0);
        gbc.writeMem(0x77a6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4c29);
        EXPECT(gbc.pc(), 0x77a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 007B
        gbc.setState(0x6440, 0x1bc4, 0x3d80, 0x665, 0xa1b2, 0x9217, 0x1, 0x0);
        gbc.writeMem(0x6440, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1bc4);
        EXPECT(gbc.pc(), 0x6442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 007C
        gbc.setState(0xc3db, 0x4627, 0x2650, 0x5b5f, 0xe2e, 0x4db2, 0x0, 0x0);
        gbc.writeMem(0xc3db, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4627);
        EXPECT(gbc.pc(), 0xc3dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3db), 0xcb);
        EXPECT(gbc.readMem(0xc3dc), 0x0);
        // CB 00 007D
        gbc.setState(0x9dc2, 0x1cea, 0x6460, 0xdc33, 0x586, 0xd23e, 0x1, 0x1);
        gbc.writeMem(0x9dc2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1cea);
        EXPECT(gbc.pc(), 0x9dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc2), 0xcb);
        EXPECT(gbc.readMem(0x9dc3), 0x0);
        // CB 00 007E
        gbc.setState(0x251d, 0xcb26, 0xc3d0, 0xe0cd, 0xa18c, 0x956e, 0x0, 0x1);
        gbc.writeMem(0x251d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcb26);
        EXPECT(gbc.pc(), 0x251f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 007F
        gbc.setState(0xe39b, 0x8228, 0x42b0, 0x5304, 0x494b, 0x73f7, 0x0, 0x0);
        gbc.writeMem(0xe39b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8228);
        EXPECT(gbc.pc(), 0xe39d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe39b), 0xcb);
        EXPECT(gbc.readMem(0xe39c), 0x0);
        // CB 00 0080
        gbc.setState(0x2e24, 0xaf97, 0x5220, 0x2e11, 0xd403, 0x2bbe, 0x1, 0x1);
        gbc.writeMem(0x2e24, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xaf97);
        EXPECT(gbc.pc(), 0x2e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0081
        gbc.setState(0x2548, 0x447f, 0x7040, 0x7bd5, 0x906, 0xbfb8, 0x0, 0x0);
        gbc.writeMem(0x2548, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x447f);
        EXPECT(gbc.pc(), 0x254a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0082
        gbc.setState(0x4cd6, 0x912a, 0x7a60, 0x6041, 0xf121, 0xf8a3, 0x1, 0x0);
        gbc.writeMem(0x4cd6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x912a);
        EXPECT(gbc.pc(), 0x4cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0083
        gbc.setState(0xa6f0, 0x2462, 0x4a00, 0x9fbd, 0x1577, 0x2f28, 0x0, 0x1);
        gbc.writeMem(0xa6f0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2462);
        EXPECT(gbc.pc(), 0xa6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6f0), 0xcb);
        EXPECT(gbc.readMem(0xa6f1), 0x0);
        // CB 00 0084
        gbc.setState(0xa974, 0x70e6, 0x1790, 0x5ba, 0x20e6, 0x3d6d, 0x0, 0x1);
        gbc.writeMem(0xa974, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x70e6);
        EXPECT(gbc.pc(), 0xa976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa974), 0xcb);
        EXPECT(gbc.readMem(0xa975), 0x0);
        // CB 00 0085
        gbc.setState(0x4227, 0x64a0, 0xc6d0, 0xf7b3, 0xe2eb, 0xa0e3, 0x1, 0x1);
        gbc.writeMem(0x4227, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x64a0);
        EXPECT(gbc.pc(), 0x4229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0086
        gbc.setState(0xed2f, 0x8300, 0x27b0, 0xdca3, 0x25af, 0x107b, 0x1, 0x0);
        gbc.writeMem(0xed2f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8300);
        EXPECT(gbc.pc(), 0xed31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed2f), 0xcb);
        EXPECT(gbc.readMem(0xed30), 0x0);
        // CB 00 0087
        gbc.setState(0x1367, 0x551f, 0x6600, 0x1dd8, 0x3c27, 0x557c, 0x1, 0x1);
        gbc.writeMem(0x1367, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x551f);
        EXPECT(gbc.pc(), 0x1369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0088
        gbc.setState(0xa563, 0x740a, 0xdbd0, 0x4b29, 0xbb28, 0x8c16, 0x0, 0x0);
        gbc.writeMem(0xa563, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x740a);
        EXPECT(gbc.pc(), 0xa565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa563), 0xcb);
        EXPECT(gbc.readMem(0xa564), 0x0);
        // CB 00 0089
        gbc.setState(0xb32d, 0xb9e1, 0xa330, 0x5d64, 0x31f9, 0xf8bd, 0x0, 0x0);
        gbc.writeMem(0xb32d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb9e1);
        EXPECT(gbc.pc(), 0xb32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32d), 0xcb);
        EXPECT(gbc.readMem(0xb32e), 0x0);
        // CB 00 008A
        gbc.setState(0xe4aa, 0x25ae, 0xdeb0, 0x738f, 0x3997, 0x5d67, 0x1, 0x0);
        gbc.writeMem(0xe4aa, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x25ae);
        EXPECT(gbc.pc(), 0xe4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4aa), 0xcb);
        EXPECT(gbc.readMem(0xe4ab), 0x0);
        // CB 00 008B
        gbc.setState(0xb15f, 0x657b, 0x8290, 0x980a, 0xd3c8, 0xd4, 0x0, 0x1);
        gbc.writeMem(0xb15f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x657b);
        EXPECT(gbc.pc(), 0xb161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb15f), 0xcb);
        EXPECT(gbc.readMem(0xb160), 0x0);
        // CB 00 008C
        gbc.setState(0xe714, 0xcb13, 0x10e0, 0xec53, 0xfc21, 0xb3f5, 0x1, 0x1);
        gbc.writeMem(0xe714, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcb13);
        EXPECT(gbc.pc(), 0xe716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe714), 0xcb);
        EXPECT(gbc.readMem(0xe715), 0x0);
        // CB 00 008D
        gbc.setState(0x968e, 0xda5a, 0xce0, 0x7165, 0xfbb4, 0xab81, 0x0, 0x1);
        gbc.writeMem(0x968e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xda5a);
        EXPECT(gbc.pc(), 0x9690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968e), 0xcb);
        EXPECT(gbc.readMem(0x968f), 0x0);
        // CB 00 008E
        gbc.setState(0xa220, 0xe0c2, 0xe590, 0x48a6, 0x6b57, 0x8255, 0x1, 0x0);
        gbc.writeMem(0xa220, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe0c2);
        EXPECT(gbc.pc(), 0xa222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa220), 0xcb);
        EXPECT(gbc.readMem(0xa221), 0x0);
        // CB 00 008F
        gbc.setState(0xaee5, 0x8395, 0xa3d0, 0xbdb3, 0x71e5, 0x5f93, 0x0, 0x0);
        gbc.writeMem(0xaee5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8395);
        EXPECT(gbc.pc(), 0xaee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee5), 0xcb);
        EXPECT(gbc.readMem(0xaee6), 0x0);
        // CB 00 0090
        gbc.setState(0xb87e, 0x622, 0x2090, 0xe9c0, 0x45c, 0xb765, 0x1, 0x1);
        gbc.writeMem(0xb87e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x622);
        EXPECT(gbc.pc(), 0xb880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb87e), 0xcb);
        EXPECT(gbc.readMem(0xb87f), 0x0);
        // CB 00 0091
        gbc.setState(0xa125, 0x1980, 0x8dd0, 0x3c48, 0x6def, 0x4532, 0x1, 0x0);
        gbc.writeMem(0xa125, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1980);
        EXPECT(gbc.pc(), 0xa127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa125), 0xcb);
        EXPECT(gbc.readMem(0xa126), 0x0);
        // CB 00 0092
        gbc.setState(0xb49, 0xf62f, 0xaa0, 0x5add, 0x294e, 0xd83a, 0x1, 0x1);
        gbc.writeMem(0xb49, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf62f);
        EXPECT(gbc.pc(), 0xb4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0093
        gbc.setState(0x5759, 0xecd4, 0xa9f0, 0x9f62, 0xb55f, 0xe548, 0x1, 0x1);
        gbc.writeMem(0x5759, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xecd4);
        EXPECT(gbc.pc(), 0x575b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0095
        gbc.setState(0x5408, 0x8546, 0x4eb0, 0x8ca2, 0xbef7, 0x61f0, 0x1, 0x0);
        gbc.writeMem(0x5408, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8546);
        EXPECT(gbc.pc(), 0x540a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0096
        gbc.setState(0x21a5, 0x284c, 0xa790, 0xfee3, 0xa63b, 0x3a0, 0x0, 0x1);
        gbc.writeMem(0x21a5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x284c);
        EXPECT(gbc.pc(), 0x21a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0097
        gbc.setState(0x34fd, 0xc503, 0xeec0, 0x64c8, 0x30ac, 0xda11, 0x1, 0x1);
        gbc.writeMem(0x34fd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc503);
        EXPECT(gbc.pc(), 0x34ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0098
        gbc.setState(0xef51, 0xeb12, 0xb540, 0xe042, 0x86c, 0x6cd0, 0x1, 0x1);
        gbc.writeMem(0xef51, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xeb12);
        EXPECT(gbc.pc(), 0xef53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef51), 0xcb);
        EXPECT(gbc.readMem(0xef52), 0x0);
        // CB 00 0099
        gbc.setState(0x9d2a, 0x44ea, 0x2d60, 0x5e94, 0x595a, 0x29a8, 0x0, 0x1);
        gbc.writeMem(0x9d2a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x44ea);
        EXPECT(gbc.pc(), 0x9d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2a), 0xcb);
        EXPECT(gbc.readMem(0x9d2b), 0x0);
        // CB 00 009A
        gbc.setState(0x53f, 0x400d, 0xbd50, 0x55f4, 0xd7e3, 0x91fb, 0x0, 0x0);
        gbc.writeMem(0x53f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x400d);
        EXPECT(gbc.pc(), 0x541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 009B
        gbc.setState(0x1e28, 0x6a03, 0x34a0, 0xeee, 0x5c5a, 0x3cb0, 0x0, 0x1);
        gbc.writeMem(0x1e28, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6a03);
        EXPECT(gbc.pc(), 0x1e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 009C
        gbc.setState(0x4649, 0x68d2, 0x6db0, 0xd205, 0x21e8, 0x9a0b, 0x1, 0x1);
        gbc.writeMem(0x4649, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x68d2);
        EXPECT(gbc.pc(), 0x464b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 009E
        gbc.setState(0xd189, 0x7490, 0x5070, 0x49f3, 0xbb1b, 0x85d8, 0x0, 0x1);
        gbc.writeMem(0xd189, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7490);
        EXPECT(gbc.pc(), 0xd18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd189), 0xcb);
        EXPECT(gbc.readMem(0xd18a), 0x0);
        // CB 00 009F
        gbc.setState(0x1c92, 0x8b64, 0x4f50, 0x1f9a, 0x4f9e, 0x2b4, 0x0, 0x0);
        gbc.writeMem(0x1c92, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8b64);
        EXPECT(gbc.pc(), 0x1c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00A0
        gbc.setState(0x1a24, 0x7fc9, 0x6190, 0x9b55, 0xfed2, 0x9ac4, 0x1, 0x1);
        gbc.writeMem(0x1a24, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7fc9);
        EXPECT(gbc.pc(), 0x1a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00A1
        gbc.setState(0x648, 0x189f, 0x6430, 0xe0ca, 0x65f2, 0x80c7, 0x1, 0x1);
        gbc.writeMem(0x648, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x189f);
        EXPECT(gbc.pc(), 0x64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00A2
        gbc.setState(0x9800, 0x7217, 0xe930, 0x395d, 0x2e8f, 0x7707, 0x1, 0x0);
        gbc.writeMem(0x9800, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7217);
        EXPECT(gbc.pc(), 0x9802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9800), 0xcb);
        EXPECT(gbc.readMem(0x9801), 0x0);
        // CB 00 00A3
        gbc.setState(0xaba0, 0xa5cb, 0xbcc0, 0x844e, 0x8f1c, 0xf95e, 0x1, 0x1);
        gbc.writeMem(0xaba0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa5cb);
        EXPECT(gbc.pc(), 0xaba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba0), 0xcb);
        EXPECT(gbc.readMem(0xaba1), 0x0);
        // CB 00 00A4
        gbc.setState(0xa4c9, 0x6cbe, 0x5800, 0xe104, 0xef99, 0x6f40, 0x0, 0x1);
        gbc.writeMem(0xa4c9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6cbe);
        EXPECT(gbc.pc(), 0xa4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c9), 0xcb);
        EXPECT(gbc.readMem(0xa4ca), 0x0);
        // CB 00 00A5
        gbc.setState(0x7be1, 0xcf2d, 0xdee0, 0xb767, 0x4efc, 0x8645, 0x0, 0x0);
        gbc.writeMem(0x7be1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xcf2d);
        EXPECT(gbc.pc(), 0x7be3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00A6
        gbc.setState(0x8b1b, 0xe695, 0x5e20, 0xd573, 0x1189, 0x52fb, 0x1, 0x1);
        gbc.writeMem(0x8b1b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe695);
        EXPECT(gbc.pc(), 0x8b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b1b), 0xcb);
        EXPECT(gbc.readMem(0x8b1c), 0x0);
        // CB 00 00A7
        gbc.setState(0x4b9a, 0xa9c, 0xef80, 0x12cd, 0xcb92, 0x58fa, 0x0, 0x0);
        gbc.writeMem(0x4b9a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa9c);
        EXPECT(gbc.pc(), 0x4b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00A8
        gbc.setState(0x5c40, 0x17cf, 0x8e10, 0xf835, 0x2fe8, 0x4d5e, 0x0, 0x0);
        gbc.writeMem(0x5c40, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x17cf);
        EXPECT(gbc.pc(), 0x5c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00A9
        gbc.setState(0x473, 0x7fb4, 0xb2a0, 0x79fd, 0xd03, 0x5c94, 0x1, 0x1);
        gbc.writeMem(0x473, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7fb4);
        EXPECT(gbc.pc(), 0x475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00AA
        gbc.setState(0x66a2, 0x1600, 0x9110, 0x32f8, 0xb99b, 0x58d0, 0x1, 0x1);
        gbc.writeMem(0x66a2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1600);
        EXPECT(gbc.pc(), 0x66a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00AB
        gbc.setState(0x1adc, 0xc095, 0x5010, 0x9187, 0x26ff, 0xc604, 0x0, 0x1);
        gbc.writeMem(0x1adc, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc095);
        EXPECT(gbc.pc(), 0x1ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00AC
        gbc.setState(0x3045, 0xd9b7, 0x3410, 0xffb0, 0x5d0b, 0x1aef, 0x0, 0x0);
        gbc.writeMem(0x3045, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd9b7);
        EXPECT(gbc.pc(), 0x3047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00AD
        gbc.setState(0x416a, 0xbd43, 0x4d0, 0x1f38, 0xbf90, 0x427b, 0x1, 0x0);
        gbc.writeMem(0x416a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbd43);
        EXPECT(gbc.pc(), 0x416c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00AE
        gbc.setState(0xddb8, 0x6c20, 0x300, 0x6d7f, 0xf262, 0x2d61, 0x0, 0x0);
        gbc.writeMem(0xddb8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6c20);
        EXPECT(gbc.pc(), 0xddba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb8), 0xcb);
        EXPECT(gbc.readMem(0xddb9), 0x0);
        // CB 00 00AF
        gbc.setState(0x4cd, 0x37cd, 0x96f0, 0x1f96, 0x21f5, 0xffd0, 0x1, 0x1);
        gbc.writeMem(0x4cd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x37cd);
        EXPECT(gbc.pc(), 0x4cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00B0
        gbc.setState(0xb72f, 0x942c, 0xcde0, 0xcc12, 0x17, 0x6bc4, 0x1, 0x1);
        gbc.writeMem(0xb72f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x942c);
        EXPECT(gbc.pc(), 0xb731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72f), 0xcb);
        EXPECT(gbc.readMem(0xb730), 0x0);
        // CB 00 00B1
        gbc.setState(0x59ca, 0x5456, 0xd210, 0x7896, 0x4e1e, 0x7984, 0x1, 0x0);
        gbc.writeMem(0x59ca, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5456);
        EXPECT(gbc.pc(), 0x59cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00B2
        gbc.setState(0x6724, 0x4a95, 0xae00, 0x4c2c, 0x62f9, 0x79db, 0x1, 0x1);
        gbc.writeMem(0x6724, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4a95);
        EXPECT(gbc.pc(), 0x6726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00B3
        gbc.setState(0x99d4, 0x3ccd, 0x8c10, 0x3bed, 0x3ed7, 0x1f07, 0x1, 0x0);
        gbc.writeMem(0x99d4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3ccd);
        EXPECT(gbc.pc(), 0x99d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d4), 0xcb);
        EXPECT(gbc.readMem(0x99d5), 0x0);
        // CB 00 00B4
        gbc.setState(0xbed7, 0xa51a, 0x1010, 0xc182, 0xcf4b, 0xc6cf, 0x0, 0x1);
        gbc.writeMem(0xbed7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa51a);
        EXPECT(gbc.pc(), 0xbed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed7), 0xcb);
        EXPECT(gbc.readMem(0xbed8), 0x0);
        // CB 00 00B5
        gbc.setState(0xa8fd, 0x8811, 0x90c0, 0x7310, 0x87fb, 0xac7c, 0x1, 0x1);
        gbc.writeMem(0xa8fd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8811);
        EXPECT(gbc.pc(), 0xa8ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8fd), 0xcb);
        EXPECT(gbc.readMem(0xa8fe), 0x0);
        // CB 00 00B6
        gbc.setState(0xe1fd, 0x7cfe, 0x9e30, 0xd162, 0xff45, 0x525a, 0x0, 0x0);
        gbc.writeMem(0xe1fd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7cfe);
        EXPECT(gbc.pc(), 0xe1ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1fd), 0xcb);
        EXPECT(gbc.readMem(0xe1fe), 0x0);
        // CB 00 00B7
        gbc.setState(0xd329, 0x93, 0xdf70, 0xed35, 0x2502, 0x7ff3, 0x0, 0x1);
        gbc.writeMem(0xd329, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x93);
        EXPECT(gbc.pc(), 0xd32b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd329), 0xcb);
        EXPECT(gbc.readMem(0xd32a), 0x0);
        // CB 00 00B8
        gbc.setState(0xd5b4, 0x2853, 0xd120, 0xa1f1, 0x89b0, 0x4b53, 0x0, 0x0);
        gbc.writeMem(0xd5b4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2853);
        EXPECT(gbc.pc(), 0xd5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b4), 0xcb);
        EXPECT(gbc.readMem(0xd5b5), 0x0);
        // CB 00 00B9
        gbc.setState(0x426e, 0xa26d, 0x9ca0, 0xd25f, 0x1385, 0xd09c, 0x1, 0x0);
        gbc.writeMem(0x426e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa26d);
        EXPECT(gbc.pc(), 0x4270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00BA
        gbc.setState(0xd26e, 0x2ca0, 0x6060, 0xe8ad, 0x59f4, 0x78fd, 0x1, 0x0);
        gbc.writeMem(0xd26e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2ca0);
        EXPECT(gbc.pc(), 0xd270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd26e), 0xcb);
        EXPECT(gbc.readMem(0xd26f), 0x0);
        // CB 00 00BB
        gbc.setState(0xcd5b, 0x1107, 0xb6f0, 0x1d7f, 0xc1dd, 0xf1b9, 0x0, 0x0);
        gbc.writeMem(0xcd5b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1107);
        EXPECT(gbc.pc(), 0xcd5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5b), 0xcb);
        EXPECT(gbc.readMem(0xcd5c), 0x0);
        // CB 00 00BC
        gbc.setState(0x2bb5, 0x87fe, 0x85f0, 0x979d, 0xda8e, 0x6180, 0x1, 0x0);
        gbc.writeMem(0x2bb5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x87fe);
        EXPECT(gbc.pc(), 0x2bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00BD
        gbc.setState(0x2254, 0x164f, 0x8010, 0x87eb, 0xf915, 0x9e74, 0x1, 0x1);
        gbc.writeMem(0x2254, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x164f);
        EXPECT(gbc.pc(), 0x2256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00BE
        gbc.setState(0xc7d8, 0x2a4c, 0x7700, 0x41f1, 0xa212, 0x2450, 0x0, 0x1);
        gbc.writeMem(0xc7d8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2a4c);
        EXPECT(gbc.pc(), 0xc7da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d8), 0xcb);
        EXPECT(gbc.readMem(0xc7d9), 0x0);
        // CB 00 00BF
        gbc.setState(0xb47c, 0x4a82, 0x27b0, 0x3529, 0x16b5, 0x3abe, 0x0, 0x0);
        gbc.writeMem(0xb47c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4a82);
        EXPECT(gbc.pc(), 0xb47e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47c), 0xcb);
        EXPECT(gbc.readMem(0xb47d), 0x0);
        // CB 00 00C0
        gbc.setState(0x608c, 0x5ba0, 0xc040, 0xa36f, 0x8527, 0x721d, 0x1, 0x0);
        gbc.writeMem(0x608c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5ba0);
        EXPECT(gbc.pc(), 0x608e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00C1
        gbc.setState(0x958f, 0xafcb, 0xb210, 0xcaf8, 0x79c7, 0x8c07, 0x0, 0x1);
        gbc.writeMem(0x958f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xafcb);
        EXPECT(gbc.pc(), 0x9591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x958f), 0xcb);
        EXPECT(gbc.readMem(0x9590), 0x0);
        // CB 00 00C2
        gbc.setState(0x35e, 0x8a, 0x64e0, 0x9617, 0x18b5, 0x6984, 0x0, 0x1);
        gbc.writeMem(0x35e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8a);
        EXPECT(gbc.pc(), 0x360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00C3
        gbc.setState(0xdc5, 0xb09b, 0x17d0, 0xc8a9, 0xadf, 0x769c, 0x1, 0x1);
        gbc.writeMem(0xdc5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb09b);
        EXPECT(gbc.pc(), 0xdc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00C4
        gbc.setState(0xb64f, 0x1024, 0xb310, 0x22e6, 0xb6b6, 0xf95f, 0x1, 0x1);
        gbc.writeMem(0xb64f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1024);
        EXPECT(gbc.pc(), 0xb651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb64f), 0xcb);
        EXPECT(gbc.readMem(0xb650), 0x0);
        // CB 00 00C5
        gbc.setState(0xc0d, 0x8e3d, 0x6460, 0x865b, 0x62c4, 0x7a3c, 0x1, 0x1);
        gbc.writeMem(0xc0d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8e3d);
        EXPECT(gbc.pc(), 0xc0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00C6
        gbc.setState(0x4e8f, 0xeb3e, 0x4380, 0x18f0, 0x6442, 0xe1f8, 0x1, 0x0);
        gbc.writeMem(0x4e8f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xeb3e);
        EXPECT(gbc.pc(), 0x4e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00C7
        gbc.setState(0xa104, 0x2636, 0x5b50, 0x7b9b, 0x3d6f, 0xc831, 0x1, 0x1);
        gbc.writeMem(0xa104, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2636);
        EXPECT(gbc.pc(), 0xa106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa104), 0xcb);
        EXPECT(gbc.readMem(0xa105), 0x0);
        // CB 00 00C8
        gbc.setState(0x41fd, 0xab3a, 0x83d0, 0x3035, 0x22af, 0x91b0, 0x1, 0x0);
        gbc.writeMem(0x41fd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xab3a);
        EXPECT(gbc.pc(), 0x41ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00C9
        gbc.setState(0x7724, 0x26a3, 0xb530, 0x4153, 0x3364, 0x73a4, 0x0, 0x1);
        gbc.writeMem(0x7724, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x26a3);
        EXPECT(gbc.pc(), 0x7726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00CA
        gbc.setState(0xb533, 0x7b26, 0xa950, 0xd906, 0xf83e, 0xba75, 0x1, 0x0);
        gbc.writeMem(0xb533, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7b26);
        EXPECT(gbc.pc(), 0xb535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb533), 0xcb);
        EXPECT(gbc.readMem(0xb534), 0x0);
        // CB 00 00CB
        gbc.setState(0x35ba, 0x1bb2, 0x64a0, 0xe2e3, 0x4276, 0x87c2, 0x0, 0x0);
        gbc.writeMem(0x35ba, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1bb2);
        EXPECT(gbc.pc(), 0x35bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00CC
        gbc.setState(0x4547, 0x3706, 0x3b0, 0x150e, 0xffd8, 0x9df8, 0x1, 0x0);
        gbc.writeMem(0x4547, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3706);
        EXPECT(gbc.pc(), 0x4549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00CD
        gbc.setState(0xc6b1, 0x61fe, 0x67e0, 0x72cb, 0x9289, 0x47bb, 0x0, 0x0);
        gbc.writeMem(0xc6b1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x61fe);
        EXPECT(gbc.pc(), 0xc6b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b1), 0xcb);
        EXPECT(gbc.readMem(0xc6b2), 0x0);
        // CB 00 00CE
        gbc.setState(0x4aec, 0x6e4, 0xe870, 0xafd9, 0x4ac7, 0x66ad, 0x0, 0x1);
        gbc.writeMem(0x4aec, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6e4);
        EXPECT(gbc.pc(), 0x4aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00CF
        gbc.setState(0xdf2e, 0xf629, 0xa670, 0x23b5, 0x5a68, 0xce03, 0x1, 0x1);
        gbc.writeMem(0xdf2e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf629);
        EXPECT(gbc.pc(), 0xdf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf2e), 0xcb);
        EXPECT(gbc.readMem(0xdf2f), 0x0);
        // CB 00 00D1
        gbc.setState(0xc73, 0x551d, 0x7170, 0x880b, 0x8d44, 0x5659, 0x0, 0x1);
        gbc.writeMem(0xc73, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x551d);
        EXPECT(gbc.pc(), 0xc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00D2
        gbc.setState(0xb5ac, 0x867f, 0xd6d0, 0x8b1, 0xdf4a, 0x9780, 0x1, 0x0);
        gbc.writeMem(0xb5ac, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x867f);
        EXPECT(gbc.pc(), 0xb5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ac), 0xcb);
        EXPECT(gbc.readMem(0xb5ad), 0x0);
        // CB 00 00D3
        gbc.setState(0x5ad2, 0xc665, 0x55d0, 0x6aa4, 0x9ba8, 0x40e5, 0x0, 0x0);
        gbc.writeMem(0x5ad2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc665);
        EXPECT(gbc.pc(), 0x5ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00D4
        gbc.setState(0x626d, 0x3968, 0xb00, 0xd5df, 0x8ce8, 0x63c0, 0x0, 0x1);
        gbc.writeMem(0x626d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3968);
        EXPECT(gbc.pc(), 0x626f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00D5
        gbc.setState(0x4f73, 0xc35e, 0x6150, 0x368a, 0x676d, 0x7178, 0x0, 0x0);
        gbc.writeMem(0x4f73, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc35e);
        EXPECT(gbc.pc(), 0x4f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00D6
        gbc.setState(0x4f3a, 0x3cb0, 0xfc80, 0x3af9, 0x8fe8, 0x4f5e, 0x1, 0x1);
        gbc.writeMem(0x4f3a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3cb0);
        EXPECT(gbc.pc(), 0x4f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00D7
        gbc.setState(0x7e69, 0x84bb, 0xb3e0, 0xeabe, 0x3c85, 0xeeac, 0x1, 0x0);
        gbc.writeMem(0x7e69, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x84bb);
        EXPECT(gbc.pc(), 0x7e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00D8
        gbc.setState(0x5c37, 0xad0a, 0xae30, 0x5a3f, 0x5295, 0xe7bb, 0x0, 0x1);
        gbc.writeMem(0x5c37, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xad0a);
        EXPECT(gbc.pc(), 0x5c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00D9
        gbc.setState(0xaba7, 0x464f, 0x9ab0, 0x46d, 0x76ce, 0x1cde, 0x1, 0x0);
        gbc.writeMem(0xaba7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x464f);
        EXPECT(gbc.pc(), 0xaba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba7), 0xcb);
        EXPECT(gbc.readMem(0xaba8), 0x0);
        // CB 00 00DA
        gbc.setState(0x895, 0x74b7, 0x4e20, 0x44f4, 0x3516, 0x7629, 0x0, 0x0);
        gbc.writeMem(0x895, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x74b7);
        EXPECT(gbc.pc(), 0x897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00DC
        gbc.setState(0x8e60, 0x9577, 0x2c50, 0x5ff4, 0xb5aa, 0xee33, 0x0, 0x1);
        gbc.writeMem(0x8e60, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9577);
        EXPECT(gbc.pc(), 0x8e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e60), 0xcb);
        EXPECT(gbc.readMem(0x8e61), 0x0);
        // CB 00 00DD
        gbc.setState(0x6312, 0xe63e, 0x3720, 0xa7db, 0xfa84, 0x90e6, 0x0, 0x1);
        gbc.writeMem(0x6312, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe63e);
        EXPECT(gbc.pc(), 0x6314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00DE
        gbc.setState(0x80a4, 0xcdd8, 0xc5a0, 0x638b, 0x655e, 0xbf94, 0x0, 0x1);
        gbc.writeMem(0x80a4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcdd8);
        EXPECT(gbc.pc(), 0x80a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a4), 0xcb);
        EXPECT(gbc.readMem(0x80a5), 0x0);
        // CB 00 00DF
        gbc.setState(0x1f43, 0x2f56, 0x5a50, 0x51c1, 0x7bf0, 0x18ab, 0x1, 0x0);
        gbc.writeMem(0x1f43, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2f56);
        EXPECT(gbc.pc(), 0x1f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00E0
        gbc.setState(0x35d6, 0x6623, 0xeb00, 0x2c05, 0xd105, 0x7274, 0x1, 0x1);
        gbc.writeMem(0x35d6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6623);
        EXPECT(gbc.pc(), 0x35d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00E1
        gbc.setState(0x215c, 0x352f, 0x8870, 0x7e66, 0x9301, 0xf142, 0x1, 0x0);
        gbc.writeMem(0x215c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x352f);
        EXPECT(gbc.pc(), 0x215e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00E2
        gbc.setState(0x42c6, 0x8a2d, 0x8b0, 0x9373, 0xdf22, 0xb92f, 0x1, 0x0);
        gbc.writeMem(0x42c6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8a2d);
        EXPECT(gbc.pc(), 0x42c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00E3
        gbc.setState(0x2177, 0xd557, 0xb40, 0x7c82, 0x11bd, 0xa6f, 0x0, 0x0);
        gbc.writeMem(0x2177, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd557);
        EXPECT(gbc.pc(), 0x2179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00E4
        gbc.setState(0x2738, 0xeadc, 0xfab0, 0xb86d, 0xe1e5, 0x8cf, 0x1, 0x0);
        gbc.writeMem(0x2738, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xeadc);
        EXPECT(gbc.pc(), 0x273a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00E5
        gbc.setState(0x62e4, 0x38d0, 0x10b0, 0x364f, 0xdce5, 0x4a52, 0x1, 0x1);
        gbc.writeMem(0x62e4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x38d0);
        EXPECT(gbc.pc(), 0x62e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00E6
        gbc.setState(0xce8d, 0xed5a, 0x1e30, 0x4e7e, 0xd922, 0xf9ee, 0x0, 0x1);
        gbc.writeMem(0xce8d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xed5a);
        EXPECT(gbc.pc(), 0xce8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce8d), 0xcb);
        EXPECT(gbc.readMem(0xce8e), 0x0);
        // CB 00 00E7
        gbc.setState(0xe315, 0x2bf0, 0x3190, 0xda0d, 0x265, 0x503f, 0x0, 0x1);
        gbc.writeMem(0xe315, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2bf0);
        EXPECT(gbc.pc(), 0xe317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe315), 0xcb);
        EXPECT(gbc.readMem(0xe316), 0x0);
        // CB 00 00E8
        gbc.setState(0xb100, 0xf416, 0x4b50, 0x1acb, 0xf92, 0x3c8e, 0x0, 0x0);
        gbc.writeMem(0xb100, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf416);
        EXPECT(gbc.pc(), 0xb102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb100), 0xcb);
        EXPECT(gbc.readMem(0xb101), 0x0);
        // CB 00 00E9
        gbc.setState(0x7448, 0xf9c7, 0xe220, 0x982b, 0xd388, 0x4ba3, 0x0, 0x1);
        gbc.writeMem(0x7448, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf9c7);
        EXPECT(gbc.pc(), 0x744a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00EA
        gbc.setState(0xbc6b, 0x3721, 0xcf50, 0xfbf9, 0x1f1c, 0xf0c0, 0x0, 0x0);
        gbc.writeMem(0xbc6b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3721);
        EXPECT(gbc.pc(), 0xbc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc6b), 0xcb);
        EXPECT(gbc.readMem(0xbc6c), 0x0);
        // CB 00 00EB
        gbc.setState(0xbe92, 0x6922, 0xe20, 0xd7e3, 0x96b1, 0x9a9e, 0x1, 0x0);
        gbc.writeMem(0xbe92, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6922);
        EXPECT(gbc.pc(), 0xbe94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe92), 0xcb);
        EXPECT(gbc.readMem(0xbe93), 0x0);
        // CB 00 00EC
        gbc.setState(0xae58, 0x9a74, 0x2b90, 0xb84e, 0x3bd5, 0xd1d, 0x1, 0x1);
        gbc.writeMem(0xae58, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9a74);
        EXPECT(gbc.pc(), 0xae5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae58), 0xcb);
        EXPECT(gbc.readMem(0xae59), 0x0);
        // CB 00 00ED
        gbc.setState(0xecd7, 0x3396, 0xe090, 0xeb, 0xf97d, 0xab40, 0x1, 0x1);
        gbc.writeMem(0xecd7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3396);
        EXPECT(gbc.pc(), 0xecd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd7), 0xcb);
        EXPECT(gbc.readMem(0xecd8), 0x0);
        // CB 00 00EE
        gbc.setState(0xa96, 0x1210, 0xa770, 0x7ccc, 0x240, 0xbef2, 0x0, 0x1);
        gbc.writeMem(0xa96, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1210);
        EXPECT(gbc.pc(), 0xa98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00EF
        gbc.setState(0x4ff6, 0xa124, 0x8b10, 0xc18c, 0x8fa5, 0xe8cd, 0x1, 0x1);
        gbc.writeMem(0x4ff6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa124);
        EXPECT(gbc.pc(), 0x4ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00F0
        gbc.setState(0x2b7, 0x12e9, 0x34f0, 0x9910, 0xa383, 0x713a, 0x1, 0x0);
        gbc.writeMem(0x2b7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x12e9);
        EXPECT(gbc.pc(), 0x2b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00F1
        gbc.setState(0x694d, 0x98c1, 0x82f0, 0x969c, 0x88dc, 0xb626, 0x0, 0x1);
        gbc.writeMem(0x694d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x98c1);
        EXPECT(gbc.pc(), 0x694f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00F2
        gbc.setState(0x6c41, 0xa542, 0xfef0, 0x620d, 0xff5c, 0xeab1, 0x1, 0x0);
        gbc.writeMem(0x6c41, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa542);
        EXPECT(gbc.pc(), 0x6c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00F3
        gbc.setState(0xcc77, 0x1568, 0x4130, 0xce91, 0x7904, 0xc2f5, 0x1, 0x0);
        gbc.writeMem(0xcc77, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1568);
        EXPECT(gbc.pc(), 0xcc79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc77), 0xcb);
        EXPECT(gbc.readMem(0xcc78), 0x0);
        // CB 00 00F4
        gbc.setState(0x9197, 0x2651, 0x92a0, 0x62c0, 0x9a30, 0x55a3, 0x0, 0x0);
        gbc.writeMem(0x9197, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2651);
        EXPECT(gbc.pc(), 0x9199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9197), 0xcb);
        EXPECT(gbc.readMem(0x9198), 0x0);
        // CB 00 00F5
        gbc.setState(0x83b8, 0x9e48, 0x4ba0, 0x32e6, 0x5def, 0xa278, 0x0, 0x0);
        gbc.writeMem(0x83b8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9e48);
        EXPECT(gbc.pc(), 0x83ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b8), 0xcb);
        EXPECT(gbc.readMem(0x83b9), 0x0);
        // CB 00 00F6
        gbc.setState(0xe596, 0x3756, 0x8cc0, 0x3b23, 0xe2b1, 0x8053, 0x0, 0x0);
        gbc.writeMem(0xe596, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3756);
        EXPECT(gbc.pc(), 0xe598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe596), 0xcb);
        EXPECT(gbc.readMem(0xe597), 0x0);
        // CB 00 00F8
        gbc.setState(0x269b, 0xe6cb, 0x3490, 0xa22c, 0x3035, 0xf5c7, 0x1, 0x0);
        gbc.writeMem(0x269b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe6cb);
        EXPECT(gbc.pc(), 0x269d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00F9
        gbc.setState(0x68c9, 0x105f, 0x3630, 0x206f, 0xd177, 0x2a5d, 0x0, 0x1);
        gbc.writeMem(0x68c9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x105f);
        EXPECT(gbc.pc(), 0x68cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 00FA
        gbc.setState(0xb397, 0xbdf5, 0x8f0, 0x22dc, 0xc80, 0xb17b, 0x0, 0x1);
        gbc.writeMem(0xb397, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbdf5);
        EXPECT(gbc.pc(), 0xb399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb397), 0xcb);
        EXPECT(gbc.readMem(0xb398), 0x0);
        // CB 00 00FB
        gbc.setState(0x9d2, 0x4c5a, 0xe4f0, 0xd6f2, 0xdc62, 0x196f, 0x1, 0x1);
        gbc.writeMem(0x9d2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4c5a);
        EXPECT(gbc.pc(), 0x9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 00FC
        gbc.setState(0xbd53, 0x104f, 0xb830, 0x3565, 0xd63d, 0xc9d9, 0x1, 0x0);
        gbc.writeMem(0xbd53, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x104f);
        EXPECT(gbc.pc(), 0xbd55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd53), 0xcb);
        EXPECT(gbc.readMem(0xbd54), 0x0);
        // CB 00 00FD
        gbc.setState(0xeb49, 0x2295, 0x79a0, 0x7054, 0x5857, 0x166e, 0x0, 0x0);
        gbc.writeMem(0xeb49, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2295);
        EXPECT(gbc.pc(), 0xeb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb49), 0xcb);
        EXPECT(gbc.readMem(0xeb4a), 0x0);
        // CB 00 00FF
        gbc.setState(0x151c, 0xe5a, 0x67b0, 0x8736, 0x66d4, 0xd4bf, 0x0, 0x0);
        gbc.writeMem(0x151c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe5a);
        EXPECT(gbc.pc(), 0x151e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0100
        gbc.setState(0xbfa5, 0x69b6, 0xa080, 0xcd31, 0x308b, 0x81b4, 0x1, 0x0);
        gbc.writeMem(0xbfa5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x69b6);
        EXPECT(gbc.pc(), 0xbfa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa5), 0xcb);
        EXPECT(gbc.readMem(0xbfa6), 0x0);
        // CB 00 0101
        gbc.setState(0x2395, 0xa82a, 0x9c0, 0x9978, 0x79c0, 0xce7f, 0x0, 0x0);
        gbc.writeMem(0x2395, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa82a);
        EXPECT(gbc.pc(), 0x2397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0102
        gbc.setState(0x94ad, 0x636e, 0xc0a0, 0x161d, 0xb1fb, 0x7859, 0x1, 0x1);
        gbc.writeMem(0x94ad, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x636e);
        EXPECT(gbc.pc(), 0x94af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ad), 0xcb);
        EXPECT(gbc.readMem(0x94ae), 0x0);
        // CB 00 0103
        gbc.setState(0x4ba8, 0xc2f5, 0xfb20, 0x764f, 0xf456, 0x5b40, 0x0, 0x0);
        gbc.writeMem(0x4ba8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc2f5);
        EXPECT(gbc.pc(), 0x4baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0104
        gbc.setState(0x3345, 0x4ea9, 0xd110, 0xb6b4, 0x7121, 0xf25e, 0x0, 0x0);
        gbc.writeMem(0x3345, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4ea9);
        EXPECT(gbc.pc(), 0x3347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0105
        gbc.setState(0x88a1, 0xbd32, 0x8f30, 0xd0f3, 0xcd3b, 0x7853, 0x1, 0x1);
        gbc.writeMem(0x88a1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbd32);
        EXPECT(gbc.pc(), 0x88a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a1), 0xcb);
        EXPECT(gbc.readMem(0x88a2), 0x0);
        // CB 00 0106
        gbc.setState(0x2a81, 0x982e, 0xd2c0, 0x2d81, 0x1974, 0xc70, 0x0, 0x0);
        gbc.writeMem(0x2a81, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x982e);
        EXPECT(gbc.pc(), 0x2a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0107
        gbc.setState(0x5814, 0x1c86, 0x4fa0, 0x2acc, 0x84ea, 0x3032, 0x1, 0x1);
        gbc.writeMem(0x5814, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1c86);
        EXPECT(gbc.pc(), 0x5816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0108
        gbc.setState(0x1543, 0xd967, 0xa210, 0xaad5, 0x315f, 0xb133, 0x1, 0x0);
        gbc.writeMem(0x1543, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd967);
        EXPECT(gbc.pc(), 0x1545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0109
        gbc.setState(0x7798, 0x5448, 0x79d0, 0x74d1, 0x9518, 0xdc98, 0x1, 0x1);
        gbc.writeMem(0x7798, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5448);
        EXPECT(gbc.pc(), 0x779a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 010A
        gbc.setState(0xbdd5, 0x2b59, 0x6090, 0x473a, 0x2b44, 0xe710, 0x1, 0x1);
        gbc.writeMem(0xbdd5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2b59);
        EXPECT(gbc.pc(), 0xbdd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd5), 0xcb);
        EXPECT(gbc.readMem(0xbdd6), 0x0);
        // CB 00 010B
        gbc.setState(0x9356, 0x1b00, 0x7830, 0x7500, 0x9406, 0xb69d, 0x0, 0x1);
        gbc.writeMem(0x9356, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1b00);
        EXPECT(gbc.pc(), 0x9358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9356), 0xcb);
        EXPECT(gbc.readMem(0x9357), 0x0);
        // CB 00 010C
        gbc.setState(0x46c0, 0xe330, 0xb960, 0x6bf2, 0x6416, 0xedd5, 0x0, 0x1);
        gbc.writeMem(0x46c0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe330);
        EXPECT(gbc.pc(), 0x46c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 010D
        gbc.setState(0xbd46, 0x950d, 0xe170, 0x3abd, 0x5b40, 0xde1, 0x0, 0x0);
        gbc.writeMem(0xbd46, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x950d);
        EXPECT(gbc.pc(), 0xbd48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd46), 0xcb);
        EXPECT(gbc.readMem(0xbd47), 0x0);
        // CB 00 010E
        gbc.setState(0xa375, 0x2d47, 0x3190, 0x8f36, 0xc499, 0x7f0b, 0x1, 0x0);
        gbc.writeMem(0xa375, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2d47);
        EXPECT(gbc.pc(), 0xa377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa375), 0xcb);
        EXPECT(gbc.readMem(0xa376), 0x0);
        // CB 00 010F
        gbc.setState(0x95de, 0xdfab, 0x69a0, 0x1b83, 0x28fc, 0xb884, 0x0, 0x1);
        gbc.writeMem(0x95de, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xdfab);
        EXPECT(gbc.pc(), 0x95e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95de), 0xcb);
        EXPECT(gbc.readMem(0x95df), 0x0);
        // CB 00 0110
        gbc.setState(0x9479, 0x9f17, 0xcd60, 0x7238, 0x7110, 0x48b0, 0x1, 0x0);
        gbc.writeMem(0x9479, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9f17);
        EXPECT(gbc.pc(), 0x947b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9479), 0xcb);
        EXPECT(gbc.readMem(0x947a), 0x0);
        // CB 00 0111
        gbc.setState(0x3e0b, 0x4556, 0x7ec0, 0x2fb8, 0xe948, 0x7ae9, 0x0, 0x1);
        gbc.writeMem(0x3e0b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4556);
        EXPECT(gbc.pc(), 0x3e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0112
        gbc.setState(0x97be, 0xf412, 0xaf90, 0xcfb0, 0x3c86, 0x3ac9, 0x1, 0x1);
        gbc.writeMem(0x97be, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf412);
        EXPECT(gbc.pc(), 0x97c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97be), 0xcb);
        EXPECT(gbc.readMem(0x97bf), 0x0);
        // CB 00 0113
        gbc.setState(0xb3f7, 0xdaa2, 0x26f0, 0x31b2, 0x88d3, 0x46d2, 0x1, 0x0);
        gbc.writeMem(0xb3f7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdaa2);
        EXPECT(gbc.pc(), 0xb3f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f7), 0xcb);
        EXPECT(gbc.readMem(0xb3f8), 0x0);
        // CB 00 0114
        gbc.setState(0x78fe, 0x70eb, 0x5590, 0x1015, 0x5918, 0x45c7, 0x0, 0x1);
        gbc.writeMem(0x78fe, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x70eb);
        EXPECT(gbc.pc(), 0x7900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0115
        gbc.setState(0x8e47, 0xf223, 0x5ed0, 0x6ba6, 0x3411, 0x2c81, 0x1, 0x1);
        gbc.writeMem(0x8e47, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf223);
        EXPECT(gbc.pc(), 0x8e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e47), 0xcb);
        EXPECT(gbc.readMem(0x8e48), 0x0);
        // CB 00 0116
        gbc.setState(0x567e, 0x2687, 0x8920, 0x2f2a, 0xae4b, 0xadf9, 0x1, 0x0);
        gbc.writeMem(0x567e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2687);
        EXPECT(gbc.pc(), 0x5680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0117
        gbc.setState(0x3268, 0xd65d, 0x3d30, 0x473d, 0x2b49, 0x235a, 0x1, 0x0);
        gbc.writeMem(0x3268, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd65d);
        EXPECT(gbc.pc(), 0x326a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0118
        gbc.setState(0x193a, 0xda73, 0xaf00, 0x11ed, 0x4b0e, 0xac6d, 0x0, 0x1);
        gbc.writeMem(0x193a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xda73);
        EXPECT(gbc.pc(), 0x193c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0119
        gbc.setState(0xe336, 0x18fd, 0x8120, 0xe325, 0x2a40, 0xc23f, 0x1, 0x1);
        gbc.writeMem(0xe336, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x18fd);
        EXPECT(gbc.pc(), 0xe338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe336), 0xcb);
        EXPECT(gbc.readMem(0xe337), 0x0);
        // CB 00 011A
        gbc.setState(0x840c, 0x68ef, 0x5980, 0x8f0c, 0xfd96, 0x7ba1, 0x1, 0x1);
        gbc.writeMem(0x840c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x68ef);
        EXPECT(gbc.pc(), 0x840e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x840c), 0xcb);
        EXPECT(gbc.readMem(0x840d), 0x0);
        // CB 00 011B
        gbc.setState(0xa64c, 0x9094, 0xd420, 0x6bf4, 0x6044, 0x9e31, 0x0, 0x0);
        gbc.writeMem(0xa64c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9094);
        EXPECT(gbc.pc(), 0xa64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64c), 0xcb);
        EXPECT(gbc.readMem(0xa64d), 0x0);
        // CB 00 011C
        gbc.setState(0x1a03, 0x8ccc, 0x16d0, 0x747a, 0xeb56, 0xcace, 0x1, 0x1);
        gbc.writeMem(0x1a03, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8ccc);
        EXPECT(gbc.pc(), 0x1a05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 011D
        gbc.setState(0x5611, 0x284b, 0x6500, 0x50b6, 0x29f, 0x99da, 0x0, 0x1);
        gbc.writeMem(0x5611, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x284b);
        EXPECT(gbc.pc(), 0x5613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 011E
        gbc.setState(0x38a5, 0x4975, 0x66f0, 0x6a7, 0xf141, 0xc7d4, 0x0, 0x0);
        gbc.writeMem(0x38a5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4975);
        EXPECT(gbc.pc(), 0x38a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 011F
        gbc.setState(0x7e46, 0x90dc, 0x4d50, 0x999a, 0x9e3e, 0xe577, 0x0, 0x0);
        gbc.writeMem(0x7e46, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x90dc);
        EXPECT(gbc.pc(), 0x7e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0120
        gbc.setState(0x56e2, 0x831d, 0x6910, 0x130d, 0x6aac, 0x6c9e, 0x0, 0x0);
        gbc.writeMem(0x56e2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x831d);
        EXPECT(gbc.pc(), 0x56e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0121
        gbc.setState(0xe954, 0xdcab, 0x3980, 0xc4c5, 0x9759, 0x9d44, 0x1, 0x1);
        gbc.writeMem(0xe954, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdcab);
        EXPECT(gbc.pc(), 0xe956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe954), 0xcb);
        EXPECT(gbc.readMem(0xe955), 0x0);
        // CB 00 0122
        gbc.setState(0x1b67, 0xafc7, 0x80, 0xfcce, 0xff03, 0xcff0, 0x1, 0x1);
        gbc.writeMem(0x1b67, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xafc7);
        EXPECT(gbc.pc(), 0x1b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0123
        gbc.setState(0xbda3, 0xba2d, 0x1510, 0x8d0d, 0xe72a, 0x4a27, 0x0, 0x0);
        gbc.writeMem(0xbda3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xba2d);
        EXPECT(gbc.pc(), 0xbda5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda3), 0xcb);
        EXPECT(gbc.readMem(0xbda4), 0x0);
        // CB 00 0124
        gbc.setState(0x9113, 0xe1ff, 0x3530, 0xc07c, 0x4a, 0xb1c0, 0x0, 0x0);
        gbc.writeMem(0x9113, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe1ff);
        EXPECT(gbc.pc(), 0x9115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9113), 0xcb);
        EXPECT(gbc.readMem(0x9114), 0x0);
        // CB 00 0125
        gbc.setState(0x9e3, 0xf235, 0x7070, 0x4d66, 0xb4f, 0xc049, 0x0, 0x1);
        gbc.writeMem(0x9e3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf235);
        EXPECT(gbc.pc(), 0x9e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0126
        gbc.setState(0x76bb, 0xd314, 0x3570, 0x39af, 0x18f5, 0x90fd, 0x1, 0x0);
        gbc.writeMem(0x76bb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd314);
        EXPECT(gbc.pc(), 0x76bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0127
        gbc.setState(0x57f7, 0xec5, 0x8d80, 0x6e33, 0xa396, 0xb546, 0x0, 0x1);
        gbc.writeMem(0x57f7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xec5);
        EXPECT(gbc.pc(), 0x57f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0128
        gbc.setState(0x2bd, 0x3146, 0xb8c0, 0x9ab6, 0x3fea, 0x5903, 0x0, 0x1);
        gbc.writeMem(0x2bd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3146);
        EXPECT(gbc.pc(), 0x2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0129
        gbc.setState(0x6bdc, 0x44c7, 0x1820, 0x26b2, 0x4e8f, 0x5d42, 0x1, 0x0);
        gbc.writeMem(0x6bdc, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x44c7);
        EXPECT(gbc.pc(), 0x6bde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 012A
        gbc.setState(0xb1d1, 0x83d4, 0x3a70, 0xa817, 0xec58, 0x54b7, 0x0, 0x1);
        gbc.writeMem(0xb1d1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x83d4);
        EXPECT(gbc.pc(), 0xb1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1d1), 0xcb);
        EXPECT(gbc.readMem(0xb1d2), 0x0);
        // CB 00 012B
        gbc.setState(0xa0c3, 0x47a0, 0xf430, 0x52e1, 0xf4d, 0x5495, 0x0, 0x1);
        gbc.writeMem(0xa0c3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x47a0);
        EXPECT(gbc.pc(), 0xa0c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c3), 0xcb);
        EXPECT(gbc.readMem(0xa0c4), 0x0);
        // CB 00 012C
        gbc.setState(0x62c3, 0x1ed6, 0xfd10, 0xdb86, 0x4e92, 0x61ff, 0x0, 0x1);
        gbc.writeMem(0x62c3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1ed6);
        EXPECT(gbc.pc(), 0x62c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 012D
        gbc.setState(0xd6cb, 0x2f62, 0xab90, 0xc1b, 0x6956, 0x520f, 0x1, 0x0);
        gbc.writeMem(0xd6cb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2f62);
        EXPECT(gbc.pc(), 0xd6cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cb), 0xcb);
        EXPECT(gbc.readMem(0xd6cc), 0x0);
        // CB 00 012E
        gbc.setState(0x18d1, 0x4ca9, 0x2310, 0x87c8, 0x20fa, 0xbb39, 0x0, 0x0);
        gbc.writeMem(0x18d1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4ca9);
        EXPECT(gbc.pc(), 0x18d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 012F
        gbc.setState(0xe23a, 0x2a1b, 0x33c0, 0x1d70, 0xd710, 0xc22a, 0x0, 0x1);
        gbc.writeMem(0xe23a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2a1b);
        EXPECT(gbc.pc(), 0xe23c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe23a), 0xcb);
        EXPECT(gbc.readMem(0xe23b), 0x0);
        // CB 00 0130
        gbc.setState(0x2fcd, 0x5537, 0x3e50, 0x9272, 0x40c5, 0xa1a9, 0x0, 0x0);
        gbc.writeMem(0x2fcd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5537);
        EXPECT(gbc.pc(), 0x2fcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0131
        gbc.setState(0xcd7c, 0xafb3, 0x3aa0, 0xa5af, 0xec25, 0xe369, 0x0, 0x0);
        gbc.writeMem(0xcd7c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xafb3);
        EXPECT(gbc.pc(), 0xcd7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd7c), 0xcb);
        EXPECT(gbc.readMem(0xcd7d), 0x0);
        // CB 00 0132
        gbc.setState(0xabc7, 0x54ea, 0xde80, 0xa342, 0x662, 0xc365, 0x1, 0x1);
        gbc.writeMem(0xabc7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x54ea);
        EXPECT(gbc.pc(), 0xabc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc7), 0xcb);
        EXPECT(gbc.readMem(0xabc8), 0x0);
        // CB 00 0133
        gbc.setState(0x42a8, 0x2bb0, 0x6b70, 0xbe9c, 0x8ea7, 0xce6e, 0x1, 0x1);
        gbc.writeMem(0x42a8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2bb0);
        EXPECT(gbc.pc(), 0x42aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0134
        gbc.setState(0xd6c3, 0x740c, 0xbf90, 0x8fe4, 0xa257, 0xdd8f, 0x0, 0x0);
        gbc.writeMem(0xd6c3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x740c);
        EXPECT(gbc.pc(), 0xd6c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c3), 0xcb);
        EXPECT(gbc.readMem(0xd6c4), 0x0);
        // CB 00 0135
        gbc.setState(0x12a4, 0xba2a, 0x1450, 0x2ed6, 0x57ee, 0x6cdb, 0x1, 0x0);
        gbc.writeMem(0x12a4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xba2a);
        EXPECT(gbc.pc(), 0x12a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0136
        gbc.setState(0x80da, 0x2339, 0x8890, 0x6384, 0x74ae, 0x3961, 0x0, 0x0);
        gbc.writeMem(0x80da, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2339);
        EXPECT(gbc.pc(), 0x80dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80da), 0xcb);
        EXPECT(gbc.readMem(0x80db), 0x0);
        // CB 00 0137
        gbc.setState(0x14f7, 0xae79, 0xac30, 0xe979, 0x1b88, 0xe5cb, 0x1, 0x1);
        gbc.writeMem(0x14f7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xae79);
        EXPECT(gbc.pc(), 0x14f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0138
        gbc.setState(0xd260, 0x3425, 0xd110, 0x541a, 0xaeb3, 0x1f6b, 0x1, 0x0);
        gbc.writeMem(0xd260, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3425);
        EXPECT(gbc.pc(), 0xd262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd260), 0xcb);
        EXPECT(gbc.readMem(0xd261), 0x0);
        // CB 00 0139
        gbc.setState(0x17ca, 0x6244, 0x58a0, 0xddcb, 0xb6c4, 0xedba, 0x0, 0x0);
        gbc.writeMem(0x17ca, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6244);
        EXPECT(gbc.pc(), 0x17cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 013A
        gbc.setState(0xee87, 0xd3d1, 0x3250, 0x890e, 0xdb18, 0xd44c, 0x1, 0x0);
        gbc.writeMem(0xee87, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd3d1);
        EXPECT(gbc.pc(), 0xee89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee87), 0xcb);
        EXPECT(gbc.readMem(0xee88), 0x0);
        // CB 00 013D
        gbc.setState(0x7a65, 0xca25, 0x11d0, 0xdc52, 0x788a, 0x1271, 0x1, 0x0);
        gbc.writeMem(0x7a65, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xca25);
        EXPECT(gbc.pc(), 0x7a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 013E
        gbc.setState(0x9102, 0x1c30, 0x3b0, 0xaf9b, 0x27b, 0xec09, 0x0, 0x1);
        gbc.writeMem(0x9102, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1c30);
        EXPECT(gbc.pc(), 0x9104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9102), 0xcb);
        EXPECT(gbc.readMem(0x9103), 0x0);
        // CB 00 013F
        gbc.setState(0x3e0e, 0x3e4f, 0xb7a0, 0x63c7, 0xeb6, 0xe9b0, 0x1, 0x0);
        gbc.writeMem(0x3e0e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3e4f);
        EXPECT(gbc.pc(), 0x3e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0140
        gbc.setState(0xb327, 0x50c1, 0x56c0, 0xbc93, 0x7400, 0x30c0, 0x1, 0x1);
        gbc.writeMem(0xb327, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x50c1);
        EXPECT(gbc.pc(), 0xb329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb327), 0xcb);
        EXPECT(gbc.readMem(0xb328), 0x0);
        // CB 00 0141
        gbc.setState(0x407a, 0xef88, 0xaa0, 0xb942, 0xd165, 0x1c7e, 0x1, 0x0);
        gbc.writeMem(0x407a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xef88);
        EXPECT(gbc.pc(), 0x407c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0142
        gbc.setState(0xe792, 0x198a, 0x26e0, 0x2946, 0xb8f8, 0xfc5b, 0x1, 0x1);
        gbc.writeMem(0xe792, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x198a);
        EXPECT(gbc.pc(), 0xe794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe792), 0xcb);
        EXPECT(gbc.readMem(0xe793), 0x0);
        // CB 00 0143
        gbc.setState(0x7e5c, 0x113d, 0x78a0, 0x7b0b, 0xa6d6, 0x492d, 0x0, 0x1);
        gbc.writeMem(0x7e5c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x113d);
        EXPECT(gbc.pc(), 0x7e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0144
        gbc.setState(0x394b, 0xacf4, 0xa1a0, 0xc34d, 0xd7ab, 0xe423, 0x1, 0x0);
        gbc.writeMem(0x394b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xacf4);
        EXPECT(gbc.pc(), 0x394d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0145
        gbc.setState(0xd4e5, 0xff0a, 0xf0b0, 0x5324, 0x8d05, 0x642a, 0x1, 0x1);
        gbc.writeMem(0xd4e5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xff0a);
        EXPECT(gbc.pc(), 0xd4e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e5), 0xcb);
        EXPECT(gbc.readMem(0xd4e6), 0x0);
        // CB 00 0146
        gbc.setState(0xbfe9, 0xcbe0, 0x6580, 0x903c, 0xac03, 0xd8c3, 0x1, 0x0);
        gbc.writeMem(0xbfe9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcbe0);
        EXPECT(gbc.pc(), 0xbfeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe9), 0xcb);
        EXPECT(gbc.readMem(0xbfea), 0x0);
        // CB 00 0147
        gbc.setState(0x4fef, 0x5bd7, 0x59d0, 0xe880, 0x62b, 0xe649, 0x1, 0x0);
        gbc.writeMem(0x4fef, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5bd7);
        EXPECT(gbc.pc(), 0x4ff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0148
        gbc.setState(0x7eb, 0xa085, 0xe350, 0xd40e, 0x9843, 0xb7b1, 0x0, 0x0);
        gbc.writeMem(0x7eb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa085);
        EXPECT(gbc.pc(), 0x7ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0149
        gbc.setState(0x8a1e, 0x3449, 0x5190, 0xc7f7, 0x17a, 0xdb5d, 0x1, 0x1);
        gbc.writeMem(0x8a1e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3449);
        EXPECT(gbc.pc(), 0x8a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1e), 0xcb);
        EXPECT(gbc.readMem(0x8a1f), 0x0);
        // CB 00 014A
        gbc.setState(0x2fd8, 0x2ab8, 0xaa0, 0x36e3, 0xec53, 0xd8fb, 0x0, 0x0);
        gbc.writeMem(0x2fd8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2ab8);
        EXPECT(gbc.pc(), 0x2fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 014B
        gbc.setState(0xdf57, 0xea3a, 0x9db0, 0xe00b, 0x798c, 0x38bc, 0x0, 0x1);
        gbc.writeMem(0xdf57, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xea3a);
        EXPECT(gbc.pc(), 0xdf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf57), 0xcb);
        EXPECT(gbc.readMem(0xdf58), 0x0);
        // CB 00 014C
        gbc.setState(0x3193, 0xdeeb, 0x7b40, 0x3f3, 0x79a0, 0x85b2, 0x1, 0x1);
        gbc.writeMem(0x3193, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdeeb);
        EXPECT(gbc.pc(), 0x3195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 014D
        gbc.setState(0xa752, 0x6935, 0x7880, 0x61b6, 0x85b5, 0x411d, 0x0, 0x1);
        gbc.writeMem(0xa752, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6935);
        EXPECT(gbc.pc(), 0xa754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa752), 0xcb);
        EXPECT(gbc.readMem(0xa753), 0x0);
        // CB 00 014E
        gbc.setState(0x4157, 0xc619, 0x56e0, 0x53cb, 0xee11, 0xdb82, 0x0, 0x1);
        gbc.writeMem(0x4157, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc619);
        EXPECT(gbc.pc(), 0x4159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 014F
        gbc.setState(0x4448, 0xebfd, 0x50b0, 0x3815, 0x70bc, 0xf335, 0x1, 0x0);
        gbc.writeMem(0x4448, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xebfd);
        EXPECT(gbc.pc(), 0x444a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0150
        gbc.setState(0xef15, 0xb2c7, 0xdfe0, 0x3ba1, 0x75c6, 0x2f26, 0x1, 0x1);
        gbc.writeMem(0xef15, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb2c7);
        EXPECT(gbc.pc(), 0xef17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef15), 0xcb);
        EXPECT(gbc.readMem(0xef16), 0x0);
        // CB 00 0151
        gbc.setState(0x1673, 0xb029, 0xede0, 0x35a6, 0xf866, 0x2206, 0x0, 0x1);
        gbc.writeMem(0x1673, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb029);
        EXPECT(gbc.pc(), 0x1675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0152
        gbc.setState(0xea36, 0x3200, 0xe660, 0xa834, 0xaf5, 0xb079, 0x0, 0x0);
        gbc.writeMem(0xea36, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3200);
        EXPECT(gbc.pc(), 0xea38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea36), 0xcb);
        EXPECT(gbc.readMem(0xea37), 0x0);
        // CB 00 0153
        gbc.setState(0xdb94, 0x6e05, 0x5ed0, 0x24f1, 0xd659, 0xe7b, 0x1, 0x0);
        gbc.writeMem(0xdb94, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6e05);
        EXPECT(gbc.pc(), 0xdb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb94), 0xcb);
        EXPECT(gbc.readMem(0xdb95), 0x0);
        // CB 00 0154
        gbc.setState(0xd4f1, 0x4069, 0xd30, 0x491d, 0x3c68, 0x9f7b, 0x0, 0x1);
        gbc.writeMem(0xd4f1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4069);
        EXPECT(gbc.pc(), 0xd4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f1), 0xcb);
        EXPECT(gbc.readMem(0xd4f2), 0x0);
        // CB 00 0155
        gbc.setState(0x547c, 0x5e56, 0xd0f0, 0x9b3c, 0xfbc3, 0xeb12, 0x1, 0x1);
        gbc.writeMem(0x547c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5e56);
        EXPECT(gbc.pc(), 0x547e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0156
        gbc.setState(0x37a4, 0x84f5, 0x9320, 0x6f11, 0xab16, 0x8061, 0x1, 0x0);
        gbc.writeMem(0x37a4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x84f5);
        EXPECT(gbc.pc(), 0x37a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0157
        gbc.setState(0x2b1c, 0x47a4, 0xc6d0, 0x5757, 0x5de5, 0x80db, 0x1, 0x0);
        gbc.writeMem(0x2b1c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x47a4);
        EXPECT(gbc.pc(), 0x2b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0158
        gbc.setState(0x9bb3, 0x896f, 0xa890, 0xc70a, 0xa84f, 0xe62a, 0x1, 0x1);
        gbc.writeMem(0x9bb3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x896f);
        EXPECT(gbc.pc(), 0x9bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb3), 0xcb);
        EXPECT(gbc.readMem(0x9bb4), 0x0);
        // CB 00 0159
        gbc.setState(0x4c31, 0x9099, 0x3f70, 0x70e9, 0x71e7, 0x5ec4, 0x1, 0x0);
        gbc.writeMem(0x4c31, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9099);
        EXPECT(gbc.pc(), 0x4c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 015A
        gbc.setState(0x8e97, 0x8e4a, 0x100, 0x82b9, 0xcf06, 0xb9c9, 0x0, 0x1);
        gbc.writeMem(0x8e97, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8e4a);
        EXPECT(gbc.pc(), 0x8e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e97), 0xcb);
        EXPECT(gbc.readMem(0x8e98), 0x0);
        // CB 00 015B
        gbc.setState(0x8f1, 0xf4d8, 0xdf30, 0x3cfd, 0x359b, 0xcf9, 0x1, 0x0);
        gbc.writeMem(0x8f1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf4d8);
        EXPECT(gbc.pc(), 0x8f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 015C
        gbc.setState(0xe79d, 0x1eab, 0x1fe0, 0xf846, 0x9f7d, 0xb9a2, 0x1, 0x1);
        gbc.writeMem(0xe79d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1eab);
        EXPECT(gbc.pc(), 0xe79f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79d), 0xcb);
        EXPECT(gbc.readMem(0xe79e), 0x0);
        // CB 00 015D
        gbc.setState(0x5fa7, 0xd12b, 0x9da0, 0x2892, 0xd7fb, 0xd819, 0x0, 0x1);
        gbc.writeMem(0x5fa7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd12b);
        EXPECT(gbc.pc(), 0x5fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 015E
        gbc.setState(0x95cb, 0x69d3, 0x29d0, 0x29d4, 0xece5, 0xca56, 0x1, 0x0);
        gbc.writeMem(0x95cb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x69d3);
        EXPECT(gbc.pc(), 0x95cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cb), 0xcb);
        EXPECT(gbc.readMem(0x95cc), 0x0);
        // CB 00 015F
        gbc.setState(0x6b6b, 0xa485, 0x1950, 0x94b1, 0x80cd, 0x2be6, 0x0, 0x1);
        gbc.writeMem(0x6b6b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa485);
        EXPECT(gbc.pc(), 0x6b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0160
        gbc.setState(0x42ec, 0x2ff0, 0x3e70, 0x334d, 0x648f, 0xc7a5, 0x0, 0x0);
        gbc.writeMem(0x42ec, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2ff0);
        EXPECT(gbc.pc(), 0x42ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0161
        gbc.setState(0x60b5, 0x8fbe, 0xa490, 0xfb23, 0x52aa, 0x7e47, 0x0, 0x1);
        gbc.writeMem(0x60b5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8fbe);
        EXPECT(gbc.pc(), 0x60b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0162
        gbc.setState(0x2a67, 0x60bf, 0xfc60, 0x74f4, 0xf75, 0x4943, 0x1, 0x0);
        gbc.writeMem(0x2a67, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x60bf);
        EXPECT(gbc.pc(), 0x2a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0163
        gbc.setState(0xc21c, 0x8a0b, 0x1200, 0x4474, 0x784, 0xf984, 0x1, 0x1);
        gbc.writeMem(0xc21c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8a0b);
        EXPECT(gbc.pc(), 0xc21e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc21c), 0xcb);
        EXPECT(gbc.readMem(0xc21d), 0x0);
        // CB 00 0164
        gbc.setState(0x31e7, 0x1750, 0x6140, 0x5871, 0x531c, 0x514d, 0x1, 0x0);
        gbc.writeMem(0x31e7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1750);
        EXPECT(gbc.pc(), 0x31e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0165
        gbc.setState(0xcd71, 0x302c, 0x59f0, 0x1729, 0x1165, 0xcdd3, 0x0, 0x1);
        gbc.writeMem(0xcd71, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x302c);
        EXPECT(gbc.pc(), 0xcd73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd71), 0xcb);
        EXPECT(gbc.readMem(0xcd72), 0x0);
        // CB 00 0166
        gbc.setState(0xcbad, 0xa606, 0xa790, 0xb0a7, 0x4f13, 0x742c, 0x0, 0x0);
        gbc.writeMem(0xcbad, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa606);
        EXPECT(gbc.pc(), 0xcbaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbad), 0xcb);
        EXPECT(gbc.readMem(0xcbae), 0x0);
        // CB 00 0167
        gbc.setState(0xbcf6, 0xca59, 0x5dd0, 0xcb5, 0xc66b, 0xb0af, 0x0, 0x0);
        gbc.writeMem(0xbcf6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xca59);
        EXPECT(gbc.pc(), 0xbcf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf6), 0xcb);
        EXPECT(gbc.readMem(0xbcf7), 0x0);
        // CB 00 0168
        gbc.setState(0x5a60, 0xd067, 0x7830, 0x9141, 0x2e5a, 0x6907, 0x0, 0x1);
        gbc.writeMem(0x5a60, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd067);
        EXPECT(gbc.pc(), 0x5a62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0169
        gbc.setState(0x8f0c, 0x7848, 0x94e0, 0x9256, 0xdfe2, 0x4cb8, 0x1, 0x1);
        gbc.writeMem(0x8f0c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7848);
        EXPECT(gbc.pc(), 0x8f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0c), 0xcb);
        EXPECT(gbc.readMem(0x8f0d), 0x0);
        // CB 00 016A
        gbc.setState(0x15aa, 0x38c3, 0x3ab0, 0x3ab5, 0x1a8b, 0x8960, 0x1, 0x1);
        gbc.writeMem(0x15aa, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x38c3);
        EXPECT(gbc.pc(), 0x15ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 016B
        gbc.setState(0x7860, 0x3aae, 0x87c0, 0xc667, 0x2ea9, 0x8655, 0x1, 0x0);
        gbc.writeMem(0x7860, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3aae);
        EXPECT(gbc.pc(), 0x7862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 016C
        gbc.setState(0xc9a9, 0x232e, 0x5090, 0x8bc7, 0xd912, 0x1a3c, 0x0, 0x1);
        gbc.writeMem(0xc9a9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x232e);
        EXPECT(gbc.pc(), 0xc9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a9), 0xcb);
        EXPECT(gbc.readMem(0xc9aa), 0x0);
        // CB 00 016D
        gbc.setState(0x1365, 0x80a0, 0x7070, 0xbff2, 0x5ed, 0x189, 0x0, 0x1);
        gbc.writeMem(0x1365, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x80a0);
        EXPECT(gbc.pc(), 0x1367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 016E
        gbc.setState(0xe770, 0xa4bd, 0x5240, 0xa12a, 0x8fcc, 0xdfb2, 0x0, 0x1);
        gbc.writeMem(0xe770, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa4bd);
        EXPECT(gbc.pc(), 0xe772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe770), 0xcb);
        EXPECT(gbc.readMem(0xe771), 0x0);
        // CB 00 016F
        gbc.setState(0xd7ae, 0x18b7, 0xa100, 0xe311, 0x3b4d, 0x3e5d, 0x1, 0x0);
        gbc.writeMem(0xd7ae, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x18b7);
        EXPECT(gbc.pc(), 0xd7b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ae), 0xcb);
        EXPECT(gbc.readMem(0xd7af), 0x0);
        // CB 00 0170
        gbc.setState(0x1b8c, 0xf9f3, 0x5cd0, 0xf315, 0xc937, 0xe444, 0x0, 0x0);
        gbc.writeMem(0x1b8c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf9f3);
        EXPECT(gbc.pc(), 0x1b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0171
        gbc.setState(0xc3d1, 0xfec7, 0xc950, 0x75d9, 0x4833, 0xea70, 0x0, 0x1);
        gbc.writeMem(0xc3d1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfec7);
        EXPECT(gbc.pc(), 0xc3d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d1), 0xcb);
        EXPECT(gbc.readMem(0xc3d2), 0x0);
        // CB 00 0172
        gbc.setState(0x9fc1, 0xb73e, 0xa030, 0xe772, 0x2765, 0x41be, 0x0, 0x1);
        gbc.writeMem(0x9fc1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb73e);
        EXPECT(gbc.pc(), 0x9fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc1), 0xcb);
        EXPECT(gbc.readMem(0x9fc2), 0x0);
        // CB 00 0173
        gbc.setState(0x6b68, 0x55c8, 0xf90, 0xf9e8, 0x793f, 0xf6ce, 0x0, 0x0);
        gbc.writeMem(0x6b68, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x55c8);
        EXPECT(gbc.pc(), 0x6b6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0174
        gbc.setState(0x2750, 0x10a8, 0x17e0, 0x9941, 0x9307, 0x36c4, 0x1, 0x1);
        gbc.writeMem(0x2750, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x10a8);
        EXPECT(gbc.pc(), 0x2752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0175
        gbc.setState(0x2d68, 0xda53, 0xda0, 0xa9d6, 0x842d, 0x5f07, 0x0, 0x1);
        gbc.writeMem(0x2d68, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xda53);
        EXPECT(gbc.pc(), 0x2d6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0176
        gbc.setState(0xb54a, 0x5355, 0xe80, 0x248, 0xa850, 0x834e, 0x0, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5355);
        EXPECT(gbc.pc(), 0xb54c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54a), 0xcb);
        EXPECT(gbc.readMem(0xb54b), 0x0);
        // CB 00 0177
        gbc.setState(0x4e35, 0xdbe8, 0xc290, 0xf46e, 0xa539, 0xe22f, 0x1, 0x1);
        gbc.writeMem(0x4e35, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdbe8);
        EXPECT(gbc.pc(), 0x4e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0178
        gbc.setState(0x2fec, 0x2907, 0x2370, 0xbf32, 0x8d1, 0xb3ad, 0x0, 0x0);
        gbc.writeMem(0x2fec, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2907);
        EXPECT(gbc.pc(), 0x2fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0179
        gbc.setState(0x52c0, 0x5f9e, 0xadf0, 0x1c74, 0x72d8, 0xc778, 0x0, 0x0);
        gbc.writeMem(0x52c0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5f9e);
        EXPECT(gbc.pc(), 0x52c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 017A
        gbc.setState(0x9b16, 0x5a22, 0x6e90, 0x5cd3, 0x746f, 0x6ab2, 0x1, 0x0);
        gbc.writeMem(0x9b16, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5a22);
        EXPECT(gbc.pc(), 0x9b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b16), 0xcb);
        EXPECT(gbc.readMem(0x9b17), 0x0);
        // CB 00 017B
        gbc.setState(0xbd10, 0x6c3d, 0x400, 0x6c15, 0xcb70, 0x9ed6, 0x1, 0x1);
        gbc.writeMem(0xbd10, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6c3d);
        EXPECT(gbc.pc(), 0xbd12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd10), 0xcb);
        EXPECT(gbc.readMem(0xbd11), 0x0);
        // CB 00 017C
        gbc.setState(0x2435, 0xe474, 0xe780, 0xc8b5, 0x9d6b, 0xec82, 0x0, 0x0);
        gbc.writeMem(0x2435, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe474);
        EXPECT(gbc.pc(), 0x2437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 017D
        gbc.setState(0xaa39, 0xbf00, 0x60a0, 0xe365, 0x79b8, 0xa597, 0x0, 0x0);
        gbc.writeMem(0xaa39, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbf00);
        EXPECT(gbc.pc(), 0xaa3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa39), 0xcb);
        EXPECT(gbc.readMem(0xaa3a), 0x0);
        // CB 00 017E
        gbc.setState(0xb7db, 0x314d, 0x1b40, 0x29c1, 0xadf1, 0x77ab, 0x1, 0x1);
        gbc.writeMem(0xb7db, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x314d);
        EXPECT(gbc.pc(), 0xb7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7db), 0xcb);
        EXPECT(gbc.readMem(0xb7dc), 0x0);
        // CB 00 017F
        gbc.setState(0xcd34, 0xcb45, 0x4930, 0xdea5, 0x3ff5, 0xd8d, 0x1, 0x1);
        gbc.writeMem(0xcd34, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcb45);
        EXPECT(gbc.pc(), 0xcd36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd34), 0xcb);
        EXPECT(gbc.readMem(0xcd35), 0x0);
        // CB 00 0180
        gbc.setState(0x9d1a, 0x2426, 0xd450, 0x1f50, 0xe08d, 0xa167, 0x0, 0x1);
        gbc.writeMem(0x9d1a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2426);
        EXPECT(gbc.pc(), 0x9d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d1a), 0xcb);
        EXPECT(gbc.readMem(0x9d1b), 0x0);
        // CB 00 0181
        gbc.setState(0x5835, 0xd744, 0x2370, 0x18f4, 0xb032, 0x1eaf, 0x0, 0x0);
        gbc.writeMem(0x5835, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd744);
        EXPECT(gbc.pc(), 0x5837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0182
        gbc.setState(0xc476, 0xd46d, 0xb320, 0x9e75, 0xcca9, 0x3511, 0x0, 0x1);
        gbc.writeMem(0xc476, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd46d);
        EXPECT(gbc.pc(), 0xc478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc476), 0xcb);
        EXPECT(gbc.readMem(0xc477), 0x0);
        // CB 00 0183
        gbc.setState(0x911, 0xdb37, 0x4eb0, 0x2535, 0xadfa, 0xb90a, 0x0, 0x1);
        gbc.writeMem(0x911, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdb37);
        EXPECT(gbc.pc(), 0x913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0184
        gbc.setState(0xaade, 0x2e02, 0xcfa0, 0xc479, 0xf79d, 0xafd7, 0x0, 0x0);
        gbc.writeMem(0xaade, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2e02);
        EXPECT(gbc.pc(), 0xaae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaade), 0xcb);
        EXPECT(gbc.readMem(0xaadf), 0x0);
        // CB 00 0185
        gbc.setState(0xdd84, 0xce0f, 0xb210, 0xfe35, 0xc14, 0x41c7, 0x1, 0x1);
        gbc.writeMem(0xdd84, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xce0f);
        EXPECT(gbc.pc(), 0xdd86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd84), 0xcb);
        EXPECT(gbc.readMem(0xdd85), 0x0);
        // CB 00 0186
        gbc.setState(0xc088, 0xc511, 0x5510, 0x4d69, 0xf3c8, 0x8290, 0x0, 0x0);
        gbc.writeMem(0xc088, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc511);
        EXPECT(gbc.pc(), 0xc08a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc088), 0xcb);
        EXPECT(gbc.readMem(0xc089), 0x0);
        // CB 00 0187
        gbc.setState(0x369c, 0x1448, 0x3560, 0x32ca, 0x7212, 0x676d, 0x1, 0x1);
        gbc.writeMem(0x369c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1448);
        EXPECT(gbc.pc(), 0x369e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0188
        gbc.setState(0x8260, 0xbc1c, 0xf920, 0xbf5d, 0x3dd6, 0xa543, 0x0, 0x1);
        gbc.writeMem(0x8260, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbc1c);
        EXPECT(gbc.pc(), 0x8262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8260), 0xcb);
        EXPECT(gbc.readMem(0x8261), 0x0);
        // CB 00 018A
        gbc.setState(0xbcea, 0x26db, 0x2d10, 0xdbbb, 0x29e2, 0xe9f6, 0x0, 0x0);
        gbc.writeMem(0xbcea, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x26db);
        EXPECT(gbc.pc(), 0xbcec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcea), 0xcb);
        EXPECT(gbc.readMem(0xbceb), 0x0);
        // CB 00 018B
        gbc.setState(0x5cf2, 0xf992, 0xece0, 0xe7f, 0x251, 0x413d, 0x1, 0x1);
        gbc.writeMem(0x5cf2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf992);
        EXPECT(gbc.pc(), 0x5cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 018C
        gbc.setState(0x7dff, 0x4546, 0x5b0, 0x3134, 0x5641, 0x52eb, 0x1, 0x0);
        gbc.writeMem(0x7dff, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4546);
        EXPECT(gbc.pc(), 0x7e01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 018D
        gbc.setState(0x785f, 0x5cfb, 0x7500, 0x59, 0x61dc, 0xc0df, 0x0, 0x0);
        gbc.writeMem(0x785f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5cfb);
        EXPECT(gbc.pc(), 0x7861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 018E
        gbc.setState(0x42d9, 0x72d1, 0xca70, 0x568a, 0x9b03, 0x1e33, 0x0, 0x0);
        gbc.writeMem(0x42d9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x72d1);
        EXPECT(gbc.pc(), 0x42db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 018F
        gbc.setState(0x77e8, 0x8022, 0x81d0, 0x3297, 0xbcb2, 0x32ce, 0x0, 0x0);
        gbc.writeMem(0x77e8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8022);
        EXPECT(gbc.pc(), 0x77ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0190
        gbc.setState(0x2234, 0xbc80, 0xe20, 0x877, 0x3cbb, 0xfe1e, 0x1, 0x0);
        gbc.writeMem(0x2234, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbc80);
        EXPECT(gbc.pc(), 0x2236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0191
        gbc.setState(0xcfcb, 0x8c32, 0x8cd0, 0x8ba, 0x309e, 0x4a2f, 0x1, 0x1);
        gbc.writeMem(0xcfcb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8c32);
        EXPECT(gbc.pc(), 0xcfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfcb), 0xcb);
        EXPECT(gbc.readMem(0xcfcc), 0x0);
        // CB 00 0192
        gbc.setState(0xc7cb, 0x8705, 0x5170, 0xc5ec, 0x58ad, 0xdec7, 0x0, 0x1);
        gbc.writeMem(0xc7cb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8705);
        EXPECT(gbc.pc(), 0xc7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7cb), 0xcb);
        EXPECT(gbc.readMem(0xc7cc), 0x0);
        // CB 00 0193
        gbc.setState(0x4494, 0x4be2, 0x2a80, 0xd7e9, 0x7e6e, 0x8194, 0x0, 0x0);
        gbc.writeMem(0x4494, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4be2);
        EXPECT(gbc.pc(), 0x4496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0194
        gbc.setState(0x32f4, 0x1af3, 0x21a0, 0xe892, 0xb0c2, 0x9689, 0x1, 0x0);
        gbc.writeMem(0x32f4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1af3);
        EXPECT(gbc.pc(), 0x32f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0195
        gbc.setState(0xace6, 0x20cb, 0x5990, 0x1b02, 0xd193, 0x6f44, 0x1, 0x1);
        gbc.writeMem(0xace6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x20cb);
        EXPECT(gbc.pc(), 0xace8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace6), 0xcb);
        EXPECT(gbc.readMem(0xace7), 0x0);
        // CB 00 0196
        gbc.setState(0x9dbf, 0x3778, 0xd780, 0x673e, 0xbb04, 0x73c, 0x1, 0x1);
        gbc.writeMem(0x9dbf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3778);
        EXPECT(gbc.pc(), 0x9dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbf), 0xcb);
        EXPECT(gbc.readMem(0x9dc0), 0x0);
        // CB 00 0197
        gbc.setState(0x88e4, 0x8b95, 0xec90, 0x25a8, 0xcc45, 0xd0b6, 0x0, 0x1);
        gbc.writeMem(0x88e4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8b95);
        EXPECT(gbc.pc(), 0x88e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e4), 0xcb);
        EXPECT(gbc.readMem(0x88e5), 0x0);
        // CB 00 0198
        gbc.setState(0xdcad, 0x5732, 0x1220, 0x6dbc, 0x3a18, 0x98d1, 0x0, 0x0);
        gbc.writeMem(0xdcad, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5732);
        EXPECT(gbc.pc(), 0xdcaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcad), 0xcb);
        EXPECT(gbc.readMem(0xdcae), 0x0);
        // CB 00 0199
        gbc.setState(0x778c, 0x3726, 0x1c50, 0x116, 0x651, 0xb8dd, 0x0, 0x1);
        gbc.writeMem(0x778c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3726);
        EXPECT(gbc.pc(), 0x778e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 019A
        gbc.setState(0xb403, 0x6c85, 0x8e70, 0x2f4b, 0x8d9d, 0x3aed, 0x0, 0x0);
        gbc.writeMem(0xb403, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6c85);
        EXPECT(gbc.pc(), 0xb405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb403), 0xcb);
        EXPECT(gbc.readMem(0xb404), 0x0);
        // CB 00 019B
        gbc.setState(0x4045, 0x4fe3, 0xd630, 0x5202, 0xf744, 0xce68, 0x1, 0x1);
        gbc.writeMem(0x4045, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4fe3);
        EXPECT(gbc.pc(), 0x4047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 019C
        gbc.setState(0x4dc4, 0x128a, 0x40b0, 0x1052, 0x2f3d, 0x7d5f, 0x0, 0x0);
        gbc.writeMem(0x4dc4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x128a);
        EXPECT(gbc.pc(), 0x4dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 019D
        gbc.setState(0x3a04, 0x417a, 0x20c0, 0x67d7, 0xd015, 0x187c, 0x0, 0x0);
        gbc.writeMem(0x3a04, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x417a);
        EXPECT(gbc.pc(), 0x3a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 019E
        gbc.setState(0x8138, 0x48aa, 0x1260, 0x132, 0x42cf, 0xd0b4, 0x1, 0x0);
        gbc.writeMem(0x8138, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x48aa);
        EXPECT(gbc.pc(), 0x813a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8138), 0xcb);
        EXPECT(gbc.readMem(0x8139), 0x0);
        // CB 00 019F
        gbc.setState(0x8502, 0x34e6, 0xdb40, 0x7d3b, 0x9a79, 0xc598, 0x1, 0x1);
        gbc.writeMem(0x8502, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x34e6);
        EXPECT(gbc.pc(), 0x8504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8502), 0xcb);
        EXPECT(gbc.readMem(0x8503), 0x0);
        // CB 00 01A0
        gbc.setState(0x7971, 0x831f, 0x6c0, 0x5e26, 0xe176, 0x9b70, 0x0, 0x0);
        gbc.writeMem(0x7971, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x831f);
        EXPECT(gbc.pc(), 0x7973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01A1
        gbc.setState(0x5fae, 0x24c0, 0x8e00, 0x1f88, 0x8ba8, 0xd245, 0x0, 0x0);
        gbc.writeMem(0x5fae, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x24c0);
        EXPECT(gbc.pc(), 0x5fb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01A2
        gbc.setState(0x725d, 0xfdc2, 0x9ca0, 0x6292, 0xcc20, 0xe645, 0x1, 0x0);
        gbc.writeMem(0x725d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfdc2);
        EXPECT(gbc.pc(), 0x725f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01A3
        gbc.setState(0x2dd6, 0x833b, 0x94e0, 0xafb2, 0xec98, 0xe45a, 0x0, 0x0);
        gbc.writeMem(0x2dd6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x833b);
        EXPECT(gbc.pc(), 0x2dd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01A4
        gbc.setState(0x5dee, 0x19f8, 0xa3e0, 0x5ac7, 0xa006, 0x66f4, 0x1, 0x1);
        gbc.writeMem(0x5dee, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x19f8);
        EXPECT(gbc.pc(), 0x5df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01A5
        gbc.setState(0xa149, 0x72cb, 0xfb20, 0xe5e4, 0x2114, 0x5978, 0x1, 0x0);
        gbc.writeMem(0xa149, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x72cb);
        EXPECT(gbc.pc(), 0xa14b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa149), 0xcb);
        EXPECT(gbc.readMem(0xa14a), 0x0);
        // CB 00 01A6
        gbc.setState(0x6238, 0x6e63, 0xa3e0, 0x5383, 0x8d7, 0x8db7, 0x1, 0x1);
        gbc.writeMem(0x6238, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6e63);
        EXPECT(gbc.pc(), 0x623a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01A7
        gbc.setState(0x2987, 0xfb0f, 0x3c10, 0xee5c, 0xaf81, 0x9945, 0x0, 0x1);
        gbc.writeMem(0x2987, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfb0f);
        EXPECT(gbc.pc(), 0x2989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01A8
        gbc.setState(0x84a1, 0xd986, 0x6f70, 0x635c, 0x572d, 0x575e, 0x1, 0x0);
        gbc.writeMem(0x84a1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd986);
        EXPECT(gbc.pc(), 0x84a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a1), 0xcb);
        EXPECT(gbc.readMem(0x84a2), 0x0);
        // CB 00 01A9
        gbc.setState(0x76e6, 0xd279, 0xe970, 0xe34c, 0xa003, 0x37dd, 0x0, 0x1);
        gbc.writeMem(0x76e6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd279);
        EXPECT(gbc.pc(), 0x76e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01AA
        gbc.setState(0xdfd4, 0xb07b, 0x650, 0x47b, 0x9a36, 0x5d4f, 0x1, 0x0);
        gbc.writeMem(0xdfd4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb07b);
        EXPECT(gbc.pc(), 0xdfd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd4), 0xcb);
        EXPECT(gbc.readMem(0xdfd5), 0x0);
        // CB 00 01AB
        gbc.setState(0x64d9, 0xfd31, 0x8080, 0xf850, 0x54e, 0xaa74, 0x0, 0x0);
        gbc.writeMem(0x64d9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfd31);
        EXPECT(gbc.pc(), 0x64db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01AC
        gbc.setState(0x37cf, 0xac15, 0x87d0, 0x7ac9, 0x5c5d, 0x94cf, 0x0, 0x0);
        gbc.writeMem(0x37cf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xac15);
        EXPECT(gbc.pc(), 0x37d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01AD
        gbc.setState(0xa134, 0xd382, 0x5d00, 0xdbd1, 0x74d0, 0xbd67, 0x0, 0x0);
        gbc.writeMem(0xa134, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd382);
        EXPECT(gbc.pc(), 0xa136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa134), 0xcb);
        EXPECT(gbc.readMem(0xa135), 0x0);
        // CB 00 01AE
        gbc.setState(0x904b, 0x45c6, 0xc1d0, 0x4ccf, 0xd3c7, 0xf4c7, 0x0, 0x1);
        gbc.writeMem(0x904b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x45c6);
        EXPECT(gbc.pc(), 0x904d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904b), 0xcb);
        EXPECT(gbc.readMem(0x904c), 0x0);
        // CB 00 01AF
        gbc.setState(0x21cb, 0x6867, 0x1280, 0x3dca, 0xe79c, 0xd41e, 0x0, 0x0);
        gbc.writeMem(0x21cb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6867);
        EXPECT(gbc.pc(), 0x21cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01B0
        gbc.setState(0xa8b1, 0xcb4b, 0x7c20, 0x9964, 0x5ed8, 0x2354, 0x0, 0x1);
        gbc.writeMem(0xa8b1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xcb4b);
        EXPECT(gbc.pc(), 0xa8b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b1), 0xcb);
        EXPECT(gbc.readMem(0xa8b2), 0x0);
        // CB 00 01B1
        gbc.setState(0x1604, 0x12f4, 0x2600, 0x9d30, 0xde7b, 0xf5a, 0x0, 0x1);
        gbc.writeMem(0x1604, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x12f4);
        EXPECT(gbc.pc(), 0x1606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01B2
        gbc.setState(0xdf38, 0xecb3, 0xfd60, 0x1467, 0x7508, 0xf557, 0x1, 0x0);
        gbc.writeMem(0xdf38, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xecb3);
        EXPECT(gbc.pc(), 0xdf3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf38), 0xcb);
        EXPECT(gbc.readMem(0xdf39), 0x0);
        // CB 00 01B3
        gbc.setState(0xb811, 0x5fe5, 0xcdb0, 0xb890, 0xd326, 0xf796, 0x1, 0x1);
        gbc.writeMem(0xb811, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5fe5);
        EXPECT(gbc.pc(), 0xb813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb811), 0xcb);
        EXPECT(gbc.readMem(0xb812), 0x0);
        // CB 00 01B5
        gbc.setState(0xccdc, 0x9a56, 0xa100, 0x8c38, 0x44e9, 0xe5dc, 0x1, 0x1);
        gbc.writeMem(0xccdc, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9a56);
        EXPECT(gbc.pc(), 0xccde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccdc), 0xcb);
        EXPECT(gbc.readMem(0xccdd), 0x0);
        // CB 00 01B6
        gbc.setState(0xbae5, 0x82e8, 0x4220, 0x423a, 0x13c1, 0xefd3, 0x1, 0x1);
        gbc.writeMem(0xbae5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x82e8);
        EXPECT(gbc.pc(), 0xbae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbae5), 0xcb);
        EXPECT(gbc.readMem(0xbae6), 0x0);
        // CB 00 01B7
        gbc.setState(0xe1e0, 0x4d15, 0x6c10, 0x860b, 0x35bc, 0xe5a5, 0x1, 0x0);
        gbc.writeMem(0xe1e0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4d15);
        EXPECT(gbc.pc(), 0xe1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e0), 0xcb);
        EXPECT(gbc.readMem(0xe1e1), 0x0);
        // CB 00 01B8
        gbc.setState(0x19a9, 0xbbae, 0xfa10, 0x3251, 0xd31d, 0x1da1, 0x1, 0x1);
        gbc.writeMem(0x19a9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbbae);
        EXPECT(gbc.pc(), 0x19ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01B9
        gbc.setState(0x6909, 0x60b4, 0xe250, 0x32f1, 0x7389, 0xf8ea, 0x1, 0x1);
        gbc.writeMem(0x6909, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x60b4);
        EXPECT(gbc.pc(), 0x690b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01BA
        gbc.setState(0xe909, 0xdef4, 0xfb10, 0x1b8, 0x8c2c, 0x52c, 0x1, 0x0);
        gbc.writeMem(0xe909, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xdef4);
        EXPECT(gbc.pc(), 0xe90b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe909), 0xcb);
        EXPECT(gbc.readMem(0xe90a), 0x0);
        // CB 00 01BB
        gbc.setState(0xe2fd, 0xf011, 0x22f0, 0xdf54, 0xa427, 0x6213, 0x1, 0x1);
        gbc.writeMem(0xe2fd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf011);
        EXPECT(gbc.pc(), 0xe2ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2fd), 0xcb);
        EXPECT(gbc.readMem(0xe2fe), 0x0);
        // CB 00 01BC
        gbc.setState(0x6a47, 0x7ec7, 0xaa90, 0x3cab, 0xf616, 0xee4c, 0x1, 0x1);
        gbc.writeMem(0x6a47, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7ec7);
        EXPECT(gbc.pc(), 0x6a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01BD
        gbc.setState(0x513e, 0x9ba5, 0xf7b0, 0x59a0, 0x2e68, 0xccc6, 0x1, 0x1);
        gbc.writeMem(0x513e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9ba5);
        EXPECT(gbc.pc(), 0x5140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01BF
        gbc.setState(0x4f7b, 0x5c1f, 0x390, 0x6293, 0xb00f, 0x42f, 0x0, 0x0);
        gbc.writeMem(0x4f7b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5c1f);
        EXPECT(gbc.pc(), 0x4f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01C0
        gbc.setState(0xbdde, 0x8f84, 0x95b0, 0x10, 0x7765, 0x28e0, 0x1, 0x1);
        gbc.writeMem(0xbdde, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8f84);
        EXPECT(gbc.pc(), 0xbde0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdde), 0xcb);
        EXPECT(gbc.readMem(0xbddf), 0x0);
        // CB 00 01C1
        gbc.setState(0xd3f6, 0xa62e, 0xa030, 0xfa8c, 0xf47, 0x6390, 0x0, 0x1);
        gbc.writeMem(0xd3f6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa62e);
        EXPECT(gbc.pc(), 0xd3f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f6), 0xcb);
        EXPECT(gbc.readMem(0xd3f7), 0x0);
        // CB 00 01C2
        gbc.setState(0xd062, 0x7766, 0xd640, 0x4dab, 0x2b4d, 0x1c49, 0x1, 0x0);
        gbc.writeMem(0xd062, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7766);
        EXPECT(gbc.pc(), 0xd064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd062), 0xcb);
        EXPECT(gbc.readMem(0xd063), 0x0);
        // CB 00 01C3
        gbc.setState(0x112d, 0x75c6, 0x67b0, 0x35c2, 0x3477, 0x8237, 0x1, 0x1);
        gbc.writeMem(0x112d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x75c6);
        EXPECT(gbc.pc(), 0x112f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01C4
        gbc.setState(0x657a, 0x24a8, 0x6690, 0x55fc, 0xc836, 0x5058, 0x0, 0x0);
        gbc.writeMem(0x657a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x24a8);
        EXPECT(gbc.pc(), 0x657c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01C5
        gbc.setState(0x3da2, 0xeaa2, 0x8ff0, 0xb4ef, 0x3867, 0xc2af, 0x0, 0x0);
        gbc.writeMem(0x3da2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xeaa2);
        EXPECT(gbc.pc(), 0x3da4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01C6
        gbc.setState(0x8785, 0xf5f1, 0x3be0, 0x33d7, 0x5a5a, 0x531e, 0x0, 0x0);
        gbc.writeMem(0x8785, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf5f1);
        EXPECT(gbc.pc(), 0x8787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8785), 0xcb);
        EXPECT(gbc.readMem(0x8786), 0x0);
        // CB 00 01C8
        gbc.setState(0xbd88, 0xd049, 0x4e00, 0xa200, 0x69dc, 0x6e76, 0x0, 0x1);
        gbc.writeMem(0xbd88, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd049);
        EXPECT(gbc.pc(), 0xbd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd88), 0xcb);
        EXPECT(gbc.readMem(0xbd89), 0x0);
        // CB 00 01C9
        gbc.setState(0x2fa1, 0x2e59, 0x7e90, 0x4e, 0x96dc, 0xc647, 0x0, 0x0);
        gbc.writeMem(0x2fa1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2e59);
        EXPECT(gbc.pc(), 0x2fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01CA
        gbc.setState(0xa066, 0xd469, 0x8870, 0xf934, 0xaa51, 0x7752, 0x1, 0x0);
        gbc.writeMem(0xa066, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd469);
        EXPECT(gbc.pc(), 0xa068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa066), 0xcb);
        EXPECT(gbc.readMem(0xa067), 0x0);
        // CB 00 01CB
        gbc.setState(0x223a, 0xf4db, 0xd1e0, 0x2b32, 0x374a, 0xa27b, 0x0, 0x0);
        gbc.writeMem(0x223a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf4db);
        EXPECT(gbc.pc(), 0x223c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01CC
        gbc.setState(0xe733, 0xf502, 0x5c00, 0x8456, 0xa1cc, 0x1558, 0x1, 0x1);
        gbc.writeMem(0xe733, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf502);
        EXPECT(gbc.pc(), 0xe735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe733), 0xcb);
        EXPECT(gbc.readMem(0xe734), 0x0);
        // CB 00 01CD
        gbc.setState(0xd505, 0xaaf8, 0x2b20, 0x4896, 0x7e9b, 0xb77f, 0x1, 0x0);
        gbc.writeMem(0xd505, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xaaf8);
        EXPECT(gbc.pc(), 0xd507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd505), 0xcb);
        EXPECT(gbc.readMem(0xd506), 0x0);
        // CB 00 01CE
        gbc.setState(0xd46e, 0xd472, 0x2b20, 0x7d59, 0xac7, 0x583c, 0x1, 0x1);
        gbc.writeMem(0xd46e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd472);
        EXPECT(gbc.pc(), 0xd470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd46e), 0xcb);
        EXPECT(gbc.readMem(0xd46f), 0x0);
        // CB 00 01CF
        gbc.setState(0x1e69, 0x8e81, 0x9960, 0x5fdf, 0xe122, 0x5e00, 0x1, 0x1);
        gbc.writeMem(0x1e69, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8e81);
        EXPECT(gbc.pc(), 0x1e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01D0
        gbc.setState(0xaf5f, 0x3320, 0x4290, 0x3b45, 0xac, 0xc77a, 0x1, 0x1);
        gbc.writeMem(0xaf5f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3320);
        EXPECT(gbc.pc(), 0xaf61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf5f), 0xcb);
        EXPECT(gbc.readMem(0xaf60), 0x0);
        // CB 00 01D1
        gbc.setState(0xa851, 0x1bb4, 0xf5c0, 0x1f8d, 0xfb6, 0xe9e8, 0x0, 0x1);
        gbc.writeMem(0xa851, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1bb4);
        EXPECT(gbc.pc(), 0xa853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa851), 0xcb);
        EXPECT(gbc.readMem(0xa852), 0x0);
        // CB 00 01D3
        gbc.setState(0x217b, 0xec11, 0x3080, 0x58e8, 0xdd73, 0xb0db, 0x1, 0x0);
        gbc.writeMem(0x217b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xec11);
        EXPECT(gbc.pc(), 0x217d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01D4
        gbc.setState(0x6869, 0xeed, 0xd9a0, 0xef9e, 0x93b5, 0x99ce, 0x0, 0x0);
        gbc.writeMem(0x6869, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xeed);
        EXPECT(gbc.pc(), 0x686b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01D5
        gbc.setState(0x4622, 0xe02d, 0xdb60, 0x89cf, 0x1430, 0x91d3, 0x1, 0x1);
        gbc.writeMem(0x4622, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe02d);
        EXPECT(gbc.pc(), 0x4624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01D6
        gbc.setState(0xbee3, 0xb605, 0xc40, 0xba28, 0x1fb3, 0x771a, 0x0, 0x0);
        gbc.writeMem(0xbee3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb605);
        EXPECT(gbc.pc(), 0xbee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee3), 0xcb);
        EXPECT(gbc.readMem(0xbee4), 0x0);
        // CB 00 01D7
        gbc.setState(0xb7fe, 0x625a, 0xc20, 0xa44a, 0x95a, 0x8469, 0x0, 0x1);
        gbc.writeMem(0xb7fe, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x625a);
        EXPECT(gbc.pc(), 0xb800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7fe), 0xcb);
        EXPECT(gbc.readMem(0xb7ff), 0x0);
        // CB 00 01D8
        gbc.setState(0x709, 0xbac9, 0xce30, 0xf024, 0xddd3, 0x63b5, 0x1, 0x1);
        gbc.writeMem(0x709, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbac9);
        EXPECT(gbc.pc(), 0x70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01D9
        gbc.setState(0x3d86, 0xf376, 0xe960, 0x8ac9, 0x8c48, 0x9588, 0x0, 0x1);
        gbc.writeMem(0x3d86, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf376);
        EXPECT(gbc.pc(), 0x3d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01DA
        gbc.setState(0x7db1, 0x8c00, 0x8620, 0xc2c0, 0x74be, 0x29a9, 0x0, 0x1);
        gbc.writeMem(0x7db1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8c00);
        EXPECT(gbc.pc(), 0x7db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01DB
        gbc.setState(0xb012, 0xae1d, 0xced0, 0xa743, 0x81ad, 0xa9e8, 0x1, 0x1);
        gbc.writeMem(0xb012, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xae1d);
        EXPECT(gbc.pc(), 0xb014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb012), 0xcb);
        EXPECT(gbc.readMem(0xb013), 0x0);
        // CB 00 01DC
        gbc.setState(0x4986, 0x8189, 0x2310, 0x24bd, 0x1752, 0x8ae, 0x1, 0x0);
        gbc.writeMem(0x4986, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8189);
        EXPECT(gbc.pc(), 0x4988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01DD
        gbc.setState(0x2cd, 0x5e2d, 0xc7a0, 0xa2c3, 0x1203, 0x49e0, 0x1, 0x0);
        gbc.writeMem(0x2cd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5e2d);
        EXPECT(gbc.pc(), 0x2cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01DE
        gbc.setState(0x9086, 0x3eeb, 0x41c0, 0xdaed, 0xa559, 0x2304, 0x0, 0x1);
        gbc.writeMem(0x9086, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3eeb);
        EXPECT(gbc.pc(), 0x9088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9086), 0xcb);
        EXPECT(gbc.readMem(0x9087), 0x0);
        // CB 00 01DF
        gbc.setState(0xb0ee, 0x48d8, 0x67d0, 0xee2, 0x694c, 0x311c, 0x0, 0x0);
        gbc.writeMem(0xb0ee, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x48d8);
        EXPECT(gbc.pc(), 0xb0f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ee), 0xcb);
        EXPECT(gbc.readMem(0xb0ef), 0x0);
        // CB 00 01E0
        gbc.setState(0x8b73, 0x5be4, 0x7d90, 0x1b10, 0xd537, 0x3d9d, 0x1, 0x0);
        gbc.writeMem(0x8b73, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5be4);
        EXPECT(gbc.pc(), 0x8b75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b73), 0xcb);
        EXPECT(gbc.readMem(0x8b74), 0x0);
        // CB 00 01E1
        gbc.setState(0xd295, 0xc559, 0x4a10, 0x62f2, 0x8ed6, 0x50e9, 0x0, 0x1);
        gbc.writeMem(0xd295, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc559);
        EXPECT(gbc.pc(), 0xd297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd295), 0xcb);
        EXPECT(gbc.readMem(0xd296), 0x0);
        // CB 00 01E2
        gbc.setState(0xeb7, 0x556d, 0xfd00, 0x6583, 0xe6b3, 0x3d4, 0x0, 0x0);
        gbc.writeMem(0xeb7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x556d);
        EXPECT(gbc.pc(), 0xeb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01E3
        gbc.setState(0xb948, 0x6107, 0xeaf0, 0x2797, 0xd31f, 0x3f, 0x0, 0x1);
        gbc.writeMem(0xb948, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6107);
        EXPECT(gbc.pc(), 0xb94a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb948), 0xcb);
        EXPECT(gbc.readMem(0xb949), 0x0);
        // CB 00 01E4
        gbc.setState(0xccd9, 0x7cdd, 0xb1e0, 0xfdf6, 0x73d4, 0xdf72, 0x1, 0x0);
        gbc.writeMem(0xccd9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7cdd);
        EXPECT(gbc.pc(), 0xccdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd9), 0xcb);
        EXPECT(gbc.readMem(0xccda), 0x0);
        // CB 00 01E5
        gbc.setState(0x76f3, 0x286b, 0xe410, 0xf, 0x82fe, 0xf669, 0x0, 0x0);
        gbc.writeMem(0x76f3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x286b);
        EXPECT(gbc.pc(), 0x76f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01E6
        gbc.setState(0x86a7, 0x6e52, 0x7050, 0x1b30, 0xfd89, 0x2ecf, 0x0, 0x1);
        gbc.writeMem(0x86a7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6e52);
        EXPECT(gbc.pc(), 0x86a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a7), 0xcb);
        EXPECT(gbc.readMem(0x86a8), 0x0);
        // CB 00 01E7
        gbc.setState(0x5c0b, 0xea83, 0x1db0, 0x6988, 0x1a60, 0xa8c2, 0x1, 0x0);
        gbc.writeMem(0x5c0b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xea83);
        EXPECT(gbc.pc(), 0x5c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01E8
        gbc.setState(0x186c, 0x213, 0x20a0, 0x27e1, 0x5928, 0x9261, 0x0, 0x0);
        gbc.writeMem(0x186c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x213);
        EXPECT(gbc.pc(), 0x186e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01E9
        gbc.setState(0xc7c0, 0xc75c, 0x9e20, 0x2cbd, 0xe2e7, 0x276, 0x0, 0x1);
        gbc.writeMem(0xc7c0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc75c);
        EXPECT(gbc.pc(), 0xc7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c0), 0xcb);
        EXPECT(gbc.readMem(0xc7c1), 0x0);
        // CB 00 01EA
        gbc.setState(0xddb, 0x279b, 0x5a60, 0x9133, 0x964a, 0x1476, 0x0, 0x1);
        gbc.writeMem(0xddb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x279b);
        EXPECT(gbc.pc(), 0xddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01EB
        gbc.setState(0xef09, 0x54, 0x5a30, 0x4581, 0x89ad, 0x3b26, 0x0, 0x0);
        gbc.writeMem(0xef09, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x54);
        EXPECT(gbc.pc(), 0xef0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef09), 0xcb);
        EXPECT(gbc.readMem(0xef0a), 0x0);
        // CB 00 01EC
        gbc.setState(0x99cf, 0x47b5, 0xa740, 0x8394, 0x6ad9, 0xaba0, 0x1, 0x0);
        gbc.writeMem(0x99cf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x47b5);
        EXPECT(gbc.pc(), 0x99d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99cf), 0xcb);
        EXPECT(gbc.readMem(0x99d0), 0x0);
        // CB 00 01ED
        gbc.setState(0x2af6, 0x1249, 0x34d0, 0x36f3, 0xcb5e, 0x5aa3, 0x0, 0x1);
        gbc.writeMem(0x2af6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1249);
        EXPECT(gbc.pc(), 0x2af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01EE
        gbc.setState(0xc33f, 0x37fe, 0x36f0, 0x79aa, 0xb880, 0x39ad, 0x0, 0x0);
        gbc.writeMem(0xc33f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x37fe);
        EXPECT(gbc.pc(), 0xc341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33f), 0xcb);
        EXPECT(gbc.readMem(0xc340), 0x0);
        // CB 00 01EF
        gbc.setState(0xe1ac, 0x74cc, 0x4600, 0xf479, 0x6c3d, 0x820a, 0x1, 0x0);
        gbc.writeMem(0xe1ac, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x74cc);
        EXPECT(gbc.pc(), 0xe1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ac), 0xcb);
        EXPECT(gbc.readMem(0xe1ad), 0x0);
        // CB 00 01F0
        gbc.setState(0x9e46, 0xaa07, 0x53b0, 0x43fe, 0x9525, 0x734b, 0x1, 0x0);
        gbc.writeMem(0x9e46, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xaa07);
        EXPECT(gbc.pc(), 0x9e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e46), 0xcb);
        EXPECT(gbc.readMem(0x9e47), 0x0);
        // CB 00 01F1
        gbc.setState(0xc91f, 0x8aa5, 0x7e50, 0x4cfd, 0x1cec, 0xe54a, 0x0, 0x0);
        gbc.writeMem(0xc91f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8aa5);
        EXPECT(gbc.pc(), 0xc921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91f), 0xcb);
        EXPECT(gbc.readMem(0xc920), 0x0);
        // CB 00 01F2
        gbc.setState(0x72f5, 0xf2b5, 0x2830, 0x1b5b, 0x6a52, 0x285c, 0x0, 0x1);
        gbc.writeMem(0x72f5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf2b5);
        EXPECT(gbc.pc(), 0x72f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01F3
        gbc.setState(0x6fe9, 0xe53, 0xb50, 0x7d2c, 0xff7, 0xbd33, 0x1, 0x0);
        gbc.writeMem(0x6fe9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe53);
        EXPECT(gbc.pc(), 0x6feb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01F4
        gbc.setState(0x9706, 0x499d, 0x1550, 0x247d, 0x4560, 0x3a41, 0x1, 0x0);
        gbc.writeMem(0x9706, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x499d);
        EXPECT(gbc.pc(), 0x9708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9706), 0xcb);
        EXPECT(gbc.readMem(0x9707), 0x0);
        // CB 00 01F5
        gbc.setState(0xa3b5, 0xd1cd, 0xf160, 0x3933, 0x6101, 0x412a, 0x0, 0x1);
        gbc.writeMem(0xa3b5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd1cd);
        EXPECT(gbc.pc(), 0xa3b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3b5), 0xcb);
        EXPECT(gbc.readMem(0xa3b6), 0x0);
        // CB 00 01F6
        gbc.setState(0xbf1c, 0xa99a, 0x8710, 0x9c1, 0x8917, 0x959d, 0x1, 0x0);
        gbc.writeMem(0xbf1c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa99a);
        EXPECT(gbc.pc(), 0xbf1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1c), 0xcb);
        EXPECT(gbc.readMem(0xbf1d), 0x0);
        // CB 00 01F7
        gbc.setState(0x57e, 0xc3f6, 0xf980, 0x74f2, 0xf549, 0x8ffe, 0x0, 0x0);
        gbc.writeMem(0x57e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc3f6);
        EXPECT(gbc.pc(), 0x580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01F8
        gbc.setState(0x502c, 0x8ee1, 0xf5b0, 0x4af4, 0x9125, 0x1625, 0x0, 0x0);
        gbc.writeMem(0x502c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8ee1);
        EXPECT(gbc.pc(), 0x502e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 01F9
        gbc.setState(0xa27b, 0x3913, 0x2f70, 0x403f, 0x3aaf, 0xbcf6, 0x0, 0x1);
        gbc.writeMem(0xa27b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3913);
        EXPECT(gbc.pc(), 0xa27d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa27b), 0xcb);
        EXPECT(gbc.readMem(0xa27c), 0x0);
        // CB 00 01FA
        gbc.setState(0x324e, 0xc058, 0xefa0, 0xb51a, 0x12d8, 0x1646, 0x1, 0x1);
        gbc.writeMem(0x324e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc058);
        EXPECT(gbc.pc(), 0x3250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01FB
        gbc.setState(0xb235, 0x2090, 0x3190, 0xbb70, 0x7613, 0xf295, 0x0, 0x0);
        gbc.writeMem(0xb235, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2090);
        EXPECT(gbc.pc(), 0xb237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb235), 0xcb);
        EXPECT(gbc.readMem(0xb236), 0x0);
        // CB 00 01FC
        gbc.setState(0x3449, 0xc805, 0xa0e0, 0xfc24, 0x4182, 0xd71a, 0x0, 0x0);
        gbc.writeMem(0x3449, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc805);
        EXPECT(gbc.pc(), 0x344b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 01FD
        gbc.setState(0x8a72, 0x7f32, 0xeb60, 0x45d1, 0x2c41, 0x508a, 0x0, 0x1);
        gbc.writeMem(0x8a72, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7f32);
        EXPECT(gbc.pc(), 0x8a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a72), 0xcb);
        EXPECT(gbc.readMem(0x8a73), 0x0);
        // CB 00 01FE
        gbc.setState(0xec91, 0x7c12, 0xb80, 0xac8c, 0xd674, 0xc758, 0x0, 0x1);
        gbc.writeMem(0xec91, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7c12);
        EXPECT(gbc.pc(), 0xec93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec91), 0xcb);
        EXPECT(gbc.readMem(0xec92), 0x0);
        // CB 00 01FF
        gbc.setState(0x655f, 0x3d0a, 0xf250, 0x4175, 0x29f4, 0x590c, 0x1, 0x1);
        gbc.writeMem(0x655f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3d0a);
        EXPECT(gbc.pc(), 0x6561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0200
        gbc.setState(0x9268, 0x1c8, 0xc0c0, 0x2ff0, 0xa9f9, 0x4b10, 0x0, 0x1);
        gbc.writeMem(0x9268, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1c8);
        EXPECT(gbc.pc(), 0x926a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9268), 0xcb);
        EXPECT(gbc.readMem(0x9269), 0x0);
        // CB 00 0201
        gbc.setState(0x9275, 0xe9d, 0x1510, 0x92c3, 0x5f0d, 0xd8a0, 0x0, 0x0);
        gbc.writeMem(0x9275, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe9d);
        EXPECT(gbc.pc(), 0x9277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9275), 0xcb);
        EXPECT(gbc.readMem(0x9276), 0x0);
        // CB 00 0202
        gbc.setState(0xd9f3, 0xfb39, 0xd590, 0x3e38, 0x54fe, 0x214c, 0x0, 0x0);
        gbc.writeMem(0xd9f3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfb39);
        EXPECT(gbc.pc(), 0xd9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f3), 0xcb);
        EXPECT(gbc.readMem(0xd9f4), 0x0);
        // CB 00 0203
        gbc.setState(0x337, 0x36, 0xc420, 0x3e7d, 0x1577, 0xe031, 0x1, 0x0);
        gbc.writeMem(0x337, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x36);
        EXPECT(gbc.pc(), 0x339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0204
        gbc.setState(0x5783, 0xa07f, 0xb7a0, 0x92f7, 0x2170, 0xa3f1, 0x0, 0x1);
        gbc.writeMem(0x5783, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa07f);
        EXPECT(gbc.pc(), 0x5785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0205
        gbc.setState(0x80d9, 0xe714, 0x8f00, 0x59bf, 0x97fa, 0x88e1, 0x0, 0x1);
        gbc.writeMem(0x80d9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe714);
        EXPECT(gbc.pc(), 0x80db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d9), 0xcb);
        EXPECT(gbc.readMem(0x80da), 0x0);
        // CB 00 0206
        gbc.setState(0x6d49, 0x11c9, 0xa6b0, 0x728f, 0xd345, 0x2724, 0x1, 0x1);
        gbc.writeMem(0x6d49, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x11c9);
        EXPECT(gbc.pc(), 0x6d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0207
        gbc.setState(0x4754, 0x6340, 0x6940, 0x39f9, 0x278a, 0x70d3, 0x0, 0x1);
        gbc.writeMem(0x4754, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6340);
        EXPECT(gbc.pc(), 0x4756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0208
        gbc.setState(0x4b65, 0xaf1a, 0x2d40, 0x67f3, 0x99ad, 0x9c9e, 0x1, 0x1);
        gbc.writeMem(0x4b65, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xaf1a);
        EXPECT(gbc.pc(), 0x4b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0209
        gbc.setState(0x61d3, 0x60c, 0x9100, 0x16, 0xfcb, 0x4e1, 0x1, 0x0);
        gbc.writeMem(0x61d3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x60c);
        EXPECT(gbc.pc(), 0x61d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 020A
        gbc.setState(0xadd8, 0xd880, 0xc660, 0x9d3d, 0xa94c, 0x95bc, 0x1, 0x1);
        gbc.writeMem(0xadd8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd880);
        EXPECT(gbc.pc(), 0xadda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadd8), 0xcb);
        EXPECT(gbc.readMem(0xadd9), 0x0);
        // CB 00 020B
        gbc.setState(0x4d0d, 0x9ee9, 0xe0f0, 0xfcfd, 0xf12e, 0xc88e, 0x1, 0x1);
        gbc.writeMem(0x4d0d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9ee9);
        EXPECT(gbc.pc(), 0x4d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 020C
        gbc.setState(0x4af, 0xa474, 0xa1b0, 0x4ab4, 0x5970, 0x6f7, 0x1, 0x1);
        gbc.writeMem(0x4af, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa474);
        EXPECT(gbc.pc(), 0x4b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 020D
        gbc.setState(0x26ad, 0xa665, 0xda60, 0x3cec, 0xb25d, 0xa581, 0x0, 0x0);
        gbc.writeMem(0x26ad, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa665);
        EXPECT(gbc.pc(), 0x26af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 020E
        gbc.setState(0xa05e, 0x7eee, 0x39c0, 0xcb2, 0x975d, 0x248, 0x0, 0x0);
        gbc.writeMem(0xa05e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7eee);
        EXPECT(gbc.pc(), 0xa060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa05e), 0xcb);
        EXPECT(gbc.readMem(0xa05f), 0x0);
        // CB 00 020F
        gbc.setState(0xc300, 0x4fc, 0x1210, 0x5b5f, 0xf852, 0xd982, 0x1, 0x0);
        gbc.writeMem(0xc300, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4fc);
        EXPECT(gbc.pc(), 0xc302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc300), 0xcb);
        EXPECT(gbc.readMem(0xc301), 0x0);
        // CB 00 0210
        gbc.setState(0xe327, 0x50b5, 0xf8c0, 0x81aa, 0xe934, 0x2530, 0x0, 0x0);
        gbc.writeMem(0xe327, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x50b5);
        EXPECT(gbc.pc(), 0xe329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe327), 0xcb);
        EXPECT(gbc.readMem(0xe328), 0x0);
        // CB 00 0211
        gbc.setState(0xd607, 0x88af, 0xd3d0, 0xfeed, 0x48db, 0xd358, 0x1, 0x1);
        gbc.writeMem(0xd607, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x88af);
        EXPECT(gbc.pc(), 0xd609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd607), 0xcb);
        EXPECT(gbc.readMem(0xd608), 0x0);
        // CB 00 0212
        gbc.setState(0xcdd4, 0xf679, 0x5bf0, 0x5667, 0x62e4, 0x1197, 0x1, 0x1);
        gbc.writeMem(0xcdd4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf679);
        EXPECT(gbc.pc(), 0xcdd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd4), 0xcb);
        EXPECT(gbc.readMem(0xcdd5), 0x0);
        // CB 00 0213
        gbc.setState(0xd47, 0x3229, 0x5670, 0xc03a, 0xd090, 0xdf8b, 0x1, 0x0);
        gbc.writeMem(0xd47, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3229);
        EXPECT(gbc.pc(), 0xd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0214
        gbc.setState(0xdd9a, 0xa74e, 0x9350, 0xc8eb, 0x5d68, 0x8bfd, 0x1, 0x0);
        gbc.writeMem(0xdd9a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa74e);
        EXPECT(gbc.pc(), 0xdd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd9a), 0xcb);
        EXPECT(gbc.readMem(0xdd9b), 0x0);
        // CB 00 0215
        gbc.setState(0x733e, 0xd11b, 0x19e0, 0xf18a, 0x63e2, 0xdd18, 0x0, 0x1);
        gbc.writeMem(0x733e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd11b);
        EXPECT(gbc.pc(), 0x7340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0216
        gbc.setState(0x8a32, 0xa76c, 0xf20, 0xfa8d, 0xddb5, 0xaee0, 0x0, 0x0);
        gbc.writeMem(0x8a32, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa76c);
        EXPECT(gbc.pc(), 0x8a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a32), 0xcb);
        EXPECT(gbc.readMem(0x8a33), 0x0);
        // CB 00 0218
        gbc.setState(0x2715, 0x54e0, 0x13f0, 0xe44f, 0xcedc, 0xb08, 0x0, 0x1);
        gbc.writeMem(0x2715, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x54e0);
        EXPECT(gbc.pc(), 0x2717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0219
        gbc.setState(0xeb9f, 0x9899, 0xf710, 0x2b7a, 0x8e33, 0xe1b1, 0x0, 0x1);
        gbc.writeMem(0xeb9f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9899);
        EXPECT(gbc.pc(), 0xeba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb9f), 0xcb);
        EXPECT(gbc.readMem(0xeba0), 0x0);
        // CB 00 021A
        gbc.setState(0xb21, 0x766b, 0xa000, 0xb7fc, 0xde6f, 0xab28, 0x0, 0x1);
        gbc.writeMem(0xb21, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x766b);
        EXPECT(gbc.pc(), 0xb23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 021B
        gbc.setState(0x44c, 0xa846, 0xb010, 0x39b9, 0x9ecb, 0xd8bf, 0x1, 0x0);
        gbc.writeMem(0x44c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa846);
        EXPECT(gbc.pc(), 0x44e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 021C
        gbc.setState(0x7ab5, 0xa20b, 0x45a0, 0xb249, 0x967f, 0x6e3b, 0x1, 0x1);
        gbc.writeMem(0x7ab5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa20b);
        EXPECT(gbc.pc(), 0x7ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 021D
        gbc.setState(0x2154, 0x67b8, 0xbdd0, 0xff95, 0x62bb, 0x804e, 0x1, 0x1);
        gbc.writeMem(0x2154, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x67b8);
        EXPECT(gbc.pc(), 0x2156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 021E
        gbc.setState(0x395a, 0x7fe6, 0x20e0, 0x14e1, 0xc3c2, 0x794a, 0x1, 0x1);
        gbc.writeMem(0x395a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7fe6);
        EXPECT(gbc.pc(), 0x395c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 021F
        gbc.setState(0x68a6, 0xa506, 0x10a0, 0x1532, 0xd13, 0x5ca8, 0x1, 0x1);
        gbc.writeMem(0x68a6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa506);
        EXPECT(gbc.pc(), 0x68a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0220
        gbc.setState(0x1420, 0xdc31, 0xa40, 0x9e7a, 0x6060, 0x936c, 0x0, 0x0);
        gbc.writeMem(0x1420, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdc31);
        EXPECT(gbc.pc(), 0x1422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0221
        gbc.setState(0x4373, 0xe21c, 0x3150, 0x61bc, 0xb4e7, 0x9322, 0x1, 0x0);
        gbc.writeMem(0x4373, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe21c);
        EXPECT(gbc.pc(), 0x4375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0222
        gbc.setState(0x6200, 0x4a2a, 0xc080, 0x7e69, 0x18ea, 0x4aaf, 0x1, 0x1);
        gbc.writeMem(0x6200, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4a2a);
        EXPECT(gbc.pc(), 0x6202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0223
        gbc.setState(0xc06f, 0xa78, 0x4a80, 0x5027, 0xf079, 0xe10, 0x0, 0x1);
        gbc.writeMem(0xc06f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa78);
        EXPECT(gbc.pc(), 0xc071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc06f), 0xcb);
        EXPECT(gbc.readMem(0xc070), 0x0);
        // CB 00 0224
        gbc.setState(0x2220, 0x6871, 0xcae0, 0x869b, 0xba7, 0x1146, 0x0, 0x1);
        gbc.writeMem(0x2220, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6871);
        EXPECT(gbc.pc(), 0x2222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0225
        gbc.setState(0x5ecf, 0x9c7c, 0x9560, 0x3a8a, 0x29e2, 0xc8e1, 0x0, 0x0);
        gbc.writeMem(0x5ecf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9c7c);
        EXPECT(gbc.pc(), 0x5ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0226
        gbc.setState(0x48c0, 0xbc2b, 0x22a0, 0x7fca, 0x1927, 0x5c72, 0x1, 0x1);
        gbc.writeMem(0x48c0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbc2b);
        EXPECT(gbc.pc(), 0x48c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0227
        gbc.setState(0xc09b, 0x9815, 0x25c0, 0xbb8b, 0x64f4, 0xbc60, 0x1, 0x0);
        gbc.writeMem(0xc09b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9815);
        EXPECT(gbc.pc(), 0xc09d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc09b), 0xcb);
        EXPECT(gbc.readMem(0xc09c), 0x0);
        // CB 00 0228
        gbc.setState(0x2b26, 0x6cb6, 0xaef0, 0xa071, 0xf096, 0x191e, 0x0, 0x1);
        gbc.writeMem(0x2b26, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6cb6);
        EXPECT(gbc.pc(), 0x2b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0229
        gbc.setState(0x9dc2, 0xa9b5, 0xfeb0, 0x9294, 0x914a, 0x64fd, 0x1, 0x0);
        gbc.writeMem(0x9dc2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa9b5);
        EXPECT(gbc.pc(), 0x9dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc2), 0xcb);
        EXPECT(gbc.readMem(0x9dc3), 0x0);
        // CB 00 022A
        gbc.setState(0x7d34, 0xb452, 0xe080, 0x1dd7, 0x176e, 0x798f, 0x1, 0x0);
        gbc.writeMem(0x7d34, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb452);
        EXPECT(gbc.pc(), 0x7d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 022B
        gbc.setState(0x645f, 0xbebe, 0xb0d0, 0x55a1, 0x14a1, 0x3033, 0x0, 0x1);
        gbc.writeMem(0x645f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbebe);
        EXPECT(gbc.pc(), 0x6461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 022C
        gbc.setState(0x1a43, 0xee00, 0x6020, 0x1a7c, 0x513e, 0x861d, 0x0, 0x0);
        gbc.writeMem(0x1a43, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xee00);
        EXPECT(gbc.pc(), 0x1a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 022D
        gbc.setState(0x92f5, 0xae05, 0xdcf0, 0xf029, 0x36c2, 0x5f62, 0x1, 0x0);
        gbc.writeMem(0x92f5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xae05);
        EXPECT(gbc.pc(), 0x92f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f5), 0xcb);
        EXPECT(gbc.readMem(0x92f6), 0x0);
        // CB 00 022E
        gbc.setState(0x38cd, 0x4948, 0xbc00, 0xf491, 0x7b23, 0x62b2, 0x0, 0x0);
        gbc.writeMem(0x38cd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4948);
        EXPECT(gbc.pc(), 0x38cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 022F
        gbc.setState(0x417e, 0x8ab3, 0x5ad0, 0xb02, 0x52e2, 0x7626, 0x1, 0x1);
        gbc.writeMem(0x417e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8ab3);
        EXPECT(gbc.pc(), 0x4180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0230
        gbc.setState(0xa948, 0x8a9, 0xfe10, 0x4b6e, 0x8147, 0x32d7, 0x1, 0x1);
        gbc.writeMem(0xa948, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8a9);
        EXPECT(gbc.pc(), 0xa94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa948), 0xcb);
        EXPECT(gbc.readMem(0xa949), 0x0);
        // CB 00 0232
        gbc.setState(0x300a, 0x10c7, 0x5b30, 0x2422, 0x2dbb, 0xc0f8, 0x0, 0x1);
        gbc.writeMem(0x300a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x10c7);
        EXPECT(gbc.pc(), 0x300c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0233
        gbc.setState(0xa362, 0xfba1, 0xb710, 0xabf6, 0x5c78, 0x129f, 0x0, 0x1);
        gbc.writeMem(0xa362, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfba1);
        EXPECT(gbc.pc(), 0xa364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa362), 0xcb);
        EXPECT(gbc.readMem(0xa363), 0x0);
        // CB 00 0234
        gbc.setState(0xe68b, 0xab57, 0xf820, 0xb2a4, 0xc7f1, 0x19e0, 0x1, 0x1);
        gbc.writeMem(0xe68b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xab57);
        EXPECT(gbc.pc(), 0xe68d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68b), 0xcb);
        EXPECT(gbc.readMem(0xe68c), 0x0);
        // CB 00 0235
        gbc.setState(0x40c4, 0x51f5, 0x3b60, 0xe64a, 0xab05, 0xb902, 0x0, 0x1);
        gbc.writeMem(0x40c4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x51f5);
        EXPECT(gbc.pc(), 0x40c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0236
        gbc.setState(0x9fec, 0xdb20, 0x71d0, 0xfb5b, 0x2683, 0x1793, 0x0, 0x1);
        gbc.writeMem(0x9fec, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdb20);
        EXPECT(gbc.pc(), 0x9fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fec), 0xcb);
        EXPECT(gbc.readMem(0x9fed), 0x0);
        // CB 00 0237
        gbc.setState(0xd5df, 0xdc61, 0x1da0, 0x9445, 0x5a9a, 0x57ad, 0x1, 0x1);
        gbc.writeMem(0xd5df, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdc61);
        EXPECT(gbc.pc(), 0xd5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5df), 0xcb);
        EXPECT(gbc.readMem(0xd5e0), 0x0);
        // CB 00 0238
        gbc.setState(0x5daf, 0x57de, 0x3d60, 0x36d1, 0x123f, 0xb4ce, 0x0, 0x0);
        gbc.writeMem(0x5daf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x57de);
        EXPECT(gbc.pc(), 0x5db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0239
        gbc.setState(0x5a6a, 0xccc7, 0xeb50, 0x5a10, 0xf453, 0x8dba, 0x0, 0x1);
        gbc.writeMem(0x5a6a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xccc7);
        EXPECT(gbc.pc(), 0x5a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 023A
        gbc.setState(0x544c, 0xb417, 0x7d50, 0xe15d, 0xe712, 0x6fee, 0x0, 0x0);
        gbc.writeMem(0x544c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb417);
        EXPECT(gbc.pc(), 0x544e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 023B
        gbc.setState(0xc4c7, 0x6626, 0x6380, 0x4509, 0x640, 0xbd45, 0x0, 0x0);
        gbc.writeMem(0xc4c7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6626);
        EXPECT(gbc.pc(), 0xc4c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c7), 0xcb);
        EXPECT(gbc.readMem(0xc4c8), 0x0);
        // CB 00 023C
        gbc.setState(0xa128, 0x4da1, 0xa2c0, 0x7445, 0xd8ae, 0xa49, 0x1, 0x0);
        gbc.writeMem(0xa128, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4da1);
        EXPECT(gbc.pc(), 0xa12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa128), 0xcb);
        EXPECT(gbc.readMem(0xa129), 0x0);
        // CB 00 023D
        gbc.setState(0xc7bc, 0xfea9, 0x9380, 0x1060, 0x438, 0xe352, 0x0, 0x1);
        gbc.writeMem(0xc7bc, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfea9);
        EXPECT(gbc.pc(), 0xc7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7bc), 0xcb);
        EXPECT(gbc.readMem(0xc7bd), 0x0);
        // CB 00 023E
        gbc.setState(0x1240, 0xc974, 0x2f10, 0x35b1, 0x94a1, 0x5978, 0x1, 0x1);
        gbc.writeMem(0x1240, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc974);
        EXPECT(gbc.pc(), 0x1242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 023F
        gbc.setState(0x2f30, 0x2713, 0xad90, 0xde94, 0xb4dd, 0xd8c, 0x1, 0x0);
        gbc.writeMem(0x2f30, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2713);
        EXPECT(gbc.pc(), 0x2f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0240
        gbc.setState(0xb1f7, 0xc4fd, 0x2320, 0x83e, 0x5be3, 0xcda1, 0x1, 0x1);
        gbc.writeMem(0xb1f7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc4fd);
        EXPECT(gbc.pc(), 0xb1f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f7), 0xcb);
        EXPECT(gbc.readMem(0xb1f8), 0x0);
        // CB 00 0241
        gbc.setState(0x83d7, 0x49c4, 0xbeb0, 0xa606, 0xcfcc, 0x8ea7, 0x1, 0x0);
        gbc.writeMem(0x83d7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x49c4);
        EXPECT(gbc.pc(), 0x83d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d7), 0xcb);
        EXPECT(gbc.readMem(0x83d8), 0x0);
        // CB 00 0243
        gbc.setState(0x22e6, 0xdf88, 0x45e0, 0x591c, 0xa76f, 0x698f, 0x1, 0x1);
        gbc.writeMem(0x22e6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xdf88);
        EXPECT(gbc.pc(), 0x22e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0244
        gbc.setState(0xee82, 0x8cea, 0x1fc0, 0xa42c, 0xe057, 0x3efb, 0x1, 0x0);
        gbc.writeMem(0xee82, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8cea);
        EXPECT(gbc.pc(), 0xee84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee82), 0xcb);
        EXPECT(gbc.readMem(0xee83), 0x0);
        // CB 00 0245
        gbc.setState(0xd685, 0x66b5, 0x8960, 0xbb20, 0xee77, 0x9102, 0x1, 0x0);
        gbc.writeMem(0xd685, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x66b5);
        EXPECT(gbc.pc(), 0xd687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd685), 0xcb);
        EXPECT(gbc.readMem(0xd686), 0x0);
        // CB 00 0246
        gbc.setState(0x2c04, 0x5b42, 0x2310, 0xf34e, 0xcb9e, 0x4282, 0x0, 0x0);
        gbc.writeMem(0x2c04, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5b42);
        EXPECT(gbc.pc(), 0x2c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0247
        gbc.setState(0xd416, 0x937, 0xa0a0, 0xdf44, 0xba05, 0x128a, 0x1, 0x0);
        gbc.writeMem(0xd416, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x937);
        EXPECT(gbc.pc(), 0xd418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd416), 0xcb);
        EXPECT(gbc.readMem(0xd417), 0x0);
        // CB 00 0248
        gbc.setState(0x7873, 0x750c, 0x71d0, 0xf0a1, 0x77e8, 0xc730, 0x1, 0x0);
        gbc.writeMem(0x7873, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x750c);
        EXPECT(gbc.pc(), 0x7875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0249
        gbc.setState(0x2a08, 0x4cf6, 0xd260, 0x137b, 0xdefc, 0x8f5f, 0x1, 0x0);
        gbc.writeMem(0x2a08, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4cf6);
        EXPECT(gbc.pc(), 0x2a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 024A
        gbc.setState(0x46b8, 0xc5c7, 0x1810, 0x7003, 0x120e, 0x1473, 0x0, 0x0);
        gbc.writeMem(0x46b8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc5c7);
        EXPECT(gbc.pc(), 0x46ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 024B
        gbc.setState(0x81d9, 0x658e, 0x98e0, 0xba88, 0x356b, 0x4998, 0x0, 0x1);
        gbc.writeMem(0x81d9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x658e);
        EXPECT(gbc.pc(), 0x81db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d9), 0xcb);
        EXPECT(gbc.readMem(0x81da), 0x0);
        // CB 00 024C
        gbc.setState(0x7b28, 0xe968, 0x6fc0, 0x2171, 0xe0a1, 0x9614, 0x1, 0x0);
        gbc.writeMem(0x7b28, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe968);
        EXPECT(gbc.pc(), 0x7b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 024D
        gbc.setState(0x96c3, 0xd8d, 0xfa20, 0x8e73, 0xfd0d, 0x5f16, 0x1, 0x0);
        gbc.writeMem(0x96c3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd8d);
        EXPECT(gbc.pc(), 0x96c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c3), 0xcb);
        EXPECT(gbc.readMem(0x96c4), 0x0);
        // CB 00 024E
        gbc.setState(0xc606, 0x93bb, 0x7d40, 0xa44d, 0x87c5, 0x84d, 0x1, 0x1);
        gbc.writeMem(0xc606, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x93bb);
        EXPECT(gbc.pc(), 0xc608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc606), 0xcb);
        EXPECT(gbc.readMem(0xc607), 0x0);
        // CB 00 024F
        gbc.setState(0xd2b5, 0xe4e4, 0x5b30, 0x3d1a, 0xfb4e, 0xabb9, 0x1, 0x1);
        gbc.writeMem(0xd2b5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe4e4);
        EXPECT(gbc.pc(), 0xd2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b5), 0xcb);
        EXPECT(gbc.readMem(0xd2b6), 0x0);
        // CB 00 0250
        gbc.setState(0x23cb, 0x29e9, 0x2470, 0x3954, 0xbf02, 0x255b, 0x1, 0x1);
        gbc.writeMem(0x23cb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x29e9);
        EXPECT(gbc.pc(), 0x23cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0251
        gbc.setState(0xe994, 0xba4b, 0x10e0, 0x1ca7, 0x6272, 0x3cdb, 0x1, 0x1);
        gbc.writeMem(0xe994, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xba4b);
        EXPECT(gbc.pc(), 0xe996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe994), 0xcb);
        EXPECT(gbc.readMem(0xe995), 0x0);
        // CB 00 0252
        gbc.setState(0x1d2d, 0x7e17, 0xa4f0, 0x9e5, 0x91f8, 0x1d18, 0x0, 0x1);
        gbc.writeMem(0x1d2d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7e17);
        EXPECT(gbc.pc(), 0x1d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0254
        gbc.setState(0x5dfb, 0xb5d4, 0x2730, 0xa0f8, 0x8344, 0x1300, 0x0, 0x1);
        gbc.writeMem(0x5dfb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb5d4);
        EXPECT(gbc.pc(), 0x5dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0256
        gbc.setState(0x834a, 0x58cf, 0x1e40, 0x4700, 0x88d1, 0x9584, 0x1, 0x1);
        gbc.writeMem(0x834a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x58cf);
        EXPECT(gbc.pc(), 0x834c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x834a), 0xcb);
        EXPECT(gbc.readMem(0x834b), 0x0);
        // CB 00 0257
        gbc.setState(0x81df, 0xc7d8, 0x6340, 0xb64d, 0x999f, 0x8cf9, 0x0, 0x0);
        gbc.writeMem(0x81df, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc7d8);
        EXPECT(gbc.pc(), 0x81e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81df), 0xcb);
        EXPECT(gbc.readMem(0x81e0), 0x0);
        // CB 00 0258
        gbc.setState(0x65b7, 0x76df, 0x70c0, 0xb5c6, 0xda1d, 0x5f2b, 0x0, 0x0);
        gbc.writeMem(0x65b7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x76df);
        EXPECT(gbc.pc(), 0x65b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0259
        gbc.setState(0x8f80, 0xd3a5, 0x7f80, 0xef32, 0x5cac, 0x11c, 0x0, 0x1);
        gbc.writeMem(0x8f80, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd3a5);
        EXPECT(gbc.pc(), 0x8f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f80), 0xcb);
        EXPECT(gbc.readMem(0x8f81), 0x0);
        // CB 00 025A
        gbc.setState(0x93f0, 0xb4e3, 0x2cf0, 0x137b, 0x505c, 0xbdb0, 0x1, 0x1);
        gbc.writeMem(0x93f0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb4e3);
        EXPECT(gbc.pc(), 0x93f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f0), 0xcb);
        EXPECT(gbc.readMem(0x93f1), 0x0);
        // CB 00 025B
        gbc.setState(0xbe8e, 0x5b14, 0xf3e0, 0x9d32, 0x8dc, 0xafff, 0x1, 0x1);
        gbc.writeMem(0xbe8e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5b14);
        EXPECT(gbc.pc(), 0xbe90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe8e), 0xcb);
        EXPECT(gbc.readMem(0xbe8f), 0x0);
        // CB 00 025C
        gbc.setState(0x45cc, 0x496a, 0x4710, 0xff5a, 0x4a75, 0xb3a7, 0x0, 0x1);
        gbc.writeMem(0x45cc, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x496a);
        EXPECT(gbc.pc(), 0x45ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 025D
        gbc.setState(0x1e60, 0x8c0e, 0xcca0, 0x1f54, 0x92a5, 0xa21, 0x1, 0x1);
        gbc.writeMem(0x1e60, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8c0e);
        EXPECT(gbc.pc(), 0x1e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 025E
        gbc.setState(0x53c8, 0x2a0d, 0x6dc0, 0xd85a, 0xc46d, 0xbdc7, 0x0, 0x1);
        gbc.writeMem(0x53c8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2a0d);
        EXPECT(gbc.pc(), 0x53ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 025F
        gbc.setState(0xcc22, 0x66b1, 0x1020, 0xe25e, 0xfc37, 0x9d4f, 0x1, 0x0);
        gbc.writeMem(0xcc22, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x66b1);
        EXPECT(gbc.pc(), 0xcc24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc22), 0xcb);
        EXPECT(gbc.readMem(0xcc23), 0x0);
        // CB 00 0260
        gbc.setState(0x30b, 0x4134, 0x9fb0, 0x595c, 0xc545, 0x10cf, 0x0, 0x1);
        gbc.writeMem(0x30b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4134);
        EXPECT(gbc.pc(), 0x30d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0261
        gbc.setState(0x8209, 0xa425, 0xe850, 0x6eaf, 0xa24f, 0x44c6, 0x0, 0x0);
        gbc.writeMem(0x8209, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa425);
        EXPECT(gbc.pc(), 0x820b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8209), 0xcb);
        EXPECT(gbc.readMem(0x820a), 0x0);
        // CB 00 0262
        gbc.setState(0x14c9, 0xaa10, 0x2680, 0x163b, 0x174e, 0x9880, 0x1, 0x0);
        gbc.writeMem(0x14c9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xaa10);
        EXPECT(gbc.pc(), 0x14cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0263
        gbc.setState(0x252a, 0x7b07, 0xb6c0, 0xc396, 0xe020, 0x61f3, 0x1, 0x1);
        gbc.writeMem(0x252a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7b07);
        EXPECT(gbc.pc(), 0x252c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0264
        gbc.setState(0xd99d, 0xbc7b, 0xe580, 0xe0f7, 0xbaa3, 0xbb2a, 0x1, 0x1);
        gbc.writeMem(0xd99d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbc7b);
        EXPECT(gbc.pc(), 0xd99f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd99d), 0xcb);
        EXPECT(gbc.readMem(0xd99e), 0x0);
        // CB 00 0265
        gbc.setState(0x1081, 0x5dd3, 0xe480, 0x278e, 0xafa7, 0x4d0, 0x1, 0x0);
        gbc.writeMem(0x1081, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5dd3);
        EXPECT(gbc.pc(), 0x1083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0266
        gbc.setState(0xb583, 0x2adf, 0x17b0, 0x6251, 0xebc3, 0x7c9e, 0x0, 0x0);
        gbc.writeMem(0xb583, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2adf);
        EXPECT(gbc.pc(), 0xb585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb583), 0xcb);
        EXPECT(gbc.readMem(0xb584), 0x0);
        // CB 00 0267
        gbc.setState(0xacb5, 0x11aa, 0xe140, 0x8e48, 0x5213, 0x6b1e, 0x1, 0x1);
        gbc.writeMem(0xacb5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x11aa);
        EXPECT(gbc.pc(), 0xacb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb5), 0xcb);
        EXPECT(gbc.readMem(0xacb6), 0x0);
        // CB 00 0268
        gbc.setState(0x27e7, 0x213a, 0x9e00, 0xc862, 0x7001, 0x6ad0, 0x1, 0x1);
        gbc.writeMem(0x27e7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x213a);
        EXPECT(gbc.pc(), 0x27e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0269
        gbc.setState(0xdc7d, 0xfdc2, 0x4eb0, 0xea52, 0xb834, 0x3f2f, 0x1, 0x0);
        gbc.writeMem(0xdc7d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfdc2);
        EXPECT(gbc.pc(), 0xdc7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc7d), 0xcb);
        EXPECT(gbc.readMem(0xdc7e), 0x0);
        // CB 00 026A
        gbc.setState(0x9cc5, 0xfd70, 0xa6f0, 0xd4ef, 0x7645, 0xf1ad, 0x0, 0x1);
        gbc.writeMem(0x9cc5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfd70);
        EXPECT(gbc.pc(), 0x9cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cc5), 0xcb);
        EXPECT(gbc.readMem(0x9cc6), 0x0);
        // CB 00 026B
        gbc.setState(0x867f, 0xfee2, 0x1890, 0x592e, 0x289f, 0x7cc1, 0x0, 0x0);
        gbc.writeMem(0x867f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfee2);
        EXPECT(gbc.pc(), 0x8681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867f), 0xcb);
        EXPECT(gbc.readMem(0x8680), 0x0);
        // CB 00 026C
        gbc.setState(0xb100, 0x8399, 0xe6c0, 0x1ea7, 0x194a, 0xb43d, 0x1, 0x1);
        gbc.writeMem(0xb100, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8399);
        EXPECT(gbc.pc(), 0xb102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb100), 0xcb);
        EXPECT(gbc.readMem(0xb101), 0x0);
        // CB 00 026D
        gbc.setState(0x26c, 0x1c87, 0xa490, 0x7150, 0xf398, 0xb269, 0x1, 0x0);
        gbc.writeMem(0x26c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1c87);
        EXPECT(gbc.pc(), 0x26e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 026E
        gbc.setState(0xc240, 0x7987, 0x2350, 0xc212, 0x2265, 0x9e36, 0x0, 0x1);
        gbc.writeMem(0xc240, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7987);
        EXPECT(gbc.pc(), 0xc242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc240), 0xcb);
        EXPECT(gbc.readMem(0xc241), 0x0);
        // CB 00 026F
        gbc.setState(0x84cb, 0x6a64, 0x740, 0x8a82, 0x5c06, 0x570e, 0x0, 0x0);
        gbc.writeMem(0x84cb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6a64);
        EXPECT(gbc.pc(), 0x84cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84cb), 0xcb);
        EXPECT(gbc.readMem(0x84cc), 0x0);
        // CB 00 0270
        gbc.setState(0xacf0, 0xb424, 0x760, 0x7a1, 0xa7a2, 0xec0f, 0x1, 0x1);
        gbc.writeMem(0xacf0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb424);
        EXPECT(gbc.pc(), 0xacf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf0), 0xcb);
        EXPECT(gbc.readMem(0xacf1), 0x0);
        // CB 00 0271
        gbc.setState(0x119a, 0x4759, 0xf930, 0xc466, 0x4e1e, 0x88ce, 0x1, 0x0);
        gbc.writeMem(0x119a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4759);
        EXPECT(gbc.pc(), 0x119c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0272
        gbc.setState(0xde93, 0xb1c4, 0x6700, 0xad33, 0xe6ea, 0x8bdd, 0x1, 0x1);
        gbc.writeMem(0xde93, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb1c4);
        EXPECT(gbc.pc(), 0xde95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde93), 0xcb);
        EXPECT(gbc.readMem(0xde94), 0x0);
        // CB 00 0273
        gbc.setState(0x847f, 0x85b, 0xa00, 0x234a, 0x83ea, 0x680f, 0x1, 0x0);
        gbc.writeMem(0x847f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x85b);
        EXPECT(gbc.pc(), 0x8481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847f), 0xcb);
        EXPECT(gbc.readMem(0x8480), 0x0);
        // CB 00 0274
        gbc.setState(0x35ee, 0xadb8, 0x110, 0xdd93, 0x1749, 0xd5cc, 0x0, 0x1);
        gbc.writeMem(0x35ee, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xadb8);
        EXPECT(gbc.pc(), 0x35f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0275
        gbc.setState(0x5b24, 0x7e9a, 0x4450, 0xfba3, 0x3093, 0x847f, 0x1, 0x1);
        gbc.writeMem(0x5b24, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7e9a);
        EXPECT(gbc.pc(), 0x5b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0276
        gbc.setState(0xe177, 0xcca, 0x4e60, 0x8bf, 0x36f8, 0xad1d, 0x0, 0x0);
        gbc.writeMem(0xe177, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xcca);
        EXPECT(gbc.pc(), 0xe179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe177), 0xcb);
        EXPECT(gbc.readMem(0xe178), 0x0);
        // CB 00 0277
        gbc.setState(0x779e, 0xb30f, 0x7950, 0xb41a, 0x4d2d, 0xf208, 0x0, 0x1);
        gbc.writeMem(0x779e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb30f);
        EXPECT(gbc.pc(), 0x77a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0278
        gbc.setState(0x4e64, 0xbeed, 0xa6f0, 0xc10b, 0x9743, 0xf7a5, 0x0, 0x1);
        gbc.writeMem(0x4e64, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbeed);
        EXPECT(gbc.pc(), 0x4e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0279
        gbc.setState(0x24b6, 0x4e2b, 0x95c0, 0x602f, 0x7000, 0xb77, 0x0, 0x1);
        gbc.writeMem(0x24b6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4e2b);
        EXPECT(gbc.pc(), 0x24b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 027A
        gbc.setState(0x5842, 0x5d35, 0x6810, 0xb56a, 0x5053, 0xce7f, 0x1, 0x1);
        gbc.writeMem(0x5842, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5d35);
        EXPECT(gbc.pc(), 0x5844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 027C
        gbc.setState(0x9c92, 0xc567, 0x4450, 0x6a3f, 0x70d, 0x8c8c, 0x0, 0x1);
        gbc.writeMem(0x9c92, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc567);
        EXPECT(gbc.pc(), 0x9c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c92), 0xcb);
        EXPECT(gbc.readMem(0x9c93), 0x0);
        // CB 00 027D
        gbc.setState(0xd25d, 0xf4b9, 0xafa0, 0x219d, 0xebd5, 0xab3d, 0x0, 0x0);
        gbc.writeMem(0xd25d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf4b9);
        EXPECT(gbc.pc(), 0xd25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd25d), 0xcb);
        EXPECT(gbc.readMem(0xd25e), 0x0);
        // CB 00 027E
        gbc.setState(0xe9c4, 0xb43a, 0x1d70, 0xde1a, 0x542a, 0x6c8, 0x1, 0x1);
        gbc.writeMem(0xe9c4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb43a);
        EXPECT(gbc.pc(), 0xe9c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c4), 0xcb);
        EXPECT(gbc.readMem(0xe9c5), 0x0);
        // CB 00 027F
        gbc.setState(0x1cb2, 0xc103, 0xb400, 0x4637, 0x9dc6, 0xf8b6, 0x0, 0x1);
        gbc.writeMem(0x1cb2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc103);
        EXPECT(gbc.pc(), 0x1cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0280
        gbc.setState(0xee7d, 0x475, 0x32d0, 0xf15c, 0xbc78, 0xcc09, 0x0, 0x1);
        gbc.writeMem(0xee7d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x475);
        EXPECT(gbc.pc(), 0xee7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee7d), 0xcb);
        EXPECT(gbc.readMem(0xee7e), 0x0);
        // CB 00 0281
        gbc.setState(0x2367, 0xe7d4, 0x2930, 0x9054, 0x227b, 0xb187, 0x1, 0x0);
        gbc.writeMem(0x2367, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe7d4);
        EXPECT(gbc.pc(), 0x2369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0282
        gbc.setState(0x13c9, 0x5b4d, 0x260, 0xd99c, 0xb3d, 0xd61f, 0x1, 0x0);
        gbc.writeMem(0x13c9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5b4d);
        EXPECT(gbc.pc(), 0x13cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0283
        gbc.setState(0x9433, 0x2910, 0x9d40, 0xcfa5, 0x8e76, 0xd6be, 0x0, 0x0);
        gbc.writeMem(0x9433, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2910);
        EXPECT(gbc.pc(), 0x9435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9433), 0xcb);
        EXPECT(gbc.readMem(0x9434), 0x0);
        // CB 00 0284
        gbc.setState(0x8291, 0xcc20, 0xece0, 0xc2e4, 0xc0a6, 0x5160, 0x0, 0x0);
        gbc.writeMem(0x8291, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcc20);
        EXPECT(gbc.pc(), 0x8293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8291), 0xcb);
        EXPECT(gbc.readMem(0x8292), 0x0);
        // CB 00 0285
        gbc.setState(0x21c1, 0x9e00, 0x4c80, 0x6bc9, 0x487d, 0x513a, 0x1, 0x0);
        gbc.writeMem(0x21c1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9e00);
        EXPECT(gbc.pc(), 0x21c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0286
        gbc.setState(0x8e28, 0x83a0, 0x1b40, 0x5d40, 0xf79b, 0x9653, 0x0, 0x0);
        gbc.writeMem(0x8e28, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x83a0);
        EXPECT(gbc.pc(), 0x8e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e28), 0xcb);
        EXPECT(gbc.readMem(0x8e29), 0x0);
        // CB 00 0288
        gbc.setState(0xd58e, 0x677a, 0xf0e0, 0x7c20, 0xf233, 0x2339, 0x1, 0x1);
        gbc.writeMem(0xd58e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x677a);
        EXPECT(gbc.pc(), 0xd590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd58e), 0xcb);
        EXPECT(gbc.readMem(0xd58f), 0x0);
        // CB 00 0289
        gbc.setState(0xcaeb, 0x263b, 0xa940, 0xc483, 0xbda3, 0x4354, 0x0, 0x1);
        gbc.writeMem(0xcaeb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x263b);
        EXPECT(gbc.pc(), 0xcaed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaeb), 0xcb);
        EXPECT(gbc.readMem(0xcaec), 0x0);
        // CB 00 028A
        gbc.setState(0x20a5, 0x12c5, 0x240, 0xd885, 0xe453, 0xe35d, 0x1, 0x0);
        gbc.writeMem(0x20a5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x12c5);
        EXPECT(gbc.pc(), 0x20a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 028B
        gbc.setState(0xe7bc, 0xda35, 0x98d0, 0x4cd, 0xbbd3, 0x7ecd, 0x0, 0x1);
        gbc.writeMem(0xe7bc, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xda35);
        EXPECT(gbc.pc(), 0xe7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7bc), 0xcb);
        EXPECT(gbc.readMem(0xe7bd), 0x0);
        // CB 00 028C
        gbc.setState(0x49f8, 0xb7a9, 0x9e20, 0x77bb, 0x4282, 0x7fde, 0x1, 0x1);
        gbc.writeMem(0x49f8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb7a9);
        EXPECT(gbc.pc(), 0x49fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 028D
        gbc.setState(0x7b63, 0x8c08, 0x6220, 0x5dca, 0x54af, 0x5b38, 0x1, 0x1);
        gbc.writeMem(0x7b63, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8c08);
        EXPECT(gbc.pc(), 0x7b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 028E
        gbc.setState(0x9774, 0x1ec8, 0xf780, 0xc48e, 0x116f, 0xa763, 0x0, 0x0);
        gbc.writeMem(0x9774, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1ec8);
        EXPECT(gbc.pc(), 0x9776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9774), 0xcb);
        EXPECT(gbc.readMem(0x9775), 0x0);
        // CB 00 028F
        gbc.setState(0xe852, 0xefb5, 0x2ac0, 0x9284, 0xb046, 0x118a, 0x0, 0x0);
        gbc.writeMem(0xe852, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xefb5);
        EXPECT(gbc.pc(), 0xe854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe852), 0xcb);
        EXPECT(gbc.readMem(0xe853), 0x0);
        // CB 00 0290
        gbc.setState(0x9e34, 0xe7f7, 0x44e0, 0x1656, 0xf853, 0x9531, 0x0, 0x0);
        gbc.writeMem(0x9e34, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe7f7);
        EXPECT(gbc.pc(), 0x9e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e34), 0xcb);
        EXPECT(gbc.readMem(0x9e35), 0x0);
        // CB 00 0291
        gbc.setState(0x8bf6, 0x9775, 0x2820, 0x9f14, 0x18bb, 0xfa71, 0x0, 0x0);
        gbc.writeMem(0x8bf6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9775);
        EXPECT(gbc.pc(), 0x8bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf6), 0xcb);
        EXPECT(gbc.readMem(0x8bf7), 0x0);
        // CB 00 0292
        gbc.setState(0x60a5, 0x5a3f, 0x5ab0, 0x9c4a, 0x9fd8, 0xd88d, 0x1, 0x0);
        gbc.writeMem(0x60a5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5a3f);
        EXPECT(gbc.pc(), 0x60a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0293
        gbc.setState(0xbe33, 0xadb4, 0x5c20, 0x1b0d, 0x62a, 0xde79, 0x1, 0x1);
        gbc.writeMem(0xbe33, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xadb4);
        EXPECT(gbc.pc(), 0xbe35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe33), 0xcb);
        EXPECT(gbc.readMem(0xbe34), 0x0);
        // CB 00 0294
        gbc.setState(0x5102, 0x7c87, 0xd9d0, 0xfd7, 0xda55, 0x50fc, 0x1, 0x1);
        gbc.writeMem(0x5102, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7c87);
        EXPECT(gbc.pc(), 0x5104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0295
        gbc.setState(0x6dd1, 0x58b5, 0x58c0, 0xbd40, 0x7764, 0x497, 0x1, 0x1);
        gbc.writeMem(0x6dd1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x58b5);
        EXPECT(gbc.pc(), 0x6dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0296
        gbc.setState(0xe93b, 0x7505, 0xd740, 0x94a9, 0x20b6, 0x3b93, 0x0, 0x1);
        gbc.writeMem(0xe93b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7505);
        EXPECT(gbc.pc(), 0xe93d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93b), 0xcb);
        EXPECT(gbc.readMem(0xe93c), 0x0);
        // CB 00 0297
        gbc.setState(0x467a, 0x19, 0x1de0, 0x97b9, 0x6bc1, 0x3397, 0x0, 0x1);
        gbc.writeMem(0x467a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x19);
        EXPECT(gbc.pc(), 0x467c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0298
        gbc.setState(0x79be, 0x604d, 0x7950, 0x9b98, 0x3006, 0xcc91, 0x0, 0x1);
        gbc.writeMem(0x79be, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x604d);
        EXPECT(gbc.pc(), 0x79c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0299
        gbc.setState(0x7313, 0x3832, 0xb5e0, 0xebc4, 0xc39c, 0x4781, 0x1, 0x1);
        gbc.writeMem(0x7313, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3832);
        EXPECT(gbc.pc(), 0x7315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 029A
        gbc.setState(0x9b2c, 0x2a65, 0x65b0, 0x7488, 0x6ada, 0xc2ff, 0x0, 0x0);
        gbc.writeMem(0x9b2c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2a65);
        EXPECT(gbc.pc(), 0x9b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b2c), 0xcb);
        EXPECT(gbc.readMem(0x9b2d), 0x0);
        // CB 00 029B
        gbc.setState(0x8be3, 0xc781, 0xbc70, 0xb9b1, 0x710, 0xcc11, 0x0, 0x1);
        gbc.writeMem(0x8be3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc781);
        EXPECT(gbc.pc(), 0x8be5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be3), 0xcb);
        EXPECT(gbc.readMem(0x8be4), 0x0);
        // CB 00 029C
        gbc.setState(0xeb4d, 0xcaa6, 0x2ab0, 0x3c52, 0x3e51, 0x2c13, 0x0, 0x1);
        gbc.writeMem(0xeb4d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xcaa6);
        EXPECT(gbc.pc(), 0xeb4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb4d), 0xcb);
        EXPECT(gbc.readMem(0xeb4e), 0x0);
        // CB 00 029D
        gbc.setState(0xec2f, 0xcec1, 0xb760, 0x38b8, 0x5e25, 0xdba6, 0x1, 0x0);
        gbc.writeMem(0xec2f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcec1);
        EXPECT(gbc.pc(), 0xec31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec2f), 0xcb);
        EXPECT(gbc.readMem(0xec30), 0x0);
        // CB 00 029E
        gbc.setState(0x150b, 0xa7a9, 0x8e20, 0xcf91, 0x207f, 0xc398, 0x0, 0x1);
        gbc.writeMem(0x150b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa7a9);
        EXPECT(gbc.pc(), 0x150d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 029F
        gbc.setState(0xb03c, 0x9103, 0x3580, 0x378c, 0xd61f, 0x2dc9, 0x1, 0x1);
        gbc.writeMem(0xb03c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9103);
        EXPECT(gbc.pc(), 0xb03e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb03c), 0xcb);
        EXPECT(gbc.readMem(0xb03d), 0x0);
        // CB 00 02A0
        gbc.setState(0xbf99, 0x47e7, 0xb500, 0x8f71, 0x43ba, 0x32c4, 0x1, 0x0);
        gbc.writeMem(0xbf99, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x47e7);
        EXPECT(gbc.pc(), 0xbf9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf99), 0xcb);
        EXPECT(gbc.readMem(0xbf9a), 0x0);
        // CB 00 02A2
        gbc.setState(0x9098, 0x587e, 0x8410, 0x1029, 0x7831, 0xf009, 0x0, 0x1);
        gbc.writeMem(0x9098, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x587e);
        EXPECT(gbc.pc(), 0x909a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9098), 0xcb);
        EXPECT(gbc.readMem(0x9099), 0x0);
        // CB 00 02A3
        gbc.setState(0xabec, 0x1ff8, 0xd8e0, 0x17d7, 0x5a88, 0xb434, 0x0, 0x1);
        gbc.writeMem(0xabec, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1ff8);
        EXPECT(gbc.pc(), 0xabee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabec), 0xcb);
        EXPECT(gbc.readMem(0xabed), 0x0);
        // CB 00 02A5
        gbc.setState(0xb01b, 0x4c3b, 0x3e20, 0xba80, 0x5876, 0xfaa, 0x0, 0x1);
        gbc.writeMem(0xb01b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4c3b);
        EXPECT(gbc.pc(), 0xb01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb01b), 0xcb);
        EXPECT(gbc.readMem(0xb01c), 0x0);
        // CB 00 02A6
        gbc.setState(0x8948, 0xdfd8, 0x95c0, 0x1803, 0x7ee6, 0x77c7, 0x1, 0x0);
        gbc.writeMem(0x8948, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdfd8);
        EXPECT(gbc.pc(), 0x894a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8948), 0xcb);
        EXPECT(gbc.readMem(0x8949), 0x0);
        // CB 00 02A7
        gbc.setState(0x4749, 0xd325, 0xb1f0, 0x31b9, 0x7513, 0xc0fc, 0x0, 0x1);
        gbc.writeMem(0x4749, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd325);
        EXPECT(gbc.pc(), 0x474b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02A8
        gbc.setState(0xc1ad, 0xdc88, 0x9710, 0xbeaa, 0x3086, 0x228d, 0x1, 0x1);
        gbc.writeMem(0xc1ad, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdc88);
        EXPECT(gbc.pc(), 0xc1af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ad), 0xcb);
        EXPECT(gbc.readMem(0xc1ae), 0x0);
        // CB 00 02A9
        gbc.setState(0x1af2, 0xa7e3, 0x35f0, 0xcd4c, 0xde44, 0x4280, 0x0, 0x1);
        gbc.writeMem(0x1af2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa7e3);
        EXPECT(gbc.pc(), 0x1af4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02AA
        gbc.setState(0x6831, 0x6188, 0x3270, 0x2ca7, 0x3e16, 0x8da5, 0x1, 0x1);
        gbc.writeMem(0x6831, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6188);
        EXPECT(gbc.pc(), 0x6833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02AB
        gbc.setState(0x5557, 0xf05a, 0xfd80, 0xe64b, 0xdf6a, 0xc1f1, 0x0, 0x0);
        gbc.writeMem(0x5557, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf05a);
        EXPECT(gbc.pc(), 0x5559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02AC
        gbc.setState(0xa892, 0x8b9c, 0x5b10, 0xd99d, 0xec17, 0x36ad, 0x0, 0x0);
        gbc.writeMem(0xa892, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8b9c);
        EXPECT(gbc.pc(), 0xa894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa892), 0xcb);
        EXPECT(gbc.readMem(0xa893), 0x0);
        // CB 00 02AD
        gbc.setState(0x1004, 0x6454, 0x5c40, 0xe5ad, 0x9659, 0x55b2, 0x0, 0x0);
        gbc.writeMem(0x1004, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6454);
        EXPECT(gbc.pc(), 0x1006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02AE
        gbc.setState(0x69a2, 0x2848, 0xcf90, 0xf0ac, 0x4f48, 0xf550, 0x0, 0x1);
        gbc.writeMem(0x69a2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2848);
        EXPECT(gbc.pc(), 0x69a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02AF
        gbc.setState(0x4358, 0xbc7d, 0x7bd0, 0x2c2, 0x4b97, 0xe5ea, 0x0, 0x1);
        gbc.writeMem(0x4358, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbc7d);
        EXPECT(gbc.pc(), 0x435a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02B0
        gbc.setState(0x4a3e, 0xd50a, 0xbd0, 0xce26, 0x4005, 0x724b, 0x1, 0x0);
        gbc.writeMem(0x4a3e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd50a);
        EXPECT(gbc.pc(), 0x4a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02B1
        gbc.setState(0x38b9, 0xaeea, 0xcfa0, 0x275a, 0x2dfc, 0x4f2, 0x1, 0x0);
        gbc.writeMem(0x38b9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xaeea);
        EXPECT(gbc.pc(), 0x38bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02B2
        gbc.setState(0x946, 0xe3c0, 0x5bb0, 0x155a, 0xbc95, 0xd534, 0x0, 0x1);
        gbc.writeMem(0x946, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe3c0);
        EXPECT(gbc.pc(), 0x948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02B3
        gbc.setState(0x7251, 0x6b8b, 0xf3a0, 0x49f3, 0x7506, 0x836f, 0x0, 0x0);
        gbc.writeMem(0x7251, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6b8b);
        EXPECT(gbc.pc(), 0x7253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02B4
        gbc.setState(0x32ba, 0xd3b2, 0x8ca0, 0x6195, 0x4b8d, 0xd139, 0x0, 0x0);
        gbc.writeMem(0x32ba, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd3b2);
        EXPECT(gbc.pc(), 0x32bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02B5
        gbc.setState(0xbc15, 0x9bd7, 0xc970, 0xa810, 0xe236, 0xefdf, 0x0, 0x1);
        gbc.writeMem(0xbc15, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9bd7);
        EXPECT(gbc.pc(), 0xbc17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc15), 0xcb);
        EXPECT(gbc.readMem(0xbc16), 0x0);
        // CB 00 02B6
        gbc.setState(0xc986, 0x1e7d, 0x9a70, 0xef26, 0xfb66, 0x4b96, 0x0, 0x0);
        gbc.writeMem(0xc986, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1e7d);
        EXPECT(gbc.pc(), 0xc988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc986), 0xcb);
        EXPECT(gbc.readMem(0xc987), 0x0);
        // CB 00 02B7
        gbc.setState(0xe777, 0x1fca, 0x5160, 0xff85, 0xc8f4, 0x5289, 0x0, 0x1);
        gbc.writeMem(0xe777, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1fca);
        EXPECT(gbc.pc(), 0xe779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe777), 0xcb);
        EXPECT(gbc.readMem(0xe778), 0x0);
        // CB 00 02B8
        gbc.setState(0xe655, 0xecde, 0x7670, 0xf0eb, 0x205d, 0x4832, 0x0, 0x1);
        gbc.writeMem(0xe655, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xecde);
        EXPECT(gbc.pc(), 0xe657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe655), 0xcb);
        EXPECT(gbc.readMem(0xe656), 0x0);
        // CB 00 02B9
        gbc.setState(0xe205, 0x71e2, 0xdba0, 0x8c9, 0x24ac, 0x2438, 0x0, 0x1);
        gbc.writeMem(0xe205, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x71e2);
        EXPECT(gbc.pc(), 0xe207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe205), 0xcb);
        EXPECT(gbc.readMem(0xe206), 0x0);
        // CB 00 02BA
        gbc.setState(0xa09a, 0xc419, 0x2d0, 0xf014, 0xfbfb, 0x89a, 0x0, 0x0);
        gbc.writeMem(0xa09a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc419);
        EXPECT(gbc.pc(), 0xa09c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa09a), 0xcb);
        EXPECT(gbc.readMem(0xa09b), 0x0);
        // CB 00 02BB
        gbc.setState(0x4573, 0x5a2a, 0xa0f0, 0x3225, 0x9afc, 0xc5f9, 0x0, 0x1);
        gbc.writeMem(0x4573, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5a2a);
        EXPECT(gbc.pc(), 0x4575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02BC
        gbc.setState(0xe929, 0x9d7e, 0x7d40, 0x9e7c, 0xe0d2, 0xc0f, 0x1, 0x1);
        gbc.writeMem(0xe929, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9d7e);
        EXPECT(gbc.pc(), 0xe92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe929), 0xcb);
        EXPECT(gbc.readMem(0xe92a), 0x0);
        // CB 00 02BD
        gbc.setState(0xe794, 0xed6e, 0xd280, 0x34e4, 0x36ae, 0x8358, 0x0, 0x0);
        gbc.writeMem(0xe794, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xed6e);
        EXPECT(gbc.pc(), 0xe796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe794), 0xcb);
        EXPECT(gbc.readMem(0xe795), 0x0);
        // CB 00 02BE
        gbc.setState(0x2ee4, 0xd9fc, 0x1b00, 0x7e04, 0x1867, 0x8007, 0x1, 0x1);
        gbc.writeMem(0x2ee4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd9fc);
        EXPECT(gbc.pc(), 0x2ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02BF
        gbc.setState(0x5705, 0x21b6, 0x2c50, 0xf7ab, 0x2303, 0x46f7, 0x0, 0x0);
        gbc.writeMem(0x5705, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x21b6);
        EXPECT(gbc.pc(), 0x5707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02C0
        gbc.setState(0xe4c3, 0x3a68, 0x7e10, 0x1774, 0x106d, 0x737e, 0x0, 0x0);
        gbc.writeMem(0xe4c3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3a68);
        EXPECT(gbc.pc(), 0xe4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c3), 0xcb);
        EXPECT(gbc.readMem(0xe4c4), 0x0);
        // CB 00 02C1
        gbc.setState(0xc986, 0x4ff1, 0x63b0, 0x8688, 0x7f2e, 0x77a0, 0x0, 0x1);
        gbc.writeMem(0xc986, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4ff1);
        EXPECT(gbc.pc(), 0xc988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc986), 0xcb);
        EXPECT(gbc.readMem(0xc987), 0x0);
        // CB 00 02C2
        gbc.setState(0x1069, 0x547a, 0xda60, 0xaf8b, 0x1f7c, 0x91d8, 0x1, 0x0);
        gbc.writeMem(0x1069, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x547a);
        EXPECT(gbc.pc(), 0x106b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02C3
        gbc.setState(0xe49, 0x8ce, 0x57a0, 0x247f, 0x1de2, 0xff24, 0x1, 0x1);
        gbc.writeMem(0xe49, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8ce);
        EXPECT(gbc.pc(), 0xe4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02C4
        gbc.setState(0xadad, 0x6930, 0xf080, 0x4ff4, 0x33eb, 0xddf6, 0x0, 0x1);
        gbc.writeMem(0xadad, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6930);
        EXPECT(gbc.pc(), 0xadaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadad), 0xcb);
        EXPECT(gbc.readMem(0xadae), 0x0);
        // CB 00 02C5
        gbc.setState(0x8c16, 0x83e7, 0x2da0, 0x339b, 0x176a, 0x5f47, 0x0, 0x1);
        gbc.writeMem(0x8c16, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x83e7);
        EXPECT(gbc.pc(), 0x8c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c16), 0xcb);
        EXPECT(gbc.readMem(0x8c17), 0x0);
        // CB 00 02C6
        gbc.setState(0x2457, 0xff5d, 0xa8f0, 0xc569, 0xb696, 0x5ddd, 0x1, 0x0);
        gbc.writeMem(0x2457, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xff5d);
        EXPECT(gbc.pc(), 0x2459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02C7
        gbc.setState(0xbeb7, 0x4f13, 0x280, 0x62dc, 0xf2fb, 0x57cd, 0x1, 0x0);
        gbc.writeMem(0xbeb7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4f13);
        EXPECT(gbc.pc(), 0xbeb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb7), 0xcb);
        EXPECT(gbc.readMem(0xbeb8), 0x0);
        // CB 00 02C8
        gbc.setState(0xecb, 0x579a, 0x5040, 0x6cd9, 0x87d4, 0x2774, 0x0, 0x1);
        gbc.writeMem(0xecb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x579a);
        EXPECT(gbc.pc(), 0xecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02C9
        gbc.setState(0x43b4, 0xd968, 0x8cc0, 0x2fd5, 0x2c8, 0xe40c, 0x0, 0x0);
        gbc.writeMem(0x43b4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd968);
        EXPECT(gbc.pc(), 0x43b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02CA
        gbc.setState(0xb54a, 0xca54, 0xe430, 0x1911, 0xcdb3, 0xe0a8, 0x1, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xca54);
        EXPECT(gbc.pc(), 0xb54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54a), 0xcb);
        EXPECT(gbc.readMem(0xb54b), 0x0);
        // CB 00 02CB
        gbc.setState(0xc605, 0x4841, 0xb860, 0xe325, 0x1241, 0x6374, 0x1, 0x0);
        gbc.writeMem(0xc605, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4841);
        EXPECT(gbc.pc(), 0xc607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc605), 0xcb);
        EXPECT(gbc.readMem(0xc606), 0x0);
        // CB 00 02CE
        gbc.setState(0x9c34, 0x674b, 0x9380, 0x5d0, 0x4355, 0xb7ac, 0x0, 0x1);
        gbc.writeMem(0x9c34, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x674b);
        EXPECT(gbc.pc(), 0x9c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c34), 0xcb);
        EXPECT(gbc.readMem(0x9c35), 0x0);
        // CB 00 02CF
        gbc.setState(0xa6e3, 0x3db, 0x2de0, 0xbc1c, 0xfc10, 0x661c, 0x1, 0x1);
        gbc.writeMem(0xa6e3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3db);
        EXPECT(gbc.pc(), 0xa6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e3), 0xcb);
        EXPECT(gbc.readMem(0xa6e4), 0x0);
        // CB 00 02D0
        gbc.setState(0x28a, 0x8fb6, 0x720, 0xca78, 0x8eff, 0xf803, 0x0, 0x1);
        gbc.writeMem(0x28a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8fb6);
        EXPECT(gbc.pc(), 0x28c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02D1
        gbc.setState(0xdd31, 0x5cb5, 0xe790, 0x8d70, 0xf9c, 0x80af, 0x1, 0x0);
        gbc.writeMem(0xdd31, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5cb5);
        EXPECT(gbc.pc(), 0xdd33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd31), 0xcb);
        EXPECT(gbc.readMem(0xdd32), 0x0);
        // CB 00 02D2
        gbc.setState(0x9c2e, 0xe93, 0xd0d0, 0x206e, 0x9809, 0x79fe, 0x1, 0x0);
        gbc.writeMem(0x9c2e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe93);
        EXPECT(gbc.pc(), 0x9c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c2e), 0xcb);
        EXPECT(gbc.readMem(0x9c2f), 0x0);
        // CB 00 02D3
        gbc.setState(0x6da7, 0x42dd, 0x4aa0, 0xe1d1, 0x87c9, 0x53aa, 0x0, 0x1);
        gbc.writeMem(0x6da7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x42dd);
        EXPECT(gbc.pc(), 0x6da9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02D5
        gbc.setState(0xd987, 0x85ac, 0x4de0, 0x7a9c, 0x8919, 0xb4f3, 0x1, 0x0);
        gbc.writeMem(0xd987, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x85ac);
        EXPECT(gbc.pc(), 0xd989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd987), 0xcb);
        EXPECT(gbc.readMem(0xd988), 0x0);
        // CB 00 02D6
        gbc.setState(0x5728, 0x78da, 0xa40, 0xfc16, 0x190a, 0x1136, 0x1, 0x1);
        gbc.writeMem(0x5728, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x78da);
        EXPECT(gbc.pc(), 0x572a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02D7
        gbc.setState(0x5249, 0xaeb4, 0xfcc0, 0x13e9, 0xb380, 0xb9e3, 0x1, 0x1);
        gbc.writeMem(0x5249, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xaeb4);
        EXPECT(gbc.pc(), 0x524b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02D8
        gbc.setState(0x9707, 0x32eb, 0xd2c0, 0x635a, 0xa607, 0x7f77, 0x1, 0x0);
        gbc.writeMem(0x9707, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x32eb);
        EXPECT(gbc.pc(), 0x9709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9707), 0xcb);
        EXPECT(gbc.readMem(0x9708), 0x0);
        // CB 00 02D9
        gbc.setState(0x6b8b, 0x1ba7, 0x7290, 0x3613, 0xa709, 0xf95d, 0x1, 0x0);
        gbc.writeMem(0x6b8b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1ba7);
        EXPECT(gbc.pc(), 0x6b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02DA
        gbc.setState(0x28ea, 0x1855, 0xd880, 0x4654, 0x7431, 0xc48d, 0x1, 0x1);
        gbc.writeMem(0x28ea, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1855);
        EXPECT(gbc.pc(), 0x28ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02DB
        gbc.setState(0x2c75, 0x90e9, 0x42a0, 0x3af5, 0x962a, 0x8a3b, 0x0, 0x1);
        gbc.writeMem(0x2c75, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x90e9);
        EXPECT(gbc.pc(), 0x2c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02DC
        gbc.setState(0x3045, 0xc615, 0x57d0, 0xe906, 0x7d9a, 0x49ca, 0x1, 0x1);
        gbc.writeMem(0x3045, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc615);
        EXPECT(gbc.pc(), 0x3047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02DD
        gbc.setState(0x730b, 0xffaf, 0xf590, 0x8b01, 0x53f0, 0x236d, 0x1, 0x0);
        gbc.writeMem(0x730b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xffaf);
        EXPECT(gbc.pc(), 0x730d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02DE
        gbc.setState(0x37e6, 0x4437, 0xc350, 0x6311, 0x3ebb, 0x4b3e, 0x1, 0x0);
        gbc.writeMem(0x37e6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4437);
        EXPECT(gbc.pc(), 0x37e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02DF
        gbc.setState(0xd31f, 0x963f, 0x8310, 0x7c75, 0xf564, 0x2a38, 0x0, 0x1);
        gbc.writeMem(0xd31f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x963f);
        EXPECT(gbc.pc(), 0xd321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd31f), 0xcb);
        EXPECT(gbc.readMem(0xd320), 0x0);
        // CB 00 02E0
        gbc.setState(0x2f0, 0x9222, 0xef40, 0xcde, 0xf57b, 0x40f, 0x1, 0x0);
        gbc.writeMem(0x2f0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9222);
        EXPECT(gbc.pc(), 0x2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02E1
        gbc.setState(0x8369, 0xfcb1, 0x91a0, 0x81d2, 0x8ff6, 0x3a47, 0x0, 0x1);
        gbc.writeMem(0x8369, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfcb1);
        EXPECT(gbc.pc(), 0x836b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8369), 0xcb);
        EXPECT(gbc.readMem(0x836a), 0x0);
        // CB 00 02E2
        gbc.setState(0x2e09, 0x262f, 0x7f40, 0xc010, 0x8159, 0xbafc, 0x0, 0x1);
        gbc.writeMem(0x2e09, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x262f);
        EXPECT(gbc.pc(), 0x2e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02E3
        gbc.setState(0x2b1b, 0x3801, 0x1c70, 0x9206, 0xfa44, 0xc00a, 0x1, 0x1);
        gbc.writeMem(0x2b1b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3801);
        EXPECT(gbc.pc(), 0x2b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02E5
        gbc.setState(0x69f9, 0xb1c9, 0xbc0, 0x7e66, 0x225d, 0x75b6, 0x1, 0x0);
        gbc.writeMem(0x69f9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb1c9);
        EXPECT(gbc.pc(), 0x69fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02E6
        gbc.setState(0x9cd6, 0xebfc, 0x6320, 0x4446, 0x6ce4, 0xc282, 0x0, 0x0);
        gbc.writeMem(0x9cd6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xebfc);
        EXPECT(gbc.pc(), 0x9cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd6), 0xcb);
        EXPECT(gbc.readMem(0x9cd7), 0x0);
        // CB 00 02E7
        gbc.setState(0x3f2f, 0xa7da, 0xdb50, 0xfdd5, 0x2630, 0xf3a6, 0x1, 0x1);
        gbc.writeMem(0x3f2f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa7da);
        EXPECT(gbc.pc(), 0x3f31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02E8
        gbc.setState(0xda45, 0x7700, 0xc2e0, 0xf8f0, 0x4acc, 0x19a4, 0x0, 0x0);
        gbc.writeMem(0xda45, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7700);
        EXPECT(gbc.pc(), 0xda47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda45), 0xcb);
        EXPECT(gbc.readMem(0xda46), 0x0);
        // CB 00 02E9
        gbc.setState(0x5498, 0x2148, 0x5160, 0xfa42, 0x1d23, 0xdd15, 0x1, 0x1);
        gbc.writeMem(0x5498, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2148);
        EXPECT(gbc.pc(), 0x549a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02EA
        gbc.setState(0x632e, 0x59e0, 0xaa20, 0x7d50, 0xcef, 0xe53d, 0x0, 0x1);
        gbc.writeMem(0x632e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x59e0);
        EXPECT(gbc.pc(), 0x6330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02EB
        gbc.setState(0xa3a3, 0x9305, 0x5ad0, 0x5144, 0xf875, 0xbd7c, 0x0, 0x1);
        gbc.writeMem(0xa3a3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9305);
        EXPECT(gbc.pc(), 0xa3a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a3), 0xcb);
        EXPECT(gbc.readMem(0xa3a4), 0x0);
        // CB 00 02EC
        gbc.setState(0x67d4, 0x1fab, 0x9420, 0x9481, 0x4265, 0xb129, 0x1, 0x0);
        gbc.writeMem(0x67d4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1fab);
        EXPECT(gbc.pc(), 0x67d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02ED
        gbc.setState(0xc073, 0x3b9a, 0xf640, 0x8877, 0x61b7, 0x1bf0, 0x0, 0x0);
        gbc.writeMem(0xc073, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3b9a);
        EXPECT(gbc.pc(), 0xc075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc073), 0xcb);
        EXPECT(gbc.readMem(0xc074), 0x0);
        // CB 00 02EE
        gbc.setState(0xbeca, 0xb94f, 0xd4e0, 0xd8f3, 0x43b5, 0x8725, 0x1, 0x0);
        gbc.writeMem(0xbeca, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb94f);
        EXPECT(gbc.pc(), 0xbecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeca), 0xcb);
        EXPECT(gbc.readMem(0xbecb), 0x0);
        // CB 00 02EF
        gbc.setState(0x8be9, 0xa54b, 0x6730, 0x7726, 0x2673, 0x941f, 0x1, 0x0);
        gbc.writeMem(0x8be9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa54b);
        EXPECT(gbc.pc(), 0x8beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be9), 0xcb);
        EXPECT(gbc.readMem(0x8bea), 0x0);
        // CB 00 02F0
        gbc.setState(0x6895, 0x2c8c, 0xcb00, 0x4102, 0x5263, 0x540, 0x1, 0x0);
        gbc.writeMem(0x6895, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2c8c);
        EXPECT(gbc.pc(), 0x6897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02F1
        gbc.setState(0x9682, 0x19b3, 0x3b90, 0xc2b2, 0x201a, 0xe49b, 0x0, 0x1);
        gbc.writeMem(0x9682, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x19b3);
        EXPECT(gbc.pc(), 0x9684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9682), 0xcb);
        EXPECT(gbc.readMem(0x9683), 0x0);
        // CB 00 02F2
        gbc.setState(0xac08, 0xc0b1, 0x5070, 0x72f8, 0x8f71, 0x93e2, 0x0, 0x0);
        gbc.writeMem(0xac08, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc0b1);
        EXPECT(gbc.pc(), 0xac0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac08), 0xcb);
        EXPECT(gbc.readMem(0xac09), 0x0);
        // CB 00 02F3
        gbc.setState(0x5bf, 0x6e7d, 0x3fe0, 0x9fd9, 0xdce4, 0x1d2e, 0x0, 0x1);
        gbc.writeMem(0x5bf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6e7d);
        EXPECT(gbc.pc(), 0x5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02F4
        gbc.setState(0xdb91, 0xf9ca, 0x4430, 0x74e5, 0xaf58, 0x425e, 0x1, 0x1);
        gbc.writeMem(0xdb91, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf9ca);
        EXPECT(gbc.pc(), 0xdb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb91), 0xcb);
        EXPECT(gbc.readMem(0xdb92), 0x0);
        // CB 00 02F5
        gbc.setState(0x18bf, 0x2cfc, 0x4bd0, 0x1144, 0x384, 0x52f2, 0x0, 0x0);
        gbc.writeMem(0x18bf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2cfc);
        EXPECT(gbc.pc(), 0x18c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02F6
        gbc.setState(0xcf5f, 0x949c, 0x2650, 0xe52c, 0xf32, 0x1b6, 0x1, 0x1);
        gbc.writeMem(0xcf5f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x949c);
        EXPECT(gbc.pc(), 0xcf61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf5f), 0xcb);
        EXPECT(gbc.readMem(0xcf60), 0x0);
        // CB 00 02F7
        gbc.setState(0x238c, 0x6b3f, 0xf350, 0x576f, 0x32e, 0x86ea, 0x1, 0x1);
        gbc.writeMem(0x238c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6b3f);
        EXPECT(gbc.pc(), 0x238e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02F8
        gbc.setState(0x4b3c, 0x22f4, 0x79b0, 0x6b6c, 0x9bd, 0x11cc, 0x0, 0x1);
        gbc.writeMem(0x4b3c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x22f4);
        EXPECT(gbc.pc(), 0x4b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02F9
        gbc.setState(0x3c50, 0x27db, 0x5720, 0xb971, 0x3620, 0xa243, 0x0, 0x0);
        gbc.writeMem(0x3c50, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x27db);
        EXPECT(gbc.pc(), 0x3c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02FA
        gbc.setState(0x27c6, 0x586b, 0xd3f0, 0x4efe, 0xd65c, 0x136e, 0x1, 0x0);
        gbc.writeMem(0x27c6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x586b);
        EXPECT(gbc.pc(), 0x27c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02FB
        gbc.setState(0x213f, 0x82df, 0x8770, 0x1e60, 0x9047, 0xd6b5, 0x0, 0x1);
        gbc.writeMem(0x213f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x82df);
        EXPECT(gbc.pc(), 0x2141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02FC
        gbc.setState(0x3748, 0x49ad, 0xf320, 0x20ee, 0xe515, 0xac58, 0x0, 0x1);
        gbc.writeMem(0x3748, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x49ad);
        EXPECT(gbc.pc(), 0x374a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 02FD
        gbc.setState(0x7a7c, 0xa35, 0xaa0, 0xb5d7, 0x895, 0x8439, 0x1, 0x1);
        gbc.writeMem(0x7a7c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa35);
        EXPECT(gbc.pc(), 0x7a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 02FE
        gbc.setState(0xb93a, 0xe365, 0xe440, 0xc625, 0xb3d2, 0xa944, 0x1, 0x0);
        gbc.writeMem(0xb93a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe365);
        EXPECT(gbc.pc(), 0xb93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93a), 0xcb);
        EXPECT(gbc.readMem(0xb93b), 0x0);
        // CB 00 02FF
        gbc.setState(0x3677, 0x92b3, 0x7d0, 0x3356, 0xb46e, 0x2aaa, 0x0, 0x1);
        gbc.writeMem(0x3677, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x92b3);
        EXPECT(gbc.pc(), 0x3679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0300
        gbc.setState(0xbd8b, 0x5e81, 0x2a80, 0x94aa, 0xa8c1, 0x60ba, 0x1, 0x0);
        gbc.writeMem(0xbd8b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5e81);
        EXPECT(gbc.pc(), 0xbd8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8b), 0xcb);
        EXPECT(gbc.readMem(0xbd8c), 0x0);
        // CB 00 0301
        gbc.setState(0x88fc, 0x97e1, 0xf890, 0x7d2b, 0x9adb, 0x9446, 0x1, 0x1);
        gbc.writeMem(0x88fc, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x97e1);
        EXPECT(gbc.pc(), 0x88fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fc), 0xcb);
        EXPECT(gbc.readMem(0x88fd), 0x0);
        // CB 00 0302
        gbc.setState(0x56e5, 0xf06c, 0x5de0, 0xa316, 0x847d, 0x4982, 0x0, 0x1);
        gbc.writeMem(0x56e5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf06c);
        EXPECT(gbc.pc(), 0x56e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0303
        gbc.setState(0xa7ff, 0xb002, 0x5bc0, 0xfe64, 0xf2b6, 0x2085, 0x1, 0x1);
        gbc.writeMem(0xa7ff, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb002);
        EXPECT(gbc.pc(), 0xa801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ff), 0xcb);
        EXPECT(gbc.readMem(0xa800), 0x0);
        // CB 00 0304
        gbc.setState(0x63eb, 0x276c, 0xf1c0, 0xd006, 0x3d06, 0x4aa7, 0x0, 0x1);
        gbc.writeMem(0x63eb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x276c);
        EXPECT(gbc.pc(), 0x63ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0305
        gbc.setState(0x86c3, 0xe565, 0x2040, 0x3c6b, 0x3598, 0xfb4d, 0x0, 0x1);
        gbc.writeMem(0x86c3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe565);
        EXPECT(gbc.pc(), 0x86c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c3), 0xcb);
        EXPECT(gbc.readMem(0x86c4), 0x0);
        // CB 00 0306
        gbc.setState(0xbdc5, 0x1218, 0xb7d0, 0xc5e2, 0x7f67, 0xd3e2, 0x1, 0x0);
        gbc.writeMem(0xbdc5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1218);
        EXPECT(gbc.pc(), 0xbdc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc5), 0xcb);
        EXPECT(gbc.readMem(0xbdc6), 0x0);
        // CB 00 0308
        gbc.setState(0xb68d, 0xc13c, 0xe460, 0x7e8e, 0x1296, 0x342a, 0x1, 0x0);
        gbc.writeMem(0xb68d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc13c);
        EXPECT(gbc.pc(), 0xb68f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68d), 0xcb);
        EXPECT(gbc.readMem(0xb68e), 0x0);
        // CB 00 0309
        gbc.setState(0x185e, 0x3609, 0x4330, 0xeea1, 0xfa35, 0x3a2e, 0x0, 0x1);
        gbc.writeMem(0x185e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3609);
        EXPECT(gbc.pc(), 0x1860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 030A
        gbc.setState(0xc3cd, 0xb5df, 0x6da0, 0x3cf5, 0x4b6d, 0x6925, 0x0, 0x0);
        gbc.writeMem(0xc3cd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb5df);
        EXPECT(gbc.pc(), 0xc3cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cd), 0xcb);
        EXPECT(gbc.readMem(0xc3ce), 0x0);
        // CB 00 030B
        gbc.setState(0x42a9, 0x794d, 0x1940, 0x7af9, 0x9d00, 0xa5ae, 0x1, 0x0);
        gbc.writeMem(0x42a9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x794d);
        EXPECT(gbc.pc(), 0x42ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 030C
        gbc.setState(0x3e94, 0xb4de, 0x33a0, 0x6be7, 0xbde6, 0x7c09, 0x0, 0x1);
        gbc.writeMem(0x3e94, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb4de);
        EXPECT(gbc.pc(), 0x3e96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 030D
        gbc.setState(0x1016, 0xde58, 0xb450, 0x9322, 0xf654, 0x7d44, 0x1, 0x0);
        gbc.writeMem(0x1016, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xde58);
        EXPECT(gbc.pc(), 0x1018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 030E
        gbc.setState(0x3b55, 0x1c8b, 0x79f0, 0xf209, 0x566b, 0x5412, 0x1, 0x0);
        gbc.writeMem(0x3b55, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1c8b);
        EXPECT(gbc.pc(), 0x3b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 030F
        gbc.setState(0xa327, 0x3a84, 0xa530, 0x13ae, 0x90fe, 0xfaed, 0x1, 0x1);
        gbc.writeMem(0xa327, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3a84);
        EXPECT(gbc.pc(), 0xa329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa327), 0xcb);
        EXPECT(gbc.readMem(0xa328), 0x0);
        // CB 00 0310
        gbc.setState(0x4b1, 0xff17, 0xa8b0, 0xbec4, 0xc766, 0x507e, 0x1, 0x1);
        gbc.writeMem(0x4b1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xff17);
        EXPECT(gbc.pc(), 0x4b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0311
        gbc.setState(0x3a00, 0xe954, 0x6500, 0xa1f5, 0xd1e2, 0x4e4, 0x0, 0x1);
        gbc.writeMem(0x3a00, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe954);
        EXPECT(gbc.pc(), 0x3a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0312
        gbc.setState(0x4daf, 0x4465, 0x6f0, 0x2d96, 0x9907, 0xcf47, 0x1, 0x0);
        gbc.writeMem(0x4daf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4465);
        EXPECT(gbc.pc(), 0x4db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0313
        gbc.setState(0xd9b0, 0x4ad2, 0x42d0, 0x73c, 0x427c, 0xefac, 0x0, 0x1);
        gbc.writeMem(0xd9b0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4ad2);
        EXPECT(gbc.pc(), 0xd9b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b0), 0xcb);
        EXPECT(gbc.readMem(0xd9b1), 0x0);
        // CB 00 0314
        gbc.setState(0x3b4c, 0x4935, 0x15e0, 0x6182, 0x9e47, 0x4d6f, 0x0, 0x1);
        gbc.writeMem(0x3b4c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4935);
        EXPECT(gbc.pc(), 0x3b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0315
        gbc.setState(0x5a12, 0x3b82, 0x1e40, 0x4bc9, 0xa14d, 0xde13, 0x0, 0x0);
        gbc.writeMem(0x5a12, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3b82);
        EXPECT(gbc.pc(), 0x5a14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0317
        gbc.setState(0x66ec, 0x8c89, 0xc5f0, 0x1b3a, 0x8808, 0x959f, 0x1, 0x0);
        gbc.writeMem(0x66ec, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8c89);
        EXPECT(gbc.pc(), 0x66ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0319
        gbc.setState(0xc153, 0xa348, 0x9bd0, 0xd1b6, 0x3cb8, 0x34ab, 0x0, 0x1);
        gbc.writeMem(0xc153, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa348);
        EXPECT(gbc.pc(), 0xc155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc153), 0xcb);
        EXPECT(gbc.readMem(0xc154), 0x0);
        // CB 00 031A
        gbc.setState(0xadcf, 0x3065, 0x4890, 0x2d12, 0xfb3b, 0x6345, 0x0, 0x1);
        gbc.writeMem(0xadcf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3065);
        EXPECT(gbc.pc(), 0xadd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadcf), 0xcb);
        EXPECT(gbc.readMem(0xadd0), 0x0);
        // CB 00 031B
        gbc.setState(0x7258, 0xb423, 0xebc0, 0x99d2, 0x379d, 0x8d9a, 0x1, 0x1);
        gbc.writeMem(0x7258, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb423);
        EXPECT(gbc.pc(), 0x725a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 031C
        gbc.setState(0xa1a1, 0x517, 0xe9f0, 0x5025, 0x75f0, 0xd415, 0x1, 0x1);
        gbc.writeMem(0xa1a1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x517);
        EXPECT(gbc.pc(), 0xa1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a1), 0xcb);
        EXPECT(gbc.readMem(0xa1a2), 0x0);
        // CB 00 031D
        gbc.setState(0xb938, 0x82bf, 0xf1c0, 0x3e16, 0xd74b, 0xd4c4, 0x1, 0x1);
        gbc.writeMem(0xb938, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x82bf);
        EXPECT(gbc.pc(), 0xb93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb938), 0xcb);
        EXPECT(gbc.readMem(0xb939), 0x0);
        // CB 00 031E
        gbc.setState(0x87bd, 0xd279, 0x9830, 0x6f10, 0xfa78, 0x2182, 0x1, 0x1);
        gbc.writeMem(0x87bd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd279);
        EXPECT(gbc.pc(), 0x87bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87bd), 0xcb);
        EXPECT(gbc.readMem(0x87be), 0x0);
        // CB 00 031F
        gbc.setState(0x3746, 0xcf1c, 0x1890, 0x53f7, 0x6f0f, 0x7de0, 0x1, 0x1);
        gbc.writeMem(0x3746, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcf1c);
        EXPECT(gbc.pc(), 0x3748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0320
        gbc.setState(0x3ceb, 0x937d, 0x8030, 0xd82b, 0xffbb, 0xba2e, 0x1, 0x0);
        gbc.writeMem(0x3ceb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x937d);
        EXPECT(gbc.pc(), 0x3ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0321
        gbc.setState(0xd372, 0xc500, 0xcbe0, 0xd224, 0x2fb1, 0x4f14, 0x1, 0x0);
        gbc.writeMem(0xd372, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc500);
        EXPECT(gbc.pc(), 0xd374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd372), 0xcb);
        EXPECT(gbc.readMem(0xd373), 0x0);
        // CB 00 0322
        gbc.setState(0x58a4, 0xa94b, 0x6980, 0xeb33, 0x96bb, 0x9945, 0x1, 0x0);
        gbc.writeMem(0x58a4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa94b);
        EXPECT(gbc.pc(), 0x58a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0323
        gbc.setState(0xa60a, 0xadc7, 0x8940, 0x264d, 0x9c06, 0x22aa, 0x1, 0x0);
        gbc.writeMem(0xa60a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xadc7);
        EXPECT(gbc.pc(), 0xa60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa60a), 0xcb);
        EXPECT(gbc.readMem(0xa60b), 0x0);
        // CB 00 0324
        gbc.setState(0xa1b, 0xb683, 0xb9a0, 0x2137, 0xb5c5, 0x57ed, 0x0, 0x1);
        gbc.writeMem(0xa1b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb683);
        EXPECT(gbc.pc(), 0xa1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0325
        gbc.setState(0x5e30, 0x2d49, 0x1070, 0x40d3, 0x1d09, 0x1bbb, 0x1, 0x0);
        gbc.writeMem(0x5e30, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2d49);
        EXPECT(gbc.pc(), 0x5e32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0326
        gbc.setState(0x1049, 0xb3ad, 0xce10, 0x23ae, 0x204d, 0xae4a, 0x0, 0x1);
        gbc.writeMem(0x1049, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb3ad);
        EXPECT(gbc.pc(), 0x104b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0328
        gbc.setState(0x71a3, 0xd00e, 0x36e0, 0xedef, 0x6e9e, 0xcefa, 0x0, 0x0);
        gbc.writeMem(0x71a3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd00e);
        EXPECT(gbc.pc(), 0x71a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0329
        gbc.setState(0x64f8, 0x847d, 0xdaf0, 0xbea9, 0x48cb, 0x7319, 0x0, 0x0);
        gbc.writeMem(0x64f8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x847d);
        EXPECT(gbc.pc(), 0x64fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 032A
        gbc.setState(0x3fc8, 0x5483, 0x8200, 0x165c, 0xa4ef, 0x342f, 0x1, 0x1);
        gbc.writeMem(0x3fc8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5483);
        EXPECT(gbc.pc(), 0x3fca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 032B
        gbc.setState(0xe017, 0xd0f7, 0xf7c0, 0x3b89, 0xeb54, 0x847c, 0x0, 0x1);
        gbc.writeMem(0xe017, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd0f7);
        EXPECT(gbc.pc(), 0xe019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe017), 0xcb);
        EXPECT(gbc.readMem(0xe018), 0x0);
        // CB 00 032C
        gbc.setState(0x82ad, 0x9fb0, 0xb090, 0x5e3a, 0x4340, 0x251b, 0x1, 0x1);
        gbc.writeMem(0x82ad, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9fb0);
        EXPECT(gbc.pc(), 0x82af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ad), 0xcb);
        EXPECT(gbc.readMem(0x82ae), 0x0);
        // CB 00 032D
        gbc.setState(0x1c9e, 0x62f, 0xc2e0, 0x1e61, 0x88ba, 0x17df, 0x0, 0x1);
        gbc.writeMem(0x1c9e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x62f);
        EXPECT(gbc.pc(), 0x1ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 032E
        gbc.setState(0x5e08, 0x59cc, 0xc1d0, 0xace5, 0xd836, 0xa1e8, 0x0, 0x1);
        gbc.writeMem(0x5e08, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x59cc);
        EXPECT(gbc.pc(), 0x5e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0330
        gbc.setState(0x7cce, 0x83bf, 0x2690, 0x7267, 0x6cd8, 0xda78, 0x1, 0x0);
        gbc.writeMem(0x7cce, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x83bf);
        EXPECT(gbc.pc(), 0x7cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0331
        gbc.setState(0xb41f, 0xdbed, 0x8130, 0x52c8, 0xac2f, 0xe81a, 0x1, 0x1);
        gbc.writeMem(0xb41f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdbed);
        EXPECT(gbc.pc(), 0xb421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb41f), 0xcb);
        EXPECT(gbc.readMem(0xb420), 0x0);
        // CB 00 0332
        gbc.setState(0x547d, 0x42c1, 0x7a50, 0x2c7f, 0xee3a, 0xca37, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x42c1);
        EXPECT(gbc.pc(), 0x547f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0333
        gbc.setState(0x81b0, 0x5859, 0x32b0, 0x7bd, 0xe24c, 0x8168, 0x0, 0x1);
        gbc.writeMem(0x81b0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5859);
        EXPECT(gbc.pc(), 0x81b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b0), 0xcb);
        EXPECT(gbc.readMem(0x81b1), 0x0);
        // CB 00 0334
        gbc.setState(0xc0d9, 0x6dd8, 0xae50, 0xac2a, 0x25b7, 0x6d8e, 0x0, 0x0);
        gbc.writeMem(0xc0d9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6dd8);
        EXPECT(gbc.pc(), 0xc0db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d9), 0xcb);
        EXPECT(gbc.readMem(0xc0da), 0x0);
        // CB 00 0335
        gbc.setState(0x9e9e, 0x53d4, 0xd220, 0xc14f, 0x6f62, 0xd0c9, 0x1, 0x0);
        gbc.writeMem(0x9e9e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x53d4);
        EXPECT(gbc.pc(), 0x9ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9e), 0xcb);
        EXPECT(gbc.readMem(0x9e9f), 0x0);
        // CB 00 0336
        gbc.setState(0x67e6, 0xdad8, 0xd0a0, 0xbaa2, 0xe50e, 0x6132, 0x0, 0x1);
        gbc.writeMem(0x67e6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdad8);
        EXPECT(gbc.pc(), 0x67e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0337
        gbc.setState(0xe764, 0x795b, 0xb680, 0x866f, 0x1540, 0x329a, 0x1, 0x1);
        gbc.writeMem(0xe764, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x795b);
        EXPECT(gbc.pc(), 0xe766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe764), 0xcb);
        EXPECT(gbc.readMem(0xe765), 0x0);
        // CB 00 0338
        gbc.setState(0x99c7, 0x3e72, 0xeb60, 0x784b, 0x4de7, 0xeb69, 0x1, 0x0);
        gbc.writeMem(0x99c7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3e72);
        EXPECT(gbc.pc(), 0x99c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c7), 0xcb);
        EXPECT(gbc.readMem(0x99c8), 0x0);
        // CB 00 0339
        gbc.setState(0xe1d1, 0xb8a, 0xd8a0, 0xa5b4, 0xe4c2, 0xbf50, 0x0, 0x0);
        gbc.writeMem(0xe1d1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb8a);
        EXPECT(gbc.pc(), 0xe1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d1), 0xcb);
        EXPECT(gbc.readMem(0xe1d2), 0x0);
        // CB 00 033B
        gbc.setState(0x83d3, 0xb9b9, 0x6290, 0xba82, 0x580c, 0x7ffb, 0x1, 0x1);
        gbc.writeMem(0x83d3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb9b9);
        EXPECT(gbc.pc(), 0x83d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d3), 0xcb);
        EXPECT(gbc.readMem(0x83d4), 0x0);
        // CB 00 033C
        gbc.setState(0x591e, 0xd859, 0x6360, 0x27a5, 0x778a, 0x5751, 0x1, 0x1);
        gbc.writeMem(0x591e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd859);
        EXPECT(gbc.pc(), 0x5920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 033D
        gbc.setState(0x671d, 0x5416, 0x6050, 0x6fef, 0x99e8, 0xc204, 0x1, 0x1);
        gbc.writeMem(0x671d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5416);
        EXPECT(gbc.pc(), 0x671f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 033E
        gbc.setState(0x566d, 0x7d06, 0x580, 0x51ab, 0xcfa9, 0xda28, 0x1, 0x1);
        gbc.writeMem(0x566d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7d06);
        EXPECT(gbc.pc(), 0x566f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 033F
        gbc.setState(0x19e5, 0xa39f, 0x53d0, 0x70d0, 0x544d, 0x6894, 0x1, 0x0);
        gbc.writeMem(0x19e5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa39f);
        EXPECT(gbc.pc(), 0x19e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0340
        gbc.setState(0x3771, 0x9d3a, 0x56a0, 0x9ca6, 0x2869, 0xf84e, 0x0, 0x0);
        gbc.writeMem(0x3771, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9d3a);
        EXPECT(gbc.pc(), 0x3773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0341
        gbc.setState(0x51cc, 0x86da, 0xec90, 0x57d6, 0x1f7c, 0x3639, 0x1, 0x0);
        gbc.writeMem(0x51cc, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x86da);
        EXPECT(gbc.pc(), 0x51ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0342
        gbc.setState(0xa66, 0x6314, 0x7b20, 0xa92d, 0xd86f, 0x4be, 0x0, 0x0);
        gbc.writeMem(0xa66, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6314);
        EXPECT(gbc.pc(), 0xa68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0343
        gbc.setState(0x4d66, 0x39a, 0x1010, 0x4818, 0xbb8c, 0x942f, 0x0, 0x0);
        gbc.writeMem(0x4d66, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x39a);
        EXPECT(gbc.pc(), 0x4d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0344
        gbc.setState(0x7ac7, 0xcb8f, 0x9d70, 0x608c, 0x39d, 0xde19, 0x1, 0x0);
        gbc.writeMem(0x7ac7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcb8f);
        EXPECT(gbc.pc(), 0x7ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0345
        gbc.setState(0x7a4d, 0x1785, 0xef70, 0x5be5, 0x7bad, 0xa4f8, 0x1, 0x0);
        gbc.writeMem(0x7a4d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1785);
        EXPECT(gbc.pc(), 0x7a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0346
        gbc.setState(0xc3eb, 0x3b3e, 0x5790, 0x8124, 0x1c6b, 0x1689, 0x1, 0x0);
        gbc.writeMem(0xc3eb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3b3e);
        EXPECT(gbc.pc(), 0xc3ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3eb), 0xcb);
        EXPECT(gbc.readMem(0xc3ec), 0x0);
        // CB 00 0347
        gbc.setState(0x8cf3, 0xc0c7, 0xc660, 0x631a, 0x4abb, 0xd989, 0x1, 0x1);
        gbc.writeMem(0x8cf3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc0c7);
        EXPECT(gbc.pc(), 0x8cf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf3), 0xcb);
        EXPECT(gbc.readMem(0x8cf4), 0x0);
        // CB 00 0348
        gbc.setState(0xbcb2, 0x4f6, 0xcd60, 0xab4e, 0x2483, 0x499f, 0x0, 0x1);
        gbc.writeMem(0xbcb2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4f6);
        EXPECT(gbc.pc(), 0xbcb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb2), 0xcb);
        EXPECT(gbc.readMem(0xbcb3), 0x0);
        // CB 00 0349
        gbc.setState(0x6685, 0xe2ff, 0xfec0, 0xed0, 0x998d, 0xee0f, 0x0, 0x0);
        gbc.writeMem(0x6685, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe2ff);
        EXPECT(gbc.pc(), 0x6687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 034A
        gbc.setState(0xd81, 0xfd1b, 0x5b20, 0xfb74, 0xa1db, 0xb735, 0x0, 0x0);
        gbc.writeMem(0xd81, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfd1b);
        EXPECT(gbc.pc(), 0xd83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 034B
        gbc.setState(0x22bb, 0x4663, 0xbc90, 0xe3c9, 0xf065, 0x5999, 0x0, 0x0);
        gbc.writeMem(0x22bb, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4663);
        EXPECT(gbc.pc(), 0x22bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 034C
        gbc.setState(0x94d4, 0x594a, 0x3210, 0x85d4, 0x19e0, 0x5380, 0x1, 0x1);
        gbc.writeMem(0x94d4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x594a);
        EXPECT(gbc.pc(), 0x94d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d4), 0xcb);
        EXPECT(gbc.readMem(0x94d5), 0x0);
        // CB 00 034D
        gbc.setState(0x4915, 0xa874, 0x6230, 0x6abe, 0xae13, 0x3dd9, 0x1, 0x0);
        gbc.writeMem(0x4915, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa874);
        EXPECT(gbc.pc(), 0x4917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 034E
        gbc.setState(0x9b74, 0x20ad, 0x3900, 0xc666, 0x6214, 0x10f4, 0x1, 0x0);
        gbc.writeMem(0x9b74, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x20ad);
        EXPECT(gbc.pc(), 0x9b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b74), 0xcb);
        EXPECT(gbc.readMem(0x9b75), 0x0);
        // CB 00 034F
        gbc.setState(0x84a3, 0xef05, 0xb610, 0xcc14, 0xd804, 0xe1d7, 0x0, 0x1);
        gbc.writeMem(0x84a3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xef05);
        EXPECT(gbc.pc(), 0x84a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a3), 0xcb);
        EXPECT(gbc.readMem(0x84a4), 0x0);
        // CB 00 0350
        gbc.setState(0xacc3, 0xb911, 0xdb50, 0xd639, 0x1d61, 0xba53, 0x0, 0x0);
        gbc.writeMem(0xacc3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb911);
        EXPECT(gbc.pc(), 0xacc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc3), 0xcb);
        EXPECT(gbc.readMem(0xacc4), 0x0);
        // CB 00 0351
        gbc.setState(0x6885, 0x6019, 0xf300, 0x9f4a, 0x39e9, 0x9d49, 0x0, 0x1);
        gbc.writeMem(0x6885, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6019);
        EXPECT(gbc.pc(), 0x6887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0352
        gbc.setState(0x81ef, 0xfa4b, 0x4350, 0x1cb1, 0x60ce, 0x58fb, 0x1, 0x0);
        gbc.writeMem(0x81ef, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfa4b);
        EXPECT(gbc.pc(), 0x81f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ef), 0xcb);
        EXPECT(gbc.readMem(0x81f0), 0x0);
        // CB 00 0353
        gbc.setState(0x810a, 0xa5d7, 0xdd10, 0x57c3, 0x9473, 0xb293, 0x0, 0x0);
        gbc.writeMem(0x810a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa5d7);
        EXPECT(gbc.pc(), 0x810c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x810a), 0xcb);
        EXPECT(gbc.readMem(0x810b), 0x0);
        // CB 00 0354
        gbc.setState(0x366f, 0xe5dd, 0x1710, 0x7c4a, 0x9c71, 0x4c08, 0x1, 0x0);
        gbc.writeMem(0x366f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe5dd);
        EXPECT(gbc.pc(), 0x3671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0355
        gbc.setState(0xac9b, 0xe450, 0x9d40, 0x24b, 0x8a40, 0xb99e, 0x0, 0x0);
        gbc.writeMem(0xac9b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe450);
        EXPECT(gbc.pc(), 0xac9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9b), 0xcb);
        EXPECT(gbc.readMem(0xac9c), 0x0);
        // CB 00 0356
        gbc.setState(0x9422, 0x4059, 0x95f0, 0x6c0a, 0x1f90, 0x6581, 0x1, 0x1);
        gbc.writeMem(0x9422, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4059);
        EXPECT(gbc.pc(), 0x9424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9422), 0xcb);
        EXPECT(gbc.readMem(0x9423), 0x0);
        // CB 00 0357
        gbc.setState(0x9056, 0x51cb, 0xa190, 0x5df5, 0x772a, 0x38b7, 0x1, 0x1);
        gbc.writeMem(0x9056, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x51cb);
        EXPECT(gbc.pc(), 0x9058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9056), 0xcb);
        EXPECT(gbc.readMem(0x9057), 0x0);
        // CB 00 0358
        gbc.setState(0x7e8b, 0x7e89, 0xc610, 0x39e3, 0x4947, 0xe7bf, 0x0, 0x1);
        gbc.writeMem(0x7e8b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7e89);
        EXPECT(gbc.pc(), 0x7e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0359
        gbc.setState(0x1c9c, 0x76a7, 0xb490, 0x561, 0xe3d8, 0x6366, 0x0, 0x1);
        gbc.writeMem(0x1c9c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x76a7);
        EXPECT(gbc.pc(), 0x1c9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 035A
        gbc.setState(0x9d50, 0x68d3, 0xf70, 0x52db, 0xa75c, 0xa15e, 0x0, 0x1);
        gbc.writeMem(0x9d50, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x68d3);
        EXPECT(gbc.pc(), 0x9d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d50), 0xcb);
        EXPECT(gbc.readMem(0x9d51), 0x0);
        // CB 00 035B
        gbc.setState(0x418, 0x522d, 0xd50, 0x3cfa, 0x6bc1, 0xc105, 0x1, 0x1);
        gbc.writeMem(0x418, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x522d);
        EXPECT(gbc.pc(), 0x41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 035C
        gbc.setState(0x2fe8, 0x21f2, 0x5430, 0xc9be, 0x74d7, 0x9c28, 0x0, 0x0);
        gbc.writeMem(0x2fe8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x21f2);
        EXPECT(gbc.pc(), 0x2fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 035D
        gbc.setState(0x69a0, 0xe979, 0x4900, 0xc6e, 0xbffc, 0xede1, 0x0, 0x1);
        gbc.writeMem(0x69a0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe979);
        EXPECT(gbc.pc(), 0x69a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 035E
        gbc.setState(0x5307, 0xcfcb, 0x6b80, 0xb39c, 0x1896, 0x5024, 0x0, 0x0);
        gbc.writeMem(0x5307, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcfcb);
        EXPECT(gbc.pc(), 0x5309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 035F
        gbc.setState(0x29c1, 0x8fc3, 0xaca0, 0x1acc, 0xbe03, 0xb5cc, 0x1, 0x0);
        gbc.writeMem(0x29c1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8fc3);
        EXPECT(gbc.pc(), 0x29c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0360
        gbc.setState(0xb2e9, 0xc757, 0x5f40, 0x78f8, 0x7bcf, 0xeedc, 0x0, 0x1);
        gbc.writeMem(0xb2e9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc757);
        EXPECT(gbc.pc(), 0xb2eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e9), 0xcb);
        EXPECT(gbc.readMem(0xb2ea), 0x0);
        // CB 00 0361
        gbc.setState(0x663a, 0xd4f8, 0x3ec0, 0xc57d, 0xe0ad, 0x8d56, 0x0, 0x0);
        gbc.writeMem(0x663a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd4f8);
        EXPECT(gbc.pc(), 0x663c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0362
        gbc.setState(0x7a4e, 0x240f, 0x4310, 0xccc9, 0xda57, 0xc6db, 0x0, 0x0);
        gbc.writeMem(0x7a4e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x240f);
        EXPECT(gbc.pc(), 0x7a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0363
        gbc.setState(0xd740, 0xfe08, 0x3820, 0x2e38, 0xa969, 0x78e, 0x0, 0x1);
        gbc.writeMem(0xd740, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfe08);
        EXPECT(gbc.pc(), 0xd742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd740), 0xcb);
        EXPECT(gbc.readMem(0xd741), 0x0);
        // CB 00 0364
        gbc.setState(0x4c8d, 0x1b07, 0x510, 0xbbb9, 0x7124, 0x31d0, 0x1, 0x1);
        gbc.writeMem(0x4c8d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1b07);
        EXPECT(gbc.pc(), 0x4c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0365
        gbc.setState(0xe5f0, 0xf263, 0xd5c0, 0xd237, 0xf9c1, 0xe5b2, 0x0, 0x1);
        gbc.writeMem(0xe5f0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf263);
        EXPECT(gbc.pc(), 0xe5f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f0), 0xcb);
        EXPECT(gbc.readMem(0xe5f1), 0x0);
        // CB 00 0367
        gbc.setState(0x6664, 0x1856, 0x4b30, 0xf11e, 0x5b30, 0xa246, 0x1, 0x1);
        gbc.writeMem(0x6664, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1856);
        EXPECT(gbc.pc(), 0x6666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0368
        gbc.setState(0xb42b, 0xce9b, 0xb340, 0xb20a, 0x384a, 0xeb02, 0x1, 0x0);
        gbc.writeMem(0xb42b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xce9b);
        EXPECT(gbc.pc(), 0xb42d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42b), 0xcb);
        EXPECT(gbc.readMem(0xb42c), 0x0);
        // CB 00 0369
        gbc.setState(0x12ab, 0xf20d, 0xd580, 0x8109, 0x3aee, 0x37d6, 0x0, 0x0);
        gbc.writeMem(0x12ab, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf20d);
        EXPECT(gbc.pc(), 0x12ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 036A
        gbc.setState(0x40be, 0x4e0, 0x5d20, 0x5e97, 0xa95f, 0x9a02, 0x0, 0x0);
        gbc.writeMem(0x40be, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4e0);
        EXPECT(gbc.pc(), 0x40c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 036B
        gbc.setState(0xa49d, 0xd279, 0xc060, 0xc6ed, 0x510a, 0xd79d, 0x1, 0x1);
        gbc.writeMem(0xa49d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd279);
        EXPECT(gbc.pc(), 0xa49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49d), 0xcb);
        EXPECT(gbc.readMem(0xa49e), 0x0);
        // CB 00 036C
        gbc.setState(0x5fa2, 0x7943, 0x4500, 0x5826, 0xfa4b, 0xa8af, 0x1, 0x0);
        gbc.writeMem(0x5fa2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7943);
        EXPECT(gbc.pc(), 0x5fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 036D
        gbc.setState(0xa7fa, 0xffff, 0x290, 0xdc5, 0x3197, 0xe1e2, 0x1, 0x1);
        gbc.writeMem(0xa7fa, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xffff);
        EXPECT(gbc.pc(), 0xa7fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7fa), 0xcb);
        EXPECT(gbc.readMem(0xa7fb), 0x0);
        // CB 00 036E
        gbc.setState(0x9fb9, 0x19a4, 0x44b0, 0xb24c, 0x6a6d, 0x1586, 0x0, 0x1);
        gbc.writeMem(0x9fb9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x19a4);
        EXPECT(gbc.pc(), 0x9fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb9), 0xcb);
        EXPECT(gbc.readMem(0x9fba), 0x0);
        // CB 00 036F
        gbc.setState(0xbc80, 0xd130, 0xc570, 0x5c55, 0xcc44, 0xe08e, 0x0, 0x0);
        gbc.writeMem(0xbc80, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd130);
        EXPECT(gbc.pc(), 0xbc82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc80), 0xcb);
        EXPECT(gbc.readMem(0xbc81), 0x0);
        // CB 00 0370
        gbc.setState(0xab5d, 0x567d, 0xa30, 0x9c94, 0xff24, 0xc71a, 0x1, 0x1);
        gbc.writeMem(0xab5d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x567d);
        EXPECT(gbc.pc(), 0xab5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab5d), 0xcb);
        EXPECT(gbc.readMem(0xab5e), 0x0);
        // CB 00 0371
        gbc.setState(0xeab0, 0xf4ef, 0x31f0, 0xd99f, 0x308c, 0xf5d7, 0x0, 0x1);
        gbc.writeMem(0xeab0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf4ef);
        EXPECT(gbc.pc(), 0xeab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab0), 0xcb);
        EXPECT(gbc.readMem(0xeab1), 0x0);
        // CB 00 0372
        gbc.setState(0xd563, 0x362d, 0x3e30, 0xbf9a, 0x1650, 0x99a3, 0x1, 0x0);
        gbc.writeMem(0xd563, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x362d);
        EXPECT(gbc.pc(), 0xd565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd563), 0xcb);
        EXPECT(gbc.readMem(0xd564), 0x0);
        // CB 00 0373
        gbc.setState(0x9cb8, 0xbd2f, 0x41f0, 0x158b, 0xd29b, 0xc91d, 0x1, 0x0);
        gbc.writeMem(0x9cb8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbd2f);
        EXPECT(gbc.pc(), 0x9cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb8), 0xcb);
        EXPECT(gbc.readMem(0x9cb9), 0x0);
        // CB 00 0374
        gbc.setState(0x1aaf, 0x4616, 0x3db0, 0x23e2, 0xa7f9, 0xb99, 0x0, 0x0);
        gbc.writeMem(0x1aaf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4616);
        EXPECT(gbc.pc(), 0x1ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0375
        gbc.setState(0xcab1, 0x6784, 0x97c0, 0x9ada, 0xb24d, 0x717, 0x1, 0x0);
        gbc.writeMem(0xcab1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6784);
        EXPECT(gbc.pc(), 0xcab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab1), 0xcb);
        EXPECT(gbc.readMem(0xcab2), 0x0);
        // CB 00 0376
        gbc.setState(0x868f, 0x166b, 0x9970, 0xac96, 0xf2b0, 0x293d, 0x0, 0x0);
        gbc.writeMem(0x868f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x166b);
        EXPECT(gbc.pc(), 0x8691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x868f), 0xcb);
        EXPECT(gbc.readMem(0x8690), 0x0);
        // CB 00 0377
        gbc.setState(0x3c4b, 0xac15, 0x3040, 0xc167, 0x2d59, 0xa19a, 0x0, 0x0);
        gbc.writeMem(0x3c4b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xac15);
        EXPECT(gbc.pc(), 0x3c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0378
        gbc.setState(0xe55c, 0x601d, 0xde80, 0x54ec, 0xfbf2, 0xe3f1, 0x0, 0x1);
        gbc.writeMem(0xe55c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x601d);
        EXPECT(gbc.pc(), 0xe55e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55c), 0xcb);
        EXPECT(gbc.readMem(0xe55d), 0x0);
        // CB 00 0379
        gbc.setState(0xd83f, 0xdd3c, 0x6520, 0x26ad, 0x7c73, 0xacac, 0x0, 0x1);
        gbc.writeMem(0xd83f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdd3c);
        EXPECT(gbc.pc(), 0xd841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83f), 0xcb);
        EXPECT(gbc.readMem(0xd840), 0x0);
        // CB 00 037A
        gbc.setState(0x8efd, 0xd52d, 0xd140, 0x889f, 0xc224, 0x6e3a, 0x0, 0x1);
        gbc.writeMem(0x8efd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd52d);
        EXPECT(gbc.pc(), 0x8eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8efd), 0xcb);
        EXPECT(gbc.readMem(0x8efe), 0x0);
        // CB 00 037B
        gbc.setState(0x6e0a, 0x7b37, 0xd2c0, 0x9b31, 0xefa7, 0x3b3c, 0x1, 0x0);
        gbc.writeMem(0x6e0a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7b37);
        EXPECT(gbc.pc(), 0x6e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 037D
        gbc.setState(0x33c5, 0xd36a, 0x960, 0x6a67, 0x44f0, 0xda9f, 0x1, 0x1);
        gbc.writeMem(0x33c5, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd36a);
        EXPECT(gbc.pc(), 0x33c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 037E
        gbc.setState(0x7ee9, 0x45ce, 0x94c0, 0xeb03, 0x522, 0x69b6, 0x0, 0x0);
        gbc.writeMem(0x7ee9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x45ce);
        EXPECT(gbc.pc(), 0x7eeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 037F
        gbc.setState(0xd487, 0xca70, 0xb880, 0xb6c1, 0x9056, 0xfce0, 0x1, 0x1);
        gbc.writeMem(0xd487, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xca70);
        EXPECT(gbc.pc(), 0xd489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd487), 0xcb);
        EXPECT(gbc.readMem(0xd488), 0x0);
        // CB 00 0380
        gbc.setState(0xa45, 0x7d50, 0x650, 0xaa7d, 0xa40e, 0x7658, 0x0, 0x0);
        gbc.writeMem(0xa45, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7d50);
        EXPECT(gbc.pc(), 0xa47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0381
        gbc.setState(0xc923, 0x7a1, 0x67a0, 0x571b, 0xf99a, 0x2db, 0x0, 0x0);
        gbc.writeMem(0xc923, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7a1);
        EXPECT(gbc.pc(), 0xc925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc923), 0xcb);
        EXPECT(gbc.readMem(0xc924), 0x0);
        // CB 00 0382
        gbc.setState(0xb3a7, 0xb614, 0xc190, 0x8f22, 0xcdc5, 0x2385, 0x1, 0x0);
        gbc.writeMem(0xb3a7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb614);
        EXPECT(gbc.pc(), 0xb3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a7), 0xcb);
        EXPECT(gbc.readMem(0xb3a8), 0x0);
        // CB 00 0383
        gbc.setState(0x457, 0xff4f, 0x5400, 0xa2a0, 0x4dd7, 0x1628, 0x1, 0x1);
        gbc.writeMem(0x457, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xff4f);
        EXPECT(gbc.pc(), 0x459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0384
        gbc.setState(0x6d0c, 0x3227, 0x6b50, 0x7e8c, 0xf4d8, 0xfe9c, 0x1, 0x0);
        gbc.writeMem(0x6d0c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3227);
        EXPECT(gbc.pc(), 0x6d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0386
        gbc.setState(0xb36b, 0xc3c5, 0x6290, 0xe87c, 0xe34a, 0xf346, 0x1, 0x0);
        gbc.writeMem(0xb36b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc3c5);
        EXPECT(gbc.pc(), 0xb36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36b), 0xcb);
        EXPECT(gbc.readMem(0xb36c), 0x0);
        // CB 00 0387
        gbc.setState(0xaf02, 0xd9b, 0x9240, 0x35c6, 0x9cec, 0x918b, 0x1, 0x1);
        gbc.writeMem(0xaf02, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd9b);
        EXPECT(gbc.pc(), 0xaf04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf02), 0xcb);
        EXPECT(gbc.readMem(0xaf03), 0x0);
        // CB 00 0389
        gbc.setState(0xc9e9, 0x36f3, 0x5100, 0x5802, 0x5d8b, 0x3552, 0x1, 0x1);
        gbc.writeMem(0xc9e9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0xc9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e9), 0xcb);
        EXPECT(gbc.readMem(0xc9ea), 0x0);
        // CB 00 038A
        gbc.setState(0x4ce3, 0xdc71, 0xa910, 0x44e8, 0x98ad, 0x6798, 0x0, 0x0);
        gbc.writeMem(0x4ce3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdc71);
        EXPECT(gbc.pc(), 0x4ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 038B
        gbc.setState(0x2e7e, 0xa66a, 0xcf70, 0x4880, 0xb486, 0x895d, 0x0, 0x1);
        gbc.writeMem(0x2e7e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa66a);
        EXPECT(gbc.pc(), 0x2e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 038C
        gbc.setState(0xa90, 0x4b0d, 0xb9a0, 0x724a, 0x92a, 0xdf3e, 0x0, 0x1);
        gbc.writeMem(0xa90, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4b0d);
        EXPECT(gbc.pc(), 0xa92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 038D
        gbc.setState(0x40b6, 0x2e9a, 0xd340, 0xaabf, 0x10f3, 0x18bc, 0x1, 0x1);
        gbc.writeMem(0x40b6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2e9a);
        EXPECT(gbc.pc(), 0x40b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 038E
        gbc.setState(0x2c5b, 0x109a, 0x3060, 0xf8a, 0xa900, 0xdd3b, 0x0, 0x1);
        gbc.writeMem(0x2c5b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x109a);
        EXPECT(gbc.pc(), 0x2c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 038F
        gbc.setState(0x44e1, 0x38a6, 0xf7e0, 0x9e29, 0x1648, 0xb0e5, 0x0, 0x1);
        gbc.writeMem(0x44e1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x38a6);
        EXPECT(gbc.pc(), 0x44e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0390
        gbc.setState(0x3c6d, 0x6b4e, 0xd120, 0xcee, 0x7366, 0x7792, 0x1, 0x0);
        gbc.writeMem(0x3c6d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6b4e);
        EXPECT(gbc.pc(), 0x3c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0391
        gbc.setState(0x64ed, 0xe602, 0xa8e0, 0x8e7d, 0xf8f9, 0x402d, 0x0, 0x1);
        gbc.writeMem(0x64ed, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe602);
        EXPECT(gbc.pc(), 0x64ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0392
        gbc.setState(0x584c, 0xd2a2, 0x2510, 0x9223, 0x1a8f, 0x2b56, 0x1, 0x0);
        gbc.writeMem(0x584c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd2a2);
        EXPECT(gbc.pc(), 0x584e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0393
        gbc.setState(0xab76, 0x60f6, 0xa230, 0x9113, 0x2d83, 0x82a, 0x1, 0x0);
        gbc.writeMem(0xab76, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x60f6);
        EXPECT(gbc.pc(), 0xab78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab76), 0xcb);
        EXPECT(gbc.readMem(0xab77), 0x0);
        // CB 00 0394
        gbc.setState(0x6db1, 0x193a, 0xe0, 0x5149, 0xfa25, 0xadf8, 0x0, 0x0);
        gbc.writeMem(0x6db1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x193a);
        EXPECT(gbc.pc(), 0x6db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0395
        gbc.setState(0x2ff0, 0x97e, 0x69e0, 0x6b41, 0x52f6, 0x84a7, 0x1, 0x0);
        gbc.writeMem(0x2ff0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x97e);
        EXPECT(gbc.pc(), 0x2ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 0396
        gbc.setState(0x1544, 0x9f00, 0x1ce0, 0xdee5, 0xbcb8, 0x48a0, 0x1, 0x0);
        gbc.writeMem(0x1544, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9f00);
        EXPECT(gbc.pc(), 0x1546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 0398
        gbc.setState(0xc749, 0xaf51, 0x8ce0, 0x5b24, 0xcaa7, 0xf956, 0x1, 0x1);
        gbc.writeMem(0xc749, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xaf51);
        EXPECT(gbc.pc(), 0xc74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc749), 0xcb);
        EXPECT(gbc.readMem(0xc74a), 0x0);
        // CB 00 0399
        gbc.setState(0xbe0d, 0x7f0c, 0xa9e0, 0xb415, 0xe7f9, 0x7b8c, 0x0, 0x1);
        gbc.writeMem(0xbe0d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7f0c);
        EXPECT(gbc.pc(), 0xbe0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0d), 0xcb);
        EXPECT(gbc.readMem(0xbe0e), 0x0);
        // CB 00 039A
        gbc.setState(0x3232, 0xe9ca, 0x8900, 0xc335, 0x353e, 0x2242, 0x1, 0x0);
        gbc.writeMem(0x3232, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe9ca);
        EXPECT(gbc.pc(), 0x3234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 039B
        gbc.setState(0x9a70, 0xf631, 0x88c0, 0x185d, 0xafe0, 0xbe96, 0x0, 0x1);
        gbc.writeMem(0x9a70, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf631);
        EXPECT(gbc.pc(), 0x9a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a70), 0xcb);
        EXPECT(gbc.readMem(0x9a71), 0x0);
        // CB 00 039C
        gbc.setState(0x8d71, 0x6dfd, 0xba0, 0x21e3, 0xc30a, 0x198d, 0x1, 0x0);
        gbc.writeMem(0x8d71, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6dfd);
        EXPECT(gbc.pc(), 0x8d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d71), 0xcb);
        EXPECT(gbc.readMem(0x8d72), 0x0);
        // CB 00 039D
        gbc.setState(0xc64c, 0x7963, 0xcdb0, 0xbcf0, 0x4dac, 0x5bc6, 0x1, 0x1);
        gbc.writeMem(0xc64c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7963);
        EXPECT(gbc.pc(), 0xc64e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc64c), 0xcb);
        EXPECT(gbc.readMem(0xc64d), 0x0);
        // CB 00 039E
        gbc.setState(0x9453, 0x34c8, 0x6060, 0x656a, 0x828d, 0x3d1a, 0x0, 0x1);
        gbc.writeMem(0x9453, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x34c8);
        EXPECT(gbc.pc(), 0x9455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9453), 0xcb);
        EXPECT(gbc.readMem(0x9454), 0x0);
        // CB 00 039F
        gbc.setState(0xc2fa, 0x4047, 0xa180, 0x723, 0x2dfc, 0x3e1b, 0x1, 0x1);
        gbc.writeMem(0xc2fa, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4047);
        EXPECT(gbc.pc(), 0xc2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2fa), 0xcb);
        EXPECT(gbc.readMem(0xc2fb), 0x0);
        // CB 00 03A0
        gbc.setState(0x5ea3, 0x6c2a, 0x1a80, 0xe587, 0xc7b3, 0xf40b, 0x0, 0x1);
        gbc.writeMem(0x5ea3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6c2a);
        EXPECT(gbc.pc(), 0x5ea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03A1
        gbc.setState(0xbfdf, 0x631c, 0x2c40, 0xefdd, 0xdb2d, 0xca4e, 0x0, 0x1);
        gbc.writeMem(0xbfdf, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x631c);
        EXPECT(gbc.pc(), 0xbfe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfdf), 0xcb);
        EXPECT(gbc.readMem(0xbfe0), 0x0);
        // CB 00 03A2
        gbc.setState(0x775d, 0xc868, 0x43e0, 0xa54c, 0x58f7, 0x9900, 0x1, 0x0);
        gbc.writeMem(0x775d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc868);
        EXPECT(gbc.pc(), 0x775f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03A3
        gbc.setState(0x7cd0, 0xeb08, 0x7fd0, 0xea09, 0xb0e8, 0x5888, 0x0, 0x1);
        gbc.writeMem(0x7cd0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xeb08);
        EXPECT(gbc.pc(), 0x7cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03A4
        gbc.setState(0x3256, 0xecc3, 0xf190, 0x6456, 0xa731, 0x1c3b, 0x1, 0x1);
        gbc.writeMem(0x3256, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xecc3);
        EXPECT(gbc.pc(), 0x3258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03A6
        gbc.setState(0x91e3, 0x5b0b, 0xa230, 0xa391, 0xaeea, 0x4f26, 0x0, 0x0);
        gbc.writeMem(0x91e3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5b0b);
        EXPECT(gbc.pc(), 0x91e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e3), 0xcb);
        EXPECT(gbc.readMem(0x91e4), 0x0);
        // CB 00 03A7
        gbc.setState(0x1a6b, 0x1f72, 0x10b0, 0x6b6f, 0x3423, 0x7cc5, 0x1, 0x0);
        gbc.writeMem(0x1a6b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1f72);
        EXPECT(gbc.pc(), 0x1a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03A8
        gbc.setState(0xbd78, 0x85c4, 0x58f0, 0x76ce, 0x4cd, 0xa1dc, 0x1, 0x0);
        gbc.writeMem(0xbd78, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x85c4);
        EXPECT(gbc.pc(), 0xbd7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd78), 0xcb);
        EXPECT(gbc.readMem(0xbd79), 0x0);
        // CB 00 03A9
        gbc.setState(0x1fa0, 0x7dcc, 0xef0, 0xe2ca, 0x1791, 0xd023, 0x1, 0x0);
        gbc.writeMem(0x1fa0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7dcc);
        EXPECT(gbc.pc(), 0x1fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03AA
        gbc.setState(0x611, 0x4df0, 0x4510, 0x1228, 0x1d8d, 0x159c, 0x0, 0x1);
        gbc.writeMem(0x611, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4df0);
        EXPECT(gbc.pc(), 0x613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03AB
        gbc.setState(0xa19a, 0xe462, 0xb690, 0x3bb3, 0xc4a8, 0xa90b, 0x0, 0x0);
        gbc.writeMem(0xa19a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe462);
        EXPECT(gbc.pc(), 0xa19c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19a), 0xcb);
        EXPECT(gbc.readMem(0xa19b), 0x0);
        // CB 00 03AC
        gbc.setState(0xb480, 0x8ee6, 0x1e60, 0x3989, 0xf825, 0xbfc0, 0x1, 0x1);
        gbc.writeMem(0xb480, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8ee6);
        EXPECT(gbc.pc(), 0xb482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb480), 0xcb);
        EXPECT(gbc.readMem(0xb481), 0x0);
        // CB 00 03AD
        gbc.setState(0xe711, 0x87fe, 0x9690, 0xfc1d, 0x8dd5, 0xb89d, 0x0, 0x0);
        gbc.writeMem(0xe711, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x87fe);
        EXPECT(gbc.pc(), 0xe713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe711), 0xcb);
        EXPECT(gbc.readMem(0xe712), 0x0);
        // CB 00 03AE
        gbc.setState(0xd34c, 0xad8b, 0x550, 0xe5d, 0xfadf, 0x2e97, 0x1, 0x0);
        gbc.writeMem(0xd34c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xad8b);
        EXPECT(gbc.pc(), 0xd34e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd34c), 0xcb);
        EXPECT(gbc.readMem(0xd34d), 0x0);
        // CB 00 03AF
        gbc.setState(0x29f9, 0xd616, 0xbc70, 0x94e5, 0x4aa0, 0xbdaf, 0x1, 0x1);
        gbc.writeMem(0x29f9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd616);
        EXPECT(gbc.pc(), 0x29fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03B0
        gbc.setState(0x1ea8, 0x98a7, 0xc140, 0x10eb, 0x3ad4, 0x59ad, 0x0, 0x0);
        gbc.writeMem(0x1ea8, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x98a7);
        EXPECT(gbc.pc(), 0x1eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03B1
        gbc.setState(0xc437, 0xe1e8, 0xbad0, 0x783, 0xfa41, 0x15a4, 0x0, 0x0);
        gbc.writeMem(0xc437, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe1e8);
        EXPECT(gbc.pc(), 0xc439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc437), 0xcb);
        EXPECT(gbc.readMem(0xc438), 0x0);
        // CB 00 03B2
        gbc.setState(0xdc41, 0x567, 0x6890, 0xca5e, 0x665c, 0x9954, 0x1, 0x1);
        gbc.writeMem(0xdc41, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x567);
        EXPECT(gbc.pc(), 0xdc43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc41), 0xcb);
        EXPECT(gbc.readMem(0xdc42), 0x0);
        // CB 00 03B3
        gbc.setState(0xb654, 0xfe79, 0xd220, 0x765a, 0xb953, 0xe5cc, 0x0, 0x0);
        gbc.writeMem(0xb654, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xfe79);
        EXPECT(gbc.pc(), 0xb656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb654), 0xcb);
        EXPECT(gbc.readMem(0xb655), 0x0);
        // CB 00 03B4
        gbc.setState(0x72df, 0x79b2, 0x7760, 0xb94, 0xa415, 0x6dc0, 0x0, 0x1);
        gbc.writeMem(0x72df, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x79b2);
        EXPECT(gbc.pc(), 0x72e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03B5
        gbc.setState(0x28ec, 0xa49f, 0xa440, 0x98d3, 0xe45a, 0x55a2, 0x1, 0x1);
        gbc.writeMem(0x28ec, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa49f);
        EXPECT(gbc.pc(), 0x28ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03B6
        gbc.setState(0x8b80, 0x1c1f, 0x6ec0, 0x34b7, 0x5eab, 0x2e4a, 0x0, 0x0);
        gbc.writeMem(0x8b80, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1c1f);
        EXPECT(gbc.pc(), 0x8b82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b80), 0xcb);
        EXPECT(gbc.readMem(0x8b81), 0x0);
        // CB 00 03B7
        gbc.setState(0x1fd9, 0x41d, 0x8db0, 0x30a3, 0xd67b, 0x9924, 0x1, 0x1);
        gbc.writeMem(0x1fd9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x41d);
        EXPECT(gbc.pc(), 0x1fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03B8
        gbc.setState(0xeff9, 0xe11b, 0xf200, 0x64b8, 0xf7df, 0x6007, 0x1, 0x0);
        gbc.writeMem(0xeff9, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe11b);
        EXPECT(gbc.pc(), 0xeffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff9), 0xcb);
        EXPECT(gbc.readMem(0xeffa), 0x0);
        // CB 00 03B9
        gbc.setState(0x2d4e, 0xe5a4, 0x2460, 0xbc08, 0xcd01, 0xecc5, 0x1, 0x0);
        gbc.writeMem(0x2d4e, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe5a4);
        EXPECT(gbc.pc(), 0x2d50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03BA
        gbc.setState(0x3e57, 0xa14b, 0x5b50, 0x3011, 0x4313, 0xe7e3, 0x1, 0x1);
        gbc.writeMem(0x3e57, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa14b);
        EXPECT(gbc.pc(), 0x3e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03BB
        gbc.setState(0x6599, 0xc41b, 0x5140, 0x658f, 0x74bc, 0xe3c0, 0x1, 0x0);
        gbc.writeMem(0x6599, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc41b);
        EXPECT(gbc.pc(), 0x659b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03BC
        gbc.setState(0x29a0, 0x82df, 0x2c10, 0x140d, 0x31f9, 0x22ba, 0x0, 0x0);
        gbc.writeMem(0x29a0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x82df);
        EXPECT(gbc.pc(), 0x29a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03BD
        gbc.setState(0xe9ca, 0x1ac5, 0x92d0, 0x2847, 0x418e, 0x1972, 0x0, 0x1);
        gbc.writeMem(0xe9ca, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1ac5);
        EXPECT(gbc.pc(), 0xe9cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ca), 0xcb);
        EXPECT(gbc.readMem(0xe9cb), 0x0);
        // CB 00 03BE
        gbc.setState(0x6864, 0xafca, 0xd300, 0x291c, 0xca7d, 0x47de, 0x1, 0x1);
        gbc.writeMem(0x6864, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xafca);
        EXPECT(gbc.pc(), 0x6866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03C0
        gbc.setState(0xd979, 0xe6af, 0xfa40, 0xa40, 0x909d, 0x4c44, 0x1, 0x0);
        gbc.writeMem(0xd979, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe6af);
        EXPECT(gbc.pc(), 0xd97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd979), 0xcb);
        EXPECT(gbc.readMem(0xd97a), 0x0);
        // CB 00 03C1
        gbc.setState(0x8ad7, 0x1032, 0x6950, 0x86ff, 0x8458, 0xc00b, 0x1, 0x1);
        gbc.writeMem(0x8ad7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1032);
        EXPECT(gbc.pc(), 0x8ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad7), 0xcb);
        EXPECT(gbc.readMem(0x8ad8), 0x0);
        // CB 00 03C2
        gbc.setState(0x98f4, 0xad3d, 0x32b0, 0x9ab4, 0x1a6c, 0x100, 0x1, 0x0);
        gbc.writeMem(0x98f4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xad3d);
        EXPECT(gbc.pc(), 0x98f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f4), 0xcb);
        EXPECT(gbc.readMem(0x98f5), 0x0);
        // CB 00 03C3
        gbc.setState(0xb8db, 0xa41a, 0x7010, 0x35eb, 0x2399, 0x52f, 0x0, 0x0);
        gbc.writeMem(0xb8db, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa41a);
        EXPECT(gbc.pc(), 0xb8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8db), 0xcb);
        EXPECT(gbc.readMem(0xb8dc), 0x0);
        // CB 00 03C4
        gbc.setState(0x3ef7, 0x7cce, 0x3810, 0x2b07, 0x11ab, 0xa930, 0x1, 0x0);
        gbc.writeMem(0x3ef7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7cce);
        EXPECT(gbc.pc(), 0x3ef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03C5
        gbc.setState(0xe44a, 0x4ffe, 0x1d50, 0xbd3, 0x1b77, 0x347, 0x1, 0x0);
        gbc.writeMem(0xe44a, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4ffe);
        EXPECT(gbc.pc(), 0xe44c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44a), 0xcb);
        EXPECT(gbc.readMem(0xe44b), 0x0);
        // CB 00 03C6
        gbc.setState(0x6ec6, 0x6c77, 0x2a30, 0x447d, 0x89cf, 0x3e87, 0x0, 0x1);
        gbc.writeMem(0x6ec6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6c77);
        EXPECT(gbc.pc(), 0x6ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03C7
        gbc.setState(0xdda1, 0xa36b, 0x8e90, 0x9c14, 0xe092, 0xa3aa, 0x0, 0x1);
        gbc.writeMem(0xdda1, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa36b);
        EXPECT(gbc.pc(), 0xdda3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda1), 0xcb);
        EXPECT(gbc.readMem(0xdda2), 0x0);
        // CB 00 03C8
        gbc.setState(0xdb26, 0xdb14, 0xe2d0, 0x9e6b, 0x4a63, 0x5b84, 0x1, 0x0);
        gbc.writeMem(0xdb26, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xdb14);
        EXPECT(gbc.pc(), 0xdb28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb26), 0xcb);
        EXPECT(gbc.readMem(0xdb27), 0x0);
        // CB 00 03C9
        gbc.setState(0x2cc2, 0xa3bb, 0xa9e0, 0x4cab, 0x3b9e, 0x5e65, 0x1, 0x0);
        gbc.writeMem(0x2cc2, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa3bb);
        EXPECT(gbc.pc(), 0x2cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03CA
        gbc.setState(0x1aac, 0x934c, 0x3aa0, 0xc4d6, 0xd010, 0xb05d, 0x0, 0x1);
        gbc.writeMem(0x1aac, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x934c);
        EXPECT(gbc.pc(), 0x1aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03CB
        gbc.setState(0xac6c, 0x3608, 0x5a40, 0x8e53, 0x3bfc, 0xdb27, 0x0, 0x0);
        gbc.writeMem(0xac6c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3608);
        EXPECT(gbc.pc(), 0xac6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6c), 0xcb);
        EXPECT(gbc.readMem(0xac6d), 0x0);
        // CB 00 03CC
        gbc.setState(0x3234, 0xa351, 0x8c70, 0xec90, 0x7022, 0xcb45, 0x1, 0x0);
        gbc.writeMem(0x3234, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa351);
        EXPECT(gbc.pc(), 0x3236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03CD
        gbc.setState(0x96e3, 0x4463, 0x6c80, 0x13, 0xb20, 0xee36, 0x1, 0x1);
        gbc.writeMem(0x96e3, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4463);
        EXPECT(gbc.pc(), 0x96e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e3), 0xcb);
        EXPECT(gbc.readMem(0x96e4), 0x0);
        // CB 00 03CE
        gbc.setState(0xa452, 0x855b, 0x5970, 0x200c, 0x488e, 0xd8d3, 0x0, 0x1);
        gbc.writeMem(0xa452, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x855b);
        EXPECT(gbc.pc(), 0xa454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa452), 0xcb);
        EXPECT(gbc.readMem(0xa453), 0x0);
        // CB 00 03CF
        gbc.setState(0x35b7, 0x8edd, 0xee20, 0xd827, 0xb08b, 0x20cf, 0x1, 0x0);
        gbc.writeMem(0x35b7, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8edd);
        EXPECT(gbc.pc(), 0x35b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03D0
        gbc.setState(0x7cdd, 0x2fdd, 0x37d0, 0x71c0, 0xd5d1, 0xb8e1, 0x1, 0x1);
        gbc.writeMem(0x7cdd, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2fdd);
        EXPECT(gbc.pc(), 0x7cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03D1
        gbc.setState(0x439f, 0xd545, 0x5930, 0x5df6, 0xeedc, 0x4f4f, 0x1, 0x0);
        gbc.writeMem(0x439f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd545);
        EXPECT(gbc.pc(), 0x43a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03D2
        gbc.setState(0x1d85, 0x7fc2, 0xb2b0, 0xa553, 0xe48c, 0x84de, 0x0, 0x1);
        gbc.writeMem(0x1d85, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7fc2);
        EXPECT(gbc.pc(), 0x1d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03D3
        gbc.setState(0x4138, 0x9b99, 0x61f0, 0x1996, 0x3823, 0x9331, 0x0, 0x1);
        gbc.writeMem(0x4138, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9b99);
        EXPECT(gbc.pc(), 0x413a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03D4
        gbc.setState(0x7b27, 0xb0e, 0x3a00, 0xc8a2, 0x292e, 0xfe82, 0x0, 0x1);
        gbc.writeMem(0x7b27, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb0e);
        EXPECT(gbc.pc(), 0x7b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03D5
        gbc.setState(0x638, 0x89c7, 0xf170, 0x9f32, 0xdbb, 0x7913, 0x1, 0x1);
        gbc.writeMem(0x638, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x89c7);
        EXPECT(gbc.pc(), 0x63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03D6
        gbc.setState(0x3bef, 0xd06f, 0x5970, 0x7fc7, 0x34fd, 0x670e, 0x0, 0x0);
        gbc.writeMem(0x3bef, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd06f);
        EXPECT(gbc.pc(), 0x3bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03D7
        gbc.setState(0xd57b, 0xa68b, 0xbdd0, 0xa47b, 0xf054, 0x948d, 0x1, 0x1);
        gbc.writeMem(0xd57b, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa68b);
        EXPECT(gbc.pc(), 0xd57d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57b), 0xcb);
        EXPECT(gbc.readMem(0xd57c), 0x0);
        // CB 00 03D8
        gbc.setState(0x420d, 0x384, 0xe450, 0x384e, 0xecd, 0x83ac, 0x1, 0x0);
        gbc.writeMem(0x420d, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x384);
        EXPECT(gbc.pc(), 0x420f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03D9
        gbc.setState(0xd655, 0x70cb, 0xdf40, 0xdf26, 0x9079, 0x72d8, 0x1, 0x0);
        gbc.writeMem(0xd655, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x70cb);
        EXPECT(gbc.pc(), 0xd657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd655), 0xcb);
        EXPECT(gbc.readMem(0xd656), 0x0);
        // CB 00 03DA
        gbc.setState(0x3d49, 0x94e9, 0xb680, 0xbb4a, 0xc51f, 0x3c41, 0x1, 0x1);
        gbc.writeMem(0x3d49, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x94e9);
        EXPECT(gbc.pc(), 0x3d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03DB
        gbc.setState(0xdbd0, 0x5c7d, 0xe560, 0x4e63, 0xe415, 0x8c1e, 0x0, 0x0);
        gbc.writeMem(0xdbd0, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5c7d);
        EXPECT(gbc.pc(), 0xdbd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd0), 0xcb);
        EXPECT(gbc.readMem(0xdbd1), 0x0);
        // CB 00 03DC
        gbc.setState(0x9608, 0xccbd, 0xa5a0, 0x1904, 0x5a10, 0x74a9, 0x1, 0x1);
        gbc.writeMem(0x9608, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xccbd);
        EXPECT(gbc.pc(), 0x960a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9608), 0xcb);
        EXPECT(gbc.readMem(0x9609), 0x0);
        // CB 00 03DD
        gbc.setState(0x33c, 0x7ae1, 0x6490, 0xaefb, 0x8d77, 0x61a8, 0x0, 0x0);
        gbc.writeMem(0x33c, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7ae1);
        EXPECT(gbc.pc(), 0x33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03DE
        gbc.setState(0xd5d6, 0x83c1, 0xd4c0, 0x52ae, 0x9a76, 0xf51a, 0x1, 0x1);
        gbc.writeMem(0xd5d6, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x83c1);
        EXPECT(gbc.pc(), 0xd5d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5d6), 0xcb);
        EXPECT(gbc.readMem(0xd5d7), 0x0);
        // CB 00 03DF
        gbc.setState(0x186, 0x2d9d, 0x6ef0, 0x3a70, 0xc1f5, 0x2b07, 0x1, 0x0);
        gbc.writeMem(0x186, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2d9d);
        EXPECT(gbc.pc(), 0x188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03E0
        gbc.setState(0xed97, 0xd4ce, 0xf7a0, 0xc105, 0xa172, 0xe2c4, 0x1, 0x1);
        gbc.writeMem(0xed97, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd4ce);
        EXPECT(gbc.pc(), 0xed99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed97), 0xcb);
        EXPECT(gbc.readMem(0xed98), 0x0);
        // CB 00 03E1
        gbc.setState(0xe012, 0xe7c8, 0x29a0, 0x2e21, 0xe7cb, 0x89d4, 0x1, 0x1);
        gbc.writeMem(0xe012, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe7c8);
        EXPECT(gbc.pc(), 0xe014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe012), 0xcb);
        EXPECT(gbc.readMem(0xe013), 0x0);
        // CB 00 03E2
        gbc.setState(0x6e6f, 0xa86f, 0x12e0, 0xebf8, 0x9a27, 0xc7de, 0x0, 0x0);
        gbc.writeMem(0x6e6f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa86f);
        EXPECT(gbc.pc(), 0x6e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 00 03E3
        gbc.setState(0xa17f, 0x60d1, 0xf670, 0x1baa, 0x7f6b, 0xbf77, 0x1, 0x1);
        gbc.writeMem(0xa17f, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x60d1);
        EXPECT(gbc.pc(), 0xa181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17f), 0xcb);
        EXPECT(gbc.readMem(0xa180), 0x0);
        // CB 00 03E4
        gbc.setState(0x6ed4, 0xf7f4, 0x2760, 0x1506, 0x97b5, 0xbfb6, 0x0, 0x1);
        gbc.writeMem(0x6ed4, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf7f4);
        EXPECT(gbc.pc(), 0x6ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 00 03E5
        gbc.setState(0xadaa, 0xb2be, 0xa70, 0x628e, 0x4aed, 0xbca6, 0x0, 0x0);
        gbc.writeMem(0xadaa, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb2be);
        EXPECT(gbc.pc(), 0xadac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadaa), 0xcb);
        EXPECT(gbc.readMem(0xadab), 0x0);
        // CB 00 03E6
        gbc.setState(0x86ae, 0x6e32, 0xfda0, 0xf44e, 0x7789, 0x5e5e, 0x0, 0x1);
        gbc.writeMem(0x86ae, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6e32);
        EXPECT(gbc.pc(), 0x86b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ae), 0xcb);
        EXPECT(gbc.readMem(0x86af), 0x0);
        // CB 00 03E7
        gbc.setState(0x9dfe, 0x79ff, 0x4730, 0x2440, 0x4287, 0xb026, 0x1, 0x0);
        gbc.writeMem(0x9dfe, { 0xcb, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x79ff);
        EXPECT(gbc.pc(), 0x9e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfe), 0xcb);
        EXPECT(gbc.readMem(0x9dff), 0x0);
    }
