    TEST(gbcemu, opcode_56) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 56 0000
        gbc.setState(0x188d, 0x299d, 0xc460, 0xb805, 0x36e1, 0x97e1, 0x1, 0x0);
        gbc.writeMem(0x188d, { 0x56 });
        gbc.writeMem(0x97e1, { 0xc5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x299d, gbc.sp());
        EXPECT(0x188e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x97e1));
        // 56 0002
        gbc.setState(0xa4ec, 0x99c0, 0xe290, 0x6e8e, 0x938d, 0x3a4c, 0x1, 0x1);
        gbc.writeMem(0x3a4c, { 0x1a });
        gbc.writeMem(0xa4ec, { 0x56 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x99c0, gbc.sp());
        EXPECT(0xa4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa4ec));
        // 56 0003
        gbc.setState(0x9570, 0xab5c, 0xe4b0, 0x2df5, 0x4062, 0xc56e, 0x1, 0x0);
        gbc.writeMem(0x9570, { 0x56 });
        gbc.writeMem(0xc56e, { 0xd1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xab5c, gbc.sp());
        EXPECT(0x9571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9570));
        EXPECT(0xd1, gbc.readMem(0xc56e));
        // 56 0004
        gbc.setState(0xd775, 0xbc27, 0x120, 0x1ed6, 0x898f, 0x6fcf, 0x1, 0x1);
        gbc.writeMem(0x6fcf, { 0x2f });
        gbc.writeMem(0xd775, { 0x56 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbc27, gbc.sp());
        EXPECT(0xd776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd775));
        // 56 0005
        gbc.setState(0xc9d5, 0x166d, 0x36a0, 0xf701, 0x6d05, 0x5e4e, 0x0, 0x1);
        gbc.writeMem(0x5e4e, { 0x0 });
        gbc.writeMem(0xc9d5, { 0x56 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x166d, gbc.sp());
        EXPECT(0xc9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc9d5));
        // 56 0006
        gbc.setState(0x8a43, 0xf25e, 0xe870, 0x65c2, 0x10fe, 0x46bc, 0x1, 0x0);
        gbc.writeMem(0x46bc, { 0xa8 });
        gbc.writeMem(0x8a43, { 0x56 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf25e, gbc.sp());
        EXPECT(0x8a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8a43));
        // 56 0007
        gbc.setState(0x11d8, 0xbf3d, 0xd9f0, 0xcc05, 0x7a6, 0x1c46, 0x1, 0x0);
        gbc.writeMem(0x11d8, { 0x56 });
        gbc.writeMem(0x1c46, { 0x11 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbf3d, gbc.sp());
        EXPECT(0x11d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0008
        gbc.setState(0xa95b, 0x813e, 0xb650, 0x5302, 0x2df, 0x4ec, 0x1, 0x1);
        gbc.writeMem(0x4ec, { 0x51 });
        gbc.writeMem(0xa95b, { 0x56 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x813e, gbc.sp());
        EXPECT(0xa95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa95b));
        // 56 0009
        gbc.setState(0x1abf, 0xc08d, 0x32e0, 0xa6a7, 0x686c, 0xd948, 0x0, 0x0);
        gbc.writeMem(0x1abf, { 0x56 });
        gbc.writeMem(0xd948, { 0xb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc08d, gbc.sp());
        EXPECT(0x1ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd948));
        // 56 000B
        gbc.setState(0x47b3, 0xb6ef, 0x8750, 0x2b9a, 0xbe09, 0xed16, 0x1, 0x0);
        gbc.writeMem(0x47b3, { 0x56 });
        gbc.writeMem(0xed16, { 0x54 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb6ef, gbc.sp());
        EXPECT(0x47b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xed16));
        // 56 000C
        gbc.setState(0x5296, 0x9508, 0x46a0, 0xfd86, 0x19a5, 0x5aa5, 0x1, 0x1);
        gbc.writeMem(0x5296, { 0x56 });
        gbc.writeMem(0x5aa5, { 0x77 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9508, gbc.sp());
        EXPECT(0x5297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 000D
        gbc.setState(0x30ee, 0xd2c6, 0xeaa0, 0x3e9c, 0xb5e0, 0x47ca, 0x0, 0x0);
        gbc.writeMem(0x30ee, { 0x56 });
        gbc.writeMem(0x47ca, { 0x6b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd2c6, gbc.sp());
        EXPECT(0x30ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 000E
        gbc.setState(0xc6a7, 0xa957, 0xead0, 0x3b9, 0x4cd6, 0x7426, 0x0, 0x0);
        gbc.writeMem(0x7426, { 0x5f });
        gbc.writeMem(0xc6a7, { 0x56 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa957, gbc.sp());
        EXPECT(0xc6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc6a7));
        // 56 000F
        gbc.setState(0x6051, 0x8ff7, 0x15c0, 0x92df, 0x3178, 0xe580, 0x1, 0x1);
        gbc.writeMem(0x6051, { 0x56 });
        gbc.writeMem(0xe580, { 0x8c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8ff7, gbc.sp());
        EXPECT(0x6052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe580));
        // 56 0010
        gbc.setState(0x1216, 0x2ec6, 0x160, 0xa505, 0xdc03, 0xf69d, 0x1, 0x0);
        gbc.writeMem(0x1216, { 0x56 });
        gbc.writeMem(0xf69d, { 0x42 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0x1217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xf69d));
        // 56 0011
        gbc.setState(0xaf39, 0x32f5, 0xd960, 0xc181, 0xf547, 0xf1c8, 0x0, 0x0);
        gbc.writeMem(0xaf39, { 0x56 });
        gbc.writeMem(0xf1c8, { 0x28 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x32f5, gbc.sp());
        EXPECT(0xaf3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xaf39));
        EXPECT(0x28, gbc.readMem(0xf1c8));
        // 56 0012
        gbc.setState(0x331e, 0x2da1, 0xdf0, 0xb158, 0x1da3, 0x28b5, 0x1, 0x0);
        gbc.writeMem(0x28b5, { 0x76 });
        gbc.writeMem(0x331e, { 0x56 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2da1, gbc.sp());
        EXPECT(0x331f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0013
        gbc.setState(0x7b62, 0x73d3, 0x4ae0, 0x60a6, 0xac03, 0x2ea4, 0x0, 0x0);
        gbc.writeMem(0x2ea4, { 0x21 });
        gbc.writeMem(0x7b62, { 0x56 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x73d3, gbc.sp());
        EXPECT(0x7b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0014
        gbc.setState(0x182b, 0xcea8, 0xe210, 0x11d4, 0x769e, 0x8bc9, 0x0, 0x1);
        gbc.writeMem(0x182b, { 0x56 });
        gbc.writeMem(0x8bc9, { 0xc6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcea8, gbc.sp());
        EXPECT(0x182c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8bc9));
        // 56 0015
        gbc.setState(0x2041, 0x2f4c, 0xd540, 0xe0fb, 0x8307, 0x8a0c, 0x1, 0x0);
        gbc.writeMem(0x2041, { 0x56 });
        gbc.writeMem(0x8a0c, { 0xab });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2f4c, gbc.sp());
        EXPECT(0x2042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x8a0c));
        // 56 0016
        gbc.setState(0x9e8d, 0xd9, 0x9d0, 0x3d94, 0xa41d, 0xe6d1, 0x1, 0x1);
        gbc.writeMem(0x9e8d, { 0x56 });
        gbc.writeMem(0xe6d1, { 0xd5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd9, gbc.sp());
        EXPECT(0x9e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9e8d));
        EXPECT(0xd5, gbc.readMem(0xe6d1));
        // 56 0017
        gbc.setState(0x9d3d, 0x8708, 0xeaa0, 0x9d45, 0xb93e, 0x4681, 0x0, 0x1);
        gbc.writeMem(0x4681, { 0xe2 });
        gbc.writeMem(0x9d3d, { 0x56 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8708, gbc.sp());
        EXPECT(0x9d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9d3d));
        // 56 0019
        gbc.setState(0xa55, 0x4727, 0x96f0, 0xe38f, 0xf960, 0x1c03, 0x0, 0x0);
        gbc.writeMem(0xa55, { 0x56 });
        gbc.writeMem(0x1c03, { 0xde });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4727, gbc.sp());
        EXPECT(0xa56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 001A
        gbc.setState(0x866b, 0xd8f9, 0x80d0, 0x40a1, 0x36aa, 0x9dfd, 0x1, 0x1);
        gbc.writeMem(0x866b, { 0x56 });
        gbc.writeMem(0x9dfd, { 0xd5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd8f9, gbc.sp());
        EXPECT(0x866c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x866b));
        EXPECT(0xd5, gbc.readMem(0x9dfd));
        // 56 001B
        gbc.setState(0x82f6, 0xd038, 0xbb30, 0xfb91, 0xe321, 0x2e6, 0x0, 0x0);
        gbc.writeMem(0x2e6, { 0x4b });
        gbc.writeMem(0x82f6, { 0x56 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd038, gbc.sp());
        EXPECT(0x82f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x82f6));
        // 56 001C
        gbc.setState(0x5188, 0x902, 0xec40, 0xbc11, 0xaf30, 0x6738, 0x1, 0x1);
        gbc.writeMem(0x5188, { 0x56 });
        gbc.writeMem(0x6738, { 0x41 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x902, gbc.sp());
        EXPECT(0x5189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 001E
        gbc.setState(0x3698, 0xc1f3, 0x1e90, 0x6c40, 0x7331, 0xdcb0, 0x0, 0x1);
        gbc.writeMem(0x3698, { 0x56 });
        gbc.writeMem(0xdcb0, { 0xe2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc1f3, gbc.sp());
        EXPECT(0x3699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdcb0));
        // 56 001F
        gbc.setState(0xb07b, 0x7e87, 0x8d00, 0x21be, 0xa82e, 0xa745, 0x1, 0x1);
        gbc.writeMem(0xa745, { 0x53 });
        gbc.writeMem(0xb07b, { 0x56 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7e87, gbc.sp());
        EXPECT(0xb07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa745));
        EXPECT(0x56, gbc.readMem(0xb07b));
        // 56 0020
        gbc.setState(0x6191, 0x647d, 0xada0, 0x183d, 0xe972, 0xa010, 0x0, 0x0);
        gbc.writeMem(0x6191, { 0x56 });
        gbc.writeMem(0xa010, { 0x68 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x647d, gbc.sp());
        EXPECT(0x6192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa010));
        // 56 0021
        gbc.setState(0xb25e, 0x5997, 0x7d40, 0x426, 0x6679, 0x1542, 0x0, 0x0);
        gbc.writeMem(0x1542, { 0x4a });
        gbc.writeMem(0xb25e, { 0x56 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5997, gbc.sp());
        EXPECT(0xb25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb25e));
        // 56 0022
        gbc.setState(0x8fab, 0xd925, 0x8140, 0xf37d, 0x66b2, 0x94d9, 0x1, 0x1);
        gbc.writeMem(0x8fab, { 0x56 });
        gbc.writeMem(0x94d9, { 0x16 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd925, gbc.sp());
        EXPECT(0x8fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8fab));
        EXPECT(0x16, gbc.readMem(0x94d9));
        // 56 0023
        gbc.setState(0x165e, 0x5b1b, 0x6580, 0x7a35, 0x6ba8, 0xbfa7, 0x0, 0x0);
        gbc.writeMem(0x165e, { 0x56 });
        gbc.writeMem(0xbfa7, { 0xc3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0x165f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbfa7));
        // 56 0024
        gbc.setState(0x1b33, 0xdd7, 0x130, 0x8d1, 0xe3eb, 0xcf91, 0x0, 0x1);
        gbc.writeMem(0x1b33, { 0x56 });
        gbc.writeMem(0xcf91, { 0x13 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdd7, gbc.sp());
        EXPECT(0x1b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcf91));
        // 56 0025
        gbc.setState(0x3381, 0xa199, 0xada0, 0xb16f, 0x2da6, 0x57d0, 0x0, 0x0);
        gbc.writeMem(0x3381, { 0x56 });
        gbc.writeMem(0x57d0, { 0x31 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa199, gbc.sp());
        EXPECT(0x3382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0026
        gbc.setState(0x376d, 0xa0ed, 0x3560, 0x5578, 0x9d75, 0xc0c, 0x1, 0x0);
        gbc.writeMem(0xc0c, { 0x2b });
        gbc.writeMem(0x376d, { 0x56 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa0ed, gbc.sp());
        EXPECT(0x376e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0027
        gbc.setState(0x78c7, 0xecd6, 0xfb10, 0x7abb, 0x24a2, 0xc007, 0x0, 0x0);
        gbc.writeMem(0x78c7, { 0x56 });
        gbc.writeMem(0xc007, { 0x9e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xecd6, gbc.sp());
        EXPECT(0x78c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc007));
        // 56 0028
        gbc.setState(0xb518, 0x6227, 0x7020, 0x4196, 0x5d31, 0xfc26, 0x1, 0x1);
        gbc.writeMem(0xb518, { 0x56 });
        gbc.writeMem(0xfc26, { 0xf6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6227, gbc.sp());
        EXPECT(0xb519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb518));
        EXPECT(0xf6, gbc.readMem(0xfc26));
        // 56 0029
        gbc.setState(0xed38, 0x306f, 0x31e0, 0x2322, 0x6b24, 0xd400, 0x0, 0x1);
        gbc.writeMem(0xd400, { 0xd2 });
        gbc.writeMem(0xed38, { 0x56 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x306f, gbc.sp());
        EXPECT(0xed39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd400));
        EXPECT(0x56, gbc.readMem(0xed38));
        // 56 002A
        gbc.setState(0xa1b6, 0x5926, 0xefe0, 0x5e5f, 0x27fa, 0xd61b, 0x0, 0x1);
        gbc.writeMem(0xa1b6, { 0x56 });
        gbc.writeMem(0xd61b, { 0x2a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5926, gbc.sp());
        EXPECT(0xa1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa1b6));
        EXPECT(0x2a, gbc.readMem(0xd61b));
        // 56 002B
        gbc.setState(0x8337, 0x572b, 0xe680, 0xcee2, 0xfbf5, 0xaa3f, 0x0, 0x0);
        gbc.writeMem(0x8337, { 0x56 });
        gbc.writeMem(0xaa3f, { 0x76 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x572b, gbc.sp());
        EXPECT(0x8338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8337));
        EXPECT(0x76, gbc.readMem(0xaa3f));
        // 56 002C
        gbc.setState(0x54d8, 0x97a9, 0x5280, 0x7d59, 0xf313, 0xb23a, 0x0, 0x0);
        gbc.writeMem(0x54d8, { 0x56 });
        gbc.writeMem(0xb23a, { 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x97a9, gbc.sp());
        EXPECT(0x54d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb23a));
        // 56 002D
        gbc.setState(0x99a0, 0x233, 0x27d0, 0xea36, 0xc3cd, 0xa8c6, 0x1, 0x0);
        gbc.writeMem(0x99a0, { 0x56 });
        gbc.writeMem(0xa8c6, { 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x233, gbc.sp());
        EXPECT(0x99a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x99a0));
        EXPECT(0xb9, gbc.readMem(0xa8c6));
        // 56 002E
        gbc.setState(0xa14e, 0x6817, 0x3340, 0x48a9, 0x29fe, 0xf862, 0x0, 0x1);
        gbc.writeMem(0xa14e, { 0x56 });
        gbc.writeMem(0xf862, { 0x17 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6817, gbc.sp());
        EXPECT(0xa14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa14e));
        EXPECT(0x17, gbc.readMem(0xf862));
        // 56 002F
        gbc.setState(0xa28f, 0xe52e, 0xd830, 0x71da, 0xb417, 0xc89c, 0x1, 0x1);
        gbc.writeMem(0xa28f, { 0x56 });
        gbc.writeMem(0xc89c, { 0xe4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe52e, gbc.sp());
        EXPECT(0xa290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa28f));
        EXPECT(0xe4, gbc.readMem(0xc89c));
        // 56 0030
        gbc.setState(0x438a, 0x9062, 0xc780, 0x23c6, 0x95da, 0x5531, 0x0, 0x0);
        gbc.writeMem(0x438a, { 0x56 });
        gbc.writeMem(0x5531, { 0x3d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9062, gbc.sp());
        EXPECT(0x438b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0031
        gbc.setState(0xc03e, 0xe19c, 0xec70, 0x24db, 0xc750, 0xc8df, 0x1, 0x0);
        gbc.writeMem(0xc03e, { 0x56 });
        gbc.writeMem(0xc8df, { 0x1c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe19c, gbc.sp());
        EXPECT(0xc03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc03e));
        EXPECT(0x1c, gbc.readMem(0xc8df));
        // 56 0032
        gbc.setState(0x8ad9, 0x15e, 0x2020, 0x3ce0, 0x3c6e, 0xdeac, 0x0, 0x0);
        gbc.writeMem(0x8ad9, { 0x56 });
        gbc.writeMem(0xdeac, { 0x72 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x15e, gbc.sp());
        EXPECT(0x8ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8ad9));
        EXPECT(0x72, gbc.readMem(0xdeac));
        // 56 0033
        gbc.setState(0x94d8, 0x2c51, 0xc30, 0x6e59, 0xccdb, 0x3368, 0x1, 0x0);
        gbc.writeMem(0x3368, { 0x91 });
        gbc.writeMem(0x94d8, { 0x56 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2c51, gbc.sp());
        EXPECT(0x94d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x94d8));
        // 56 0034
        gbc.setState(0x59c2, 0x54a, 0xb270, 0x498, 0xd53d, 0x207c, 0x0, 0x0);
        gbc.writeMem(0x207c, { 0x52 });
        gbc.writeMem(0x59c2, { 0x56 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x54a, gbc.sp());
        EXPECT(0x59c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0035
        gbc.setState(0x9b9e, 0x2c6c, 0x8640, 0x3589, 0xb934, 0xa505, 0x1, 0x0);
        gbc.writeMem(0x9b9e, { 0x56 });
        gbc.writeMem(0xa505, { 0x10 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2c6c, gbc.sp());
        EXPECT(0x9b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9b9e));
        EXPECT(0x10, gbc.readMem(0xa505));
        // 56 0036
        gbc.setState(0x1263, 0x6f2a, 0x5fd0, 0x96e, 0xe8a9, 0xf56b, 0x0, 0x0);
        gbc.writeMem(0x1263, { 0x56 });
        gbc.writeMem(0xf56b, { 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6f2a, gbc.sp());
        EXPECT(0x1264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xf56b));
        // 56 0037
        gbc.setState(0xb07c, 0x9d99, 0x6080, 0x7cb9, 0x7466, 0x101, 0x1, 0x1);
        gbc.writeMem(0x101, { 0xaa });
        gbc.writeMem(0xb07c, { 0x56 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9d99, gbc.sp());
        EXPECT(0xb07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb07c));
        // 56 0038
        gbc.setState(0xdcdf, 0xe96a, 0x7c90, 0x2da4, 0xcc4d, 0x2f88, 0x1, 0x0);
        gbc.writeMem(0x2f88, { 0x58 });
        gbc.writeMem(0xdcdf, { 0x56 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe96a, gbc.sp());
        EXPECT(0xdce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdcdf));
        // 56 0039
        gbc.setState(0x37c0, 0x224, 0x6590, 0xa6b1, 0x7830, 0x74c8, 0x0, 0x0);
        gbc.writeMem(0x37c0, { 0x56 });
        gbc.writeMem(0x74c8, { 0x5b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x224, gbc.sp());
        EXPECT(0x37c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 003A
        gbc.setState(0x92b9, 0xdefc, 0xb300, 0x55e0, 0x20ec, 0xfcf2, 0x0, 0x1);
        gbc.writeMem(0x92b9, { 0x56 });
        gbc.writeMem(0xfcf2, { 0x2d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdefc, gbc.sp());
        EXPECT(0x92ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x92b9));
        EXPECT(0x2d, gbc.readMem(0xfcf2));
        // 56 003B
        gbc.setState(0x65e0, 0x2ae2, 0x8170, 0x44f1, 0x6a31, 0x75dd, 0x1, 0x1);
        gbc.writeMem(0x65e0, { 0x56 });
        gbc.writeMem(0x75dd, { 0x44 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2ae2, gbc.sp());
        EXPECT(0x65e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 003C
        gbc.setState(0x9aa1, 0xb186, 0x6eb0, 0x3098, 0x9f84, 0xf08, 0x0, 0x0);
        gbc.writeMem(0xf08, { 0xf3 });
        gbc.writeMem(0x9aa1, { 0x56 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb186, gbc.sp());
        EXPECT(0x9aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9aa1));
        // 56 003D
        gbc.setState(0x27e2, 0xdc58, 0x2030, 0x9069, 0x2bf9, 0xb4, 0x1, 0x0);
        gbc.writeMem(0xb4, { 0x22 });
        gbc.writeMem(0x27e2, { 0x56 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdc58, gbc.sp());
        EXPECT(0x27e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 003E
        gbc.setState(0x3405, 0xe58f, 0xd490, 0xea32, 0xdb71, 0xbc8d, 0x0, 0x1);
        gbc.writeMem(0x3405, { 0x56 });
        gbc.writeMem(0xbc8d, { 0x73 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe58f, gbc.sp());
        EXPECT(0x3406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xbc8d));
        // 56 003F
        gbc.setState(0x6eb1, 0x5b66, 0xdbd0, 0x5fb3, 0xbd34, 0x7953, 0x0, 0x0);
        gbc.writeMem(0x6eb1, { 0x56 });
        gbc.writeMem(0x7953, { 0x90 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5b66, gbc.sp());
        EXPECT(0x6eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0040
        gbc.setState(0xc663, 0x56d2, 0xc200, 0x478, 0x5fee, 0x31ac, 0x0, 0x1);
        gbc.writeMem(0x31ac, { 0xe1 });
        gbc.writeMem(0xc663, { 0x56 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x56d2, gbc.sp());
        EXPECT(0xc664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc663));
        // 56 0041
        gbc.setState(0x623a, 0xce82, 0x8db0, 0x2172, 0x9c9b, 0x7e3b, 0x0, 0x0);
        gbc.writeMem(0x623a, { 0x56 });
        gbc.writeMem(0x7e3b, { 0xba });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xce82, gbc.sp());
        EXPECT(0x623b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0042
        gbc.setState(0x9020, 0xf29d, 0xf590, 0xf59d, 0xdcc0, 0xe0fc, 0x1, 0x1);
        gbc.writeMem(0x9020, { 0x56 });
        gbc.writeMem(0xe0fc, { 0xd3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf29d, gbc.sp());
        EXPECT(0x9021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9020));
        EXPECT(0xd3, gbc.readMem(0xe0fc));
        // 56 0043
        gbc.setState(0x6d6b, 0xacb2, 0x8a40, 0x6c36, 0x3844, 0x655b, 0x1, 0x0);
        gbc.writeMem(0x655b, { 0x51 });
        gbc.writeMem(0x6d6b, { 0x56 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xacb2, gbc.sp());
        EXPECT(0x6d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0044
        gbc.setState(0xb809, 0x74d7, 0xfaf0, 0x4771, 0xb54f, 0xff21, 0x1, 0x0);
        gbc.writeMem(0xb809, { 0x56 });
        gbc.writeMem(0xff21, { 0xd5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x74d7, gbc.sp());
        EXPECT(0xb80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb809));
        EXPECT(0xd5, gbc.readMem(0xff21));
        // 56 0045
        gbc.setState(0xa0cc, 0x3590, 0x1e30, 0x7276, 0xd0de, 0x62d9, 0x0, 0x1);
        gbc.writeMem(0x62d9, { 0x9c });
        gbc.writeMem(0xa0cc, { 0x56 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3590, gbc.sp());
        EXPECT(0xa0cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa0cc));
        // 56 0046
        gbc.setState(0x109c, 0x4557, 0x37e0, 0x336b, 0xf0a, 0x71b7, 0x0, 0x0);
        gbc.writeMem(0x109c, { 0x56 });
        gbc.writeMem(0x71b7, { 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4557, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0047
        gbc.setState(0xb45, 0x6d70, 0xab10, 0xf28f, 0x75fe, 0xdffb, 0x1, 0x1);
        gbc.writeMem(0xb45, { 0x56 });
        gbc.writeMem(0xdffb, { 0x50 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6d70, gbc.sp());
        EXPECT(0xb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdffb));
        // 56 0048
        gbc.setState(0xdd5b, 0x4a97, 0x8b70, 0x3d6b, 0x6532, 0xf14f, 0x0, 0x1);
        gbc.writeMem(0xdd5b, { 0x56 });
        gbc.writeMem(0xf14f, { 0xd5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4a97, gbc.sp());
        EXPECT(0xdd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdd5b));
        EXPECT(0xd5, gbc.readMem(0xf14f));
        // 56 0049
        gbc.setState(0x114c, 0x5572, 0xca30, 0xe71f, 0x1132, 0x4343, 0x0, 0x1);
        gbc.writeMem(0x114c, { 0x56 });
        gbc.writeMem(0x4343, { 0x93 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5572, gbc.sp());
        EXPECT(0x114d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 004A
        gbc.setState(0x4117, 0x3be9, 0x670, 0x9fbc, 0x34da, 0xd8a8, 0x0, 0x0);
        gbc.writeMem(0x4117, { 0x56 });
        gbc.writeMem(0xd8a8, { 0xa3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3be9, gbc.sp());
        EXPECT(0x4118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd8a8));
        // 56 004B
        gbc.setState(0xb03f, 0xd461, 0xca0, 0x396b, 0xfdae, 0x8fe5, 0x1, 0x0);
        gbc.writeMem(0x8fe5, { 0x74 });
        gbc.writeMem(0xb03f, { 0x56 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd461, gbc.sp());
        EXPECT(0xb040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8fe5));
        EXPECT(0x56, gbc.readMem(0xb03f));
        // 56 004C
        gbc.setState(0x32c, 0x12e4, 0xc300, 0x9c63, 0x509f, 0x6dd6, 0x0, 0x0);
        gbc.writeMem(0x32c, { 0x56 });
        gbc.writeMem(0x6dd6, { 0x4c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x12e4, gbc.sp());
        EXPECT(0x32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 004D
        gbc.setState(0x755c, 0x1cc6, 0xe090, 0xd3e4, 0x263b, 0xbb08, 0x0, 0x0);
        gbc.writeMem(0x755c, { 0x56 });
        gbc.writeMem(0xbb08, { 0x7f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1cc6, gbc.sp());
        EXPECT(0x755d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xbb08));
        // 56 004E
        gbc.setState(0xa88a, 0xe92b, 0xc980, 0xbdd, 0x4deb, 0x7ec0, 0x1, 0x1);
        gbc.writeMem(0x7ec0, { 0x55 });
        gbc.writeMem(0xa88a, { 0x56 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe92b, gbc.sp());
        EXPECT(0xa88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa88a));
        // 56 004F
        gbc.setState(0xcf5e, 0x1fa3, 0xf10, 0xc3ed, 0x3e5d, 0x41e4, 0x1, 0x1);
        gbc.writeMem(0x41e4, { 0x82 });
        gbc.writeMem(0xcf5e, { 0x56 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1fa3, gbc.sp());
        EXPECT(0xcf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcf5e));
        // 56 0050
        gbc.setState(0x204c, 0x1432, 0x880, 0x6d1b, 0x939d, 0xce1a, 0x1, 0x1);
        gbc.writeMem(0x204c, { 0x56 });
        gbc.writeMem(0xce1a, { 0xf4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1432, gbc.sp());
        EXPECT(0x204d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xce1a));
        // 56 0051
        gbc.setState(0x353e, 0x98f, 0x2390, 0xae17, 0x59f, 0x2f00, 0x1, 0x1);
        gbc.writeMem(0x2f00, { 0xd });
        gbc.writeMem(0x353e, { 0x56 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x98f, gbc.sp());
        EXPECT(0x353f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0052
        gbc.setState(0xd1d, 0x7210, 0x6f30, 0x1764, 0xf546, 0x9bb, 0x0, 0x1);
        gbc.writeMem(0x9bb, { 0x90 });
        gbc.writeMem(0xd1d, { 0x56 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7210, gbc.sp());
        EXPECT(0xd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0053
        gbc.setState(0x2ac6, 0xdb02, 0xe1f0, 0xa81d, 0xabb1, 0xbc1e, 0x1, 0x1);
        gbc.writeMem(0x2ac6, { 0x56 });
        gbc.writeMem(0xbc1e, { 0xfc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdb02, gbc.sp());
        EXPECT(0x2ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xbc1e));
        // 56 0054
        gbc.setState(0x675f, 0xd985, 0x94d0, 0xc5aa, 0x2e70, 0xad57, 0x0, 0x0);
        gbc.writeMem(0x675f, { 0x56 });
        gbc.writeMem(0xad57, { 0x3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd985, gbc.sp());
        EXPECT(0x6760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xad57));
        // 56 0055
        gbc.setState(0x3aaa, 0xc378, 0x2390, 0xa831, 0x2508, 0x920f, 0x1, 0x1);
        gbc.writeMem(0x3aaa, { 0x56 });
        gbc.writeMem(0x920f, { 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc378, gbc.sp());
        EXPECT(0x3aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x920f));
        // 56 0056
        gbc.setState(0xb1b2, 0xebcd, 0x4ec0, 0xff6a, 0x290e, 0xf2bb, 0x1, 0x0);
        gbc.writeMem(0xb1b2, { 0x56 });
        gbc.writeMem(0xf2bb, { 0xf2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xebcd, gbc.sp());
        EXPECT(0xb1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb1b2));
        EXPECT(0xf2, gbc.readMem(0xf2bb));
        // 56 0057
        gbc.setState(0xb691, 0xf6ff, 0xe00, 0x2912, 0x56a0, 0x5e64, 0x1, 0x0);
        gbc.writeMem(0x5e64, { 0x83 });
        gbc.writeMem(0xb691, { 0x56 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf6ff, gbc.sp());
        EXPECT(0xb692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb691));
        // 56 0058
        gbc.setState(0x8951, 0x46ce, 0x14e0, 0xd021, 0x7b41, 0x38be, 0x1, 0x0);
        gbc.writeMem(0x38be, { 0xe8 });
        gbc.writeMem(0x8951, { 0x56 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0x8952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8951));
        // 56 0059
        gbc.setState(0x2b68, 0x965e, 0x6900, 0xd077, 0xb5d0, 0xd904, 0x1, 0x1);
        gbc.writeMem(0x2b68, { 0x56 });
        gbc.writeMem(0xd904, { 0x81 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x965e, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd904));
        // 56 005A
        gbc.setState(0x11b8, 0x1d75, 0x30d0, 0x21cb, 0x1f9c, 0x7968, 0x1, 0x1);
        gbc.writeMem(0x11b8, { 0x56 });
        gbc.writeMem(0x7968, { 0x1a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1d75, gbc.sp());
        EXPECT(0x11b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 005B
        gbc.setState(0xa335, 0x2dcf, 0xadf0, 0xa10c, 0x17d1, 0x25b3, 0x1, 0x0);
        gbc.writeMem(0x25b3, { 0x5c });
        gbc.writeMem(0xa335, { 0x56 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2dcf, gbc.sp());
        EXPECT(0xa336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa335));
        // 56 005C
        gbc.setState(0x2f3f, 0x7fe4, 0xb5c0, 0xf678, 0x91a4, 0xa181, 0x0, 0x1);
        gbc.writeMem(0x2f3f, { 0x56 });
        gbc.writeMem(0xa181, { 0xa7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7fe4, gbc.sp());
        EXPECT(0x2f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa181));
        // 56 005D
        gbc.setState(0xeccb, 0x1301, 0xe900, 0xc998, 0xf2de, 0xa264, 0x0, 0x0);
        gbc.writeMem(0xa264, { 0x75 });
        gbc.writeMem(0xeccb, { 0x56 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1301, gbc.sp());
        EXPECT(0xeccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa264));
        EXPECT(0x56, gbc.readMem(0xeccb));
        // 56 005E
        gbc.setState(0x2aa0, 0xdf1f, 0x3090, 0x6e3f, 0xe3bb, 0xeaff, 0x0, 0x1);
        gbc.writeMem(0x2aa0, { 0x56 });
        gbc.writeMem(0xeaff, { 0xeb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdf1f, gbc.sp());
        EXPECT(0x2aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xeaff));
        // 56 005F
        gbc.setState(0x2f8c, 0x84a, 0x9220, 0x52b1, 0xd25d, 0x4b90, 0x0, 0x1);
        gbc.writeMem(0x2f8c, { 0x56 });
        gbc.writeMem(0x4b90, { 0x25 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x84a, gbc.sp());
        EXPECT(0x2f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0060
        gbc.setState(0x85c7, 0xee58, 0xc550, 0x7256, 0x54a4, 0x53a9, 0x1, 0x1);
        gbc.writeMem(0x53a9, { 0x6c });
        gbc.writeMem(0x85c7, { 0x56 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xee58, gbc.sp());
        EXPECT(0x85c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x85c7));
        // 56 0061
        gbc.setState(0xb4f9, 0x6408, 0x9820, 0x8121, 0x6dc5, 0x5207, 0x0, 0x0);
        gbc.writeMem(0x5207, { 0x59 });
        gbc.writeMem(0xb4f9, { 0x56 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6408, gbc.sp());
        EXPECT(0xb4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb4f9));
        // 56 0062
        gbc.setState(0x1021, 0xecbd, 0xc9d0, 0xd34d, 0x7f9, 0xeb44, 0x0, 0x0);
        gbc.writeMem(0x1021, { 0x56 });
        gbc.writeMem(0xeb44, { 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xecbd, gbc.sp());
        EXPECT(0x1022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeb44));
        // 56 0063
        gbc.setState(0xede7, 0x967b, 0x9dc0, 0x116f, 0xaf52, 0x3535, 0x0, 0x1);
        gbc.writeMem(0x3535, { 0x73 });
        gbc.writeMem(0xede7, { 0x56 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x967b, gbc.sp());
        EXPECT(0xede8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xede7));
        // 56 0066
        gbc.setState(0xb2a1, 0xc644, 0xa7a0, 0xe281, 0x9615, 0xa894, 0x1, 0x1);
        gbc.writeMem(0xa894, { 0xcd });
        gbc.writeMem(0xb2a1, { 0x56 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc644, gbc.sp());
        EXPECT(0xb2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa894));
        EXPECT(0x56, gbc.readMem(0xb2a1));
        // 56 0067
        gbc.setState(0x680c, 0x5120, 0x64c0, 0x96ef, 0x15b, 0x9181, 0x0, 0x1);
        gbc.writeMem(0x680c, { 0x56 });
        gbc.writeMem(0x9181, { 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5120, gbc.sp());
        EXPECT(0x680d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9181));
        // 56 0068
        gbc.setState(0x480f, 0x4b7d, 0x6180, 0x591f, 0x5ebe, 0xdf, 0x0, 0x0);
        gbc.writeMem(0xdf, { 0xa });
        gbc.writeMem(0x480f, { 0x56 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4b7d, gbc.sp());
        EXPECT(0x4810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0069
        gbc.setState(0x8c57, 0xe83, 0xd430, 0x2d3f, 0xac31, 0x4447, 0x0, 0x0);
        gbc.writeMem(0x4447, { 0xae });
        gbc.writeMem(0x8c57, { 0x56 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe83, gbc.sp());
        EXPECT(0x8c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8c57));
        // 56 006A
        gbc.setState(0x5f6b, 0x4a98, 0x1080, 0x1a4c, 0x4aed, 0xddbf, 0x1, 0x0);
        gbc.writeMem(0x5f6b, { 0x56 });
        gbc.writeMem(0xddbf, { 0x20 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4a98, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xddbf));
        // 56 006B
        gbc.setState(0x1740, 0x711a, 0x900, 0x369b, 0x87, 0x71d7, 0x1, 0x0);
        gbc.writeMem(0x1740, { 0x56 });
        gbc.writeMem(0x71d7, { 0x25 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x711a, gbc.sp());
        EXPECT(0x1741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 006C
        gbc.setState(0xa6ea, 0xe7c5, 0xa440, 0xf5f0, 0x10af, 0x929e, 0x0, 0x1);
        gbc.writeMem(0x929e, { 0xcc });
        gbc.writeMem(0xa6ea, { 0x56 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe7c5, gbc.sp());
        EXPECT(0xa6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x929e));
        EXPECT(0x56, gbc.readMem(0xa6ea));
        // 56 006D
        gbc.setState(0xbd58, 0xafef, 0x4380, 0xb9c6, 0xf88c, 0x2e53, 0x1, 0x1);
        gbc.writeMem(0x2e53, { 0xec });
        gbc.writeMem(0xbd58, { 0x56 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xafef, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbd58));
        // 56 006E
        gbc.setState(0x5783, 0x5392, 0xe920, 0x6959, 0xe733, 0xd3c9, 0x0, 0x0);
        gbc.writeMem(0x5783, { 0x56 });
        gbc.writeMem(0xd3c9, { 0xd9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5392, gbc.sp());
        EXPECT(0x5784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd3c9));
        // 56 006F
        gbc.setState(0xb910, 0x1cca, 0xa480, 0x49de, 0xcc43, 0x8390, 0x0, 0x0);
        gbc.writeMem(0x8390, { 0xbd });
        gbc.writeMem(0xb910, { 0x56 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1cca, gbc.sp());
        EXPECT(0xb911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8390));
        EXPECT(0x56, gbc.readMem(0xb910));
        // 56 0070
        gbc.setState(0xc6ab, 0x4a3c, 0x5ec0, 0x502f, 0xada2, 0xda30, 0x1, 0x0);
        gbc.writeMem(0xc6ab, { 0x56 });
        gbc.writeMem(0xda30, { 0x30 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4a3c, gbc.sp());
        EXPECT(0xc6ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc6ab));
        EXPECT(0x30, gbc.readMem(0xda30));
        // 56 0071
        gbc.setState(0xb886, 0xe7d4, 0x5c00, 0x5b4a, 0x1de6, 0xd4ff, 0x1, 0x1);
        gbc.writeMem(0xb886, { 0x56 });
        gbc.writeMem(0xd4ff, { 0x53 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe7d4, gbc.sp());
        EXPECT(0xb887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb886));
        EXPECT(0x53, gbc.readMem(0xd4ff));
        // 56 0072
        gbc.setState(0xb46, 0xd9c0, 0xd950, 0x566d, 0xbb5c, 0x41ee, 0x0, 0x0);
        gbc.writeMem(0xb46, { 0x56 });
        gbc.writeMem(0x41ee, { 0xbf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd9c0, gbc.sp());
        EXPECT(0xb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0073
        gbc.setState(0xd2ae, 0xf820, 0xdc80, 0x129f, 0x29ad, 0x9ec9, 0x0, 0x0);
        gbc.writeMem(0x9ec9, { 0xc5 });
        gbc.writeMem(0xd2ae, { 0x56 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf820, gbc.sp());
        EXPECT(0xd2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9ec9));
        EXPECT(0x56, gbc.readMem(0xd2ae));
        // 56 0074
        gbc.setState(0x2cfc, 0x6f40, 0x1e80, 0x95af, 0x303a, 0x5cd5, 0x0, 0x1);
        gbc.writeMem(0x2cfc, { 0x56 });
        gbc.writeMem(0x5cd5, { 0xce });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6f40, gbc.sp());
        EXPECT(0x2cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0075
        gbc.setState(0x4735, 0x6dc7, 0xad0, 0x8cf2, 0x50a4, 0xb984, 0x1, 0x1);
        gbc.writeMem(0x4735, { 0x56 });
        gbc.writeMem(0xb984, { 0x1c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6dc7, gbc.sp());
        EXPECT(0x4736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb984));
        // 56 0076
        gbc.setState(0x370c, 0x4640, 0x8780, 0x209, 0x93cf, 0xd9fa, 0x1, 0x0);
        gbc.writeMem(0x370c, { 0x56 });
        gbc.writeMem(0xd9fa, { 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4640, gbc.sp());
        EXPECT(0x370d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd9fa));
        // 56 0077
        gbc.setState(0x842, 0xc1de, 0xe5e0, 0x335e, 0xda47, 0xf58, 0x1, 0x1);
        gbc.writeMem(0x842, { 0x56 });
        gbc.writeMem(0xf58, { 0x8b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc1de, gbc.sp());
        EXPECT(0x843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0078
        gbc.setState(0xd84d, 0xd65b, 0xa240, 0x3481, 0x6ab9, 0x409a, 0x0, 0x1);
        gbc.writeMem(0x409a, { 0x78 });
        gbc.writeMem(0xd84d, { 0x56 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd65b, gbc.sp());
        EXPECT(0xd84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd84d));
        // 56 0079
        gbc.setState(0x5b09, 0x5b38, 0x210, 0xcb40, 0x1eb1, 0xe271, 0x1, 0x1);
        gbc.writeMem(0x5b09, { 0x56 });
        gbc.writeMem(0xe271, { 0x79 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5b38, gbc.sp());
        EXPECT(0x5b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe271));
        // 56 007A
        gbc.setState(0x95ad, 0xa2bd, 0x710, 0x4914, 0x70a2, 0x7e5f, 0x1, 0x0);
        gbc.writeMem(0x7e5f, { 0x15 });
        gbc.writeMem(0x95ad, { 0x56 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa2bd, gbc.sp());
        EXPECT(0x95ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x95ad));
        // 56 007B
        gbc.setState(0x15ba, 0x69c5, 0xbbf0, 0x684d, 0xf2d, 0xbf3b, 0x1, 0x1);
        gbc.writeMem(0x15ba, { 0x56 });
        gbc.writeMem(0xbf3b, { 0xa7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x69c5, gbc.sp());
        EXPECT(0x15bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbf3b));
        // 56 007C
        gbc.setState(0x830, 0x1dfc, 0xf460, 0x711d, 0xe4e0, 0x4c05, 0x0, 0x1);
        gbc.writeMem(0x830, { 0x56 });
        gbc.writeMem(0x4c05, { 0xc8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1dfc, gbc.sp());
        EXPECT(0x831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 007E
        gbc.setState(0x2cb3, 0x93ec, 0xe90, 0x2975, 0xb324, 0xbf6f, 0x0, 0x1);
        gbc.writeMem(0x2cb3, { 0x56 });
        gbc.writeMem(0xbf6f, { 0x26 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x93ec, gbc.sp());
        EXPECT(0x2cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbf6f));
        // 56 007F
        gbc.setState(0x3feb, 0x841b, 0xcff0, 0x31a4, 0x735d, 0xf390, 0x1, 0x1);
        gbc.writeMem(0x3feb, { 0x56 });
        gbc.writeMem(0xf390, { 0xde });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x841b, gbc.sp());
        EXPECT(0x3fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf390));
        // 56 0080
        gbc.setState(0x1dd5, 0xf59b, 0xe220, 0x451f, 0xdf14, 0xa9b2, 0x1, 0x0);
        gbc.writeMem(0x1dd5, { 0x56 });
        gbc.writeMem(0xa9b2, { 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf59b, gbc.sp());
        EXPECT(0x1dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa9b2));
        // 56 0081
        gbc.setState(0x41ff, 0xec97, 0x1670, 0xbcb6, 0x9986, 0x865b, 0x1, 0x1);
        gbc.writeMem(0x41ff, { 0x56 });
        gbc.writeMem(0x865b, { 0xe6 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xec97, gbc.sp());
        EXPECT(0x4200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x865b));
        // 56 0082
        gbc.setState(0xeb67, 0x7e9a, 0xc470, 0xe30, 0xe9dd, 0xb6f1, 0x0, 0x1);
        gbc.writeMem(0xb6f1, { 0x93 });
        gbc.writeMem(0xeb67, { 0x56 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7e9a, gbc.sp());
        EXPECT(0xeb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb6f1));
        EXPECT(0x56, gbc.readMem(0xeb67));
        // 56 0083
        gbc.setState(0x2c2, 0xcc49, 0x6810, 0xf431, 0x71ba, 0x7184, 0x0, 0x1);
        gbc.writeMem(0x2c2, { 0x56 });
        gbc.writeMem(0x7184, { 0x7e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcc49, gbc.sp());
        EXPECT(0x2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0084
        gbc.setState(0x4e15, 0xb555, 0x6ae0, 0x859, 0x39ad, 0xba99, 0x0, 0x0);
        gbc.writeMem(0x4e15, { 0x56 });
        gbc.writeMem(0xba99, { 0xb7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb555, gbc.sp());
        EXPECT(0x4e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xba99));
        // 56 0085
        gbc.setState(0x48f1, 0x3233, 0x5bc0, 0xb5a, 0x4657, 0x25dc, 0x0, 0x1);
        gbc.writeMem(0x25dc, { 0x4e });
        gbc.writeMem(0x48f1, { 0x56 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3233, gbc.sp());
        EXPECT(0x48f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0086
        gbc.setState(0xe03b, 0xef83, 0x9e0, 0xfab6, 0x9512, 0x2557, 0x0, 0x0);
        gbc.writeMem(0x2557, { 0xf9 });
        gbc.writeMem(0xe03b, { 0x56 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xef83, gbc.sp());
        EXPECT(0xe03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe03b));
        // 56 0087
        gbc.setState(0x371d, 0xdc2b, 0x3e70, 0xc1e8, 0xc3a, 0x5fb5, 0x1, 0x1);
        gbc.writeMem(0x371d, { 0x56 });
        gbc.writeMem(0x5fb5, { 0xa8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdc2b, gbc.sp());
        EXPECT(0x371e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0088
        gbc.setState(0x2dc5, 0x4422, 0x2a20, 0x7ab0, 0x7394, 0xb8ad, 0x0, 0x1);
        gbc.writeMem(0x2dc5, { 0x56 });
        gbc.writeMem(0xb8ad, { 0xdb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4422, gbc.sp());
        EXPECT(0x2dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xb8ad));
        // 56 0089
        gbc.setState(0x947a, 0x8346, 0x4740, 0x5f2a, 0x39dc, 0xaf8a, 0x0, 0x0);
        gbc.writeMem(0x947a, { 0x56 });
        gbc.writeMem(0xaf8a, { 0xd3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8346, gbc.sp());
        EXPECT(0x947b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x947a));
        EXPECT(0xd3, gbc.readMem(0xaf8a));
        // 56 008A
        gbc.setState(0x1d35, 0x77ab, 0x36c0, 0x3a73, 0xdef3, 0x903, 0x0, 0x1);
        gbc.writeMem(0x903, { 0xc1 });
        gbc.writeMem(0x1d35, { 0x56 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x77ab, gbc.sp());
        EXPECT(0x1d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 008B
        gbc.setState(0xa510, 0x4859, 0x32f0, 0x7ec, 0xfd4, 0xaf7c, 0x1, 0x1);
        gbc.writeMem(0xa510, { 0x56 });
        gbc.writeMem(0xaf7c, { 0x5f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4859, gbc.sp());
        EXPECT(0xa511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa510));
        EXPECT(0x5f, gbc.readMem(0xaf7c));
        // 56 008C
        gbc.setState(0x4363, 0x63b8, 0xea10, 0xa8e8, 0x3e0d, 0x1abd, 0x0, 0x1);
        gbc.writeMem(0x1abd, { 0x30 });
        gbc.writeMem(0x4363, { 0x56 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x63b8, gbc.sp());
        EXPECT(0x4364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 008D
        gbc.setState(0x3d90, 0x434b, 0xad50, 0xd83e, 0xc2b7, 0x79e8, 0x0, 0x0);
        gbc.writeMem(0x3d90, { 0x56 });
        gbc.writeMem(0x79e8, { 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x434b, gbc.sp());
        EXPECT(0x3d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 008E
        gbc.setState(0x966d, 0x552c, 0x7220, 0x97a3, 0x6ce, 0x1760, 0x1, 0x1);
        gbc.writeMem(0x1760, { 0x10 });
        gbc.writeMem(0x966d, { 0x56 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x552c, gbc.sp());
        EXPECT(0x966e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x966d));
        // 56 008F
        gbc.setState(0xccb9, 0x85e3, 0xa590, 0x566, 0x38e1, 0x4dc0, 0x0, 0x1);
        gbc.writeMem(0x4dc0, { 0x70 });
        gbc.writeMem(0xccb9, { 0x56 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x85e3, gbc.sp());
        EXPECT(0xccba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xccb9));
        // 56 0090
        gbc.setState(0x76a5, 0x8ffa, 0x61e0, 0x2896, 0x14a5, 0x44d5, 0x0, 0x1);
        gbc.writeMem(0x44d5, { 0x16 });
        gbc.writeMem(0x76a5, { 0x56 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8ffa, gbc.sp());
        EXPECT(0x76a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0091
        gbc.setState(0xe50d, 0xb4a2, 0x6c30, 0x4f44, 0xb250, 0xdd1, 0x0, 0x1);
        gbc.writeMem(0xdd1, { 0x39 });
        gbc.writeMem(0xe50d, { 0x56 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb4a2, gbc.sp());
        EXPECT(0xe50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe50d));
        // 56 0092
        gbc.setState(0x6318, 0x3d43, 0xa400, 0x90bb, 0xdda5, 0x8e34, 0x0, 0x0);
        gbc.writeMem(0x6318, { 0x56 });
        gbc.writeMem(0x8e34, { 0x8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3d43, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x8e34));
        // 56 0093
        gbc.setState(0x886e, 0x3c64, 0x5540, 0xd, 0x3fac, 0xf853, 0x0, 0x0);
        gbc.writeMem(0x886e, { 0x56 });
        gbc.writeMem(0xf853, { 0x51 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3c64, gbc.sp());
        EXPECT(0x886f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x886e));
        EXPECT(0x51, gbc.readMem(0xf853));
        // 56 0094
        gbc.setState(0xb360, 0xfbd5, 0xfc60, 0xd3ab, 0xe6da, 0x190d, 0x0, 0x1);
        gbc.writeMem(0x190d, { 0xc2 });
        gbc.writeMem(0xb360, { 0x56 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfbd5, gbc.sp());
        EXPECT(0xb361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb360));
        // 56 0095
        gbc.setState(0x61fd, 0x6a85, 0xd260, 0xd97f, 0xd6c6, 0x8598, 0x0, 0x0);
        gbc.writeMem(0x61fd, { 0x56 });
        gbc.writeMem(0x8598, { 0x3f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6a85, gbc.sp());
        EXPECT(0x61fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8598));
        // 56 0096
        gbc.setState(0x5c32, 0xc63a, 0x73b0, 0x1052, 0x2b02, 0x332c, 0x1, 0x1);
        gbc.writeMem(0x332c, { 0x77 });
        gbc.writeMem(0x5c32, { 0x56 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc63a, gbc.sp());
        EXPECT(0x5c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0097
        gbc.setState(0xc744, 0x9cd6, 0x9560, 0xddeb, 0x8105, 0x3311, 0x0, 0x1);
        gbc.writeMem(0x3311, { 0x26 });
        gbc.writeMem(0xc744, { 0x56 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9cd6, gbc.sp());
        EXPECT(0xc745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc744));
        // 56 0098
        gbc.setState(0x97ff, 0x674b, 0xe5f0, 0x18c9, 0xee8f, 0x2471, 0x0, 0x0);
        gbc.writeMem(0x2471, { 0xdb });
        gbc.writeMem(0x97ff, { 0x56 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x674b, gbc.sp());
        EXPECT(0x9800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x97ff));
        // 56 0099
        gbc.setState(0x36e4, 0x5e4a, 0xa880, 0x6107, 0xa909, 0x5d94, 0x1, 0x0);
        gbc.writeMem(0x36e4, { 0x56 });
        gbc.writeMem(0x5d94, { 0x15 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5e4a, gbc.sp());
        EXPECT(0x36e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 009A
        gbc.setState(0x8429, 0x707, 0x20c0, 0x9aa4, 0x66b2, 0x901f, 0x1, 0x0);
        gbc.writeMem(0x8429, { 0x56 });
        gbc.writeMem(0x901f, { 0xf9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x707, gbc.sp());
        EXPECT(0x842a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8429));
        EXPECT(0xf9, gbc.readMem(0x901f));
        // 56 009B
        gbc.setState(0x2850, 0x3ffe, 0x4110, 0xa620, 0x18e2, 0xf56a, 0x0, 0x1);
        gbc.writeMem(0x2850, { 0x56 });
        gbc.writeMem(0xf56a, { 0x95 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3ffe, gbc.sp());
        EXPECT(0x2851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xf56a));
        // 56 009C
        gbc.setState(0xdb68, 0xf8ee, 0x6ea0, 0x78a7, 0xce7e, 0x3218, 0x1, 0x1);
        gbc.writeMem(0x3218, { 0xf5 });
        gbc.writeMem(0xdb68, { 0x56 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf8ee, gbc.sp());
        EXPECT(0xdb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdb68));
        // 56 009D
        gbc.setState(0x2c86, 0x7ce, 0x86e0, 0x73ff, 0x1755, 0xda77, 0x0, 0x0);
        gbc.writeMem(0x2c86, { 0x56 });
        gbc.writeMem(0xda77, { 0xfe });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7ce, gbc.sp());
        EXPECT(0x2c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xda77));
        // 56 009E
        gbc.setState(0xbbe4, 0x4a75, 0x1b50, 0xbb18, 0xb53a, 0xa1e1, 0x1, 0x1);
        gbc.writeMem(0xa1e1, { 0x63 });
        gbc.writeMem(0xbbe4, { 0x56 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4a75, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xa1e1));
        EXPECT(0x56, gbc.readMem(0xbbe4));
        // 56 009F
        gbc.setState(0xd305, 0x438b, 0xa450, 0x718e, 0x7778, 0x7e6e, 0x0, 0x1);
        gbc.writeMem(0x7e6e, { 0xa });
        gbc.writeMem(0xd305, { 0x56 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x438b, gbc.sp());
        EXPECT(0xd306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd305));
        // 56 00A0
        gbc.setState(0x86b, 0x2bbf, 0x3580, 0xfd72, 0x1a58, 0x6814, 0x0, 0x1);
        gbc.writeMem(0x86b, { 0x56 });
        gbc.writeMem(0x6814, { 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2bbf, gbc.sp());
        EXPECT(0x86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00A1
        gbc.setState(0x95a1, 0xefb7, 0x8500, 0x9a76, 0xc525, 0x9df4, 0x0, 0x0);
        gbc.writeMem(0x95a1, { 0x56 });
        gbc.writeMem(0x9df4, { 0x2e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xefb7, gbc.sp());
        EXPECT(0x95a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x95a1));
        EXPECT(0x2e, gbc.readMem(0x9df4));
        // 56 00A2
        gbc.setState(0x68d6, 0x1371, 0x3b50, 0x1bfa, 0xc40c, 0x807d, 0x0, 0x1);
        gbc.writeMem(0x68d6, { 0x56 });
        gbc.writeMem(0x807d, { 0x4b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1371, gbc.sp());
        EXPECT(0x68d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x807d));
        // 56 00A3
        gbc.setState(0x8a4e, 0x7e1f, 0x9df0, 0x550, 0xc938, 0xe729, 0x0, 0x1);
        gbc.writeMem(0x8a4e, { 0x56 });
        gbc.writeMem(0xe729, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7e1f, gbc.sp());
        EXPECT(0x8a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8a4e));
        EXPECT(0x9d, gbc.readMem(0xe729));
        // 56 00A4
        gbc.setState(0x3a03, 0xd37e, 0xbb00, 0xf171, 0x6c1c, 0x5288, 0x0, 0x0);
        gbc.writeMem(0x3a03, { 0x56 });
        gbc.writeMem(0x5288, { 0x5f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd37e, gbc.sp());
        EXPECT(0x3a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00A5
        gbc.setState(0x7197, 0xfbff, 0x2420, 0xf8fa, 0x1851, 0xe13f, 0x0, 0x1);
        gbc.writeMem(0x7197, { 0x56 });
        gbc.writeMem(0xe13f, { 0x61 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfbff, gbc.sp());
        EXPECT(0x7198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe13f));
        // 56 00A6
        gbc.setState(0x2c3a, 0x71a5, 0xcc50, 0x97e4, 0xaabb, 0xc710, 0x1, 0x0);
        gbc.writeMem(0x2c3a, { 0x56 });
        gbc.writeMem(0xc710, { 0x23 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x71a5, gbc.sp());
        EXPECT(0x2c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xc710));
        // 56 00A7
        gbc.setState(0x1f36, 0x5bcc, 0x49d0, 0xd57b, 0x7cff, 0x9656, 0x1, 0x1);
        gbc.writeMem(0x1f36, { 0x56 });
        gbc.writeMem(0x9656, { 0xcc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5bcc, gbc.sp());
        EXPECT(0x1f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x9656));
        // 56 00A8
        gbc.setState(0x49bc, 0xcba9, 0x440, 0xf9de, 0xa119, 0x63e3, 0x1, 0x0);
        gbc.writeMem(0x49bc, { 0x56 });
        gbc.writeMem(0x63e3, { 0x82 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcba9, gbc.sp());
        EXPECT(0x49bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00A9
        gbc.setState(0xc259, 0x1012, 0x34f0, 0xcd01, 0x62f2, 0x309b, 0x1, 0x0);
        gbc.writeMem(0x309b, { 0x1f });
        gbc.writeMem(0xc259, { 0x56 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1012, gbc.sp());
        EXPECT(0xc25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc259));
        // 56 00AA
        gbc.setState(0x5fcf, 0xca89, 0x3500, 0x1712, 0x24ba, 0x6811, 0x0, 0x1);
        gbc.writeMem(0x5fcf, { 0x56 });
        gbc.writeMem(0x6811, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xca89, gbc.sp());
        EXPECT(0x5fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00AB
        gbc.setState(0x65f9, 0x25d6, 0x3750, 0x3b20, 0x3e3c, 0x12cc, 0x1, 0x1);
        gbc.writeMem(0x12cc, { 0x75 });
        gbc.writeMem(0x65f9, { 0x56 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x25d6, gbc.sp());
        EXPECT(0x65fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00AC
        gbc.setState(0x9519, 0x3354, 0x57e0, 0x6ebe, 0xb5f0, 0x5262, 0x1, 0x0);
        gbc.writeMem(0x5262, { 0xd4 });
        gbc.writeMem(0x9519, { 0x56 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3354, gbc.sp());
        EXPECT(0x951a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9519));
        // 56 00AD
        gbc.setState(0xa311, 0x9147, 0x62a0, 0x554c, 0x4647, 0xf3c7, 0x0, 0x1);
        gbc.writeMem(0xa311, { 0x56 });
        gbc.writeMem(0xf3c7, { 0x8b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9147, gbc.sp());
        EXPECT(0xa312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa311));
        EXPECT(0x8b, gbc.readMem(0xf3c7));
        // 56 00AF
        gbc.setState(0xe78d, 0x52ec, 0x92b0, 0xcec7, 0xd4e0, 0x2fe, 0x0, 0x0);
        gbc.writeMem(0x2fe, { 0x6d });
        gbc.writeMem(0xe78d, { 0x56 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x52ec, gbc.sp());
        EXPECT(0xe78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe78d));
        // 56 00B0
        gbc.setState(0xf1, 0xee58, 0x98d0, 0xad28, 0x86e8, 0x4f8f, 0x0, 0x0);
        gbc.writeMem(0xf1, { 0x56 });
        gbc.writeMem(0x4f8f, { 0x20 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xee58, gbc.sp());
        EXPECT(0xf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00B1
        gbc.setState(0x96b, 0xe396, 0x24f0, 0x209b, 0xad79, 0x9940, 0x1, 0x0);
        gbc.writeMem(0x96b, { 0x56 });
        gbc.writeMem(0x9940, { 0x8d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe396, gbc.sp());
        EXPECT(0x96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9940));
        // 56 00B2
        gbc.setState(0x2344, 0x6112, 0x7df0, 0xb15, 0x9987, 0x3c5c, 0x1, 0x0);
        gbc.writeMem(0x2344, { 0x56 });
        gbc.writeMem(0x3c5c, { 0x68 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6112, gbc.sp());
        EXPECT(0x2345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00B3
        gbc.setState(0xd672, 0x1d10, 0x9af0, 0x7c4c, 0xdb40, 0x1a2a, 0x1, 0x0);
        gbc.writeMem(0x1a2a, { 0x91 });
        gbc.writeMem(0xd672, { 0x56 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1d10, gbc.sp());
        EXPECT(0xd673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd672));
        // 56 00B4
        gbc.setState(0x35e3, 0x972e, 0xb190, 0x8e87, 0xc303, 0x169e, 0x0, 0x1);
        gbc.writeMem(0x169e, { 0x3c });
        gbc.writeMem(0x35e3, { 0x56 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x972e, gbc.sp());
        EXPECT(0x35e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00B5
        gbc.setState(0x96e3, 0xb450, 0xe320, 0x77bf, 0x2b6a, 0xa075, 0x1, 0x0);
        gbc.writeMem(0x96e3, { 0x56 });
        gbc.writeMem(0xa075, { 0xc0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0x96e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x96e3));
        EXPECT(0xc0, gbc.readMem(0xa075));
        // 56 00B6
        gbc.setState(0x3c25, 0x754f, 0x23d0, 0x2124, 0x756e, 0x7a2e, 0x1, 0x1);
        gbc.writeMem(0x3c25, { 0x56 });
        gbc.writeMem(0x7a2e, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x754f, gbc.sp());
        EXPECT(0x3c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00B7
        gbc.setState(0xa4ac, 0x3e6, 0x720, 0xcb84, 0xc18a, 0x4bc4, 0x0, 0x1);
        gbc.writeMem(0x4bc4, { 0xe });
        gbc.writeMem(0xa4ac, { 0x56 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3e6, gbc.sp());
        EXPECT(0xa4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa4ac));
        // 56 00B8
        gbc.setState(0x92ee, 0x21a4, 0x89e0, 0xbcb6, 0xed5d, 0x6821, 0x0, 0x1);
        gbc.writeMem(0x6821, { 0xc5 });
        gbc.writeMem(0x92ee, { 0x56 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x21a4, gbc.sp());
        EXPECT(0x92ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x92ee));
        // 56 00B9
        gbc.setState(0x7152, 0x2974, 0x2170, 0xd663, 0x31bf, 0x95e6, 0x1, 0x1);
        gbc.writeMem(0x7152, { 0x56 });
        gbc.writeMem(0x95e6, { 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2974, gbc.sp());
        EXPECT(0x7153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x95e6));
        // 56 00BA
        gbc.setState(0x648a, 0xf485, 0xf290, 0x44a3, 0x3d87, 0xc054, 0x0, 0x0);
        gbc.writeMem(0x648a, { 0x56 });
        gbc.writeMem(0xc054, { 0xe8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf485, gbc.sp());
        EXPECT(0x648b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xc054));
        // 56 00BB
        gbc.setState(0x4c33, 0xace2, 0xc360, 0x2c94, 0xf569, 0x5f61, 0x0, 0x0);
        gbc.writeMem(0x4c33, { 0x56 });
        gbc.writeMem(0x5f61, { 0xa4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xace2, gbc.sp());
        EXPECT(0x4c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00BC
        gbc.setState(0xde08, 0x4713, 0xfe0, 0xa69e, 0x5c94, 0x7368, 0x1, 0x1);
        gbc.writeMem(0x7368, { 0xd8 });
        gbc.writeMem(0xde08, { 0x56 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4713, gbc.sp());
        EXPECT(0xde09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xde08));
        // 56 00BD
        gbc.setState(0x203a, 0x9722, 0x9b10, 0x18a8, 0x5dbe, 0x9585, 0x1, 0x0);
        gbc.writeMem(0x203a, { 0x56 });
        gbc.writeMem(0x9585, { 0x3e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9722, gbc.sp());
        EXPECT(0x203b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9585));
        // 56 00BE
        gbc.setState(0x921d, 0xc5c2, 0xade0, 0x89e5, 0xd1c3, 0xbe7a, 0x1, 0x0);
        gbc.writeMem(0x921d, { 0x56 });
        gbc.writeMem(0xbe7a, { 0x43 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc5c2, gbc.sp());
        EXPECT(0x921e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x921d));
        EXPECT(0x43, gbc.readMem(0xbe7a));
        // 56 00C0
        gbc.setState(0x8bc0, 0x4903, 0xf4d0, 0x7389, 0x2a3b, 0x67c3, 0x1, 0x0);
        gbc.writeMem(0x67c3, { 0x98 });
        gbc.writeMem(0x8bc0, { 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4903, gbc.sp());
        EXPECT(0x8bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8bc0));
        // 56 00C1
        gbc.setState(0x3bd0, 0x6a39, 0x86e0, 0xf7d2, 0x6c56, 0x8f14, 0x0, 0x0);
        gbc.writeMem(0x3bd0, { 0x56 });
        gbc.writeMem(0x8f14, { 0xf1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6a39, gbc.sp());
        EXPECT(0x3bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8f14));
        // 56 00C2
        gbc.setState(0x9253, 0xed88, 0x78f0, 0x19d2, 0xf786, 0xcae9, 0x0, 0x1);
        gbc.writeMem(0x9253, { 0x56 });
        gbc.writeMem(0xcae9, { 0xd6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xed88, gbc.sp());
        EXPECT(0x9254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9253));
        EXPECT(0xd6, gbc.readMem(0xcae9));
        // 56 00C3
        gbc.setState(0xb25b, 0x26dd, 0xeff0, 0x4992, 0x8af5, 0x3425, 0x0, 0x1);
        gbc.writeMem(0x3425, { 0x77 });
        gbc.writeMem(0xb25b, { 0x56 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x26dd, gbc.sp());
        EXPECT(0xb25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb25b));
        // 56 00C4
        gbc.setState(0x6292, 0xe1f0, 0xb860, 0x201c, 0x477f, 0x359d, 0x0, 0x0);
        gbc.writeMem(0x359d, { 0x6c });
        gbc.writeMem(0x6292, { 0x56 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe1f0, gbc.sp());
        EXPECT(0x6293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00C5
        gbc.setState(0x368f, 0x6e24, 0x7b80, 0xd6b1, 0xcdb7, 0x2dc7, 0x1, 0x0);
        gbc.writeMem(0x2dc7, { 0x41 });
        gbc.writeMem(0x368f, { 0x56 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6e24, gbc.sp());
        EXPECT(0x3690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00C7
        gbc.setState(0x164c, 0xf37, 0xdf50, 0xcb69, 0xa95d, 0xa490, 0x1, 0x0);
        gbc.writeMem(0x164c, { 0x56 });
        gbc.writeMem(0xa490, { 0xd2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf37, gbc.sp());
        EXPECT(0x164d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa490));
        // 56 00C8
        gbc.setState(0xd56f, 0x6d01, 0x4640, 0x2d68, 0x8459, 0x85e3, 0x0, 0x0);
        gbc.writeMem(0x85e3, { 0xa2 });
        gbc.writeMem(0xd56f, { 0x56 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6d01, gbc.sp());
        EXPECT(0xd570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x85e3));
        EXPECT(0x56, gbc.readMem(0xd56f));
        // 56 00C9
        gbc.setState(0x8b9f, 0x93ba, 0xf190, 0x2c8, 0xa2e9, 0xb8a2, 0x1, 0x0);
        gbc.writeMem(0x8b9f, { 0x56 });
        gbc.writeMem(0xb8a2, { 0xe9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x93ba, gbc.sp());
        EXPECT(0x8ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8b9f));
        EXPECT(0xe9, gbc.readMem(0xb8a2));
        // 56 00CA
        gbc.setState(0xd0ae, 0xee1b, 0xdd10, 0x7359, 0xf8d, 0x15b0, 0x0, 0x1);
        gbc.writeMem(0x15b0, { 0xec });
        gbc.writeMem(0xd0ae, { 0x56 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xee1b, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd0ae));
        // 56 00CB
        gbc.setState(0xddba, 0xf734, 0xc490, 0x7d70, 0xbd18, 0x7a81, 0x1, 0x1);
        gbc.writeMem(0x7a81, { 0x2e });
        gbc.writeMem(0xddba, { 0x56 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf734, gbc.sp());
        EXPECT(0xddbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xddba));
        // 56 00CC
        gbc.setState(0x8532, 0x8bc0, 0x90e0, 0x8a7b, 0x6baf, 0x95a8, 0x0, 0x0);
        gbc.writeMem(0x8532, { 0x56 });
        gbc.writeMem(0x95a8, { 0xba });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8bc0, gbc.sp());
        EXPECT(0x8533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8532));
        EXPECT(0xba, gbc.readMem(0x95a8));
        // 56 00CE
        gbc.setState(0x42d9, 0x6fd0, 0x8860, 0x7f51, 0xf34b, 0x650f, 0x0, 0x0);
        gbc.writeMem(0x42d9, { 0x56 });
        gbc.writeMem(0x650f, { 0x7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6fd0, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00CF
        gbc.setState(0x4205, 0x6189, 0xc2f0, 0x7d63, 0x86f0, 0x1785, 0x1, 0x0);
        gbc.writeMem(0x1785, { 0x12 });
        gbc.writeMem(0x4205, { 0x56 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6189, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00D0
        gbc.setState(0xda90, 0x784d, 0xb930, 0x2d77, 0xadba, 0x2498, 0x1, 0x1);
        gbc.writeMem(0x2498, { 0x86 });
        gbc.writeMem(0xda90, { 0x56 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x784d, gbc.sp());
        EXPECT(0xda91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xda90));
        // 56 00D1
        gbc.setState(0x5a5a, 0x7862, 0x6cf0, 0x70ea, 0x1b95, 0xcea0, 0x1, 0x0);
        gbc.writeMem(0x5a5a, { 0x56 });
        gbc.writeMem(0xcea0, { 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7862, gbc.sp());
        EXPECT(0x5a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcea0));
        // 56 00D2
        gbc.setState(0x3582, 0xec87, 0x5760, 0x8bda, 0x89aa, 0x8b63, 0x0, 0x0);
        gbc.writeMem(0x3582, { 0x56 });
        gbc.writeMem(0x8b63, { 0xa1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xec87, gbc.sp());
        EXPECT(0x3583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8b63));
        // 56 00D3
        gbc.setState(0xb0a, 0x7507, 0xb120, 0xa71, 0xdbbd, 0x7abf, 0x1, 0x0);
        gbc.writeMem(0xb0a, { 0x56 });
        gbc.writeMem(0x7abf, { 0xb4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7507, gbc.sp());
        EXPECT(0xb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00D4
        gbc.setState(0x4dc9, 0xb13a, 0xeb00, 0xed5, 0x70, 0x785e, 0x0, 0x0);
        gbc.writeMem(0x4dc9, { 0x56 });
        gbc.writeMem(0x785e, { 0xa3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb13a, gbc.sp());
        EXPECT(0x4dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00D5
        gbc.setState(0x5c05, 0xe6da, 0x1c50, 0x5281, 0xca9d, 0x62d8, 0x0, 0x0);
        gbc.writeMem(0x5c05, { 0x56 });
        gbc.writeMem(0x62d8, { 0xff });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe6da, gbc.sp());
        EXPECT(0x5c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00D6
        gbc.setState(0x1577, 0x625b, 0x16a0, 0xa939, 0x626e, 0x70fc, 0x1, 0x0);
        gbc.writeMem(0x1577, { 0x56 });
        gbc.writeMem(0x70fc, { 0xb8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x625b, gbc.sp());
        EXPECT(0x1578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00D7
        gbc.setState(0x7202, 0xa3a, 0xf3e0, 0x669f, 0x4966, 0x2b3d, 0x0, 0x0);
        gbc.writeMem(0x2b3d, { 0x95 });
        gbc.writeMem(0x7202, { 0x56 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa3a, gbc.sp());
        EXPECT(0x7203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00D8
        gbc.setState(0xd5ec, 0x545, 0x9100, 0xede7, 0x27d7, 0x8c48, 0x1, 0x1);
        gbc.writeMem(0x8c48, { 0xab });
        gbc.writeMem(0xd5ec, { 0x56 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x545, gbc.sp());
        EXPECT(0xd5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x8c48));
        EXPECT(0x56, gbc.readMem(0xd5ec));
        // 56 00D9
        gbc.setState(0x5000, 0xadc5, 0xb1e0, 0x8fe8, 0x5589, 0x7f99, 0x0, 0x1);
        gbc.writeMem(0x5000, { 0x56 });
        gbc.writeMem(0x7f99, { 0x2d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xadc5, gbc.sp());
        EXPECT(0x5001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00DA
        gbc.setState(0xb8e8, 0x11f3, 0x2980, 0x5442, 0x95a4, 0x5aea, 0x1, 0x1);
        gbc.writeMem(0x5aea, { 0xe2 });
        gbc.writeMem(0xb8e8, { 0x56 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x11f3, gbc.sp());
        EXPECT(0xb8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb8e8));
        // 56 00DB
        gbc.setState(0xb204, 0xccc9, 0x8840, 0xe257, 0x1a60, 0x19ba, 0x0, 0x1);
        gbc.writeMem(0x19ba, { 0xcd });
        gbc.writeMem(0xb204, { 0x56 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xccc9, gbc.sp());
        EXPECT(0xb205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb204));
        // 56 00DC
        gbc.setState(0x2289, 0xe1be, 0x89d0, 0x7b0, 0x479e, 0x50ac, 0x1, 0x0);
        gbc.writeMem(0x2289, { 0x56 });
        gbc.writeMem(0x50ac, { 0x4a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe1be, gbc.sp());
        EXPECT(0x228a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00DD
        gbc.setState(0x93fd, 0xcce7, 0xda40, 0xdf0d, 0x665b, 0x717d, 0x0, 0x1);
        gbc.writeMem(0x717d, { 0x14 });
        gbc.writeMem(0x93fd, { 0x56 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcce7, gbc.sp());
        EXPECT(0x93fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x93fd));
        // 56 00DE
        gbc.setState(0xc54e, 0x116c, 0xffb0, 0x70cb, 0x6223, 0x10a5, 0x1, 0x0);
        gbc.writeMem(0x10a5, { 0x51 });
        gbc.writeMem(0xc54e, { 0x56 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x116c, gbc.sp());
        EXPECT(0xc54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc54e));
        // 56 00DF
        gbc.setState(0xa361, 0xa975, 0xfd00, 0xe47d, 0x6400, 0x7327, 0x0, 0x1);
        gbc.writeMem(0x7327, { 0x2a });
        gbc.writeMem(0xa361, { 0x56 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa975, gbc.sp());
        EXPECT(0xa362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa361));
        // 56 00E0
        gbc.setState(0x3c26, 0x55c7, 0x9340, 0xa651, 0xc262, 0x7fff, 0x0, 0x0);
        gbc.writeMem(0x3c26, { 0x56 });
        gbc.writeMem(0x7fff, { 0x26 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x55c7, gbc.sp());
        EXPECT(0x3c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00E1
        gbc.setState(0xa82d, 0xffa9, 0x6320, 0x7f9c, 0xf1a3, 0xd96d, 0x0, 0x1);
        gbc.writeMem(0xa82d, { 0x56 });
        gbc.writeMem(0xd96d, { 0xbf });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xffa9, gbc.sp());
        EXPECT(0xa82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa82d));
        EXPECT(0xbf, gbc.readMem(0xd96d));
        // 56 00E2
        gbc.setState(0x3df9, 0xee83, 0xedf0, 0x67c1, 0x6ad, 0x2e26, 0x1, 0x0);
        gbc.writeMem(0x2e26, { 0x90 });
        gbc.writeMem(0x3df9, { 0x56 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xee83, gbc.sp());
        EXPECT(0x3dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00E3
        gbc.setState(0x4eb1, 0x45a5, 0xf0b0, 0x4854, 0x86b3, 0xf388, 0x0, 0x1);
        gbc.writeMem(0x4eb1, { 0x56 });
        gbc.writeMem(0xf388, { 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x45a5, gbc.sp());
        EXPECT(0x4eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xf388));
        // 56 00E4
        gbc.setState(0x9ffa, 0x76bb, 0xa310, 0xbec3, 0x9972, 0x56de, 0x0, 0x1);
        gbc.writeMem(0x56de, { 0xc9 });
        gbc.writeMem(0x9ffa, { 0x56 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x76bb, gbc.sp());
        EXPECT(0x9ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9ffa));
        // 56 00E5
        gbc.setState(0x9010, 0x5486, 0x8ce0, 0xb61f, 0xc6a8, 0x18d7, 0x1, 0x1);
        gbc.writeMem(0x18d7, { 0x65 });
        gbc.writeMem(0x9010, { 0x56 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5486, gbc.sp());
        EXPECT(0x9011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9010));
        // 56 00E6
        gbc.setState(0xc293, 0xb645, 0x9660, 0x4626, 0x27a7, 0xd9a9, 0x0, 0x0);
        gbc.writeMem(0xc293, { 0x56 });
        gbc.writeMem(0xd9a9, { 0x4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb645, gbc.sp());
        EXPECT(0xc294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc293));
        EXPECT(0x4, gbc.readMem(0xd9a9));
        // 56 00E7
        gbc.setState(0x35be, 0x799b, 0x25e0, 0x5647, 0x2874, 0xb358, 0x0, 0x0);
        gbc.writeMem(0x35be, { 0x56 });
        gbc.writeMem(0xb358, { 0x24 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x799b, gbc.sp());
        EXPECT(0x35bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xb358));
        // 56 00E8
        gbc.setState(0x25d, 0x76cf, 0x80b0, 0x7142, 0x16a6, 0xcdda, 0x1, 0x0);
        gbc.writeMem(0x25d, { 0x56 });
        gbc.writeMem(0xcdda, { 0xee });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x76cf, gbc.sp());
        EXPECT(0x25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xcdda));
        // 56 00E9
        gbc.setState(0xe9c0, 0x28c3, 0x3380, 0x9c39, 0x5fc9, 0x69ea, 0x0, 0x0);
        gbc.writeMem(0x69ea, { 0xd5 });
        gbc.writeMem(0xe9c0, { 0x56 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x28c3, gbc.sp());
        EXPECT(0xe9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe9c0));
        // 56 00EA
        gbc.setState(0x9070, 0x9a1a, 0xc390, 0x325a, 0x131d, 0xb992, 0x0, 0x0);
        gbc.writeMem(0x9070, { 0x56 });
        gbc.writeMem(0xb992, { 0x22 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9a1a, gbc.sp());
        EXPECT(0x9071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9070));
        EXPECT(0x22, gbc.readMem(0xb992));
        // 56 00EB
        gbc.setState(0x2cc5, 0xf143, 0xed70, 0x291f, 0x5ca3, 0x3370, 0x1, 0x0);
        gbc.writeMem(0x2cc5, { 0x56 });
        gbc.writeMem(0x3370, { 0xa9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf143, gbc.sp());
        EXPECT(0x2cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00EC
        gbc.setState(0x3907, 0x4bc6, 0xf600, 0xc76f, 0xa009, 0xce8e, 0x1, 0x1);
        gbc.writeMem(0x3907, { 0x56 });
        gbc.writeMem(0xce8e, { 0xab });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4bc6, gbc.sp());
        EXPECT(0x3908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xce8e));
        // 56 00ED
        gbc.setState(0x94bc, 0xcd36, 0x9700, 0x8397, 0x7ac8, 0xf843, 0x0, 0x1);
        gbc.writeMem(0x94bc, { 0x56 });
        gbc.writeMem(0xf843, { 0xc4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcd36, gbc.sp());
        EXPECT(0x94bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x94bc));
        EXPECT(0xc4, gbc.readMem(0xf843));
        // 56 00EE
        gbc.setState(0xa76d, 0xe589, 0xf080, 0x43b1, 0xdaa, 0x4762, 0x1, 0x1);
        gbc.writeMem(0x4762, { 0x2d });
        gbc.writeMem(0xa76d, { 0x56 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe589, gbc.sp());
        EXPECT(0xa76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa76d));
        // 56 00EF
        gbc.setState(0xdcf0, 0xfeb4, 0xb330, 0x8cb4, 0xfbb0, 0x67e1, 0x1, 0x1);
        gbc.writeMem(0x67e1, { 0xac });
        gbc.writeMem(0xdcf0, { 0x56 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfeb4, gbc.sp());
        EXPECT(0xdcf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdcf0));
        // 56 00F0
        gbc.setState(0xe009, 0xf381, 0xfaa0, 0x442f, 0x9680, 0xbaf0, 0x0, 0x1);
        gbc.writeMem(0xbaf0, { 0xcd });
        gbc.writeMem(0xe009, { 0x56 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf381, gbc.sp());
        EXPECT(0xe00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xbaf0));
        EXPECT(0x56, gbc.readMem(0xe009));
        // 56 00F1
        gbc.setState(0x1875, 0x1ee0, 0x6c80, 0x59b5, 0xfa91, 0x1d05, 0x1, 0x1);
        gbc.writeMem(0x1875, { 0x56 });
        gbc.writeMem(0x1d05, { 0xd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1ee0, gbc.sp());
        EXPECT(0x1876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00F2
        gbc.setState(0xc52b, 0x276, 0xf1f0, 0xc0b3, 0xa777, 0x2f69, 0x1, 0x0);
        gbc.writeMem(0x2f69, { 0x59 });
        gbc.writeMem(0xc52b, { 0x56 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x276, gbc.sp());
        EXPECT(0xc52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc52b));
        // 56 00F3
        gbc.setState(0x5c5c, 0xf096, 0xe140, 0x7795, 0x3e4f, 0x14b9, 0x1, 0x0);
        gbc.writeMem(0x14b9, { 0x99 });
        gbc.writeMem(0x5c5c, { 0x56 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf096, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00F4
        gbc.setState(0x884b, 0xbea6, 0xf8e0, 0x5bad, 0xcd73, 0x7076, 0x1, 0x0);
        gbc.writeMem(0x7076, { 0x1 });
        gbc.writeMem(0x884b, { 0x56 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbea6, gbc.sp());
        EXPECT(0x884c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x884b));
        // 56 00F5
        gbc.setState(0xefa0, 0xf90, 0x7510, 0x7664, 0x3b3b, 0x61b9, 0x0, 0x0);
        gbc.writeMem(0x61b9, { 0x66 });
        gbc.writeMem(0xefa0, { 0x56 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf90, gbc.sp());
        EXPECT(0xefa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xefa0));
        // 56 00F7
        gbc.setState(0x6d28, 0xdada, 0x4d80, 0x4466, 0x8479, 0xf10d, 0x0, 0x0);
        gbc.writeMem(0x6d28, { 0x56 });
        gbc.writeMem(0xf10d, { 0x4f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdada, gbc.sp());
        EXPECT(0x6d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf10d));
        // 56 00F8
        gbc.setState(0xd8b5, 0x2a34, 0x5eb0, 0x31ec, 0xb857, 0x18df, 0x1, 0x0);
        gbc.writeMem(0x18df, { 0x74 });
        gbc.writeMem(0xd8b5, { 0x56 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2a34, gbc.sp());
        EXPECT(0xd8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd8b5));
        // 56 00F9
        gbc.setState(0x678e, 0xa123, 0x4430, 0xc2b8, 0x3c9c, 0xa57d, 0x1, 0x0);
        gbc.writeMem(0x678e, { 0x56 });
        gbc.writeMem(0xa57d, { 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa123, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa57d));
        // 56 00FA
        gbc.setState(0x4f46, 0xcf22, 0x6ae0, 0xa37d, 0xb490, 0x3570, 0x0, 0x1);
        gbc.writeMem(0x3570, { 0x7b });
        gbc.writeMem(0x4f46, { 0x56 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcf22, gbc.sp());
        EXPECT(0x4f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 00FB
        gbc.setState(0x5d8, 0x722d, 0xb7e0, 0xd9fa, 0x8169, 0xadb2, 0x1, 0x0);
        gbc.writeMem(0x5d8, { 0x56 });
        gbc.writeMem(0xadb2, { 0x9c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x722d, gbc.sp());
        EXPECT(0x5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xadb2));
        // 56 00FC
        gbc.setState(0x52db, 0x4c9c, 0xba50, 0x3024, 0xd57b, 0xab49, 0x1, 0x0);
        gbc.writeMem(0x52db, { 0x56 });
        gbc.writeMem(0xab49, { 0x42 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4c9c, gbc.sp());
        EXPECT(0x52dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xab49));
        // 56 00FD
        gbc.setState(0x323c, 0x6a13, 0x9840, 0x4194, 0x2a1c, 0x9b08, 0x0, 0x1);
        gbc.writeMem(0x323c, { 0x56 });
        gbc.writeMem(0x9b08, { 0x1d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6a13, gbc.sp());
        EXPECT(0x323d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9b08));
        // 56 00FE
        gbc.setState(0x77fd, 0x78c3, 0x4750, 0xe56, 0xc31d, 0x67d4, 0x1, 0x1);
        gbc.writeMem(0x67d4, { 0x32 });
        gbc.writeMem(0x77fd, { 0x56 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x78c3, gbc.sp());
        EXPECT(0x77fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 00FF
        gbc.setState(0xb0c6, 0x5291, 0x8920, 0x47f7, 0xdb4b, 0x762, 0x1, 0x1);
        gbc.writeMem(0x762, { 0x91 });
        gbc.writeMem(0xb0c6, { 0x56 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5291, gbc.sp());
        EXPECT(0xb0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb0c6));
        // 56 0100
        gbc.setState(0x3069, 0x6f6e, 0xdee0, 0x83a9, 0x5d1a, 0xf7c6, 0x1, 0x0);
        gbc.writeMem(0x3069, { 0x56 });
        gbc.writeMem(0xf7c6, { 0xab });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6f6e, gbc.sp());
        EXPECT(0x306a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xf7c6));
        // 56 0101
        gbc.setState(0xa02b, 0x9126, 0x31b0, 0x8553, 0x746b, 0x35b9, 0x1, 0x0);
        gbc.writeMem(0x35b9, { 0xbf });
        gbc.writeMem(0xa02b, { 0x56 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9126, gbc.sp());
        EXPECT(0xa02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa02b));
        // 56 0102
        gbc.setState(0x1771, 0x9f61, 0x4d60, 0x41c3, 0xa3c3, 0x1daa, 0x1, 0x0);
        gbc.writeMem(0x1771, { 0x56 });
        gbc.writeMem(0x1daa, { 0xe2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9f61, gbc.sp());
        EXPECT(0x1772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0103
        gbc.setState(0x6516, 0x2e5d, 0xfd20, 0x300a, 0xc2a0, 0x55b7, 0x0, 0x1);
        gbc.writeMem(0x55b7, { 0x6f });
        gbc.writeMem(0x6516, { 0x56 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2e5d, gbc.sp());
        EXPECT(0x6517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0104
        gbc.setState(0x997a, 0xc37e, 0xa320, 0x1ac2, 0x43b7, 0x7a09, 0x0, 0x1);
        gbc.writeMem(0x7a09, { 0xb5 });
        gbc.writeMem(0x997a, { 0x56 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc37e, gbc.sp());
        EXPECT(0x997b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x997a));
        // 56 0105
        gbc.setState(0x8d01, 0x9eb5, 0x70e0, 0x7fb1, 0xe2f3, 0xdcb4, 0x0, 0x1);
        gbc.writeMem(0x8d01, { 0x56 });
        gbc.writeMem(0xdcb4, { 0xa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9eb5, gbc.sp());
        EXPECT(0x8d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8d01));
        EXPECT(0xa, gbc.readMem(0xdcb4));
        // 56 0106
        gbc.setState(0x57dd, 0x9ddd, 0x500, 0x81b5, 0xf698, 0x531b, 0x0, 0x0);
        gbc.writeMem(0x531b, { 0x99 });
        gbc.writeMem(0x57dd, { 0x56 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9ddd, gbc.sp());
        EXPECT(0x57de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0107
        gbc.setState(0x1c80, 0x718b, 0xd2f0, 0x2d20, 0xd77d, 0x5d30, 0x0, 0x1);
        gbc.writeMem(0x1c80, { 0x56 });
        gbc.writeMem(0x5d30, { 0x99 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x718b, gbc.sp());
        EXPECT(0x1c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0108
        gbc.setState(0x4968, 0x4236, 0x9a40, 0x9073, 0x7b49, 0x2ae3, 0x1, 0x1);
        gbc.writeMem(0x2ae3, { 0xcd });
        gbc.writeMem(0x4968, { 0x56 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4236, gbc.sp());
        EXPECT(0x4969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0109
        gbc.setState(0x32dd, 0xceb7, 0xf770, 0xa01a, 0xe466, 0x8ee3, 0x0, 0x0);
        gbc.writeMem(0x32dd, { 0x56 });
        gbc.writeMem(0x8ee3, { 0x2f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xceb7, gbc.sp());
        EXPECT(0x32de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8ee3));
        // 56 010A
        gbc.setState(0x2108, 0x941c, 0xad20, 0xda9c, 0x3958, 0x8a6b, 0x1, 0x1);
        gbc.writeMem(0x2108, { 0x56 });
        gbc.writeMem(0x8a6b, { 0x4f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x941c, gbc.sp());
        EXPECT(0x2109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x8a6b));
        // 56 010B
        gbc.setState(0xa602, 0xe991, 0x33f0, 0x2c9d, 0x1975, 0x3f52, 0x0, 0x0);
        gbc.writeMem(0x3f52, { 0x21 });
        gbc.writeMem(0xa602, { 0x56 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe991, gbc.sp());
        EXPECT(0xa603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa602));
        // 56 010C
        gbc.setState(0x5eda, 0x40e7, 0x7a70, 0xeace, 0xc67, 0x9c17, 0x1, 0x0);
        gbc.writeMem(0x5eda, { 0x56 });
        gbc.writeMem(0x9c17, { 0x81 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x40e7, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9c17));
        // 56 010D
        gbc.setState(0xae30, 0xa429, 0x2b90, 0x3d1a, 0x415a, 0x31ab, 0x1, 0x0);
        gbc.writeMem(0x31ab, { 0x1e });
        gbc.writeMem(0xae30, { 0x56 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa429, gbc.sp());
        EXPECT(0xae31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xae30));
        // 56 010E
        gbc.setState(0xc264, 0x7049, 0x3ff0, 0xbea0, 0x8d67, 0x1a59, 0x1, 0x1);
        gbc.writeMem(0x1a59, { 0x26 });
        gbc.writeMem(0xc264, { 0x56 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7049, gbc.sp());
        EXPECT(0xc265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc264));
        // 56 010F
        gbc.setState(0xebed, 0xad49, 0x2980, 0xb3ba, 0xf040, 0x1938, 0x1, 0x0);
        gbc.writeMem(0x1938, { 0x6f });
        gbc.writeMem(0xebed, { 0x56 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xad49, gbc.sp());
        EXPECT(0xebee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xebed));
        // 56 0110
        gbc.setState(0xa4e4, 0x4d9, 0x7e50, 0x9238, 0x5cbf, 0x305b, 0x1, 0x0);
        gbc.writeMem(0x305b, { 0x4f });
        gbc.writeMem(0xa4e4, { 0x56 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0xa4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa4e4));
        // 56 0111
        gbc.setState(0x8e3b, 0xc62, 0x7610, 0xafe8, 0xee07, 0x53bf, 0x1, 0x0);
        gbc.writeMem(0x53bf, { 0xd4 });
        gbc.writeMem(0x8e3b, { 0x56 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc62, gbc.sp());
        EXPECT(0x8e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8e3b));
        // 56 0112
        gbc.setState(0xd211, 0x77ae, 0xfca0, 0x3321, 0x69ca, 0x52ce, 0x1, 0x0);
        gbc.writeMem(0x52ce, { 0x80 });
        gbc.writeMem(0xd211, { 0x56 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x77ae, gbc.sp());
        EXPECT(0xd212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd211));
        // 56 0113
        gbc.setState(0x236f, 0x9939, 0x22e0, 0xd460, 0xd54a, 0x56c, 0x1, 0x0);
        gbc.writeMem(0x56c, { 0x4e });
        gbc.writeMem(0x236f, { 0x56 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9939, gbc.sp());
        EXPECT(0x2370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0114
        gbc.setState(0x55ba, 0x7d5, 0x15e0, 0xd8c, 0x6af9, 0x933d, 0x1, 0x1);
        gbc.writeMem(0x55ba, { 0x56 });
        gbc.writeMem(0x933d, { 0x70 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7d5, gbc.sp());
        EXPECT(0x55bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x933d));
        // 56 0115
        gbc.setState(0xc90a, 0xf05e, 0x6ba0, 0x8ca1, 0xaaa2, 0x91d1, 0x1, 0x0);
        gbc.writeMem(0x91d1, { 0x11 });
        gbc.writeMem(0xc90a, { 0x56 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf05e, gbc.sp());
        EXPECT(0xc90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x91d1));
        EXPECT(0x56, gbc.readMem(0xc90a));
        // 56 0116
        gbc.setState(0x43f, 0x7bc5, 0xf170, 0x1054, 0x8a0, 0x1fe3, 0x0, 0x0);
        gbc.writeMem(0x43f, { 0x56 });
        gbc.writeMem(0x1fe3, { 0x6b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7bc5, gbc.sp());
        EXPECT(0x440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0117
        gbc.setState(0x9d2e, 0xcbdf, 0xab30, 0x3603, 0xb3ed, 0x75a9, 0x1, 0x0);
        gbc.writeMem(0x75a9, { 0x41 });
        gbc.writeMem(0x9d2e, { 0x56 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcbdf, gbc.sp());
        EXPECT(0x9d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9d2e));
        // 56 0119
        gbc.setState(0x8da2, 0x7d5c, 0x9ce0, 0x4f12, 0x52da, 0xf0f9, 0x0, 0x1);
        gbc.writeMem(0x8da2, { 0x56 });
        gbc.writeMem(0xf0f9, { 0x20 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7d5c, gbc.sp());
        EXPECT(0x8da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8da2));
        EXPECT(0x20, gbc.readMem(0xf0f9));
        // 56 011A
        gbc.setState(0x91a5, 0x625f, 0xd450, 0xc77a, 0x96a5, 0xd98, 0x1, 0x1);
        gbc.writeMem(0xd98, { 0x7c });
        gbc.writeMem(0x91a5, { 0x56 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x625f, gbc.sp());
        EXPECT(0x91a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x91a5));
        // 56 011B
        gbc.setState(0xc808, 0xeb4d, 0x8260, 0xe68e, 0x6e10, 0x9877, 0x0, 0x0);
        gbc.writeMem(0x9877, { 0x2 });
        gbc.writeMem(0xc808, { 0x56 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xeb4d, gbc.sp());
        EXPECT(0xc809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9877));
        EXPECT(0x56, gbc.readMem(0xc808));
        // 56 011C
        gbc.setState(0x4f9f, 0x634e, 0x240, 0x1246, 0xd9aa, 0xd338, 0x0, 0x1);
        gbc.writeMem(0x4f9f, { 0x56 });
        gbc.writeMem(0xd338, { 0x20 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x634e, gbc.sp());
        EXPECT(0x4fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd338));
        // 56 011D
        gbc.setState(0x653b, 0xbdbc, 0x6360, 0x88b5, 0x8c72, 0xfd1f, 0x1, 0x1);
        gbc.writeMem(0x653b, { 0x56 });
        gbc.writeMem(0xfd1f, { 0xf2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbdbc, gbc.sp());
        EXPECT(0x653c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xfd1f));
        // 56 011E
        gbc.setState(0xb0fa, 0xcd04, 0xed50, 0x66e9, 0xbd40, 0xf1a, 0x0, 0x1);
        gbc.writeMem(0xf1a, { 0x7e });
        gbc.writeMem(0xb0fa, { 0x56 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcd04, gbc.sp());
        EXPECT(0xb0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb0fa));
        // 56 011F
        gbc.setState(0x7c09, 0xd360, 0x210, 0x41fe, 0xe79a, 0x103e, 0x0, 0x0);
        gbc.writeMem(0x103e, { 0x6e });
        gbc.writeMem(0x7c09, { 0x56 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd360, gbc.sp());
        EXPECT(0x7c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0120
        gbc.setState(0x1577, 0xf945, 0x69d0, 0x7189, 0x1c1, 0x662, 0x0, 0x1);
        gbc.writeMem(0x662, { 0x9d });
        gbc.writeMem(0x1577, { 0x56 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf945, gbc.sp());
        EXPECT(0x1578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0121
        gbc.setState(0xce94, 0x3ebb, 0xcd40, 0x38c4, 0x4748, 0xeda8, 0x1, 0x0);
        gbc.writeMem(0xce94, { 0x56 });
        gbc.writeMem(0xeda8, { 0x6d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3ebb, gbc.sp());
        EXPECT(0xce95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xce94));
        EXPECT(0x6d, gbc.readMem(0xeda8));
        // 56 0122
        gbc.setState(0x61f5, 0x6af0, 0x9880, 0x319b, 0x978f, 0x5be2, 0x0, 0x0);
        gbc.writeMem(0x5be2, { 0x5e });
        gbc.writeMem(0x61f5, { 0x56 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6af0, gbc.sp());
        EXPECT(0x61f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0123
        gbc.setState(0xb9f1, 0xc87d, 0xe510, 0x40b7, 0xfd57, 0x5af9, 0x1, 0x1);
        gbc.writeMem(0x5af9, { 0xa3 });
        gbc.writeMem(0xb9f1, { 0x56 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc87d, gbc.sp());
        EXPECT(0xb9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb9f1));
        // 56 0124
        gbc.setState(0xb63e, 0xd0c5, 0x8280, 0x89d6, 0x7e56, 0x2454, 0x1, 0x0);
        gbc.writeMem(0x2454, { 0xc7 });
        gbc.writeMem(0xb63e, { 0x56 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd0c5, gbc.sp());
        EXPECT(0xb63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb63e));
        // 56 0125
        gbc.setState(0x7475, 0xd10c, 0xb7f0, 0xaa64, 0xe574, 0x9a2c, 0x0, 0x1);
        gbc.writeMem(0x7475, { 0x56 });
        gbc.writeMem(0x9a2c, { 0xad });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd10c, gbc.sp());
        EXPECT(0x7476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9a2c));
        // 56 0126
        gbc.setState(0x13ad, 0xc8c4, 0x9270, 0x58ab, 0xeeb8, 0x5fa5, 0x0, 0x0);
        gbc.writeMem(0x13ad, { 0x56 });
        gbc.writeMem(0x5fa5, { 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc8c4, gbc.sp());
        EXPECT(0x13ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0128
        gbc.setState(0x6795, 0xe962, 0x2490, 0x8ca3, 0x71cd, 0x706e, 0x0, 0x1);
        gbc.writeMem(0x6795, { 0x56 });
        gbc.writeMem(0x706e, { 0x76 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe962, gbc.sp());
        EXPECT(0x6796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0129
        gbc.setState(0x97fe, 0x8746, 0x5ba0, 0x54aa, 0x9039, 0x63b0, 0x0, 0x1);
        gbc.writeMem(0x63b0, { 0xf6 });
        gbc.writeMem(0x97fe, { 0x56 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8746, gbc.sp());
        EXPECT(0x97ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x97fe));
        // 56 012A
        gbc.setState(0x1579, 0x7181, 0x500, 0xad4, 0x88f8, 0x70a6, 0x0, 0x0);
        gbc.writeMem(0x1579, { 0x56 });
        gbc.writeMem(0x70a6, { 0xb8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7181, gbc.sp());
        EXPECT(0x157a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 012B
        gbc.setState(0xdd36, 0x65e9, 0xdda0, 0x8374, 0x694b, 0xb9f7, 0x0, 0x0);
        gbc.writeMem(0xb9f7, { 0xd8 });
        gbc.writeMem(0xdd36, { 0x56 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x65e9, gbc.sp());
        EXPECT(0xdd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xb9f7));
        EXPECT(0x56, gbc.readMem(0xdd36));
        // 56 012C
        gbc.setState(0xb818, 0xa053, 0xed30, 0xd6ac, 0xa330, 0x2af, 0x1, 0x1);
        gbc.writeMem(0x2af, { 0xb0 });
        gbc.writeMem(0xb818, { 0x56 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa053, gbc.sp());
        EXPECT(0xb819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb818));
        // 56 012D
        gbc.setState(0x4322, 0x4a71, 0xc570, 0xdaab, 0x58e6, 0xc639, 0x0, 0x1);
        gbc.writeMem(0x4322, { 0x56 });
        gbc.writeMem(0xc639, { 0x25 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4a71, gbc.sp());
        EXPECT(0x4323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc639));
        // 56 012E
        gbc.setState(0x85c8, 0xebfe, 0x690, 0x4f84, 0xe72a, 0x761e, 0x0, 0x0);
        gbc.writeMem(0x761e, { 0x82 });
        gbc.writeMem(0x85c8, { 0x56 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xebfe, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x85c8));
        // 56 012F
        gbc.setState(0x6a90, 0xade2, 0xb9a0, 0x355b, 0x951d, 0x6d79, 0x1, 0x0);
        gbc.writeMem(0x6a90, { 0x56 });
        gbc.writeMem(0x6d79, { 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xade2, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0130
        gbc.setState(0x9026, 0xb42b, 0x2590, 0xf156, 0x6277, 0xe9e4, 0x1, 0x0);
        gbc.writeMem(0x9026, { 0x56 });
        gbc.writeMem(0xe9e4, { 0x39 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb42b, gbc.sp());
        EXPECT(0x9027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9026));
        EXPECT(0x39, gbc.readMem(0xe9e4));
        // 56 0131
        gbc.setState(0x59e9, 0x81c4, 0x1c20, 0x50e, 0x4b53, 0xf1d0, 0x1, 0x0);
        gbc.writeMem(0x59e9, { 0x56 });
        gbc.writeMem(0xf1d0, { 0x59 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x81c4, gbc.sp());
        EXPECT(0x59ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xf1d0));
        // 56 0132
        gbc.setState(0x2477, 0x1d65, 0xd40, 0x8b5, 0x4da1, 0x1b79, 0x1, 0x0);
        gbc.writeMem(0x1b79, { 0xb1 });
        gbc.writeMem(0x2477, { 0x56 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1d65, gbc.sp());
        EXPECT(0x2478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0133
        gbc.setState(0x4b8b, 0x4284, 0x1b50, 0x10de, 0x1251, 0x7d19, 0x1, 0x0);
        gbc.writeMem(0x4b8b, { 0x56 });
        gbc.writeMem(0x7d19, { 0xec });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4284, gbc.sp());
        EXPECT(0x4b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0134
        gbc.setState(0xd194, 0x7475, 0xf900, 0x83db, 0x600b, 0xfa4c, 0x0, 0x1);
        gbc.writeMem(0xd194, { 0x56 });
        gbc.writeMem(0xfa4c, { 0x76 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7475, gbc.sp());
        EXPECT(0xd195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd194));
        EXPECT(0x76, gbc.readMem(0xfa4c));
        // 56 0135
        gbc.setState(0x1819, 0x2a91, 0x4a30, 0x5d47, 0xfa02, 0x575a, 0x0, 0x1);
        gbc.writeMem(0x1819, { 0x56 });
        gbc.writeMem(0x575a, { 0x2e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2a91, gbc.sp());
        EXPECT(0x181a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0136
        gbc.setState(0xeeb7, 0x610b, 0x5c40, 0x34f4, 0x8fb8, 0x1feb, 0x1, 0x1);
        gbc.writeMem(0x1feb, { 0x71 });
        gbc.writeMem(0xeeb7, { 0x56 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x610b, gbc.sp());
        EXPECT(0xeeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xeeb7));
        // 56 0137
        gbc.setState(0x77df, 0x4dbb, 0x7ab0, 0xacc, 0x9654, 0x95e0, 0x0, 0x0);
        gbc.writeMem(0x77df, { 0x56 });
        gbc.writeMem(0x95e0, { 0x9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4dbb, gbc.sp());
        EXPECT(0x77e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x95e0));
        // 56 0138
        gbc.setState(0xef6d, 0x6563, 0xe8a0, 0x3469, 0xb678, 0x94c7, 0x0, 0x0);
        gbc.writeMem(0x94c7, { 0x63 });
        gbc.writeMem(0xef6d, { 0x56 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6563, gbc.sp());
        EXPECT(0xef6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x94c7));
        EXPECT(0x56, gbc.readMem(0xef6d));
        // 56 0139
        gbc.setState(0x1eea, 0xf3b4, 0xc8e0, 0xa774, 0x875c, 0x7db1, 0x0, 0x1);
        gbc.writeMem(0x1eea, { 0x56 });
        gbc.writeMem(0x7db1, { 0x86 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf3b4, gbc.sp());
        EXPECT(0x1eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 013A
        gbc.setState(0xc192, 0x509c, 0xc040, 0xeb6, 0x2ff2, 0x5136, 0x0, 0x1);
        gbc.writeMem(0x5136, { 0x3 });
        gbc.writeMem(0xc192, { 0x56 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x509c, gbc.sp());
        EXPECT(0xc193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc192));
        // 56 013B
        gbc.setState(0xedef, 0xd39, 0xb8b0, 0xaa6a, 0x523d, 0x5dd2, 0x0, 0x0);
        gbc.writeMem(0x5dd2, { 0xc7 });
        gbc.writeMem(0xedef, { 0x56 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd39, gbc.sp());
        EXPECT(0xedf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xedef));
        // 56 013C
        gbc.setState(0x11e6, 0xf0f0, 0x2200, 0xb247, 0xb705, 0xd6ce, 0x0, 0x1);
        gbc.writeMem(0x11e6, { 0x56 });
        gbc.writeMem(0xd6ce, { 0x39 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf0f0, gbc.sp());
        EXPECT(0x11e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xd6ce));
        // 56 013D
        gbc.setState(0x6010, 0x5349, 0x8520, 0x48ad, 0x67b7, 0xd457, 0x1, 0x0);
        gbc.writeMem(0x6010, { 0x56 });
        gbc.writeMem(0xd457, { 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5349, gbc.sp());
        EXPECT(0x6011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd457));
        // 56 013E
        gbc.setState(0xb38, 0x211b, 0x1530, 0xb0aa, 0xa961, 0xa443, 0x0, 0x1);
        gbc.writeMem(0xb38, { 0x56 });
        gbc.writeMem(0xa443, { 0xce });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x211b, gbc.sp());
        EXPECT(0xb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa443));
        // 56 013F
        gbc.setState(0x62ce, 0x1c47, 0xf130, 0x1829, 0x50d1, 0xe71d, 0x0, 0x1);
        gbc.writeMem(0x62ce, { 0x56 });
        gbc.writeMem(0xe71d, { 0x3c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1c47, gbc.sp());
        EXPECT(0x62cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe71d));
        // 56 0140
        gbc.setState(0x7fe1, 0xce8e, 0x7cd0, 0x9b51, 0x9957, 0xab2c, 0x1, 0x0);
        gbc.writeMem(0x7fe1, { 0x56 });
        gbc.writeMem(0xab2c, { 0xea });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xce8e, gbc.sp());
        EXPECT(0x7fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xab2c));
        // 56 0141
        gbc.setState(0x74e9, 0x4839, 0xdff0, 0xbde9, 0x406, 0x6378, 0x1, 0x1);
        gbc.writeMem(0x6378, { 0xaa });
        gbc.writeMem(0x74e9, { 0x56 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4839, gbc.sp());
        EXPECT(0x74ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0142
        gbc.setState(0x7205, 0x3c31, 0x22d0, 0x752d, 0xa6bd, 0xf41, 0x0, 0x1);
        gbc.writeMem(0xf41, { 0x8a });
        gbc.writeMem(0x7205, { 0x56 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3c31, gbc.sp());
        EXPECT(0x7206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0143
        gbc.setState(0x1425, 0xcafe, 0x1e30, 0x3de0, 0x1c64, 0x1218, 0x1, 0x1);
        gbc.writeMem(0x1218, { 0x2e });
        gbc.writeMem(0x1425, { 0x56 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcafe, gbc.sp());
        EXPECT(0x1426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0144
        gbc.setState(0xecb5, 0x2c90, 0x3cb0, 0x6d6c, 0x473e, 0x4aa, 0x0, 0x0);
        gbc.writeMem(0x4aa, { 0x33 });
        gbc.writeMem(0xecb5, { 0x56 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2c90, gbc.sp());
        EXPECT(0xecb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xecb5));
        // 56 0145
        gbc.setState(0x33e9, 0x57ea, 0x700, 0x4803, 0x292f, 0x36a1, 0x1, 0x0);
        gbc.writeMem(0x33e9, { 0x56 });
        gbc.writeMem(0x36a1, { 0x55 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x57ea, gbc.sp());
        EXPECT(0x33ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0146
        gbc.setState(0xbd00, 0x65fd, 0x3c10, 0xa2a2, 0xc6f2, 0xd3aa, 0x0, 0x1);
        gbc.writeMem(0xbd00, { 0x56 });
        gbc.writeMem(0xd3aa, { 0x7f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x65fd, gbc.sp());
        EXPECT(0xbd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbd00));
        EXPECT(0x7f, gbc.readMem(0xd3aa));
        // 56 0147
        gbc.setState(0x9fc9, 0x7606, 0xeca0, 0x7a6f, 0x6aaf, 0x4c8, 0x0, 0x0);
        gbc.writeMem(0x4c8, { 0xb1 });
        gbc.writeMem(0x9fc9, { 0x56 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7606, gbc.sp());
        EXPECT(0x9fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9fc9));
        // 56 0148
        gbc.setState(0x6258, 0x1f12, 0xb2f0, 0x96fd, 0x302c, 0xc2ca, 0x0, 0x0);
        gbc.writeMem(0x6258, { 0x56 });
        gbc.writeMem(0xc2ca, { 0xaa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1f12, gbc.sp());
        EXPECT(0x6259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc2ca));
        // 56 0149
        gbc.setState(0xc86f, 0x3434, 0x1480, 0x88ce, 0x715, 0xfb5f, 0x1, 0x0);
        gbc.writeMem(0xc86f, { 0x56 });
        gbc.writeMem(0xfb5f, { 0xd0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3434, gbc.sp());
        EXPECT(0xc870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc86f));
        EXPECT(0xd0, gbc.readMem(0xfb5f));
        // 56 014A
        gbc.setState(0x93c6, 0x8416, 0x5620, 0xf4c4, 0xb3ad, 0x1b35, 0x1, 0x1);
        gbc.writeMem(0x1b35, { 0xe7 });
        gbc.writeMem(0x93c6, { 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8416, gbc.sp());
        EXPECT(0x93c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x93c6));
        // 56 014B
        gbc.setState(0x9cdb, 0x11f6, 0x5390, 0x1e44, 0xa16, 0x50b8, 0x1, 0x0);
        gbc.writeMem(0x50b8, { 0xe6 });
        gbc.writeMem(0x9cdb, { 0x56 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x11f6, gbc.sp());
        EXPECT(0x9cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9cdb));
        // 56 014C
        gbc.setState(0x6416, 0x3224, 0xf0d0, 0x12e9, 0x84c2, 0xf8d1, 0x0, 0x0);
        gbc.writeMem(0x6416, { 0x56 });
        gbc.writeMem(0xf8d1, { 0x9f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3224, gbc.sp());
        EXPECT(0x6417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xf8d1));
        // 56 014D
        gbc.setState(0x64e1, 0xb69b, 0xabf0, 0x5a88, 0x4737, 0xc296, 0x1, 0x0);
        gbc.writeMem(0x64e1, { 0x56 });
        gbc.writeMem(0xc296, { 0x31 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb69b, gbc.sp());
        EXPECT(0x64e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc296));
        // 56 014E
        gbc.setState(0x4fc8, 0xc549, 0x5820, 0xb00, 0x3ba7, 0x6c5b, 0x1, 0x0);
        gbc.writeMem(0x4fc8, { 0x56 });
        gbc.writeMem(0x6c5b, { 0xfa });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc549, gbc.sp());
        EXPECT(0x4fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 014F
        gbc.setState(0x8326, 0x6c75, 0xeef0, 0x6e25, 0xcf93, 0xd163, 0x1, 0x1);
        gbc.writeMem(0x8326, { 0x56 });
        gbc.writeMem(0xd163, { 0x9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6c75, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8326));
        EXPECT(0x9, gbc.readMem(0xd163));
        // 56 0150
        gbc.setState(0xc4e2, 0x4426, 0xb190, 0xc616, 0x3481, 0xfb86, 0x1, 0x1);
        gbc.writeMem(0xc4e2, { 0x56 });
        gbc.writeMem(0xfb86, { 0xdf });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4426, gbc.sp());
        EXPECT(0xc4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc4e2));
        EXPECT(0xdf, gbc.readMem(0xfb86));
        // 56 0151
        gbc.setState(0x342f, 0x48bd, 0x8bc0, 0x8590, 0x8c76, 0xe5a9, 0x1, 0x0);
        gbc.writeMem(0x342f, { 0x56 });
        gbc.writeMem(0xe5a9, { 0x99 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x48bd, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe5a9));
        // 56 0152
        gbc.setState(0x1b41, 0xd73f, 0x94b0, 0xdfda, 0x70c7, 0x3b3b, 0x1, 0x0);
        gbc.writeMem(0x1b41, { 0x56 });
        gbc.writeMem(0x3b3b, { 0x2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd73f, gbc.sp());
        EXPECT(0x1b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0153
        gbc.setState(0x91d0, 0xa554, 0xa8b0, 0x89c1, 0xb73c, 0xa4f8, 0x1, 0x0);
        gbc.writeMem(0x91d0, { 0x56 });
        gbc.writeMem(0xa4f8, { 0x30 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa554, gbc.sp());
        EXPECT(0x91d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x91d0));
        EXPECT(0x30, gbc.readMem(0xa4f8));
        // 56 0154
        gbc.setState(0xd1fc, 0x8f48, 0xec70, 0x1c53, 0x1547, 0x45c0, 0x1, 0x1);
        gbc.writeMem(0x45c0, { 0x48 });
        gbc.writeMem(0xd1fc, { 0x56 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8f48, gbc.sp());
        EXPECT(0xd1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd1fc));
        // 56 0155
        gbc.setState(0x12ed, 0x3854, 0xb690, 0xecc5, 0x6cf4, 0x7e44, 0x1, 0x1);
        gbc.writeMem(0x12ed, { 0x56 });
        gbc.writeMem(0x7e44, { 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3854, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0156
        gbc.setState(0x821d, 0x788d, 0xa10, 0xd0ba, 0x658f, 0x3d35, 0x1, 0x1);
        gbc.writeMem(0x3d35, { 0xcb });
        gbc.writeMem(0x821d, { 0x56 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x788d, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x821d));
        // 56 0157
        gbc.setState(0x4b05, 0xa28c, 0x6610, 0xe07e, 0xbd89, 0x7a38, 0x1, 0x0);
        gbc.writeMem(0x4b05, { 0x56 });
        gbc.writeMem(0x7a38, { 0x87 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa28c, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0158
        gbc.setState(0x57a, 0xa407, 0x1df0, 0x3916, 0xb1f5, 0xc7ee, 0x0, 0x1);
        gbc.writeMem(0x57a, { 0x56 });
        gbc.writeMem(0xc7ee, { 0x4f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa407, gbc.sp());
        EXPECT(0x57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xc7ee));
        // 56 0159
        gbc.setState(0x3eeb, 0x9890, 0x1a40, 0xf43c, 0x8731, 0x608f, 0x0, 0x1);
        gbc.writeMem(0x3eeb, { 0x56 });
        gbc.writeMem(0x608f, { 0x99 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9890, gbc.sp());
        EXPECT(0x3eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 015A
        gbc.setState(0x4d41, 0x4d92, 0x9f40, 0xf828, 0x77d1, 0xdadf, 0x0, 0x1);
        gbc.writeMem(0x4d41, { 0x56 });
        gbc.writeMem(0xdadf, { 0x50 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4d92, gbc.sp());
        EXPECT(0x4d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdadf));
        // 56 015B
        gbc.setState(0x6dae, 0xdcfc, 0xc700, 0xb65b, 0xd2d3, 0x8653, 0x1, 0x1);
        gbc.writeMem(0x6dae, { 0x56 });
        gbc.writeMem(0x8653, { 0xc6 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdcfc, gbc.sp());
        EXPECT(0x6daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8653));
        // 56 015C
        gbc.setState(0xd6cd, 0x74ee, 0x3150, 0x5627, 0x9461, 0xfdf4, 0x0, 0x1);
        gbc.writeMem(0xd6cd, { 0x56 });
        gbc.writeMem(0xfdf4, { 0xc0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0xd6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd6cd));
        EXPECT(0xc0, gbc.readMem(0xfdf4));
        // 56 015D
        gbc.setState(0xb2d3, 0xafc5, 0xd560, 0xc077, 0x756f, 0xf419, 0x1, 0x0);
        gbc.writeMem(0xb2d3, { 0x56 });
        gbc.writeMem(0xf419, { 0x40 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xafc5, gbc.sp());
        EXPECT(0xb2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb2d3));
        EXPECT(0x40, gbc.readMem(0xf419));
        // 56 015E
        gbc.setState(0xc8ec, 0x7f6e, 0x6380, 0xa62d, 0xa244, 0xb33f, 0x1, 0x1);
        gbc.writeMem(0xb33f, { 0x4c });
        gbc.writeMem(0xc8ec, { 0x56 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7f6e, gbc.sp());
        EXPECT(0xc8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb33f));
        EXPECT(0x56, gbc.readMem(0xc8ec));
        // 56 015F
        gbc.setState(0x7763, 0xcb80, 0xaf00, 0xb878, 0x80c2, 0x5610, 0x1, 0x0);
        gbc.writeMem(0x5610, { 0xca });
        gbc.writeMem(0x7763, { 0x56 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcb80, gbc.sp());
        EXPECT(0x7764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0160
        gbc.setState(0x5c58, 0xf766, 0xb4c0, 0xc0e7, 0xd929, 0xf2af, 0x0, 0x0);
        gbc.writeMem(0x5c58, { 0x56 });
        gbc.writeMem(0xf2af, { 0xfe });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf766, gbc.sp());
        EXPECT(0x5c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xf2af));
        // 56 0162
        gbc.setState(0x510f, 0x2a6a, 0x8c20, 0xe672, 0xf6e8, 0x98a6, 0x1, 0x0);
        gbc.writeMem(0x510f, { 0x56 });
        gbc.writeMem(0x98a6, { 0x1f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2a6a, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x98a6));
        // 56 0164
        gbc.setState(0x22d8, 0xfd5a, 0xf3d0, 0xb6e9, 0x6352, 0xbe88, 0x1, 0x0);
        gbc.writeMem(0x22d8, { 0x56 });
        gbc.writeMem(0xbe88, { 0x96 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfd5a, gbc.sp());
        EXPECT(0x22d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xbe88));
        // 56 0165
        gbc.setState(0xcc5c, 0x3dc8, 0xb5d0, 0xad98, 0x3c5f, 0x8ba3, 0x1, 0x1);
        gbc.writeMem(0x8ba3, { 0x88 });
        gbc.writeMem(0xcc5c, { 0x56 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3dc8, gbc.sp());
        EXPECT(0xcc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8ba3));
        EXPECT(0x56, gbc.readMem(0xcc5c));
        // 56 0166
        gbc.setState(0x1d41, 0xba50, 0x7100, 0x32c9, 0x4985, 0x2265, 0x0, 0x0);
        gbc.writeMem(0x1d41, { 0x56 });
        gbc.writeMem(0x2265, { 0x2d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xba50, gbc.sp());
        EXPECT(0x1d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0167
        gbc.setState(0xe7f8, 0x8207, 0x4a00, 0x8b4a, 0xc878, 0xb190, 0x1, 0x0);
        gbc.writeMem(0xb190, { 0xc3 });
        gbc.writeMem(0xe7f8, { 0x56 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8207, gbc.sp());
        EXPECT(0xe7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb190));
        EXPECT(0x56, gbc.readMem(0xe7f8));
        // 56 0168
        gbc.setState(0xcb3f, 0xd751, 0x9cd0, 0xa971, 0x6254, 0x732e, 0x1, 0x1);
        gbc.writeMem(0x732e, { 0xd2 });
        gbc.writeMem(0xcb3f, { 0x56 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd751, gbc.sp());
        EXPECT(0xcb40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcb3f));
        // 56 0169
        gbc.setState(0x6bc4, 0x7345, 0x6a90, 0xfb18, 0x8896, 0x667a, 0x1, 0x0);
        gbc.writeMem(0x667a, { 0xd3 });
        gbc.writeMem(0x6bc4, { 0x56 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7345, gbc.sp());
        EXPECT(0x6bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 016A
        gbc.setState(0x61c2, 0xd121, 0x5670, 0x6070, 0xc15d, 0x23d0, 0x1, 0x0);
        gbc.writeMem(0x23d0, { 0xa9 });
        gbc.writeMem(0x61c2, { 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd121, gbc.sp());
        EXPECT(0x61c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 016B
        gbc.setState(0x3b57, 0x8c0d, 0x79a0, 0x924d, 0x2505, 0x14f6, 0x0, 0x0);
        gbc.writeMem(0x14f6, { 0xe1 });
        gbc.writeMem(0x3b57, { 0x56 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8c0d, gbc.sp());
        EXPECT(0x3b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 016C
        gbc.setState(0xb16, 0x61c2, 0xd040, 0x3575, 0x4b15, 0x31ce, 0x1, 0x1);
        gbc.writeMem(0xb16, { 0x56 });
        gbc.writeMem(0x31ce, { 0xfc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x61c2, gbc.sp());
        EXPECT(0xb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 016D
        gbc.setState(0xa65a, 0xd744, 0x55a0, 0xa8c9, 0xd09, 0x6518, 0x1, 0x0);
        gbc.writeMem(0x6518, { 0x68 });
        gbc.writeMem(0xa65a, { 0x56 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd744, gbc.sp());
        EXPECT(0xa65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa65a));
        // 56 016E
        gbc.setState(0x44ce, 0x9b98, 0xdfb0, 0x7d9d, 0x896b, 0x320c, 0x0, 0x0);
        gbc.writeMem(0x320c, { 0x54 });
        gbc.writeMem(0x44ce, { 0x56 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9b98, gbc.sp());
        EXPECT(0x44cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 016F
        gbc.setState(0x6ad9, 0xd06e, 0x8ed0, 0xd3db, 0xc9a0, 0xa12c, 0x1, 0x1);
        gbc.writeMem(0x6ad9, { 0x56 });
        gbc.writeMem(0xa12c, { 0x44 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd06e, gbc.sp());
        EXPECT(0x6ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa12c));
        // 56 0170
        gbc.setState(0x57c7, 0xae43, 0x8c60, 0x12a8, 0x7127, 0x9243, 0x1, 0x1);
        gbc.writeMem(0x57c7, { 0x56 });
        gbc.writeMem(0x9243, { 0xd2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xae43, gbc.sp());
        EXPECT(0x57c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9243));
        // 56 0171
        gbc.setState(0x2ac5, 0x4f4a, 0x6e80, 0x53a0, 0x4155, 0xfcb3, 0x1, 0x0);
        gbc.writeMem(0x2ac5, { 0x56 });
        gbc.writeMem(0xfcb3, { 0x84 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4f4a, gbc.sp());
        EXPECT(0x2ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xfcb3));
        // 56 0172
        gbc.setState(0x1954, 0x1e86, 0xc4d0, 0xa4b, 0x8166, 0x8ee5, 0x1, 0x0);
        gbc.writeMem(0x1954, { 0x56 });
        gbc.writeMem(0x8ee5, { 0xad });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1e86, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x8ee5));
        // 56 0174
        gbc.setState(0xaa4c, 0x4796, 0x4520, 0xac61, 0x59bd, 0x6e6d, 0x0, 0x1);
        gbc.writeMem(0x6e6d, { 0x4a });
        gbc.writeMem(0xaa4c, { 0x56 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4796, gbc.sp());
        EXPECT(0xaa4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xaa4c));
        // 56 0175
        gbc.setState(0x6c, 0x4d28, 0xc260, 0x5d22, 0xfff1, 0x5cc0, 0x1, 0x0);
        gbc.writeMem(0x6c, { 0x56 });
        gbc.writeMem(0x5cc0, { 0x39 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4d28, gbc.sp());
        EXPECT(0x6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0176
        gbc.setState(0x1be6, 0x56c3, 0x1790, 0xf8c4, 0xb960, 0x5231, 0x0, 0x1);
        gbc.writeMem(0x1be6, { 0x56 });
        gbc.writeMem(0x5231, { 0x8b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x56c3, gbc.sp());
        EXPECT(0x1be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0177
        gbc.setState(0x2d65, 0x3d4b, 0x7f10, 0xa64d, 0x6bc3, 0x8554, 0x1, 0x0);
        gbc.writeMem(0x2d65, { 0x56 });
        gbc.writeMem(0x8554, { 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3d4b, gbc.sp());
        EXPECT(0x2d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8554));
        // 56 0178
        gbc.setState(0x3259, 0x7268, 0x2f50, 0xe9a2, 0x96de, 0xed8f, 0x1, 0x1);
        gbc.writeMem(0x3259, { 0x56 });
        gbc.writeMem(0xed8f, { 0xb0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7268, gbc.sp());
        EXPECT(0x325a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xed8f));
        // 56 0179
        gbc.setState(0x54dd, 0x5b6, 0x570, 0x4047, 0xc94c, 0x18dd, 0x1, 0x0);
        gbc.writeMem(0x18dd, { 0x10 });
        gbc.writeMem(0x54dd, { 0x56 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5b6, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 017A
        gbc.setState(0x2f11, 0x2f36, 0x4f70, 0x457, 0x8796, 0xc43b, 0x1, 0x1);
        gbc.writeMem(0x2f11, { 0x56 });
        gbc.writeMem(0xc43b, { 0xa3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0x2f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc43b));
        // 56 017B
        gbc.setState(0x7d07, 0x341a, 0x50d0, 0x2bf0, 0xd530, 0x29db, 0x0, 0x0);
        gbc.writeMem(0x29db, { 0x49 });
        gbc.writeMem(0x7d07, { 0x56 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x341a, gbc.sp());
        EXPECT(0x7d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 017C
        gbc.setState(0xae17, 0x7d91, 0xb0d0, 0x8f0, 0x23a9, 0x1026, 0x1, 0x1);
        gbc.writeMem(0x1026, { 0x91 });
        gbc.writeMem(0xae17, { 0x56 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7d91, gbc.sp());
        EXPECT(0xae18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xae17));
        // 56 017E
        gbc.setState(0x558f, 0xd299, 0x5a60, 0x281e, 0x45ee, 0xcdfa, 0x1, 0x1);
        gbc.writeMem(0x558f, { 0x56 });
        gbc.writeMem(0xcdfa, { 0x8c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd299, gbc.sp());
        EXPECT(0x5590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcdfa));
        // 56 017F
        gbc.setState(0x2e33, 0xc9ff, 0x6370, 0x5286, 0x6f5a, 0x61a0, 0x0, 0x1);
        gbc.writeMem(0x2e33, { 0x56 });
        gbc.writeMem(0x61a0, { 0xdc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc9ff, gbc.sp());
        EXPECT(0x2e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0180
        gbc.setState(0x86b, 0x67a5, 0xfef0, 0x68b3, 0xd3ff, 0xecab, 0x0, 0x0);
        gbc.writeMem(0x86b, { 0x56 });
        gbc.writeMem(0xecab, { 0x99 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x67a5, gbc.sp());
        EXPECT(0x86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xecab));
        // 56 0181
        gbc.setState(0x7e2d, 0xcedc, 0x5930, 0x3f6f, 0xa2e2, 0x9626, 0x1, 0x1);
        gbc.writeMem(0x7e2d, { 0x56 });
        gbc.writeMem(0x9626, { 0x6d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcedc, gbc.sp());
        EXPECT(0x7e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9626));
        // 56 0182
        gbc.setState(0x4f87, 0x69c8, 0xb270, 0xe58e, 0xe568, 0x6dfb, 0x1, 0x0);
        gbc.writeMem(0x4f87, { 0x56 });
        gbc.writeMem(0x6dfb, { 0xe5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0x4f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0183
        gbc.setState(0x3f8a, 0xb45b, 0x93a0, 0xd868, 0x75ec, 0x2b25, 0x0, 0x0);
        gbc.writeMem(0x2b25, { 0x7f });
        gbc.writeMem(0x3f8a, { 0x56 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb45b, gbc.sp());
        EXPECT(0x3f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0184
        gbc.setState(0xc91b, 0xe3a4, 0x9660, 0x4d4b, 0x4180, 0x6eec, 0x1, 0x1);
        gbc.writeMem(0x6eec, { 0xc6 });
        gbc.writeMem(0xc91b, { 0x56 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe3a4, gbc.sp());
        EXPECT(0xc91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc91b));
        // 56 0185
        gbc.setState(0xdc94, 0xc368, 0xcc60, 0xc78a, 0x5556, 0xb3f9, 0x1, 0x0);
        gbc.writeMem(0xb3f9, { 0x21 });
        gbc.writeMem(0xdc94, { 0x56 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc368, gbc.sp());
        EXPECT(0xdc95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb3f9));
        EXPECT(0x56, gbc.readMem(0xdc94));
        // 56 0186
        gbc.setState(0xa25a, 0x97ba, 0xfb10, 0x30ed, 0x84c0, 0xa38a, 0x0, 0x0);
        gbc.writeMem(0xa25a, { 0x56 });
        gbc.writeMem(0xa38a, { 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x97ba, gbc.sp());
        EXPECT(0xa25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa25a));
        EXPECT(0xe9, gbc.readMem(0xa38a));
        // 56 0187
        gbc.setState(0x761a, 0xf5e7, 0xf140, 0x606a, 0x4e29, 0xaceb, 0x0, 0x1);
        gbc.writeMem(0x761a, { 0x56 });
        gbc.writeMem(0xaceb, { 0xf5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf5e7, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xaceb));
        // 56 0188
        gbc.setState(0x6b2d, 0x4879, 0x3e10, 0x924c, 0x22b9, 0xc64e, 0x1, 0x0);
        gbc.writeMem(0x6b2d, { 0x56 });
        gbc.writeMem(0xc64e, { 0x78 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4879, gbc.sp());
        EXPECT(0x6b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc64e));
        // 56 0189
        gbc.setState(0x45b3, 0x8d78, 0x59f0, 0xe2be, 0xc277, 0xde10, 0x1, 0x1);
        gbc.writeMem(0x45b3, { 0x56 });
        gbc.writeMem(0xde10, { 0x41 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8d78, gbc.sp());
        EXPECT(0x45b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xde10));
        // 56 018A
        gbc.setState(0x10d6, 0x271e, 0x7c30, 0xc10d, 0x2a49, 0xdd4b, 0x1, 0x0);
        gbc.writeMem(0x10d6, { 0x56 });
        gbc.writeMem(0xdd4b, { 0xed });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x271e, gbc.sp());
        EXPECT(0x10d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xdd4b));
        // 56 018B
        gbc.setState(0x31b5, 0x546, 0xd820, 0x48bc, 0x5734, 0x3066, 0x1, 0x0);
        gbc.writeMem(0x3066, { 0x49 });
        gbc.writeMem(0x31b5, { 0x56 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x546, gbc.sp());
        EXPECT(0x31b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 018C
        gbc.setState(0xa7c9, 0xe40f, 0x3460, 0x3c0b, 0x39eb, 0x7215, 0x0, 0x1);
        gbc.writeMem(0x7215, { 0x73 });
        gbc.writeMem(0xa7c9, { 0x56 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe40f, gbc.sp());
        EXPECT(0xa7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa7c9));
        // 56 018D
        gbc.setState(0x999f, 0x3e5e, 0xa60, 0x9518, 0xc0ee, 0xa5c7, 0x0, 0x1);
        gbc.writeMem(0x999f, { 0x56 });
        gbc.writeMem(0xa5c7, { 0xda });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e5e, gbc.sp());
        EXPECT(0x99a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x999f));
        EXPECT(0xda, gbc.readMem(0xa5c7));
        // 56 018E
        gbc.setState(0x3c3b, 0x43f9, 0x30d0, 0x6feb, 0x4dcb, 0x398e, 0x0, 0x0);
        gbc.writeMem(0x398e, { 0x69 });
        gbc.writeMem(0x3c3b, { 0x56 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x43f9, gbc.sp());
        EXPECT(0x3c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 018F
        gbc.setState(0x69df, 0x3496, 0x3680, 0x783d, 0xb309, 0xa49e, 0x1, 0x1);
        gbc.writeMem(0x69df, { 0x56 });
        gbc.writeMem(0xa49e, { 0xc0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3496, gbc.sp());
        EXPECT(0x69e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa49e));
        // 56 0190
        gbc.setState(0x227b, 0xb44b, 0x97c0, 0x34e2, 0xe8c7, 0xb9a0, 0x1, 0x1);
        gbc.writeMem(0x227b, { 0x56 });
        gbc.writeMem(0xb9a0, { 0x1a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb44b, gbc.sp());
        EXPECT(0x227c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb9a0));
        // 56 0191
        gbc.setState(0x8ed, 0x511a, 0x9f70, 0xf984, 0x3630, 0x94a2, 0x1, 0x0);
        gbc.writeMem(0x8ed, { 0x56 });
        gbc.writeMem(0x94a2, { 0x48 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x511a, gbc.sp());
        EXPECT(0x8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x94a2));
        // 56 0192
        gbc.setState(0x69ef, 0x83db, 0x20a0, 0x75dc, 0x28ce, 0x5618, 0x1, 0x1);
        gbc.writeMem(0x5618, { 0x14 });
        gbc.writeMem(0x69ef, { 0x56 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x83db, gbc.sp());
        EXPECT(0x69f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0193
        gbc.setState(0x6c41, 0x63a, 0xcd80, 0xd980, 0x8eb2, 0xa63b, 0x1, 0x0);
        gbc.writeMem(0x6c41, { 0x56 });
        gbc.writeMem(0xa63b, { 0xb1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x63a, gbc.sp());
        EXPECT(0x6c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xa63b));
        // 56 0194
        gbc.setState(0x1999, 0x56b3, 0x4730, 0x47ba, 0xfdf0, 0x35dd, 0x1, 0x0);
        gbc.writeMem(0x1999, { 0x56 });
        gbc.writeMem(0x35dd, { 0x2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x56b3, gbc.sp());
        EXPECT(0x199a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0195
        gbc.setState(0x554c, 0x648b, 0x9d50, 0xcf62, 0x5746, 0x82c5, 0x1, 0x0);
        gbc.writeMem(0x554c, { 0x56 });
        gbc.writeMem(0x82c5, { 0xdc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x648b, gbc.sp());
        EXPECT(0x554d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x82c5));
        // 56 0196
        gbc.setState(0xdbf0, 0xd5ed, 0x7af0, 0xca79, 0xf918, 0xb95f, 0x0, 0x0);
        gbc.writeMem(0xb95f, { 0x8e });
        gbc.writeMem(0xdbf0, { 0x56 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd5ed, gbc.sp());
        EXPECT(0xdbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb95f));
        EXPECT(0x56, gbc.readMem(0xdbf0));
        // 56 0197
        gbc.setState(0x4038, 0x89f1, 0xf0d0, 0x961e, 0x1a40, 0x77ee, 0x0, 0x1);
        gbc.writeMem(0x4038, { 0x56 });
        gbc.writeMem(0x77ee, { 0x70 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x89f1, gbc.sp());
        EXPECT(0x4039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0198
        gbc.setState(0x9e0d, 0x4926, 0xe7f0, 0x6cb4, 0x8e3b, 0x6e7a, 0x0, 0x1);
        gbc.writeMem(0x6e7a, { 0x9f });
        gbc.writeMem(0x9e0d, { 0x56 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4926, gbc.sp());
        EXPECT(0x9e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9e0d));
        // 56 0199
        gbc.setState(0x7aaa, 0x1148, 0x2150, 0x34bf, 0x2ab9, 0x6401, 0x1, 0x0);
        gbc.writeMem(0x6401, { 0xa5 });
        gbc.writeMem(0x7aaa, { 0x56 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1148, gbc.sp());
        EXPECT(0x7aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 019A
        gbc.setState(0x772, 0xce4d, 0xc3b0, 0xadfd, 0xd5c8, 0xd9fb, 0x1, 0x0);
        gbc.writeMem(0x772, { 0x56 });
        gbc.writeMem(0xd9fb, { 0xf2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xce4d, gbc.sp());
        EXPECT(0x773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xd9fb));
        // 56 019C
        gbc.setState(0xba62, 0x8c4f, 0x11b0, 0x30d9, 0xa77, 0x99f8, 0x0, 0x1);
        gbc.writeMem(0x99f8, { 0x4d });
        gbc.writeMem(0xba62, { 0x56 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8c4f, gbc.sp());
        EXPECT(0xba63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x99f8));
        EXPECT(0x56, gbc.readMem(0xba62));
        // 56 019D
        gbc.setState(0xe6a6, 0xe59, 0x1020, 0xc51e, 0x9e53, 0x9bab, 0x1, 0x0);
        gbc.writeMem(0x9bab, { 0x40 });
        gbc.writeMem(0xe6a6, { 0x56 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe59, gbc.sp());
        EXPECT(0xe6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9bab));
        EXPECT(0x56, gbc.readMem(0xe6a6));
        // 56 019E
        gbc.setState(0x7d5e, 0x8841, 0x37c0, 0x1d35, 0xe291, 0x381d, 0x1, 0x0);
        gbc.writeMem(0x381d, { 0xcf });
        gbc.writeMem(0x7d5e, { 0x56 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8841, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 019F
        gbc.setState(0x224, 0xa7ec, 0x6c60, 0x2ba3, 0xd3f1, 0xbf9e, 0x1, 0x0);
        gbc.writeMem(0x224, { 0x56 });
        gbc.writeMem(0xbf9e, { 0xc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa7ec, gbc.sp());
        EXPECT(0x225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbf9e));
        // 56 01A0
        gbc.setState(0xef9, 0xbd8c, 0xfe50, 0xbc99, 0x5573, 0xcbe5, 0x0, 0x1);
        gbc.writeMem(0xef9, { 0x56 });
        gbc.writeMem(0xcbe5, { 0xcd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbd8c, gbc.sp());
        EXPECT(0xefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xcbe5));
        // 56 01A1
        gbc.setState(0xd3a5, 0xe0fa, 0x75f0, 0x7d6e, 0x4df, 0x31fb, 0x0, 0x1);
        gbc.writeMem(0x31fb, { 0xe0 });
        gbc.writeMem(0xd3a5, { 0x56 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe0fa, gbc.sp());
        EXPECT(0xd3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd3a5));
        // 56 01A2
        gbc.setState(0xd76f, 0xdedd, 0x5230, 0xf371, 0x1a46, 0x5ff8, 0x0, 0x1);
        gbc.writeMem(0x5ff8, { 0x33 });
        gbc.writeMem(0xd76f, { 0x56 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdedd, gbc.sp());
        EXPECT(0xd770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd76f));
        // 56 01A3
        gbc.setState(0xca5d, 0x8c87, 0xf070, 0xcbc0, 0x23f2, 0xfc78, 0x1, 0x1);
        gbc.writeMem(0xca5d, { 0x56 });
        gbc.writeMem(0xfc78, { 0xeb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8c87, gbc.sp());
        EXPECT(0xca5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xca5d));
        EXPECT(0xeb, gbc.readMem(0xfc78));
        // 56 01A4
        gbc.setState(0xad0a, 0xe499, 0x5410, 0x7cf3, 0x93ae, 0x5601, 0x1, 0x0);
        gbc.writeMem(0x5601, { 0x63 });
        gbc.writeMem(0xad0a, { 0x56 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe499, gbc.sp());
        EXPECT(0xad0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xad0a));
        // 56 01A5
        gbc.setState(0xd7f4, 0x3a1f, 0x3a30, 0x5061, 0x8f1a, 0xa662, 0x1, 0x0);
        gbc.writeMem(0xa662, { 0x55 });
        gbc.writeMem(0xd7f4, { 0x56 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3a1f, gbc.sp());
        EXPECT(0xd7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa662));
        EXPECT(0x56, gbc.readMem(0xd7f4));
        // 56 01A6
        gbc.setState(0xc551, 0x1290, 0x7220, 0xb226, 0x57ca, 0x3750, 0x1, 0x1);
        gbc.writeMem(0x3750, { 0x81 });
        gbc.writeMem(0xc551, { 0x56 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1290, gbc.sp());
        EXPECT(0xc552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc551));
        // 56 01A7
        gbc.setState(0xbeb8, 0x3d1e, 0xe030, 0xdb6f, 0xe42, 0x2c54, 0x1, 0x1);
        gbc.writeMem(0x2c54, { 0xa4 });
        gbc.writeMem(0xbeb8, { 0x56 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3d1e, gbc.sp());
        EXPECT(0xbeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbeb8));
        // 56 01A8
        gbc.setState(0x8ea4, 0x39c9, 0x7a40, 0x58f3, 0xf922, 0x8fb4, 0x1, 0x1);
        gbc.writeMem(0x8ea4, { 0x56 });
        gbc.writeMem(0x8fb4, { 0xbb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x39c9, gbc.sp());
        EXPECT(0x8ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8ea4));
        EXPECT(0xbb, gbc.readMem(0x8fb4));
        // 56 01A9
        gbc.setState(0x9707, 0x4052, 0x1ff0, 0xdb6f, 0x536c, 0xb536, 0x1, 0x0);
        gbc.writeMem(0x9707, { 0x56 });
        gbc.writeMem(0xb536, { 0x79 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4052, gbc.sp());
        EXPECT(0x9708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9707));
        EXPECT(0x79, gbc.readMem(0xb536));
        // 56 01AA
        gbc.setState(0x99e1, 0xcaae, 0xf640, 0x4e10, 0x1db4, 0xd7e6, 0x0, 0x1);
        gbc.writeMem(0x99e1, { 0x56 });
        gbc.writeMem(0xd7e6, { 0xce });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcaae, gbc.sp());
        EXPECT(0x99e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x99e1));
        EXPECT(0xce, gbc.readMem(0xd7e6));
        // 56 01AB
        gbc.setState(0x98d7, 0x5a8f, 0x7260, 0xea1e, 0xac8, 0x6d2, 0x0, 0x1);
        gbc.writeMem(0x6d2, { 0xae });
        gbc.writeMem(0x98d7, { 0x56 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5a8f, gbc.sp());
        EXPECT(0x98d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x98d7));
        // 56 01AC
        gbc.setState(0x8fee, 0x1f2c, 0x63b0, 0x84d3, 0xf65d, 0xb75e, 0x0, 0x1);
        gbc.writeMem(0x8fee, { 0x56 });
        gbc.writeMem(0xb75e, { 0xf1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1f2c, gbc.sp());
        EXPECT(0x8fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8fee));
        EXPECT(0xf1, gbc.readMem(0xb75e));
        // 56 01AD
        gbc.setState(0xa9da, 0x4f68, 0x500, 0x1ef, 0x1006, 0xe9f1, 0x0, 0x1);
        gbc.writeMem(0xa9da, { 0x56 });
        gbc.writeMem(0xe9f1, { 0xc6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4f68, gbc.sp());
        EXPECT(0xa9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa9da));
        EXPECT(0xc6, gbc.readMem(0xe9f1));
        // 56 01AF
        gbc.setState(0xae85, 0xa6ab, 0xed50, 0x2f31, 0xe6f0, 0x5df9, 0x0, 0x0);
        gbc.writeMem(0x5df9, { 0xcd });
        gbc.writeMem(0xae85, { 0x56 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa6ab, gbc.sp());
        EXPECT(0xae86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xae85));
        // 56 01B0
        gbc.setState(0xc928, 0x5c16, 0x1c20, 0xa8a7, 0x442a, 0xc64, 0x1, 0x1);
        gbc.writeMem(0xc64, { 0xc });
        gbc.writeMem(0xc928, { 0x56 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5c16, gbc.sp());
        EXPECT(0xc929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc928));
        // 56 01B1
        gbc.setState(0xefba, 0x8407, 0xe170, 0x92db, 0x1154, 0x3f2e, 0x1, 0x0);
        gbc.writeMem(0x3f2e, { 0x79 });
        gbc.writeMem(0xefba, { 0x56 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8407, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xefba));
        // 56 01B2
        gbc.setState(0x3c4, 0x8dca, 0x43e0, 0x596b, 0x1af1, 0x406f, 0x0, 0x0);
        gbc.writeMem(0x3c4, { 0x56 });
        gbc.writeMem(0x406f, { 0x69 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8dca, gbc.sp());
        EXPECT(0x3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01B3
        gbc.setState(0x2921, 0xd144, 0x830, 0xc60b, 0x4c0f, 0x1557, 0x1, 0x1);
        gbc.writeMem(0x1557, { 0xa0 });
        gbc.writeMem(0x2921, { 0x56 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd144, gbc.sp());
        EXPECT(0x2922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01B4
        gbc.setState(0x312f, 0x1017, 0x9f80, 0x6f2f, 0xde19, 0x89e, 0x1, 0x0);
        gbc.writeMem(0x89e, { 0xa8 });
        gbc.writeMem(0x312f, { 0x56 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1017, gbc.sp());
        EXPECT(0x3130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01B5
        gbc.setState(0x538, 0x75d8, 0x1550, 0x3ed6, 0x68f6, 0x3bd, 0x1, 0x1);
        gbc.writeMem(0x3bd, { 0xe5 });
        gbc.writeMem(0x538, { 0x56 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x75d8, gbc.sp());
        EXPECT(0x539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01B6
        gbc.setState(0xc1d5, 0x16b0, 0x2c40, 0xe8b, 0x17f9, 0x610e, 0x0, 0x1);
        gbc.writeMem(0x610e, { 0x4 });
        gbc.writeMem(0xc1d5, { 0x56 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x16b0, gbc.sp());
        EXPECT(0xc1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc1d5));
        // 56 01B7
        gbc.setState(0x3c62, 0xbbfa, 0x1f60, 0x5136, 0x7778, 0x67ee, 0x1, 0x0);
        gbc.writeMem(0x3c62, { 0x56 });
        gbc.writeMem(0x67ee, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbbfa, gbc.sp());
        EXPECT(0x3c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01B8
        gbc.setState(0xd2ac, 0x30c1, 0xa420, 0xce11, 0x2b27, 0x93c1, 0x0, 0x0);
        gbc.writeMem(0x93c1, { 0xaa });
        gbc.writeMem(0xd2ac, { 0x56 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x30c1, gbc.sp());
        EXPECT(0xd2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x93c1));
        EXPECT(0x56, gbc.readMem(0xd2ac));
        // 56 01B9
        gbc.setState(0x2b2e, 0x8799, 0xedd0, 0xa1f2, 0xd4f4, 0x2099, 0x1, 0x0);
        gbc.writeMem(0x2099, { 0xce });
        gbc.writeMem(0x2b2e, { 0x56 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8799, gbc.sp());
        EXPECT(0x2b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01BA
        gbc.setState(0x3259, 0x29fa, 0xf4f0, 0x9dcf, 0x55ac, 0x1c37, 0x1, 0x1);
        gbc.writeMem(0x1c37, { 0x16 });
        gbc.writeMem(0x3259, { 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x29fa, gbc.sp());
        EXPECT(0x325a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01BB
        gbc.setState(0xce32, 0x5487, 0xb600, 0x6cdb, 0xd15e, 0xc2b7, 0x1, 0x0);
        gbc.writeMem(0xc2b7, { 0x66 });
        gbc.writeMem(0xce32, { 0x56 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5487, gbc.sp());
        EXPECT(0xce33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc2b7));
        EXPECT(0x56, gbc.readMem(0xce32));
        // 56 01BC
        gbc.setState(0xa400, 0xd67c, 0x76e0, 0x46e0, 0x1164, 0x2c56, 0x0, 0x1);
        gbc.writeMem(0x2c56, { 0x45 });
        gbc.writeMem(0xa400, { 0x56 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd67c, gbc.sp());
        EXPECT(0xa401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa400));
        // 56 01BD
        gbc.setState(0x3bbe, 0x407f, 0x2380, 0xade1, 0x5b2, 0x7a81, 0x0, 0x1);
        gbc.writeMem(0x3bbe, { 0x56 });
        gbc.writeMem(0x7a81, { 0x2e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x407f, gbc.sp());
        EXPECT(0x3bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01BE
        gbc.setState(0x2e10, 0x4973, 0x630, 0xa3c8, 0xcb40, 0x2827, 0x1, 0x1);
        gbc.writeMem(0x2827, { 0x58 });
        gbc.writeMem(0x2e10, { 0x56 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4973, gbc.sp());
        EXPECT(0x2e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01BF
        gbc.setState(0xc2d2, 0xe392, 0x5f70, 0x8dd5, 0x4441, 0xabcd, 0x0, 0x1);
        gbc.writeMem(0xabcd, { 0x70 });
        gbc.writeMem(0xc2d2, { 0x56 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe392, gbc.sp());
        EXPECT(0xc2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xabcd));
        EXPECT(0x56, gbc.readMem(0xc2d2));
        // 56 01C0
        gbc.setState(0xa5ca, 0xb68d, 0x1010, 0xdc91, 0x9c6d, 0xc63, 0x0, 0x0);
        gbc.writeMem(0xc63, { 0x3b });
        gbc.writeMem(0xa5ca, { 0x56 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb68d, gbc.sp());
        EXPECT(0xa5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa5ca));
        // 56 01C1
        gbc.setState(0x740, 0x8ca7, 0xf90, 0x44eb, 0x138a, 0x2acb, 0x1, 0x0);
        gbc.writeMem(0x740, { 0x56 });
        gbc.writeMem(0x2acb, { 0x2e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8ca7, gbc.sp());
        EXPECT(0x741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01C2
        gbc.setState(0xd91b, 0x17, 0x6770, 0x8d14, 0x3d63, 0xb2a, 0x0, 0x1);
        gbc.writeMem(0xb2a, { 0xb3 });
        gbc.writeMem(0xd91b, { 0x56 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x17, gbc.sp());
        EXPECT(0xd91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd91b));
        // 56 01C3
        gbc.setState(0xc68b, 0xaee0, 0x1810, 0x284b, 0x307e, 0x3579, 0x1, 0x1);
        gbc.writeMem(0x3579, { 0x6c });
        gbc.writeMem(0xc68b, { 0x56 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaee0, gbc.sp());
        EXPECT(0xc68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc68b));
        // 56 01C4
        gbc.setState(0x1ed3, 0xe02c, 0x8020, 0x1fa2, 0x8041, 0xbecc, 0x0, 0x1);
        gbc.writeMem(0x1ed3, { 0x56 });
        gbc.writeMem(0xbecc, { 0x39 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe02c, gbc.sp());
        EXPECT(0x1ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xbecc));
        // 56 01C5
        gbc.setState(0xa67f, 0x5c3, 0xac00, 0x5f50, 0x91fd, 0xb712, 0x0, 0x0);
        gbc.writeMem(0xa67f, { 0x56 });
        gbc.writeMem(0xb712, { 0xb8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5c3, gbc.sp());
        EXPECT(0xa680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa67f));
        EXPECT(0xb8, gbc.readMem(0xb712));
        // 56 01C6
        gbc.setState(0xde31, 0x36bc, 0x2460, 0xae41, 0xe3b5, 0x3a6a, 0x1, 0x1);
        gbc.writeMem(0x3a6a, { 0xe });
        gbc.writeMem(0xde31, { 0x56 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x36bc, gbc.sp());
        EXPECT(0xde32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xde31));
        // 56 01C8
        gbc.setState(0xee5c, 0xc418, 0x9430, 0x5e45, 0x189c, 0x5b3c, 0x0, 0x0);
        gbc.writeMem(0x5b3c, { 0x13 });
        gbc.writeMem(0xee5c, { 0x56 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc418, gbc.sp());
        EXPECT(0xee5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xee5c));
        // 56 01C9
        gbc.setState(0xccc9, 0x185c, 0x530, 0x165a, 0x38b7, 0xb13, 0x1, 0x0);
        gbc.writeMem(0xb13, { 0x78 });
        gbc.writeMem(0xccc9, { 0x56 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x185c, gbc.sp());
        EXPECT(0xccca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xccc9));
        // 56 01CA
        gbc.setState(0x697e, 0x7ba1, 0x83a0, 0xe19d, 0x9f7, 0x52b9, 0x0, 0x0);
        gbc.writeMem(0x52b9, { 0x1c });
        gbc.writeMem(0x697e, { 0x56 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7ba1, gbc.sp());
        EXPECT(0x697f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01CB
        gbc.setState(0xa29f, 0xcddd, 0x8bd0, 0x2762, 0x4d4, 0xf124, 0x0, 0x1);
        gbc.writeMem(0xa29f, { 0x56 });
        gbc.writeMem(0xf124, { 0x4c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcddd, gbc.sp());
        EXPECT(0xa2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa29f));
        EXPECT(0x4c, gbc.readMem(0xf124));
        // 56 01CC
        gbc.setState(0x337a, 0x17ef, 0x9390, 0x700e, 0x9f6, 0x9558, 0x0, 0x0);
        gbc.writeMem(0x337a, { 0x56 });
        gbc.writeMem(0x9558, { 0x37 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x17ef, gbc.sp());
        EXPECT(0x337b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9558));
        // 56 01CD
        gbc.setState(0x4acf, 0xf53a, 0x7280, 0x1871, 0x1d9e, 0xd0ee, 0x0, 0x1);
        gbc.writeMem(0x4acf, { 0x56 });
        gbc.writeMem(0xd0ee, { 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf53a, gbc.sp());
        EXPECT(0x4ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd0ee));
        // 56 01CE
        gbc.setState(0xcd74, 0x58f6, 0x9150, 0x7e9c, 0xded9, 0x42f3, 0x0, 0x0);
        gbc.writeMem(0x42f3, { 0x96 });
        gbc.writeMem(0xcd74, { 0x56 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x58f6, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcd74));
        // 56 01D0
        gbc.setState(0x4f16, 0x116, 0xc2c0, 0xa44c, 0x8db4, 0x26df, 0x1, 0x1);
        gbc.writeMem(0x26df, { 0x4f });
        gbc.writeMem(0x4f16, { 0x56 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x116, gbc.sp());
        EXPECT(0x4f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01D1
        gbc.setState(0x7f4f, 0xce27, 0x28a0, 0xc18a, 0xca8, 0x6e4d, 0x0, 0x1);
        gbc.writeMem(0x6e4d, { 0xbf });
        gbc.writeMem(0x7f4f, { 0x56 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xce27, gbc.sp());
        EXPECT(0x7f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01D2
        gbc.setState(0xdd46, 0xe1b4, 0x9b40, 0xd269, 0xac7d, 0x113c, 0x0, 0x1);
        gbc.writeMem(0x113c, { 0x1d });
        gbc.writeMem(0xdd46, { 0x56 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe1b4, gbc.sp());
        EXPECT(0xdd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdd46));
        // 56 01D3
        gbc.setState(0x5c77, 0x6144, 0x8eb0, 0xbc10, 0x39f2, 0x15a1, 0x0, 0x0);
        gbc.writeMem(0x15a1, { 0xa8 });
        gbc.writeMem(0x5c77, { 0x56 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6144, gbc.sp());
        EXPECT(0x5c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01D4
        gbc.setState(0xd41a, 0xc646, 0x9cd0, 0x6e5, 0x8416, 0xb1c5, 0x0, 0x1);
        gbc.writeMem(0xb1c5, { 0x4d });
        gbc.writeMem(0xd41a, { 0x56 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc646, gbc.sp());
        EXPECT(0xd41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb1c5));
        EXPECT(0x56, gbc.readMem(0xd41a));
        // 56 01D5
        gbc.setState(0x2f9c, 0x3913, 0x3a60, 0xc450, 0x52c8, 0x83e9, 0x0, 0x0);
        gbc.writeMem(0x2f9c, { 0x56 });
        gbc.writeMem(0x83e9, { 0x12 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3913, gbc.sp());
        EXPECT(0x2f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x83e9));
        // 56 01D6
        gbc.setState(0x62b7, 0x8d24, 0x4830, 0x7ba5, 0xa19a, 0xb07, 0x0, 0x0);
        gbc.writeMem(0xb07, { 0xe9 });
        gbc.writeMem(0x62b7, { 0x56 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8d24, gbc.sp());
        EXPECT(0x62b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01D7
        gbc.setState(0xe95a, 0x320e, 0x2500, 0xb63c, 0xe1f2, 0x8b5d, 0x1, 0x1);
        gbc.writeMem(0x8b5d, { 0x38 });
        gbc.writeMem(0xe95a, { 0x56 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x320e, gbc.sp());
        EXPECT(0xe95b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8b5d));
        EXPECT(0x56, gbc.readMem(0xe95a));
        // 56 01D8
        gbc.setState(0x6674, 0xb381, 0xaa50, 0xa365, 0x338e, 0xcb30, 0x1, 0x1);
        gbc.writeMem(0x6674, { 0x56 });
        gbc.writeMem(0xcb30, { 0xd5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb381, gbc.sp());
        EXPECT(0x6675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xcb30));
        // 56 01D9
        gbc.setState(0x7a72, 0x13ad, 0x5eb0, 0x68e8, 0x2e94, 0x32e6, 0x0, 0x0);
        gbc.writeMem(0x32e6, { 0xdf });
        gbc.writeMem(0x7a72, { 0x56 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x13ad, gbc.sp());
        EXPECT(0x7a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01DA
        gbc.setState(0x3ab7, 0x54f, 0xd030, 0xfd80, 0x41e3, 0xcae6, 0x0, 0x1);
        gbc.writeMem(0x3ab7, { 0x56 });
        gbc.writeMem(0xcae6, { 0xd3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x54f, gbc.sp());
        EXPECT(0x3ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xcae6));
        // 56 01DB
        gbc.setState(0x76f6, 0x7b57, 0xbe50, 0x3e6e, 0xfa30, 0x7dae, 0x1, 0x0);
        gbc.writeMem(0x76f6, { 0x56 });
        gbc.writeMem(0x7dae, { 0xe0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7b57, gbc.sp());
        EXPECT(0x76f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01DC
        gbc.setState(0x2825, 0x6329, 0xb290, 0xacf2, 0x588b, 0xa3ed, 0x1, 0x0);
        gbc.writeMem(0x2825, { 0x56 });
        gbc.writeMem(0xa3ed, { 0x52 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6329, gbc.sp());
        EXPECT(0x2826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa3ed));
        // 56 01DE
        gbc.setState(0x6eb7, 0x1af, 0xa460, 0xc6ee, 0x703d, 0xd1b3, 0x1, 0x0);
        gbc.writeMem(0x6eb7, { 0x56 });
        gbc.writeMem(0xd1b3, { 0x3e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1af, gbc.sp());
        EXPECT(0x6eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd1b3));
        // 56 01DF
        gbc.setState(0xb8fc, 0x495a, 0xcc20, 0x184c, 0x8173, 0x91db, 0x1, 0x1);
        gbc.writeMem(0x91db, { 0x7c });
        gbc.writeMem(0xb8fc, { 0x56 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x495a, gbc.sp());
        EXPECT(0xb8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x91db));
        EXPECT(0x56, gbc.readMem(0xb8fc));
        // 56 01E0
        gbc.setState(0xa75b, 0x3b42, 0x77c0, 0xbc2f, 0xaee2, 0x7f3c, 0x1, 0x1);
        gbc.writeMem(0x7f3c, { 0x2 });
        gbc.writeMem(0xa75b, { 0x56 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3b42, gbc.sp());
        EXPECT(0xa75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa75b));
        // 56 01E1
        gbc.setState(0x3f8c, 0xe76d, 0xaea0, 0xd3ad, 0x9fcb, 0x569c, 0x0, 0x1);
        gbc.writeMem(0x3f8c, { 0x56 });
        gbc.writeMem(0x569c, { 0xf4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe76d, gbc.sp());
        EXPECT(0x3f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01E2
        gbc.setState(0xe3fc, 0xb4d8, 0x9c20, 0x4b42, 0x8d6a, 0x8994, 0x1, 0x1);
        gbc.writeMem(0x8994, { 0x3 });
        gbc.writeMem(0xe3fc, { 0x56 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb4d8, gbc.sp());
        EXPECT(0xe3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8994));
        EXPECT(0x56, gbc.readMem(0xe3fc));
        // 56 01E3
        gbc.setState(0x4f7f, 0x3460, 0x5630, 0x606, 0xa078, 0x54e0, 0x0, 0x1);
        gbc.writeMem(0x4f7f, { 0x56 });
        gbc.writeMem(0x54e0, { 0xef });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3460, gbc.sp());
        EXPECT(0x4f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01E4
        gbc.setState(0xfa0, 0x1347, 0xdbf0, 0x7f99, 0xb51d, 0x69bc, 0x1, 0x0);
        gbc.writeMem(0xfa0, { 0x56 });
        gbc.writeMem(0x69bc, { 0xf3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1347, gbc.sp());
        EXPECT(0xfa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01E5
        gbc.setState(0xd011, 0x6a03, 0x3f30, 0xe388, 0x40bb, 0x93b4, 0x1, 0x1);
        gbc.writeMem(0x93b4, { 0x64 });
        gbc.writeMem(0xd011, { 0x56 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6a03, gbc.sp());
        EXPECT(0xd012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x93b4));
        EXPECT(0x56, gbc.readMem(0xd011));
        // 56 01E6
        gbc.setState(0xc48, 0x1546, 0x4110, 0x31d4, 0x5751, 0x3c2e, 0x0, 0x1);
        gbc.writeMem(0xc48, { 0x56 });
        gbc.writeMem(0x3c2e, { 0xec });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1546, gbc.sp());
        EXPECT(0xc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01E7
        gbc.setState(0xa800, 0xdbfd, 0x4440, 0x3e15, 0xf343, 0x6e15, 0x1, 0x1);
        gbc.writeMem(0x6e15, { 0xea });
        gbc.writeMem(0xa800, { 0x56 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdbfd, gbc.sp());
        EXPECT(0xa801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa800));
        // 56 01E8
        gbc.setState(0x3bb0, 0xa95a, 0xdf60, 0x7e56, 0x6913, 0xe239, 0x0, 0x1);
        gbc.writeMem(0x3bb0, { 0x56 });
        gbc.writeMem(0xe239, { 0x1f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa95a, gbc.sp());
        EXPECT(0x3bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xe239));
        // 56 01E9
        gbc.setState(0x4330, 0x8879, 0x8560, 0xfc35, 0xb0da, 0x4b6b, 0x0, 0x1);
        gbc.writeMem(0x4330, { 0x56 });
        gbc.writeMem(0x4b6b, { 0x80 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8879, gbc.sp());
        EXPECT(0x4331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01EA
        gbc.setState(0xc671, 0x8c8c, 0x3670, 0xbf18, 0xa71f, 0x8926, 0x0, 0x1);
        gbc.writeMem(0x8926, { 0xfa });
        gbc.writeMem(0xc671, { 0x56 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0xc672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8926));
        EXPECT(0x56, gbc.readMem(0xc671));
        // 56 01EB
        gbc.setState(0xe930, 0xb4a5, 0x5300, 0x59e4, 0x4a1b, 0x6e3, 0x1, 0x0);
        gbc.writeMem(0x6e3, { 0xd8 });
        gbc.writeMem(0xe930, { 0x56 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb4a5, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe930));
        // 56 01EC
        gbc.setState(0x6aff, 0x420c, 0x2b90, 0xaf73, 0x9c65, 0xe0c3, 0x0, 0x0);
        gbc.writeMem(0x6aff, { 0x56 });
        gbc.writeMem(0xe0c3, { 0x71 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x420c, gbc.sp());
        EXPECT(0x6b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe0c3));
        // 56 01ED
        gbc.setState(0xcd89, 0xe54c, 0x9490, 0xf55, 0x4fd4, 0x51d5, 0x1, 0x0);
        gbc.writeMem(0x51d5, { 0xde });
        gbc.writeMem(0xcd89, { 0x56 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe54c, gbc.sp());
        EXPECT(0xcd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcd89));
        // 56 01EE
        gbc.setState(0x4c03, 0xc874, 0x3ee0, 0x8614, 0xe4e0, 0xf0b4, 0x0, 0x0);
        gbc.writeMem(0x4c03, { 0x56 });
        gbc.writeMem(0xf0b4, { 0xd8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc874, gbc.sp());
        EXPECT(0x4c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xf0b4));
        // 56 01EF
        gbc.setState(0x3e47, 0x9a26, 0x6c10, 0x1e04, 0xb64, 0xdfb3, 0x1, 0x0);
        gbc.writeMem(0x3e47, { 0x56 });
        gbc.writeMem(0xdfb3, { 0x31 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9a26, gbc.sp());
        EXPECT(0x3e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdfb3));
        // 56 01F0
        gbc.setState(0x9102, 0x60b1, 0x6ad0, 0xd30b, 0xd845, 0x9c06, 0x1, 0x1);
        gbc.writeMem(0x9102, { 0x56 });
        gbc.writeMem(0x9c06, { 0x7b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x60b1, gbc.sp());
        EXPECT(0x9103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9102));
        EXPECT(0x7b, gbc.readMem(0x9c06));
        // 56 01F1
        gbc.setState(0x1d2b, 0x59e2, 0x4650, 0xe449, 0x1a11, 0xb5ff, 0x0, 0x1);
        gbc.writeMem(0x1d2b, { 0x56 });
        gbc.writeMem(0xb5ff, { 0x8e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x59e2, gbc.sp());
        EXPECT(0x1d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb5ff));
        // 56 01F2
        gbc.setState(0x4b98, 0xf8a2, 0xef60, 0x911d, 0x70a1, 0x1460, 0x0, 0x1);
        gbc.writeMem(0x1460, { 0x34 });
        gbc.writeMem(0x4b98, { 0x56 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf8a2, gbc.sp());
        EXPECT(0x4b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01F3
        gbc.setState(0x795e, 0x2477, 0x20f0, 0xb163, 0xb3fc, 0x2c9f, 0x1, 0x1);
        gbc.writeMem(0x2c9f, { 0xf2 });
        gbc.writeMem(0x795e, { 0x56 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2477, gbc.sp());
        EXPECT(0x795f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01F4
        gbc.setState(0xc662, 0x9212, 0xdd90, 0x6f5b, 0xe05f, 0x926d, 0x1, 0x0);
        gbc.writeMem(0x926d, { 0x3e });
        gbc.writeMem(0xc662, { 0x56 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9212, gbc.sp());
        EXPECT(0xc663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x926d));
        EXPECT(0x56, gbc.readMem(0xc662));
        // 56 01F5
        gbc.setState(0xdc25, 0x7761, 0xdf00, 0xd7ee, 0xb31e, 0x105c, 0x0, 0x0);
        gbc.writeMem(0x105c, { 0xc7 });
        gbc.writeMem(0xdc25, { 0x56 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7761, gbc.sp());
        EXPECT(0xdc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdc25));
        // 56 01F6
        gbc.setState(0x2c8c, 0x771a, 0x8e70, 0x8015, 0x7f65, 0x2339, 0x0, 0x0);
        gbc.writeMem(0x2339, { 0xd9 });
        gbc.writeMem(0x2c8c, { 0x56 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x771a, gbc.sp());
        EXPECT(0x2c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01F7
        gbc.setState(0x35f2, 0x73c, 0x9490, 0xabc4, 0x7340, 0x16eb, 0x0, 0x0);
        gbc.writeMem(0x16eb, { 0x55 });
        gbc.writeMem(0x35f2, { 0x56 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x73c, gbc.sp());
        EXPECT(0x35f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 01F8
        gbc.setState(0xa941, 0xbfa, 0xa520, 0x866, 0x2559, 0x789e, 0x1, 0x1);
        gbc.writeMem(0x789e, { 0x92 });
        gbc.writeMem(0xa941, { 0x56 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbfa, gbc.sp());
        EXPECT(0xa942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa941));
        // 56 01F9
        gbc.setState(0xea3d, 0x7fc7, 0x16b0, 0xa0bd, 0xb6bb, 0x80bd, 0x1, 0x1);
        gbc.writeMem(0x80bd, { 0x37 });
        gbc.writeMem(0xea3d, { 0x56 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7fc7, gbc.sp());
        EXPECT(0xea3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x80bd));
        EXPECT(0x56, gbc.readMem(0xea3d));
        // 56 01FA
        gbc.setState(0xe8fa, 0x7b9d, 0x5cb0, 0x3d7d, 0x6c64, 0xaff2, 0x0, 0x1);
        gbc.writeMem(0xaff2, { 0xcd });
        gbc.writeMem(0xe8fa, { 0x56 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7b9d, gbc.sp());
        EXPECT(0xe8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xaff2));
        EXPECT(0x56, gbc.readMem(0xe8fa));
        // 56 01FB
        gbc.setState(0x6bc9, 0xaac0, 0xf720, 0xda94, 0xbace, 0x70f4, 0x1, 0x0);
        gbc.writeMem(0x6bc9, { 0x56 });
        gbc.writeMem(0x70f4, { 0x5c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaac0, gbc.sp());
        EXPECT(0x6bca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 01FC
        gbc.setState(0x974f, 0x7f2d, 0x43d0, 0xa032, 0x5f69, 0xc50, 0x1, 0x1);
        gbc.writeMem(0xc50, { 0xdf });
        gbc.writeMem(0x974f, { 0x56 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7f2d, gbc.sp());
        EXPECT(0x9750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x974f));
        // 56 01FE
        gbc.setState(0x3346, 0x4994, 0x2980, 0x775e, 0x2135, 0xed93, 0x0, 0x0);
        gbc.writeMem(0x3346, { 0x56 });
        gbc.writeMem(0xed93, { 0x3b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4994, gbc.sp());
        EXPECT(0x3347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xed93));
        // 56 01FF
        gbc.setState(0x58f7, 0x5657, 0xa390, 0xf756, 0xbd4d, 0x2669, 0x0, 0x0);
        gbc.writeMem(0x2669, { 0xe7 });
        gbc.writeMem(0x58f7, { 0x56 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5657, gbc.sp());
        EXPECT(0x58f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0200
        gbc.setState(0x6f8a, 0x664e, 0xc8b0, 0xca63, 0x5b2b, 0xc8b5, 0x1, 0x1);
        gbc.writeMem(0x6f8a, { 0x56 });
        gbc.writeMem(0xc8b5, { 0x2e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x664e, gbc.sp());
        EXPECT(0x6f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc8b5));
        // 56 0201
        gbc.setState(0xd78b, 0x9dbf, 0xd690, 0x32a3, 0xb87f, 0xcbf7, 0x1, 0x1);
        gbc.writeMem(0xcbf7, { 0xa5 });
        gbc.writeMem(0xd78b, { 0x56 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9dbf, gbc.sp());
        EXPECT(0xd78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xcbf7));
        EXPECT(0x56, gbc.readMem(0xd78b));
        // 56 0202
        gbc.setState(0x517a, 0xc6af, 0x3b80, 0x4d2b, 0x4f1e, 0xacd1, 0x1, 0x0);
        gbc.writeMem(0x517a, { 0x56 });
        gbc.writeMem(0xacd1, { 0x51 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc6af, gbc.sp());
        EXPECT(0x517b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xacd1));
        // 56 0203
        gbc.setState(0x4eb3, 0xe640, 0x2f50, 0x2860, 0x67e7, 0x7ce, 0x0, 0x0);
        gbc.writeMem(0x7ce, { 0xd9 });
        gbc.writeMem(0x4eb3, { 0x56 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe640, gbc.sp());
        EXPECT(0x4eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0204
        gbc.setState(0x5cba, 0x162, 0xf410, 0x896d, 0x216d, 0x105d, 0x0, 0x1);
        gbc.writeMem(0x105d, { 0x61 });
        gbc.writeMem(0x5cba, { 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x162, gbc.sp());
        EXPECT(0x5cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0205
        gbc.setState(0x2a3c, 0x2110, 0x8480, 0xb65d, 0x32b5, 0xc97f, 0x1, 0x0);
        gbc.writeMem(0x2a3c, { 0x56 });
        gbc.writeMem(0xc97f, { 0xbf });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2110, gbc.sp());
        EXPECT(0x2a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc97f));
        // 56 0206
        gbc.setState(0x1d54, 0x3c11, 0x8160, 0xc8e6, 0x5d0d, 0x246c, 0x1, 0x1);
        gbc.writeMem(0x1d54, { 0x56 });
        gbc.writeMem(0x246c, { 0xa6 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3c11, gbc.sp());
        EXPECT(0x1d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0207
        gbc.setState(0x84ae, 0x673e, 0xdc30, 0xeeec, 0x3f44, 0x161d, 0x0, 0x0);
        gbc.writeMem(0x161d, { 0x2a });
        gbc.writeMem(0x84ae, { 0x56 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x673e, gbc.sp());
        EXPECT(0x84af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x84ae));
        // 56 0208
        gbc.setState(0xc468, 0x4675, 0x8ce0, 0xbd27, 0xfa52, 0xd924, 0x0, 0x0);
        gbc.writeMem(0xc468, { 0x56 });
        gbc.writeMem(0xd924, { 0x69 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4675, gbc.sp());
        EXPECT(0xc469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc468));
        EXPECT(0x69, gbc.readMem(0xd924));
        // 56 0209
        gbc.setState(0xc5b4, 0xf33c, 0x2ef0, 0xcd35, 0x1897, 0xa297, 0x0, 0x1);
        gbc.writeMem(0xa297, { 0x9b });
        gbc.writeMem(0xc5b4, { 0x56 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf33c, gbc.sp());
        EXPECT(0xc5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa297));
        EXPECT(0x56, gbc.readMem(0xc5b4));
        // 56 020A
        gbc.setState(0xdaa1, 0x1508, 0x48e0, 0x21f4, 0xc841, 0xb979, 0x0, 0x1);
        gbc.writeMem(0xb979, { 0xec });
        gbc.writeMem(0xdaa1, { 0x56 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1508, gbc.sp());
        EXPECT(0xdaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xb979));
        EXPECT(0x56, gbc.readMem(0xdaa1));
        // 56 020B
        gbc.setState(0xe7f1, 0x3749, 0xbb50, 0x8a94, 0x86b2, 0x90df, 0x1, 0x1);
        gbc.writeMem(0x90df, { 0x1c });
        gbc.writeMem(0xe7f1, { 0x56 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3749, gbc.sp());
        EXPECT(0xe7f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x90df));
        EXPECT(0x56, gbc.readMem(0xe7f1));
        // 56 020C
        gbc.setState(0xd15, 0xd211, 0x5fb0, 0xd39d, 0x619c, 0xdbaf, 0x0, 0x1);
        gbc.writeMem(0xd15, { 0x56 });
        gbc.writeMem(0xdbaf, { 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd211, gbc.sp());
        EXPECT(0xd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdbaf));
        // 56 020D
        gbc.setState(0x440c, 0x91b4, 0xae30, 0x951, 0x5606, 0x22b8, 0x1, 0x0);
        gbc.writeMem(0x22b8, { 0xf3 });
        gbc.writeMem(0x440c, { 0x56 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x91b4, gbc.sp());
        EXPECT(0x440d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 020E
        gbc.setState(0x1072, 0xdddb, 0x4d70, 0x9820, 0x3570, 0xbead, 0x1, 0x1);
        gbc.writeMem(0x1072, { 0x56 });
        gbc.writeMem(0xbead, { 0x73 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdddb, gbc.sp());
        EXPECT(0x1073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xbead));
        // 56 020F
        gbc.setState(0x78c0, 0xdba6, 0x2560, 0xf34, 0x20c8, 0x2a01, 0x1, 0x1);
        gbc.writeMem(0x2a01, { 0x78 });
        gbc.writeMem(0x78c0, { 0x56 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdba6, gbc.sp());
        EXPECT(0x78c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0210
        gbc.setState(0x8fff, 0x5ed3, 0x9700, 0x7653, 0xa286, 0xcd6f, 0x1, 0x1);
        gbc.writeMem(0x8fff, { 0x56 });
        gbc.writeMem(0xcd6f, { 0x81 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5ed3, gbc.sp());
        EXPECT(0x9000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8fff));
        EXPECT(0x81, gbc.readMem(0xcd6f));
        // 56 0211
        gbc.setState(0x5d1f, 0xb88b, 0xffe0, 0xd21c, 0x585d, 0x7be6, 0x1, 0x0);
        gbc.writeMem(0x5d1f, { 0x56 });
        gbc.writeMem(0x7be6, { 0x5f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb88b, gbc.sp());
        EXPECT(0x5d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0212
        gbc.setState(0x37d9, 0xbab3, 0xdc00, 0xbdb5, 0x73b, 0x4d72, 0x0, 0x1);
        gbc.writeMem(0x37d9, { 0x56 });
        gbc.writeMem(0x4d72, { 0x4f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbab3, gbc.sp());
        EXPECT(0x37da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0213
        gbc.setState(0xa5d0, 0xeafd, 0xc7e0, 0x851e, 0x7ba8, 0xdd49, 0x1, 0x0);
        gbc.writeMem(0xa5d0, { 0x56 });
        gbc.writeMem(0xdd49, { 0x98 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeafd, gbc.sp());
        EXPECT(0xa5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa5d0));
        EXPECT(0x98, gbc.readMem(0xdd49));
        // 56 0214
        gbc.setState(0x3e5e, 0xaf5c, 0xf2d0, 0xce31, 0x6f8f, 0x628c, 0x0, 0x0);
        gbc.writeMem(0x3e5e, { 0x56 });
        gbc.writeMem(0x628c, { 0xc0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xaf5c, gbc.sp());
        EXPECT(0x3e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0215
        gbc.setState(0x287e, 0x2e9a, 0x18b0, 0x3d79, 0x35a3, 0x6f46, 0x1, 0x1);
        gbc.writeMem(0x287e, { 0x56 });
        gbc.writeMem(0x6f46, { 0x1a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2e9a, gbc.sp());
        EXPECT(0x287f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0216
        gbc.setState(0x9150, 0x83ae, 0x4670, 0x5c, 0x1dca, 0xa371, 0x1, 0x1);
        gbc.writeMem(0x9150, { 0x56 });
        gbc.writeMem(0xa371, { 0xd4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x83ae, gbc.sp());
        EXPECT(0x9151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9150));
        EXPECT(0xd4, gbc.readMem(0xa371));
        // 56 0217
        gbc.setState(0x47ba, 0x28b2, 0xc3c0, 0x7830, 0x5599, 0xaba6, 0x1, 0x0);
        gbc.writeMem(0x47ba, { 0x56 });
        gbc.writeMem(0xaba6, { 0xa6 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x28b2, gbc.sp());
        EXPECT(0x47bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaba6));
        // 56 0218
        gbc.setState(0x8217, 0x478a, 0x62b0, 0x3a19, 0x1fda, 0x1f7f, 0x0, 0x1);
        gbc.writeMem(0x1f7f, { 0x9f });
        gbc.writeMem(0x8217, { 0x56 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x478a, gbc.sp());
        EXPECT(0x8218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8217));
        // 56 0219
        gbc.setState(0x4c92, 0xded0, 0xb740, 0xf2b, 0xd87, 0x613a, 0x0, 0x1);
        gbc.writeMem(0x4c92, { 0x56 });
        gbc.writeMem(0x613a, { 0xc4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xded0, gbc.sp());
        EXPECT(0x4c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 021A
        gbc.setState(0x7e8a, 0x30de, 0x26a0, 0xc074, 0x44b2, 0x306c, 0x1, 0x1);
        gbc.writeMem(0x306c, { 0x2f });
        gbc.writeMem(0x7e8a, { 0x56 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x30de, gbc.sp());
        EXPECT(0x7e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 021B
        gbc.setState(0x5ce5, 0xf05, 0xab20, 0xb373, 0xd59a, 0xff7c, 0x1, 0x1);
        gbc.writeMem(0x5ce5, { 0x56 });
        gbc.writeMem(0xff7c, { 0x9c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf05, gbc.sp());
        EXPECT(0x5ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xff7c));
        // 56 021C
        gbc.setState(0xebc1, 0x5e5b, 0xbd00, 0x17a2, 0x9190, 0xf460, 0x1, 0x0);
        gbc.writeMem(0xebc1, { 0x56 });
        gbc.writeMem(0xf460, { 0xfd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5e5b, gbc.sp());
        EXPECT(0xebc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xebc1));
        EXPECT(0xfd, gbc.readMem(0xf460));
        // 56 021E
        gbc.setState(0xb13e, 0x58a9, 0x2680, 0x454d, 0x3662, 0x8ba8, 0x1, 0x1);
        gbc.writeMem(0x8ba8, { 0x8e });
        gbc.writeMem(0xb13e, { 0x56 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x58a9, gbc.sp());
        EXPECT(0xb13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8ba8));
        EXPECT(0x56, gbc.readMem(0xb13e));
        // 56 021F
        gbc.setState(0xa179, 0x849d, 0xf5b0, 0x3c92, 0xa26a, 0x39ef, 0x1, 0x0);
        gbc.writeMem(0x39ef, { 0x83 });
        gbc.writeMem(0xa179, { 0x56 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x849d, gbc.sp());
        EXPECT(0xa17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa179));
        // 56 0221
        gbc.setState(0x1aad, 0x9613, 0x1410, 0x43db, 0x1c4c, 0x9975, 0x0, 0x1);
        gbc.writeMem(0x1aad, { 0x56 });
        gbc.writeMem(0x9975, { 0xa7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9613, gbc.sp());
        EXPECT(0x1aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9975));
        // 56 0222
        gbc.setState(0x771, 0x8da6, 0x42a0, 0x262, 0xc463, 0xa7d3, 0x0, 0x0);
        gbc.writeMem(0x771, { 0x56 });
        gbc.writeMem(0xa7d3, { 0xea });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8da6, gbc.sp());
        EXPECT(0x772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xa7d3));
        // 56 0223
        gbc.setState(0x5176, 0x5ece, 0x52a0, 0xbd72, 0x406d, 0x59c0, 0x1, 0x0);
        gbc.writeMem(0x5176, { 0x56 });
        gbc.writeMem(0x59c0, { 0x81 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5ece, gbc.sp());
        EXPECT(0x5177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0224
        gbc.setState(0x9790, 0x2f35, 0xa3b0, 0x2cf, 0xb993, 0x3daa, 0x1, 0x0);
        gbc.writeMem(0x3daa, { 0x7a });
        gbc.writeMem(0x9790, { 0x56 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2f35, gbc.sp());
        EXPECT(0x9791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9790));
        // 56 0225
        gbc.setState(0x8bce, 0x905d, 0x4730, 0x89c4, 0x875e, 0x3fb7, 0x0, 0x1);
        gbc.writeMem(0x3fb7, { 0x24 });
        gbc.writeMem(0x8bce, { 0x56 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x905d, gbc.sp());
        EXPECT(0x8bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8bce));
        // 56 0226
        gbc.setState(0x64df, 0x7067, 0x4440, 0x90a9, 0xf7e1, 0xa4fa, 0x1, 0x1);
        gbc.writeMem(0x64df, { 0x56 });
        gbc.writeMem(0xa4fa, { 0x35 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7067, gbc.sp());
        EXPECT(0x64e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa4fa));
        // 56 0229
        gbc.setState(0x827a, 0x1825, 0x7ff0, 0x5bd8, 0x5584, 0xb572, 0x1, 0x1);
        gbc.writeMem(0x827a, { 0x56 });
        gbc.writeMem(0xb572, { 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1825, gbc.sp());
        EXPECT(0x827b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x827a));
        EXPECT(0xe9, gbc.readMem(0xb572));
        // 56 022A
        gbc.setState(0x3f98, 0x597e, 0x3270, 0x4a46, 0x1d3b, 0x1adb, 0x0, 0x0);
        gbc.writeMem(0x1adb, { 0x47 });
        gbc.writeMem(0x3f98, { 0x56 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x597e, gbc.sp());
        EXPECT(0x3f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 022C
        gbc.setState(0xce63, 0x2783, 0xbba0, 0x7e8a, 0x68b9, 0x236b, 0x0, 0x1);
        gbc.writeMem(0x236b, { 0xae });
        gbc.writeMem(0xce63, { 0x56 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2783, gbc.sp());
        EXPECT(0xce64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xce63));
        // 56 022D
        gbc.setState(0x3998, 0x2d61, 0x7460, 0xa83e, 0xfbb8, 0x96b7, 0x1, 0x0);
        gbc.writeMem(0x3998, { 0x56 });
        gbc.writeMem(0x96b7, { 0xc9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d61, gbc.sp());
        EXPECT(0x3999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x96b7));
        // 56 022E
        gbc.setState(0x65b4, 0x10c0, 0x2d40, 0x20e, 0xaa81, 0x937d, 0x1, 0x0);
        gbc.writeMem(0x65b4, { 0x56 });
        gbc.writeMem(0x937d, { 0xec });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x10c0, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x937d));
        // 56 022F
        gbc.setState(0x9f51, 0xc3c4, 0xfdc0, 0x102c, 0x8cc, 0x8abb, 0x0, 0x0);
        gbc.writeMem(0x8abb, { 0xf9 });
        gbc.writeMem(0x9f51, { 0x56 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc3c4, gbc.sp());
        EXPECT(0x9f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x8abb));
        EXPECT(0x56, gbc.readMem(0x9f51));
        // 56 0230
        gbc.setState(0x9d3c, 0x5586, 0x4c20, 0xe772, 0x3211, 0xaa37, 0x0, 0x0);
        gbc.writeMem(0x9d3c, { 0x56 });
        gbc.writeMem(0xaa37, { 0xd5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5586, gbc.sp());
        EXPECT(0x9d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9d3c));
        EXPECT(0xd5, gbc.readMem(0xaa37));
        // 56 0231
        gbc.setState(0xa768, 0x4a72, 0xe50, 0x7fba, 0xd43f, 0x8fa1, 0x0, 0x1);
        gbc.writeMem(0x8fa1, { 0xb6 });
        gbc.writeMem(0xa768, { 0x56 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4a72, gbc.sp());
        EXPECT(0xa769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8fa1));
        EXPECT(0x56, gbc.readMem(0xa768));
        // 56 0232
        gbc.setState(0x5768, 0x7950, 0xf110, 0x6f7d, 0xa4a5, 0x191e, 0x1, 0x1);
        gbc.writeMem(0x191e, { 0xf5 });
        gbc.writeMem(0x5768, { 0x56 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7950, gbc.sp());
        EXPECT(0x5769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0233
        gbc.setState(0x8b37, 0xef1, 0x590, 0x8b6e, 0x410b, 0xe204, 0x0, 0x0);
        gbc.writeMem(0x8b37, { 0x56 });
        gbc.writeMem(0xe204, { 0xda });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xef1, gbc.sp());
        EXPECT(0x8b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8b37));
        EXPECT(0xda, gbc.readMem(0xe204));
        // 56 0234
        gbc.setState(0x9f0d, 0xbfca, 0x1430, 0x49, 0x2c8a, 0xe8b9, 0x1, 0x1);
        gbc.writeMem(0x9f0d, { 0x56 });
        gbc.writeMem(0xe8b9, { 0x97 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbfca, gbc.sp());
        EXPECT(0x9f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9f0d));
        EXPECT(0x97, gbc.readMem(0xe8b9));
        // 56 0235
        gbc.setState(0xe28d, 0xb12c, 0xa6f0, 0xadd2, 0xa743, 0xe7fd, 0x1, 0x0);
        gbc.writeMem(0xe28d, { 0x56 });
        gbc.writeMem(0xe7fd, { 0xd5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb12c, gbc.sp());
        EXPECT(0xe28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe28d));
        EXPECT(0xd5, gbc.readMem(0xe7fd));
        // 56 0236
        gbc.setState(0x81f1, 0xf15e, 0x7e30, 0x9802, 0x369b, 0xcba7, 0x0, 0x0);
        gbc.writeMem(0x81f1, { 0x56 });
        gbc.writeMem(0xcba7, { 0xde });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf15e, gbc.sp());
        EXPECT(0x81f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x81f1));
        EXPECT(0xde, gbc.readMem(0xcba7));
        // 56 0238
        gbc.setState(0xc782, 0x7ed3, 0x120, 0x616a, 0x703a, 0x1cc4, 0x0, 0x1);
        gbc.writeMem(0x1cc4, { 0x7 });
        gbc.writeMem(0xc782, { 0x56 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7ed3, gbc.sp());
        EXPECT(0xc783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc782));
        // 56 0239
        gbc.setState(0x537b, 0x19c9, 0xb540, 0x30e2, 0x70dd, 0x9df9, 0x0, 0x1);
        gbc.writeMem(0x537b, { 0x56 });
        gbc.writeMem(0x9df9, { 0x1c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x19c9, gbc.sp());
        EXPECT(0x537c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9df9));
        // 56 023A
        gbc.setState(0x7c85, 0xf1b3, 0xa7d0, 0xd396, 0x562a, 0x970a, 0x0, 0x1);
        gbc.writeMem(0x7c85, { 0x56 });
        gbc.writeMem(0x970a, { 0x6 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf1b3, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x970a));
        // 56 023B
        gbc.setState(0xee74, 0x9b4d, 0x99a0, 0xa47d, 0x472b, 0x58c8, 0x0, 0x0);
        gbc.writeMem(0x58c8, { 0x91 });
        gbc.writeMem(0xee74, { 0x56 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9b4d, gbc.sp());
        EXPECT(0xee75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xee74));
        // 56 023C
        gbc.setState(0x9e38, 0x5d6d, 0x9810, 0x6c90, 0x4499, 0x9936, 0x1, 0x1);
        gbc.writeMem(0x9936, { 0x9a });
        gbc.writeMem(0x9e38, { 0x56 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5d6d, gbc.sp());
        EXPECT(0x9e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9936));
        EXPECT(0x56, gbc.readMem(0x9e38));
        // 56 023D
        gbc.setState(0x295d, 0xb1fa, 0x8d60, 0xf210, 0x5e77, 0x4795, 0x1, 0x0);
        gbc.writeMem(0x295d, { 0x56 });
        gbc.writeMem(0x4795, { 0xe0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb1fa, gbc.sp());
        EXPECT(0x295e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 023E
        gbc.setState(0x4e7e, 0x5373, 0xf7f0, 0x3d82, 0x5041, 0x84b2, 0x1, 0x1);
        gbc.writeMem(0x4e7e, { 0x56 });
        gbc.writeMem(0x84b2, { 0x5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5373, gbc.sp());
        EXPECT(0x4e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x84b2));
        // 56 023F
        gbc.setState(0xcd1, 0x2aac, 0x81f0, 0xdda6, 0xeca6, 0x134b, 0x0, 0x0);
        gbc.writeMem(0xcd1, { 0x56 });
        gbc.writeMem(0x134b, { 0x7a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2aac, gbc.sp());
        EXPECT(0xcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0240
        gbc.setState(0x22c3, 0x2247, 0xca20, 0x32b, 0x949a, 0x1de4, 0x1, 0x1);
        gbc.writeMem(0x1de4, { 0x97 });
        gbc.writeMem(0x22c3, { 0x56 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2247, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0241
        gbc.setState(0x1bb8, 0x9045, 0xe9e0, 0xeb04, 0x2efe, 0xc969, 0x0, 0x1);
        gbc.writeMem(0x1bb8, { 0x56 });
        gbc.writeMem(0xc969, { 0x20 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9045, gbc.sp());
        EXPECT(0x1bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xc969));
        // 56 0242
        gbc.setState(0x935f, 0x1eb9, 0x9940, 0x41d3, 0x707b, 0x1daa, 0x1, 0x0);
        gbc.writeMem(0x1daa, { 0xe2 });
        gbc.writeMem(0x935f, { 0x56 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1eb9, gbc.sp());
        EXPECT(0x9360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x935f));
        // 56 0243
        gbc.setState(0x179b, 0x51ff, 0xef00, 0x94e9, 0x283, 0xbbd9, 0x0, 0x1);
        gbc.writeMem(0x179b, { 0x56 });
        gbc.writeMem(0xbbd9, { 0x34 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x51ff, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xbbd9));
        // 56 0244
        gbc.setState(0x238a, 0x7730, 0x3200, 0xa835, 0xa322, 0xf743, 0x1, 0x1);
        gbc.writeMem(0x238a, { 0x56 });
        gbc.writeMem(0xf743, { 0xb8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7730, gbc.sp());
        EXPECT(0x238b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xf743));
        // 56 0245
        gbc.setState(0xb6, 0xb91e, 0xf80, 0xa117, 0xfadb, 0xd561, 0x1, 0x1);
        gbc.writeMem(0xb6, { 0x56 });
        gbc.writeMem(0xd561, { 0x92 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb91e, gbc.sp());
        EXPECT(0xb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd561));
        // 56 0246
        gbc.setState(0x5f54, 0x32bb, 0xd80, 0x8d4c, 0xb3a, 0xe4a0, 0x1, 0x0);
        gbc.writeMem(0x5f54, { 0x56 });
        gbc.writeMem(0xe4a0, { 0x25 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x32bb, gbc.sp());
        EXPECT(0x5f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe4a0));
        // 56 0247
        gbc.setState(0xce1, 0x109e, 0x1930, 0x6d75, 0x2308, 0x3b0b, 0x0, 0x0);
        gbc.writeMem(0xce1, { 0x56 });
        gbc.writeMem(0x3b0b, { 0xad });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x109e, gbc.sp());
        EXPECT(0xce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0248
        gbc.setState(0xf5c, 0xc7f9, 0x7f10, 0xc01d, 0x3e6d, 0x5080, 0x1, 0x0);
        gbc.writeMem(0xf5c, { 0x56 });
        gbc.writeMem(0x5080, { 0xfa });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc7f9, gbc.sp());
        EXPECT(0xf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0249
        gbc.setState(0x6d59, 0x905b, 0x2000, 0x80c6, 0x7466, 0xbce1, 0x0, 0x1);
        gbc.writeMem(0x6d59, { 0x56 });
        gbc.writeMem(0xbce1, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x905b, gbc.sp());
        EXPECT(0x6d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbce1));
        // 56 024A
        gbc.setState(0xe36f, 0xf14e, 0xa920, 0x63ac, 0xd913, 0xc420, 0x1, 0x0);
        gbc.writeMem(0xc420, { 0x71 });
        gbc.writeMem(0xe36f, { 0x56 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf14e, gbc.sp());
        EXPECT(0xe370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc420));
        EXPECT(0x56, gbc.readMem(0xe36f));
        // 56 024B
        gbc.setState(0xa93b, 0x3a18, 0x2cd0, 0xe9b7, 0x987a, 0xdef6, 0x1, 0x1);
        gbc.writeMem(0xa93b, { 0x56 });
        gbc.writeMem(0xdef6, { 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3a18, gbc.sp());
        EXPECT(0xa93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa93b));
        EXPECT(0xa0, gbc.readMem(0xdef6));
        // 56 024C
        gbc.setState(0xd542, 0x1ac6, 0xb1d0, 0x2758, 0xe303, 0xe40e, 0x1, 0x1);
        gbc.writeMem(0xd542, { 0x56 });
        gbc.writeMem(0xe40e, { 0x5c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1ac6, gbc.sp());
        EXPECT(0xd543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd542));
        EXPECT(0x5c, gbc.readMem(0xe40e));
        // 56 024D
        gbc.setState(0x22c3, 0xb851, 0x9020, 0x4d07, 0xa016, 0x396f, 0x1, 0x1);
        gbc.writeMem(0x22c3, { 0x56 });
        gbc.writeMem(0x396f, { 0xc3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb851, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 024E
        gbc.setState(0x4bfb, 0x721f, 0x5180, 0xce8b, 0x537, 0x6eb1, 0x0, 0x0);
        gbc.writeMem(0x4bfb, { 0x56 });
        gbc.writeMem(0x6eb1, { 0x5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x721f, gbc.sp());
        EXPECT(0x4bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 024F
        gbc.setState(0xa91a, 0xac3e, 0x45a0, 0x74c8, 0xb642, 0x3ca0, 0x0, 0x1);
        gbc.writeMem(0x3ca0, { 0x75 });
        gbc.writeMem(0xa91a, { 0x56 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xac3e, gbc.sp());
        EXPECT(0xa91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa91a));
        // 56 0250
        gbc.setState(0x5f05, 0x9417, 0xf00, 0x8315, 0x75a3, 0x148c, 0x0, 0x0);
        gbc.writeMem(0x148c, { 0x70 });
        gbc.writeMem(0x5f05, { 0x56 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9417, gbc.sp());
        EXPECT(0x5f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0251
        gbc.setState(0xe4d1, 0xbae4, 0xb80, 0xed17, 0x61f9, 0x239a, 0x0, 0x1);
        gbc.writeMem(0x239a, { 0xef });
        gbc.writeMem(0xe4d1, { 0x56 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbae4, gbc.sp());
        EXPECT(0xe4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe4d1));
        // 56 0252
        gbc.setState(0x5a7d, 0xbc7c, 0xd1d0, 0xc33e, 0x9cb5, 0x337b, 0x1, 0x1);
        gbc.writeMem(0x337b, { 0x45 });
        gbc.writeMem(0x5a7d, { 0x56 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbc7c, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0253
        gbc.setState(0x5883, 0x4315, 0x1490, 0x906f, 0x2a1f, 0x48b6, 0x0, 0x1);
        gbc.writeMem(0x48b6, { 0x1b });
        gbc.writeMem(0x5883, { 0x56 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4315, gbc.sp());
        EXPECT(0x5884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0254
        gbc.setState(0x16c, 0x3a58, 0x4460, 0x84b1, 0x9277, 0x6b76, 0x1, 0x0);
        gbc.writeMem(0x16c, { 0x56 });
        gbc.writeMem(0x6b76, { 0x1f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3a58, gbc.sp());
        EXPECT(0x16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0255
        gbc.setState(0x9904, 0xb2a0, 0xf0, 0x7d17, 0x8aac, 0x8b59, 0x1, 0x0);
        gbc.writeMem(0x8b59, { 0x4c });
        gbc.writeMem(0x9904, { 0x56 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb2a0, gbc.sp());
        EXPECT(0x9905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8b59));
        EXPECT(0x56, gbc.readMem(0x9904));
        // 56 0256
        gbc.setState(0xa392, 0x4c20, 0x6270, 0xa1c5, 0x50e0, 0x5431, 0x1, 0x0);
        gbc.writeMem(0x5431, { 0x15 });
        gbc.writeMem(0xa392, { 0x56 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4c20, gbc.sp());
        EXPECT(0xa393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa392));
        // 56 0257
        gbc.setState(0x8059, 0xca3b, 0xd90, 0x7b15, 0x8fa4, 0xaf6a, 0x1, 0x0);
        gbc.writeMem(0x8059, { 0x56 });
        gbc.writeMem(0xaf6a, { 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xca3b, gbc.sp());
        EXPECT(0x805a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8059));
        EXPECT(0x3f, gbc.readMem(0xaf6a));
        // 56 0258
        gbc.setState(0x656a, 0xbbc2, 0x9d40, 0xd4b1, 0x95f1, 0xd2e5, 0x1, 0x0);
        gbc.writeMem(0x656a, { 0x56 });
        gbc.writeMem(0xd2e5, { 0x6b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbbc2, gbc.sp());
        EXPECT(0x656b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xd2e5));
        // 56 0259
        gbc.setState(0xa910, 0xc31a, 0x7430, 0x7528, 0x8a62, 0x6a74, 0x1, 0x1);
        gbc.writeMem(0x6a74, { 0xc0 });
        gbc.writeMem(0xa910, { 0x56 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc31a, gbc.sp());
        EXPECT(0xa911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa910));
        // 56 025A
        gbc.setState(0xc35, 0xe333, 0x4350, 0xee57, 0x83b8, 0xba6d, 0x1, 0x1);
        gbc.writeMem(0xc35, { 0x56 });
        gbc.writeMem(0xba6d, { 0x4a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe333, gbc.sp());
        EXPECT(0xc36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xba6d));
        // 56 025B
        gbc.setState(0xe85, 0xa93e, 0x7100, 0x3427, 0xa608, 0x6c63, 0x1, 0x1);
        gbc.writeMem(0xe85, { 0x56 });
        gbc.writeMem(0x6c63, { 0xf1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa93e, gbc.sp());
        EXPECT(0xe86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 025C
        gbc.setState(0x8c9, 0xcc78, 0xfda0, 0x313b, 0xc33e, 0x141f, 0x0, 0x1);
        gbc.writeMem(0x8c9, { 0x56 });
        gbc.writeMem(0x141f, { 0xd5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcc78, gbc.sp());
        EXPECT(0x8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 025D
        gbc.setState(0xdbcb, 0xc0eb, 0x5c30, 0x44b1, 0x3dfc, 0xa181, 0x0, 0x0);
        gbc.writeMem(0xa181, { 0xa7 });
        gbc.writeMem(0xdbcb, { 0x56 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc0eb, gbc.sp());
        EXPECT(0xdbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa181));
        EXPECT(0x56, gbc.readMem(0xdbcb));
        // 56 025E
        gbc.setState(0x7582, 0x512b, 0xdcf0, 0xe7a7, 0x9f04, 0x9f5a, 0x1, 0x0);
        gbc.writeMem(0x7582, { 0x56 });
        gbc.writeMem(0x9f5a, { 0xeb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0x7583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9f5a));
        // 56 025F
        gbc.setState(0x25f6, 0xda81, 0x5540, 0xb30f, 0x1e52, 0x4783, 0x1, 0x0);
        gbc.writeMem(0x25f6, { 0x56 });
        gbc.writeMem(0x4783, { 0xdd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xda81, gbc.sp());
        EXPECT(0x25f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0260
        gbc.setState(0x6639, 0x74b3, 0xd270, 0x24d8, 0xfef7, 0xf950, 0x1, 0x1);
        gbc.writeMem(0x6639, { 0x56 });
        gbc.writeMem(0xf950, { 0x6d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x74b3, gbc.sp());
        EXPECT(0x663a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xf950));
        // 56 0261
        gbc.setState(0x7eb6, 0x32d4, 0xd6d0, 0x3e0e, 0x5c90, 0xacc0, 0x0, 0x1);
        gbc.writeMem(0x7eb6, { 0x56 });
        gbc.writeMem(0xacc0, { 0xef });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x32d4, gbc.sp());
        EXPECT(0x7eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xacc0));
        // 56 0262
        gbc.setState(0x6e74, 0x37d3, 0x9350, 0x9592, 0x3f3b, 0x6d02, 0x1, 0x1);
        gbc.writeMem(0x6d02, { 0x85 });
        gbc.writeMem(0x6e74, { 0x56 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x37d3, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0263
        gbc.setState(0x2b26, 0x81a7, 0xba60, 0xbfe, 0xd46, 0x263, 0x0, 0x0);
        gbc.writeMem(0x263, { 0x59 });
        gbc.writeMem(0x2b26, { 0x56 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x81a7, gbc.sp());
        EXPECT(0x2b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0264
        gbc.setState(0x27a, 0x9596, 0xf0f0, 0x6a55, 0x3d33, 0xfc27, 0x1, 0x0);
        gbc.writeMem(0x27a, { 0x56 });
        gbc.writeMem(0xfc27, { 0x28 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9596, gbc.sp());
        EXPECT(0x27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xfc27));
        // 56 0265
        gbc.setState(0xcab, 0x8cb3, 0x85b0, 0x35fc, 0x8eb1, 0xa9d2, 0x0, 0x0);
        gbc.writeMem(0xcab, { 0x56 });
        gbc.writeMem(0xa9d2, { 0xf1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8cb3, gbc.sp());
        EXPECT(0xcac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa9d2));
        // 56 0266
        gbc.setState(0x4dd5, 0xceee, 0x1d50, 0xc841, 0xc4c, 0x1428, 0x0, 0x1);
        gbc.writeMem(0x1428, { 0xa });
        gbc.writeMem(0x4dd5, { 0x56 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xceee, gbc.sp());
        EXPECT(0x4dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0267
        gbc.setState(0x691e, 0x32f2, 0x48b0, 0x9392, 0xe06d, 0xad42, 0x1, 0x1);
        gbc.writeMem(0x691e, { 0x56 });
        gbc.writeMem(0xad42, { 0x7c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x32f2, gbc.sp());
        EXPECT(0x691f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xad42));
        // 56 0268
        gbc.setState(0xcfb6, 0x2186, 0xe6f0, 0xc97e, 0xa5e1, 0x6235, 0x1, 0x0);
        gbc.writeMem(0x6235, { 0xac });
        gbc.writeMem(0xcfb6, { 0x56 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2186, gbc.sp());
        EXPECT(0xcfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcfb6));
        // 56 0269
        gbc.setState(0xd612, 0x5f6a, 0x4570, 0x4ce6, 0x46d0, 0xbfc3, 0x0, 0x0);
        gbc.writeMem(0xbfc3, { 0xc0 });
        gbc.writeMem(0xd612, { 0x56 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5f6a, gbc.sp());
        EXPECT(0xd613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xbfc3));
        EXPECT(0x56, gbc.readMem(0xd612));
        // 56 026A
        gbc.setState(0x7080, 0x969e, 0xad00, 0xacc0, 0xbfd, 0x4145, 0x1, 0x0);
        gbc.writeMem(0x4145, { 0x9a });
        gbc.writeMem(0x7080, { 0x56 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x969e, gbc.sp());
        EXPECT(0x7081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 026B
        gbc.setState(0x3b29, 0x8247, 0x6a0, 0x1d2a, 0x1534, 0xc185, 0x0, 0x1);
        gbc.writeMem(0x3b29, { 0x56 });
        gbc.writeMem(0xc185, { 0x58 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8247, gbc.sp());
        EXPECT(0x3b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc185));
        // 56 026C
        gbc.setState(0x8218, 0xd4f7, 0x35c0, 0xdc86, 0xa171, 0xbf8e, 0x0, 0x1);
        gbc.writeMem(0x8218, { 0x56 });
        gbc.writeMem(0xbf8e, { 0xc9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd4f7, gbc.sp());
        EXPECT(0x8219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8218));
        EXPECT(0xc9, gbc.readMem(0xbf8e));
        // 56 026D
        gbc.setState(0xcdaf, 0x68ed, 0x6b50, 0xf0d1, 0x8009, 0x1947, 0x0, 0x1);
        gbc.writeMem(0x1947, { 0xc });
        gbc.writeMem(0xcdaf, { 0x56 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x68ed, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcdaf));
        // 56 026E
        gbc.setState(0xa053, 0xf2ff, 0xed50, 0x3714, 0x19e1, 0x9d17, 0x1, 0x0);
        gbc.writeMem(0x9d17, { 0xde });
        gbc.writeMem(0xa053, { 0x56 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf2ff, gbc.sp());
        EXPECT(0xa054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9d17));
        EXPECT(0x56, gbc.readMem(0xa053));
        // 56 026F
        gbc.setState(0xc8e, 0x862e, 0xe70, 0xaff6, 0x51e8, 0x54d7, 0x0, 0x1);
        gbc.writeMem(0xc8e, { 0x56 });
        gbc.writeMem(0x54d7, { 0x97 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x862e, gbc.sp());
        EXPECT(0xc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0270
        gbc.setState(0x522, 0x582a, 0x56a0, 0xe696, 0x1a39, 0x2813, 0x1, 0x0);
        gbc.writeMem(0x522, { 0x56 });
        gbc.writeMem(0x2813, { 0x40 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x582a, gbc.sp());
        EXPECT(0x523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0271
        gbc.setState(0x7e6f, 0xa0c5, 0xcc90, 0x8ddf, 0x49c2, 0x4535, 0x0, 0x1);
        gbc.writeMem(0x4535, { 0x5b });
        gbc.writeMem(0x7e6f, { 0x56 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa0c5, gbc.sp());
        EXPECT(0x7e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0272
        gbc.setState(0x33bf, 0xaacf, 0x8c60, 0x19a1, 0xd688, 0xa415, 0x1, 0x1);
        gbc.writeMem(0x33bf, { 0x56 });
        gbc.writeMem(0xa415, { 0x4d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaacf, gbc.sp());
        EXPECT(0x33c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa415));
        // 56 0273
        gbc.setState(0xbdfa, 0xfec, 0x9080, 0x28e6, 0xced8, 0x4fff, 0x1, 0x1);
        gbc.writeMem(0x4fff, { 0x99 });
        gbc.writeMem(0xbdfa, { 0x56 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfec, gbc.sp());
        EXPECT(0xbdfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbdfa));
        // 56 0274
        gbc.setState(0xdb5e, 0x61a7, 0xdac0, 0x79e8, 0x26f1, 0x26f7, 0x1, 0x1);
        gbc.writeMem(0x26f7, { 0x4e });
        gbc.writeMem(0xdb5e, { 0x56 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x61a7, gbc.sp());
        EXPECT(0xdb5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdb5e));
        // 56 0275
        gbc.setState(0x7bc1, 0x627c, 0x76c0, 0x2616, 0x697, 0x7095, 0x0, 0x1);
        gbc.writeMem(0x7095, { 0x6f });
        gbc.writeMem(0x7bc1, { 0x56 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x627c, gbc.sp());
        EXPECT(0x7bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0276
        gbc.setState(0x19ad, 0x2ac2, 0x40d0, 0x6d56, 0x556a, 0x52d3, 0x1, 0x1);
        gbc.writeMem(0x19ad, { 0x56 });
        gbc.writeMem(0x52d3, { 0x82 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0x19ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0277
        gbc.setState(0x266a, 0xf3, 0xddc0, 0x8f55, 0x9136, 0x914a, 0x1, 0x0);
        gbc.writeMem(0x266a, { 0x56 });
        gbc.writeMem(0x914a, { 0xa5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf3, gbc.sp());
        EXPECT(0x266b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x914a));
        // 56 0278
        gbc.setState(0x7154, 0x9ae8, 0x3170, 0xad88, 0x6a41, 0xfff5, 0x0, 0x0);
        gbc.writeMem(0x7154, { 0x56 });
        gbc.writeMem(0xfff5, { 0x37 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9ae8, gbc.sp());
        EXPECT(0x7155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xfff5));
        // 56 0279
        gbc.setState(0xdec3, 0x5a1, 0xdb80, 0x8ae6, 0x67dc, 0xa738, 0x0, 0x1);
        gbc.writeMem(0xa738, { 0x72 });
        gbc.writeMem(0xdec3, { 0x56 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5a1, gbc.sp());
        EXPECT(0xdec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa738));
        EXPECT(0x56, gbc.readMem(0xdec3));
        // 56 027A
        gbc.setState(0xf0, 0x4bc0, 0x9e90, 0xbf47, 0x1c02, 0xbbc7, 0x1, 0x0);
        gbc.writeMem(0xf0, { 0x56 });
        gbc.writeMem(0xbbc7, { 0xd2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4bc0, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xbbc7));
        // 56 027B
        gbc.setState(0xb6a1, 0x9dee, 0xa6c0, 0x850f, 0x8964, 0x5733, 0x0, 0x1);
        gbc.writeMem(0x5733, { 0x24 });
        gbc.writeMem(0xb6a1, { 0x56 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9dee, gbc.sp());
        EXPECT(0xb6a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb6a1));
        // 56 027C
        gbc.setState(0x487f, 0xfc3f, 0x43b0, 0xacd2, 0x323c, 0x6d87, 0x1, 0x0);
        gbc.writeMem(0x487f, { 0x56 });
        gbc.writeMem(0x6d87, { 0x4f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfc3f, gbc.sp());
        EXPECT(0x4880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 027D
        gbc.setState(0xdf82, 0x6e6e, 0x9e00, 0x9cfb, 0x9b56, 0x9b40, 0x0, 0x1);
        gbc.writeMem(0x9b40, { 0x82 });
        gbc.writeMem(0xdf82, { 0x56 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6e6e, gbc.sp());
        EXPECT(0xdf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9b40));
        EXPECT(0x56, gbc.readMem(0xdf82));
        // 56 027E
        gbc.setState(0x6e2a, 0x42d4, 0x2900, 0x216d, 0xf7cd, 0xc004, 0x0, 0x1);
        gbc.writeMem(0x6e2a, { 0x56 });
        gbc.writeMem(0xc004, { 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x42d4, gbc.sp());
        EXPECT(0x6e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc004));
        // 56 027F
        gbc.setState(0xdc4e, 0x76c0, 0xe030, 0x4ae7, 0x20e6, 0x84af, 0x1, 0x0);
        gbc.writeMem(0x84af, { 0xed });
        gbc.writeMem(0xdc4e, { 0x56 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x76c0, gbc.sp());
        EXPECT(0xdc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x84af));
        EXPECT(0x56, gbc.readMem(0xdc4e));
        // 56 0280
        gbc.setState(0x62fb, 0x47b7, 0xf9b0, 0xbd93, 0xddb3, 0xc477, 0x0, 0x0);
        gbc.writeMem(0x62fb, { 0x56 });
        gbc.writeMem(0xc477, { 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x47b7, gbc.sp());
        EXPECT(0x62fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xc477));
        // 56 0281
        gbc.setState(0xbfe6, 0xd288, 0xc0b0, 0xab7c, 0x36d8, 0x96ff, 0x0, 0x0);
        gbc.writeMem(0x96ff, { 0xd8 });
        gbc.writeMem(0xbfe6, { 0x56 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd288, gbc.sp());
        EXPECT(0xbfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x96ff));
        EXPECT(0x56, gbc.readMem(0xbfe6));
        // 56 0282
        gbc.setState(0xc525, 0xa6ec, 0x57a0, 0x3343, 0xbf04, 0x931d, 0x0, 0x1);
        gbc.writeMem(0x931d, { 0x50 });
        gbc.writeMem(0xc525, { 0x56 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa6ec, gbc.sp());
        EXPECT(0xc526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x931d));
        EXPECT(0x56, gbc.readMem(0xc525));
        // 56 0283
        gbc.setState(0xdcce, 0xf3fe, 0x1520, 0x8d00, 0x63, 0x9d67, 0x0, 0x1);
        gbc.writeMem(0x9d67, { 0xed });
        gbc.writeMem(0xdcce, { 0x56 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf3fe, gbc.sp());
        EXPECT(0xdccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9d67));
        EXPECT(0x56, gbc.readMem(0xdcce));
        // 56 0285
        gbc.setState(0x6850, 0x9094, 0xc4b0, 0x2508, 0x1a77, 0xd54, 0x1, 0x0);
        gbc.writeMem(0xd54, { 0x3 });
        gbc.writeMem(0x6850, { 0x56 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9094, gbc.sp());
        EXPECT(0x6851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0286
        gbc.setState(0xd402, 0x5c0a, 0xb570, 0x22c5, 0x9d74, 0xcd2f, 0x1, 0x1);
        gbc.writeMem(0xcd2f, { 0xef });
        gbc.writeMem(0xd402, { 0x56 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5c0a, gbc.sp());
        EXPECT(0xd403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xcd2f));
        EXPECT(0x56, gbc.readMem(0xd402));
        // 56 0287
        gbc.setState(0x7a29, 0x8db7, 0x3030, 0xf93a, 0x76a0, 0xdc34, 0x1, 0x1);
        gbc.writeMem(0x7a29, { 0x56 });
        gbc.writeMem(0xdc34, { 0xf3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8db7, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xdc34));
        // 56 0288
        gbc.setState(0xcc35, 0x5252, 0x7a20, 0x9f74, 0x9e79, 0x4104, 0x1, 0x1);
        gbc.writeMem(0x4104, { 0xb });
        gbc.writeMem(0xcc35, { 0x56 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5252, gbc.sp());
        EXPECT(0xcc36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcc35));
        // 56 0289
        gbc.setState(0x9901, 0xc1e0, 0xc400, 0x754c, 0x219c, 0x803, 0x1, 0x1);
        gbc.writeMem(0x803, { 0x51 });
        gbc.writeMem(0x9901, { 0x56 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc1e0, gbc.sp());
        EXPECT(0x9902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9901));
        // 56 028A
        gbc.setState(0xb164, 0x6bfe, 0xd150, 0x77e1, 0x42d, 0xe7c6, 0x1, 0x1);
        gbc.writeMem(0xb164, { 0x56 });
        gbc.writeMem(0xe7c6, { 0xce });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6bfe, gbc.sp());
        EXPECT(0xb165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb164));
        EXPECT(0xce, gbc.readMem(0xe7c6));
        // 56 028B
        gbc.setState(0x70b7, 0x31cb, 0x2340, 0x7b12, 0x5ebf, 0x2dea, 0x0, 0x1);
        gbc.writeMem(0x2dea, { 0x20 });
        gbc.writeMem(0x70b7, { 0x56 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x31cb, gbc.sp());
        EXPECT(0x70b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 028C
        gbc.setState(0xee6, 0xdc07, 0xd8e0, 0x8774, 0x170e, 0xd397, 0x1, 0x1);
        gbc.writeMem(0xee6, { 0x56 });
        gbc.writeMem(0xd397, { 0x55 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdc07, gbc.sp());
        EXPECT(0xee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd397));
        // 56 028D
        gbc.setState(0x4378, 0x93c7, 0x9dd0, 0xcf5, 0x2186, 0x41a1, 0x0, 0x1);
        gbc.writeMem(0x41a1, { 0x4 });
        gbc.writeMem(0x4378, { 0x56 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x93c7, gbc.sp());
        EXPECT(0x4379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 028E
        gbc.setState(0x3939, 0xf068, 0x17d0, 0xbca0, 0x43fd, 0xe5e4, 0x1, 0x1);
        gbc.writeMem(0x3939, { 0x56 });
        gbc.writeMem(0xe5e4, { 0x12 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf068, gbc.sp());
        EXPECT(0x393a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe5e4));
        // 56 028F
        gbc.setState(0x5c3d, 0xa455, 0xcab0, 0x147e, 0xcc7c, 0x6c1f, 0x0, 0x0);
        gbc.writeMem(0x5c3d, { 0x56 });
        gbc.writeMem(0x6c1f, { 0xac });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa455, gbc.sp());
        EXPECT(0x5c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0290
        gbc.setState(0xbae5, 0xc753, 0xc770, 0xe245, 0x4a79, 0x99a3, 0x0, 0x1);
        gbc.writeMem(0x99a3, { 0x54 });
        gbc.writeMem(0xbae5, { 0x56 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc753, gbc.sp());
        EXPECT(0xbae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x99a3));
        EXPECT(0x56, gbc.readMem(0xbae5));
        // 56 0291
        gbc.setState(0x6ccc, 0x542c, 0x1620, 0x7c3a, 0x9ed1, 0x76eb, 0x1, 0x1);
        gbc.writeMem(0x6ccc, { 0x56 });
        gbc.writeMem(0x76eb, { 0xca });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x542c, gbc.sp());
        EXPECT(0x6ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0292
        gbc.setState(0x63a3, 0xe021, 0x6a70, 0x550c, 0xc502, 0x112d, 0x0, 0x0);
        gbc.writeMem(0x112d, { 0x10 });
        gbc.writeMem(0x63a3, { 0x56 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe021, gbc.sp());
        EXPECT(0x63a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0293
        gbc.setState(0xabe4, 0xe31d, 0xbe80, 0x1d69, 0x95d2, 0xd4b3, 0x1, 0x0);
        gbc.writeMem(0xabe4, { 0x56 });
        gbc.writeMem(0xd4b3, { 0x33 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe31d, gbc.sp());
        EXPECT(0xabe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xabe4));
        EXPECT(0x33, gbc.readMem(0xd4b3));
        // 56 0294
        gbc.setState(0x3f5d, 0x2217, 0xf470, 0xa3d4, 0xfe08, 0x3e05, 0x1, 0x0);
        gbc.writeMem(0x3e05, { 0xdb });
        gbc.writeMem(0x3f5d, { 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2217, gbc.sp());
        EXPECT(0x3f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0295
        gbc.setState(0x6b2f, 0xa024, 0xf830, 0x1cdb, 0x7f85, 0x4ec, 0x0, 0x0);
        gbc.writeMem(0x4ec, { 0x51 });
        gbc.writeMem(0x6b2f, { 0x56 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa024, gbc.sp());
        EXPECT(0x6b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0296
        gbc.setState(0xc8ec, 0x848a, 0x7020, 0xafe6, 0x773e, 0xfa70, 0x0, 0x0);
        gbc.writeMem(0xc8ec, { 0x56 });
        gbc.writeMem(0xfa70, { 0xf4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x848a, gbc.sp());
        EXPECT(0xc8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc8ec));
        EXPECT(0xf4, gbc.readMem(0xfa70));
        // 56 0297
        gbc.setState(0xd624, 0x497e, 0x7010, 0x20fc, 0x936d, 0x26de, 0x0, 0x1);
        gbc.writeMem(0x26de, { 0x79 });
        gbc.writeMem(0xd624, { 0x56 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x497e, gbc.sp());
        EXPECT(0xd625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd624));
        // 56 0298
        gbc.setState(0x6f67, 0x9ca3, 0xd0b0, 0x384e, 0x79d6, 0x62d9, 0x0, 0x0);
        gbc.writeMem(0x62d9, { 0x9c });
        gbc.writeMem(0x6f67, { 0x56 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9ca3, gbc.sp());
        EXPECT(0x6f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0299
        gbc.setState(0xa9e1, 0x3a69, 0x7560, 0x2c3, 0x98eb, 0x79c, 0x1, 0x0);
        gbc.writeMem(0x79c, { 0x9a });
        gbc.writeMem(0xa9e1, { 0x56 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3a69, gbc.sp());
        EXPECT(0xa9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa9e1));
        // 56 029A
        gbc.setState(0x72b6, 0x207a, 0x4250, 0x4fef, 0xd831, 0x4df1, 0x1, 0x0);
        gbc.writeMem(0x4df1, { 0xa6 });
        gbc.writeMem(0x72b6, { 0x56 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x207a, gbc.sp());
        EXPECT(0x72b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 029B
        gbc.setState(0x4d3, 0xe1ee, 0x820, 0x807a, 0xd15a, 0x5b5a, 0x0, 0x1);
        gbc.writeMem(0x4d3, { 0x56 });
        gbc.writeMem(0x5b5a, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe1ee, gbc.sp());
        EXPECT(0x4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 029C
        gbc.setState(0xee12, 0xd7a2, 0xa160, 0x7d72, 0x1014, 0xab18, 0x0, 0x1);
        gbc.writeMem(0xab18, { 0x9a });
        gbc.writeMem(0xee12, { 0x56 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd7a2, gbc.sp());
        EXPECT(0xee13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xab18));
        EXPECT(0x56, gbc.readMem(0xee12));
        // 56 029D
        gbc.setState(0x2493, 0xa7c7, 0xfb70, 0xe854, 0xebd4, 0x2177, 0x1, 0x1);
        gbc.writeMem(0x2177, { 0xa6 });
        gbc.writeMem(0x2493, { 0x56 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa7c7, gbc.sp());
        EXPECT(0x2494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 029E
        gbc.setState(0x26c, 0x141, 0x8040, 0x15d2, 0x14bf, 0xcc3, 0x0, 0x1);
        gbc.writeMem(0x26c, { 0x56 });
        gbc.writeMem(0xcc3, { 0xc0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x141, gbc.sp());
        EXPECT(0x26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 029F
        gbc.setState(0x277a, 0xdf96, 0xf060, 0x6c3c, 0xab9c, 0xa8e1, 0x1, 0x0);
        gbc.writeMem(0x277a, { 0x56 });
        gbc.writeMem(0xa8e1, { 0xce });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdf96, gbc.sp());
        EXPECT(0x277b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa8e1));
        // 56 02A0
        gbc.setState(0x431f, 0xaef3, 0xbdc0, 0x402f, 0x56da, 0x2959, 0x0, 0x1);
        gbc.writeMem(0x2959, { 0x99 });
        gbc.writeMem(0x431f, { 0x56 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaef3, gbc.sp());
        EXPECT(0x4320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02A1
        gbc.setState(0x4013, 0x6d84, 0x6d10, 0x5d2b, 0xa67f, 0xfec1, 0x1, 0x1);
        gbc.writeMem(0x4013, { 0x56 });
        gbc.writeMem(0xfec1, { 0x46 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6d84, gbc.sp());
        EXPECT(0x4014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xfec1));
        // 56 02A2
        gbc.setState(0x5ea3, 0xa01b, 0x9010, 0x9e4f, 0x2c19, 0x8229, 0x0, 0x0);
        gbc.writeMem(0x5ea3, { 0x56 });
        gbc.writeMem(0x8229, { 0x1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa01b, gbc.sp());
        EXPECT(0x5ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8229));
        // 56 02A3
        gbc.setState(0x39ea, 0x3423, 0x32c0, 0x3a6d, 0x7ca0, 0x8be4, 0x0, 0x1);
        gbc.writeMem(0x39ea, { 0x56 });
        gbc.writeMem(0x8be4, { 0x4e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3423, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8be4));
        // 56 02A4
        gbc.setState(0xa720, 0xc051, 0x52d0, 0xa15a, 0x35a1, 0x6395, 0x1, 0x0);
        gbc.writeMem(0x6395, { 0xcc });
        gbc.writeMem(0xa720, { 0x56 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc051, gbc.sp());
        EXPECT(0xa721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa720));
        // 56 02A5
        gbc.setState(0x26b9, 0x7f21, 0xdfc0, 0xd055, 0x62b, 0x435e, 0x0, 0x0);
        gbc.writeMem(0x26b9, { 0x56 });
        gbc.writeMem(0x435e, { 0x8e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7f21, gbc.sp());
        EXPECT(0x26ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02A6
        gbc.setState(0xd5f1, 0x2751, 0xb530, 0x45b, 0x5e1b, 0x48c3, 0x0, 0x1);
        gbc.writeMem(0x48c3, { 0x67 });
        gbc.writeMem(0xd5f1, { 0x56 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2751, gbc.sp());
        EXPECT(0xd5f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd5f1));
        // 56 02A7
        gbc.setState(0x43d7, 0x8fa4, 0x3b10, 0x4398, 0x9a4d, 0x8572, 0x0, 0x1);
        gbc.writeMem(0x43d7, { 0x56 });
        gbc.writeMem(0x8572, { 0xc4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8fa4, gbc.sp());
        EXPECT(0x43d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8572));
        // 56 02A8
        gbc.setState(0xc00c, 0xf424, 0xf590, 0x82ec, 0xb3be, 0xda4d, 0x1, 0x1);
        gbc.writeMem(0xc00c, { 0x56 });
        gbc.writeMem(0xda4d, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf424, gbc.sp());
        EXPECT(0xc00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc00c));
        EXPECT(0x3b, gbc.readMem(0xda4d));
        // 56 02AA
        gbc.setState(0x6562, 0x542e, 0x5630, 0x9b60, 0xb4a6, 0x9c55, 0x0, 0x1);
        gbc.writeMem(0x6562, { 0x56 });
        gbc.writeMem(0x9c55, { 0xa4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x542e, gbc.sp());
        EXPECT(0x6563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9c55));
        // 56 02AB
        gbc.setState(0x1a3f, 0x578d, 0x83d0, 0xe59c, 0x853e, 0x70a5, 0x1, 0x1);
        gbc.writeMem(0x1a3f, { 0x56 });
        gbc.writeMem(0x70a5, { 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x578d, gbc.sp());
        EXPECT(0x1a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02AC
        gbc.setState(0xb156, 0x45cf, 0xfdb0, 0xe081, 0x412e, 0xceb3, 0x1, 0x1);
        gbc.writeMem(0xb156, { 0x56 });
        gbc.writeMem(0xceb3, { 0xee });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x45cf, gbc.sp());
        EXPECT(0xb157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb156));
        EXPECT(0xee, gbc.readMem(0xceb3));
        // 56 02AD
        gbc.setState(0xc3a1, 0x4aff, 0xaa70, 0xa90a, 0x476d, 0x91ac, 0x1, 0x0);
        gbc.writeMem(0x91ac, { 0x1d });
        gbc.writeMem(0xc3a1, { 0x56 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4aff, gbc.sp());
        EXPECT(0xc3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x91ac));
        EXPECT(0x56, gbc.readMem(0xc3a1));
        // 56 02AE
        gbc.setState(0xa947, 0xabe, 0x5ef0, 0x44ca, 0xc497, 0x7898, 0x0, 0x0);
        gbc.writeMem(0x7898, { 0xe5 });
        gbc.writeMem(0xa947, { 0x56 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xabe, gbc.sp());
        EXPECT(0xa948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa947));
        // 56 02AF
        gbc.setState(0x2a70, 0x6f79, 0xd220, 0x9d0a, 0x79a6, 0x3265, 0x0, 0x0);
        gbc.writeMem(0x2a70, { 0x56 });
        gbc.writeMem(0x3265, { 0x95 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6f79, gbc.sp());
        EXPECT(0x2a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02B0
        gbc.setState(0xeb12, 0x6b84, 0x4e80, 0x5d98, 0xcbcc, 0xf83, 0x0, 0x1);
        gbc.writeMem(0xf83, { 0x22 });
        gbc.writeMem(0xeb12, { 0x56 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6b84, gbc.sp());
        EXPECT(0xeb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xeb12));
        // 56 02B1
        gbc.setState(0x2f25, 0x8587, 0xee60, 0x72ea, 0x273e, 0x9268, 0x0, 0x1);
        gbc.writeMem(0x2f25, { 0x56 });
        gbc.writeMem(0x9268, { 0xf7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8587, gbc.sp());
        EXPECT(0x2f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9268));
        // 56 02B2
        gbc.setState(0x9766, 0xbc9f, 0xcfb0, 0x6d3f, 0x3c61, 0xe21a, 0x1, 0x0);
        gbc.writeMem(0x9766, { 0x56 });
        gbc.writeMem(0xe21a, { 0x5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbc9f, gbc.sp());
        EXPECT(0x9767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9766));
        EXPECT(0x5, gbc.readMem(0xe21a));
        // 56 02B3
        gbc.setState(0x60c8, 0xe936, 0xf6b0, 0xef93, 0xd42b, 0x1e8b, 0x1, 0x1);
        gbc.writeMem(0x1e8b, { 0xd1 });
        gbc.writeMem(0x60c8, { 0x56 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe936, gbc.sp());
        EXPECT(0x60c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02B4
        gbc.setState(0x1b64, 0xcb2e, 0x9c80, 0x6bc3, 0xdbbb, 0xa749, 0x0, 0x1);
        gbc.writeMem(0x1b64, { 0x56 });
        gbc.writeMem(0xa749, { 0x5b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcb2e, gbc.sp());
        EXPECT(0x1b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa749));
        // 56 02B5
        gbc.setState(0xa55f, 0xc20b, 0xb40, 0x36ad, 0x2551, 0xb8f2, 0x0, 0x0);
        gbc.writeMem(0xa55f, { 0x56 });
        gbc.writeMem(0xb8f2, { 0x4d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc20b, gbc.sp());
        EXPECT(0xa560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa55f));
        EXPECT(0x4d, gbc.readMem(0xb8f2));
        // 56 02B6
        gbc.setState(0xa63c, 0xb028, 0x29d0, 0x948a, 0x21b4, 0x5172, 0x1, 0x1);
        gbc.writeMem(0x5172, { 0xf2 });
        gbc.writeMem(0xa63c, { 0x56 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb028, gbc.sp());
        EXPECT(0xa63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa63c));
        // 56 02B7
        gbc.setState(0x6e08, 0xf5e1, 0xf350, 0xc120, 0x380a, 0xcbcf, 0x0, 0x0);
        gbc.writeMem(0x6e08, { 0x56 });
        gbc.writeMem(0xcbcf, { 0x6a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf5e1, gbc.sp());
        EXPECT(0x6e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xcbcf));
        // 56 02B8
        gbc.setState(0x85a4, 0x28cd, 0xc1f0, 0xfd93, 0x294a, 0x316b, 0x0, 0x1);
        gbc.writeMem(0x316b, { 0x99 });
        gbc.writeMem(0x85a4, { 0x56 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x28cd, gbc.sp());
        EXPECT(0x85a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x85a4));
        // 56 02B9
        gbc.setState(0xd7a, 0xb505, 0x9900, 0xd628, 0xbf42, 0x5e9b, 0x0, 0x0);
        gbc.writeMem(0xd7a, { 0x56 });
        gbc.writeMem(0x5e9b, { 0xd3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb505, gbc.sp());
        EXPECT(0xd7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02BA
        gbc.setState(0x69bf, 0x1665, 0x9be0, 0x70b5, 0x22a1, 0x313a, 0x0, 0x1);
        gbc.writeMem(0x313a, { 0x8c });
        gbc.writeMem(0x69bf, { 0x56 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1665, gbc.sp());
        EXPECT(0x69c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02BB
        gbc.setState(0x3ddb, 0x6f9e, 0xae20, 0xaced, 0x54af, 0x97e3, 0x1, 0x0);
        gbc.writeMem(0x3ddb, { 0x56 });
        gbc.writeMem(0x97e3, { 0xd2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6f9e, gbc.sp());
        EXPECT(0x3ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x97e3));
        // 56 02BC
        gbc.setState(0x17bd, 0x9bd9, 0xe9f0, 0xe824, 0xe86f, 0xc00c, 0x0, 0x0);
        gbc.writeMem(0x17bd, { 0x56 });
        gbc.writeMem(0xc00c, { 0x38 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9bd9, gbc.sp());
        EXPECT(0x17be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc00c));
        // 56 02BE
        gbc.setState(0x47e4, 0x94f5, 0x5970, 0x524b, 0x8642, 0x8d5f, 0x0, 0x1);
        gbc.writeMem(0x47e4, { 0x56 });
        gbc.writeMem(0x8d5f, { 0x61 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x94f5, gbc.sp());
        EXPECT(0x47e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8d5f));
        // 56 02BF
        gbc.setState(0x739f, 0xcab9, 0xe2a0, 0x4c0f, 0x5e2a, 0x7050, 0x1, 0x0);
        gbc.writeMem(0x7050, { 0x7e });
        gbc.writeMem(0x739f, { 0x56 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcab9, gbc.sp());
        EXPECT(0x73a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02C0
        gbc.setState(0xd0a0, 0x4298, 0xdc50, 0x59a3, 0x9de, 0xd938, 0x0, 0x1);
        gbc.writeMem(0xd0a0, { 0x56 });
        gbc.writeMem(0xd938, { 0x42 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4298, gbc.sp());
        EXPECT(0xd0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xd0a0));
        EXPECT(0x42, gbc.readMem(0xd938));
        // 56 02C1
        gbc.setState(0x13c4, 0x4b84, 0x66d0, 0x2037, 0x266f, 0xa9fe, 0x0, 0x1);
        gbc.writeMem(0x13c4, { 0x56 });
        gbc.writeMem(0xa9fe, { 0x77 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4b84, gbc.sp());
        EXPECT(0x13c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa9fe));
        // 56 02C2
        gbc.setState(0x1946, 0x52e0, 0x5910, 0xb2af, 0xb13d, 0x16ae, 0x0, 0x1);
        gbc.writeMem(0x16ae, { 0xd2 });
        gbc.writeMem(0x1946, { 0x56 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x52e0, gbc.sp());
        EXPECT(0x1947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02C3
        gbc.setState(0x4e8, 0x4f75, 0x9a40, 0xd133, 0xc913, 0x4b4e, 0x0, 0x0);
        gbc.writeMem(0x4e8, { 0x56 });
        gbc.writeMem(0x4b4e, { 0x86 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4f75, gbc.sp());
        EXPECT(0x4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02C5
        gbc.setState(0x2570, 0xd8e7, 0x89a0, 0x73f0, 0x61b6, 0x4bb8, 0x1, 0x1);
        gbc.writeMem(0x2570, { 0x56 });
        gbc.writeMem(0x4bb8, { 0x2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd8e7, gbc.sp());
        EXPECT(0x2571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02C6
        gbc.setState(0x49f4, 0xfd15, 0x7040, 0x5206, 0x52e2, 0x42d5, 0x1, 0x1);
        gbc.writeMem(0x42d5, { 0x66 });
        gbc.writeMem(0x49f4, { 0x56 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfd15, gbc.sp());
        EXPECT(0x49f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02C7
        gbc.setState(0x2e5, 0xbde2, 0x350, 0x228f, 0x2ca3, 0x6ad9, 0x0, 0x0);
        gbc.writeMem(0x2e5, { 0x56 });
        gbc.writeMem(0x6ad9, { 0xf8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbde2, gbc.sp());
        EXPECT(0x2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02C8
        gbc.setState(0xdee3, 0xd4cd, 0x46a0, 0xe52a, 0xb8d2, 0xa4, 0x1, 0x0);
        gbc.writeMem(0xa4, { 0x9c });
        gbc.writeMem(0xdee3, { 0x56 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd4cd, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdee3));
        // 56 02C9
        gbc.setState(0x6637, 0xbf93, 0x8830, 0xce20, 0x11bc, 0xa560, 0x0, 0x0);
        gbc.writeMem(0x6637, { 0x56 });
        gbc.writeMem(0xa560, { 0x14 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbf93, gbc.sp());
        EXPECT(0x6638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa560));
        // 56 02CA
        gbc.setState(0x936f, 0xfb5d, 0xde50, 0x2dbb, 0x50de, 0x717a, 0x1, 0x1);
        gbc.writeMem(0x717a, { 0xc1 });
        gbc.writeMem(0x936f, { 0x56 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfb5d, gbc.sp());
        EXPECT(0x9370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x936f));
        // 56 02CB
        gbc.setState(0xc846, 0x5d8c, 0x1330, 0x1ec3, 0xd46f, 0xbd9, 0x1, 0x0);
        gbc.writeMem(0xbd9, { 0xf3 });
        gbc.writeMem(0xc846, { 0x56 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0xc847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc846));
        // 56 02CC
        gbc.setState(0x51cd, 0x4b79, 0x87a0, 0x7ae, 0xbb02, 0x1f9b, 0x0, 0x1);
        gbc.writeMem(0x1f9b, { 0x4f });
        gbc.writeMem(0x51cd, { 0x56 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4b79, gbc.sp());
        EXPECT(0x51ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02CD
        gbc.setState(0x8112, 0xb24b, 0x4c40, 0xaf5f, 0x5a1b, 0xb0bb, 0x1, 0x1);
        gbc.writeMem(0x8112, { 0x56 });
        gbc.writeMem(0xb0bb, { 0xd3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb24b, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8112));
        EXPECT(0xd3, gbc.readMem(0xb0bb));
        // 56 02CE
        gbc.setState(0xdff1, 0xb187, 0xde30, 0x9c1d, 0x4ea7, 0xd50, 0x1, 0x1);
        gbc.writeMem(0xd50, { 0xd0 });
        gbc.writeMem(0xdff1, { 0x56 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb187, gbc.sp());
        EXPECT(0xdff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdff1));
        // 56 02CF
        gbc.setState(0xb1af, 0xca1b, 0x9850, 0xba7d, 0x6977, 0x9553, 0x0, 0x0);
        gbc.writeMem(0x9553, { 0xb6 });
        gbc.writeMem(0xb1af, { 0x56 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xca1b, gbc.sp());
        EXPECT(0xb1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9553));
        EXPECT(0x56, gbc.readMem(0xb1af));
        // 56 02D0
        gbc.setState(0x6d23, 0x126d, 0xa70, 0x2439, 0xb517, 0x5d67, 0x0, 0x1);
        gbc.writeMem(0x5d67, { 0xb7 });
        gbc.writeMem(0x6d23, { 0x56 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x126d, gbc.sp());
        EXPECT(0x6d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02D1
        gbc.setState(0x791f, 0xef3f, 0x72f0, 0xa60f, 0x329, 0xd690, 0x1, 0x1);
        gbc.writeMem(0x791f, { 0x56 });
        gbc.writeMem(0xd690, { 0x18 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xef3f, gbc.sp());
        EXPECT(0x7920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xd690));
        // 56 02D2
        gbc.setState(0x9616, 0x3bfb, 0xf240, 0xb97f, 0x7e3b, 0x9a47, 0x0, 0x1);
        gbc.writeMem(0x9616, { 0x56 });
        gbc.writeMem(0x9a47, { 0xb1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3bfb, gbc.sp());
        EXPECT(0x9617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9616));
        EXPECT(0xb1, gbc.readMem(0x9a47));
        // 56 02D3
        gbc.setState(0x34d4, 0xa3a, 0xf100, 0xd070, 0x273a, 0x5c11, 0x1, 0x0);
        gbc.writeMem(0x34d4, { 0x56 });
        gbc.writeMem(0x5c11, { 0x1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa3a, gbc.sp());
        EXPECT(0x34d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02D4
        gbc.setState(0x6798, 0xbd81, 0x74d0, 0xc7ad, 0xebc7, 0x715a, 0x1, 0x1);
        gbc.writeMem(0x6798, { 0x56 });
        gbc.writeMem(0x715a, { 0xab });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbd81, gbc.sp());
        EXPECT(0x6799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02D5
        gbc.setState(0x1040, 0xe127, 0xa210, 0x45b5, 0x7e47, 0x14b5, 0x1, 0x1);
        gbc.writeMem(0x1040, { 0x56 });
        gbc.writeMem(0x14b5, { 0x2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe127, gbc.sp());
        EXPECT(0x1041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02D6
        gbc.setState(0x1242, 0x1ec, 0x6ba0, 0xace4, 0xd9e3, 0x9b34, 0x1, 0x0);
        gbc.writeMem(0x1242, { 0x56 });
        gbc.writeMem(0x9b34, { 0x7d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1ec, gbc.sp());
        EXPECT(0x1243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9b34));
        // 56 02D7
        gbc.setState(0x6143, 0xacbb, 0xfd00, 0x8919, 0x894d, 0xd158, 0x0, 0x0);
        gbc.writeMem(0x6143, { 0x56 });
        gbc.writeMem(0xd158, { 0xbb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xacbb, gbc.sp());
        EXPECT(0x6144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd158));
        // 56 02D8
        gbc.setState(0x25b5, 0xa7cc, 0xc4f0, 0x78f6, 0xe08e, 0xb443, 0x0, 0x1);
        gbc.writeMem(0x25b5, { 0x56 });
        gbc.writeMem(0xb443, { 0xf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa7cc, gbc.sp());
        EXPECT(0x25b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xb443));
        // 56 02D9
        gbc.setState(0x264e, 0x1fb9, 0xdfe0, 0x88ae, 0xf4a7, 0x3a67, 0x1, 0x0);
        gbc.writeMem(0x264e, { 0x56 });
        gbc.writeMem(0x3a67, { 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1fb9, gbc.sp());
        EXPECT(0x264f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02DA
        gbc.setState(0x5fe9, 0x55aa, 0xea70, 0xe299, 0xb5c9, 0x5b35, 0x1, 0x1);
        gbc.writeMem(0x5b35, { 0xf6 });
        gbc.writeMem(0x5fe9, { 0x56 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x55aa, gbc.sp());
        EXPECT(0x5fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02DB
        gbc.setState(0x8870, 0x6352, 0x6610, 0xbb20, 0xbdf8, 0xeac, 0x1, 0x1);
        gbc.writeMem(0xeac, { 0xc6 });
        gbc.writeMem(0x8870, { 0x56 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6352, gbc.sp());
        EXPECT(0x8871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8870));
        // 56 02DC
        gbc.setState(0xbae2, 0x1938, 0x8cf0, 0x6ba3, 0xc9e4, 0x1447, 0x0, 0x0);
        gbc.writeMem(0x1447, { 0xfd });
        gbc.writeMem(0xbae2, { 0x56 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1938, gbc.sp());
        EXPECT(0xbae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbae2));
        // 56 02DD
        gbc.setState(0xb2f7, 0x9b89, 0xa180, 0xf7e4, 0x67bc, 0xafb0, 0x0, 0x1);
        gbc.writeMem(0xafb0, { 0xd1 });
        gbc.writeMem(0xb2f7, { 0x56 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9b89, gbc.sp());
        EXPECT(0xb2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xafb0));
        EXPECT(0x56, gbc.readMem(0xb2f7));
        // 56 02DE
        gbc.setState(0xca7c, 0x7e8, 0xaab0, 0x929a, 0x71cb, 0xbf5e, 0x1, 0x0);
        gbc.writeMem(0xbf5e, { 0x8b });
        gbc.writeMem(0xca7c, { 0x56 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0xca7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbf5e));
        EXPECT(0x56, gbc.readMem(0xca7c));
        // 56 02DF
        gbc.setState(0x9485, 0xdf08, 0xc190, 0x2ad, 0xe2d7, 0x2eb5, 0x1, 0x1);
        gbc.writeMem(0x2eb5, { 0x21 });
        gbc.writeMem(0x9485, { 0x56 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdf08, gbc.sp());
        EXPECT(0x9486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9485));
        // 56 02E0
        gbc.setState(0xeb8, 0x3ff, 0xf6e0, 0xc7a2, 0xb83e, 0xa982, 0x1, 0x1);
        gbc.writeMem(0xeb8, { 0x56 });
        gbc.writeMem(0xa982, { 0xa0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3ff, gbc.sp());
        EXPECT(0xeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa982));
        // 56 02E1
        gbc.setState(0x6616, 0x23e1, 0xb690, 0x914e, 0xd9cf, 0x1ceb, 0x1, 0x0);
        gbc.writeMem(0x1ceb, { 0x5d });
        gbc.writeMem(0x6616, { 0x56 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x23e1, gbc.sp());
        EXPECT(0x6617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02E2
        gbc.setState(0x34b9, 0xd92e, 0x2a40, 0xab62, 0xc49d, 0xaf5c, 0x1, 0x1);
        gbc.writeMem(0x34b9, { 0x56 });
        gbc.writeMem(0xaf5c, { 0xbd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd92e, gbc.sp());
        EXPECT(0x34ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xaf5c));
        // 56 02E3
        gbc.setState(0x355c, 0x897d, 0x5df0, 0x3b9d, 0x258e, 0x38f9, 0x0, 0x1);
        gbc.writeMem(0x355c, { 0x56 });
        gbc.writeMem(0x38f9, { 0x49 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x897d, gbc.sp());
        EXPECT(0x355d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02E4
        gbc.setState(0xedaf, 0x7e8e, 0x520, 0x6f79, 0xe20e, 0xcb4e, 0x0, 0x1);
        gbc.writeMem(0xcb4e, { 0x43 });
        gbc.writeMem(0xedaf, { 0x56 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7e8e, gbc.sp());
        EXPECT(0xedb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcb4e));
        EXPECT(0x56, gbc.readMem(0xedaf));
        // 56 02E6
        gbc.setState(0x115b, 0x4c6d, 0x2ff0, 0xee77, 0xe716, 0x9515, 0x0, 0x0);
        gbc.writeMem(0x115b, { 0x56 });
        gbc.writeMem(0x9515, { 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4c6d, gbc.sp());
        EXPECT(0x115c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9515));
        // 56 02E7
        gbc.setState(0x3aa9, 0x437f, 0x6840, 0x63a7, 0x6d17, 0xd82, 0x0, 0x1);
        gbc.writeMem(0xd82, { 0x77 });
        gbc.writeMem(0x3aa9, { 0x56 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x437f, gbc.sp());
        EXPECT(0x3aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02E8
        gbc.setState(0xa31e, 0x48c3, 0xb450, 0xba0d, 0x1551, 0xfbe1, 0x1, 0x0);
        gbc.writeMem(0xa31e, { 0x56 });
        gbc.writeMem(0xfbe1, { 0xf7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x48c3, gbc.sp());
        EXPECT(0xa31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa31e));
        EXPECT(0xf7, gbc.readMem(0xfbe1));
        // 56 02E9
        gbc.setState(0xbe2b, 0x6329, 0x68d0, 0x2e76, 0xe0c6, 0x6053, 0x0, 0x1);
        gbc.writeMem(0x6053, { 0xf });
        gbc.writeMem(0xbe2b, { 0x56 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6329, gbc.sp());
        EXPECT(0xbe2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbe2b));
        // 56 02EA
        gbc.setState(0x9e9, 0xd065, 0x9550, 0x9676, 0x765a, 0xe6da, 0x0, 0x1);
        gbc.writeMem(0x9e9, { 0x56 });
        gbc.writeMem(0xe6da, { 0x2c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd065, gbc.sp());
        EXPECT(0x9ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe6da));
        // 56 02EB
        gbc.setState(0x5e2b, 0x6e27, 0x3f60, 0x173c, 0x90e5, 0x8d88, 0x0, 0x0);
        gbc.writeMem(0x5e2b, { 0x56 });
        gbc.writeMem(0x8d88, { 0xb4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6e27, gbc.sp());
        EXPECT(0x5e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x8d88));
        // 56 02EC
        gbc.setState(0x67a4, 0x80a2, 0xff70, 0xfa18, 0xd791, 0xa7c8, 0x0, 0x1);
        gbc.writeMem(0x67a4, { 0x56 });
        gbc.writeMem(0xa7c8, { 0x65 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x80a2, gbc.sp());
        EXPECT(0x67a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa7c8));
        // 56 02ED
        gbc.setState(0x5d6d, 0xda4f, 0x3210, 0xeb38, 0x9532, 0x600, 0x0, 0x0);
        gbc.writeMem(0x600, { 0xf8 });
        gbc.writeMem(0x5d6d, { 0x56 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xda4f, gbc.sp());
        EXPECT(0x5d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02EE
        gbc.setState(0x62ab, 0xef51, 0x8440, 0xaf5, 0xcbdd, 0x13b, 0x0, 0x0);
        gbc.writeMem(0x13b, { 0xc9 });
        gbc.writeMem(0x62ab, { 0x56 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xef51, gbc.sp());
        EXPECT(0x62ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02EF
        gbc.setState(0x8da1, 0x2d60, 0x83e0, 0x20c, 0xd87, 0xb443, 0x0, 0x1);
        gbc.writeMem(0x8da1, { 0x56 });
        gbc.writeMem(0xb443, { 0xf });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2d60, gbc.sp());
        EXPECT(0x8da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8da1));
        EXPECT(0xf, gbc.readMem(0xb443));
        // 56 02F0
        gbc.setState(0x4a77, 0xec9b, 0xddb0, 0x860, 0x7cc1, 0x5631, 0x0, 0x0);
        gbc.writeMem(0x4a77, { 0x56 });
        gbc.writeMem(0x5631, { 0xa9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xec9b, gbc.sp());
        EXPECT(0x4a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02F1
        gbc.setState(0x4db1, 0x3bfa, 0x1580, 0xa029, 0xd9ab, 0x2f65, 0x0, 0x1);
        gbc.writeMem(0x2f65, { 0x6a });
        gbc.writeMem(0x4db1, { 0x56 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3bfa, gbc.sp());
        EXPECT(0x4db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02F2
        gbc.setState(0xbbc6, 0xfebd, 0xab0, 0x2893, 0x9277, 0x3137, 0x0, 0x1);
        gbc.writeMem(0x3137, { 0x65 });
        gbc.writeMem(0xbbc6, { 0x56 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfebd, gbc.sp());
        EXPECT(0xbbc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbbc6));
        // 56 02F3
        gbc.setState(0xc544, 0xf8ba, 0x450, 0xcd5f, 0x6966, 0x4504, 0x0, 0x1);
        gbc.writeMem(0x4504, { 0x1e });
        gbc.writeMem(0xc544, { 0x56 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf8ba, gbc.sp());
        EXPECT(0xc545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc544));
        // 56 02F4
        gbc.setState(0xea82, 0xb0db, 0xe10, 0x7169, 0x50f, 0x89fc, 0x0, 0x0);
        gbc.writeMem(0x89fc, { 0x9 });
        gbc.writeMem(0xea82, { 0x56 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb0db, gbc.sp());
        EXPECT(0xea83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x89fc));
        EXPECT(0x56, gbc.readMem(0xea82));
        // 56 02F5
        gbc.setState(0x8c14, 0x754b, 0x8940, 0x69aa, 0x9b54, 0x4097, 0x1, 0x1);
        gbc.writeMem(0x4097, { 0x71 });
        gbc.writeMem(0x8c14, { 0x56 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x754b, gbc.sp());
        EXPECT(0x8c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8c14));
        // 56 02F6
        gbc.setState(0xe7d2, 0x3023, 0x31f0, 0x3920, 0x8592, 0xbd37, 0x1, 0x0);
        gbc.writeMem(0xbd37, { 0xc2 });
        gbc.writeMem(0xe7d2, { 0x56 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3023, gbc.sp());
        EXPECT(0xe7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbd37));
        EXPECT(0x56, gbc.readMem(0xe7d2));
        // 56 02F7
        gbc.setState(0xd5b, 0x7412, 0x19f0, 0xbe36, 0x5f15, 0x6c90, 0x0, 0x1);
        gbc.writeMem(0xd5b, { 0x56 });
        gbc.writeMem(0x6c90, { 0x93 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7412, gbc.sp());
        EXPECT(0xd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 02F8
        gbc.setState(0x70cf, 0xf55f, 0x32c0, 0xbcd0, 0xb58, 0x3153, 0x1, 0x0);
        gbc.writeMem(0x3153, { 0xba });
        gbc.writeMem(0x70cf, { 0x56 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf55f, gbc.sp());
        EXPECT(0x70d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02F9
        gbc.setState(0xe894, 0xf321, 0x86f0, 0xfde2, 0x976b, 0x78d8, 0x0, 0x1);
        gbc.writeMem(0x78d8, { 0x56 });
        gbc.writeMem(0xe894, { 0x56 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf321, gbc.sp());
        EXPECT(0xe895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe894));
        // 56 02FA
        gbc.setState(0xc570, 0x25ab, 0x5570, 0x914c, 0x604f, 0xfce2, 0x1, 0x0);
        gbc.writeMem(0xc570, { 0x56 });
        gbc.writeMem(0xfce2, { 0xca });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x25ab, gbc.sp());
        EXPECT(0xc571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc570));
        EXPECT(0xca, gbc.readMem(0xfce2));
        // 56 02FB
        gbc.setState(0xdb61, 0xd36b, 0x2220, 0x909d, 0x9b7d, 0x1e18, 0x1, 0x1);
        gbc.writeMem(0x1e18, { 0x6e });
        gbc.writeMem(0xdb61, { 0x56 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd36b, gbc.sp());
        EXPECT(0xdb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdb61));
        // 56 02FC
        gbc.setState(0x6022, 0x3b70, 0x6760, 0xc007, 0xa08a, 0x663f, 0x0, 0x1);
        gbc.writeMem(0x6022, { 0x56 });
        gbc.writeMem(0x663f, { 0xb4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3b70, gbc.sp());
        EXPECT(0x6023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 02FD
        gbc.setState(0xa131, 0xdfb9, 0x8b40, 0xc8d2, 0x3c1, 0x500f, 0x1, 0x1);
        gbc.writeMem(0x500f, { 0x53 });
        gbc.writeMem(0xa131, { 0x56 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdfb9, gbc.sp());
        EXPECT(0xa132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa131));
        // 56 02FE
        gbc.setState(0x7280, 0x1af8, 0x5330, 0x2e70, 0xd15d, 0x9b41, 0x1, 0x1);
        gbc.writeMem(0x7280, { 0x56 });
        gbc.writeMem(0x9b41, { 0xe0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1af8, gbc.sp());
        EXPECT(0x7281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9b41));
        // 56 02FF
        gbc.setState(0xcef3, 0xfb7b, 0xfb20, 0xc651, 0x1bd6, 0x1a0e, 0x0, 0x1);
        gbc.writeMem(0x1a0e, { 0x27 });
        gbc.writeMem(0xcef3, { 0x56 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfb7b, gbc.sp());
        EXPECT(0xcef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcef3));
        // 56 0300
        gbc.setState(0x7b26, 0x94c8, 0xbe40, 0xfa2b, 0xe026, 0x2e19, 0x1, 0x1);
        gbc.writeMem(0x2e19, { 0x0 });
        gbc.writeMem(0x7b26, { 0x56 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x94c8, gbc.sp());
        EXPECT(0x7b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0301
        gbc.setState(0xc018, 0xb97d, 0xbda0, 0x77fc, 0x97cb, 0xb760, 0x0, 0x0);
        gbc.writeMem(0xb760, { 0x77 });
        gbc.writeMem(0xc018, { 0x56 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb97d, gbc.sp());
        EXPECT(0xc019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb760));
        EXPECT(0x56, gbc.readMem(0xc018));
        // 56 0302
        gbc.setState(0xe7f2, 0xd4d4, 0xc080, 0xa6d4, 0xc6e7, 0x6c05, 0x1, 0x1);
        gbc.writeMem(0x6c05, { 0x49 });
        gbc.writeMem(0xe7f2, { 0x56 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd4d4, gbc.sp());
        EXPECT(0xe7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe7f2));
        // 56 0303
        gbc.setState(0x18e5, 0x9486, 0x3b50, 0xe40a, 0x8cb9, 0x5d0, 0x1, 0x1);
        gbc.writeMem(0x5d0, { 0x11 });
        gbc.writeMem(0x18e5, { 0x56 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9486, gbc.sp());
        EXPECT(0x18e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0304
        gbc.setState(0xb800, 0x9955, 0x84d0, 0x3a06, 0xc5eb, 0x34c3, 0x0, 0x1);
        gbc.writeMem(0x34c3, { 0x3e });
        gbc.writeMem(0xb800, { 0x56 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9955, gbc.sp());
        EXPECT(0xb801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb800));
        // 56 0305
        gbc.setState(0xbbc8, 0xed29, 0x4e60, 0x8456, 0x7c53, 0x2e89, 0x0, 0x0);
        gbc.writeMem(0x2e89, { 0x3a });
        gbc.writeMem(0xbbc8, { 0x56 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xed29, gbc.sp());
        EXPECT(0xbbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbbc8));
        // 56 0306
        gbc.setState(0xad, 0xd80e, 0xe7e0, 0x6cf6, 0x67a3, 0xf32a, 0x1, 0x0);
        gbc.writeMem(0xad, { 0x56 });
        gbc.writeMem(0xf32a, { 0x9c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd80e, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xf32a));
        // 56 0307
        gbc.setState(0x48c3, 0xf96d, 0x5290, 0x5615, 0x84d2, 0x5f38, 0x1, 0x0);
        gbc.writeMem(0x48c3, { 0x56 });
        gbc.writeMem(0x5f38, { 0xdc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf96d, gbc.sp());
        EXPECT(0x48c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0308
        gbc.setState(0x2c9c, 0x5aff, 0xc4f0, 0x30be, 0x92f, 0x6dd5, 0x0, 0x1);
        gbc.writeMem(0x2c9c, { 0x56 });
        gbc.writeMem(0x6dd5, { 0x36 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5aff, gbc.sp());
        EXPECT(0x2c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0309
        gbc.setState(0x9b47, 0x7959, 0x1f10, 0xc764, 0x940a, 0xc933, 0x1, 0x1);
        gbc.writeMem(0x9b47, { 0x56 });
        gbc.writeMem(0xc933, { 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7959, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9b47));
        EXPECT(0xc7, gbc.readMem(0xc933));
        // 56 030A
        gbc.setState(0xd672, 0x6d29, 0xd970, 0x71f2, 0x362b, 0x97f7, 0x1, 0x0);
        gbc.writeMem(0x97f7, { 0x6b });
        gbc.writeMem(0xd672, { 0x56 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6d29, gbc.sp());
        EXPECT(0xd673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x97f7));
        EXPECT(0x56, gbc.readMem(0xd672));
        // 56 030C
        gbc.setState(0xc75f, 0x5950, 0xd610, 0x7bc8, 0x5111, 0x5e2d, 0x0, 0x1);
        gbc.writeMem(0x5e2d, { 0x7a });
        gbc.writeMem(0xc75f, { 0x56 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5950, gbc.sp());
        EXPECT(0xc760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc75f));
        // 56 030D
        gbc.setState(0xa5d3, 0x10db, 0x3860, 0x3d9e, 0xa4d9, 0x17a9, 0x1, 0x0);
        gbc.writeMem(0x17a9, { 0xd });
        gbc.writeMem(0xa5d3, { 0x56 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x10db, gbc.sp());
        EXPECT(0xa5d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa5d3));
        // 56 030E
        gbc.setState(0x2027, 0x1925, 0xe680, 0xddae, 0xd867, 0xd003, 0x0, 0x1);
        gbc.writeMem(0x2027, { 0x56 });
        gbc.writeMem(0xd003, { 0x23 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1925, gbc.sp());
        EXPECT(0x2028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xd003));
        // 56 030F
        gbc.setState(0xc119, 0xdd6c, 0xe540, 0x7eab, 0x21f, 0x90bb, 0x1, 0x0);
        gbc.writeMem(0x90bb, { 0xbf });
        gbc.writeMem(0xc119, { 0x56 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdd6c, gbc.sp());
        EXPECT(0xc11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x90bb));
        EXPECT(0x56, gbc.readMem(0xc119));
        // 56 0310
        gbc.setState(0xeb5c, 0x567c, 0x37d0, 0xa23e, 0x2892, 0x1554, 0x0, 0x1);
        gbc.writeMem(0x1554, { 0x52 });
        gbc.writeMem(0xeb5c, { 0x56 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x567c, gbc.sp());
        EXPECT(0xeb5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xeb5c));
        // 56 0311
        gbc.setState(0x71fe, 0xa38d, 0x7580, 0x781f, 0xce9a, 0x9568, 0x1, 0x0);
        gbc.writeMem(0x71fe, { 0x56 });
        gbc.writeMem(0x9568, { 0x99 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa38d, gbc.sp());
        EXPECT(0x71ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9568));
        // 56 0312
        gbc.setState(0x54de, 0x33f2, 0x36c0, 0x9c20, 0x7879, 0xaf3e, 0x1, 0x1);
        gbc.writeMem(0x54de, { 0x56 });
        gbc.writeMem(0xaf3e, { 0xcb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x33f2, gbc.sp());
        EXPECT(0x54df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3e));
        // 56 0313
        gbc.setState(0xa54e, 0xbf61, 0xef80, 0x7e97, 0x266c, 0x8e44, 0x0, 0x1);
        gbc.writeMem(0x8e44, { 0xdf });
        gbc.writeMem(0xa54e, { 0x56 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbf61, gbc.sp());
        EXPECT(0xa54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8e44));
        EXPECT(0x56, gbc.readMem(0xa54e));
        // 56 0314
        gbc.setState(0xca0b, 0xfd23, 0x5240, 0x5d8b, 0x6513, 0x725e, 0x0, 0x1);
        gbc.writeMem(0x725e, { 0x32 });
        gbc.writeMem(0xca0b, { 0x56 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfd23, gbc.sp());
        EXPECT(0xca0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xca0b));
        // 56 0315
        gbc.setState(0x5839, 0x8e7c, 0x6d30, 0x86d8, 0xf1f1, 0xe322, 0x1, 0x0);
        gbc.writeMem(0x5839, { 0x56 });
        gbc.writeMem(0xe322, { 0x4a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8e7c, gbc.sp());
        EXPECT(0x583a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xe322));
        // 56 0316
        gbc.setState(0x8056, 0x3981, 0x2ed0, 0xea20, 0x1b1f, 0x9d23, 0x0, 0x0);
        gbc.writeMem(0x8056, { 0x56 });
        gbc.writeMem(0x9d23, { 0x85 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3981, gbc.sp());
        EXPECT(0x8057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8056));
        EXPECT(0x85, gbc.readMem(0x9d23));
        // 56 0317
        gbc.setState(0x5892, 0x6a71, 0x99a0, 0x88b, 0xe7e9, 0xf203, 0x0, 0x1);
        gbc.writeMem(0x5892, { 0x56 });
        gbc.writeMem(0xf203, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6a71, gbc.sp());
        EXPECT(0x5893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xf203));
        // 56 0318
        gbc.setState(0x5994, 0xccef, 0x5af0, 0x657, 0xff5d, 0x81ce, 0x0, 0x1);
        gbc.writeMem(0x5994, { 0x56 });
        gbc.writeMem(0x81ce, { 0xe7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xccef, gbc.sp());
        EXPECT(0x5995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x81ce));
        // 56 0319
        gbc.setState(0x26a5, 0x60ef, 0x7b00, 0x4ea9, 0x8160, 0xe8a1, 0x0, 0x0);
        gbc.writeMem(0x26a5, { 0x56 });
        gbc.writeMem(0xe8a1, { 0xad });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x60ef, gbc.sp());
        EXPECT(0x26a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xe8a1));
        // 56 031A
        gbc.setState(0xe62b, 0x8d31, 0xf9c0, 0x107, 0xe60d, 0x994e, 0x1, 0x1);
        gbc.writeMem(0x994e, { 0xb2 });
        gbc.writeMem(0xe62b, { 0x56 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8d31, gbc.sp());
        EXPECT(0xe62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x994e));
        EXPECT(0x56, gbc.readMem(0xe62b));
        // 56 031B
        gbc.setState(0xc9bb, 0x92ec, 0xbc50, 0xebc2, 0x283e, 0xed04, 0x1, 0x0);
        gbc.writeMem(0xc9bb, { 0x56 });
        gbc.writeMem(0xed04, { 0xcf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x92ec, gbc.sp());
        EXPECT(0xc9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc9bb));
        EXPECT(0xcf, gbc.readMem(0xed04));
        // 56 031C
        gbc.setState(0x40ee, 0x726e, 0x9d10, 0x830d, 0xbccf, 0x19a0, 0x0, 0x0);
        gbc.writeMem(0x19a0, { 0x1a });
        gbc.writeMem(0x40ee, { 0x56 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x726e, gbc.sp());
        EXPECT(0x40ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 031D
        gbc.setState(0xe49e, 0x30c9, 0x6860, 0x47cf, 0xabe, 0xca40, 0x0, 0x0);
        gbc.writeMem(0xca40, { 0x9a });
        gbc.writeMem(0xe49e, { 0x56 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x30c9, gbc.sp());
        EXPECT(0xe49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xca40));
        EXPECT(0x56, gbc.readMem(0xe49e));
        // 56 031E
        gbc.setState(0xcd72, 0xe57c, 0x5360, 0x6063, 0x41b1, 0xd028, 0x0, 0x0);
        gbc.writeMem(0xcd72, { 0x56 });
        gbc.writeMem(0xd028, { 0xff });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe57c, gbc.sp());
        EXPECT(0xcd73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcd72));
        EXPECT(0xff, gbc.readMem(0xd028));
        // 56 031F
        gbc.setState(0xebd9, 0xc88e, 0x1d80, 0x77d9, 0x539e, 0xfdf2, 0x1, 0x0);
        gbc.writeMem(0xebd9, { 0x56 });
        gbc.writeMem(0xfdf2, { 0xf6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc88e, gbc.sp());
        EXPECT(0xebda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xebd9));
        EXPECT(0xf6, gbc.readMem(0xfdf2));
        // 56 0320
        gbc.setState(0x58ad, 0x51b9, 0xa510, 0x81fa, 0x3de2, 0xdeca, 0x1, 0x1);
        gbc.writeMem(0x58ad, { 0x56 });
        gbc.writeMem(0xdeca, { 0x14 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x51b9, gbc.sp());
        EXPECT(0x58ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdeca));
        // 56 0321
        gbc.setState(0x2fc7, 0xb924, 0x5b20, 0xe894, 0xf996, 0x8497, 0x0, 0x0);
        gbc.writeMem(0x2fc7, { 0x56 });
        gbc.writeMem(0x8497, { 0xb6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb924, gbc.sp());
        EXPECT(0x2fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8497));
        // 56 0322
        gbc.setState(0x30ca, 0xa646, 0x4640, 0x3550, 0x39c6, 0x731a, 0x0, 0x0);
        gbc.writeMem(0x30ca, { 0x56 });
        gbc.writeMem(0x731a, { 0xa });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0x30cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0324
        gbc.setState(0xebdc, 0x2d38, 0x110, 0x336e, 0x6cff, 0xc085, 0x0, 0x0);
        gbc.writeMem(0xc085, { 0x43 });
        gbc.writeMem(0xebdc, { 0x56 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2d38, gbc.sp());
        EXPECT(0xebdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc085));
        EXPECT(0x56, gbc.readMem(0xebdc));
        // 56 0325
        gbc.setState(0x4f2e, 0x8c07, 0xa6a0, 0xf5ee, 0xbdd7, 0xd174, 0x1, 0x1);
        gbc.writeMem(0x4f2e, { 0x56 });
        gbc.writeMem(0xd174, { 0x22 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8c07, gbc.sp());
        EXPECT(0x4f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd174));
        // 56 0326
        gbc.setState(0xa363, 0x981d, 0xf9a0, 0xff22, 0xa9bc, 0x17a8, 0x1, 0x1);
        gbc.writeMem(0x17a8, { 0xc8 });
        gbc.writeMem(0xa363, { 0x56 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x981d, gbc.sp());
        EXPECT(0xa364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa363));
        // 56 0327
        gbc.setState(0x7d52, 0xab12, 0x1ad0, 0x7195, 0xb3dd, 0xd34d, 0x0, 0x0);
        gbc.writeMem(0x7d52, { 0x56 });
        gbc.writeMem(0xd34d, { 0xf2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xab12, gbc.sp());
        EXPECT(0x7d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xd34d));
        // 56 0328
        gbc.setState(0x43c4, 0xcb89, 0xd40, 0xc9f5, 0x111c, 0xb900, 0x0, 0x0);
        gbc.writeMem(0x43c4, { 0x56 });
        gbc.writeMem(0xb900, { 0xf7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcb89, gbc.sp());
        EXPECT(0x43c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb900));
        // 56 0329
        gbc.setState(0x5bb7, 0xa658, 0x6e10, 0x107a, 0x5d9d, 0x9108, 0x1, 0x1);
        gbc.writeMem(0x5bb7, { 0x56 });
        gbc.writeMem(0x9108, { 0xd7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa658, gbc.sp());
        EXPECT(0x5bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9108));
        // 56 032A
        gbc.setState(0xc790, 0x9213, 0xa660, 0x7a6d, 0x83ea, 0x1c00, 0x0, 0x0);
        gbc.writeMem(0x1c00, { 0xb7 });
        gbc.writeMem(0xc790, { 0x56 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9213, gbc.sp());
        EXPECT(0xc791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc790));
        // 56 032B
        gbc.setState(0x169b, 0xc33f, 0x550, 0x584b, 0xbd38, 0x4c89, 0x0, 0x1);
        gbc.writeMem(0x169b, { 0x56 });
        gbc.writeMem(0x4c89, { 0xe7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc33f, gbc.sp());
        EXPECT(0x169c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 032C
        gbc.setState(0x6cbd, 0x897e, 0xc1a0, 0xab1f, 0xbf5b, 0xeaa8, 0x1, 0x1);
        gbc.writeMem(0x6cbd, { 0x56 });
        gbc.writeMem(0xeaa8, { 0xa2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x897e, gbc.sp());
        EXPECT(0x6cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xeaa8));
        // 56 032D
        gbc.setState(0xe6e7, 0xf0ea, 0x9b10, 0xc21b, 0xffd5, 0xbac7, 0x0, 0x1);
        gbc.writeMem(0xbac7, { 0xfd });
        gbc.writeMem(0xe6e7, { 0x56 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf0ea, gbc.sp());
        EXPECT(0xe6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xbac7));
        EXPECT(0x56, gbc.readMem(0xe6e7));
        // 56 032E
        gbc.setState(0x5ed6, 0x1221, 0xc3c0, 0xe22a, 0x9d7f, 0x8fe0, 0x1, 0x1);
        gbc.writeMem(0x5ed6, { 0x56 });
        gbc.writeMem(0x8fe0, { 0x6f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1221, gbc.sp());
        EXPECT(0x5ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8fe0));
        // 56 032F
        gbc.setState(0xedf, 0x57a4, 0x9090, 0xbae7, 0x9d5b, 0x469e, 0x0, 0x1);
        gbc.writeMem(0xedf, { 0x56 });
        gbc.writeMem(0x469e, { 0x24 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x57a4, gbc.sp());
        EXPECT(0xee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0330
        gbc.setState(0xa5c0, 0x56e6, 0x9b80, 0xbda2, 0x5b59, 0xa81c, 0x0, 0x0);
        gbc.writeMem(0xa5c0, { 0x56 });
        gbc.writeMem(0xa81c, { 0xbe });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x56e6, gbc.sp());
        EXPECT(0xa5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa5c0));
        EXPECT(0xbe, gbc.readMem(0xa81c));
        // 56 0331
        gbc.setState(0x2c03, 0x3601, 0x9840, 0x86d4, 0x5513, 0x1d1b, 0x0, 0x1);
        gbc.writeMem(0x1d1b, { 0xa1 });
        gbc.writeMem(0x2c03, { 0x56 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3601, gbc.sp());
        EXPECT(0x2c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0332
        gbc.setState(0xcd29, 0x5d95, 0x9050, 0x6a8c, 0x5ceb, 0x2c5b, 0x1, 0x1);
        gbc.writeMem(0x2c5b, { 0xc7 });
        gbc.writeMem(0xcd29, { 0x56 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5d95, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xcd29));
        // 56 0333
        gbc.setState(0xe2, 0x8c12, 0x1c00, 0x28e3, 0xd16e, 0x8234, 0x0, 0x1);
        gbc.writeMem(0xe2, { 0x56 });
        gbc.writeMem(0x8234, { 0xf7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8c12, gbc.sp());
        EXPECT(0xe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8234));
        // 56 0334
        gbc.setState(0x748e, 0x227f, 0x1210, 0x8dc7, 0x5661, 0xdd3e, 0x0, 0x0);
        gbc.writeMem(0x748e, { 0x56 });
        gbc.writeMem(0xdd3e, { 0x2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x227f, gbc.sp());
        EXPECT(0x748f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xdd3e));
        // 56 0335
        gbc.setState(0x18cd, 0x668f, 0x5d30, 0xd52c, 0x9415, 0xced6, 0x1, 0x1);
        gbc.writeMem(0x18cd, { 0x56 });
        gbc.writeMem(0xced6, { 0x2e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x668f, gbc.sp());
        EXPECT(0x18ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xced6));
        // 56 0336
        gbc.setState(0x4454, 0x7f22, 0x84a0, 0xcf3f, 0x35b3, 0x75c1, 0x1, 0x1);
        gbc.writeMem(0x4454, { 0x56 });
        gbc.writeMem(0x75c1, { 0x21 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7f22, gbc.sp());
        EXPECT(0x4455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0337
        gbc.setState(0xa75c, 0xefb6, 0x34f0, 0x22e3, 0x9073, 0x9489, 0x0, 0x1);
        gbc.writeMem(0x9489, { 0xf4 });
        gbc.writeMem(0xa75c, { 0x56 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xefb6, gbc.sp());
        EXPECT(0xa75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9489));
        EXPECT(0x56, gbc.readMem(0xa75c));
        // 56 0338
        gbc.setState(0x264b, 0xf894, 0x82c0, 0xc5c6, 0x79ab, 0x4cb0, 0x1, 0x1);
        gbc.writeMem(0x264b, { 0x56 });
        gbc.writeMem(0x4cb0, { 0x8f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf894, gbc.sp());
        EXPECT(0x264c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0339
        gbc.setState(0x2d24, 0x7f94, 0xa020, 0x362f, 0x6ba2, 0x4a40, 0x0, 0x1);
        gbc.writeMem(0x2d24, { 0x56 });
        gbc.writeMem(0x4a40, { 0x5c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7f94, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 033A
        gbc.setState(0x8bc7, 0x47a9, 0x4d30, 0x9ef4, 0xfd56, 0xa2fa, 0x0, 0x1);
        gbc.writeMem(0x8bc7, { 0x56 });
        gbc.writeMem(0xa2fa, { 0xb3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x47a9, gbc.sp());
        EXPECT(0x8bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8bc7));
        EXPECT(0xb3, gbc.readMem(0xa2fa));
        // 56 033B
        gbc.setState(0x48df, 0x7da8, 0xf740, 0x7dad, 0x6c22, 0xce13, 0x0, 0x0);
        gbc.writeMem(0x48df, { 0x56 });
        gbc.writeMem(0xce13, { 0x38 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7da8, gbc.sp());
        EXPECT(0x48e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xce13));
        // 56 033C
        gbc.setState(0xc760, 0x2160, 0x2540, 0x8e22, 0x6062, 0xdbaf, 0x0, 0x1);
        gbc.writeMem(0xc760, { 0x56 });
        gbc.writeMem(0xdbaf, { 0x94 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2160, gbc.sp());
        EXPECT(0xc761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc760));
        EXPECT(0x94, gbc.readMem(0xdbaf));
        // 56 033D
        gbc.setState(0x1dae, 0x58e5, 0xe2a0, 0xf245, 0x246e, 0xbe1a, 0x0, 0x0);
        gbc.writeMem(0x1dae, { 0x56 });
        gbc.writeMem(0xbe1a, { 0x6e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x58e5, gbc.sp());
        EXPECT(0x1daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbe1a));
        // 56 033E
        gbc.setState(0x1f16, 0x9ca3, 0xee40, 0xf377, 0xb7de, 0xd7bc, 0x1, 0x0);
        gbc.writeMem(0x1f16, { 0x56 });
        gbc.writeMem(0xd7bc, { 0xa8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9ca3, gbc.sp());
        EXPECT(0x1f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xd7bc));
        // 56 033F
        gbc.setState(0xc857, 0xef79, 0xffa0, 0x1a51, 0xf89b, 0x6e99, 0x1, 0x0);
        gbc.writeMem(0x6e99, { 0xd3 });
        gbc.writeMem(0xc857, { 0x56 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xef79, gbc.sp());
        EXPECT(0xc858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc857));
        // 56 0340
        gbc.setState(0x3c2, 0xe2c6, 0x80b0, 0x75fa, 0x32ad, 0x2206, 0x0, 0x1);
        gbc.writeMem(0x3c2, { 0x56 });
        gbc.writeMem(0x2206, { 0xc0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe2c6, gbc.sp());
        EXPECT(0x3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0341
        gbc.setState(0xc3a2, 0x3fba, 0x3330, 0xa08d, 0x761c, 0xb695, 0x0, 0x1);
        gbc.writeMem(0xb695, { 0xb6 });
        gbc.writeMem(0xc3a2, { 0x56 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3fba, gbc.sp());
        EXPECT(0xc3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb695));
        EXPECT(0x56, gbc.readMem(0xc3a2));
        // 56 0342
        gbc.setState(0x6d69, 0x6e3c, 0xa590, 0xc63e, 0x59a, 0x319c, 0x0, 0x0);
        gbc.writeMem(0x319c, { 0x48 });
        gbc.writeMem(0x6d69, { 0x56 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6e3c, gbc.sp());
        EXPECT(0x6d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0343
        gbc.setState(0xe508, 0x5103, 0x5bc0, 0xa51f, 0xa7f1, 0xea, 0x1, 0x1);
        gbc.writeMem(0xea, { 0xef });
        gbc.writeMem(0xe508, { 0x56 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5103, gbc.sp());
        EXPECT(0xe509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe508));
        // 56 0344
        gbc.setState(0x9758, 0xe749, 0x12c0, 0xbfc, 0xb6c2, 0x2913, 0x0, 0x0);
        gbc.writeMem(0x2913, { 0x80 });
        gbc.writeMem(0x9758, { 0x56 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe749, gbc.sp());
        EXPECT(0x9759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9758));
        // 56 0345
        gbc.setState(0xe4ec, 0x181e, 0x9b50, 0x97f0, 0xc0e0, 0x240d, 0x0, 0x1);
        gbc.writeMem(0x240d, { 0x79 });
        gbc.writeMem(0xe4ec, { 0x56 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x181e, gbc.sp());
        EXPECT(0xe4ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe4ec));
        // 56 0346
        gbc.setState(0xce8e, 0xfb63, 0xc2c0, 0xdb41, 0x1c54, 0x45fc, 0x1, 0x1);
        gbc.writeMem(0x45fc, { 0xd3 });
        gbc.writeMem(0xce8e, { 0x56 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfb63, gbc.sp());
        EXPECT(0xce8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xce8e));
        // 56 0347
        gbc.setState(0xefe3, 0xa35a, 0x6680, 0x217f, 0x20be, 0x80d6, 0x0, 0x0);
        gbc.writeMem(0x80d6, { 0x93 });
        gbc.writeMem(0xefe3, { 0x56 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa35a, gbc.sp());
        EXPECT(0xefe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x80d6));
        EXPECT(0x56, gbc.readMem(0xefe3));
        // 56 0348
        gbc.setState(0xd9e4, 0xdec3, 0x37d0, 0xa297, 0xcf1e, 0x9005, 0x1, 0x0);
        gbc.writeMem(0x9005, { 0x2c });
        gbc.writeMem(0xd9e4, { 0x56 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdec3, gbc.sp());
        EXPECT(0xd9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9005));
        EXPECT(0x56, gbc.readMem(0xd9e4));
        // 56 0349
        gbc.setState(0x360e, 0x864c, 0x5f60, 0xbeff, 0x263b, 0x30b2, 0x0, 0x0);
        gbc.writeMem(0x30b2, { 0x5 });
        gbc.writeMem(0x360e, { 0x56 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x864c, gbc.sp());
        EXPECT(0x360f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 034A
        gbc.setState(0x40fa, 0x3c3e, 0xa950, 0xab9c, 0x2d45, 0x8c5a, 0x0, 0x1);
        gbc.writeMem(0x40fa, { 0x56 });
        gbc.writeMem(0x8c5a, { 0xd0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3c3e, gbc.sp());
        EXPECT(0x40fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8c5a));
        // 56 034B
        gbc.setState(0x85e3, 0x90e6, 0x9d30, 0xf687, 0x91ac, 0x671f, 0x1, 0x0);
        gbc.writeMem(0x671f, { 0xe1 });
        gbc.writeMem(0x85e3, { 0x56 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x90e6, gbc.sp());
        EXPECT(0x85e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x85e3));
        // 56 034C
        gbc.setState(0xb7c6, 0xcf6d, 0x3880, 0x9e78, 0x27d7, 0x971e, 0x0, 0x1);
        gbc.writeMem(0x971e, { 0x28 });
        gbc.writeMem(0xb7c6, { 0x56 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcf6d, gbc.sp());
        EXPECT(0xb7c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x971e));
        EXPECT(0x56, gbc.readMem(0xb7c6));
        // 56 034E
        gbc.setState(0x757f, 0x690c, 0x10b0, 0xa4ef, 0xf39e, 0x7a68, 0x0, 0x1);
        gbc.writeMem(0x757f, { 0x56 });
        gbc.writeMem(0x7a68, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x690c, gbc.sp());
        EXPECT(0x7580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 034F
        gbc.setState(0xed6a, 0x6145, 0xe9e0, 0x624f, 0xce17, 0xe686, 0x1, 0x0);
        gbc.writeMem(0xe686, { 0x58 });
        gbc.writeMem(0xed6a, { 0x56 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6145, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe686));
        EXPECT(0x56, gbc.readMem(0xed6a));
        // 56 0350
        gbc.setState(0x50f7, 0x1ee9, 0x22c0, 0x545c, 0xabc3, 0x44f5, 0x1, 0x0);
        gbc.writeMem(0x44f5, { 0xc7 });
        gbc.writeMem(0x50f7, { 0x56 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1ee9, gbc.sp());
        EXPECT(0x50f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0351
        gbc.setState(0x1df2, 0x8d0e, 0x7580, 0xf77a, 0x8a0e, 0x4873, 0x0, 0x0);
        gbc.writeMem(0x1df2, { 0x56 });
        gbc.writeMem(0x4873, { 0x2d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8d0e, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0352
        gbc.setState(0x285f, 0x862f, 0xc340, 0x7e4e, 0x2199, 0x694d, 0x0, 0x0);
        gbc.writeMem(0x285f, { 0x56 });
        gbc.writeMem(0x694d, { 0xcd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x862f, gbc.sp());
        EXPECT(0x2860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0353
        gbc.setState(0xaf79, 0x77c6, 0x9ac0, 0x2da3, 0x1097, 0xa41e, 0x1, 0x1);
        gbc.writeMem(0xa41e, { 0xcf });
        gbc.writeMem(0xaf79, { 0x56 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x77c6, gbc.sp());
        EXPECT(0xaf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xa41e));
        EXPECT(0x56, gbc.readMem(0xaf79));
        // 56 0354
        gbc.setState(0x4568, 0x2661, 0xf440, 0xff8a, 0xa684, 0x3ed0, 0x1, 0x0);
        gbc.writeMem(0x3ed0, { 0xae });
        gbc.writeMem(0x4568, { 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2661, gbc.sp());
        EXPECT(0x4569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0355
        gbc.setState(0x5b8, 0xb647, 0x72e0, 0x50dc, 0x975c, 0xaa67, 0x0, 0x1);
        gbc.writeMem(0x5b8, { 0x56 });
        gbc.writeMem(0xaa67, { 0xa8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb647, gbc.sp());
        EXPECT(0x5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xaa67));
        // 56 0356
        gbc.setState(0x2ba3, 0x520a, 0xeaf0, 0x75ae, 0xb5ab, 0xfee0, 0x1, 0x1);
        gbc.writeMem(0x2ba3, { 0x56 });
        gbc.writeMem(0xfee0, { 0xaa });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x520a, gbc.sp());
        EXPECT(0x2ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xfee0));
        // 56 0357
        gbc.setState(0x1268, 0x750c, 0x1fe0, 0xc3a8, 0x9adc, 0x7a6a, 0x0, 0x0);
        gbc.writeMem(0x1268, { 0x56 });
        gbc.writeMem(0x7a6a, { 0xb6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x750c, gbc.sp());
        EXPECT(0x1269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0358
        gbc.setState(0x7e9e, 0xc092, 0xf1e0, 0xda73, 0x5101, 0xcc3a, 0x0, 0x1);
        gbc.writeMem(0x7e9e, { 0x56 });
        gbc.writeMem(0xcc3a, { 0x19 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc092, gbc.sp());
        EXPECT(0x7e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcc3a));
        // 56 0359
        gbc.setState(0xb01a, 0xb0d1, 0x2160, 0x589b, 0x380a, 0x5695, 0x0, 0x1);
        gbc.writeMem(0x5695, { 0x16 });
        gbc.writeMem(0xb01a, { 0x56 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb0d1, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb01a));
        // 56 035A
        gbc.setState(0xa4c7, 0x3699, 0xcba0, 0xf438, 0x2b24, 0xdff6, 0x0, 0x0);
        gbc.writeMem(0xa4c7, { 0x56 });
        gbc.writeMem(0xdff6, { 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3699, gbc.sp());
        EXPECT(0xa4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa4c7));
        EXPECT(0x7, gbc.readMem(0xdff6));
        // 56 035B
        gbc.setState(0x7f14, 0xeeee, 0x2b60, 0x9aa, 0x5ddc, 0xfd86, 0x0, 0x1);
        gbc.writeMem(0x7f14, { 0x56 });
        gbc.writeMem(0xfd86, { 0x3d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xeeee, gbc.sp());
        EXPECT(0x7f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xfd86));
        // 56 035C
        gbc.setState(0x8192, 0x1faa, 0x2ee0, 0xd4a7, 0x8853, 0x23bc, 0x0, 0x0);
        gbc.writeMem(0x23bc, { 0x3e });
        gbc.writeMem(0x8192, { 0x56 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1faa, gbc.sp());
        EXPECT(0x8193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8192));
        // 56 035D
        gbc.setState(0x15fa, 0x1737, 0x2f30, 0xe600, 0x3d80, 0xa165, 0x0, 0x0);
        gbc.writeMem(0x15fa, { 0x56 });
        gbc.writeMem(0xa165, { 0x55 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1737, gbc.sp());
        EXPECT(0x15fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa165));
        // 56 035E
        gbc.setState(0x6a18, 0x423, 0xe5a0, 0x8f6c, 0x3308, 0xcf00, 0x1, 0x0);
        gbc.writeMem(0x6a18, { 0x56 });
        gbc.writeMem(0xcf00, { 0xa3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x423, gbc.sp());
        EXPECT(0x6a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcf00));
        // 56 035F
        gbc.setState(0x7ed8, 0xb81d, 0x5790, 0xbca1, 0xf571, 0xb198, 0x0, 0x0);
        gbc.writeMem(0x7ed8, { 0x56 });
        gbc.writeMem(0xb198, { 0x27 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb81d, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb198));
        // 56 0360
        gbc.setState(0x2e79, 0x2694, 0xdd0, 0x2783, 0x21d2, 0x140d, 0x1, 0x0);
        gbc.writeMem(0x140d, { 0x80 });
        gbc.writeMem(0x2e79, { 0x56 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2694, gbc.sp());
        EXPECT(0x2e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0361
        gbc.setState(0xbdb7, 0x7bb3, 0xb3b0, 0xe5a4, 0x3859, 0x6e39, 0x1, 0x0);
        gbc.writeMem(0x6e39, { 0x8c });
        gbc.writeMem(0xbdb7, { 0x56 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7bb3, gbc.sp());
        EXPECT(0xbdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbdb7));
        // 56 0362
        gbc.setState(0x7401, 0x2b48, 0xb0b0, 0xa848, 0x8a90, 0x437e, 0x0, 0x1);
        gbc.writeMem(0x437e, { 0x8a });
        gbc.writeMem(0x7401, { 0x56 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2b48, gbc.sp());
        EXPECT(0x7402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0363
        gbc.setState(0x528a, 0xbcab, 0x4bc0, 0xc341, 0xdacf, 0x6e0d, 0x1, 0x1);
        gbc.writeMem(0x528a, { 0x56 });
        gbc.writeMem(0x6e0d, { 0xa1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbcab, gbc.sp());
        EXPECT(0x528b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0364
        gbc.setState(0x8f00, 0x1d0, 0x3540, 0xf32d, 0x329e, 0xe872, 0x0, 0x1);
        gbc.writeMem(0x8f00, { 0x56 });
        gbc.writeMem(0xe872, { 0xa8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1d0, gbc.sp());
        EXPECT(0x8f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8f00));
        EXPECT(0xa8, gbc.readMem(0xe872));
        // 56 0365
        gbc.setState(0x2bbd, 0x31d, 0x6b30, 0xa8f6, 0x122c, 0x38b1, 0x0, 0x0);
        gbc.writeMem(0x2bbd, { 0x56 });
        gbc.writeMem(0x38b1, { 0xbd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x31d, gbc.sp());
        EXPECT(0x2bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0366
        gbc.setState(0xb993, 0x84b5, 0x50, 0x4fde, 0x5a9a, 0x3408, 0x1, 0x0);
        gbc.writeMem(0x3408, { 0xa9 });
        gbc.writeMem(0xb993, { 0x56 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x84b5, gbc.sp());
        EXPECT(0xb994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb993));
        // 56 0367
        gbc.setState(0x2181, 0x2748, 0x55a0, 0x93d1, 0x115e, 0x52a2, 0x1, 0x0);
        gbc.writeMem(0x2181, { 0x56 });
        gbc.writeMem(0x52a2, { 0x7f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2748, gbc.sp());
        EXPECT(0x2182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0368
        gbc.setState(0x1fcb, 0xdd80, 0xde00, 0xb538, 0x5e67, 0xd4c7, 0x1, 0x1);
        gbc.writeMem(0x1fcb, { 0x56 });
        gbc.writeMem(0xd4c7, { 0xce });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdd80, gbc.sp());
        EXPECT(0x1fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xd4c7));
        // 56 0369
        gbc.setState(0x96bf, 0x41b8, 0x8fb0, 0x4fa3, 0xa51d, 0xfea3, 0x1, 0x1);
        gbc.writeMem(0x96bf, { 0x56 });
        gbc.writeMem(0xfea3, { 0xbc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x41b8, gbc.sp());
        EXPECT(0x96c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x96bf));
        EXPECT(0xbc, gbc.readMem(0xfea3));
        // 56 036A
        gbc.setState(0x1fa7, 0x9d36, 0xcf70, 0x89fd, 0x736c, 0xa6d, 0x0, 0x0);
        gbc.writeMem(0xa6d, { 0xfe });
        gbc.writeMem(0x1fa7, { 0x56 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9d36, gbc.sp());
        EXPECT(0x1fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 036B
        gbc.setState(0x637a, 0x1f0b, 0x30f0, 0xf9, 0xff4e, 0xddab, 0x1, 0x0);
        gbc.writeMem(0x637a, { 0x56 });
        gbc.writeMem(0xddab, { 0xd8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1f0b, gbc.sp());
        EXPECT(0x637b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xddab));
        // 56 036C
        gbc.setState(0xa0f7, 0xecff, 0x3580, 0xd9ef, 0x9dd1, 0xcbd9, 0x0, 0x0);
        gbc.writeMem(0xa0f7, { 0x56 });
        gbc.writeMem(0xcbd9, { 0x58 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xecff, gbc.sp());
        EXPECT(0xa0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa0f7));
        EXPECT(0x58, gbc.readMem(0xcbd9));
        // 56 036D
        gbc.setState(0x9e27, 0xf718, 0xab30, 0x8bc3, 0x9d55, 0xe370, 0x0, 0x1);
        gbc.writeMem(0x9e27, { 0x56 });
        gbc.writeMem(0xe370, { 0xcc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf718, gbc.sp());
        EXPECT(0x9e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9e27));
        EXPECT(0xcc, gbc.readMem(0xe370));
        // 56 036E
        gbc.setState(0x2c2f, 0x6d43, 0xf130, 0x9c3e, 0x7538, 0x8942, 0x1, 0x0);
        gbc.writeMem(0x2c2f, { 0x56 });
        gbc.writeMem(0x8942, { 0x40 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6d43, gbc.sp());
        EXPECT(0x2c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8942));
        // 56 036F
        gbc.setState(0x2284, 0x1238, 0xf960, 0xf20, 0x4862, 0xad1b, 0x0, 0x0);
        gbc.writeMem(0x2284, { 0x56 });
        gbc.writeMem(0xad1b, { 0xf0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1238, gbc.sp());
        EXPECT(0x2285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xad1b));
        // 56 0370
        gbc.setState(0x89a1, 0x3e8b, 0xb400, 0x73c8, 0xb9fe, 0x9f60, 0x0, 0x0);
        gbc.writeMem(0x89a1, { 0x56 });
        gbc.writeMem(0x9f60, { 0x8e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0x89a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x89a1));
        EXPECT(0x8e, gbc.readMem(0x9f60));
        // 56 0371
        gbc.setState(0xecbc, 0xbc47, 0xd1a0, 0x9f27, 0xc9a3, 0xc107, 0x0, 0x0);
        gbc.writeMem(0xc107, { 0x54 });
        gbc.writeMem(0xecbc, { 0x56 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbc47, gbc.sp());
        EXPECT(0xecbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xc107));
        EXPECT(0x56, gbc.readMem(0xecbc));
        // 56 0372
        gbc.setState(0x3e6f, 0x54bc, 0xd350, 0xbc9a, 0x9d77, 0x987a, 0x1, 0x1);
        gbc.writeMem(0x3e6f, { 0x56 });
        gbc.writeMem(0x987a, { 0x23 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x54bc, gbc.sp());
        EXPECT(0x3e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x987a));
        // 56 0373
        gbc.setState(0x1618, 0x4c22, 0x5080, 0x44c4, 0xb945, 0xe6bf, 0x1, 0x1);
        gbc.writeMem(0x1618, { 0x56 });
        gbc.writeMem(0xe6bf, { 0xb3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4c22, gbc.sp());
        EXPECT(0x1619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe6bf));
        // 56 0374
        gbc.setState(0x7dba, 0xa202, 0x4210, 0x9f1b, 0xf68a, 0x89e6, 0x1, 0x1);
        gbc.writeMem(0x7dba, { 0x56 });
        gbc.writeMem(0x89e6, { 0x8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa202, gbc.sp());
        EXPECT(0x7dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x89e6));
        // 56 0375
        gbc.setState(0x98fc, 0xdd68, 0xd7d0, 0xbab1, 0x2def, 0xd578, 0x1, 0x0);
        gbc.writeMem(0x98fc, { 0x56 });
        gbc.writeMem(0xd578, { 0xc7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdd68, gbc.sp());
        EXPECT(0x98fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x98fc));
        EXPECT(0xc7, gbc.readMem(0xd578));
        // 56 0376
        gbc.setState(0xa7a2, 0x2ca0, 0xcc40, 0x161a, 0xf5cb, 0xfeb3, 0x1, 0x1);
        gbc.writeMem(0xa7a2, { 0x56 });
        gbc.writeMem(0xfeb3, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2ca0, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa7a2));
        EXPECT(0xb, gbc.readMem(0xfeb3));
        // 56 0377
        gbc.setState(0xf0d, 0x346b, 0x9430, 0xc528, 0x5339, 0x93d0, 0x0, 0x0);
        gbc.writeMem(0xf0d, { 0x56 });
        gbc.writeMem(0x93d0, { 0x81 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x346b, gbc.sp());
        EXPECT(0xf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x93d0));
        // 56 0378
        gbc.setState(0xeed3, 0xdc60, 0x2700, 0x2728, 0xe4fc, 0x6ae, 0x1, 0x1);
        gbc.writeMem(0x6ae, { 0x30 });
        gbc.writeMem(0xeed3, { 0x56 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdc60, gbc.sp());
        EXPECT(0xeed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xeed3));
        // 56 0379
        gbc.setState(0xa4e0, 0x6967, 0x9cf0, 0xb6d5, 0xf3bf, 0x1642, 0x0, 0x1);
        gbc.writeMem(0x1642, { 0x42 });
        gbc.writeMem(0xa4e0, { 0x56 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6967, gbc.sp());
        EXPECT(0xa4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa4e0));
        // 56 037A
        gbc.setState(0xe17a, 0x97f3, 0xb960, 0x726d, 0x85cb, 0x85aa, 0x0, 0x0);
        gbc.writeMem(0x85aa, { 0x92 });
        gbc.writeMem(0xe17a, { 0x56 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x97f3, gbc.sp());
        EXPECT(0xe17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x85aa));
        EXPECT(0x56, gbc.readMem(0xe17a));
        // 56 037B
        gbc.setState(0x2216, 0x75c2, 0x3df0, 0x19ad, 0xcd20, 0x26b1, 0x0, 0x0);
        gbc.writeMem(0x2216, { 0x56 });
        gbc.writeMem(0x26b1, { 0x1e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x75c2, gbc.sp());
        EXPECT(0x2217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 037C
        gbc.setState(0x93f9, 0x464b, 0xe580, 0x6b92, 0xb187, 0x89cf, 0x0, 0x1);
        gbc.writeMem(0x89cf, { 0xe2 });
        gbc.writeMem(0x93f9, { 0x56 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x464b, gbc.sp());
        EXPECT(0x93fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x89cf));
        EXPECT(0x56, gbc.readMem(0x93f9));
        // 56 037D
        gbc.setState(0xbe9d, 0x1c54, 0x3920, 0x8c99, 0xf83d, 0x549a, 0x1, 0x0);
        gbc.writeMem(0x549a, { 0x91 });
        gbc.writeMem(0xbe9d, { 0x56 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1c54, gbc.sp());
        EXPECT(0xbe9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbe9d));
        // 56 037F
        gbc.setState(0x590a, 0xe1ea, 0x1900, 0x38e2, 0x68f3, 0x3c16, 0x0, 0x0);
        gbc.writeMem(0x3c16, { 0x6d });
        gbc.writeMem(0x590a, { 0x56 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe1ea, gbc.sp());
        EXPECT(0x590b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0380
        gbc.setState(0x8724, 0xabd2, 0xf6f0, 0x3c1f, 0xb094, 0x5c38, 0x0, 0x1);
        gbc.writeMem(0x5c38, { 0x6 });
        gbc.writeMem(0x8724, { 0x56 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xabd2, gbc.sp());
        EXPECT(0x8725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8724));
        // 56 0381
        gbc.setState(0x3006, 0x1dd, 0x6740, 0x3af5, 0xa0dc, 0xccf, 0x1, 0x0);
        gbc.writeMem(0xccf, { 0xa1 });
        gbc.writeMem(0x3006, { 0x56 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1dd, gbc.sp());
        EXPECT(0x3007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0382
        gbc.setState(0x6562, 0xc7c7, 0xeaf0, 0x794d, 0x2952, 0x478, 0x0, 0x0);
        gbc.writeMem(0x478, { 0xaf });
        gbc.writeMem(0x6562, { 0x56 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc7c7, gbc.sp());
        EXPECT(0x6563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0383
        gbc.setState(0x8e5a, 0x138a, 0x9320, 0x54a5, 0x2999, 0xc9a2, 0x0, 0x1);
        gbc.writeMem(0x8e5a, { 0x56 });
        gbc.writeMem(0xc9a2, { 0xe4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x138a, gbc.sp());
        EXPECT(0x8e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8e5a));
        EXPECT(0xe4, gbc.readMem(0xc9a2));
        // 56 0384
        gbc.setState(0x6bea, 0xc8d8, 0x5730, 0x3158, 0x2f26, 0xb5a6, 0x1, 0x0);
        gbc.writeMem(0x6bea, { 0x56 });
        gbc.writeMem(0xb5a6, { 0x33 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc8d8, gbc.sp());
        EXPECT(0x6beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb5a6));
        // 56 0385
        gbc.setState(0x5b0, 0xddbf, 0x5f60, 0x342f, 0x73ab, 0x37a4, 0x0, 0x1);
        gbc.writeMem(0x5b0, { 0x56 });
        gbc.writeMem(0x37a4, { 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xddbf, gbc.sp());
        EXPECT(0x5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 0386
        gbc.setState(0xc3, 0x218b, 0xba20, 0xe8f5, 0xb810, 0xb7f7, 0x0, 0x0);
        gbc.writeMem(0xc3, { 0x56 });
        gbc.writeMem(0xb7f7, { 0x96 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x218b, gbc.sp());
        EXPECT(0xc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xb7f7));
        // 56 0387
        gbc.setState(0x7315, 0x2078, 0xbc80, 0x8609, 0x785b, 0xbd1b, 0x1, 0x0);
        gbc.writeMem(0x7315, { 0x56 });
        gbc.writeMem(0xbd1b, { 0x8e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2078, gbc.sp());
        EXPECT(0x7316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xbd1b));
        // 56 0388
        gbc.setState(0x8070, 0xc8a7, 0x7000, 0x332f, 0xa476, 0xc7a3, 0x1, 0x0);
        gbc.writeMem(0x8070, { 0x56 });
        gbc.writeMem(0xc7a3, { 0xe6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc8a7, gbc.sp());
        EXPECT(0x8071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8070));
        EXPECT(0xe6, gbc.readMem(0xc7a3));
        // 56 0389
        gbc.setState(0xad4e, 0xbb12, 0xfb0, 0xf34c, 0x9ca6, 0x7584, 0x1, 0x0);
        gbc.writeMem(0x7584, { 0x50 });
        gbc.writeMem(0xad4e, { 0x56 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbb12, gbc.sp());
        EXPECT(0xad4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xad4e));
        // 56 038A
        gbc.setState(0x62c7, 0x5ffd, 0xf480, 0x591a, 0x5b5d, 0x324, 0x1, 0x1);
        gbc.writeMem(0x324, { 0xac });
        gbc.writeMem(0x62c7, { 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5ffd, gbc.sp());
        EXPECT(0x62c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 038B
        gbc.setState(0x15c4, 0xa768, 0xf3a0, 0xb805, 0xa332, 0x4cb9, 0x1, 0x1);
        gbc.writeMem(0x15c4, { 0x56 });
        gbc.writeMem(0x4cb9, { 0x5b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa768, gbc.sp());
        EXPECT(0x15c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 038C
        gbc.setState(0x820f, 0xb690, 0x38f0, 0xf950, 0xc36c, 0xa77b, 0x1, 0x1);
        gbc.writeMem(0x820f, { 0x56 });
        gbc.writeMem(0xa77b, { 0x2e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb690, gbc.sp());
        EXPECT(0x8210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x820f));
        EXPECT(0x2e, gbc.readMem(0xa77b));
        // 56 038D
        gbc.setState(0xa9bc, 0x5f5d, 0xe50, 0xabae, 0xf647, 0x5018, 0x0, 0x1);
        gbc.writeMem(0x5018, { 0x79 });
        gbc.writeMem(0xa9bc, { 0x56 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5f5d, gbc.sp());
        EXPECT(0xa9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa9bc));
        // 56 038E
        gbc.setState(0xc947, 0xb47c, 0x3040, 0xfa6d, 0x734a, 0x9332, 0x1, 0x1);
        gbc.writeMem(0x9332, { 0x26 });
        gbc.writeMem(0xc947, { 0x56 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb47c, gbc.sp());
        EXPECT(0xc948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9332));
        EXPECT(0x56, gbc.readMem(0xc947));
        // 56 038F
        gbc.setState(0x2d1, 0x8f9b, 0xa80, 0x8fea, 0xc538, 0xac93, 0x0, 0x1);
        gbc.writeMem(0x2d1, { 0x56 });
        gbc.writeMem(0xac93, { 0x12 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0x2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xac93));
        // 56 0390
        gbc.setState(0x4bd8, 0xb7f2, 0x9d90, 0x1e9c, 0xac25, 0x5cf9, 0x1, 0x0);
        gbc.writeMem(0x4bd8, { 0x56 });
        gbc.writeMem(0x5cf9, { 0x80 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb7f2, gbc.sp());
        EXPECT(0x4bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0391
        gbc.setState(0x91d4, 0xe484, 0x4c30, 0x1dce, 0xdf7e, 0x96d, 0x1, 0x0);
        gbc.writeMem(0x96d, { 0x91 });
        gbc.writeMem(0x91d4, { 0x56 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe484, gbc.sp());
        EXPECT(0x91d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x91d4));
        // 56 0392
        gbc.setState(0xd9c, 0x8065, 0x91b0, 0x13dd, 0x7426, 0x1a2, 0x0, 0x1);
        gbc.writeMem(0x1a2, { 0xc3 });
        gbc.writeMem(0xd9c, { 0x56 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8065, gbc.sp());
        EXPECT(0xd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 0393
        gbc.setState(0xed1, 0x2235, 0x9790, 0xd7e, 0x1907, 0x8f1c, 0x1, 0x0);
        gbc.writeMem(0xed1, { 0x56 });
        gbc.writeMem(0x8f1c, { 0xed });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2235, gbc.sp());
        EXPECT(0xed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8f1c));
        // 56 0394
        gbc.setState(0xc82b, 0x273b, 0x8ba0, 0x9b82, 0x26b, 0x48dd, 0x0, 0x1);
        gbc.writeMem(0x48dd, { 0xef });
        gbc.writeMem(0xc82b, { 0x56 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x273b, gbc.sp());
        EXPECT(0xc82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc82b));
        // 56 0395
        gbc.setState(0x4f25, 0xaa3c, 0x79f0, 0xc3d4, 0x5d3, 0x9483, 0x1, 0x0);
        gbc.writeMem(0x4f25, { 0x56 });
        gbc.writeMem(0x9483, { 0xce });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaa3c, gbc.sp());
        EXPECT(0x4f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x9483));
        // 56 0396
        gbc.setState(0x4884, 0xba69, 0xa030, 0xa0f3, 0x5ed5, 0xb5fd, 0x1, 0x1);
        gbc.writeMem(0x4884, { 0x56 });
        gbc.writeMem(0xb5fd, { 0xc3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xba69, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb5fd));
        // 56 0397
        gbc.setState(0x1a77, 0x5360, 0xa790, 0x83f3, 0x7069, 0xbee9, 0x1, 0x0);
        gbc.writeMem(0x1a77, { 0x56 });
        gbc.writeMem(0xbee9, { 0x62 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5360, gbc.sp());
        EXPECT(0x1a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xbee9));
        // 56 0398
        gbc.setState(0xc728, 0x3809, 0x4d70, 0x5dbc, 0x6813, 0x27d4, 0x0, 0x1);
        gbc.writeMem(0x27d4, { 0xd2 });
        gbc.writeMem(0xc728, { 0x56 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3809, gbc.sp());
        EXPECT(0xc729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc728));
        // 56 0399
        gbc.setState(0xeda4, 0x1279, 0x2c90, 0x1f05, 0xb898, 0xad99, 0x1, 0x0);
        gbc.writeMem(0xad99, { 0x4c });
        gbc.writeMem(0xeda4, { 0x56 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1279, gbc.sp());
        EXPECT(0xeda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xad99));
        EXPECT(0x56, gbc.readMem(0xeda4));
        // 56 039A
        gbc.setState(0x764, 0xa971, 0xab60, 0xe75e, 0x58af, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0x764, { 0x56 });
        gbc.writeMem(0x96d9, { 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa971, gbc.sp());
        EXPECT(0x765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x96d9));
        // 56 039B
        gbc.setState(0x40a9, 0x94e6, 0xa060, 0xf721, 0xbbec, 0x3386, 0x1, 0x0);
        gbc.writeMem(0x3386, { 0x71 });
        gbc.writeMem(0x40a9, { 0x56 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x94e6, gbc.sp());
        EXPECT(0x40aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 039C
        gbc.setState(0x9068, 0x4582, 0x4a30, 0xef14, 0xfcc8, 0x5c0e, 0x0, 0x1);
        gbc.writeMem(0x5c0e, { 0x7b });
        gbc.writeMem(0x9068, { 0x56 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4582, gbc.sp());
        EXPECT(0x9069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9068));
        // 56 039D
        gbc.setState(0xb9c2, 0xc9f0, 0xa230, 0x51af, 0xd337, 0x954a, 0x1, 0x1);
        gbc.writeMem(0x954a, { 0xc6 });
        gbc.writeMem(0xb9c2, { 0x56 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc9f0, gbc.sp());
        EXPECT(0xb9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x954a));
        EXPECT(0x56, gbc.readMem(0xb9c2));
        // 56 039E
        gbc.setState(0x817c, 0x6e8d, 0x96d0, 0x804c, 0x945, 0x4f75, 0x1, 0x1);
        gbc.writeMem(0x4f75, { 0x57 });
        gbc.writeMem(0x817c, { 0x56 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6e8d, gbc.sp());
        EXPECT(0x817d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x817c));
        // 56 039F
        gbc.setState(0x605, 0xec94, 0xfc70, 0x9030, 0xec4d, 0xd91f, 0x0, 0x0);
        gbc.writeMem(0x605, { 0x56 });
        gbc.writeMem(0xd91f, { 0xec });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xec94, gbc.sp());
        EXPECT(0x606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xd91f));
        // 56 03A0
        gbc.setState(0x1c94, 0xe6eb, 0x1080, 0xd6c4, 0xd18a, 0x5e0d, 0x1, 0x0);
        gbc.writeMem(0x1c94, { 0x56 });
        gbc.writeMem(0x5e0d, { 0x86 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe6eb, gbc.sp());
        EXPECT(0x1c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 03A2
        gbc.setState(0x17ce, 0x3e33, 0xb900, 0xbefb, 0xdec2, 0xc834, 0x1, 0x0);
        gbc.writeMem(0x17ce, { 0x56 });
        gbc.writeMem(0xc834, { 0xec });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3e33, gbc.sp());
        EXPECT(0x17cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xc834));
        // 56 03A3
        gbc.setState(0x7403, 0x40c2, 0x98d0, 0xccf, 0x8f8a, 0x7d68, 0x0, 0x0);
        gbc.writeMem(0x7403, { 0x56 });
        gbc.writeMem(0x7d68, { 0xb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x40c2, gbc.sp());
        EXPECT(0x7404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03A4
        gbc.setState(0xe346, 0x7276, 0x9de0, 0xb1c4, 0x6967, 0x9688, 0x1, 0x1);
        gbc.writeMem(0x9688, { 0x27 });
        gbc.writeMem(0xe346, { 0x56 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7276, gbc.sp());
        EXPECT(0xe347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9688));
        EXPECT(0x56, gbc.readMem(0xe346));
        // 56 03A5
        gbc.setState(0x8b6a, 0xbfa, 0x4060, 0x80d4, 0xd441, 0xc01d, 0x0, 0x1);
        gbc.writeMem(0x8b6a, { 0x56 });
        gbc.writeMem(0xc01d, { 0x9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbfa, gbc.sp());
        EXPECT(0x8b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8b6a));
        EXPECT(0x9, gbc.readMem(0xc01d));
        // 56 03A6
        gbc.setState(0xed89, 0xd4c5, 0x9fd0, 0x23e3, 0x1a3b, 0xfab8, 0x1, 0x0);
        gbc.writeMem(0xed89, { 0x56 });
        gbc.writeMem(0xfab8, { 0x37 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd4c5, gbc.sp());
        EXPECT(0xed8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xed89));
        EXPECT(0x37, gbc.readMem(0xfab8));
        // 56 03A7
        gbc.setState(0xed79, 0xfb95, 0xf340, 0xf668, 0xb161, 0x5599, 0x0, 0x0);
        gbc.writeMem(0x5599, { 0xae });
        gbc.writeMem(0xed79, { 0x56 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfb95, gbc.sp());
        EXPECT(0xed7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xed79));
        // 56 03A8
        gbc.setState(0x5090, 0xcd5a, 0xac30, 0xf400, 0xd28c, 0x163e, 0x1, 0x1);
        gbc.writeMem(0x163e, { 0xf2 });
        gbc.writeMem(0x5090, { 0x56 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcd5a, gbc.sp());
        EXPECT(0x5091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03A9
        gbc.setState(0xa9ff, 0x7336, 0xaa30, 0x626e, 0x44a3, 0xd7c3, 0x1, 0x1);
        gbc.writeMem(0xa9ff, { 0x56 });
        gbc.writeMem(0xd7c3, { 0x5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7336, gbc.sp());
        EXPECT(0xaa00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa9ff));
        EXPECT(0x5, gbc.readMem(0xd7c3));
        // 56 03AA
        gbc.setState(0xa290, 0xe907, 0xaa0, 0x3cc9, 0xb566, 0xe8f9, 0x0, 0x1);
        gbc.writeMem(0xa290, { 0x56 });
        gbc.writeMem(0xe8f9, { 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe907, gbc.sp());
        EXPECT(0xa291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa290));
        EXPECT(0x4b, gbc.readMem(0xe8f9));
        // 56 03AB
        gbc.setState(0x41c6, 0xc880, 0x7e70, 0xa855, 0x363a, 0xd76c, 0x0, 0x1);
        gbc.writeMem(0x41c6, { 0x56 });
        gbc.writeMem(0xd76c, { 0xc8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc880, gbc.sp());
        EXPECT(0x41c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd76c));
        // 56 03AC
        gbc.setState(0xa344, 0xd953, 0xf410, 0x168d, 0x46dc, 0x32a2, 0x1, 0x1);
        gbc.writeMem(0x32a2, { 0xa1 });
        gbc.writeMem(0xa344, { 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd953, gbc.sp());
        EXPECT(0xa345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa344));
        // 56 03AD
        gbc.setState(0xa1d9, 0x928e, 0x50a0, 0xc549, 0xcd32, 0x6cf2, 0x0, 0x1);
        gbc.writeMem(0x6cf2, { 0x88 });
        gbc.writeMem(0xa1d9, { 0x56 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x928e, gbc.sp());
        EXPECT(0xa1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa1d9));
        // 56 03AE
        gbc.setState(0x9dba, 0xed0b, 0x6670, 0xe691, 0x9a57, 0x516d, 0x0, 0x0);
        gbc.writeMem(0x516d, { 0x9c });
        gbc.writeMem(0x9dba, { 0x56 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0x9dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9dba));
        // 56 03AF
        gbc.setState(0x676f, 0x9c7f, 0xd270, 0x43d5, 0x3b7, 0x48a, 0x0, 0x0);
        gbc.writeMem(0x48a, { 0x24 });
        gbc.writeMem(0x676f, { 0x56 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9c7f, gbc.sp());
        EXPECT(0x6770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03B0
        gbc.setState(0x5e6d, 0xce75, 0x3840, 0x6b88, 0x7bf, 0x8881, 0x1, 0x0);
        gbc.writeMem(0x5e6d, { 0x56 });
        gbc.writeMem(0x8881, { 0xd4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xce75, gbc.sp());
        EXPECT(0x5e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8881));
        // 56 03B1
        gbc.setState(0x2d71, 0xafbd, 0x2250, 0xfc24, 0xd53f, 0x6aaf, 0x0, 0x1);
        gbc.writeMem(0x2d71, { 0x56 });
        gbc.writeMem(0x6aaf, { 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xafbd, gbc.sp());
        EXPECT(0x2d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03B2
        gbc.setState(0x38cb, 0xa283, 0xb920, 0x832, 0xb52e, 0xbda9, 0x0, 0x0);
        gbc.writeMem(0x38cb, { 0x56 });
        gbc.writeMem(0xbda9, { 0x6e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa283, gbc.sp());
        EXPECT(0x38cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbda9));
        // 56 03B3
        gbc.setState(0x503a, 0xf75b, 0xb000, 0x2f92, 0xd78a, 0xba21, 0x1, 0x1);
        gbc.writeMem(0x503a, { 0x56 });
        gbc.writeMem(0xba21, { 0x20 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf75b, gbc.sp());
        EXPECT(0x503b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xba21));
        // 56 03B4
        gbc.setState(0x320b, 0x110d, 0x6f10, 0x7edf, 0xbab8, 0x325f, 0x1, 0x0);
        gbc.writeMem(0x320b, { 0x56 });
        gbc.writeMem(0x325f, { 0xc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x110d, gbc.sp());
        EXPECT(0x320c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03B5
        gbc.setState(0xa687, 0xd32b, 0x90b0, 0xb6d8, 0x5922, 0x8d2a, 0x0, 0x1);
        gbc.writeMem(0x8d2a, { 0x58 });
        gbc.writeMem(0xa687, { 0x56 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd32b, gbc.sp());
        EXPECT(0xa688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8d2a));
        EXPECT(0x56, gbc.readMem(0xa687));
        // 56 03B6
        gbc.setState(0x4882, 0x57b0, 0x9f50, 0x55a4, 0x3639, 0xeced, 0x1, 0x0);
        gbc.writeMem(0x4882, { 0x56 });
        gbc.writeMem(0xeced, { 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x57b0, gbc.sp());
        EXPECT(0x4883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xeced));
        // 56 03B7
        gbc.setState(0xdab9, 0xdcc9, 0x1f40, 0x712b, 0x28af, 0xdbd2, 0x0, 0x0);
        gbc.writeMem(0xdab9, { 0x56 });
        gbc.writeMem(0xdbd2, { 0x42 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdcc9, gbc.sp());
        EXPECT(0xdaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdab9));
        EXPECT(0x42, gbc.readMem(0xdbd2));
        // 56 03B8
        gbc.setState(0xe531, 0xe2fd, 0x3600, 0xb29e, 0xe581, 0xf5fd, 0x1, 0x1);
        gbc.writeMem(0xe531, { 0x56 });
        gbc.writeMem(0xf5fd, { 0xef });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe2fd, gbc.sp());
        EXPECT(0xe532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe531));
        EXPECT(0xef, gbc.readMem(0xf5fd));
        // 56 03B9
        gbc.setState(0x5cff, 0xbc30, 0x24b0, 0x11da, 0xe55f, 0x7976, 0x0, 0x1);
        gbc.writeMem(0x5cff, { 0x56 });
        gbc.writeMem(0x7976, { 0xf3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbc30, gbc.sp());
        EXPECT(0x5d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03BA
        gbc.setState(0x6997, 0xbbef, 0x3570, 0x381c, 0x8b2c, 0x34b4, 0x0, 0x0);
        gbc.writeMem(0x34b4, { 0x86 });
        gbc.writeMem(0x6997, { 0x56 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbbef, gbc.sp());
        EXPECT(0x6998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03BB
        gbc.setState(0xbbcf, 0x3fdd, 0x6e0, 0xe599, 0xf761, 0xc0c4, 0x1, 0x1);
        gbc.writeMem(0xbbcf, { 0x56 });
        gbc.writeMem(0xc0c4, { 0xdd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3fdd, gbc.sp());
        EXPECT(0xbbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbbcf));
        EXPECT(0xdd, gbc.readMem(0xc0c4));
        // 56 03BC
        gbc.setState(0x855a, 0xbdc7, 0x8030, 0xb7a1, 0xf111, 0x18f1, 0x0, 0x0);
        gbc.writeMem(0x18f1, { 0xba });
        gbc.writeMem(0x855a, { 0x56 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbdc7, gbc.sp());
        EXPECT(0x855b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x855a));
        // 56 03BD
        gbc.setState(0xc00, 0xcec1, 0xff80, 0xe6f7, 0x17c9, 0xb8d2, 0x0, 0x0);
        gbc.writeMem(0xc00, { 0x56 });
        gbc.writeMem(0xb8d2, { 0x9e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcec1, gbc.sp());
        EXPECT(0xc01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb8d2));
        // 56 03BE
        gbc.setState(0x75bf, 0x2a64, 0xced0, 0x368, 0xf2c2, 0x4f98, 0x1, 0x0);
        gbc.writeMem(0x4f98, { 0x74 });
        gbc.writeMem(0x75bf, { 0x56 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2a64, gbc.sp());
        EXPECT(0x75c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03BF
        gbc.setState(0x87cb, 0xb98e, 0xd3c0, 0x728c, 0xb824, 0x747, 0x1, 0x1);
        gbc.writeMem(0x747, { 0x54 });
        gbc.writeMem(0x87cb, { 0x56 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb98e, gbc.sp());
        EXPECT(0x87cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x87cb));
        // 56 03C1
        gbc.setState(0x3183, 0xe7e, 0x84d0, 0x41f5, 0x2565, 0xafd3, 0x0, 0x1);
        gbc.writeMem(0x3183, { 0x56 });
        gbc.writeMem(0xafd3, { 0xb2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe7e, gbc.sp());
        EXPECT(0x3184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xafd3));
        // 56 03C2
        gbc.setState(0x67fa, 0x3b08, 0x2660, 0xc418, 0x605e, 0x21ac, 0x0, 0x1);
        gbc.writeMem(0x21ac, { 0x37 });
        gbc.writeMem(0x67fa, { 0x56 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3b08, gbc.sp());
        EXPECT(0x67fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 03C3
        gbc.setState(0xeaf9, 0x350f, 0xbf90, 0xfbd, 0x25a2, 0x47b9, 0x1, 0x1);
        gbc.writeMem(0x47b9, { 0x47 });
        gbc.writeMem(0xeaf9, { 0x56 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x350f, gbc.sp());
        EXPECT(0xeafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xeaf9));
        // 56 03C4
        gbc.setState(0xb721, 0xd513, 0x7fc0, 0xfdb9, 0x4bb8, 0x991a, 0x1, 0x1);
        gbc.writeMem(0x991a, { 0xa5 });
        gbc.writeMem(0xb721, { 0x56 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0xb722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x991a));
        EXPECT(0x56, gbc.readMem(0xb721));
        // 56 03C5
        gbc.setState(0x42c6, 0x866e, 0x2fa0, 0xc373, 0x64bd, 0x9df0, 0x0, 0x0);
        gbc.writeMem(0x42c6, { 0x56 });
        gbc.writeMem(0x9df0, { 0x93 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x866e, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9df0));
        // 56 03C6
        gbc.setState(0xde75, 0x68b2, 0x80c0, 0x2f5d, 0x176a, 0xd7c2, 0x1, 0x1);
        gbc.writeMem(0xd7c2, { 0xff });
        gbc.writeMem(0xde75, { 0x56 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x68b2, gbc.sp());
        EXPECT(0xde76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd7c2));
        EXPECT(0x56, gbc.readMem(0xde75));
        // 56 03C7
        gbc.setState(0xc09, 0x10ba, 0x5580, 0x8a89, 0xf511, 0x3cf6, 0x0, 0x0);
        gbc.writeMem(0xc09, { 0x56 });
        gbc.writeMem(0x3cf6, { 0x6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x10ba, gbc.sp());
        EXPECT(0xc0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 03C8
        gbc.setState(0xb84, 0xb8cc, 0x82b0, 0x369e, 0x546a, 0x3ba5, 0x1, 0x1);
        gbc.writeMem(0xb84, { 0x56 });
        gbc.writeMem(0x3ba5, { 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb8cc, gbc.sp());
        EXPECT(0xb85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03C9
        gbc.setState(0xab46, 0x930b, 0xa900, 0x9dee, 0x3bbe, 0xf06f, 0x1, 0x1);
        gbc.writeMem(0xab46, { 0x56 });
        gbc.writeMem(0xf06f, { 0x50 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x930b, gbc.sp());
        EXPECT(0xab47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xab46));
        EXPECT(0x50, gbc.readMem(0xf06f));
        // 56 03CA
        gbc.setState(0xa5a4, 0x593d, 0xbd80, 0x6018, 0x24d, 0xe7ba, 0x0, 0x0);
        gbc.writeMem(0xa5a4, { 0x56 });
        gbc.writeMem(0xe7ba, { 0x50 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x593d, gbc.sp());
        EXPECT(0xa5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa5a4));
        EXPECT(0x50, gbc.readMem(0xe7ba));
        // 56 03CB
        gbc.setState(0xef60, 0xca3, 0x25e0, 0x66c7, 0xeab7, 0x98ba, 0x1, 0x0);
        gbc.writeMem(0x98ba, { 0x28 });
        gbc.writeMem(0xef60, { 0x56 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xca3, gbc.sp());
        EXPECT(0xef61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x98ba));
        EXPECT(0x56, gbc.readMem(0xef60));
        // 56 03CC
        gbc.setState(0x12ac, 0x9e43, 0xe6a0, 0x9bfb, 0x3b92, 0x43c0, 0x0, 0x1);
        gbc.writeMem(0x12ac, { 0x56 });
        gbc.writeMem(0x43c0, { 0xae });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9e43, gbc.sp());
        EXPECT(0x12ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 03CD
        gbc.setState(0x3913, 0x7395, 0x4950, 0x5c02, 0xf5a0, 0xeee3, 0x1, 0x0);
        gbc.writeMem(0x3913, { 0x56 });
        gbc.writeMem(0xeee3, { 0xde });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7395, gbc.sp());
        EXPECT(0x3914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xeee3));
        // 56 03CE
        gbc.setState(0x321a, 0x552, 0x90a0, 0xe5a5, 0x4949, 0xff67, 0x0, 0x1);
        gbc.writeMem(0x321a, { 0x56 });
        gbc.writeMem(0xff67, { 0x27 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xff67));
        // 56 03CF
        gbc.setState(0x8a55, 0x2609, 0xfc70, 0xdcf6, 0x3740, 0x944b, 0x1, 0x1);
        gbc.writeMem(0x8a55, { 0x56 });
        gbc.writeMem(0x944b, { 0x2e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2609, gbc.sp());
        EXPECT(0x8a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8a55));
        EXPECT(0x2e, gbc.readMem(0x944b));
        // 56 03D0
        gbc.setState(0x3cf8, 0xdc32, 0xe910, 0xbc8d, 0x4ab6, 0x4fa4, 0x0, 0x1);
        gbc.writeMem(0x3cf8, { 0x56 });
        gbc.writeMem(0x4fa4, { 0xa1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdc32, gbc.sp());
        EXPECT(0x3cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03D1
        gbc.setState(0xe83c, 0x81b9, 0x7fb0, 0xa8cf, 0x6c6c, 0x711f, 0x1, 0x1);
        gbc.writeMem(0x711f, { 0xd2 });
        gbc.writeMem(0xe83c, { 0x56 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x81b9, gbc.sp());
        EXPECT(0xe83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe83c));
        // 56 03D2
        gbc.setState(0x1787, 0x699e, 0xfa70, 0x99b5, 0xa079, 0x596c, 0x0, 0x0);
        gbc.writeMem(0x1787, { 0x56 });
        gbc.writeMem(0x596c, { 0x82 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x699e, gbc.sp());
        EXPECT(0x1788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03D3
        gbc.setState(0x9d44, 0xb9c1, 0x1220, 0x5f7, 0xdf89, 0x3721, 0x1, 0x0);
        gbc.writeMem(0x3721, { 0x6e });
        gbc.writeMem(0x9d44, { 0x56 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb9c1, gbc.sp());
        EXPECT(0x9d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9d44));
        // 56 03D4
        gbc.setState(0x4994, 0x21c9, 0x16f0, 0x501, 0x19d3, 0x8a69, 0x1, 0x0);
        gbc.writeMem(0x4994, { 0x56 });
        gbc.writeMem(0x8a69, { 0x8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x21c9, gbc.sp());
        EXPECT(0x4995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x8a69));
        // 56 03D5
        gbc.setState(0xac3c, 0xa81, 0x4030, 0xe518, 0x1e54, 0xfc04, 0x1, 0x0);
        gbc.writeMem(0xac3c, { 0x56 });
        gbc.writeMem(0xfc04, { 0x9f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa81, gbc.sp());
        EXPECT(0xac3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xac3c));
        EXPECT(0x9f, gbc.readMem(0xfc04));
        // 56 03D6
        gbc.setState(0x32e5, 0xa3a3, 0x4680, 0x568d, 0x1756, 0x64b1, 0x0, 0x0);
        gbc.writeMem(0x32e5, { 0x56 });
        gbc.writeMem(0x64b1, { 0xd8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa3a3, gbc.sp());
        EXPECT(0x32e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 03D7
        gbc.setState(0xbe8f, 0x4ac8, 0xd960, 0x6237, 0xf4c3, 0xc357, 0x1, 0x0);
        gbc.writeMem(0xbe8f, { 0x56 });
        gbc.writeMem(0xc357, { 0x4a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4ac8, gbc.sp());
        EXPECT(0xbe90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbe8f));
        EXPECT(0x4a, gbc.readMem(0xc357));
        // 56 03D8
        gbc.setState(0x1de4, 0xd270, 0xe020, 0xca63, 0xc0a5, 0xb5b, 0x1, 0x0);
        gbc.writeMem(0xb5b, { 0x8c });
        gbc.writeMem(0x1de4, { 0x56 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd270, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 03D9
        gbc.setState(0x57d4, 0x648f, 0x93d0, 0x38e9, 0xb943, 0xf5a3, 0x1, 0x1);
        gbc.writeMem(0x57d4, { 0x56 });
        gbc.writeMem(0xf5a3, { 0xd3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x648f, gbc.sp());
        EXPECT(0x57d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xf5a3));
        // 56 03DA
        gbc.setState(0x4ba2, 0x659d, 0x8410, 0x9350, 0xaac1, 0x3a7d, 0x0, 0x1);
        gbc.writeMem(0x3a7d, { 0x30 });
        gbc.writeMem(0x4ba2, { 0x56 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x659d, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 56 03DB
        gbc.setState(0x8f8e, 0xf25f, 0xe60, 0xae47, 0xba69, 0x10f3, 0x0, 0x1);
        gbc.writeMem(0x10f3, { 0xfc });
        gbc.writeMem(0x8f8e, { 0x56 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf25f, gbc.sp());
        EXPECT(0x8f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8f8e));
        // 56 03DC
        gbc.setState(0x1f5f, 0x58f0, 0xc7b0, 0xe654, 0x10d6, 0xa300, 0x0, 0x0);
        gbc.writeMem(0x1f5f, { 0x56 });
        gbc.writeMem(0xa300, { 0xfe });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x58f0, gbc.sp());
        EXPECT(0x1f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa300));
        // 56 03DD
        gbc.setState(0x7f98, 0xdbab, 0x90b0, 0x2308, 0x7035, 0x9c11, 0x0, 0x1);
        gbc.writeMem(0x7f98, { 0x56 });
        gbc.writeMem(0x9c11, { 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdbab, gbc.sp());
        EXPECT(0x7f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9c11));
        // 56 03DF
        gbc.setState(0xe9a4, 0x9245, 0xbb20, 0x2dc9, 0x870, 0x70f6, 0x0, 0x1);
        gbc.writeMem(0x70f6, { 0xfe });
        gbc.writeMem(0xe9a4, { 0x56 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9245, gbc.sp());
        EXPECT(0xe9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe9a4));
        // 56 03E0
        gbc.setState(0x8e3, 0xa2e0, 0x940, 0xc80f, 0x64a9, 0x2302, 0x0, 0x1);
        gbc.writeMem(0x8e3, { 0x56 });
        gbc.writeMem(0x2302, { 0xe0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa2e0, gbc.sp());
        EXPECT(0x8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 56 03E1
        gbc.setState(0x82a2, 0xd448, 0xaa30, 0xda59, 0xf28b, 0xe505, 0x1, 0x1);
        gbc.writeMem(0x82a2, { 0x56 });
        gbc.writeMem(0xe505, { 0xc2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd448, gbc.sp());
        EXPECT(0x82a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x82a2));
        EXPECT(0xc2, gbc.readMem(0xe505));
        // 56 03E2
        gbc.setState(0x4656, 0xe69, 0x5700, 0xaeea, 0x8deb, 0xd6db, 0x1, 0x0);
        gbc.writeMem(0x4656, { 0x56 });
        gbc.writeMem(0xd6db, { 0x4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe69, gbc.sp());
        EXPECT(0x4657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd6db));
        // 56 03E3
        gbc.setState(0x6b93, 0x32ee, 0x60f0, 0xc991, 0xf795, 0xb8eb, 0x0, 0x1);
        gbc.writeMem(0x6b93, { 0x56 });
        gbc.writeMem(0xb8eb, { 0xc8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x32ee, gbc.sp());
        EXPECT(0x6b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb8eb));
        // 56 03E6
        gbc.setState(0x4f7c, 0x2407, 0x3c0, 0xc184, 0xa7e7, 0xf3d8, 0x1, 0x0);
        gbc.writeMem(0x4f7c, { 0x56 });
        gbc.writeMem(0xf3d8, { 0x10 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0x4f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xf3d8));
        // 56 03E7
        gbc.setState(0x978d, 0xfc02, 0xa4f0, 0xeefa, 0xfebc, 0xb30a, 0x0, 0x0);
        gbc.writeMem(0x978d, { 0x56 });
        gbc.writeMem(0xb30a, { 0xea });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfc02, gbc.sp());
        EXPECT(0x978e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x978d));
        EXPECT(0xea, gbc.readMem(0xb30a));
    }
