    TEST(gbcemu, opcode_cb_df) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB DF 0000
        gbc.setState(0xe4b1, 0x78a9, 0x74f0, 0x1fb1, 0xb4de, 0x38a9, 0x0, 0x1);
        gbc.writeMem(0xe4b1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x78a9);
        EXPECT(gbc.pc(), 0xe4b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4b1), 0xcb);
        EXPECT(gbc.readMem(0xe4b2), 0xdf);
        // CB DF 0001
        gbc.setState(0x8df2, 0x67a8, 0x6c60, 0x9dca, 0xab35, 0x6871, 0x1, 0x1);
        gbc.writeMem(0x8df2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x67a8);
        EXPECT(gbc.pc(), 0x8df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df2), 0xcb);
        EXPECT(gbc.readMem(0x8df3), 0xdf);
        // CB DF 0002
        gbc.setState(0xa106, 0x43c1, 0x2c0, 0xdbbc, 0xfc12, 0x9a27, 0x0, 0x1);
        gbc.writeMem(0xa106, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x43c1);
        EXPECT(gbc.pc(), 0xa108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa106), 0xcb);
        EXPECT(gbc.readMem(0xa107), 0xdf);
        // CB DF 0003
        gbc.setState(0xbeb7, 0x82ef, 0x4db0, 0xe444, 0x5eba, 0xaea2, 0x1, 0x1);
        gbc.writeMem(0xbeb7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x82ef);
        EXPECT(gbc.pc(), 0xbeb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb7), 0xcb);
        EXPECT(gbc.readMem(0xbeb8), 0xdf);
        // CB DF 0004
        gbc.setState(0x8e52, 0xc607, 0x7370, 0xb472, 0x79a2, 0x821a, 0x1, 0x1);
        gbc.writeMem(0x8e52, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc607);
        EXPECT(gbc.pc(), 0x8e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e52), 0xcb);
        EXPECT(gbc.readMem(0x8e53), 0xdf);
        // CB DF 0005
        gbc.setState(0xb087, 0x85da, 0x5cd0, 0xa067, 0xf83a, 0x53c7, 0x0, 0x0);
        gbc.writeMem(0xb087, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x85da);
        EXPECT(gbc.pc(), 0xb089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb087), 0xcb);
        EXPECT(gbc.readMem(0xb088), 0xdf);
        // CB DF 0006
        gbc.setState(0x19fc, 0x199a, 0x6110, 0xaedb, 0xa49b, 0x526, 0x0, 0x0);
        gbc.writeMem(0x19fc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x199a);
        EXPECT(gbc.pc(), 0x19fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0007
        gbc.setState(0x67aa, 0x922d, 0xfc30, 0x715f, 0x9c96, 0xc5e4, 0x0, 0x1);
        gbc.writeMem(0x67aa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x922d);
        EXPECT(gbc.pc(), 0x67ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0008
        gbc.setState(0x3e56, 0xe35f, 0x3c30, 0x8579, 0x321, 0xba, 0x0, 0x0);
        gbc.writeMem(0x3e56, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe35f);
        EXPECT(gbc.pc(), 0x3e58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0009
        gbc.setState(0xb31f, 0x3e20, 0xca10, 0x3166, 0xc0f2, 0x513a, 0x1, 0x0);
        gbc.writeMem(0xb31f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3e20);
        EXPECT(gbc.pc(), 0xb321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31f), 0xcb);
        EXPECT(gbc.readMem(0xb320), 0xdf);
        // CB DF 000A
        gbc.setState(0xca08, 0x77a2, 0x41f0, 0xb99d, 0xf00c, 0xa83c, 0x1, 0x0);
        gbc.writeMem(0xca08, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x77a2);
        EXPECT(gbc.pc(), 0xca0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca08), 0xcb);
        EXPECT(gbc.readMem(0xca09), 0xdf);
        // CB DF 000B
        gbc.setState(0xb6b7, 0x55ea, 0xd740, 0x7fb6, 0x74e3, 0xb4f2, 0x0, 0x0);
        gbc.writeMem(0xb6b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x55ea);
        EXPECT(gbc.pc(), 0xb6b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b7), 0xcb);
        EXPECT(gbc.readMem(0xb6b8), 0xdf);
        // CB DF 000C
        gbc.setState(0x99e0, 0x677b, 0x3680, 0xb634, 0x7827, 0x9d7, 0x1, 0x0);
        gbc.writeMem(0x99e0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x677b);
        EXPECT(gbc.pc(), 0x99e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e0), 0xcb);
        EXPECT(gbc.readMem(0x99e1), 0xdf);
        // CB DF 000D
        gbc.setState(0xeb5e, 0xe776, 0x8980, 0x630e, 0x6c4f, 0xaf05, 0x1, 0x0);
        gbc.writeMem(0xeb5e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe776);
        EXPECT(gbc.pc(), 0xeb60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb5e), 0xcb);
        EXPECT(gbc.readMem(0xeb5f), 0xdf);
        // CB DF 000E
        gbc.setState(0xdf71, 0x325f, 0x4fa0, 0x644c, 0xcdd2, 0xa371, 0x1, 0x0);
        gbc.writeMem(0xdf71, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x325f);
        EXPECT(gbc.pc(), 0xdf73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf71), 0xcb);
        EXPECT(gbc.readMem(0xdf72), 0xdf);
        // CB DF 000F
        gbc.setState(0x5981, 0xfba3, 0x71e0, 0xfc52, 0xea1e, 0x69e0, 0x1, 0x1);
        gbc.writeMem(0x5981, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfba3);
        EXPECT(gbc.pc(), 0x5983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0010
        gbc.setState(0x4b24, 0xb1c, 0xf810, 0x8da5, 0xb0ff, 0x236b, 0x1, 0x1);
        gbc.writeMem(0x4b24, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb1c);
        EXPECT(gbc.pc(), 0x4b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0011
        gbc.setState(0x510f, 0x49a1, 0xde50, 0x6c7c, 0x1b60, 0xf28b, 0x0, 0x0);
        gbc.writeMem(0x510f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x49a1);
        EXPECT(gbc.pc(), 0x5111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0012
        gbc.setState(0xc87, 0x253c, 0xc50, 0x6f3c, 0x4029, 0x2803, 0x1, 0x1);
        gbc.writeMem(0xc87, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x253c);
        EXPECT(gbc.pc(), 0xc89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0013
        gbc.setState(0x6d82, 0x15b6, 0x4e60, 0x9764, 0x3170, 0xf192, 0x0, 0x0);
        gbc.writeMem(0x6d82, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x15b6);
        EXPECT(gbc.pc(), 0x6d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0014
        gbc.setState(0x75c2, 0x925c, 0x4930, 0x6ab, 0xc8be, 0xa3cb, 0x0, 0x0);
        gbc.writeMem(0x75c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x925c);
        EXPECT(gbc.pc(), 0x75c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0015
        gbc.setState(0xd036, 0x6828, 0xf0e0, 0x675d, 0xf2da, 0x77df, 0x0, 0x0);
        gbc.writeMem(0xd036, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6828);
        EXPECT(gbc.pc(), 0xd038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd036), 0xcb);
        EXPECT(gbc.readMem(0xd037), 0xdf);
        // CB DF 0017
        gbc.setState(0x98c4, 0xc517, 0xbf0, 0xb410, 0x69e1, 0xb422, 0x1, 0x0);
        gbc.writeMem(0x98c4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc517);
        EXPECT(gbc.pc(), 0x98c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c4), 0xcb);
        EXPECT(gbc.readMem(0x98c5), 0xdf);
        // CB DF 0018
        gbc.setState(0xd792, 0x26b9, 0xc4c0, 0x71b2, 0x77ca, 0x4a07, 0x1, 0x1);
        gbc.writeMem(0xd792, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x26b9);
        EXPECT(gbc.pc(), 0xd794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd792), 0xcb);
        EXPECT(gbc.readMem(0xd793), 0xdf);
        // CB DF 0019
        gbc.setState(0x613b, 0x5daa, 0x1ef0, 0xcbf, 0x8ced, 0x5d28, 0x1, 0x0);
        gbc.writeMem(0x613b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5daa);
        EXPECT(gbc.pc(), 0x613d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 001A
        gbc.setState(0xefd9, 0x681d, 0xe880, 0xd7e, 0x42b8, 0x5eb1, 0x0, 0x1);
        gbc.writeMem(0xefd9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x681d);
        EXPECT(gbc.pc(), 0xefdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd9), 0xcb);
        EXPECT(gbc.readMem(0xefda), 0xdf);
        // CB DF 001C
        gbc.setState(0x607, 0xd69c, 0xcab0, 0x2e4c, 0xd8d8, 0x5445, 0x1, 0x1);
        gbc.writeMem(0x607, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd69c);
        EXPECT(gbc.pc(), 0x609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 001D
        gbc.setState(0xb1ab, 0xe9fc, 0x5000, 0xc5d8, 0x86f3, 0x8c95, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe9fc);
        EXPECT(gbc.pc(), 0xb1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ab), 0xcb);
        EXPECT(gbc.readMem(0xb1ac), 0xdf);
        // CB DF 001E
        gbc.setState(0xee39, 0x55dd, 0x1120, 0x4536, 0xa6e0, 0x4022, 0x0, 0x0);
        gbc.writeMem(0xee39, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x55dd);
        EXPECT(gbc.pc(), 0xee3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee39), 0xcb);
        EXPECT(gbc.readMem(0xee3a), 0xdf);
        // CB DF 001F
        gbc.setState(0x89e9, 0xdffc, 0x54a0, 0xb2af, 0x59c2, 0x5695, 0x1, 0x0);
        gbc.writeMem(0x89e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdffc);
        EXPECT(gbc.pc(), 0x89eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e9), 0xcb);
        EXPECT(gbc.readMem(0x89ea), 0xdf);
        // CB DF 0020
        gbc.setState(0x1585, 0xb1b8, 0xe7a0, 0x8933, 0xf7, 0x5a0b, 0x1, 0x1);
        gbc.writeMem(0x1585, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb1b8);
        EXPECT(gbc.pc(), 0x1587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0022
        gbc.setState(0x9372, 0xed82, 0xae10, 0x8b65, 0xbcb0, 0x81c7, 0x1, 0x0);
        gbc.writeMem(0x9372, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xed82);
        EXPECT(gbc.pc(), 0x9374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9372), 0xcb);
        EXPECT(gbc.readMem(0x9373), 0xdf);
        // CB DF 0023
        gbc.setState(0xe481, 0xeec7, 0xf4c0, 0x89e3, 0x3157, 0x3394, 0x1, 0x1);
        gbc.writeMem(0xe481, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xeec7);
        EXPECT(gbc.pc(), 0xe483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe481), 0xcb);
        EXPECT(gbc.readMem(0xe482), 0xdf);
        // CB DF 0024
        gbc.setState(0x9c64, 0x125d, 0x1ce0, 0x187, 0x6b7c, 0x4f99, 0x0, 0x0);
        gbc.writeMem(0x9c64, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x125d);
        EXPECT(gbc.pc(), 0x9c66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c64), 0xcb);
        EXPECT(gbc.readMem(0x9c65), 0xdf);
        // CB DF 0025
        gbc.setState(0xc5ae, 0x14ff, 0xe000, 0x643a, 0x8366, 0x1b5c, 0x0, 0x0);
        gbc.writeMem(0xc5ae, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x14ff);
        EXPECT(gbc.pc(), 0xc5b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ae), 0xcb);
        EXPECT(gbc.readMem(0xc5af), 0xdf);
        // CB DF 0026
        gbc.setState(0xab9a, 0x470b, 0xa150, 0x7a94, 0x1803, 0x797c, 0x1, 0x0);
        gbc.writeMem(0xab9a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x470b);
        EXPECT(gbc.pc(), 0xab9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab9a), 0xcb);
        EXPECT(gbc.readMem(0xab9b), 0xdf);
        // CB DF 0027
        gbc.setState(0xb16b, 0x73e8, 0xc8b0, 0xaeb0, 0x8018, 0x1e1d, 0x0, 0x1);
        gbc.writeMem(0xb16b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x73e8);
        EXPECT(gbc.pc(), 0xb16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16b), 0xcb);
        EXPECT(gbc.readMem(0xb16c), 0xdf);
        // CB DF 0028
        gbc.setState(0x6993, 0xd465, 0xee20, 0xa62c, 0x7be0, 0x53b7, 0x1, 0x1);
        gbc.writeMem(0x6993, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd465);
        EXPECT(gbc.pc(), 0x6995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0029
        gbc.setState(0x71eb, 0xb01f, 0xbe60, 0x686d, 0xb280, 0xddb6, 0x1, 0x0);
        gbc.writeMem(0x71eb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb01f);
        EXPECT(gbc.pc(), 0x71ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 002A
        gbc.setState(0xbbeb, 0xe031, 0x6460, 0xf9c0, 0x2c38, 0xda23, 0x0, 0x1);
        gbc.writeMem(0xbbeb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe031);
        EXPECT(gbc.pc(), 0xbbed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbeb), 0xcb);
        EXPECT(gbc.readMem(0xbbec), 0xdf);
        // CB DF 002B
        gbc.setState(0x44a3, 0xdcb5, 0x3c40, 0x6962, 0x1b7b, 0x342e, 0x0, 0x0);
        gbc.writeMem(0x44a3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdcb5);
        EXPECT(gbc.pc(), 0x44a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 002C
        gbc.setState(0x1178, 0xed3, 0xa5b0, 0x6277, 0xc3b0, 0xfb50, 0x0, 0x1);
        gbc.writeMem(0x1178, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xed3);
        EXPECT(gbc.pc(), 0x117a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 002D
        gbc.setState(0x6be1, 0xad42, 0x5d20, 0x28a, 0x8b2f, 0x3a87, 0x1, 0x0);
        gbc.writeMem(0x6be1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xad42);
        EXPECT(gbc.pc(), 0x6be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 002E
        gbc.setState(0x9cc5, 0x349d, 0x8940, 0xd946, 0xfe0, 0xad05, 0x1, 0x1);
        gbc.writeMem(0x9cc5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x349d);
        EXPECT(gbc.pc(), 0x9cc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc5), 0xcb);
        EXPECT(gbc.readMem(0x9cc6), 0xdf);
        // CB DF 002F
        gbc.setState(0x2160, 0xa817, 0x6980, 0xda33, 0xa744, 0x691a, 0x0, 0x0);
        gbc.writeMem(0x2160, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa817);
        EXPECT(gbc.pc(), 0x2162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0030
        gbc.setState(0x3262, 0xe1bd, 0xf4d0, 0xd577, 0xe23, 0x2b9d, 0x1, 0x0);
        gbc.writeMem(0x3262, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe1bd);
        EXPECT(gbc.pc(), 0x3264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0032
        gbc.setState(0xb98a, 0x1510, 0x2db0, 0x22e3, 0x274d, 0xf09b, 0x1, 0x1);
        gbc.writeMem(0xb98a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1510);
        EXPECT(gbc.pc(), 0xb98c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98a), 0xcb);
        EXPECT(gbc.readMem(0xb98b), 0xdf);
        // CB DF 0033
        gbc.setState(0x1cf8, 0xa8e0, 0x1d30, 0x649d, 0xa3d9, 0x7388, 0x1, 0x0);
        gbc.writeMem(0x1cf8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa8e0);
        EXPECT(gbc.pc(), 0x1cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0034
        gbc.setState(0xeb12, 0x8d30, 0x1740, 0xb563, 0x552e, 0x5540, 0x0, 0x1);
        gbc.writeMem(0xeb12, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8d30);
        EXPECT(gbc.pc(), 0xeb14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb12), 0xcb);
        EXPECT(gbc.readMem(0xeb13), 0xdf);
        // CB DF 0035
        gbc.setState(0x8988, 0x6e02, 0x1ea0, 0xa514, 0x3428, 0xa6ab, 0x0, 0x1);
        gbc.writeMem(0x8988, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6e02);
        EXPECT(gbc.pc(), 0x898a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8988), 0xcb);
        EXPECT(gbc.readMem(0x8989), 0xdf);
        // CB DF 0036
        gbc.setState(0x61b5, 0xc1e1, 0x8580, 0x2e51, 0x4f4e, 0x10c1, 0x0, 0x1);
        gbc.writeMem(0x61b5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc1e1);
        EXPECT(gbc.pc(), 0x61b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0038
        gbc.setState(0x2e9, 0x1484, 0x4e20, 0xdea5, 0x6a57, 0xdd4d, 0x0, 0x1);
        gbc.writeMem(0x2e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1484);
        EXPECT(gbc.pc(), 0x2eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0039
        gbc.setState(0x1dc9, 0x727a, 0x4cf0, 0x4fe0, 0x6554, 0x4f5e, 0x0, 0x0);
        gbc.writeMem(0x1dc9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x727a);
        EXPECT(gbc.pc(), 0x1dcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 003A
        gbc.setState(0x9f4, 0x9018, 0x10a0, 0xb85d, 0x7fd9, 0xe53c, 0x1, 0x0);
        gbc.writeMem(0x9f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9018);
        EXPECT(gbc.pc(), 0x9f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 003B
        gbc.setState(0xada2, 0x9c8e, 0x4420, 0xdb8d, 0x2fe3, 0xad25, 0x0, 0x1);
        gbc.writeMem(0xada2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9c8e);
        EXPECT(gbc.pc(), 0xada4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada2), 0xcb);
        EXPECT(gbc.readMem(0xada3), 0xdf);
        // CB DF 003C
        gbc.setState(0x4bb7, 0xf6eb, 0x3fc0, 0x6ce9, 0x4904, 0xbd71, 0x1, 0x0);
        gbc.writeMem(0x4bb7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf6eb);
        EXPECT(gbc.pc(), 0x4bb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 003D
        gbc.setState(0x2d3c, 0xac2b, 0x7c30, 0xa578, 0xda28, 0xa124, 0x1, 0x1);
        gbc.writeMem(0x2d3c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xac2b);
        EXPECT(gbc.pc(), 0x2d3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 003E
        gbc.setState(0x70d6, 0x6f0b, 0xb7f0, 0xb33c, 0x2341, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0x70d6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6f0b);
        EXPECT(gbc.pc(), 0x70d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 003F
        gbc.setState(0xaa83, 0xeebd, 0x52b0, 0x2e67, 0x6ef9, 0xc530, 0x1, 0x1);
        gbc.writeMem(0xaa83, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xeebd);
        EXPECT(gbc.pc(), 0xaa85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa83), 0xcb);
        EXPECT(gbc.readMem(0xaa84), 0xdf);
        // CB DF 0040
        gbc.setState(0xdc7a, 0x783b, 0x14c0, 0x51df, 0xda2b, 0x1899, 0x1, 0x1);
        gbc.writeMem(0xdc7a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x783b);
        EXPECT(gbc.pc(), 0xdc7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc7a), 0xcb);
        EXPECT(gbc.readMem(0xdc7b), 0xdf);
        // CB DF 0041
        gbc.setState(0xdd5, 0x7449, 0x77f0, 0x3ab1, 0xd270, 0xed5a, 0x1, 0x1);
        gbc.writeMem(0xdd5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7449);
        EXPECT(gbc.pc(), 0xdd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0042
        gbc.setState(0x5bdb, 0xd81a, 0xa1a0, 0x1340, 0x6bf2, 0xed9b, 0x1, 0x0);
        gbc.writeMem(0x5bdb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd81a);
        EXPECT(gbc.pc(), 0x5bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0043
        gbc.setState(0x6904, 0x3937, 0x37b0, 0x4965, 0x781f, 0xd, 0x1, 0x0);
        gbc.writeMem(0x6904, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3937);
        EXPECT(gbc.pc(), 0x6906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0044
        gbc.setState(0x9fc4, 0xcdd2, 0xfae0, 0x7dfb, 0x7856, 0x72b6, 0x0, 0x1);
        gbc.writeMem(0x9fc4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcdd2);
        EXPECT(gbc.pc(), 0x9fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc4), 0xcb);
        EXPECT(gbc.readMem(0x9fc5), 0xdf);
        // CB DF 0045
        gbc.setState(0xceb6, 0xe3eb, 0xa90, 0x6054, 0x62e7, 0xbc6b, 0x1, 0x0);
        gbc.writeMem(0xceb6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe3eb);
        EXPECT(gbc.pc(), 0xceb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb6), 0xcb);
        EXPECT(gbc.readMem(0xceb7), 0xdf);
        // CB DF 0046
        gbc.setState(0x8132, 0xa937, 0xa860, 0x5d04, 0x15c1, 0x3e08, 0x0, 0x0);
        gbc.writeMem(0x8132, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa937);
        EXPECT(gbc.pc(), 0x8134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8132), 0xcb);
        EXPECT(gbc.readMem(0x8133), 0xdf);
        // CB DF 0047
        gbc.setState(0x6da, 0x431a, 0x45c0, 0x3ff2, 0x520c, 0x94d8, 0x0, 0x0);
        gbc.writeMem(0x6da, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x431a);
        EXPECT(gbc.pc(), 0x6dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0048
        gbc.setState(0x2243, 0x951b, 0x3310, 0x29ec, 0x94c6, 0x6823, 0x1, 0x0);
        gbc.writeMem(0x2243, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x951b);
        EXPECT(gbc.pc(), 0x2245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0049
        gbc.setState(0x809e, 0xb10, 0xd910, 0xaf8c, 0xf9df, 0x3a5d, 0x0, 0x1);
        gbc.writeMem(0x809e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb10);
        EXPECT(gbc.pc(), 0x80a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x809e), 0xcb);
        EXPECT(gbc.readMem(0x809f), 0xdf);
        // CB DF 004A
        gbc.setState(0x2c48, 0xebde, 0x6f50, 0xc7d2, 0x6aa4, 0x3bf2, 0x1, 0x0);
        gbc.writeMem(0x2c48, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xebde);
        EXPECT(gbc.pc(), 0x2c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 004B
        gbc.setState(0x1f7, 0xfc03, 0xd6c0, 0xc2fc, 0xae58, 0x1a58, 0x0, 0x0);
        gbc.writeMem(0x1f7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfc03);
        EXPECT(gbc.pc(), 0x1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 004C
        gbc.setState(0x4b86, 0x56c5, 0x84b0, 0xcef3, 0xa666, 0x33df, 0x1, 0x0);
        gbc.writeMem(0x4b86, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x56c5);
        EXPECT(gbc.pc(), 0x4b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 004F
        gbc.setState(0x8b4d, 0x1887, 0xf9a0, 0xc0d3, 0x30ff, 0xf5ea, 0x1, 0x0);
        gbc.writeMem(0x8b4d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1887);
        EXPECT(gbc.pc(), 0x8b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4d), 0xcb);
        EXPECT(gbc.readMem(0x8b4e), 0xdf);
        // CB DF 0050
        gbc.setState(0xa7ff, 0xc61a, 0xca00, 0x406f, 0xc8f8, 0xb55b, 0x1, 0x1);
        gbc.writeMem(0xa7ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc61a);
        EXPECT(gbc.pc(), 0xa801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ff), 0xcb);
        EXPECT(gbc.readMem(0xa800), 0xdf);
        // CB DF 0052
        gbc.setState(0x7b78, 0x1904, 0x8f70, 0xf2f3, 0x8567, 0x5849, 0x1, 0x1);
        gbc.writeMem(0x7b78, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1904);
        EXPECT(gbc.pc(), 0x7b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0053
        gbc.setState(0x8ea0, 0x8d2c, 0x9080, 0xcfd2, 0xa767, 0x7688, 0x0, 0x0);
        gbc.writeMem(0x8ea0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8d2c);
        EXPECT(gbc.pc(), 0x8ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea0), 0xcb);
        EXPECT(gbc.readMem(0x8ea1), 0xdf);
        // CB DF 0054
        gbc.setState(0x9f3, 0x2b80, 0xd200, 0x4b7f, 0x6846, 0x2120, 0x0, 0x0);
        gbc.writeMem(0x9f3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2b80);
        EXPECT(gbc.pc(), 0x9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0055
        gbc.setState(0xee3a, 0x4509, 0xda70, 0x8620, 0x9c4, 0x1e30, 0x1, 0x1);
        gbc.writeMem(0xee3a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4509);
        EXPECT(gbc.pc(), 0xee3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3a), 0xcb);
        EXPECT(gbc.readMem(0xee3b), 0xdf);
        // CB DF 0056
        gbc.setState(0x8170, 0x9aa6, 0x590, 0xe7d5, 0x9de3, 0x13c, 0x0, 0x0);
        gbc.writeMem(0x8170, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9aa6);
        EXPECT(gbc.pc(), 0x8172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8170), 0xcb);
        EXPECT(gbc.readMem(0x8171), 0xdf);
        // CB DF 0057
        gbc.setState(0x348c, 0xff25, 0xd3a0, 0xb54c, 0x6da9, 0x846a, 0x0, 0x1);
        gbc.writeMem(0x348c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xff25);
        EXPECT(gbc.pc(), 0x348e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0058
        gbc.setState(0xae17, 0xb234, 0x2000, 0xcd30, 0x2222, 0xb11a, 0x1, 0x0);
        gbc.writeMem(0xae17, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb234);
        EXPECT(gbc.pc(), 0xae19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae17), 0xcb);
        EXPECT(gbc.readMem(0xae18), 0xdf);
        // CB DF 005A
        gbc.setState(0x71ae, 0x98d1, 0x2850, 0xc2cf, 0x9610, 0xdd08, 0x0, 0x0);
        gbc.writeMem(0x71ae, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x98d1);
        EXPECT(gbc.pc(), 0x71b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 005B
        gbc.setState(0xe96b, 0xb86f, 0x2bf0, 0x28c3, 0xf91f, 0x9835, 0x1, 0x1);
        gbc.writeMem(0xe96b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb86f);
        EXPECT(gbc.pc(), 0xe96d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe96b), 0xcb);
        EXPECT(gbc.readMem(0xe96c), 0xdf);
        // CB DF 005C
        gbc.setState(0x7cee, 0xcfce, 0x6560, 0x6598, 0xa0, 0x1972, 0x1, 0x1);
        gbc.writeMem(0x7cee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcfce);
        EXPECT(gbc.pc(), 0x7cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 005D
        gbc.setState(0x8a94, 0x55d0, 0x9fd0, 0xaba1, 0x3937, 0xba58, 0x0, 0x0);
        gbc.writeMem(0x8a94, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x55d0);
        EXPECT(gbc.pc(), 0x8a96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a94), 0xcb);
        EXPECT(gbc.readMem(0x8a95), 0xdf);
        // CB DF 005E
        gbc.setState(0x3a74, 0x9c18, 0xc470, 0xd93a, 0x3b6, 0xcd15, 0x1, 0x1);
        gbc.writeMem(0x3a74, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9c18);
        EXPECT(gbc.pc(), 0x3a76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 005F
        gbc.setState(0x1c99, 0xd9ce, 0xbe70, 0xa062, 0x98eb, 0x274c, 0x0, 0x1);
        gbc.writeMem(0x1c99, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd9ce);
        EXPECT(gbc.pc(), 0x1c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0060
        gbc.setState(0xa7cd, 0x735f, 0xda50, 0x5752, 0x9ce8, 0xfe97, 0x0, 0x0);
        gbc.writeMem(0xa7cd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x735f);
        EXPECT(gbc.pc(), 0xa7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cd), 0xcb);
        EXPECT(gbc.readMem(0xa7ce), 0xdf);
        // CB DF 0061
        gbc.setState(0x236, 0xe1a3, 0x1860, 0x23d0, 0xa2a9, 0xda2b, 0x1, 0x1);
        gbc.writeMem(0x236, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe1a3);
        EXPECT(gbc.pc(), 0x238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0062
        gbc.setState(0xd8b, 0x2418, 0x3750, 0x87a8, 0x5b71, 0xa83a, 0x0, 0x0);
        gbc.writeMem(0xd8b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2418);
        EXPECT(gbc.pc(), 0xd8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0063
        gbc.setState(0x3f72, 0xf9d9, 0xa3f0, 0x51c4, 0xc5b, 0xba80, 0x1, 0x0);
        gbc.writeMem(0x3f72, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf9d9);
        EXPECT(gbc.pc(), 0x3f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0064
        gbc.setState(0xa33a, 0x6f30, 0x52a0, 0xa5c9, 0x65fd, 0x788f, 0x1, 0x0);
        gbc.writeMem(0xa33a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6f30);
        EXPECT(gbc.pc(), 0xa33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa33a), 0xcb);
        EXPECT(gbc.readMem(0xa33b), 0xdf);
        // CB DF 0065
        gbc.setState(0xc204, 0x4b71, 0xa020, 0xc36, 0x1545, 0x70c, 0x1, 0x1);
        gbc.writeMem(0xc204, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4b71);
        EXPECT(gbc.pc(), 0xc206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc204), 0xcb);
        EXPECT(gbc.readMem(0xc205), 0xdf);
        // CB DF 0066
        gbc.setState(0x492e, 0x3024, 0xf070, 0xece8, 0x27cc, 0xde71, 0x1, 0x0);
        gbc.writeMem(0x492e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3024);
        EXPECT(gbc.pc(), 0x4930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0067
        gbc.setState(0x65a4, 0xdf0, 0x9600, 0xaa35, 0x3370, 0xdb2, 0x1, 0x1);
        gbc.writeMem(0x65a4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdf0);
        EXPECT(gbc.pc(), 0x65a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0068
        gbc.setState(0xcfdb, 0x3d1c, 0xe30, 0xf9e9, 0xfc42, 0x64cb, 0x1, 0x0);
        gbc.writeMem(0xcfdb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3d1c);
        EXPECT(gbc.pc(), 0xcfdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfdb), 0xcb);
        EXPECT(gbc.readMem(0xcfdc), 0xdf);
        // CB DF 0069
        gbc.setState(0x1094, 0x24e6, 0xc810, 0xabb2, 0x4a45, 0x5468, 0x0, 0x0);
        gbc.writeMem(0x1094, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x24e6);
        EXPECT(gbc.pc(), 0x1096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 006A
        gbc.setState(0x9de9, 0x83d4, 0x3a00, 0x3d49, 0x9c9, 0x26ec, 0x0, 0x1);
        gbc.writeMem(0x9de9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x83d4);
        EXPECT(gbc.pc(), 0x9deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de9), 0xcb);
        EXPECT(gbc.readMem(0x9dea), 0xdf);
        // CB DF 006B
        gbc.setState(0xbe46, 0x79e7, 0x34a0, 0x2d65, 0x97f1, 0x5484, 0x1, 0x0);
        gbc.writeMem(0xbe46, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x79e7);
        EXPECT(gbc.pc(), 0xbe48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe46), 0xcb);
        EXPECT(gbc.readMem(0xbe47), 0xdf);
        // CB DF 006C
        gbc.setState(0x4fc9, 0x102f, 0x860, 0x6460, 0xceff, 0xe0a6, 0x0, 0x0);
        gbc.writeMem(0x4fc9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x102f);
        EXPECT(gbc.pc(), 0x4fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 006D
        gbc.setState(0x63b, 0x5b89, 0xd60, 0x42dd, 0x3459, 0xca0e, 0x0, 0x0);
        gbc.writeMem(0x63b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5b89);
        EXPECT(gbc.pc(), 0x63d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 006E
        gbc.setState(0x3974, 0xb375, 0x59f0, 0x1805, 0x31f2, 0x9d67, 0x0, 0x0);
        gbc.writeMem(0x3974, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb375);
        EXPECT(gbc.pc(), 0x3976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 006F
        gbc.setState(0x49f2, 0x7003, 0xf390, 0x5df2, 0x4d29, 0xcc0f, 0x0, 0x0);
        gbc.writeMem(0x49f2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7003);
        EXPECT(gbc.pc(), 0x49f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0070
        gbc.setState(0x74b0, 0x29b6, 0xd9b0, 0x3ed3, 0x78f1, 0xa0c6, 0x0, 0x1);
        gbc.writeMem(0x74b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x29b6);
        EXPECT(gbc.pc(), 0x74b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0072
        gbc.setState(0x8d1d, 0xca1a, 0xdf10, 0xf8f, 0x6a9f, 0x16d, 0x1, 0x0);
        gbc.writeMem(0x8d1d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xca1a);
        EXPECT(gbc.pc(), 0x8d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d1d), 0xcb);
        EXPECT(gbc.readMem(0x8d1e), 0xdf);
        // CB DF 0073
        gbc.setState(0x4b6c, 0x6e97, 0x8cc0, 0x3383, 0x6780, 0x5385, 0x1, 0x1);
        gbc.writeMem(0x4b6c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6e97);
        EXPECT(gbc.pc(), 0x4b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0074
        gbc.setState(0x4a65, 0xbf50, 0xbc70, 0x1bed, 0x8a61, 0xf72c, 0x1, 0x1);
        gbc.writeMem(0x4a65, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbf50);
        EXPECT(gbc.pc(), 0x4a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0075
        gbc.setState(0x9d2a, 0xa1f5, 0x63b0, 0x9b8c, 0xd19b, 0x6287, 0x0, 0x1);
        gbc.writeMem(0x9d2a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa1f5);
        EXPECT(gbc.pc(), 0x9d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d2a), 0xcb);
        EXPECT(gbc.readMem(0x9d2b), 0xdf);
        // CB DF 0076
        gbc.setState(0xdbce, 0x4684, 0x48f0, 0x6516, 0xc159, 0x50d, 0x0, 0x0);
        gbc.writeMem(0xdbce, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4684);
        EXPECT(gbc.pc(), 0xdbd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbce), 0xcb);
        EXPECT(gbc.readMem(0xdbcf), 0xdf);
        // CB DF 0077
        gbc.setState(0xa766, 0xb6d9, 0xb3a0, 0x5d89, 0x50d2, 0x5f53, 0x0, 0x0);
        gbc.writeMem(0xa766, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb6d9);
        EXPECT(gbc.pc(), 0xa768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa766), 0xcb);
        EXPECT(gbc.readMem(0xa767), 0xdf);
        // CB DF 0078
        gbc.setState(0x4d88, 0xbb4e, 0x53c0, 0x924e, 0xee9f, 0x8eb6, 0x0, 0x1);
        gbc.writeMem(0x4d88, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbb4e);
        EXPECT(gbc.pc(), 0x4d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0079
        gbc.setState(0xc6dc, 0x4cdf, 0x47d0, 0xd12f, 0x19bd, 0x6b18, 0x1, 0x1);
        gbc.writeMem(0xc6dc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4cdf);
        EXPECT(gbc.pc(), 0xc6de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6dc), 0xcb);
        EXPECT(gbc.readMem(0xc6dd), 0xdf);
        // CB DF 007A
        gbc.setState(0x9f67, 0xc6ad, 0xcc80, 0x8a56, 0xa5a2, 0xd65a, 0x1, 0x0);
        gbc.writeMem(0x9f67, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc6ad);
        EXPECT(gbc.pc(), 0x9f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f67), 0xcb);
        EXPECT(gbc.readMem(0x9f68), 0xdf);
        // CB DF 007B
        gbc.setState(0x644e, 0xf250, 0x1540, 0x7724, 0xffc8, 0xeef6, 0x0, 0x0);
        gbc.writeMem(0x644e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf250);
        EXPECT(gbc.pc(), 0x6450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 007C
        gbc.setState(0x2587, 0x2e1d, 0xb0d0, 0xe43c, 0x5284, 0xd12, 0x0, 0x1);
        gbc.writeMem(0x2587, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2e1d);
        EXPECT(gbc.pc(), 0x2589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 007D
        gbc.setState(0x8789, 0x5bcb, 0xfd90, 0x4609, 0xbb20, 0xc852, 0x0, 0x1);
        gbc.writeMem(0x8789, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5bcb);
        EXPECT(gbc.pc(), 0x878b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8789), 0xcb);
        EXPECT(gbc.readMem(0x878a), 0xdf);
        // CB DF 007E
        gbc.setState(0x200b, 0x10ce, 0x700, 0xd802, 0xdb0e, 0x3456, 0x1, 0x1);
        gbc.writeMem(0x200b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x10ce);
        EXPECT(gbc.pc(), 0x200d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 007F
        gbc.setState(0x8b8b, 0xb17a, 0x22d0, 0xec6, 0x4044, 0x78be, 0x0, 0x1);
        gbc.writeMem(0x8b8b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb17a);
        EXPECT(gbc.pc(), 0x8b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8b), 0xcb);
        EXPECT(gbc.readMem(0x8b8c), 0xdf);
        // CB DF 0080
        gbc.setState(0x68ba, 0xbdcb, 0x3f80, 0x53b4, 0x6209, 0x9dec, 0x1, 0x0);
        gbc.writeMem(0x68ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbdcb);
        EXPECT(gbc.pc(), 0x68bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0081
        gbc.setState(0x506a, 0xb37, 0x3690, 0x21fd, 0xdb33, 0x6c7d, 0x0, 0x1);
        gbc.writeMem(0x506a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb37);
        EXPECT(gbc.pc(), 0x506c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0082
        gbc.setState(0xd3e, 0x674a, 0xc1e0, 0x9221, 0x5d05, 0x7d1d, 0x0, 0x1);
        gbc.writeMem(0xd3e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x674a);
        EXPECT(gbc.pc(), 0xd40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0083
        gbc.setState(0x6f56, 0xb81b, 0xde30, 0xc6c1, 0x7607, 0x58aa, 0x0, 0x1);
        gbc.writeMem(0x6f56, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb81b);
        EXPECT(gbc.pc(), 0x6f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0084
        gbc.setState(0xdab2, 0xf45b, 0xcd50, 0x8885, 0xab89, 0xb379, 0x1, 0x1);
        gbc.writeMem(0xdab2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf45b);
        EXPECT(gbc.pc(), 0xdab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab2), 0xcb);
        EXPECT(gbc.readMem(0xdab3), 0xdf);
        // CB DF 0085
        gbc.setState(0xb3e2, 0x1afb, 0xd470, 0xb0df, 0xaaf7, 0xec3a, 0x1, 0x0);
        gbc.writeMem(0xb3e2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1afb);
        EXPECT(gbc.pc(), 0xb3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e2), 0xcb);
        EXPECT(gbc.readMem(0xb3e3), 0xdf);
        // CB DF 0086
        gbc.setState(0x7f8c, 0xe3e, 0xc120, 0xac17, 0xede9, 0xde9a, 0x0, 0x1);
        gbc.writeMem(0x7f8c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe3e);
        EXPECT(gbc.pc(), 0x7f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0087
        gbc.setState(0x9bfa, 0x630b, 0x67a0, 0xdc91, 0xc1f3, 0x4ccf, 0x0, 0x0);
        gbc.writeMem(0x9bfa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x630b);
        EXPECT(gbc.pc(), 0x9bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfa), 0xcb);
        EXPECT(gbc.readMem(0x9bfb), 0xdf);
        // CB DF 0088
        gbc.setState(0x7205, 0x43fe, 0x1b80, 0x14c8, 0xbd38, 0xc5b9, 0x1, 0x0);
        gbc.writeMem(0x7205, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x43fe);
        EXPECT(gbc.pc(), 0x7207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0089
        gbc.setState(0x84a8, 0xf612, 0xdd50, 0xfd81, 0x3b0b, 0x1315, 0x0, 0x0);
        gbc.writeMem(0x84a8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf612);
        EXPECT(gbc.pc(), 0x84aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a8), 0xcb);
        EXPECT(gbc.readMem(0x84a9), 0xdf);
        // CB DF 008A
        gbc.setState(0x6000, 0x8f56, 0xfd20, 0x44c5, 0x848f, 0x6876, 0x0, 0x1);
        gbc.writeMem(0x6000, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8f56);
        EXPECT(gbc.pc(), 0x6002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 008B
        gbc.setState(0x1683, 0xf0c8, 0x1440, 0xbf1b, 0x7a38, 0x6b93, 0x1, 0x1);
        gbc.writeMem(0x1683, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf0c8);
        EXPECT(gbc.pc(), 0x1685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 008C
        gbc.setState(0x3984, 0x9651, 0xfab0, 0xb7b3, 0xae2c, 0x5790, 0x1, 0x1);
        gbc.writeMem(0x3984, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9651);
        EXPECT(gbc.pc(), 0x3986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 008D
        gbc.setState(0x3265, 0x9a21, 0xeb30, 0x1920, 0x791a, 0x580f, 0x1, 0x1);
        gbc.writeMem(0x3265, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9a21);
        EXPECT(gbc.pc(), 0x3267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 008E
        gbc.setState(0x8e76, 0xe93d, 0x4250, 0xa3d3, 0x113b, 0xc52c, 0x1, 0x1);
        gbc.writeMem(0x8e76, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe93d);
        EXPECT(gbc.pc(), 0x8e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e76), 0xcb);
        EXPECT(gbc.readMem(0x8e77), 0xdf);
        // CB DF 008F
        gbc.setState(0x3bfc, 0xaea, 0xbaa0, 0xdeff, 0x8313, 0xc17f, 0x1, 0x1);
        gbc.writeMem(0x3bfc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xaea);
        EXPECT(gbc.pc(), 0x3bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0090
        gbc.setState(0x74be, 0x9a1a, 0xac0, 0x87c8, 0x5fb0, 0x15d9, 0x0, 0x1);
        gbc.writeMem(0x74be, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9a1a);
        EXPECT(gbc.pc(), 0x74c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0091
        gbc.setState(0x7be6, 0xe70d, 0xd600, 0x5f28, 0x582a, 0x32f8, 0x0, 0x1);
        gbc.writeMem(0x7be6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe70d);
        EXPECT(gbc.pc(), 0x7be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0092
        gbc.setState(0x5f13, 0x4c2a, 0x51c0, 0x3daf, 0xbc13, 0x60ed, 0x0, 0x1);
        gbc.writeMem(0x5f13, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4c2a);
        EXPECT(gbc.pc(), 0x5f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0093
        gbc.setState(0x6dec, 0xbf11, 0x3780, 0xa61f, 0x10ae, 0x2c9, 0x1, 0x0);
        gbc.writeMem(0x6dec, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbf11);
        EXPECT(gbc.pc(), 0x6dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0094
        gbc.setState(0xa0b1, 0x1cf, 0x1450, 0x191f, 0xcf3b, 0xe8a5, 0x1, 0x0);
        gbc.writeMem(0xa0b1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1cf);
        EXPECT(gbc.pc(), 0xa0b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0b1), 0xcb);
        EXPECT(gbc.readMem(0xa0b2), 0xdf);
        // CB DF 0095
        gbc.setState(0xd8c8, 0xe7ac, 0xe370, 0x9bc4, 0xca60, 0xaf98, 0x0, 0x1);
        gbc.writeMem(0xd8c8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe7ac);
        EXPECT(gbc.pc(), 0xd8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c8), 0xcb);
        EXPECT(gbc.readMem(0xd8c9), 0xdf);
        // CB DF 0096
        gbc.setState(0x50d8, 0x5c03, 0xd2a0, 0x5770, 0xfb84, 0x499d, 0x0, 0x0);
        gbc.writeMem(0x50d8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5c03);
        EXPECT(gbc.pc(), 0x50da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0097
        gbc.setState(0x6b0, 0x3038, 0x6200, 0xa766, 0xb552, 0xc438, 0x0, 0x0);
        gbc.writeMem(0x6b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3038);
        EXPECT(gbc.pc(), 0x6b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0098
        gbc.setState(0xad16, 0x2a05, 0x9f10, 0x2793, 0xb329, 0x8613, 0x0, 0x0);
        gbc.writeMem(0xad16, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2a05);
        EXPECT(gbc.pc(), 0xad18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad16), 0xcb);
        EXPECT(gbc.readMem(0xad17), 0xdf);
        // CB DF 0099
        gbc.setState(0x2bb0, 0x8c00, 0x7d80, 0xfb9f, 0x24c2, 0x8315, 0x0, 0x1);
        gbc.writeMem(0x2bb0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8c00);
        EXPECT(gbc.pc(), 0x2bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 009B
        gbc.setState(0xa800, 0x4f64, 0xb770, 0x16d3, 0x1138, 0x1403, 0x1, 0x0);
        gbc.writeMem(0xa800, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4f64);
        EXPECT(gbc.pc(), 0xa802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa800), 0xcb);
        EXPECT(gbc.readMem(0xa801), 0xdf);
        // CB DF 009C
        gbc.setState(0x18ae, 0x44c7, 0x47e0, 0x8069, 0xaa1d, 0x8a7d, 0x1, 0x0);
        gbc.writeMem(0x18ae, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x44c7);
        EXPECT(gbc.pc(), 0x18b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 009D
        gbc.setState(0x4415, 0xbd35, 0x7f30, 0xe649, 0x5d2e, 0xd3e6, 0x1, 0x1);
        gbc.writeMem(0x4415, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbd35);
        EXPECT(gbc.pc(), 0x4417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 009E
        gbc.setState(0x713c, 0x2963, 0xca20, 0xec69, 0x5a53, 0xe292, 0x0, 0x0);
        gbc.writeMem(0x713c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2963);
        EXPECT(gbc.pc(), 0x713e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 009F
        gbc.setState(0xbd10, 0x461c, 0xf8b0, 0x56df, 0xb539, 0xbd77, 0x1, 0x0);
        gbc.writeMem(0xbd10, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x461c);
        EXPECT(gbc.pc(), 0xbd12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd10), 0xcb);
        EXPECT(gbc.readMem(0xbd11), 0xdf);
        // CB DF 00A0
        gbc.setState(0x6cf1, 0x7a78, 0xc5d0, 0x726, 0x7af0, 0x44fb, 0x1, 0x0);
        gbc.writeMem(0x6cf1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7a78);
        EXPECT(gbc.pc(), 0x6cf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00A1
        gbc.setState(0xe7c2, 0x9b7f, 0xa5e0, 0xb9fa, 0xab0a, 0x49a8, 0x0, 0x1);
        gbc.writeMem(0xe7c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9b7f);
        EXPECT(gbc.pc(), 0xe7c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c2), 0xcb);
        EXPECT(gbc.readMem(0xe7c3), 0xdf);
        // CB DF 00A2
        gbc.setState(0xe519, 0xc951, 0x7730, 0x4827, 0x2ddd, 0xc4e, 0x1, 0x1);
        gbc.writeMem(0xe519, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc951);
        EXPECT(gbc.pc(), 0xe51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe519), 0xcb);
        EXPECT(gbc.readMem(0xe51a), 0xdf);
        // CB DF 00A3
        gbc.setState(0x4d17, 0xe21b, 0x7ca0, 0x4498, 0x3bc8, 0xaa9c, 0x0, 0x1);
        gbc.writeMem(0x4d17, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe21b);
        EXPECT(gbc.pc(), 0x4d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00A4
        gbc.setState(0x6d0a, 0xa989, 0x7fd0, 0xfb53, 0xd3c9, 0xffff, 0x0, 0x1);
        gbc.writeMem(0x6d0a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa989);
        EXPECT(gbc.pc(), 0x6d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00A5
        gbc.setState(0x85cb, 0x38d, 0x1140, 0x4d57, 0x7f59, 0xeb5e, 0x0, 0x1);
        gbc.writeMem(0x85cb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x38d);
        EXPECT(gbc.pc(), 0x85cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85cb), 0xcb);
        EXPECT(gbc.readMem(0x85cc), 0xdf);
        // CB DF 00A7
        gbc.setState(0xae95, 0xdec1, 0x5060, 0xb905, 0x6bc3, 0x1a23, 0x0, 0x0);
        gbc.writeMem(0xae95, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdec1);
        EXPECT(gbc.pc(), 0xae97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae95), 0xcb);
        EXPECT(gbc.readMem(0xae96), 0xdf);
        // CB DF 00A8
        gbc.setState(0x86bf, 0x17a7, 0xa810, 0x46ec, 0x2e69, 0xa314, 0x0, 0x1);
        gbc.writeMem(0x86bf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x17a7);
        EXPECT(gbc.pc(), 0x86c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86bf), 0xcb);
        EXPECT(gbc.readMem(0x86c0), 0xdf);
        // CB DF 00A9
        gbc.setState(0xed12, 0x3e2b, 0x3e40, 0x9d39, 0x58f4, 0xab53, 0x1, 0x1);
        gbc.writeMem(0xed12, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3e2b);
        EXPECT(gbc.pc(), 0xed14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed12), 0xcb);
        EXPECT(gbc.readMem(0xed13), 0xdf);
        // CB DF 00AA
        gbc.setState(0x9b32, 0xb6e3, 0xf50, 0x89c9, 0x3ef, 0x56f8, 0x0, 0x0);
        gbc.writeMem(0x9b32, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb6e3);
        EXPECT(gbc.pc(), 0x9b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b32), 0xcb);
        EXPECT(gbc.readMem(0x9b33), 0xdf);
        // CB DF 00AC
        gbc.setState(0x5c1d, 0xa5bb, 0xf970, 0xb352, 0xd1d2, 0x3d04, 0x1, 0x1);
        gbc.writeMem(0x5c1d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa5bb);
        EXPECT(gbc.pc(), 0x5c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00AD
        gbc.setState(0xe01b, 0xfc59, 0x2040, 0x5785, 0x62a9, 0x4d3c, 0x0, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfc59);
        EXPECT(gbc.pc(), 0xe01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01b), 0xcb);
        EXPECT(gbc.readMem(0xe01c), 0xdf);
        // CB DF 00AE
        gbc.setState(0xe2cc, 0x8d37, 0xa300, 0x8a6a, 0xa8b7, 0x2ea3, 0x1, 0x0);
        gbc.writeMem(0xe2cc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8d37);
        EXPECT(gbc.pc(), 0xe2ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2cc), 0xcb);
        EXPECT(gbc.readMem(0xe2cd), 0xdf);
        // CB DF 00AF
        gbc.setState(0xdcb3, 0x714c, 0x4100, 0x4ff3, 0xfd21, 0xc5ca, 0x1, 0x1);
        gbc.writeMem(0xdcb3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x714c);
        EXPECT(gbc.pc(), 0xdcb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb3), 0xcb);
        EXPECT(gbc.readMem(0xdcb4), 0xdf);
        // CB DF 00B0
        gbc.setState(0x76ee, 0x4b53, 0x4490, 0x5d4a, 0x40f2, 0xf46, 0x0, 0x1);
        gbc.writeMem(0x76ee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4b53);
        EXPECT(gbc.pc(), 0x76f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00B1
        gbc.setState(0x552a, 0x6bc, 0x2b90, 0x4bc0, 0xdc48, 0x4f55, 0x0, 0x1);
        gbc.writeMem(0x552a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6bc);
        EXPECT(gbc.pc(), 0x552c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00B2
        gbc.setState(0x5519, 0x195f, 0xfbb0, 0x8c49, 0xce15, 0x5f4b, 0x0, 0x0);
        gbc.writeMem(0x5519, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x195f);
        EXPECT(gbc.pc(), 0x551b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00B3
        gbc.setState(0x3808, 0xe9b0, 0x1370, 0xfaff, 0xebbb, 0xee14, 0x1, 0x0);
        gbc.writeMem(0x3808, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe9b0);
        EXPECT(gbc.pc(), 0x380a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00B4
        gbc.setState(0x9b49, 0x54e0, 0xaf0, 0xb742, 0xfbf9, 0x2ab4, 0x0, 0x1);
        gbc.writeMem(0x9b49, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x54e0);
        EXPECT(gbc.pc(), 0x9b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b49), 0xcb);
        EXPECT(gbc.readMem(0x9b4a), 0xdf);
        // CB DF 00B6
        gbc.setState(0x5db1, 0xbd4, 0xa4a0, 0x8419, 0x4305, 0x8aab, 0x0, 0x0);
        gbc.writeMem(0x5db1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbd4);
        EXPECT(gbc.pc(), 0x5db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00B7
        gbc.setState(0x3f2d, 0x7306, 0x230, 0x931a, 0xf1b8, 0x47e5, 0x0, 0x0);
        gbc.writeMem(0x3f2d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7306);
        EXPECT(gbc.pc(), 0x3f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00B8
        gbc.setState(0x8e72, 0xfd3e, 0xae70, 0xaf18, 0xea0d, 0x5a38, 0x0, 0x1);
        gbc.writeMem(0x8e72, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfd3e);
        EXPECT(gbc.pc(), 0x8e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e72), 0xcb);
        EXPECT(gbc.readMem(0x8e73), 0xdf);
        // CB DF 00B9
        gbc.setState(0x529a, 0x661d, 0xbe30, 0x6192, 0x4d49, 0x5ce6, 0x1, 0x1);
        gbc.writeMem(0x529a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x661d);
        EXPECT(gbc.pc(), 0x529c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00BA
        gbc.setState(0x489d, 0xeb34, 0x2af0, 0xda5e, 0x72dc, 0xb2f8, 0x1, 0x0);
        gbc.writeMem(0x489d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xeb34);
        EXPECT(gbc.pc(), 0x489f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00BB
        gbc.setState(0x4258, 0x1663, 0x93f0, 0xf93d, 0xa71c, 0x2108, 0x0, 0x0);
        gbc.writeMem(0x4258, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1663);
        EXPECT(gbc.pc(), 0x425a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00BC
        gbc.setState(0x2dcb, 0x695a, 0x8a0, 0x4827, 0x4dd1, 0xe517, 0x1, 0x0);
        gbc.writeMem(0x2dcb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x695a);
        EXPECT(gbc.pc(), 0x2dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00BD
        gbc.setState(0xd9e9, 0x18d6, 0x4300, 0x7333, 0x21a7, 0x91ce, 0x1, 0x1);
        gbc.writeMem(0xd9e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x18d6);
        EXPECT(gbc.pc(), 0xd9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e9), 0xcb);
        EXPECT(gbc.readMem(0xd9ea), 0xdf);
        // CB DF 00BE
        gbc.setState(0x6ba7, 0xee82, 0x8960, 0xb2dd, 0x32b2, 0xb234, 0x1, 0x0);
        gbc.writeMem(0x6ba7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xee82);
        EXPECT(gbc.pc(), 0x6ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00C0
        gbc.setState(0x7b05, 0x706b, 0xba0, 0x4f00, 0x9c9b, 0x8fd2, 0x0, 0x1);
        gbc.writeMem(0x7b05, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x706b);
        EXPECT(gbc.pc(), 0x7b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00C1
        gbc.setState(0x2077, 0xf, 0x49c0, 0x94f8, 0x7446, 0xa516, 0x1, 0x0);
        gbc.writeMem(0x2077, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf);
        EXPECT(gbc.pc(), 0x2079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00C2
        gbc.setState(0x1eca, 0x7112, 0x3d0, 0x66a5, 0x23c1, 0x8ab, 0x1, 0x0);
        gbc.writeMem(0x1eca, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7112);
        EXPECT(gbc.pc(), 0x1ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00C3
        gbc.setState(0x8c76, 0x172a, 0x8bf0, 0x3aa5, 0x798d, 0x4512, 0x0, 0x1);
        gbc.writeMem(0x8c76, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x172a);
        EXPECT(gbc.pc(), 0x8c78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c76), 0xcb);
        EXPECT(gbc.readMem(0x8c77), 0xdf);
        // CB DF 00C4
        gbc.setState(0xd77d, 0xf453, 0xb260, 0x351e, 0x51bf, 0x3306, 0x0, 0x0);
        gbc.writeMem(0xd77d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf453);
        EXPECT(gbc.pc(), 0xd77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77d), 0xcb);
        EXPECT(gbc.readMem(0xd77e), 0xdf);
        // CB DF 00C5
        gbc.setState(0x5695, 0xaea7, 0x6f30, 0xbb3a, 0xc3b0, 0x8dde, 0x1, 0x0);
        gbc.writeMem(0x5695, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xaea7);
        EXPECT(gbc.pc(), 0x5697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00C6
        gbc.setState(0xeeac, 0xcdb3, 0x6e40, 0xddb9, 0x9f60, 0x57, 0x0, 0x0);
        gbc.writeMem(0xeeac, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcdb3);
        EXPECT(gbc.pc(), 0xeeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeac), 0xcb);
        EXPECT(gbc.readMem(0xeead), 0xdf);
        // CB DF 00C7
        gbc.setState(0x2052, 0x72e9, 0x8650, 0x8678, 0x7133, 0x3300, 0x0, 0x1);
        gbc.writeMem(0x2052, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x72e9);
        EXPECT(gbc.pc(), 0x2054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00C8
        gbc.setState(0x3669, 0x1909, 0x53c0, 0xd530, 0xd875, 0xb2d6, 0x0, 0x0);
        gbc.writeMem(0x3669, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1909);
        EXPECT(gbc.pc(), 0x366b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00C9
        gbc.setState(0xb18a, 0x465a, 0xc810, 0x6f5c, 0x8d45, 0x4887, 0x0, 0x1);
        gbc.writeMem(0xb18a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x465a);
        EXPECT(gbc.pc(), 0xb18c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18a), 0xcb);
        EXPECT(gbc.readMem(0xb18b), 0xdf);
        // CB DF 00CA
        gbc.setState(0x122f, 0x977b, 0x42c0, 0xe02e, 0x9783, 0x68ad, 0x0, 0x0);
        gbc.writeMem(0x122f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x977b);
        EXPECT(gbc.pc(), 0x1231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00CC
        gbc.setState(0x3ad8, 0xc0b9, 0x7b30, 0xf97f, 0xca18, 0x31d, 0x1, 0x1);
        gbc.writeMem(0x3ad8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc0b9);
        EXPECT(gbc.pc(), 0x3ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00CD
        gbc.setState(0x19ab, 0x3695, 0x36c0, 0x8281, 0xa1b8, 0x84ed, 0x1, 0x0);
        gbc.writeMem(0x19ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3695);
        EXPECT(gbc.pc(), 0x19ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00CE
        gbc.setState(0x36f6, 0x61bf, 0x8630, 0xe5e8, 0xf076, 0x873f, 0x0, 0x1);
        gbc.writeMem(0x36f6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x61bf);
        EXPECT(gbc.pc(), 0x36f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00CF
        gbc.setState(0xce87, 0x8da5, 0x4c00, 0x87ee, 0xbcc0, 0x4b88, 0x1, 0x1);
        gbc.writeMem(0xce87, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8da5);
        EXPECT(gbc.pc(), 0xce89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce87), 0xcb);
        EXPECT(gbc.readMem(0xce88), 0xdf);
        // CB DF 00D0
        gbc.setState(0x26c0, 0x717e, 0x68a0, 0xef22, 0x82f3, 0xe2d4, 0x0, 0x1);
        gbc.writeMem(0x26c0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x717e);
        EXPECT(gbc.pc(), 0x26c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00D1
        gbc.setState(0x82f4, 0x279b, 0x40f0, 0xa15, 0x6f08, 0x6dc, 0x1, 0x0);
        gbc.writeMem(0x82f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x279b);
        EXPECT(gbc.pc(), 0x82f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f4), 0xcb);
        EXPECT(gbc.readMem(0x82f5), 0xdf);
        // CB DF 00D2
        gbc.setState(0xacb8, 0x6f0d, 0x1190, 0x1164, 0x7912, 0x3b21, 0x0, 0x0);
        gbc.writeMem(0xacb8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6f0d);
        EXPECT(gbc.pc(), 0xacba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb8), 0xcb);
        EXPECT(gbc.readMem(0xacb9), 0xdf);
        // CB DF 00D3
        gbc.setState(0xb259, 0x9d73, 0x6db0, 0x913b, 0xb79d, 0xc728, 0x0, 0x0);
        gbc.writeMem(0xb259, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9d73);
        EXPECT(gbc.pc(), 0xb25b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb259), 0xcb);
        EXPECT(gbc.readMem(0xb25a), 0xdf);
        // CB DF 00D4
        gbc.setState(0x5a07, 0xeadb, 0xf040, 0x813e, 0x175c, 0x8bc1, 0x1, 0x1);
        gbc.writeMem(0x5a07, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xeadb);
        EXPECT(gbc.pc(), 0x5a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00D5
        gbc.setState(0x90d7, 0x1bbd, 0x5290, 0x44a, 0xa06e, 0x3389, 0x0, 0x0);
        gbc.writeMem(0x90d7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1bbd);
        EXPECT(gbc.pc(), 0x90d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d7), 0xcb);
        EXPECT(gbc.readMem(0x90d8), 0xdf);
        // CB DF 00D6
        gbc.setState(0xab04, 0x6fc6, 0xc650, 0xcb81, 0x3fa5, 0x4c4a, 0x0, 0x1);
        gbc.writeMem(0xab04, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6fc6);
        EXPECT(gbc.pc(), 0xab06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab04), 0xcb);
        EXPECT(gbc.readMem(0xab05), 0xdf);
        // CB DF 00D7
        gbc.setState(0x5221, 0xa907, 0x3950, 0x6c72, 0x898, 0x6b6e, 0x0, 0x0);
        gbc.writeMem(0x5221, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa907);
        EXPECT(gbc.pc(), 0x5223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00D8
        gbc.setState(0x6b79, 0x9afb, 0xe150, 0xc44a, 0x314f, 0x4960, 0x0, 0x0);
        gbc.writeMem(0x6b79, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9afb);
        EXPECT(gbc.pc(), 0x6b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00D9
        gbc.setState(0x664b, 0xabda, 0x9b60, 0xb558, 0x4116, 0xebbd, 0x0, 0x0);
        gbc.writeMem(0x664b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xabda);
        EXPECT(gbc.pc(), 0x664d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00DA
        gbc.setState(0x829e, 0xa4c5, 0x4070, 0xcfb7, 0x4dd9, 0xf88d, 0x1, 0x0);
        gbc.writeMem(0x829e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa4c5);
        EXPECT(gbc.pc(), 0x82a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829e), 0xcb);
        EXPECT(gbc.readMem(0x829f), 0xdf);
        // CB DF 00DB
        gbc.setState(0xe29f, 0x59f3, 0x6b60, 0xb7f1, 0x78d, 0xec53, 0x1, 0x0);
        gbc.writeMem(0xe29f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x59f3);
        EXPECT(gbc.pc(), 0xe2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe29f), 0xcb);
        EXPECT(gbc.readMem(0xe2a0), 0xdf);
        // CB DF 00DC
        gbc.setState(0x902, 0xdb0a, 0x9410, 0x25db, 0xeab5, 0x6096, 0x0, 0x0);
        gbc.writeMem(0x902, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdb0a);
        EXPECT(gbc.pc(), 0x904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00DD
        gbc.setState(0x9bc7, 0x6174, 0xbd30, 0xb45c, 0x1b99, 0x99c, 0x1, 0x1);
        gbc.writeMem(0x9bc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6174);
        EXPECT(gbc.pc(), 0x9bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc7), 0xcb);
        EXPECT(gbc.readMem(0x9bc8), 0xdf);
        // CB DF 00DE
        gbc.setState(0x1bda, 0xfdd7, 0x25e0, 0x8153, 0xbb54, 0x89a6, 0x1, 0x1);
        gbc.writeMem(0x1bda, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfdd7);
        EXPECT(gbc.pc(), 0x1bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00E0
        gbc.setState(0xe98f, 0xc6d6, 0x9570, 0x599e, 0x7f35, 0xb898, 0x1, 0x0);
        gbc.writeMem(0xe98f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc6d6);
        EXPECT(gbc.pc(), 0xe991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe98f), 0xcb);
        EXPECT(gbc.readMem(0xe990), 0xdf);
        // CB DF 00E1
        gbc.setState(0x74ef, 0x53a6, 0xf9f0, 0x869f, 0x50ba, 0x45e3, 0x1, 0x0);
        gbc.writeMem(0x74ef, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x53a6);
        EXPECT(gbc.pc(), 0x74f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00E2
        gbc.setState(0x95b, 0x637e, 0x3e0, 0xdeed, 0x2b90, 0xbac8, 0x1, 0x1);
        gbc.writeMem(0x95b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x637e);
        EXPECT(gbc.pc(), 0x95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00E3
        gbc.setState(0x2ac3, 0x30b5, 0x4810, 0xa302, 0x4579, 0xefa7, 0x0, 0x1);
        gbc.writeMem(0x2ac3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x30b5);
        EXPECT(gbc.pc(), 0x2ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00E5
        gbc.setState(0x33b4, 0x7259, 0xabc0, 0x2627, 0xbc94, 0x80dc, 0x0, 0x0);
        gbc.writeMem(0x33b4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7259);
        EXPECT(gbc.pc(), 0x33b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00E6
        gbc.setState(0x6ac8, 0xb46f, 0x6bb0, 0x1b06, 0x7719, 0xf035, 0x0, 0x0);
        gbc.writeMem(0x6ac8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb46f);
        EXPECT(gbc.pc(), 0x6aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00E7
        gbc.setState(0x3853, 0x6289, 0x33c0, 0xdd46, 0xfc5e, 0x7153, 0x0, 0x1);
        gbc.writeMem(0x3853, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6289);
        EXPECT(gbc.pc(), 0x3855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00E8
        gbc.setState(0x79d9, 0x70d, 0xc030, 0x37a5, 0x2a26, 0x9378, 0x0, 0x0);
        gbc.writeMem(0x79d9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x70d);
        EXPECT(gbc.pc(), 0x79db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00E9
        gbc.setState(0x3a04, 0xd148, 0xa600, 0x1cdc, 0xe0dd, 0x16e2, 0x1, 0x1);
        gbc.writeMem(0x3a04, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd148);
        EXPECT(gbc.pc(), 0x3a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00EA
        gbc.setState(0x7933, 0xb84d, 0x9020, 0xe6ce, 0xf3bd, 0x52ed, 0x1, 0x1);
        gbc.writeMem(0x7933, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb84d);
        EXPECT(gbc.pc(), 0x7935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00EB
        gbc.setState(0xca52, 0xf000, 0xcc0, 0x7583, 0x5ea, 0xa004, 0x0, 0x1);
        gbc.writeMem(0xca52, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf000);
        EXPECT(gbc.pc(), 0xca54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca52), 0xcb);
        EXPECT(gbc.readMem(0xca53), 0xdf);
        // CB DF 00EC
        gbc.setState(0x9938, 0x8e07, 0x73b0, 0x2be5, 0xd4dd, 0x4573, 0x1, 0x1);
        gbc.writeMem(0x9938, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8e07);
        EXPECT(gbc.pc(), 0x993a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9938), 0xcb);
        EXPECT(gbc.readMem(0x9939), 0xdf);
        // CB DF 00ED
        gbc.setState(0x10f4, 0x38fb, 0xf3e0, 0xa6a3, 0xe98e, 0xd8e9, 0x1, 0x0);
        gbc.writeMem(0x10f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x38fb);
        EXPECT(gbc.pc(), 0x10f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00EE
        gbc.setState(0xea62, 0x8e47, 0xad80, 0x442, 0x7440, 0xf795, 0x1, 0x1);
        gbc.writeMem(0xea62, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8e47);
        EXPECT(gbc.pc(), 0xea64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea62), 0xcb);
        EXPECT(gbc.readMem(0xea63), 0xdf);
        // CB DF 00EF
        gbc.setState(0x35ba, 0x3b51, 0x7170, 0xe822, 0x22f3, 0x681c, 0x1, 0x0);
        gbc.writeMem(0x35ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3b51);
        EXPECT(gbc.pc(), 0x35bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00F0
        gbc.setState(0x9294, 0xfbe8, 0x4180, 0xfb49, 0xed9c, 0x4bd3, 0x0, 0x1);
        gbc.writeMem(0x9294, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfbe8);
        EXPECT(gbc.pc(), 0x9296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9294), 0xcb);
        EXPECT(gbc.readMem(0x9295), 0xdf);
        // CB DF 00F1
        gbc.setState(0xc056, 0xdd89, 0x5cc0, 0xad1, 0x831b, 0x4242, 0x1, 0x1);
        gbc.writeMem(0xc056, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdd89);
        EXPECT(gbc.pc(), 0xc058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc056), 0xcb);
        EXPECT(gbc.readMem(0xc057), 0xdf);
        // CB DF 00F2
        gbc.setState(0x4c8f, 0x44fd, 0x3f50, 0xbf32, 0x565f, 0x2468, 0x0, 0x1);
        gbc.writeMem(0x4c8f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x44fd);
        EXPECT(gbc.pc(), 0x4c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00F3
        gbc.setState(0x407f, 0x2847, 0x3370, 0xa1aa, 0xbd77, 0xdd6d, 0x0, 0x1);
        gbc.writeMem(0x407f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2847);
        EXPECT(gbc.pc(), 0x4081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00F4
        gbc.setState(0x77d1, 0x4968, 0xbed0, 0x7ea3, 0xb6af, 0xf7af, 0x1, 0x1);
        gbc.writeMem(0x77d1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4968);
        EXPECT(gbc.pc(), 0x77d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00F5
        gbc.setState(0x6d73, 0x8468, 0x7570, 0xb2c8, 0xfc7b, 0xef43, 0x1, 0x0);
        gbc.writeMem(0x6d73, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8468);
        EXPECT(gbc.pc(), 0x6d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00F7
        gbc.setState(0x202d, 0xf55f, 0x7060, 0xe30c, 0x4ddd, 0x68fc, 0x1, 0x0);
        gbc.writeMem(0x202d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf55f);
        EXPECT(gbc.pc(), 0x202f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00F8
        gbc.setState(0xc71e, 0x55d2, 0x1b40, 0x5bde, 0x3458, 0xd2c1, 0x0, 0x1);
        gbc.writeMem(0xc71e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x55d2);
        EXPECT(gbc.pc(), 0xc720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc71e), 0xcb);
        EXPECT(gbc.readMem(0xc71f), 0xdf);
        // CB DF 00F9
        gbc.setState(0x8dd8, 0xa7c6, 0x1880, 0x3932, 0x55e6, 0xd394, 0x0, 0x1);
        gbc.writeMem(0x8dd8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa7c6);
        EXPECT(gbc.pc(), 0x8dda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd8), 0xcb);
        EXPECT(gbc.readMem(0x8dd9), 0xdf);
        // CB DF 00FA
        gbc.setState(0xcd29, 0x217f, 0x7c90, 0xf683, 0x2370, 0x3da9, 0x1, 0x1);
        gbc.writeMem(0xcd29, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x217f);
        EXPECT(gbc.pc(), 0xcd2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd29), 0xcb);
        EXPECT(gbc.readMem(0xcd2a), 0xdf);
        // CB DF 00FB
        gbc.setState(0x3b3e, 0xb460, 0x76d0, 0xb7bd, 0x2843, 0xe153, 0x1, 0x0);
        gbc.writeMem(0x3b3e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb460);
        EXPECT(gbc.pc(), 0x3b40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00FD
        gbc.setState(0x527, 0xc4b2, 0xc3f0, 0xbf57, 0xd187, 0x91ef, 0x1, 0x0);
        gbc.writeMem(0x527, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc4b2);
        EXPECT(gbc.pc(), 0x529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 00FE
        gbc.setState(0x6e77, 0xd9af, 0x9ea0, 0x3090, 0xbed9, 0xd1ac, 0x1, 0x1);
        gbc.writeMem(0x6e77, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd9af);
        EXPECT(gbc.pc(), 0x6e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 00FF
        gbc.setState(0x1f67, 0x3740, 0xd290, 0xdc6b, 0x20a3, 0x4fee, 0x0, 0x0);
        gbc.writeMem(0x1f67, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3740);
        EXPECT(gbc.pc(), 0x1f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0100
        gbc.setState(0x376c, 0x579a, 0xa790, 0xe600, 0xdbf5, 0x35bd, 0x1, 0x0);
        gbc.writeMem(0x376c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x579a);
        EXPECT(gbc.pc(), 0x376e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0101
        gbc.setState(0x74df, 0x587e, 0xcfd0, 0x8d43, 0x9b58, 0x1ca7, 0x1, 0x1);
        gbc.writeMem(0x74df, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x587e);
        EXPECT(gbc.pc(), 0x74e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0102
        gbc.setState(0xe2ff, 0x9913, 0xd8c0, 0xa612, 0x7241, 0x2a32, 0x1, 0x0);
        gbc.writeMem(0xe2ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9913);
        EXPECT(gbc.pc(), 0xe301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ff), 0xcb);
        EXPECT(gbc.readMem(0xe300), 0xdf);
        // CB DF 0103
        gbc.setState(0xc85b, 0x69fa, 0x6040, 0xc4d2, 0xdeaf, 0xd18e, 0x1, 0x0);
        gbc.writeMem(0xc85b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x69fa);
        EXPECT(gbc.pc(), 0xc85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85b), 0xcb);
        EXPECT(gbc.readMem(0xc85c), 0xdf);
        // CB DF 0104
        gbc.setState(0x3f2b, 0x1991, 0x4590, 0x2151, 0x92f4, 0xe103, 0x1, 0x1);
        gbc.writeMem(0x3f2b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1991);
        EXPECT(gbc.pc(), 0x3f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0105
        gbc.setState(0x3afb, 0xc1bc, 0x4730, 0x84e1, 0x2308, 0xcec5, 0x0, 0x0);
        gbc.writeMem(0x3afb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc1bc);
        EXPECT(gbc.pc(), 0x3afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0106
        gbc.setState(0x68d7, 0x7a0b, 0x33f0, 0x6e43, 0xc768, 0x10aa, 0x0, 0x0);
        gbc.writeMem(0x68d7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7a0b);
        EXPECT(gbc.pc(), 0x68d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0107
        gbc.setState(0x6f5c, 0xee46, 0x1f10, 0x484a, 0x2f6a, 0x8708, 0x0, 0x0);
        gbc.writeMem(0x6f5c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xee46);
        EXPECT(gbc.pc(), 0x6f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0108
        gbc.setState(0x7ad6, 0xb138, 0xf490, 0xcd5f, 0x6e28, 0xac2b, 0x0, 0x1);
        gbc.writeMem(0x7ad6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb138);
        EXPECT(gbc.pc(), 0x7ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0109
        gbc.setState(0x1475, 0xf6a9, 0xddf0, 0x91e8, 0xe745, 0xb186, 0x0, 0x1);
        gbc.writeMem(0x1475, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf6a9);
        EXPECT(gbc.pc(), 0x1477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 010A
        gbc.setState(0x633d, 0xfe06, 0xcb20, 0x2c9a, 0xea71, 0x7bf0, 0x1, 0x0);
        gbc.writeMem(0x633d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfe06);
        EXPECT(gbc.pc(), 0x633f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 010B
        gbc.setState(0xebfa, 0x6477, 0xf200, 0x4edc, 0xf41e, 0xe2b5, 0x1, 0x1);
        gbc.writeMem(0xebfa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6477);
        EXPECT(gbc.pc(), 0xebfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebfa), 0xcb);
        EXPECT(gbc.readMem(0xebfb), 0xdf);
        // CB DF 010C
        gbc.setState(0x627, 0xf45b, 0xc8e0, 0xe54c, 0x6eac, 0x206e, 0x1, 0x1);
        gbc.writeMem(0x627, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf45b);
        EXPECT(gbc.pc(), 0x629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 010D
        gbc.setState(0xe407, 0x644f, 0x42c0, 0x3180, 0xa862, 0xde39, 0x0, 0x0);
        gbc.writeMem(0xe407, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x644f);
        EXPECT(gbc.pc(), 0xe409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe407), 0xcb);
        EXPECT(gbc.readMem(0xe408), 0xdf);
        // CB DF 010E
        gbc.setState(0x2776, 0x7f96, 0xfd80, 0xe5d4, 0x9f58, 0x3717, 0x0, 0x1);
        gbc.writeMem(0x2776, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7f96);
        EXPECT(gbc.pc(), 0x2778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 010F
        gbc.setState(0xe32a, 0xb774, 0x1c50, 0xb585, 0xfb8e, 0x6184, 0x0, 0x1);
        gbc.writeMem(0xe32a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb774);
        EXPECT(gbc.pc(), 0xe32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32a), 0xcb);
        EXPECT(gbc.readMem(0xe32b), 0xdf);
        // CB DF 0110
        gbc.setState(0xe4f1, 0xaf87, 0x78d0, 0xb08a, 0x558b, 0x7003, 0x0, 0x0);
        gbc.writeMem(0xe4f1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaf87);
        EXPECT(gbc.pc(), 0xe4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f1), 0xcb);
        EXPECT(gbc.readMem(0xe4f2), 0xdf);
        // CB DF 0111
        gbc.setState(0xdfc1, 0x9781, 0x9b10, 0x888, 0xedce, 0x9a4c, 0x0, 0x1);
        gbc.writeMem(0xdfc1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9781);
        EXPECT(gbc.pc(), 0xdfc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc1), 0xcb);
        EXPECT(gbc.readMem(0xdfc2), 0xdf);
        // CB DF 0112
        gbc.setState(0xd8e3, 0xe7fa, 0xabb0, 0x6de2, 0x6049, 0x1143, 0x0, 0x0);
        gbc.writeMem(0xd8e3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe7fa);
        EXPECT(gbc.pc(), 0xd8e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e3), 0xcb);
        EXPECT(gbc.readMem(0xd8e4), 0xdf);
        // CB DF 0113
        gbc.setState(0x5b50, 0x78c4, 0x9360, 0xf9dd, 0xfb01, 0x1571, 0x0, 0x1);
        gbc.writeMem(0x5b50, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x78c4);
        EXPECT(gbc.pc(), 0x5b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0114
        gbc.setState(0xd81f, 0xbf13, 0xb020, 0x3116, 0x6e66, 0x3c14, 0x1, 0x0);
        gbc.writeMem(0xd81f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbf13);
        EXPECT(gbc.pc(), 0xd821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd81f), 0xcb);
        EXPECT(gbc.readMem(0xd820), 0xdf);
        // CB DF 0115
        gbc.setState(0xdc19, 0x5b2a, 0xc9d0, 0xb855, 0x96af, 0x1d8b, 0x1, 0x1);
        gbc.writeMem(0xdc19, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5b2a);
        EXPECT(gbc.pc(), 0xdc1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc19), 0xcb);
        EXPECT(gbc.readMem(0xdc1a), 0xdf);
        // CB DF 0116
        gbc.setState(0xa886, 0x3cbc, 0x6000, 0x6719, 0xf78c, 0x2bf4, 0x1, 0x1);
        gbc.writeMem(0xa886, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3cbc);
        EXPECT(gbc.pc(), 0xa888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa886), 0xcb);
        EXPECT(gbc.readMem(0xa887), 0xdf);
        // CB DF 0117
        gbc.setState(0x6e2f, 0xe6a8, 0x3a30, 0xe1df, 0x763b, 0x6dd5, 0x1, 0x0);
        gbc.writeMem(0x6e2f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe6a8);
        EXPECT(gbc.pc(), 0x6e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0118
        gbc.setState(0xb3fd, 0x39b, 0x7b60, 0x4b6b, 0x4421, 0x580b, 0x0, 0x0);
        gbc.writeMem(0xb3fd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x39b);
        EXPECT(gbc.pc(), 0xb3ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fd), 0xcb);
        EXPECT(gbc.readMem(0xb3fe), 0xdf);
        // CB DF 0119
        gbc.setState(0xb073, 0x12f4, 0xd9a0, 0x37e5, 0x8e7c, 0x56b4, 0x0, 0x1);
        gbc.writeMem(0xb073, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x12f4);
        EXPECT(gbc.pc(), 0xb075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb073), 0xcb);
        EXPECT(gbc.readMem(0xb074), 0xdf);
        // CB DF 011A
        gbc.setState(0xc009, 0x2431, 0xa7d0, 0xde57, 0x9cda, 0x659e, 0x0, 0x1);
        gbc.writeMem(0xc009, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2431);
        EXPECT(gbc.pc(), 0xc00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc009), 0xcb);
        EXPECT(gbc.readMem(0xc00a), 0xdf);
        // CB DF 011B
        gbc.setState(0x3688, 0xe8df, 0x3480, 0x9b48, 0x1aa9, 0xbdb8, 0x1, 0x1);
        gbc.writeMem(0x3688, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe8df);
        EXPECT(gbc.pc(), 0x368a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 011C
        gbc.setState(0x20be, 0x2326, 0xd5f0, 0xc527, 0xd367, 0x75b8, 0x0, 0x1);
        gbc.writeMem(0x20be, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2326);
        EXPECT(gbc.pc(), 0x20c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 011D
        gbc.setState(0x7fd2, 0xb06d, 0x6d60, 0x1424, 0xccf9, 0x98c4, 0x0, 0x1);
        gbc.writeMem(0x7fd2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb06d);
        EXPECT(gbc.pc(), 0x7fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 011E
        gbc.setState(0xada1, 0xba27, 0x56e0, 0x6c7c, 0x5a46, 0xa149, 0x0, 0x1);
        gbc.writeMem(0xada1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xba27);
        EXPECT(gbc.pc(), 0xada3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada1), 0xcb);
        EXPECT(gbc.readMem(0xada2), 0xdf);
        // CB DF 011F
        gbc.setState(0x884c, 0x73b5, 0x2a30, 0x16da, 0x2831, 0xbe50, 0x1, 0x1);
        gbc.writeMem(0x884c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x73b5);
        EXPECT(gbc.pc(), 0x884e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884c), 0xcb);
        EXPECT(gbc.readMem(0x884d), 0xdf);
        // CB DF 0120
        gbc.setState(0x31d7, 0xe4c3, 0x1ee0, 0x23a, 0x2a61, 0x35d2, 0x0, 0x0);
        gbc.writeMem(0x31d7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe4c3);
        EXPECT(gbc.pc(), 0x31d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0121
        gbc.setState(0x3203, 0xca98, 0x1c20, 0xc4a4, 0xad25, 0xfee2, 0x0, 0x1);
        gbc.writeMem(0x3203, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xca98);
        EXPECT(gbc.pc(), 0x3205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0122
        gbc.setState(0x6893, 0x3d0c, 0xe110, 0x3d12, 0x9b1e, 0x7376, 0x0, 0x1);
        gbc.writeMem(0x6893, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3d0c);
        EXPECT(gbc.pc(), 0x6895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0123
        gbc.setState(0x4e62, 0x3260, 0xad20, 0xaeb6, 0x4ab2, 0x38f2, 0x0, 0x0);
        gbc.writeMem(0x4e62, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3260);
        EXPECT(gbc.pc(), 0x4e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0124
        gbc.setState(0x70c6, 0xbcb0, 0xb5f0, 0xf987, 0x6a1b, 0x52ab, 0x1, 0x0);
        gbc.writeMem(0x70c6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbcb0);
        EXPECT(gbc.pc(), 0x70c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0126
        gbc.setState(0x9368, 0x5a40, 0x5c50, 0x8bfe, 0xef4b, 0x95dc, 0x1, 0x1);
        gbc.writeMem(0x9368, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5a40);
        EXPECT(gbc.pc(), 0x936a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9368), 0xcb);
        EXPECT(gbc.readMem(0x9369), 0xdf);
        // CB DF 0127
        gbc.setState(0x2eee, 0xf5e6, 0x2a90, 0x6198, 0x3878, 0x8381, 0x0, 0x0);
        gbc.writeMem(0x2eee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf5e6);
        EXPECT(gbc.pc(), 0x2ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0128
        gbc.setState(0x2b6d, 0xe95e, 0x14c0, 0x1784, 0xd936, 0xf7f4, 0x0, 0x0);
        gbc.writeMem(0x2b6d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe95e);
        EXPECT(gbc.pc(), 0x2b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0129
        gbc.setState(0xa61a, 0x292, 0x8a60, 0xce3d, 0xedd, 0x984d, 0x1, 0x1);
        gbc.writeMem(0xa61a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x292);
        EXPECT(gbc.pc(), 0xa61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61a), 0xcb);
        EXPECT(gbc.readMem(0xa61b), 0xdf);
        // CB DF 012A
        gbc.setState(0x6d1f, 0x5cca, 0xb080, 0x9ac3, 0xad19, 0xa78d, 0x1, 0x1);
        gbc.writeMem(0x6d1f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5cca);
        EXPECT(gbc.pc(), 0x6d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 012B
        gbc.setState(0x36da, 0x7d3, 0x3a50, 0xaf2c, 0x1230, 0xd12e, 0x0, 0x0);
        gbc.writeMem(0x36da, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7d3);
        EXPECT(gbc.pc(), 0x36dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 012C
        gbc.setState(0xf7c, 0xd1cd, 0xf1f0, 0x9303, 0xf0cd, 0xe143, 0x1, 0x0);
        gbc.writeMem(0xf7c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd1cd);
        EXPECT(gbc.pc(), 0xf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 012D
        gbc.setState(0xa9ab, 0x6fd0, 0x7cd0, 0xe599, 0x6cc6, 0x9054, 0x0, 0x0);
        gbc.writeMem(0xa9ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6fd0);
        EXPECT(gbc.pc(), 0xa9ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ab), 0xcb);
        EXPECT(gbc.readMem(0xa9ac), 0xdf);
        // CB DF 012E
        gbc.setState(0x1096, 0xf8f2, 0xdc30, 0x164a, 0xb95c, 0xac6d, 0x1, 0x1);
        gbc.writeMem(0x1096, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf8f2);
        EXPECT(gbc.pc(), 0x1098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 012F
        gbc.setState(0xa867, 0xbdf6, 0xfff0, 0x477b, 0x4bbc, 0x2339, 0x0, 0x0);
        gbc.writeMem(0xa867, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbdf6);
        EXPECT(gbc.pc(), 0xa869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa867), 0xcb);
        EXPECT(gbc.readMem(0xa868), 0xdf);
        // CB DF 0130
        gbc.setState(0x9270, 0x6eb4, 0xcb50, 0xfc73, 0x42d2, 0x64a0, 0x1, 0x1);
        gbc.writeMem(0x9270, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6eb4);
        EXPECT(gbc.pc(), 0x9272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9270), 0xcb);
        EXPECT(gbc.readMem(0x9271), 0xdf);
        // CB DF 0131
        gbc.setState(0x54bd, 0x30b7, 0xac60, 0x7f3e, 0xef93, 0xbdf, 0x1, 0x1);
        gbc.writeMem(0x54bd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x30b7);
        EXPECT(gbc.pc(), 0x54bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0132
        gbc.setState(0x7afd, 0x4375, 0xe70, 0xa017, 0x9aaa, 0xf313, 0x0, 0x1);
        gbc.writeMem(0x7afd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4375);
        EXPECT(gbc.pc(), 0x7aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0133
        gbc.setState(0x1a82, 0xee7, 0x33e0, 0x9e53, 0x5e92, 0xef65, 0x0, 0x0);
        gbc.writeMem(0x1a82, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xee7);
        EXPECT(gbc.pc(), 0x1a84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0134
        gbc.setState(0xe1de, 0xeaa, 0xf250, 0xc654, 0xb911, 0x95b3, 0x1, 0x0);
        gbc.writeMem(0xe1de, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xeaa);
        EXPECT(gbc.pc(), 0xe1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1de), 0xcb);
        EXPECT(gbc.readMem(0xe1df), 0xdf);
        // CB DF 0135
        gbc.setState(0x1591, 0xecf9, 0xb9f0, 0x70d0, 0x64aa, 0x7a0d, 0x0, 0x0);
        gbc.writeMem(0x1591, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xecf9);
        EXPECT(gbc.pc(), 0x1593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0136
        gbc.setState(0x6f94, 0xcb57, 0x1840, 0x42a0, 0xb228, 0x1fa8, 0x0, 0x0);
        gbc.writeMem(0x6f94, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xcb57);
        EXPECT(gbc.pc(), 0x6f96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0137
        gbc.setState(0xc0d, 0x903e, 0x7cb0, 0x1bac, 0xd0b9, 0xc28b, 0x1, 0x0);
        gbc.writeMem(0xc0d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x903e);
        EXPECT(gbc.pc(), 0xc0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0138
        gbc.setState(0x23fa, 0x640c, 0x5f60, 0x99f0, 0x46f, 0x5ace, 0x1, 0x0);
        gbc.writeMem(0x23fa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x640c);
        EXPECT(gbc.pc(), 0x23fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0139
        gbc.setState(0xa0f3, 0x5526, 0x1120, 0xd60e, 0xe862, 0xa36e, 0x0, 0x0);
        gbc.writeMem(0xa0f3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5526);
        EXPECT(gbc.pc(), 0xa0f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f3), 0xcb);
        EXPECT(gbc.readMem(0xa0f4), 0xdf);
        // CB DF 013A
        gbc.setState(0xaa1c, 0x26ab, 0xe3e0, 0x2ba, 0xba74, 0xc203, 0x0, 0x1);
        gbc.writeMem(0xaa1c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x26ab);
        EXPECT(gbc.pc(), 0xaa1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa1c), 0xcb);
        EXPECT(gbc.readMem(0xaa1d), 0xdf);
        // CB DF 013B
        gbc.setState(0xc4bc, 0x728f, 0x5520, 0x4698, 0x6ad5, 0x8454, 0x1, 0x1);
        gbc.writeMem(0xc4bc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x728f);
        EXPECT(gbc.pc(), 0xc4be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4bc), 0xcb);
        EXPECT(gbc.readMem(0xc4bd), 0xdf);
        // CB DF 013D
        gbc.setState(0xd4e4, 0xb6bd, 0xcfe0, 0x4c64, 0x1031, 0x919d, 0x1, 0x0);
        gbc.writeMem(0xd4e4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb6bd);
        EXPECT(gbc.pc(), 0xd4e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e4), 0xcb);
        EXPECT(gbc.readMem(0xd4e5), 0xdf);
        // CB DF 013E
        gbc.setState(0x34a6, 0xe748, 0xfd40, 0xd61e, 0x334d, 0x2bb0, 0x1, 0x0);
        gbc.writeMem(0x34a6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe748);
        EXPECT(gbc.pc(), 0x34a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0140
        gbc.setState(0x460b, 0x2a1a, 0xf430, 0x9d39, 0xbefc, 0x73cb, 0x1, 0x1);
        gbc.writeMem(0x460b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2a1a);
        EXPECT(gbc.pc(), 0x460d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0141
        gbc.setState(0xc9b9, 0xe51e, 0x8aa0, 0xfbe4, 0xa48d, 0xacd9, 0x0, 0x0);
        gbc.writeMem(0xc9b9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe51e);
        EXPECT(gbc.pc(), 0xc9bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b9), 0xcb);
        EXPECT(gbc.readMem(0xc9ba), 0xdf);
        // CB DF 0142
        gbc.setState(0xc642, 0xefa, 0x7490, 0xe294, 0x9374, 0x105d, 0x0, 0x1);
        gbc.writeMem(0xc642, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xefa);
        EXPECT(gbc.pc(), 0xc644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc642), 0xcb);
        EXPECT(gbc.readMem(0xc643), 0xdf);
        // CB DF 0143
        gbc.setState(0x11d5, 0x1936, 0xd9d0, 0xe1c5, 0x2a51, 0x2f2, 0x1, 0x1);
        gbc.writeMem(0x11d5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1936);
        EXPECT(gbc.pc(), 0x11d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0144
        gbc.setState(0x1a6b, 0xe16a, 0x28f0, 0xafe1, 0xec6a, 0xc8cb, 0x0, 0x1);
        gbc.writeMem(0x1a6b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe16a);
        EXPECT(gbc.pc(), 0x1a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0145
        gbc.setState(0xd6f9, 0xc20, 0x3610, 0x4067, 0xed28, 0x2282, 0x1, 0x0);
        gbc.writeMem(0xd6f9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc20);
        EXPECT(gbc.pc(), 0xd6fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f9), 0xcb);
        EXPECT(gbc.readMem(0xd6fa), 0xdf);
        // CB DF 0146
        gbc.setState(0x7fde, 0x5f43, 0x17f0, 0xf1d1, 0x2041, 0x5bc5, 0x0, 0x0);
        gbc.writeMem(0x7fde, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5f43);
        EXPECT(gbc.pc(), 0x7fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0147
        gbc.setState(0x52e5, 0x81a, 0xa730, 0xbcaa, 0x822d, 0xdd0a, 0x0, 0x0);
        gbc.writeMem(0x52e5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x81a);
        EXPECT(gbc.pc(), 0x52e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0148
        gbc.setState(0x5a5b, 0xc315, 0x2330, 0xc401, 0xc339, 0x78aa, 0x0, 0x0);
        gbc.writeMem(0x5a5b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc315);
        EXPECT(gbc.pc(), 0x5a5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0149
        gbc.setState(0xccf6, 0xbc1f, 0x4550, 0x6cab, 0xed14, 0x7c1d, 0x0, 0x0);
        gbc.writeMem(0xccf6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbc1f);
        EXPECT(gbc.pc(), 0xccf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf6), 0xcb);
        EXPECT(gbc.readMem(0xccf7), 0xdf);
        // CB DF 014A
        gbc.setState(0x7d6c, 0x2cf4, 0xe700, 0x834d, 0x48f3, 0xe17f, 0x0, 0x0);
        gbc.writeMem(0x7d6c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2cf4);
        EXPECT(gbc.pc(), 0x7d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 014B
        gbc.setState(0xa74c, 0xaa88, 0x37d0, 0x1ba3, 0x95b6, 0xe659, 0x1, 0x1);
        gbc.writeMem(0xa74c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xaa88);
        EXPECT(gbc.pc(), 0xa74e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74c), 0xcb);
        EXPECT(gbc.readMem(0xa74d), 0xdf);
        // CB DF 014C
        gbc.setState(0x6258, 0x6bd7, 0xce0, 0xacca, 0xf393, 0x8b90, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6bd7);
        EXPECT(gbc.pc(), 0x625a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 014D
        gbc.setState(0x110f, 0x2b8b, 0x9a90, 0x936f, 0x217c, 0x5b24, 0x0, 0x0);
        gbc.writeMem(0x110f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2b8b);
        EXPECT(gbc.pc(), 0x1111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 014E
        gbc.setState(0x636e, 0xb013, 0x4a40, 0x4683, 0x6aab, 0x5456, 0x0, 0x0);
        gbc.writeMem(0x636e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb013);
        EXPECT(gbc.pc(), 0x6370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 014F
        gbc.setState(0xea5, 0x63c9, 0x57e0, 0xc6ea, 0x964d, 0xc1ff, 0x1, 0x0);
        gbc.writeMem(0xea5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x63c9);
        EXPECT(gbc.pc(), 0xea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0150
        gbc.setState(0x5337, 0x6e13, 0x7fb0, 0x1854, 0x706c, 0x5ad7, 0x1, 0x1);
        gbc.writeMem(0x5337, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6e13);
        EXPECT(gbc.pc(), 0x5339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0151
        gbc.setState(0xc543, 0xb4c3, 0xd470, 0x71d1, 0xf7bc, 0xc045, 0x0, 0x0);
        gbc.writeMem(0xc543, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb4c3);
        EXPECT(gbc.pc(), 0xc545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc543), 0xcb);
        EXPECT(gbc.readMem(0xc544), 0xdf);
        // CB DF 0152
        gbc.setState(0xb947, 0x6d12, 0x7fd0, 0x3964, 0x46b3, 0x7b4a, 0x1, 0x0);
        gbc.writeMem(0xb947, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6d12);
        EXPECT(gbc.pc(), 0xb949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb947), 0xcb);
        EXPECT(gbc.readMem(0xb948), 0xdf);
        // CB DF 0153
        gbc.setState(0x1f22, 0xee11, 0xa190, 0x895d, 0xdb7f, 0x46a7, 0x0, 0x0);
        gbc.writeMem(0x1f22, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xee11);
        EXPECT(gbc.pc(), 0x1f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0154
        gbc.setState(0x31a7, 0x1e9d, 0x3e40, 0x35d8, 0xf192, 0x9683, 0x0, 0x0);
        gbc.writeMem(0x31a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1e9d);
        EXPECT(gbc.pc(), 0x31a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0155
        gbc.setState(0xaae3, 0x6c76, 0xd440, 0x6d6e, 0xc11, 0x653b, 0x1, 0x1);
        gbc.writeMem(0xaae3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6c76);
        EXPECT(gbc.pc(), 0xaae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae3), 0xcb);
        EXPECT(gbc.readMem(0xaae4), 0xdf);
        // CB DF 0156
        gbc.setState(0xeb44, 0x7bd0, 0x6a50, 0x9e37, 0x963c, 0x6619, 0x1, 0x0);
        gbc.writeMem(0xeb44, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7bd0);
        EXPECT(gbc.pc(), 0xeb46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb44), 0xcb);
        EXPECT(gbc.readMem(0xeb45), 0xdf);
        // CB DF 0157
        gbc.setState(0x401, 0xb7b5, 0xab60, 0x9cb1, 0x8e17, 0xed8a, 0x0, 0x0);
        gbc.writeMem(0x401, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb7b5);
        EXPECT(gbc.pc(), 0x403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0158
        gbc.setState(0x90e3, 0xc809, 0x5040, 0x7b2f, 0xa875, 0xbdd8, 0x1, 0x0);
        gbc.writeMem(0x90e3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc809);
        EXPECT(gbc.pc(), 0x90e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e3), 0xcb);
        EXPECT(gbc.readMem(0x90e4), 0xdf);
        // CB DF 0159
        gbc.setState(0xb8a3, 0xa2a8, 0x8fd0, 0x7dc0, 0x5984, 0xf9b8, 0x0, 0x1);
        gbc.writeMem(0xb8a3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa2a8);
        EXPECT(gbc.pc(), 0xb8a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a3), 0xcb);
        EXPECT(gbc.readMem(0xb8a4), 0xdf);
        // CB DF 015A
        gbc.setState(0x2abf, 0x848a, 0xc950, 0x2767, 0xd79f, 0xf8e5, 0x0, 0x0);
        gbc.writeMem(0x2abf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x848a);
        EXPECT(gbc.pc(), 0x2ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 015B
        gbc.setState(0x7960, 0x1c7a, 0x9ca0, 0xd243, 0x2ab1, 0x7061, 0x0, 0x0);
        gbc.writeMem(0x7960, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1c7a);
        EXPECT(gbc.pc(), 0x7962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 015C
        gbc.setState(0x9232, 0x869c, 0xc750, 0x974d, 0x16e3, 0xddc3, 0x0, 0x0);
        gbc.writeMem(0x9232, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x869c);
        EXPECT(gbc.pc(), 0x9234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9232), 0xcb);
        EXPECT(gbc.readMem(0x9233), 0xdf);
        // CB DF 015D
        gbc.setState(0x4e31, 0x7e1, 0xef80, 0xc7dd, 0x6ae1, 0x611c, 0x0, 0x1);
        gbc.writeMem(0x4e31, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7e1);
        EXPECT(gbc.pc(), 0x4e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 015E
        gbc.setState(0x6b05, 0xdd67, 0x9300, 0x539a, 0xa92c, 0x1954, 0x0, 0x0);
        gbc.writeMem(0x6b05, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xdd67);
        EXPECT(gbc.pc(), 0x6b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 015F
        gbc.setState(0xa01f, 0xa243, 0x3780, 0x6da8, 0x9559, 0xc31f, 0x0, 0x1);
        gbc.writeMem(0xa01f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa243);
        EXPECT(gbc.pc(), 0xa021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa01f), 0xcb);
        EXPECT(gbc.readMem(0xa020), 0xdf);
        // CB DF 0160
        gbc.setState(0xc0b0, 0x9965, 0x9230, 0xf5bf, 0xa52c, 0xf995, 0x1, 0x1);
        gbc.writeMem(0xc0b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9965);
        EXPECT(gbc.pc(), 0xc0b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b0), 0xcb);
        EXPECT(gbc.readMem(0xc0b1), 0xdf);
        // CB DF 0161
        gbc.setState(0x461f, 0xc280, 0x6c0, 0x21d, 0xcb04, 0x91ae, 0x1, 0x0);
        gbc.writeMem(0x461f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc280);
        EXPECT(gbc.pc(), 0x4621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0162
        gbc.setState(0x50ea, 0x4517, 0xee30, 0xa798, 0x4e83, 0xe1b4, 0x0, 0x1);
        gbc.writeMem(0x50ea, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4517);
        EXPECT(gbc.pc(), 0x50ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0163
        gbc.setState(0x8f18, 0xbe9f, 0x6720, 0x973, 0x674f, 0x30e0, 0x1, 0x0);
        gbc.writeMem(0x8f18, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbe9f);
        EXPECT(gbc.pc(), 0x8f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f18), 0xcb);
        EXPECT(gbc.readMem(0x8f19), 0xdf);
        // CB DF 0164
        gbc.setState(0x180f, 0xa6b6, 0xe6b0, 0xa745, 0x4703, 0x4a43, 0x0, 0x0);
        gbc.writeMem(0x180f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa6b6);
        EXPECT(gbc.pc(), 0x1811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0165
        gbc.setState(0x18ec, 0x8d18, 0x3e10, 0x71d0, 0x37, 0xe631, 0x0, 0x0);
        gbc.writeMem(0x18ec, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8d18);
        EXPECT(gbc.pc(), 0x18ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0166
        gbc.setState(0x1ac, 0x281c, 0x8a30, 0x7075, 0xe381, 0x4a0a, 0x1, 0x0);
        gbc.writeMem(0x1ac, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x281c);
        EXPECT(gbc.pc(), 0x1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0167
        gbc.setState(0x56dc, 0xde0b, 0x6b60, 0x961e, 0xf3a4, 0x284f, 0x0, 0x1);
        gbc.writeMem(0x56dc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xde0b);
        EXPECT(gbc.pc(), 0x56de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0168
        gbc.setState(0xe56b, 0x6b71, 0x86f0, 0xd06f, 0x8816, 0x309c, 0x1, 0x0);
        gbc.writeMem(0xe56b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6b71);
        EXPECT(gbc.pc(), 0xe56d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe56b), 0xcb);
        EXPECT(gbc.readMem(0xe56c), 0xdf);
        // CB DF 0169
        gbc.setState(0x3ad7, 0x73b8, 0x2c60, 0x86c4, 0x3ddb, 0x23b9, 0x0, 0x0);
        gbc.writeMem(0x3ad7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x73b8);
        EXPECT(gbc.pc(), 0x3ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 016C
        gbc.setState(0x4d7d, 0x423, 0x14a0, 0xfbdb, 0xf14a, 0xceed, 0x1, 0x0);
        gbc.writeMem(0x4d7d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x423);
        EXPECT(gbc.pc(), 0x4d7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 016D
        gbc.setState(0x849a, 0x511a, 0x5180, 0x799e, 0x1a1f, 0xcf05, 0x0, 0x0);
        gbc.writeMem(0x849a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x511a);
        EXPECT(gbc.pc(), 0x849c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849a), 0xcb);
        EXPECT(gbc.readMem(0x849b), 0xdf);
        // CB DF 016E
        gbc.setState(0xbebe, 0x678e, 0x3050, 0xf831, 0xf79c, 0x83eb, 0x1, 0x0);
        gbc.writeMem(0xbebe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x678e);
        EXPECT(gbc.pc(), 0xbec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbebe), 0xcb);
        EXPECT(gbc.readMem(0xbebf), 0xdf);
        // CB DF 0170
        gbc.setState(0x8bd5, 0xd087, 0xbdb0, 0x12fa, 0xd705, 0xe757, 0x1, 0x0);
        gbc.writeMem(0x8bd5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd087);
        EXPECT(gbc.pc(), 0x8bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd5), 0xcb);
        EXPECT(gbc.readMem(0x8bd6), 0xdf);
        // CB DF 0171
        gbc.setState(0x5492, 0x7413, 0xf620, 0x648a, 0xed5b, 0xcccb, 0x1, 0x1);
        gbc.writeMem(0x5492, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7413);
        EXPECT(gbc.pc(), 0x5494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0172
        gbc.setState(0xadba, 0x85f5, 0x3c70, 0x5645, 0xadf6, 0xb074, 0x1, 0x0);
        gbc.writeMem(0xadba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x85f5);
        EXPECT(gbc.pc(), 0xadbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadba), 0xcb);
        EXPECT(gbc.readMem(0xadbb), 0xdf);
        // CB DF 0173
        gbc.setState(0xe8a9, 0x9278, 0x9cc0, 0x9882, 0x224b, 0x5a96, 0x1, 0x1);
        gbc.writeMem(0xe8a9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9278);
        EXPECT(gbc.pc(), 0xe8ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a9), 0xcb);
        EXPECT(gbc.readMem(0xe8aa), 0xdf);
        // CB DF 0174
        gbc.setState(0xd9c2, 0x9ba8, 0x950, 0x92fa, 0xe338, 0xdd14, 0x0, 0x1);
        gbc.writeMem(0xd9c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9ba8);
        EXPECT(gbc.pc(), 0xd9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c2), 0xcb);
        EXPECT(gbc.readMem(0xd9c3), 0xdf);
        // CB DF 0175
        gbc.setState(0x903c, 0x30be, 0xc160, 0xb45c, 0xed31, 0xab61, 0x0, 0x0);
        gbc.writeMem(0x903c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x30be);
        EXPECT(gbc.pc(), 0x903e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903c), 0xcb);
        EXPECT(gbc.readMem(0x903d), 0xdf);
        // CB DF 0176
        gbc.setState(0x324e, 0x64f3, 0x4ea0, 0xb349, 0xdda0, 0x311f, 0x1, 0x0);
        gbc.writeMem(0x324e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x64f3);
        EXPECT(gbc.pc(), 0x3250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0177
        gbc.setState(0x6747, 0x9002, 0xaac0, 0xfa78, 0x6806, 0x78a5, 0x1, 0x0);
        gbc.writeMem(0x6747, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9002);
        EXPECT(gbc.pc(), 0x6749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0178
        gbc.setState(0xafb6, 0xfe4c, 0x5fb0, 0x53b0, 0x4b2e, 0x2d81, 0x0, 0x1);
        gbc.writeMem(0xafb6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfe4c);
        EXPECT(gbc.pc(), 0xafb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb6), 0xcb);
        EXPECT(gbc.readMem(0xafb7), 0xdf);
        // CB DF 0179
        gbc.setState(0x1eec, 0xdcae, 0x79d0, 0x30d4, 0xfe73, 0x782a, 0x0, 0x1);
        gbc.writeMem(0x1eec, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdcae);
        EXPECT(gbc.pc(), 0x1eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 017A
        gbc.setState(0xbb90, 0x506c, 0xc510, 0x5a46, 0xad0e, 0xb2f1, 0x0, 0x0);
        gbc.writeMem(0xbb90, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x506c);
        EXPECT(gbc.pc(), 0xbb92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb90), 0xcb);
        EXPECT(gbc.readMem(0xbb91), 0xdf);
        // CB DF 017B
        gbc.setState(0x9139, 0x4170, 0xc910, 0x9729, 0x1185, 0x4dce, 0x0, 0x0);
        gbc.writeMem(0x9139, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4170);
        EXPECT(gbc.pc(), 0x913b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9139), 0xcb);
        EXPECT(gbc.readMem(0x913a), 0xdf);
        // CB DF 017C
        gbc.setState(0x58b9, 0x4e16, 0xe3c0, 0x9a41, 0xc98e, 0xd204, 0x1, 0x1);
        gbc.writeMem(0x58b9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4e16);
        EXPECT(gbc.pc(), 0x58bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 017D
        gbc.setState(0x8959, 0x2998, 0x9d00, 0x84c0, 0x2f3, 0x9287, 0x1, 0x1);
        gbc.writeMem(0x8959, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2998);
        EXPECT(gbc.pc(), 0x895b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8959), 0xcb);
        EXPECT(gbc.readMem(0x895a), 0xdf);
        // CB DF 017E
        gbc.setState(0x7ac8, 0x7c55, 0xeb0, 0x6a63, 0xc2e4, 0xe9d2, 0x1, 0x1);
        gbc.writeMem(0x7ac8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7c55);
        EXPECT(gbc.pc(), 0x7aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 017F
        gbc.setState(0xe0b7, 0xe651, 0x9230, 0x7794, 0xf579, 0x55f5, 0x1, 0x0);
        gbc.writeMem(0xe0b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe651);
        EXPECT(gbc.pc(), 0xe0b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b7), 0xcb);
        EXPECT(gbc.readMem(0xe0b8), 0xdf);
        // CB DF 0180
        gbc.setState(0x2139, 0xefd0, 0x4b60, 0x21a5, 0x10ec, 0x38f5, 0x0, 0x0);
        gbc.writeMem(0x2139, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xefd0);
        EXPECT(gbc.pc(), 0x213b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0182
        gbc.setState(0x4226, 0x9da9, 0xfe40, 0x69b3, 0xa645, 0x811a, 0x0, 0x1);
        gbc.writeMem(0x4226, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9da9);
        EXPECT(gbc.pc(), 0x4228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0183
        gbc.setState(0x8e2c, 0xc0c5, 0x3660, 0x9354, 0x594c, 0x2a1b, 0x1, 0x0);
        gbc.writeMem(0x8e2c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc0c5);
        EXPECT(gbc.pc(), 0x8e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e2c), 0xcb);
        EXPECT(gbc.readMem(0x8e2d), 0xdf);
        // CB DF 0184
        gbc.setState(0x537b, 0xdbe9, 0x4000, 0xf02b, 0x8186, 0x8a89, 0x1, 0x0);
        gbc.writeMem(0x537b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdbe9);
        EXPECT(gbc.pc(), 0x537d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0185
        gbc.setState(0x680, 0x14b5, 0x4c90, 0xe96c, 0x249b, 0x7b5c, 0x1, 0x1);
        gbc.writeMem(0x680, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x14b5);
        EXPECT(gbc.pc(), 0x682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0186
        gbc.setState(0x9b79, 0xb5d2, 0xfd60, 0x774d, 0x8dac, 0xd048, 0x0, 0x0);
        gbc.writeMem(0x9b79, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb5d2);
        EXPECT(gbc.pc(), 0x9b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b79), 0xcb);
        EXPECT(gbc.readMem(0x9b7a), 0xdf);
        // CB DF 0187
        gbc.setState(0x87, 0x1415, 0x720, 0x3138, 0xca04, 0x9740, 0x0, 0x1);
        gbc.writeMem(0x87, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1415);
        EXPECT(gbc.pc(), 0x89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0188
        gbc.setState(0x3b7, 0xc76e, 0xf2b0, 0x9ca5, 0x2bfd, 0x2ff3, 0x1, 0x0);
        gbc.writeMem(0x3b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc76e);
        EXPECT(gbc.pc(), 0x3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0189
        gbc.setState(0x4d15, 0xcbc1, 0x210, 0xcdc, 0xdcf6, 0xa5e0, 0x1, 0x0);
        gbc.writeMem(0x4d15, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcbc1);
        EXPECT(gbc.pc(), 0x4d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 018A
        gbc.setState(0x6e52, 0xe845, 0x95b0, 0x24b1, 0xdc93, 0x8c27, 0x1, 0x0);
        gbc.writeMem(0x6e52, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe845);
        EXPECT(gbc.pc(), 0x6e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 018B
        gbc.setState(0xecd6, 0x29b, 0x8270, 0x69db, 0xa0f4, 0xc066, 0x0, 0x0);
        gbc.writeMem(0xecd6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x29b);
        EXPECT(gbc.pc(), 0xecd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd6), 0xcb);
        EXPECT(gbc.readMem(0xecd7), 0xdf);
        // CB DF 018C
        gbc.setState(0x72c3, 0x8316, 0x32a0, 0xbe57, 0x47a5, 0xd878, 0x0, 0x0);
        gbc.writeMem(0x72c3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8316);
        EXPECT(gbc.pc(), 0x72c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 018D
        gbc.setState(0x66af, 0x64d9, 0x6200, 0x9185, 0xbe2b, 0x36d0, 0x1, 0x1);
        gbc.writeMem(0x66af, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x64d9);
        EXPECT(gbc.pc(), 0x66b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 018F
        gbc.setState(0xcd89, 0xfa86, 0xac60, 0x6ac3, 0x8919, 0xe41d, 0x0, 0x1);
        gbc.writeMem(0xcd89, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfa86);
        EXPECT(gbc.pc(), 0xcd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd89), 0xcb);
        EXPECT(gbc.readMem(0xcd8a), 0xdf);
        // CB DF 0190
        gbc.setState(0xc9ce, 0xcef0, 0x1c70, 0x372a, 0x3225, 0x9ab8, 0x1, 0x0);
        gbc.writeMem(0xc9ce, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xcef0);
        EXPECT(gbc.pc(), 0xc9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ce), 0xcb);
        EXPECT(gbc.readMem(0xc9cf), 0xdf);
        // CB DF 0192
        gbc.setState(0xba4a, 0xf43c, 0x75a0, 0xc775, 0x3c0b, 0xe208, 0x1, 0x0);
        gbc.writeMem(0xba4a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf43c);
        EXPECT(gbc.pc(), 0xba4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba4a), 0xcb);
        EXPECT(gbc.readMem(0xba4b), 0xdf);
        // CB DF 0193
        gbc.setState(0x7d14, 0x926c, 0x6c20, 0x8c21, 0x308f, 0x923a, 0x0, 0x1);
        gbc.writeMem(0x7d14, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x926c);
        EXPECT(gbc.pc(), 0x7d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0195
        gbc.setState(0x4a03, 0x3df3, 0xf5f0, 0x461c, 0x6a95, 0x5a83, 0x1, 0x0);
        gbc.writeMem(0x4a03, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3df3);
        EXPECT(gbc.pc(), 0x4a05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0196
        gbc.setState(0x1992, 0x262a, 0x2490, 0x91a9, 0x442f, 0x9304, 0x1, 0x0);
        gbc.writeMem(0x1992, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x262a);
        EXPECT(gbc.pc(), 0x1994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0197
        gbc.setState(0x1274, 0xb706, 0x5e10, 0xd9a6, 0xaf72, 0x8a67, 0x1, 0x1);
        gbc.writeMem(0x1274, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb706);
        EXPECT(gbc.pc(), 0x1276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0198
        gbc.setState(0x87b6, 0xd67c, 0x2970, 0x319c, 0xba01, 0xbce8, 0x1, 0x0);
        gbc.writeMem(0x87b6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd67c);
        EXPECT(gbc.pc(), 0x87b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87b6), 0xcb);
        EXPECT(gbc.readMem(0x87b7), 0xdf);
        // CB DF 0199
        gbc.setState(0xb693, 0x7eec, 0x4f70, 0x72ba, 0xc3f4, 0x5adf, 0x0, 0x0);
        gbc.writeMem(0xb693, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7eec);
        EXPECT(gbc.pc(), 0xb695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb693), 0xcb);
        EXPECT(gbc.readMem(0xb694), 0xdf);
        // CB DF 019A
        gbc.setState(0x956f, 0xca33, 0x6d90, 0x911d, 0x7b3b, 0xd61e, 0x1, 0x1);
        gbc.writeMem(0x956f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xca33);
        EXPECT(gbc.pc(), 0x9571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x956f), 0xcb);
        EXPECT(gbc.readMem(0x9570), 0xdf);
        // CB DF 019B
        gbc.setState(0xbc2e, 0x7ac0, 0x6ac0, 0xbe8, 0xc9a7, 0xb398, 0x1, 0x1);
        gbc.writeMem(0xbc2e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7ac0);
        EXPECT(gbc.pc(), 0xbc30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2e), 0xcb);
        EXPECT(gbc.readMem(0xbc2f), 0xdf);
        // CB DF 019C
        gbc.setState(0xafc7, 0xe895, 0xecb0, 0xa56a, 0xca34, 0x19f, 0x0, 0x0);
        gbc.writeMem(0xafc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe895);
        EXPECT(gbc.pc(), 0xafc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc7), 0xcb);
        EXPECT(gbc.readMem(0xafc8), 0xdf);
        // CB DF 019D
        gbc.setState(0x8dae, 0xd1bf, 0x35f0, 0xbf4b, 0x14f8, 0xaa72, 0x1, 0x0);
        gbc.writeMem(0x8dae, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd1bf);
        EXPECT(gbc.pc(), 0x8db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dae), 0xcb);
        EXPECT(gbc.readMem(0x8daf), 0xdf);
        // CB DF 019E
        gbc.setState(0x2630, 0xc169, 0x40, 0x8e2f, 0x66a2, 0x1388, 0x0, 0x1);
        gbc.writeMem(0x2630, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc169);
        EXPECT(gbc.pc(), 0x2632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 019F
        gbc.setState(0x9e48, 0x72ab, 0x8450, 0x81c5, 0x8d20, 0x9533, 0x0, 0x0);
        gbc.writeMem(0x9e48, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x72ab);
        EXPECT(gbc.pc(), 0x9e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e48), 0xcb);
        EXPECT(gbc.readMem(0x9e49), 0xdf);
        // CB DF 01A0
        gbc.setState(0xe64c, 0x4004, 0xa9f0, 0x1dda, 0x5d47, 0x1a2c, 0x1, 0x1);
        gbc.writeMem(0xe64c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4004);
        EXPECT(gbc.pc(), 0xe64e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64c), 0xcb);
        EXPECT(gbc.readMem(0xe64d), 0xdf);
        // CB DF 01A1
        gbc.setState(0x76c9, 0xa089, 0x7d70, 0xfbe, 0xa780, 0xf2a0, 0x0, 0x1);
        gbc.writeMem(0x76c9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa089);
        EXPECT(gbc.pc(), 0x76cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01A2
        gbc.setState(0x9663, 0xa0d0, 0xe3b0, 0x64c0, 0xfc50, 0xcd34, 0x0, 0x0);
        gbc.writeMem(0x9663, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa0d0);
        EXPECT(gbc.pc(), 0x9665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9663), 0xcb);
        EXPECT(gbc.readMem(0x9664), 0xdf);
        // CB DF 01A3
        gbc.setState(0xe217, 0xba4d, 0x8970, 0x4217, 0x78bd, 0xc8b6, 0x1, 0x1);
        gbc.writeMem(0xe217, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xba4d);
        EXPECT(gbc.pc(), 0xe219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe217), 0xcb);
        EXPECT(gbc.readMem(0xe218), 0xdf);
        // CB DF 01A4
        gbc.setState(0xd7bf, 0xb9ce, 0xda10, 0xfffe, 0x793c, 0xbf6, 0x1, 0x0);
        gbc.writeMem(0xd7bf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb9ce);
        EXPECT(gbc.pc(), 0xd7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bf), 0xcb);
        EXPECT(gbc.readMem(0xd7c0), 0xdf);
        // CB DF 01A5
        gbc.setState(0xcc73, 0xd080, 0xeb60, 0x84aa, 0x664d, 0xa0ba, 0x0, 0x1);
        gbc.writeMem(0xcc73, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd080);
        EXPECT(gbc.pc(), 0xcc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc73), 0xcb);
        EXPECT(gbc.readMem(0xcc74), 0xdf);
        // CB DF 01A8
        gbc.setState(0x4b54, 0xda9, 0x5a20, 0x2afe, 0x7140, 0x1ec6, 0x1, 0x1);
        gbc.writeMem(0x4b54, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xda9);
        EXPECT(gbc.pc(), 0x4b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01A9
        gbc.setState(0xbeea, 0xf03, 0xe600, 0x3d46, 0x6b25, 0xdbf9, 0x1, 0x0);
        gbc.writeMem(0xbeea, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf03);
        EXPECT(gbc.pc(), 0xbeec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeea), 0xcb);
        EXPECT(gbc.readMem(0xbeeb), 0xdf);
        // CB DF 01AA
        gbc.setState(0xe9af, 0x59a, 0x9190, 0xe0ce, 0xcf6, 0x9e23, 0x0, 0x1);
        gbc.writeMem(0xe9af, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x59a);
        EXPECT(gbc.pc(), 0xe9b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9af), 0xcb);
        EXPECT(gbc.readMem(0xe9b0), 0xdf);
        // CB DF 01AB
        gbc.setState(0x288b, 0xa0a5, 0x2f00, 0x1486, 0x302e, 0x7236, 0x0, 0x1);
        gbc.writeMem(0x288b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa0a5);
        EXPECT(gbc.pc(), 0x288d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01AC
        gbc.setState(0x773d, 0xaa9a, 0x9110, 0x2962, 0xd1fc, 0xb62e, 0x0, 0x0);
        gbc.writeMem(0x773d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xaa9a);
        EXPECT(gbc.pc(), 0x773f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01AD
        gbc.setState(0x14bc, 0x9cc2, 0xd980, 0x8dba, 0x7044, 0xa2db, 0x0, 0x0);
        gbc.writeMem(0x14bc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9cc2);
        EXPECT(gbc.pc(), 0x14be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01AE
        gbc.setState(0xbde, 0x599f, 0x4c10, 0x5b34, 0x738b, 0x2648, 0x0, 0x1);
        gbc.writeMem(0xbde, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x599f);
        EXPECT(gbc.pc(), 0xbe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01AF
        gbc.setState(0x5143, 0x3efa, 0xa1d0, 0xfe3a, 0xf104, 0xb1dc, 0x1, 0x0);
        gbc.writeMem(0x5143, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3efa);
        EXPECT(gbc.pc(), 0x5145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01B0
        gbc.setState(0x20b1, 0x4da1, 0x6230, 0x8418, 0xddf3, 0x76d, 0x0, 0x1);
        gbc.writeMem(0x20b1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4da1);
        EXPECT(gbc.pc(), 0x20b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01B1
        gbc.setState(0xc7be, 0x907b, 0xf400, 0xcdf6, 0xfe3, 0xf1c6, 0x0, 0x0);
        gbc.writeMem(0xc7be, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x907b);
        EXPECT(gbc.pc(), 0xc7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7be), 0xcb);
        EXPECT(gbc.readMem(0xc7bf), 0xdf);
        // CB DF 01B2
        gbc.setState(0x5987, 0xd4a4, 0xfc60, 0x18d, 0x8aa2, 0xb83b, 0x0, 0x0);
        gbc.writeMem(0x5987, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd4a4);
        EXPECT(gbc.pc(), 0x5989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01B3
        gbc.setState(0xb450, 0x23bc, 0xdc60, 0x661b, 0xa5f0, 0xa95a, 0x0, 0x1);
        gbc.writeMem(0xb450, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x23bc);
        EXPECT(gbc.pc(), 0xb452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb450), 0xcb);
        EXPECT(gbc.readMem(0xb451), 0xdf);
        // CB DF 01B4
        gbc.setState(0x205a, 0x4dea, 0x5700, 0xe57f, 0x1595, 0xe068, 0x0, 0x1);
        gbc.writeMem(0x205a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4dea);
        EXPECT(gbc.pc(), 0x205c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01B5
        gbc.setState(0x8f71, 0x31f, 0x9c10, 0xfac7, 0x82b4, 0xe9e0, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x31f);
        EXPECT(gbc.pc(), 0x8f73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f71), 0xcb);
        EXPECT(gbc.readMem(0x8f72), 0xdf);
        // CB DF 01B6
        gbc.setState(0xef0d, 0x83ef, 0x3c00, 0x7bfb, 0x4f02, 0x9460, 0x1, 0x1);
        gbc.writeMem(0xef0d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x83ef);
        EXPECT(gbc.pc(), 0xef0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0d), 0xcb);
        EXPECT(gbc.readMem(0xef0e), 0xdf);
        // CB DF 01B7
        gbc.setState(0x7d94, 0xd57d, 0x2970, 0xdea, 0xb92b, 0xb69a, 0x0, 0x1);
        gbc.writeMem(0x7d94, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd57d);
        EXPECT(gbc.pc(), 0x7d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01B8
        gbc.setState(0x3dd9, 0x7eda, 0x5bd0, 0xa56b, 0x36f9, 0xce65, 0x0, 0x1);
        gbc.writeMem(0x3dd9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7eda);
        EXPECT(gbc.pc(), 0x3ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01B9
        gbc.setState(0x7c89, 0x57e3, 0xfe30, 0x6b8b, 0x16d3, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0x7c89, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x57e3);
        EXPECT(gbc.pc(), 0x7c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01BA
        gbc.setState(0x6760, 0x5b75, 0x40d0, 0x8c68, 0xcf90, 0x1677, 0x1, 0x1);
        gbc.writeMem(0x6760, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5b75);
        EXPECT(gbc.pc(), 0x6762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01BB
        gbc.setState(0xc123, 0xdd37, 0x560, 0x5e9d, 0x2ca1, 0x1f3f, 0x1, 0x1);
        gbc.writeMem(0xc123, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdd37);
        EXPECT(gbc.pc(), 0xc125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc123), 0xcb);
        EXPECT(gbc.readMem(0xc124), 0xdf);
        // CB DF 01BC
        gbc.setState(0x5360, 0x2321, 0x4840, 0xa3c8, 0x6665, 0xb2cb, 0x0, 0x1);
        gbc.writeMem(0x5360, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2321);
        EXPECT(gbc.pc(), 0x5362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01BD
        gbc.setState(0xeef2, 0x2c46, 0x35b0, 0x912b, 0x2888, 0x4ccf, 0x0, 0x1);
        gbc.writeMem(0xeef2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2c46);
        EXPECT(gbc.pc(), 0xeef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef2), 0xcb);
        EXPECT(gbc.readMem(0xeef3), 0xdf);
        // CB DF 01BE
        gbc.setState(0xee60, 0x7a32, 0x9aa0, 0xeadf, 0x3c74, 0xf855, 0x1, 0x0);
        gbc.writeMem(0xee60, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7a32);
        EXPECT(gbc.pc(), 0xee62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee60), 0xcb);
        EXPECT(gbc.readMem(0xee61), 0xdf);
        // CB DF 01BF
        gbc.setState(0x5e1, 0x49a8, 0x8970, 0x4d99, 0x8fbb, 0x41f0, 0x0, 0x0);
        gbc.writeMem(0x5e1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x49a8);
        EXPECT(gbc.pc(), 0x5e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01C0
        gbc.setState(0x4d49, 0xf37c, 0x8cd0, 0x491b, 0x120a, 0xf23c, 0x1, 0x0);
        gbc.writeMem(0x4d49, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf37c);
        EXPECT(gbc.pc(), 0x4d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01C1
        gbc.setState(0x7216, 0x878c, 0x1010, 0x715, 0x23, 0x82c7, 0x1, 0x1);
        gbc.writeMem(0x7216, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x878c);
        EXPECT(gbc.pc(), 0x7218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01C2
        gbc.setState(0x309f, 0xf0c7, 0xe110, 0xba72, 0x7f89, 0xf1a2, 0x1, 0x1);
        gbc.writeMem(0x309f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf0c7);
        EXPECT(gbc.pc(), 0x30a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01C3
        gbc.setState(0x8826, 0x100c, 0xdd30, 0x123e, 0x78dd, 0x1da6, 0x1, 0x0);
        gbc.writeMem(0x8826, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x100c);
        EXPECT(gbc.pc(), 0x8828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8826), 0xcb);
        EXPECT(gbc.readMem(0x8827), 0xdf);
        // CB DF 01C4
        gbc.setState(0x2b04, 0x6d49, 0x2a40, 0xa580, 0x8b73, 0x18b3, 0x1, 0x0);
        gbc.writeMem(0x2b04, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6d49);
        EXPECT(gbc.pc(), 0x2b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01C5
        gbc.setState(0xd6f2, 0xc973, 0x6e40, 0xc365, 0xd80a, 0x279b, 0x1, 0x0);
        gbc.writeMem(0xd6f2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc973);
        EXPECT(gbc.pc(), 0xd6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f2), 0xcb);
        EXPECT(gbc.readMem(0xd6f3), 0xdf);
        // CB DF 01C6
        gbc.setState(0x1e71, 0x2a5d, 0xcd20, 0x8bcd, 0x251d, 0xc01f, 0x1, 0x1);
        gbc.writeMem(0x1e71, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2a5d);
        EXPECT(gbc.pc(), 0x1e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01C7
        gbc.setState(0x5510, 0xa892, 0xdb00, 0x5304, 0xb0ef, 0x4610, 0x0, 0x1);
        gbc.writeMem(0x5510, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa892);
        EXPECT(gbc.pc(), 0x5512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01C8
        gbc.setState(0x4b58, 0xf832, 0x4510, 0x6462, 0x8644, 0x16f8, 0x0, 0x1);
        gbc.writeMem(0x4b58, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf832);
        EXPECT(gbc.pc(), 0x4b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01C9
        gbc.setState(0x98ff, 0xd581, 0x6930, 0x6689, 0x9dff, 0x5293, 0x0, 0x0);
        gbc.writeMem(0x98ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd581);
        EXPECT(gbc.pc(), 0x9901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ff), 0xcb);
        EXPECT(gbc.readMem(0x9900), 0xdf);
        // CB DF 01CA
        gbc.setState(0xd8c, 0xd184, 0x10d0, 0xe18c, 0xa4b6, 0x557, 0x0, 0x0);
        gbc.writeMem(0xd8c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd184);
        EXPECT(gbc.pc(), 0xd8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01CB
        gbc.setState(0x9073, 0x7d81, 0xbe20, 0xecef, 0xb934, 0x23cb, 0x0, 0x1);
        gbc.writeMem(0x9073, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7d81);
        EXPECT(gbc.pc(), 0x9075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9073), 0xcb);
        EXPECT(gbc.readMem(0x9074), 0xdf);
        // CB DF 01CC
        gbc.setState(0xd9c4, 0x7465, 0xbdb0, 0x10c1, 0x4120, 0xd075, 0x1, 0x1);
        gbc.writeMem(0xd9c4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7465);
        EXPECT(gbc.pc(), 0xd9c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c4), 0xcb);
        EXPECT(gbc.readMem(0xd9c5), 0xdf);
        // CB DF 01CD
        gbc.setState(0x5715, 0xbeea, 0xbba0, 0x4b02, 0x1207, 0x8e89, 0x0, 0x1);
        gbc.writeMem(0x5715, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbeea);
        EXPECT(gbc.pc(), 0x5717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01CE
        gbc.setState(0xd781, 0xf3ab, 0xecd0, 0xf873, 0x86c6, 0xdeda, 0x0, 0x0);
        gbc.writeMem(0xd781, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf3ab);
        EXPECT(gbc.pc(), 0xd783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd781), 0xcb);
        EXPECT(gbc.readMem(0xd782), 0xdf);
        // CB DF 01CF
        gbc.setState(0xaeee, 0x68ed, 0xf900, 0xbbe1, 0x7442, 0x2b47, 0x1, 0x1);
        gbc.writeMem(0xaeee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x68ed);
        EXPECT(gbc.pc(), 0xaef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeee), 0xcb);
        EXPECT(gbc.readMem(0xaeef), 0xdf);
        // CB DF 01D0
        gbc.setState(0x46d2, 0xd3e6, 0xd0d0, 0x3734, 0x8b36, 0x6857, 0x1, 0x1);
        gbc.writeMem(0x46d2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd3e6);
        EXPECT(gbc.pc(), 0x46d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01D1
        gbc.setState(0x9020, 0x103e, 0xfdc0, 0x80fb, 0xa5ac, 0xdd1b, 0x1, 0x1);
        gbc.writeMem(0x9020, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x103e);
        EXPECT(gbc.pc(), 0x9022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9020), 0xcb);
        EXPECT(gbc.readMem(0x9021), 0xdf);
        // CB DF 01D2
        gbc.setState(0x3cb5, 0x278e, 0xec00, 0x191, 0x5a36, 0x2ad9, 0x1, 0x1);
        gbc.writeMem(0x3cb5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x278e);
        EXPECT(gbc.pc(), 0x3cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01D3
        gbc.setState(0xee2, 0xdd30, 0x3570, 0x7c84, 0xe252, 0xad6, 0x0, 0x1);
        gbc.writeMem(0xee2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdd30);
        EXPECT(gbc.pc(), 0xee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01D4
        gbc.setState(0x6e0f, 0xbda5, 0xe3e0, 0x4fbb, 0xdf87, 0x606e, 0x0, 0x1);
        gbc.writeMem(0x6e0f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbda5);
        EXPECT(gbc.pc(), 0x6e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01D5
        gbc.setState(0x9d56, 0x232, 0x1770, 0x8342, 0x765f, 0x3544, 0x0, 0x0);
        gbc.writeMem(0x9d56, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x232);
        EXPECT(gbc.pc(), 0x9d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d56), 0xcb);
        EXPECT(gbc.readMem(0x9d57), 0xdf);
        // CB DF 01D6
        gbc.setState(0x72ee, 0xdb7d, 0x73d0, 0x344b, 0x112d, 0x3474, 0x0, 0x0);
        gbc.writeMem(0x72ee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xdb7d);
        EXPECT(gbc.pc(), 0x72f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01D7
        gbc.setState(0x7099, 0x8e5f, 0xd5b0, 0xa80e, 0xd533, 0x52e7, 0x0, 0x1);
        gbc.writeMem(0x7099, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8e5f);
        EXPECT(gbc.pc(), 0x709b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01D8
        gbc.setState(0xe19d, 0x4c9c, 0x35d0, 0x37f6, 0xa968, 0xecad, 0x0, 0x0);
        gbc.writeMem(0xe19d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4c9c);
        EXPECT(gbc.pc(), 0xe19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19d), 0xcb);
        EXPECT(gbc.readMem(0xe19e), 0xdf);
        // CB DF 01D9
        gbc.setState(0x9bcd, 0x7371, 0x5580, 0xb65d, 0xebe3, 0xbcf9, 0x0, 0x1);
        gbc.writeMem(0x9bcd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7371);
        EXPECT(gbc.pc(), 0x9bcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bcd), 0xcb);
        EXPECT(gbc.readMem(0x9bce), 0xdf);
        // CB DF 01DA
        gbc.setState(0x457f, 0xf4ed, 0x2e20, 0x583d, 0xa265, 0x495e, 0x1, 0x1);
        gbc.writeMem(0x457f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf4ed);
        EXPECT(gbc.pc(), 0x4581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01DB
        gbc.setState(0x4f96, 0x218f, 0xa850, 0x6b23, 0x3a7b, 0xcec8, 0x0, 0x1);
        gbc.writeMem(0x4f96, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x218f);
        EXPECT(gbc.pc(), 0x4f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01DC
        gbc.setState(0xc8a6, 0x1e9e, 0xe3a0, 0x2be7, 0x8a8, 0xca4a, 0x1, 0x0);
        gbc.writeMem(0xc8a6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1e9e);
        EXPECT(gbc.pc(), 0xc8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a6), 0xcb);
        EXPECT(gbc.readMem(0xc8a7), 0xdf);
        // CB DF 01DD
        gbc.setState(0x5445, 0x2983, 0x1d80, 0x7566, 0x761d, 0xede8, 0x0, 0x0);
        gbc.writeMem(0x5445, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2983);
        EXPECT(gbc.pc(), 0x5447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01DE
        gbc.setState(0x501, 0x2a1b, 0xb030, 0x243f, 0x67a3, 0xf670, 0x1, 0x0);
        gbc.writeMem(0x501, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2a1b);
        EXPECT(gbc.pc(), 0x503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01E0
        gbc.setState(0xc72b, 0xab92, 0xe320, 0x1a4e, 0x3520, 0xdfe, 0x0, 0x0);
        gbc.writeMem(0xc72b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xab92);
        EXPECT(gbc.pc(), 0xc72d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc72b), 0xcb);
        EXPECT(gbc.readMem(0xc72c), 0xdf);
        // CB DF 01E1
        gbc.setState(0x473, 0x8b75, 0xf5f0, 0xe4ff, 0x4a59, 0x3e54, 0x1, 0x0);
        gbc.writeMem(0x473, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8b75);
        EXPECT(gbc.pc(), 0x475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01E2
        gbc.setState(0xa522, 0xbee0, 0x44b0, 0x2d55, 0x48aa, 0xfb99, 0x1, 0x0);
        gbc.writeMem(0xa522, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbee0);
        EXPECT(gbc.pc(), 0xa524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa522), 0xcb);
        EXPECT(gbc.readMem(0xa523), 0xdf);
        // CB DF 01E3
        gbc.setState(0x208b, 0x4dfa, 0x9b60, 0x2210, 0x95c8, 0xe7c8, 0x0, 0x1);
        gbc.writeMem(0x208b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4dfa);
        EXPECT(gbc.pc(), 0x208d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01E4
        gbc.setState(0xb86c, 0x94ea, 0x490, 0x5619, 0x704f, 0x920f, 0x1, 0x1);
        gbc.writeMem(0xb86c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x94ea);
        EXPECT(gbc.pc(), 0xb86e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86c), 0xcb);
        EXPECT(gbc.readMem(0xb86d), 0xdf);
        // CB DF 01E5
        gbc.setState(0x93a0, 0xae50, 0xb010, 0xc396, 0x1a3c, 0x721c, 0x1, 0x0);
        gbc.writeMem(0x93a0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xae50);
        EXPECT(gbc.pc(), 0x93a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a0), 0xcb);
        EXPECT(gbc.readMem(0x93a1), 0xdf);
        // CB DF 01E6
        gbc.setState(0xbccd, 0xc273, 0x11b0, 0xabc1, 0xae4a, 0x2910, 0x0, 0x1);
        gbc.writeMem(0xbccd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc273);
        EXPECT(gbc.pc(), 0xbccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbccd), 0xcb);
        EXPECT(gbc.readMem(0xbcce), 0xdf);
        // CB DF 01E7
        gbc.setState(0x2b2d, 0xe53a, 0xcc20, 0x71b7, 0xecd0, 0xccc3, 0x0, 0x0);
        gbc.writeMem(0x2b2d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe53a);
        EXPECT(gbc.pc(), 0x2b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01E8
        gbc.setState(0x27b3, 0xf4c1, 0xa430, 0xc0d2, 0x2ce0, 0x7251, 0x0, 0x0);
        gbc.writeMem(0x27b3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf4c1);
        EXPECT(gbc.pc(), 0x27b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01E9
        gbc.setState(0x894a, 0x27bf, 0xc590, 0x1e45, 0xa7cf, 0x1646, 0x1, 0x1);
        gbc.writeMem(0x894a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x27bf);
        EXPECT(gbc.pc(), 0x894c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894a), 0xcb);
        EXPECT(gbc.readMem(0x894b), 0xdf);
        // CB DF 01EA
        gbc.setState(0x412, 0x3403, 0xc510, 0x5896, 0xfa14, 0xebdf, 0x0, 0x0);
        gbc.writeMem(0x412, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3403);
        EXPECT(gbc.pc(), 0x414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01EB
        gbc.setState(0xd08c, 0x3944, 0xe5a0, 0x4719, 0xf070, 0xcb65, 0x0, 0x0);
        gbc.writeMem(0xd08c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3944);
        EXPECT(gbc.pc(), 0xd08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd08c), 0xcb);
        EXPECT(gbc.readMem(0xd08d), 0xdf);
        // CB DF 01EC
        gbc.setState(0x256f, 0xa10c, 0xe3e0, 0x6775, 0x470c, 0x4440, 0x1, 0x1);
        gbc.writeMem(0x256f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa10c);
        EXPECT(gbc.pc(), 0x2571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01ED
        gbc.setState(0x1340, 0xcac5, 0xba10, 0x95c3, 0xe611, 0xc47, 0x0, 0x0);
        gbc.writeMem(0x1340, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcac5);
        EXPECT(gbc.pc(), 0x1342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01EE
        gbc.setState(0xca83, 0xfed5, 0x930, 0x71db, 0x2048, 0xdbbe, 0x0, 0x1);
        gbc.writeMem(0xca83, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfed5);
        EXPECT(gbc.pc(), 0xca85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca83), 0xcb);
        EXPECT(gbc.readMem(0xca84), 0xdf);
        // CB DF 01EF
        gbc.setState(0xa1e6, 0xd0c, 0xabe0, 0x54e0, 0x1c6e, 0xf673, 0x0, 0x0);
        gbc.writeMem(0xa1e6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd0c);
        EXPECT(gbc.pc(), 0xa1e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e6), 0xcb);
        EXPECT(gbc.readMem(0xa1e7), 0xdf);
        // CB DF 01F1
        gbc.setState(0x351, 0xa637, 0xe010, 0x5d71, 0x36f8, 0xe725, 0x1, 0x1);
        gbc.writeMem(0x351, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa637);
        EXPECT(gbc.pc(), 0x353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01F2
        gbc.setState(0x8acd, 0xe015, 0x6f40, 0xbd77, 0xce27, 0xa6b0, 0x0, 0x0);
        gbc.writeMem(0x8acd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe015);
        EXPECT(gbc.pc(), 0x8acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8acd), 0xcb);
        EXPECT(gbc.readMem(0x8ace), 0xdf);
        // CB DF 01F3
        gbc.setState(0x93c4, 0x6fdb, 0xa870, 0x8e11, 0x59fa, 0x61bf, 0x1, 0x0);
        gbc.writeMem(0x93c4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6fdb);
        EXPECT(gbc.pc(), 0x93c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c4), 0xcb);
        EXPECT(gbc.readMem(0x93c5), 0xdf);
        // CB DF 01F4
        gbc.setState(0xc958, 0xa6f3, 0xc840, 0xecd8, 0x5b24, 0x3c8a, 0x1, 0x0);
        gbc.writeMem(0xc958, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa6f3);
        EXPECT(gbc.pc(), 0xc95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc958), 0xcb);
        EXPECT(gbc.readMem(0xc959), 0xdf);
        // CB DF 01F5
        gbc.setState(0xe14c, 0xb4e3, 0x14a0, 0x8d89, 0x840f, 0x7705, 0x1, 0x0);
        gbc.writeMem(0xe14c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb4e3);
        EXPECT(gbc.pc(), 0xe14e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe14c), 0xcb);
        EXPECT(gbc.readMem(0xe14d), 0xdf);
        // CB DF 01F6
        gbc.setState(0x4480, 0x8279, 0xa310, 0xa208, 0x2393, 0x2bb, 0x0, 0x1);
        gbc.writeMem(0x4480, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8279);
        EXPECT(gbc.pc(), 0x4482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01F7
        gbc.setState(0xc1a8, 0x6009, 0xce70, 0xc7ce, 0xb658, 0x63c2, 0x1, 0x0);
        gbc.writeMem(0xc1a8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6009);
        EXPECT(gbc.pc(), 0xc1aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a8), 0xcb);
        EXPECT(gbc.readMem(0xc1a9), 0xdf);
        // CB DF 01F8
        gbc.setState(0x6297, 0x9444, 0x870, 0xdf77, 0x52cd, 0xc261, 0x0, 0x1);
        gbc.writeMem(0x6297, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9444);
        EXPECT(gbc.pc(), 0x6299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 01FA
        gbc.setState(0xa58e, 0xae14, 0x8c40, 0x48df, 0x9817, 0x4745, 0x1, 0x1);
        gbc.writeMem(0xa58e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xae14);
        EXPECT(gbc.pc(), 0xa590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa58e), 0xcb);
        EXPECT(gbc.readMem(0xa58f), 0xdf);
        // CB DF 01FB
        gbc.setState(0x9b9, 0x6124, 0xcf20, 0xa67d, 0xa5e1, 0xe290, 0x0, 0x1);
        gbc.writeMem(0x9b9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6124);
        EXPECT(gbc.pc(), 0x9bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01FC
        gbc.setState(0xe3ab, 0xb7ce, 0xd0f0, 0x7707, 0xcd66, 0xf00, 0x1, 0x1);
        gbc.writeMem(0xe3ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb7ce);
        EXPECT(gbc.pc(), 0xe3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ab), 0xcb);
        EXPECT(gbc.readMem(0xe3ac), 0xdf);
        // CB DF 01FD
        gbc.setState(0xb2a0, 0x4906, 0xa1c0, 0xeb1e, 0x7b15, 0x94df, 0x0, 0x0);
        gbc.writeMem(0xb2a0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4906);
        EXPECT(gbc.pc(), 0xb2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a0), 0xcb);
        EXPECT(gbc.readMem(0xb2a1), 0xdf);
        // CB DF 01FE
        gbc.setState(0x72c0, 0xa21d, 0xff60, 0xf9a8, 0xc4e0, 0xd67d, 0x0, 0x0);
        gbc.writeMem(0x72c0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa21d);
        EXPECT(gbc.pc(), 0x72c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 01FF
        gbc.setState(0xba81, 0x3a46, 0xe520, 0xbf55, 0xf3fe, 0x1328, 0x1, 0x1);
        gbc.writeMem(0xba81, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3a46);
        EXPECT(gbc.pc(), 0xba83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba81), 0xcb);
        EXPECT(gbc.readMem(0xba82), 0xdf);
        // CB DF 0200
        gbc.setState(0x71b7, 0x9d19, 0xcbe0, 0xb356, 0x27ff, 0xf683, 0x0, 0x1);
        gbc.writeMem(0x71b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9d19);
        EXPECT(gbc.pc(), 0x71b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0201
        gbc.setState(0xa00c, 0x6bd6, 0xfe70, 0x3406, 0x2ce6, 0xad9e, 0x1, 0x1);
        gbc.writeMem(0xa00c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6bd6);
        EXPECT(gbc.pc(), 0xa00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00c), 0xcb);
        EXPECT(gbc.readMem(0xa00d), 0xdf);
        // CB DF 0202
        gbc.setState(0xdb75, 0x4c8f, 0xd750, 0x514c, 0xf9fe, 0xe984, 0x1, 0x1);
        gbc.writeMem(0xdb75, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4c8f);
        EXPECT(gbc.pc(), 0xdb77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb75), 0xcb);
        EXPECT(gbc.readMem(0xdb76), 0xdf);
        // CB DF 0203
        gbc.setState(0xe071, 0xc4af, 0x36d0, 0xb3d3, 0x6f5f, 0x2054, 0x0, 0x1);
        gbc.writeMem(0xe071, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc4af);
        EXPECT(gbc.pc(), 0xe073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe071), 0xcb);
        EXPECT(gbc.readMem(0xe072), 0xdf);
        // CB DF 0204
        gbc.setState(0x96d1, 0x13e1, 0x3650, 0x6638, 0xf187, 0x2794, 0x0, 0x0);
        gbc.writeMem(0x96d1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x13e1);
        EXPECT(gbc.pc(), 0x96d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d1), 0xcb);
        EXPECT(gbc.readMem(0x96d2), 0xdf);
        // CB DF 0205
        gbc.setState(0x6238, 0x75fa, 0x54e0, 0x1f72, 0x5a44, 0x68d5, 0x0, 0x1);
        gbc.writeMem(0x6238, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x75fa);
        EXPECT(gbc.pc(), 0x623a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0206
        gbc.setState(0x5b9b, 0x2f03, 0xf350, 0x8415, 0x26eb, 0x6093, 0x1, 0x1);
        gbc.writeMem(0x5b9b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2f03);
        EXPECT(gbc.pc(), 0x5b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0207
        gbc.setState(0x4584, 0x320a, 0xa2e0, 0x5e01, 0x11d1, 0xe0d9, 0x1, 0x1);
        gbc.writeMem(0x4584, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x320a);
        EXPECT(gbc.pc(), 0x4586);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0208
        gbc.setState(0xe732, 0x7461, 0xc2b0, 0xd56a, 0x7e90, 0x2f80, 0x0, 0x1);
        gbc.writeMem(0xe732, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7461);
        EXPECT(gbc.pc(), 0xe734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe732), 0xcb);
        EXPECT(gbc.readMem(0xe733), 0xdf);
        // CB DF 0209
        gbc.setState(0xe7a9, 0xd10e, 0xb850, 0x14de, 0x6c50, 0xaef1, 0x1, 0x0);
        gbc.writeMem(0xe7a9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd10e);
        EXPECT(gbc.pc(), 0xe7ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7a9), 0xcb);
        EXPECT(gbc.readMem(0xe7aa), 0xdf);
        // CB DF 020A
        gbc.setState(0xe3f9, 0x95cf, 0x4ed0, 0x34c2, 0xc510, 0x5b75, 0x1, 0x1);
        gbc.writeMem(0xe3f9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x95cf);
        EXPECT(gbc.pc(), 0xe3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f9), 0xcb);
        EXPECT(gbc.readMem(0xe3fa), 0xdf);
        // CB DF 020B
        gbc.setState(0x4016, 0xc850, 0x9bf0, 0xd6f4, 0xc744, 0x2bc0, 0x1, 0x1);
        gbc.writeMem(0x4016, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc850);
        EXPECT(gbc.pc(), 0x4018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 020C
        gbc.setState(0xe640, 0x9864, 0x2c40, 0x9ef9, 0x16be, 0x7e74, 0x0, 0x0);
        gbc.writeMem(0xe640, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9864);
        EXPECT(gbc.pc(), 0xe642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe640), 0xcb);
        EXPECT(gbc.readMem(0xe641), 0xdf);
        // CB DF 020D
        gbc.setState(0xcb19, 0xf6c5, 0xf010, 0x3578, 0xe6b2, 0x1d65, 0x1, 0x1);
        gbc.writeMem(0xcb19, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf6c5);
        EXPECT(gbc.pc(), 0xcb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb19), 0xcb);
        EXPECT(gbc.readMem(0xcb1a), 0xdf);
        // CB DF 020E
        gbc.setState(0x6cd1, 0x33ad, 0xb4c0, 0x23d4, 0xe2b6, 0xf07c, 0x0, 0x0);
        gbc.writeMem(0x6cd1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x33ad);
        EXPECT(gbc.pc(), 0x6cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 020F
        gbc.setState(0xb098, 0x6fb3, 0xc680, 0x416f, 0x60b5, 0xeb07, 0x1, 0x1);
        gbc.writeMem(0xb098, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6fb3);
        EXPECT(gbc.pc(), 0xb09a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb098), 0xcb);
        EXPECT(gbc.readMem(0xb099), 0xdf);
        // CB DF 0210
        gbc.setState(0x138b, 0x393d, 0xaf90, 0x9bf1, 0xb44e, 0xebcc, 0x0, 0x0);
        gbc.writeMem(0x138b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x393d);
        EXPECT(gbc.pc(), 0x138d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0211
        gbc.setState(0x7b33, 0xc9c9, 0x1930, 0xf393, 0x77da, 0x30fb, 0x0, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc9c9);
        EXPECT(gbc.pc(), 0x7b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0213
        gbc.setState(0x9728, 0xccfa, 0x83f0, 0xf15e, 0x3f36, 0x9a2f, 0x1, 0x1);
        gbc.writeMem(0x9728, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xccfa);
        EXPECT(gbc.pc(), 0x972a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9728), 0xcb);
        EXPECT(gbc.readMem(0x9729), 0xdf);
        // CB DF 0214
        gbc.setState(0xaf99, 0x2f0f, 0xf0e0, 0xab02, 0x2498, 0x4226, 0x1, 0x1);
        gbc.writeMem(0xaf99, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2f0f);
        EXPECT(gbc.pc(), 0xaf9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf99), 0xcb);
        EXPECT(gbc.readMem(0xaf9a), 0xdf);
        // CB DF 0215
        gbc.setState(0x2858, 0x20fc, 0x4d20, 0x3342, 0x8a30, 0x754e, 0x1, 0x0);
        gbc.writeMem(0x2858, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x20fc);
        EXPECT(gbc.pc(), 0x285a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0216
        gbc.setState(0x1056, 0x9a0, 0x750, 0x85c2, 0x532, 0x7a49, 0x1, 0x0);
        gbc.writeMem(0x1056, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9a0);
        EXPECT(gbc.pc(), 0x1058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0217
        gbc.setState(0x10a1, 0xb7a, 0x21c0, 0x4863, 0xe472, 0x4ced, 0x1, 0x1);
        gbc.writeMem(0x10a1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb7a);
        EXPECT(gbc.pc(), 0x10a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0218
        gbc.setState(0xecb5, 0xd967, 0xa3f0, 0x5a7c, 0x605b, 0xc206, 0x1, 0x0);
        gbc.writeMem(0xecb5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd967);
        EXPECT(gbc.pc(), 0xecb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecb5), 0xcb);
        EXPECT(gbc.readMem(0xecb6), 0xdf);
        // CB DF 0219
        gbc.setState(0x6c4d, 0x2fa7, 0xf7a0, 0xef99, 0xd9bd, 0xc760, 0x1, 0x1);
        gbc.writeMem(0x6c4d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2fa7);
        EXPECT(gbc.pc(), 0x6c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 021A
        gbc.setState(0x4cb5, 0xe65d, 0x6a20, 0xd54, 0x76b7, 0xd598, 0x1, 0x0);
        gbc.writeMem(0x4cb5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe65d);
        EXPECT(gbc.pc(), 0x4cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 021B
        gbc.setState(0x17bb, 0x9d7, 0x5220, 0xe1b6, 0x9d7d, 0x931d, 0x1, 0x0);
        gbc.writeMem(0x17bb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9d7);
        EXPECT(gbc.pc(), 0x17bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 021C
        gbc.setState(0x3169, 0x4c46, 0x33f0, 0xbe11, 0x5d7e, 0x13cf, 0x0, 0x1);
        gbc.writeMem(0x3169, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4c46);
        EXPECT(gbc.pc(), 0x316b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 021D
        gbc.setState(0xa95d, 0x52c, 0x3f10, 0xd8f5, 0x55e7, 0xf8ad, 0x0, 0x1);
        gbc.writeMem(0xa95d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x52c);
        EXPECT(gbc.pc(), 0xa95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa95d), 0xcb);
        EXPECT(gbc.readMem(0xa95e), 0xdf);
        // CB DF 021E
        gbc.setState(0x5d77, 0x1709, 0xff90, 0x183c, 0x3141, 0xbf7b, 0x0, 0x1);
        gbc.writeMem(0x5d77, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1709);
        EXPECT(gbc.pc(), 0x5d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 021F
        gbc.setState(0x478e, 0xbbac, 0x6470, 0x9409, 0xc1e5, 0xdd40, 0x0, 0x0);
        gbc.writeMem(0x478e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbbac);
        EXPECT(gbc.pc(), 0x4790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0220
        gbc.setState(0x63f1, 0xae58, 0x9be0, 0x39d8, 0x2d06, 0xfc7d, 0x1, 0x0);
        gbc.writeMem(0x63f1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xae58);
        EXPECT(gbc.pc(), 0x63f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0221
        gbc.setState(0x67e1, 0x49ae, 0xc390, 0x976e, 0x2561, 0x5e3b, 0x0, 0x0);
        gbc.writeMem(0x67e1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x49ae);
        EXPECT(gbc.pc(), 0x67e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0222
        gbc.setState(0x9127, 0xc486, 0xb160, 0x3a63, 0xb55b, 0xa4d2, 0x1, 0x0);
        gbc.writeMem(0x9127, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc486);
        EXPECT(gbc.pc(), 0x9129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9127), 0xcb);
        EXPECT(gbc.readMem(0x9128), 0xdf);
        // CB DF 0223
        gbc.setState(0xe21d, 0x2a6b, 0xe040, 0xedd4, 0x6687, 0x8084, 0x0, 0x0);
        gbc.writeMem(0xe21d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2a6b);
        EXPECT(gbc.pc(), 0xe21f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21d), 0xcb);
        EXPECT(gbc.readMem(0xe21e), 0xdf);
        // CB DF 0224
        gbc.setState(0xccd1, 0xcaa9, 0x3160, 0xa087, 0x8bae, 0xffa6, 0x1, 0x1);
        gbc.writeMem(0xccd1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcaa9);
        EXPECT(gbc.pc(), 0xccd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd1), 0xcb);
        EXPECT(gbc.readMem(0xccd2), 0xdf);
        // CB DF 0225
        gbc.setState(0x4f1c, 0x4599, 0xf020, 0xbd02, 0x50af, 0x17a8, 0x0, 0x1);
        gbc.writeMem(0x4f1c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4599);
        EXPECT(gbc.pc(), 0x4f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0226
        gbc.setState(0x78f4, 0x1c06, 0xd200, 0xb9dc, 0xd21b, 0xf38d, 0x1, 0x1);
        gbc.writeMem(0x78f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1c06);
        EXPECT(gbc.pc(), 0x78f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0227
        gbc.setState(0xaf83, 0x4848, 0x1c70, 0x2517, 0xb690, 0x70b7, 0x1, 0x0);
        gbc.writeMem(0xaf83, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4848);
        EXPECT(gbc.pc(), 0xaf85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf83), 0xcb);
        EXPECT(gbc.readMem(0xaf84), 0xdf);
        // CB DF 0228
        gbc.setState(0x4b91, 0xaadb, 0xd420, 0x2c2c, 0x7565, 0x9321, 0x1, 0x1);
        gbc.writeMem(0x4b91, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xaadb);
        EXPECT(gbc.pc(), 0x4b93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0229
        gbc.setState(0x9ec9, 0x5ab9, 0xb870, 0x9edf, 0xfbfa, 0x46a8, 0x0, 0x1);
        gbc.writeMem(0x9ec9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5ab9);
        EXPECT(gbc.pc(), 0x9ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec9), 0xcb);
        EXPECT(gbc.readMem(0x9eca), 0xdf);
        // CB DF 022A
        gbc.setState(0xe69e, 0x529f, 0x4e50, 0x41cb, 0xa88f, 0xf699, 0x1, 0x1);
        gbc.writeMem(0xe69e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x529f);
        EXPECT(gbc.pc(), 0xe6a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe69e), 0xcb);
        EXPECT(gbc.readMem(0xe69f), 0xdf);
        // CB DF 022B
        gbc.setState(0x9bfb, 0x5edd, 0x400, 0x6e9, 0x2ba0, 0x5fa0, 0x1, 0x1);
        gbc.writeMem(0x9bfb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5edd);
        EXPECT(gbc.pc(), 0x9bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfb), 0xcb);
        EXPECT(gbc.readMem(0x9bfc), 0xdf);
        // CB DF 022C
        gbc.setState(0x474b, 0x9c8d, 0x7800, 0xd5b0, 0xb4fc, 0x9c5c, 0x1, 0x0);
        gbc.writeMem(0x474b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9c8d);
        EXPECT(gbc.pc(), 0x474d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 022D
        gbc.setState(0xad9d, 0xc777, 0xc540, 0xcd1d, 0xab66, 0xb33c, 0x0, 0x1);
        gbc.writeMem(0xad9d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc777);
        EXPECT(gbc.pc(), 0xad9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9d), 0xcb);
        EXPECT(gbc.readMem(0xad9e), 0xdf);
        // CB DF 022E
        gbc.setState(0xc2ee, 0x5a5a, 0x3b70, 0x4c, 0x44aa, 0x56ea, 0x0, 0x0);
        gbc.writeMem(0xc2ee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5a5a);
        EXPECT(gbc.pc(), 0xc2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ee), 0xcb);
        EXPECT(gbc.readMem(0xc2ef), 0xdf);
        // CB DF 022F
        gbc.setState(0x19bc, 0xa59, 0x63f0, 0x4bf, 0x7b3a, 0x1274, 0x0, 0x0);
        gbc.writeMem(0x19bc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa59);
        EXPECT(gbc.pc(), 0x19be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0230
        gbc.setState(0x65fe, 0xb752, 0x49f0, 0x2d4e, 0xa3fc, 0x4a6e, 0x0, 0x1);
        gbc.writeMem(0x65fe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb752);
        EXPECT(gbc.pc(), 0x6600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0231
        gbc.setState(0xe5a1, 0x5c4e, 0x4d80, 0x3c1c, 0xe15d, 0xb7ac, 0x0, 0x1);
        gbc.writeMem(0xe5a1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5c4e);
        EXPECT(gbc.pc(), 0xe5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a1), 0xcb);
        EXPECT(gbc.readMem(0xe5a2), 0xdf);
        // CB DF 0232
        gbc.setState(0xa2ba, 0x6b83, 0x1d0, 0xcfdb, 0x7595, 0x8b2, 0x0, 0x1);
        gbc.writeMem(0xa2ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6b83);
        EXPECT(gbc.pc(), 0xa2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ba), 0xcb);
        EXPECT(gbc.readMem(0xa2bb), 0xdf);
        // CB DF 0233
        gbc.setState(0x6458, 0xc1db, 0x8820, 0xf278, 0x2d5b, 0x8777, 0x0, 0x0);
        gbc.writeMem(0x6458, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc1db);
        EXPECT(gbc.pc(), 0x645a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0234
        gbc.setState(0xdbaa, 0x7e54, 0xc3c0, 0x4101, 0xe424, 0xcbfe, 0x1, 0x1);
        gbc.writeMem(0xdbaa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7e54);
        EXPECT(gbc.pc(), 0xdbac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbaa), 0xcb);
        EXPECT(gbc.readMem(0xdbab), 0xdf);
        // CB DF 0235
        gbc.setState(0x7a9e, 0x1e4e, 0x7760, 0x551a, 0x554e, 0xfc11, 0x0, 0x1);
        gbc.writeMem(0x7a9e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1e4e);
        EXPECT(gbc.pc(), 0x7aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0236
        gbc.setState(0x4de3, 0xc578, 0xbd90, 0xdcd6, 0xff91, 0xe1a6, 0x1, 0x1);
        gbc.writeMem(0x4de3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc578);
        EXPECT(gbc.pc(), 0x4de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0237
        gbc.setState(0x4063, 0x4a38, 0x5b80, 0xc402, 0x891a, 0x5c26, 0x1, 0x0);
        gbc.writeMem(0x4063, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4a38);
        EXPECT(gbc.pc(), 0x4065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0238
        gbc.setState(0x7351, 0x771f, 0x3e90, 0x4904, 0x6034, 0x3b00, 0x1, 0x0);
        gbc.writeMem(0x7351, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x771f);
        EXPECT(gbc.pc(), 0x7353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0239
        gbc.setState(0x2b1f, 0xbc41, 0xc250, 0xb795, 0xf4fc, 0xf9a3, 0x0, 0x1);
        gbc.writeMem(0x2b1f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbc41);
        EXPECT(gbc.pc(), 0x2b21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 023A
        gbc.setState(0xcc60, 0x2113, 0x4d40, 0xb348, 0xb26b, 0xff3a, 0x0, 0x1);
        gbc.writeMem(0xcc60, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2113);
        EXPECT(gbc.pc(), 0xcc62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc60), 0xcb);
        EXPECT(gbc.readMem(0xcc61), 0xdf);
        // CB DF 023B
        gbc.setState(0xd70b, 0x7c68, 0x82c0, 0xca65, 0x53bb, 0x79ea, 0x1, 0x1);
        gbc.writeMem(0xd70b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7c68);
        EXPECT(gbc.pc(), 0xd70d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70b), 0xcb);
        EXPECT(gbc.readMem(0xd70c), 0xdf);
        // CB DF 023D
        gbc.setState(0x1b0, 0xc1d6, 0x3fd0, 0xaa54, 0xe4f4, 0xb6c4, 0x0, 0x1);
        gbc.writeMem(0x1b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc1d6);
        EXPECT(gbc.pc(), 0x1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 023E
        gbc.setState(0x563a, 0x3f6b, 0xba90, 0xd20f, 0xc18d, 0xacac, 0x0, 0x0);
        gbc.writeMem(0x563a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3f6b);
        EXPECT(gbc.pc(), 0x563c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 023F
        gbc.setState(0xadfb, 0x5c78, 0x3400, 0x44e4, 0x3ec8, 0xf9bf, 0x0, 0x1);
        gbc.writeMem(0xadfb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5c78);
        EXPECT(gbc.pc(), 0xadfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfb), 0xcb);
        EXPECT(gbc.readMem(0xadfc), 0xdf);
        // CB DF 0240
        gbc.setState(0xb77, 0x7282, 0x14e0, 0xcce3, 0x3d7d, 0xf57c, 0x1, 0x0);
        gbc.writeMem(0xb77, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7282);
        EXPECT(gbc.pc(), 0xb79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0242
        gbc.setState(0xc9ac, 0xc76f, 0x5e90, 0x4671, 0x82df, 0xbc12, 0x0, 0x1);
        gbc.writeMem(0xc9ac, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc76f);
        EXPECT(gbc.pc(), 0xc9ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ac), 0xcb);
        EXPECT(gbc.readMem(0xc9ad), 0xdf);
        // CB DF 0243
        gbc.setState(0x16e9, 0x1b02, 0xff90, 0x48fd, 0x969a, 0xf152, 0x0, 0x1);
        gbc.writeMem(0x16e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1b02);
        EXPECT(gbc.pc(), 0x16eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0244
        gbc.setState(0x9a9a, 0xc3e7, 0x7b60, 0x907f, 0x819e, 0xccb7, 0x0, 0x1);
        gbc.writeMem(0x9a9a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc3e7);
        EXPECT(gbc.pc(), 0x9a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a9a), 0xcb);
        EXPECT(gbc.readMem(0x9a9b), 0xdf);
        // CB DF 0245
        gbc.setState(0x682, 0x4433, 0x20, 0x6bc5, 0x65cf, 0x4949, 0x1, 0x0);
        gbc.writeMem(0x682, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4433);
        EXPECT(gbc.pc(), 0x684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0246
        gbc.setState(0x1197, 0x2bee, 0x5740, 0xda57, 0x5fb0, 0x917b, 0x0, 0x1);
        gbc.writeMem(0x1197, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2bee);
        EXPECT(gbc.pc(), 0x1199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0247
        gbc.setState(0xd041, 0xa90f, 0x73b0, 0xee40, 0x630e, 0xb01b, 0x0, 0x1);
        gbc.writeMem(0xd041, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa90f);
        EXPECT(gbc.pc(), 0xd043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd041), 0xcb);
        EXPECT(gbc.readMem(0xd042), 0xdf);
        // CB DF 0248
        gbc.setState(0x7b1e, 0x1648, 0x6760, 0x71c1, 0xe88f, 0xcd51, 0x1, 0x1);
        gbc.writeMem(0x7b1e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1648);
        EXPECT(gbc.pc(), 0x7b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0249
        gbc.setState(0x1517, 0x8954, 0x6a0, 0x7ce7, 0x9dac, 0xc3bd, 0x1, 0x0);
        gbc.writeMem(0x1517, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8954);
        EXPECT(gbc.pc(), 0x1519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 024A
        gbc.setState(0x677a, 0xdd28, 0xda80, 0x5b55, 0xd54d, 0x46f8, 0x1, 0x1);
        gbc.writeMem(0x677a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdd28);
        EXPECT(gbc.pc(), 0x677c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 024B
        gbc.setState(0xdbdb, 0x2f0e, 0x1840, 0xddf4, 0x99cb, 0xf3f5, 0x1, 0x0);
        gbc.writeMem(0xdbdb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2f0e);
        EXPECT(gbc.pc(), 0xdbdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbdb), 0xcb);
        EXPECT(gbc.readMem(0xdbdc), 0xdf);
        // CB DF 024C
        gbc.setState(0x6ab2, 0x6a29, 0xbfc0, 0xd69a, 0x2aa4, 0x1237, 0x0, 0x0);
        gbc.writeMem(0x6ab2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6a29);
        EXPECT(gbc.pc(), 0x6ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 024D
        gbc.setState(0x1428, 0x50aa, 0x90a0, 0xf000, 0xbdee, 0x3fd3, 0x1, 0x1);
        gbc.writeMem(0x1428, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x50aa);
        EXPECT(gbc.pc(), 0x142a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 024E
        gbc.setState(0x4e46, 0x97b5, 0xbd90, 0x256c, 0x8e57, 0xed14, 0x1, 0x1);
        gbc.writeMem(0x4e46, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x97b5);
        EXPECT(gbc.pc(), 0x4e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 024F
        gbc.setState(0xa721, 0x93a2, 0x86b0, 0x5e0d, 0xb337, 0xf88a, 0x1, 0x0);
        gbc.writeMem(0xa721, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x93a2);
        EXPECT(gbc.pc(), 0xa723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa721), 0xcb);
        EXPECT(gbc.readMem(0xa722), 0xdf);
        // CB DF 0250
        gbc.setState(0xe0e, 0xbdb4, 0x3790, 0x8a9b, 0xbb3a, 0x9e7e, 0x1, 0x0);
        gbc.writeMem(0xe0e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbdb4);
        EXPECT(gbc.pc(), 0xe10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0251
        gbc.setState(0x2e66, 0x2324, 0xf8b0, 0xe222, 0x659, 0xe8f8, 0x0, 0x0);
        gbc.writeMem(0x2e66, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2324);
        EXPECT(gbc.pc(), 0x2e68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0252
        gbc.setState(0x4aad, 0xe02c, 0xe440, 0x360f, 0x7eaa, 0xb97a, 0x0, 0x1);
        gbc.writeMem(0x4aad, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe02c);
        EXPECT(gbc.pc(), 0x4aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0253
        gbc.setState(0xb0f4, 0xdb5c, 0x26b0, 0x69ba, 0x7765, 0x14e2, 0x0, 0x1);
        gbc.writeMem(0xb0f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdb5c);
        EXPECT(gbc.pc(), 0xb0f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f4), 0xcb);
        EXPECT(gbc.readMem(0xb0f5), 0xdf);
        // CB DF 0254
        gbc.setState(0x8750, 0x1b71, 0x4ab0, 0x7c98, 0xc0b3, 0x4b4c, 0x0, 0x0);
        gbc.writeMem(0x8750, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1b71);
        EXPECT(gbc.pc(), 0x8752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8750), 0xcb);
        EXPECT(gbc.readMem(0x8751), 0xdf);
        // CB DF 0255
        gbc.setState(0xa61c, 0x9d72, 0x7dd0, 0x216f, 0x7507, 0x743c, 0x0, 0x1);
        gbc.writeMem(0xa61c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9d72);
        EXPECT(gbc.pc(), 0xa61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61c), 0xcb);
        EXPECT(gbc.readMem(0xa61d), 0xdf);
        // CB DF 0256
        gbc.setState(0xda35, 0x9be7, 0x48d0, 0x1db1, 0xb069, 0x1b01, 0x0, 0x1);
        gbc.writeMem(0xda35, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9be7);
        EXPECT(gbc.pc(), 0xda37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda35), 0xcb);
        EXPECT(gbc.readMem(0xda36), 0xdf);
        // CB DF 0257
        gbc.setState(0x6ab7, 0x38a3, 0x5620, 0x598b, 0x98e0, 0xdc8, 0x1, 0x0);
        gbc.writeMem(0x6ab7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x38a3);
        EXPECT(gbc.pc(), 0x6ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0258
        gbc.setState(0xd11f, 0xe43b, 0x90d0, 0x536d, 0x9049, 0x6efe, 0x1, 0x1);
        gbc.writeMem(0xd11f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe43b);
        EXPECT(gbc.pc(), 0xd121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11f), 0xcb);
        EXPECT(gbc.readMem(0xd120), 0xdf);
        // CB DF 0259
        gbc.setState(0xa340, 0x59a1, 0x6980, 0xc00e, 0x596e, 0x2eb2, 0x0, 0x0);
        gbc.writeMem(0xa340, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x59a1);
        EXPECT(gbc.pc(), 0xa342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa340), 0xcb);
        EXPECT(gbc.readMem(0xa341), 0xdf);
        // CB DF 025A
        gbc.setState(0xe166, 0x3298, 0xfc70, 0x3a52, 0xa438, 0xdfbf, 0x1, 0x1);
        gbc.writeMem(0xe166, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3298);
        EXPECT(gbc.pc(), 0xe168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe166), 0xcb);
        EXPECT(gbc.readMem(0xe167), 0xdf);
        // CB DF 025B
        gbc.setState(0x9ffe, 0xe876, 0x5560, 0x7906, 0x84ec, 0x6353, 0x1, 0x1);
        gbc.writeMem(0x9ffe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe876);
        EXPECT(gbc.pc(), 0xa000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffe), 0xcb);
        EXPECT(gbc.readMem(0x9fff), 0xdf);
        // CB DF 025C
        gbc.setState(0x6edd, 0x72cd, 0xc120, 0xed2e, 0x928e, 0x26dd, 0x0, 0x1);
        gbc.writeMem(0x6edd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x72cd);
        EXPECT(gbc.pc(), 0x6edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 025D
        gbc.setState(0x4307, 0xce9f, 0xec10, 0xfb80, 0xc23, 0xce3d, 0x0, 0x0);
        gbc.writeMem(0x4307, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xce9f);
        EXPECT(gbc.pc(), 0x4309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 025E
        gbc.setState(0x864, 0xa988, 0x1df0, 0xa7a2, 0xd111, 0x55df, 0x0, 0x0);
        gbc.writeMem(0x864, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa988);
        EXPECT(gbc.pc(), 0x866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 025F
        gbc.setState(0x8ab5, 0x77b6, 0x1b80, 0xf0d6, 0x64e, 0xdafb, 0x1, 0x0);
        gbc.writeMem(0x8ab5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x77b6);
        EXPECT(gbc.pc(), 0x8ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab5), 0xcb);
        EXPECT(gbc.readMem(0x8ab6), 0xdf);
        // CB DF 0260
        gbc.setState(0x6d48, 0x7b3f, 0x47a0, 0x443d, 0xf584, 0x13f6, 0x0, 0x1);
        gbc.writeMem(0x6d48, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7b3f);
        EXPECT(gbc.pc(), 0x6d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0261
        gbc.setState(0x7adc, 0x75c1, 0xd920, 0xbf4e, 0x910a, 0x8459, 0x0, 0x1);
        gbc.writeMem(0x7adc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x75c1);
        EXPECT(gbc.pc(), 0x7ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0262
        gbc.setState(0x328e, 0x7b8f, 0x90, 0x5142, 0x31cb, 0xbfa9, 0x1, 0x1);
        gbc.writeMem(0x328e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7b8f);
        EXPECT(gbc.pc(), 0x3290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0263
        gbc.setState(0x4eb2, 0x2123, 0x4a80, 0x9dee, 0xce8c, 0x28eb, 0x1, 0x1);
        gbc.writeMem(0x4eb2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2123);
        EXPECT(gbc.pc(), 0x4eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0264
        gbc.setState(0x696b, 0xe7c4, 0xb000, 0xe519, 0x3ad4, 0x98b, 0x1, 0x1);
        gbc.writeMem(0x696b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe7c4);
        EXPECT(gbc.pc(), 0x696d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0265
        gbc.setState(0xe757, 0xc4be, 0x4a30, 0x7638, 0xa383, 0xee3c, 0x0, 0x0);
        gbc.writeMem(0xe757, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc4be);
        EXPECT(gbc.pc(), 0xe759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe757), 0xcb);
        EXPECT(gbc.readMem(0xe758), 0xdf);
        // CB DF 0266
        gbc.setState(0xdfdc, 0xf93a, 0x8f70, 0xfccd, 0xaf3c, 0x84, 0x1, 0x0);
        gbc.writeMem(0xdfdc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf93a);
        EXPECT(gbc.pc(), 0xdfde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfdc), 0xcb);
        EXPECT(gbc.readMem(0xdfdd), 0xdf);
        // CB DF 0268
        gbc.setState(0x5eb8, 0x3709, 0x42b0, 0xedb6, 0xb622, 0x484a, 0x1, 0x1);
        gbc.writeMem(0x5eb8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3709);
        EXPECT(gbc.pc(), 0x5eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0269
        gbc.setState(0x6868, 0xd93, 0xae30, 0x5d74, 0x4b29, 0xa68b, 0x0, 0x1);
        gbc.writeMem(0x6868, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd93);
        EXPECT(gbc.pc(), 0x686a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 026A
        gbc.setState(0x8065, 0x40d4, 0x3cd0, 0xede4, 0x479e, 0xb926, 0x0, 0x1);
        gbc.writeMem(0x8065, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x40d4);
        EXPECT(gbc.pc(), 0x8067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8065), 0xcb);
        EXPECT(gbc.readMem(0x8066), 0xdf);
        // CB DF 026B
        gbc.setState(0x32e, 0x50a, 0x4e70, 0x17a5, 0xef89, 0xd62, 0x0, 0x1);
        gbc.writeMem(0x32e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x50a);
        EXPECT(gbc.pc(), 0x330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 026C
        gbc.setState(0xa9e2, 0x5307, 0x9dd0, 0xfd7d, 0xfadd, 0x48fe, 0x1, 0x1);
        gbc.writeMem(0xa9e2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5307);
        EXPECT(gbc.pc(), 0xa9e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9e2), 0xcb);
        EXPECT(gbc.readMem(0xa9e3), 0xdf);
        // CB DF 026D
        gbc.setState(0x6740, 0xd9ad, 0x140, 0x72b3, 0x7f26, 0x5d2b, 0x1, 0x1);
        gbc.writeMem(0x6740, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd9ad);
        EXPECT(gbc.pc(), 0x6742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 026E
        gbc.setState(0x4ee0, 0x5c15, 0x33a0, 0x4e0f, 0x44d3, 0xe41f, 0x0, 0x1);
        gbc.writeMem(0x4ee0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5c15);
        EXPECT(gbc.pc(), 0x4ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 026F
        gbc.setState(0x707f, 0x8292, 0xaef0, 0xebe0, 0xa4ff, 0xd087, 0x1, 0x1);
        gbc.writeMem(0x707f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8292);
        EXPECT(gbc.pc(), 0x7081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0270
        gbc.setState(0xdaf4, 0x264e, 0x1970, 0x86db, 0xe576, 0xbf, 0x1, 0x0);
        gbc.writeMem(0xdaf4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x264e);
        EXPECT(gbc.pc(), 0xdaf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf4), 0xcb);
        EXPECT(gbc.readMem(0xdaf5), 0xdf);
        // CB DF 0271
        gbc.setState(0xcdf6, 0x6524, 0x1f70, 0x9fd5, 0xc22f, 0xeb0e, 0x1, 0x1);
        gbc.writeMem(0xcdf6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6524);
        EXPECT(gbc.pc(), 0xcdf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf6), 0xcb);
        EXPECT(gbc.readMem(0xcdf7), 0xdf);
        // CB DF 0272
        gbc.setState(0x898a, 0x3910, 0x3d00, 0x3ec3, 0x7e15, 0xe56d, 0x0, 0x0);
        gbc.writeMem(0x898a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3910);
        EXPECT(gbc.pc(), 0x898c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898a), 0xcb);
        EXPECT(gbc.readMem(0x898b), 0xdf);
        // CB DF 0273
        gbc.setState(0x9b0b, 0xddbf, 0x2410, 0x6dd3, 0x95a9, 0xb18e, 0x1, 0x1);
        gbc.writeMem(0x9b0b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xddbf);
        EXPECT(gbc.pc(), 0x9b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b0b), 0xcb);
        EXPECT(gbc.readMem(0x9b0c), 0xdf);
        // CB DF 0274
        gbc.setState(0xbe2c, 0x178c, 0xd730, 0xcaf4, 0x8f46, 0xf0fd, 0x1, 0x0);
        gbc.writeMem(0xbe2c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x178c);
        EXPECT(gbc.pc(), 0xbe2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe2c), 0xcb);
        EXPECT(gbc.readMem(0xbe2d), 0xdf);
        // CB DF 0275
        gbc.setState(0x3f66, 0xc977, 0x1950, 0x7e9f, 0x70fd, 0x2c2c, 0x1, 0x1);
        gbc.writeMem(0x3f66, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc977);
        EXPECT(gbc.pc(), 0x3f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0276
        gbc.setState(0x761e, 0x1ee6, 0xf20, 0xae96, 0x43e8, 0xd7f1, 0x1, 0x1);
        gbc.writeMem(0x761e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1ee6);
        EXPECT(gbc.pc(), 0x7620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0277
        gbc.setState(0x264f, 0x65a5, 0x2d00, 0x8608, 0x28f6, 0xad4f, 0x0, 0x1);
        gbc.writeMem(0x264f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x65a5);
        EXPECT(gbc.pc(), 0x2651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0278
        gbc.setState(0x9c81, 0x4635, 0x2880, 0x4f2e, 0x35f, 0xecb, 0x0, 0x0);
        gbc.writeMem(0x9c81, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4635);
        EXPECT(gbc.pc(), 0x9c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c81), 0xcb);
        EXPECT(gbc.readMem(0x9c82), 0xdf);
        // CB DF 0279
        gbc.setState(0x8af7, 0xa090, 0xbcc0, 0x88ce, 0x31c2, 0x15bc, 0x0, 0x0);
        gbc.writeMem(0x8af7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa090);
        EXPECT(gbc.pc(), 0x8af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af7), 0xcb);
        EXPECT(gbc.readMem(0x8af8), 0xdf);
        // CB DF 027A
        gbc.setState(0x6caf, 0x6f4a, 0xfa00, 0x6f7d, 0x2c40, 0x3d4e, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6f4a);
        EXPECT(gbc.pc(), 0x6cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 027B
        gbc.setState(0xce8, 0x5708, 0xb530, 0xb21b, 0x9e5a, 0x77d9, 0x0, 0x0);
        gbc.writeMem(0xce8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5708);
        EXPECT(gbc.pc(), 0xcea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 027C
        gbc.setState(0x883, 0xce2c, 0x4b50, 0x659a, 0xc95c, 0xe9a6, 0x0, 0x0);
        gbc.writeMem(0x883, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xce2c);
        EXPECT(gbc.pc(), 0x885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 027D
        gbc.setState(0xbd00, 0x378a, 0xe680, 0x3d8, 0x635f, 0x965a, 0x0, 0x1);
        gbc.writeMem(0xbd00, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x378a);
        EXPECT(gbc.pc(), 0xbd02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd00), 0xcb);
        EXPECT(gbc.readMem(0xbd01), 0xdf);
        // CB DF 027E
        gbc.setState(0xe600, 0x51a3, 0xae10, 0x16ce, 0x76d4, 0x2daf, 0x0, 0x0);
        gbc.writeMem(0xe600, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x51a3);
        EXPECT(gbc.pc(), 0xe602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe600), 0xcb);
        EXPECT(gbc.readMem(0xe601), 0xdf);
        // CB DF 027F
        gbc.setState(0x38d5, 0x9607, 0x7900, 0xc239, 0x1890, 0xbfa0, 0x0, 0x0);
        gbc.writeMem(0x38d5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9607);
        EXPECT(gbc.pc(), 0x38d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0280
        gbc.setState(0x9d7e, 0xec8, 0x3a30, 0x17e9, 0x2b3e, 0xe467, 0x1, 0x1);
        gbc.writeMem(0x9d7e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xec8);
        EXPECT(gbc.pc(), 0x9d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d7e), 0xcb);
        EXPECT(gbc.readMem(0x9d7f), 0xdf);
        // CB DF 0281
        gbc.setState(0xbb8d, 0x76ec, 0x8250, 0xba57, 0xe041, 0x18ee, 0x1, 0x1);
        gbc.writeMem(0xbb8d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x76ec);
        EXPECT(gbc.pc(), 0xbb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb8d), 0xcb);
        EXPECT(gbc.readMem(0xbb8e), 0xdf);
        // CB DF 0282
        gbc.setState(0x7cfc, 0x8942, 0x5c40, 0x1a22, 0x9a61, 0xbb6f, 0x0, 0x1);
        gbc.writeMem(0x7cfc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8942);
        EXPECT(gbc.pc(), 0x7cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0283
        gbc.setState(0x9274, 0xc607, 0x3970, 0xcde7, 0xf4d2, 0x95fd, 0x1, 0x1);
        gbc.writeMem(0x9274, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc607);
        EXPECT(gbc.pc(), 0x9276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9274), 0xcb);
        EXPECT(gbc.readMem(0x9275), 0xdf);
        // CB DF 0284
        gbc.setState(0xbdc7, 0xda31, 0x6fa0, 0xb200, 0x94ef, 0x80e5, 0x1, 0x0);
        gbc.writeMem(0xbdc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xda31);
        EXPECT(gbc.pc(), 0xbdc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc7), 0xcb);
        EXPECT(gbc.readMem(0xbdc8), 0xdf);
        // CB DF 0285
        gbc.setState(0x3671, 0x70a1, 0x3960, 0x36af, 0x640e, 0xdce1, 0x0, 0x0);
        gbc.writeMem(0x3671, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x70a1);
        EXPECT(gbc.pc(), 0x3673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0286
        gbc.setState(0xab23, 0x58e3, 0x2e40, 0xa3a2, 0x59c, 0x8e02, 0x1, 0x0);
        gbc.writeMem(0xab23, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x58e3);
        EXPECT(gbc.pc(), 0xab25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab23), 0xcb);
        EXPECT(gbc.readMem(0xab24), 0xdf);
        // CB DF 0287
        gbc.setState(0x408e, 0xd84f, 0x4d40, 0x18e2, 0xc586, 0xb108, 0x0, 0x0);
        gbc.writeMem(0x408e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd84f);
        EXPECT(gbc.pc(), 0x4090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0288
        gbc.setState(0x6b23, 0x46c2, 0xdf30, 0x17b1, 0x39e7, 0x57ab, 0x1, 0x1);
        gbc.writeMem(0x6b23, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x46c2);
        EXPECT(gbc.pc(), 0x6b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0289
        gbc.setState(0xd519, 0xf737, 0x6190, 0x4b29, 0xc0fb, 0x7bfa, 0x0, 0x0);
        gbc.writeMem(0xd519, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf737);
        EXPECT(gbc.pc(), 0xd51b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd519), 0xcb);
        EXPECT(gbc.readMem(0xd51a), 0xdf);
        // CB DF 028A
        gbc.setState(0x6516, 0x6542, 0x7ab0, 0x5ece, 0x45ef, 0xc938, 0x1, 0x0);
        gbc.writeMem(0x6516, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6542);
        EXPECT(gbc.pc(), 0x6518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 028B
        gbc.setState(0x3886, 0x37c0, 0xbd90, 0x28df, 0x38f2, 0x1b8b, 0x0, 0x0);
        gbc.writeMem(0x3886, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x37c0);
        EXPECT(gbc.pc(), 0x3888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 028C
        gbc.setState(0x6818, 0x2275, 0x2ec0, 0x9b1c, 0xbe60, 0x7439, 0x0, 0x1);
        gbc.writeMem(0x6818, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2275);
        EXPECT(gbc.pc(), 0x681a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 028D
        gbc.setState(0xc54c, 0x5075, 0x9ac0, 0xb6ed, 0x983, 0xade3, 0x0, 0x0);
        gbc.writeMem(0xc54c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5075);
        EXPECT(gbc.pc(), 0xc54e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54c), 0xcb);
        EXPECT(gbc.readMem(0xc54d), 0xdf);
        // CB DF 028E
        gbc.setState(0x77e7, 0x6ed3, 0xeb00, 0xbadc, 0x64be, 0xb4c9, 0x0, 0x1);
        gbc.writeMem(0x77e7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6ed3);
        EXPECT(gbc.pc(), 0x77e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0290
        gbc.setState(0xc302, 0xfdc9, 0x89b0, 0xec9e, 0xb5c1, 0x66f0, 0x0, 0x0);
        gbc.writeMem(0xc302, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfdc9);
        EXPECT(gbc.pc(), 0xc304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc302), 0xcb);
        EXPECT(gbc.readMem(0xc303), 0xdf);
        // CB DF 0292
        gbc.setState(0x537c, 0x527d, 0x98b0, 0x2c1d, 0xcd01, 0x62b0, 0x1, 0x1);
        gbc.writeMem(0x537c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x527d);
        EXPECT(gbc.pc(), 0x537e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0293
        gbc.setState(0x442f, 0xed0c, 0xc1a0, 0x7b8, 0x5a81, 0xf402, 0x1, 0x1);
        gbc.writeMem(0x442f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xed0c);
        EXPECT(gbc.pc(), 0x4431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0294
        gbc.setState(0x8a41, 0xaeec, 0x73e0, 0xf924, 0xe07c, 0x3b88, 0x0, 0x0);
        gbc.writeMem(0x8a41, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xaeec);
        EXPECT(gbc.pc(), 0x8a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a41), 0xcb);
        EXPECT(gbc.readMem(0x8a42), 0xdf);
        // CB DF 0295
        gbc.setState(0xe7b4, 0x4ef5, 0x26f0, 0xdff5, 0x4de, 0x335c, 0x0, 0x1);
        gbc.writeMem(0xe7b4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4ef5);
        EXPECT(gbc.pc(), 0xe7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b4), 0xcb);
        EXPECT(gbc.readMem(0xe7b5), 0xdf);
        // CB DF 0296
        gbc.setState(0x30ff, 0xe56a, 0x5140, 0x4b6e, 0x6ea1, 0x9012, 0x0, 0x0);
        gbc.writeMem(0x30ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe56a);
        EXPECT(gbc.pc(), 0x3101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0298
        gbc.setState(0x9933, 0xd788, 0x4960, 0x5cd3, 0xb6d2, 0x4ab2, 0x0, 0x1);
        gbc.writeMem(0x9933, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd788);
        EXPECT(gbc.pc(), 0x9935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9933), 0xcb);
        EXPECT(gbc.readMem(0x9934), 0xdf);
        // CB DF 0299
        gbc.setState(0x6c5d, 0xb394, 0x3030, 0x328b, 0x3917, 0x1e8c, 0x1, 0x1);
        gbc.writeMem(0x6c5d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb394);
        EXPECT(gbc.pc(), 0x6c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 029B
        gbc.setState(0x563b, 0x1a81, 0x8760, 0x3e57, 0x7810, 0x79e4, 0x0, 0x0);
        gbc.writeMem(0x563b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1a81);
        EXPECT(gbc.pc(), 0x563d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 029C
        gbc.setState(0x7f63, 0x4e87, 0x8e20, 0xa562, 0xfaef, 0x7594, 0x1, 0x1);
        gbc.writeMem(0x7f63, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4e87);
        EXPECT(gbc.pc(), 0x7f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 029D
        gbc.setState(0xb38c, 0x5345, 0xe870, 0xd46f, 0x9c35, 0xce5b, 0x1, 0x1);
        gbc.writeMem(0xb38c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5345);
        EXPECT(gbc.pc(), 0xb38e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb38c), 0xcb);
        EXPECT(gbc.readMem(0xb38d), 0xdf);
        // CB DF 029E
        gbc.setState(0x1d15, 0x6a5c, 0x48e0, 0xa7a6, 0x1f78, 0xc76a, 0x0, 0x0);
        gbc.writeMem(0x1d15, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6a5c);
        EXPECT(gbc.pc(), 0x1d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 029F
        gbc.setState(0x64cd, 0x87c7, 0x62f0, 0xc89f, 0xfbd9, 0xb1c0, 0x0, 0x0);
        gbc.writeMem(0x64cd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x87c7);
        EXPECT(gbc.pc(), 0x64cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02A0
        gbc.setState(0xa8c, 0x604d, 0x1140, 0x4766, 0x8dd2, 0xdf49, 0x0, 0x1);
        gbc.writeMem(0xa8c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x604d);
        EXPECT(gbc.pc(), 0xa8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02A1
        gbc.setState(0xc862, 0xc84c, 0x6b0, 0x7962, 0x2059, 0x1fd9, 0x1, 0x0);
        gbc.writeMem(0xc862, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc84c);
        EXPECT(gbc.pc(), 0xc864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc862), 0xcb);
        EXPECT(gbc.readMem(0xc863), 0xdf);
        // CB DF 02A2
        gbc.setState(0x4765, 0x5ee7, 0x63e0, 0x8626, 0xa2f8, 0x2def, 0x0, 0x0);
        gbc.writeMem(0x4765, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5ee7);
        EXPECT(gbc.pc(), 0x4767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02A3
        gbc.setState(0xb745, 0xf217, 0xf2e0, 0x6be3, 0x1582, 0x458f, 0x1, 0x1);
        gbc.writeMem(0xb745, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf217);
        EXPECT(gbc.pc(), 0xb747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb745), 0xcb);
        EXPECT(gbc.readMem(0xb746), 0xdf);
        // CB DF 02A4
        gbc.setState(0xadf2, 0x8631, 0xef70, 0xf171, 0xa6ae, 0x9440, 0x0, 0x1);
        gbc.writeMem(0xadf2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8631);
        EXPECT(gbc.pc(), 0xadf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf2), 0xcb);
        EXPECT(gbc.readMem(0xadf3), 0xdf);
        // CB DF 02A5
        gbc.setState(0x8be6, 0xc2ec, 0xdb40, 0xa77d, 0xd5fb, 0xd6b, 0x1, 0x0);
        gbc.writeMem(0x8be6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc2ec);
        EXPECT(gbc.pc(), 0x8be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be6), 0xcb);
        EXPECT(gbc.readMem(0x8be7), 0xdf);
        // CB DF 02A6
        gbc.setState(0xa583, 0x2778, 0x2360, 0x6661, 0xfea0, 0xa925, 0x1, 0x0);
        gbc.writeMem(0xa583, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2778);
        EXPECT(gbc.pc(), 0xa585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa583), 0xcb);
        EXPECT(gbc.readMem(0xa584), 0xdf);
        // CB DF 02A7
        gbc.setState(0xe026, 0x16ae, 0xea10, 0x470f, 0x455e, 0x8195, 0x1, 0x0);
        gbc.writeMem(0xe026, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x16ae);
        EXPECT(gbc.pc(), 0xe028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe026), 0xcb);
        EXPECT(gbc.readMem(0xe027), 0xdf);
        // CB DF 02A8
        gbc.setState(0x537b, 0xf271, 0xa040, 0x93e3, 0xd99c, 0xf7c, 0x1, 0x1);
        gbc.writeMem(0x537b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf271);
        EXPECT(gbc.pc(), 0x537d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02A9
        gbc.setState(0xa617, 0xf99f, 0x7db0, 0x6064, 0xce9a, 0x573c, 0x0, 0x0);
        gbc.writeMem(0xa617, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf99f);
        EXPECT(gbc.pc(), 0xa619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa617), 0xcb);
        EXPECT(gbc.readMem(0xa618), 0xdf);
        // CB DF 02AA
        gbc.setState(0x9075, 0xdf0a, 0xd310, 0x437a, 0x158e, 0xfc74, 0x0, 0x0);
        gbc.writeMem(0x9075, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xdf0a);
        EXPECT(gbc.pc(), 0x9077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9075), 0xcb);
        EXPECT(gbc.readMem(0x9076), 0xdf);
        // CB DF 02AB
        gbc.setState(0x3d99, 0xe9f4, 0x7f80, 0x73ed, 0x9a9, 0xfec8, 0x1, 0x0);
        gbc.writeMem(0x3d99, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe9f4);
        EXPECT(gbc.pc(), 0x3d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02AC
        gbc.setState(0x64ff, 0xa47f, 0x3b60, 0xec2b, 0x1ac, 0x29d0, 0x1, 0x1);
        gbc.writeMem(0x64ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa47f);
        EXPECT(gbc.pc(), 0x6501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02AD
        gbc.setState(0x56b7, 0xa21f, 0x1920, 0x1ed1, 0x8279, 0x99a0, 0x1, 0x0);
        gbc.writeMem(0x56b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa21f);
        EXPECT(gbc.pc(), 0x56b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02AE
        gbc.setState(0x758, 0x43b5, 0x26e0, 0x6efe, 0x37c9, 0xe7bd, 0x1, 0x1);
        gbc.writeMem(0x758, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x43b5);
        EXPECT(gbc.pc(), 0x75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02AF
        gbc.setState(0x89a7, 0xda9a, 0x70d0, 0x4187, 0x8eff, 0xcdc3, 0x0, 0x0);
        gbc.writeMem(0x89a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xda9a);
        EXPECT(gbc.pc(), 0x89a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a7), 0xcb);
        EXPECT(gbc.readMem(0x89a8), 0xdf);
        // CB DF 02B0
        gbc.setState(0xa47a, 0x7696, 0xe960, 0x2413, 0x432c, 0x3913, 0x1, 0x0);
        gbc.writeMem(0xa47a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7696);
        EXPECT(gbc.pc(), 0xa47c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa47a), 0xcb);
        EXPECT(gbc.readMem(0xa47b), 0xdf);
        // CB DF 02B1
        gbc.setState(0x5b35, 0xd50f, 0xb0a0, 0x5782, 0xa081, 0xda68, 0x1, 0x0);
        gbc.writeMem(0x5b35, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd50f);
        EXPECT(gbc.pc(), 0x5b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02B2
        gbc.setState(0xb74f, 0x6bfd, 0xd8d0, 0xae49, 0xcfbe, 0xf70b, 0x1, 0x0);
        gbc.writeMem(0xb74f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6bfd);
        EXPECT(gbc.pc(), 0xb751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb74f), 0xcb);
        EXPECT(gbc.readMem(0xb750), 0xdf);
        // CB DF 02B3
        gbc.setState(0xd4b2, 0x5e28, 0x1e00, 0x3036, 0xee11, 0x2014, 0x1, 0x0);
        gbc.writeMem(0xd4b2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5e28);
        EXPECT(gbc.pc(), 0xd4b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b2), 0xcb);
        EXPECT(gbc.readMem(0xd4b3), 0xdf);
        // CB DF 02B4
        gbc.setState(0x3d08, 0x71c7, 0xeb40, 0x5fef, 0xaa2d, 0x1839, 0x1, 0x0);
        gbc.writeMem(0x3d08, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x71c7);
        EXPECT(gbc.pc(), 0x3d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02B5
        gbc.setState(0x2bf7, 0x3564, 0x6110, 0xa446, 0x1ce3, 0xa944, 0x1, 0x0);
        gbc.writeMem(0x2bf7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3564);
        EXPECT(gbc.pc(), 0x2bf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02B6
        gbc.setState(0x632c, 0xec4f, 0x1730, 0x58d6, 0x904e, 0x8d08, 0x0, 0x1);
        gbc.writeMem(0x632c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xec4f);
        EXPECT(gbc.pc(), 0x632e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02B7
        gbc.setState(0xc56c, 0xa81a, 0x1530, 0x7465, 0x3b30, 0xdaaf, 0x1, 0x1);
        gbc.writeMem(0xc56c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa81a);
        EXPECT(gbc.pc(), 0xc56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56c), 0xcb);
        EXPECT(gbc.readMem(0xc56d), 0xdf);
        // CB DF 02B8
        gbc.setState(0xe4fa, 0xb11c, 0x6030, 0xd710, 0x5baa, 0x602, 0x0, 0x0);
        gbc.writeMem(0xe4fa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb11c);
        EXPECT(gbc.pc(), 0xe4fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4fa), 0xcb);
        EXPECT(gbc.readMem(0xe4fb), 0xdf);
        // CB DF 02B9
        gbc.setState(0x549c, 0xed9e, 0xa020, 0x988c, 0xd203, 0x867d, 0x1, 0x0);
        gbc.writeMem(0x549c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xed9e);
        EXPECT(gbc.pc(), 0x549e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02BA
        gbc.setState(0xa7dd, 0xe716, 0x9c10, 0xd905, 0x9e55, 0x21f2, 0x1, 0x0);
        gbc.writeMem(0xa7dd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe716);
        EXPECT(gbc.pc(), 0xa7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7dd), 0xcb);
        EXPECT(gbc.readMem(0xa7de), 0xdf);
        // CB DF 02BB
        gbc.setState(0x3d19, 0x79d5, 0xb880, 0x7b95, 0xc5b5, 0xc4d4, 0x1, 0x0);
        gbc.writeMem(0x3d19, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x79d5);
        EXPECT(gbc.pc(), 0x3d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02BC
        gbc.setState(0x4e80, 0x3a4d, 0x7240, 0xbca7, 0xcded, 0x27a5, 0x1, 0x0);
        gbc.writeMem(0x4e80, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3a4d);
        EXPECT(gbc.pc(), 0x4e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02BE
        gbc.setState(0x27ad, 0xd4e5, 0xbe20, 0xbdc1, 0xe73f, 0x985, 0x0, 0x1);
        gbc.writeMem(0x27ad, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd4e5);
        EXPECT(gbc.pc(), 0x27af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02C0
        gbc.setState(0x61fd, 0x8a6d, 0xcb30, 0x9a85, 0xb068, 0x4ea3, 0x1, 0x1);
        gbc.writeMem(0x61fd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8a6d);
        EXPECT(gbc.pc(), 0x61ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02C1
        gbc.setState(0x61ea, 0xd798, 0x4f0, 0xca24, 0x69a5, 0xd5fe, 0x1, 0x1);
        gbc.writeMem(0x61ea, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd798);
        EXPECT(gbc.pc(), 0x61ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02C2
        gbc.setState(0x8868, 0xdffb, 0xcc70, 0x982f, 0x523e, 0x1dca, 0x0, 0x0);
        gbc.writeMem(0x8868, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdffb);
        EXPECT(gbc.pc(), 0x886a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8868), 0xcb);
        EXPECT(gbc.readMem(0x8869), 0xdf);
        // CB DF 02C4
        gbc.setState(0x5abc, 0xd919, 0xa960, 0x479d, 0xffdd, 0x2740, 0x0, 0x0);
        gbc.writeMem(0x5abc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd919);
        EXPECT(gbc.pc(), 0x5abe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02C5
        gbc.setState(0x7edf, 0x841d, 0x3190, 0xffc2, 0xb1c9, 0xf7fe, 0x1, 0x0);
        gbc.writeMem(0x7edf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x841d);
        EXPECT(gbc.pc(), 0x7ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02C6
        gbc.setState(0x79c2, 0x2602, 0x3d70, 0x2b75, 0x4867, 0xb091, 0x1, 0x0);
        gbc.writeMem(0x79c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2602);
        EXPECT(gbc.pc(), 0x79c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02C8
        gbc.setState(0x911, 0xf528, 0xb440, 0xe820, 0x4721, 0x8393, 0x1, 0x0);
        gbc.writeMem(0x911, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf528);
        EXPECT(gbc.pc(), 0x913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02C9
        gbc.setState(0x4f7f, 0x725, 0x5ce0, 0xc377, 0x9d72, 0x6e3b, 0x1, 0x1);
        gbc.writeMem(0x4f7f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x725);
        EXPECT(gbc.pc(), 0x4f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02CA
        gbc.setState(0x69a7, 0xaa41, 0xce10, 0xa28b, 0x1c52, 0xfd83, 0x1, 0x0);
        gbc.writeMem(0x69a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xaa41);
        EXPECT(gbc.pc(), 0x69a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02CC
        gbc.setState(0x5d82, 0x1175, 0x1320, 0x8915, 0xc2eb, 0x7bac, 0x1, 0x0);
        gbc.writeMem(0x5d82, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1175);
        EXPECT(gbc.pc(), 0x5d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02CD
        gbc.setState(0xe5e9, 0x8521, 0x4b90, 0xcd49, 0xa70f, 0xc324, 0x0, 0x0);
        gbc.writeMem(0xe5e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8521);
        EXPECT(gbc.pc(), 0xe5eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e9), 0xcb);
        EXPECT(gbc.readMem(0xe5ea), 0xdf);
        // CB DF 02CE
        gbc.setState(0x26f5, 0x2365, 0x3de0, 0x9ce0, 0xa13f, 0xece4, 0x0, 0x1);
        gbc.writeMem(0x26f5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2365);
        EXPECT(gbc.pc(), 0x26f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02CF
        gbc.setState(0x1678, 0xdc1a, 0xab0, 0xf68d, 0x4618, 0xe2ce, 0x0, 0x1);
        gbc.writeMem(0x1678, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdc1a);
        EXPECT(gbc.pc(), 0x167a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02D0
        gbc.setState(0x5461, 0x7546, 0x2d00, 0xab4d, 0x9cbd, 0xd7cf, 0x0, 0x0);
        gbc.writeMem(0x5461, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7546);
        EXPECT(gbc.pc(), 0x5463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02D1
        gbc.setState(0xdf79, 0xa5f1, 0xd30, 0x42c4, 0x86cf, 0x3c86, 0x0, 0x1);
        gbc.writeMem(0xdf79, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa5f1);
        EXPECT(gbc.pc(), 0xdf7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf79), 0xcb);
        EXPECT(gbc.readMem(0xdf7a), 0xdf);
        // CB DF 02D2
        gbc.setState(0x9f8d, 0x4fe, 0xd730, 0xc06f, 0x6439, 0x14d4, 0x1, 0x1);
        gbc.writeMem(0x9f8d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4fe);
        EXPECT(gbc.pc(), 0x9f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f8d), 0xcb);
        EXPECT(gbc.readMem(0x9f8e), 0xdf);
        // CB DF 02D3
        gbc.setState(0xa3d, 0x1951, 0x2740, 0x23dd, 0xf3bf, 0xf480, 0x0, 0x0);
        gbc.writeMem(0xa3d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1951);
        EXPECT(gbc.pc(), 0xa3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02D4
        gbc.setState(0x9348, 0xa437, 0x5680, 0x9d6f, 0xc646, 0x8a12, 0x0, 0x0);
        gbc.writeMem(0x9348, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa437);
        EXPECT(gbc.pc(), 0x934a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9348), 0xcb);
        EXPECT(gbc.readMem(0x9349), 0xdf);
        // CB DF 02D5
        gbc.setState(0x4578, 0x85bd, 0x93c0, 0x67d7, 0xab47, 0x10ba, 0x1, 0x1);
        gbc.writeMem(0x4578, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x85bd);
        EXPECT(gbc.pc(), 0x457a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02D6
        gbc.setState(0x3263, 0xf14e, 0xe900, 0x831, 0x9c, 0x2754, 0x1, 0x0);
        gbc.writeMem(0x3263, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf14e);
        EXPECT(gbc.pc(), 0x3265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02D7
        gbc.setState(0xd065, 0xfb4b, 0x11e0, 0x91fb, 0x4e1e, 0x4cd1, 0x0, 0x1);
        gbc.writeMem(0xd065, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xfb4b);
        EXPECT(gbc.pc(), 0xd067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd065), 0xcb);
        EXPECT(gbc.readMem(0xd066), 0xdf);
        // CB DF 02DA
        gbc.setState(0xe370, 0xf048, 0x54c0, 0x5539, 0x1dbc, 0xcfa1, 0x1, 0x1);
        gbc.writeMem(0xe370, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf048);
        EXPECT(gbc.pc(), 0xe372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe370), 0xcb);
        EXPECT(gbc.readMem(0xe371), 0xdf);
        // CB DF 02DB
        gbc.setState(0x6edf, 0xc4db, 0xcbc0, 0x76e4, 0xf8c2, 0xbc2f, 0x1, 0x1);
        gbc.writeMem(0x6edf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc4db);
        EXPECT(gbc.pc(), 0x6ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02DC
        gbc.setState(0xee2b, 0x49e8, 0xcc90, 0x8490, 0x190, 0xbc91, 0x0, 0x1);
        gbc.writeMem(0xee2b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x49e8);
        EXPECT(gbc.pc(), 0xee2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2b), 0xcb);
        EXPECT(gbc.readMem(0xee2c), 0xdf);
        // CB DF 02DD
        gbc.setState(0x6b8f, 0xbab3, 0x3e70, 0xf222, 0xbdc3, 0xd077, 0x0, 0x1);
        gbc.writeMem(0x6b8f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xbab3);
        EXPECT(gbc.pc(), 0x6b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02DF
        gbc.setState(0xdf23, 0x2bb2, 0xcec0, 0xd5db, 0x7f88, 0xe1c4, 0x1, 0x1);
        gbc.writeMem(0xdf23, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2bb2);
        EXPECT(gbc.pc(), 0xdf25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf23), 0xcb);
        EXPECT(gbc.readMem(0xdf24), 0xdf);
        // CB DF 02E1
        gbc.setState(0xa674, 0xc9a7, 0x80b0, 0x4ca8, 0x9018, 0x1a19, 0x0, 0x1);
        gbc.writeMem(0xa674, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc9a7);
        EXPECT(gbc.pc(), 0xa676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa674), 0xcb);
        EXPECT(gbc.readMem(0xa675), 0xdf);
        // CB DF 02E2
        gbc.setState(0x2112, 0x300e, 0x8bc0, 0x49c8, 0x776a, 0x8711, 0x0, 0x1);
        gbc.writeMem(0x2112, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x300e);
        EXPECT(gbc.pc(), 0x2114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02E3
        gbc.setState(0x449c, 0x12f1, 0x4060, 0xd3e2, 0xf9fe, 0x36de, 0x1, 0x0);
        gbc.writeMem(0x449c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x12f1);
        EXPECT(gbc.pc(), 0x449e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02E4
        gbc.setState(0x6ead, 0x5bbb, 0xddf0, 0xbd1c, 0xa594, 0xd491, 0x0, 0x1);
        gbc.writeMem(0x6ead, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5bbb);
        EXPECT(gbc.pc(), 0x6eaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02E5
        gbc.setState(0xc5ba, 0x96f6, 0x7a50, 0x4724, 0xa864, 0xf6ac, 0x1, 0x1);
        gbc.writeMem(0xc5ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x96f6);
        EXPECT(gbc.pc(), 0xc5bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ba), 0xcb);
        EXPECT(gbc.readMem(0xc5bb), 0xdf);
        // CB DF 02E6
        gbc.setState(0x15cb, 0x4e76, 0x2b10, 0x8b49, 0xac57, 0xe39f, 0x1, 0x0);
        gbc.writeMem(0x15cb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4e76);
        EXPECT(gbc.pc(), 0x15cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02E7
        gbc.setState(0x9234, 0xe08e, 0xa6d0, 0x96c3, 0xb67a, 0xd22c, 0x0, 0x0);
        gbc.writeMem(0x9234, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe08e);
        EXPECT(gbc.pc(), 0x9236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9234), 0xcb);
        EXPECT(gbc.readMem(0x9235), 0xdf);
        // CB DF 02E8
        gbc.setState(0x103d, 0x9f4c, 0x4960, 0xa040, 0x2d40, 0x1e4c, 0x1, 0x1);
        gbc.writeMem(0x103d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9f4c);
        EXPECT(gbc.pc(), 0x103f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02E9
        gbc.setState(0x2276, 0xf076, 0x89e0, 0xc285, 0xf279, 0x194d, 0x0, 0x1);
        gbc.writeMem(0x2276, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf076);
        EXPECT(gbc.pc(), 0x2278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 02EA
        gbc.setState(0xdee7, 0x90ac, 0x1af0, 0x36f2, 0x4de3, 0x58ca, 0x1, 0x1);
        gbc.writeMem(0xdee7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x90ac);
        EXPECT(gbc.pc(), 0xdee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee7), 0xcb);
        EXPECT(gbc.readMem(0xdee8), 0xdf);
        // CB DF 02EB
        gbc.setState(0x548d, 0x4e17, 0xb590, 0xbcef, 0xe34f, 0xa18e, 0x1, 0x1);
        gbc.writeMem(0x548d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4e17);
        EXPECT(gbc.pc(), 0x548f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02EC
        gbc.setState(0xc53c, 0x5100, 0x1910, 0x3473, 0x8782, 0x6b8b, 0x1, 0x1);
        gbc.writeMem(0xc53c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5100);
        EXPECT(gbc.pc(), 0xc53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc53c), 0xcb);
        EXPECT(gbc.readMem(0xc53d), 0xdf);
        // CB DF 02ED
        gbc.setState(0xe3c2, 0xd900, 0xe7b0, 0x831f, 0xaa22, 0x7d44, 0x1, 0x0);
        gbc.writeMem(0xe3c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd900);
        EXPECT(gbc.pc(), 0xe3c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3c2), 0xcb);
        EXPECT(gbc.readMem(0xe3c3), 0xdf);
        // CB DF 02EE
        gbc.setState(0xd922, 0xfde9, 0x9f00, 0xcd39, 0x476b, 0xcb5a, 0x0, 0x1);
        gbc.writeMem(0xd922, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfde9);
        EXPECT(gbc.pc(), 0xd924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd922), 0xcb);
        EXPECT(gbc.readMem(0xd923), 0xdf);
        // CB DF 02EF
        gbc.setState(0x82ac, 0x5d59, 0x3e70, 0xe68f, 0xc473, 0x801f, 0x0, 0x0);
        gbc.writeMem(0x82ac, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5d59);
        EXPECT(gbc.pc(), 0x82ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ac), 0xcb);
        EXPECT(gbc.readMem(0x82ad), 0xdf);
        // CB DF 02F0
        gbc.setState(0xc482, 0x4639, 0xe6a0, 0x3076, 0xac19, 0x2a3f, 0x1, 0x1);
        gbc.writeMem(0xc482, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4639);
        EXPECT(gbc.pc(), 0xc484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc482), 0xcb);
        EXPECT(gbc.readMem(0xc483), 0xdf);
        // CB DF 02F1
        gbc.setState(0x6ee1, 0xb3cc, 0x39f0, 0xeecb, 0x7e06, 0xca4f, 0x1, 0x1);
        gbc.writeMem(0x6ee1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb3cc);
        EXPECT(gbc.pc(), 0x6ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02F2
        gbc.setState(0xe9f7, 0x6c3f, 0xc4f0, 0xfda0, 0x5f16, 0x8e70, 0x1, 0x0);
        gbc.writeMem(0xe9f7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6c3f);
        EXPECT(gbc.pc(), 0xe9f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f7), 0xcb);
        EXPECT(gbc.readMem(0xe9f8), 0xdf);
        // CB DF 02F3
        gbc.setState(0x8d0b, 0x1d4f, 0x3600, 0x9479, 0xec1e, 0xb233, 0x1, 0x1);
        gbc.writeMem(0x8d0b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1d4f);
        EXPECT(gbc.pc(), 0x8d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0b), 0xcb);
        EXPECT(gbc.readMem(0x8d0c), 0xdf);
        // CB DF 02F4
        gbc.setState(0xea8e, 0xc974, 0xf10, 0xfa0e, 0x38fa, 0x7b54, 0x0, 0x1);
        gbc.writeMem(0xea8e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc974);
        EXPECT(gbc.pc(), 0xea90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8e), 0xcb);
        EXPECT(gbc.readMem(0xea8f), 0xdf);
        // CB DF 02F5
        gbc.setState(0xea7a, 0xdf90, 0x9930, 0x3d41, 0xe49a, 0x35ab, 0x1, 0x0);
        gbc.writeMem(0xea7a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdf90);
        EXPECT(gbc.pc(), 0xea7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7a), 0xcb);
        EXPECT(gbc.readMem(0xea7b), 0xdf);
        // CB DF 02F6
        gbc.setState(0x3f03, 0x7280, 0xe30, 0xed8d, 0xa4d0, 0x1038, 0x1, 0x1);
        gbc.writeMem(0x3f03, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7280);
        EXPECT(gbc.pc(), 0x3f05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02F7
        gbc.setState(0xe73c, 0xa04a, 0x20d0, 0x9e65, 0xb00c, 0xa855, 0x1, 0x1);
        gbc.writeMem(0xe73c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa04a);
        EXPECT(gbc.pc(), 0xe73e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73c), 0xcb);
        EXPECT(gbc.readMem(0xe73d), 0xdf);
        // CB DF 02F8
        gbc.setState(0x4b16, 0x149e, 0x7b30, 0x4dcc, 0xf389, 0xfc4a, 0x0, 0x1);
        gbc.writeMem(0x4b16, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x149e);
        EXPECT(gbc.pc(), 0x4b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02F9
        gbc.setState(0xca67, 0xe9db, 0x6d00, 0xa3ac, 0x7da9, 0xfe0b, 0x0, 0x1);
        gbc.writeMem(0xca67, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe9db);
        EXPECT(gbc.pc(), 0xca69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca67), 0xcb);
        EXPECT(gbc.readMem(0xca68), 0xdf);
        // CB DF 02FA
        gbc.setState(0x8b12, 0x248b, 0xc60, 0xfa0d, 0xf4e2, 0xcdc3, 0x1, 0x0);
        gbc.writeMem(0x8b12, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x248b);
        EXPECT(gbc.pc(), 0x8b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b12), 0xcb);
        EXPECT(gbc.readMem(0x8b13), 0xdf);
        // CB DF 02FB
        gbc.setState(0x80cb, 0x9098, 0x8060, 0x998e, 0xdb4f, 0x51c1, 0x0, 0x1);
        gbc.writeMem(0x80cb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9098);
        EXPECT(gbc.pc(), 0x80cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80cb), 0xcb);
        EXPECT(gbc.readMem(0x80cc), 0xdf);
        // CB DF 02FC
        gbc.setState(0xded, 0xcca9, 0xe550, 0xc3b, 0x86da, 0x5eb4, 0x0, 0x1);
        gbc.writeMem(0xded, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcca9);
        EXPECT(gbc.pc(), 0xdef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02FD
        gbc.setState(0x1b1c, 0x35cd, 0x57f0, 0xcf16, 0x9c2d, 0xd72c, 0x0, 0x1);
        gbc.writeMem(0x1b1c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x35cd);
        EXPECT(gbc.pc(), 0x1b1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 02FE
        gbc.setState(0x92cf, 0x1756, 0xcf0, 0x2891, 0xe9ac, 0x8425, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1756);
        EXPECT(gbc.pc(), 0x92d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cf), 0xcb);
        EXPECT(gbc.readMem(0x92d0), 0xdf);
        // CB DF 02FF
        gbc.setState(0xaf70, 0x6ae0, 0xf830, 0x15d5, 0x9cf0, 0x422a, 0x0, 0x1);
        gbc.writeMem(0xaf70, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6ae0);
        EXPECT(gbc.pc(), 0xaf72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf70), 0xcb);
        EXPECT(gbc.readMem(0xaf71), 0xdf);
        // CB DF 0300
        gbc.setState(0xd817, 0x2b92, 0x5ff0, 0x46cc, 0xee23, 0xfb60, 0x0, 0x1);
        gbc.writeMem(0xd817, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2b92);
        EXPECT(gbc.pc(), 0xd819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd817), 0xcb);
        EXPECT(gbc.readMem(0xd818), 0xdf);
        // CB DF 0301
        gbc.setState(0x62f6, 0x3af2, 0x4b40, 0xf9be, 0x60c8, 0x67dc, 0x1, 0x0);
        gbc.writeMem(0x62f6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3af2);
        EXPECT(gbc.pc(), 0x62f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0302
        gbc.setState(0x4033, 0xd8f8, 0xff10, 0x1986, 0xd0d3, 0xd92e, 0x1, 0x0);
        gbc.writeMem(0x4033, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd8f8);
        EXPECT(gbc.pc(), 0x4035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0303
        gbc.setState(0x357a, 0x881f, 0x3710, 0x826c, 0xf668, 0xdcc2, 0x0, 0x0);
        gbc.writeMem(0x357a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x881f);
        EXPECT(gbc.pc(), 0x357c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0304
        gbc.setState(0x2694, 0xfbbf, 0x9020, 0xccb0, 0x7e16, 0x223e, 0x0, 0x0);
        gbc.writeMem(0x2694, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfbbf);
        EXPECT(gbc.pc(), 0x2696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0305
        gbc.setState(0x90db, 0x2492, 0xb160, 0x74b, 0x5a54, 0x9fde, 0x0, 0x0);
        gbc.writeMem(0x90db, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2492);
        EXPECT(gbc.pc(), 0x90dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90db), 0xcb);
        EXPECT(gbc.readMem(0x90dc), 0xdf);
        // CB DF 0306
        gbc.setState(0x2fa6, 0x8db7, 0x6290, 0x8abf, 0xe65d, 0x5b61, 0x1, 0x0);
        gbc.writeMem(0x2fa6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8db7);
        EXPECT(gbc.pc(), 0x2fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0307
        gbc.setState(0xe1d8, 0xf635, 0xe260, 0x8933, 0x6594, 0x2b02, 0x1, 0x0);
        gbc.writeMem(0xe1d8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf635);
        EXPECT(gbc.pc(), 0xe1da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d8), 0xcb);
        EXPECT(gbc.readMem(0xe1d9), 0xdf);
        // CB DF 0308
        gbc.setState(0x1ff9, 0x18a9, 0x2730, 0x7772, 0x2d5a, 0xd9e9, 0x1, 0x0);
        gbc.writeMem(0x1ff9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x18a9);
        EXPECT(gbc.pc(), 0x1ffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0309
        gbc.setState(0xb77a, 0x563, 0x6a90, 0x249f, 0x55df, 0xff0, 0x0, 0x1);
        gbc.writeMem(0xb77a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x563);
        EXPECT(gbc.pc(), 0xb77c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77a), 0xcb);
        EXPECT(gbc.readMem(0xb77b), 0xdf);
        // CB DF 030A
        gbc.setState(0x26a5, 0x1111, 0xde30, 0xb924, 0x3300, 0x631c, 0x1, 0x1);
        gbc.writeMem(0x26a5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1111);
        EXPECT(gbc.pc(), 0x26a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 030B
        gbc.setState(0x993a, 0x42a2, 0x9a30, 0x7d51, 0xa59a, 0x927f, 0x1, 0x0);
        gbc.writeMem(0x993a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x42a2);
        EXPECT(gbc.pc(), 0x993c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993a), 0xcb);
        EXPECT(gbc.readMem(0x993b), 0xdf);
        // CB DF 030C
        gbc.setState(0xb936, 0x6bce, 0xf360, 0x1ba6, 0x3114, 0x193b, 0x1, 0x1);
        gbc.writeMem(0xb936, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6bce);
        EXPECT(gbc.pc(), 0xb938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb936), 0xcb);
        EXPECT(gbc.readMem(0xb937), 0xdf);
        // CB DF 030D
        gbc.setState(0x58e1, 0x6a16, 0x5290, 0xb43b, 0xe3ee, 0xf3fe, 0x0, 0x1);
        gbc.writeMem(0x58e1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6a16);
        EXPECT(gbc.pc(), 0x58e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 030E
        gbc.setState(0x8007, 0x36dd, 0xc500, 0x4028, 0x2923, 0xfe2f, 0x0, 0x0);
        gbc.writeMem(0x8007, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x36dd);
        EXPECT(gbc.pc(), 0x8009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8007), 0xcb);
        EXPECT(gbc.readMem(0x8008), 0xdf);
        // CB DF 030F
        gbc.setState(0x5fd6, 0xcd52, 0x45f0, 0x7bdd, 0xe0cb, 0x62ce, 0x0, 0x0);
        gbc.writeMem(0x5fd6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcd52);
        EXPECT(gbc.pc(), 0x5fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0310
        gbc.setState(0xaf7, 0xa2e9, 0xaf0, 0xa73a, 0x183, 0xf473, 0x0, 0x1);
        gbc.writeMem(0xaf7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa2e9);
        EXPECT(gbc.pc(), 0xaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0311
        gbc.setState(0x878e, 0x25d7, 0xe670, 0xeff7, 0x3e57, 0xeb76, 0x0, 0x0);
        gbc.writeMem(0x878e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x25d7);
        EXPECT(gbc.pc(), 0x8790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x878e), 0xcb);
        EXPECT(gbc.readMem(0x878f), 0xdf);
        // CB DF 0312
        gbc.setState(0x65e, 0xece, 0x2630, 0x5231, 0xf1cc, 0x91bd, 0x1, 0x1);
        gbc.writeMem(0x65e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xece);
        EXPECT(gbc.pc(), 0x660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0313
        gbc.setState(0x57cc, 0x3705, 0x84d0, 0x30d4, 0xc0c1, 0x45ee, 0x1, 0x0);
        gbc.writeMem(0x57cc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3705);
        EXPECT(gbc.pc(), 0x57ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0314
        gbc.setState(0xa74d, 0x71bc, 0x3f10, 0xbb28, 0x67c2, 0x3d9c, 0x1, 0x1);
        gbc.writeMem(0xa74d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x71bc);
        EXPECT(gbc.pc(), 0xa74f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74d), 0xcb);
        EXPECT(gbc.readMem(0xa74e), 0xdf);
        // CB DF 0315
        gbc.setState(0xbcfe, 0x470c, 0x30f0, 0x8f18, 0xa3a0, 0x473e, 0x0, 0x0);
        gbc.writeMem(0xbcfe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x470c);
        EXPECT(gbc.pc(), 0xbd00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcfe), 0xcb);
        EXPECT(gbc.readMem(0xbcff), 0xdf);
        // CB DF 0316
        gbc.setState(0xaef2, 0x3b43, 0xc2e0, 0xf500, 0x9ce3, 0xe935, 0x1, 0x0);
        gbc.writeMem(0xaef2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3b43);
        EXPECT(gbc.pc(), 0xaef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef2), 0xcb);
        EXPECT(gbc.readMem(0xaef3), 0xdf);
        // CB DF 0317
        gbc.setState(0x5de5, 0x7452, 0x8ec0, 0x3b39, 0x4012, 0xf295, 0x1, 0x1);
        gbc.writeMem(0x5de5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7452);
        EXPECT(gbc.pc(), 0x5de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0318
        gbc.setState(0x3c50, 0x3bb7, 0xfb80, 0x5efd, 0x3268, 0x767a, 0x1, 0x0);
        gbc.writeMem(0x3c50, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3bb7);
        EXPECT(gbc.pc(), 0x3c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0319
        gbc.setState(0x48f4, 0x5687, 0xb920, 0xf725, 0x664d, 0x9152, 0x1, 0x0);
        gbc.writeMem(0x48f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5687);
        EXPECT(gbc.pc(), 0x48f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 031A
        gbc.setState(0x13d1, 0xfbbe, 0x1e50, 0x5213, 0x5efd, 0x8978, 0x0, 0x0);
        gbc.writeMem(0x13d1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfbbe);
        EXPECT(gbc.pc(), 0x13d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 031B
        gbc.setState(0xb219, 0x235, 0x8b20, 0x45b4, 0x3fe3, 0x35ca, 0x1, 0x1);
        gbc.writeMem(0xb219, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x235);
        EXPECT(gbc.pc(), 0xb21b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb219), 0xcb);
        EXPECT(gbc.readMem(0xb21a), 0xdf);
        // CB DF 031C
        gbc.setState(0xcc64, 0x2376, 0x5dd0, 0x8a67, 0x5d70, 0xe5d2, 0x1, 0x0);
        gbc.writeMem(0xcc64, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2376);
        EXPECT(gbc.pc(), 0xcc66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc64), 0xcb);
        EXPECT(gbc.readMem(0xcc65), 0xdf);
        // CB DF 031D
        gbc.setState(0x2e3d, 0x332b, 0x5f0, 0xa4fb, 0x5dbc, 0x29b1, 0x1, 0x0);
        gbc.writeMem(0x2e3d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x332b);
        EXPECT(gbc.pc(), 0x2e3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 031E
        gbc.setState(0x230d, 0x1c1, 0xfa00, 0x6328, 0x9398, 0xb745, 0x0, 0x0);
        gbc.writeMem(0x230d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1c1);
        EXPECT(gbc.pc(), 0x230f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 031F
        gbc.setState(0xe5d7, 0xb5cb, 0x4a0, 0x20f7, 0x1a01, 0x707e, 0x0, 0x0);
        gbc.writeMem(0xe5d7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb5cb);
        EXPECT(gbc.pc(), 0xe5d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d7), 0xcb);
        EXPECT(gbc.readMem(0xe5d8), 0xdf);
        // CB DF 0320
        gbc.setState(0x92e3, 0xe6a6, 0xa540, 0xb48a, 0xc31c, 0x7f31, 0x1, 0x1);
        gbc.writeMem(0x92e3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe6a6);
        EXPECT(gbc.pc(), 0x92e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e3), 0xcb);
        EXPECT(gbc.readMem(0x92e4), 0xdf);
        // CB DF 0321
        gbc.setState(0xc89b, 0xcdb3, 0x5ba0, 0x74e2, 0xe213, 0xe1ea, 0x0, 0x0);
        gbc.writeMem(0xc89b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcdb3);
        EXPECT(gbc.pc(), 0xc89d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc89b), 0xcb);
        EXPECT(gbc.readMem(0xc89c), 0xdf);
        // CB DF 0322
        gbc.setState(0xbb2f, 0x7190, 0xff50, 0x5c48, 0x7d0, 0x8bf6, 0x1, 0x0);
        gbc.writeMem(0xbb2f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7190);
        EXPECT(gbc.pc(), 0xbb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2f), 0xcb);
        EXPECT(gbc.readMem(0xbb30), 0xdf);
        // CB DF 0323
        gbc.setState(0x6343, 0x682a, 0xa790, 0x5d9c, 0x8930, 0x6a81, 0x0, 0x0);
        gbc.writeMem(0x6343, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x682a);
        EXPECT(gbc.pc(), 0x6345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0324
        gbc.setState(0x6ab5, 0x5b5e, 0x5120, 0xcb79, 0x3778, 0xcf6f, 0x1, 0x1);
        gbc.writeMem(0x6ab5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5b5e);
        EXPECT(gbc.pc(), 0x6ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0325
        gbc.setState(0x3fdd, 0x41c0, 0xfe30, 0x73c1, 0x3264, 0xede3, 0x1, 0x0);
        gbc.writeMem(0x3fdd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x41c0);
        EXPECT(gbc.pc(), 0x3fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0326
        gbc.setState(0x3880, 0xf480, 0x93b0, 0xc0a2, 0x601e, 0xb617, 0x0, 0x0);
        gbc.writeMem(0x3880, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf480);
        EXPECT(gbc.pc(), 0x3882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0327
        gbc.setState(0x8c9e, 0xcaa4, 0x8b90, 0x67d1, 0x12d5, 0x917c, 0x0, 0x0);
        gbc.writeMem(0x8c9e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcaa4);
        EXPECT(gbc.pc(), 0x8ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c9e), 0xcb);
        EXPECT(gbc.readMem(0x8c9f), 0xdf);
        // CB DF 0328
        gbc.setState(0x2b75, 0x7355, 0x9e00, 0x9d01, 0x3427, 0x4df2, 0x1, 0x0);
        gbc.writeMem(0x2b75, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7355);
        EXPECT(gbc.pc(), 0x2b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0329
        gbc.setState(0x34a4, 0x52c5, 0x8700, 0x2503, 0x9ad5, 0xbbdb, 0x0, 0x0);
        gbc.writeMem(0x34a4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x52c5);
        EXPECT(gbc.pc(), 0x34a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 032A
        gbc.setState(0xe4bb, 0xd0af, 0xa90, 0x19da, 0xba03, 0x25ab, 0x0, 0x1);
        gbc.writeMem(0xe4bb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd0af);
        EXPECT(gbc.pc(), 0xe4bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4bb), 0xcb);
        EXPECT(gbc.readMem(0xe4bc), 0xdf);
        // CB DF 032B
        gbc.setState(0xc8cf, 0xc7c4, 0x7720, 0x8d86, 0x930, 0x5b1c, 0x1, 0x0);
        gbc.writeMem(0xc8cf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc7c4);
        EXPECT(gbc.pc(), 0xc8d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8cf), 0xcb);
        EXPECT(gbc.readMem(0xc8d0), 0xdf);
        // CB DF 032C
        gbc.setState(0x130a, 0xdea, 0xb540, 0xff3a, 0x3f9c, 0xfcb, 0x1, 0x1);
        gbc.writeMem(0x130a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdea);
        EXPECT(gbc.pc(), 0x130c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 032D
        gbc.setState(0x67fa, 0x19d4, 0x4b60, 0xc998, 0xb072, 0xff08, 0x1, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x19d4);
        EXPECT(gbc.pc(), 0x67fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 032E
        gbc.setState(0xc8b4, 0x99ba, 0x43f0, 0x9553, 0x4eff, 0xa0e0, 0x0, 0x0);
        gbc.writeMem(0xc8b4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x99ba);
        EXPECT(gbc.pc(), 0xc8b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b4), 0xcb);
        EXPECT(gbc.readMem(0xc8b5), 0xdf);
        // CB DF 032F
        gbc.setState(0x8366, 0x9ccd, 0x94b0, 0x4827, 0x94eb, 0xba91, 0x0, 0x1);
        gbc.writeMem(0x8366, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9ccd);
        EXPECT(gbc.pc(), 0x8368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8366), 0xcb);
        EXPECT(gbc.readMem(0x8367), 0xdf);
        // CB DF 0330
        gbc.setState(0x9dbb, 0x8925, 0xd0a0, 0xb1e6, 0x4328, 0x2e32, 0x0, 0x1);
        gbc.writeMem(0x9dbb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8925);
        EXPECT(gbc.pc(), 0x9dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbb), 0xcb);
        EXPECT(gbc.readMem(0x9dbc), 0xdf);
        // CB DF 0331
        gbc.setState(0xc3d3, 0xaab4, 0xb6b0, 0x7dac, 0x865, 0x37d6, 0x0, 0x1);
        gbc.writeMem(0xc3d3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaab4);
        EXPECT(gbc.pc(), 0xc3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d3), 0xcb);
        EXPECT(gbc.readMem(0xc3d4), 0xdf);
        // CB DF 0332
        gbc.setState(0xbb1f, 0x799a, 0x8860, 0x57ce, 0x4d4d, 0x8bee, 0x0, 0x0);
        gbc.writeMem(0xbb1f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x799a);
        EXPECT(gbc.pc(), 0xbb21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb1f), 0xcb);
        EXPECT(gbc.readMem(0xbb20), 0xdf);
        // CB DF 0333
        gbc.setState(0x3273, 0x4cd5, 0x4860, 0x2561, 0x1442, 0xf76, 0x1, 0x0);
        gbc.writeMem(0x3273, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4cd5);
        EXPECT(gbc.pc(), 0x3275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0334
        gbc.setState(0xb89, 0x4238, 0x6b10, 0x981e, 0xed79, 0x8597, 0x0, 0x1);
        gbc.writeMem(0xb89, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4238);
        EXPECT(gbc.pc(), 0xb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0335
        gbc.setState(0xbe19, 0x150b, 0x47b0, 0x1339, 0xc0bd, 0x7a5b, 0x1, 0x1);
        gbc.writeMem(0xbe19, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x150b);
        EXPECT(gbc.pc(), 0xbe1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe19), 0xcb);
        EXPECT(gbc.readMem(0xbe1a), 0xdf);
        // CB DF 0337
        gbc.setState(0x3ccf, 0x8a69, 0x14f0, 0xa153, 0x8249, 0x1b29, 0x0, 0x0);
        gbc.writeMem(0x3ccf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8a69);
        EXPECT(gbc.pc(), 0x3cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0338
        gbc.setState(0x5e52, 0x27a4, 0xb4f0, 0xc2, 0x6f58, 0x38bd, 0x0, 0x0);
        gbc.writeMem(0x5e52, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x27a4);
        EXPECT(gbc.pc(), 0x5e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0339
        gbc.setState(0x3520, 0xaee4, 0xdcd0, 0xafe5, 0x2d78, 0xe0d9, 0x0, 0x0);
        gbc.writeMem(0x3520, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xaee4);
        EXPECT(gbc.pc(), 0x3522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 033A
        gbc.setState(0x7265, 0xbfb1, 0xd4b0, 0x4b52, 0x324, 0xf7b1, 0x1, 0x1);
        gbc.writeMem(0x7265, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbfb1);
        EXPECT(gbc.pc(), 0x7267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 033B
        gbc.setState(0x3d5c, 0xe4ec, 0x1290, 0xa08f, 0xfe38, 0xf1a4, 0x1, 0x1);
        gbc.writeMem(0x3d5c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe4ec);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 033C
        gbc.setState(0x1362, 0xcff2, 0x6120, 0x528a, 0xba7d, 0xdccd, 0x1, 0x1);
        gbc.writeMem(0x1362, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcff2);
        EXPECT(gbc.pc(), 0x1364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 033D
        gbc.setState(0x9b38, 0x6f78, 0x5b20, 0xa7be, 0x71c7, 0xef9b, 0x1, 0x1);
        gbc.writeMem(0x9b38, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6f78);
        EXPECT(gbc.pc(), 0x9b3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b38), 0xcb);
        EXPECT(gbc.readMem(0x9b39), 0xdf);
        // CB DF 033E
        gbc.setState(0x619a, 0xca31, 0xdec0, 0x7aac, 0x3efe, 0xfdb5, 0x0, 0x1);
        gbc.writeMem(0x619a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xca31);
        EXPECT(gbc.pc(), 0x619c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 033F
        gbc.setState(0xafd9, 0x3bb8, 0xea90, 0x9b7f, 0x5f2, 0x6cf9, 0x0, 0x1);
        gbc.writeMem(0xafd9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3bb8);
        EXPECT(gbc.pc(), 0xafdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd9), 0xcb);
        EXPECT(gbc.readMem(0xafda), 0xdf);
        // CB DF 0340
        gbc.setState(0xa437, 0x4e12, 0xa4f0, 0xdf39, 0x39e3, 0x3d9e, 0x0, 0x0);
        gbc.writeMem(0xa437, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4e12);
        EXPECT(gbc.pc(), 0xa439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa437), 0xcb);
        EXPECT(gbc.readMem(0xa438), 0xdf);
        // CB DF 0341
        gbc.setState(0x3116, 0x9e73, 0x6120, 0xb38e, 0xcc9c, 0xc177, 0x1, 0x0);
        gbc.writeMem(0x3116, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9e73);
        EXPECT(gbc.pc(), 0x3118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0342
        gbc.setState(0x87b2, 0xbbcc, 0xc8c0, 0x5967, 0x4593, 0x954a, 0x1, 0x0);
        gbc.writeMem(0x87b2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbbcc);
        EXPECT(gbc.pc(), 0x87b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b2), 0xcb);
        EXPECT(gbc.readMem(0x87b3), 0xdf);
        // CB DF 0343
        gbc.setState(0x7d1, 0x1e52, 0x380, 0xeee1, 0xb8fa, 0x2273, 0x0, 0x0);
        gbc.writeMem(0x7d1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1e52);
        EXPECT(gbc.pc(), 0x7d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0344
        gbc.setState(0xa692, 0x9f68, 0xda60, 0x3f5e, 0x38cd, 0xd998, 0x1, 0x1);
        gbc.writeMem(0xa692, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9f68);
        EXPECT(gbc.pc(), 0xa694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa692), 0xcb);
        EXPECT(gbc.readMem(0xa693), 0xdf);
        // CB DF 0345
        gbc.setState(0xbeb2, 0xa6d6, 0xede0, 0xc6eb, 0x3224, 0xf545, 0x1, 0x1);
        gbc.writeMem(0xbeb2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa6d6);
        EXPECT(gbc.pc(), 0xbeb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb2), 0xcb);
        EXPECT(gbc.readMem(0xbeb3), 0xdf);
        // CB DF 0346
        gbc.setState(0x5710, 0x2caa, 0x5f50, 0xf747, 0x9deb, 0x7672, 0x0, 0x1);
        gbc.writeMem(0x5710, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2caa);
        EXPECT(gbc.pc(), 0x5712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0347
        gbc.setState(0x704, 0x7fc6, 0x1950, 0x604d, 0xf5a3, 0x286b, 0x0, 0x0);
        gbc.writeMem(0x704, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7fc6);
        EXPECT(gbc.pc(), 0x706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0348
        gbc.setState(0xbdc7, 0x4fa, 0x2e70, 0xa4f7, 0xda3f, 0x2922, 0x0, 0x0);
        gbc.writeMem(0xbdc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4fa);
        EXPECT(gbc.pc(), 0xbdc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc7), 0xcb);
        EXPECT(gbc.readMem(0xbdc8), 0xdf);
        // CB DF 0349
        gbc.setState(0x2a67, 0xa72d, 0x1bb0, 0x3a82, 0x886c, 0x85, 0x0, 0x1);
        gbc.writeMem(0x2a67, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa72d);
        EXPECT(gbc.pc(), 0x2a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 034A
        gbc.setState(0x3fe6, 0xe096, 0xeaf0, 0x81fa, 0x4f71, 0x197a, 0x1, 0x0);
        gbc.writeMem(0x3fe6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe096);
        EXPECT(gbc.pc(), 0x3fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 034B
        gbc.setState(0xd423, 0x223c, 0xcaf0, 0xa2cc, 0x67b0, 0x2f86, 0x1, 0x0);
        gbc.writeMem(0xd423, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x223c);
        EXPECT(gbc.pc(), 0xd425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd423), 0xcb);
        EXPECT(gbc.readMem(0xd424), 0xdf);
        // CB DF 034C
        gbc.setState(0xd75a, 0x7b69, 0xe5d0, 0xdfcb, 0xc85, 0xf80e, 0x1, 0x1);
        gbc.writeMem(0xd75a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7b69);
        EXPECT(gbc.pc(), 0xd75c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75a), 0xcb);
        EXPECT(gbc.readMem(0xd75b), 0xdf);
        // CB DF 034D
        gbc.setState(0x8838, 0xf499, 0x6bb0, 0xda21, 0x3de2, 0xb596, 0x0, 0x0);
        gbc.writeMem(0x8838, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf499);
        EXPECT(gbc.pc(), 0x883a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8838), 0xcb);
        EXPECT(gbc.readMem(0x8839), 0xdf);
        // CB DF 034F
        gbc.setState(0x973e, 0xb16, 0x3ce0, 0xb0d7, 0xe1d2, 0xe88e, 0x1, 0x0);
        gbc.writeMem(0x973e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb16);
        EXPECT(gbc.pc(), 0x9740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973e), 0xcb);
        EXPECT(gbc.readMem(0x973f), 0xdf);
        // CB DF 0351
        gbc.setState(0x1382, 0xf44e, 0xa6d0, 0x8be4, 0xbf50, 0x2a2e, 0x0, 0x1);
        gbc.writeMem(0x1382, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf44e);
        EXPECT(gbc.pc(), 0x1384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0352
        gbc.setState(0x5fc8, 0x7a05, 0x6750, 0x5821, 0xfaf3, 0xb187, 0x0, 0x1);
        gbc.writeMem(0x5fc8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7a05);
        EXPECT(gbc.pc(), 0x5fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0353
        gbc.setState(0xdd4a, 0x6989, 0xc710, 0x6344, 0xded0, 0xf2a1, 0x0, 0x0);
        gbc.writeMem(0xdd4a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6989);
        EXPECT(gbc.pc(), 0xdd4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd4a), 0xcb);
        EXPECT(gbc.readMem(0xdd4b), 0xdf);
        // CB DF 0354
        gbc.setState(0xd329, 0x9208, 0x1850, 0x8d0, 0x9fa9, 0x47f9, 0x0, 0x0);
        gbc.writeMem(0xd329, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9208);
        EXPECT(gbc.pc(), 0xd32b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd329), 0xcb);
        EXPECT(gbc.readMem(0xd32a), 0xdf);
        // CB DF 0355
        gbc.setState(0xebda, 0xa247, 0x85f0, 0x9c47, 0x2b29, 0xdc47, 0x0, 0x0);
        gbc.writeMem(0xebda, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa247);
        EXPECT(gbc.pc(), 0xebdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebda), 0xcb);
        EXPECT(gbc.readMem(0xebdb), 0xdf);
        // CB DF 0356
        gbc.setState(0xb9df, 0xa10d, 0x1d60, 0xdf09, 0x9daa, 0x5a1a, 0x0, 0x0);
        gbc.writeMem(0xb9df, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa10d);
        EXPECT(gbc.pc(), 0xb9e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9df), 0xcb);
        EXPECT(gbc.readMem(0xb9e0), 0xdf);
        // CB DF 0357
        gbc.setState(0x393a, 0x283d, 0xed00, 0x7a27, 0xfb12, 0x7bfe, 0x1, 0x0);
        gbc.writeMem(0x393a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x283d);
        EXPECT(gbc.pc(), 0x393c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0358
        gbc.setState(0x25f9, 0x2358, 0xb070, 0xed95, 0x4f8a, 0xb400, 0x0, 0x0);
        gbc.writeMem(0x25f9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2358);
        EXPECT(gbc.pc(), 0x25fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0359
        gbc.setState(0xc7, 0x91c1, 0xea50, 0x39ea, 0xeaf3, 0x5fef, 0x1, 0x1);
        gbc.writeMem(0xc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x91c1);
        EXPECT(gbc.pc(), 0xc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 035A
        gbc.setState(0x9570, 0x938b, 0x1bb0, 0x3d4d, 0xc29e, 0x3e65, 0x0, 0x1);
        gbc.writeMem(0x9570, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x938b);
        EXPECT(gbc.pc(), 0x9572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9570), 0xcb);
        EXPECT(gbc.readMem(0x9571), 0xdf);
        // CB DF 035B
        gbc.setState(0x80e4, 0xd57c, 0xe5d0, 0xb798, 0x13d3, 0xf910, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd57c);
        EXPECT(gbc.pc(), 0x80e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e4), 0xcb);
        EXPECT(gbc.readMem(0x80e5), 0xdf);
        // CB DF 035C
        gbc.setState(0xed37, 0xad24, 0x9e40, 0xb81e, 0x574d, 0xd8ea, 0x0, 0x0);
        gbc.writeMem(0xed37, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xad24);
        EXPECT(gbc.pc(), 0xed39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed37), 0xcb);
        EXPECT(gbc.readMem(0xed38), 0xdf);
        // CB DF 035D
        gbc.setState(0x1303, 0xfc96, 0xad00, 0xa853, 0x4ea1, 0xba44, 0x0, 0x0);
        gbc.writeMem(0x1303, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfc96);
        EXPECT(gbc.pc(), 0x1305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 035E
        gbc.setState(0x3f4f, 0x8b62, 0xe5e0, 0xf00c, 0x3ad5, 0xa3d3, 0x0, 0x0);
        gbc.writeMem(0x3f4f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8b62);
        EXPECT(gbc.pc(), 0x3f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 035F
        gbc.setState(0x4ecc, 0x7da6, 0x4640, 0xa5b1, 0x692d, 0x6cab, 0x0, 0x1);
        gbc.writeMem(0x4ecc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7da6);
        EXPECT(gbc.pc(), 0x4ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0360
        gbc.setState(0x2620, 0x87c3, 0xf940, 0xe72b, 0xe445, 0x639c, 0x0, 0x0);
        gbc.writeMem(0x2620, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x87c3);
        EXPECT(gbc.pc(), 0x2622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0361
        gbc.setState(0xe42d, 0x293b, 0x2840, 0xe60d, 0x55b, 0x4cd8, 0x1, 0x0);
        gbc.writeMem(0xe42d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x293b);
        EXPECT(gbc.pc(), 0xe42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe42d), 0xcb);
        EXPECT(gbc.readMem(0xe42e), 0xdf);
        // CB DF 0362
        gbc.setState(0xbdbb, 0x9103, 0x2580, 0x9897, 0xdd91, 0x2d18, 0x0, 0x0);
        gbc.writeMem(0xbdbb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9103);
        EXPECT(gbc.pc(), 0xbdbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdbb), 0xcb);
        EXPECT(gbc.readMem(0xbdbc), 0xdf);
        // CB DF 0363
        gbc.setState(0xccb9, 0x4ef1, 0x5570, 0x3321, 0xd6ca, 0xff60, 0x0, 0x1);
        gbc.writeMem(0xccb9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4ef1);
        EXPECT(gbc.pc(), 0xccbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb9), 0xcb);
        EXPECT(gbc.readMem(0xccba), 0xdf);
        // CB DF 0364
        gbc.setState(0x5d29, 0x93ae, 0xe4f0, 0xfc58, 0xc86b, 0xc873, 0x1, 0x1);
        gbc.writeMem(0x5d29, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x93ae);
        EXPECT(gbc.pc(), 0x5d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0365
        gbc.setState(0x4c62, 0xaf7f, 0x1640, 0xb497, 0x9eb6, 0x3c8, 0x1, 0x0);
        gbc.writeMem(0x4c62, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xaf7f);
        EXPECT(gbc.pc(), 0x4c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0366
        gbc.setState(0xbf00, 0xc429, 0x5580, 0xfd69, 0xab15, 0xa868, 0x0, 0x0);
        gbc.writeMem(0xbf00, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc429);
        EXPECT(gbc.pc(), 0xbf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf00), 0xcb);
        EXPECT(gbc.readMem(0xbf01), 0xdf);
        // CB DF 0367
        gbc.setState(0x8493, 0xe702, 0xb940, 0xd53e, 0xb04b, 0xf723, 0x0, 0x0);
        gbc.writeMem(0x8493, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe702);
        EXPECT(gbc.pc(), 0x8495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8493), 0xcb);
        EXPECT(gbc.readMem(0x8494), 0xdf);
        // CB DF 0368
        gbc.setState(0x7d38, 0x7c90, 0xeef0, 0x540a, 0xdc03, 0xc7bd, 0x1, 0x0);
        gbc.writeMem(0x7d38, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7c90);
        EXPECT(gbc.pc(), 0x7d3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0369
        gbc.setState(0xb37d, 0x4387, 0xb9a0, 0x5a5e, 0x249d, 0xe5cf, 0x0, 0x1);
        gbc.writeMem(0xb37d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4387);
        EXPECT(gbc.pc(), 0xb37f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37d), 0xcb);
        EXPECT(gbc.readMem(0xb37e), 0xdf);
        // CB DF 036A
        gbc.setState(0x1b77, 0x8b3d, 0x5020, 0x5d92, 0x4f71, 0x5a2a, 0x1, 0x0);
        gbc.writeMem(0x1b77, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8b3d);
        EXPECT(gbc.pc(), 0x1b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 036B
        gbc.setState(0x9cf0, 0x579a, 0xdef0, 0x4a37, 0x807b, 0xb6ca, 0x0, 0x0);
        gbc.writeMem(0x9cf0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x579a);
        EXPECT(gbc.pc(), 0x9cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf0), 0xcb);
        EXPECT(gbc.readMem(0x9cf1), 0xdf);
        // CB DF 036C
        gbc.setState(0xe79a, 0x732a, 0x4910, 0x1f1b, 0x5885, 0x4d84, 0x1, 0x0);
        gbc.writeMem(0xe79a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x732a);
        EXPECT(gbc.pc(), 0xe79c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79a), 0xcb);
        EXPECT(gbc.readMem(0xe79b), 0xdf);
        // CB DF 036D
        gbc.setState(0xbdf7, 0xc131, 0x4ed0, 0x29f2, 0x4a0, 0x44a4, 0x0, 0x1);
        gbc.writeMem(0xbdf7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc131);
        EXPECT(gbc.pc(), 0xbdf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf7), 0xcb);
        EXPECT(gbc.readMem(0xbdf8), 0xdf);
        // CB DF 036E
        gbc.setState(0x4b4d, 0x21a8, 0x5e10, 0x4ebe, 0x93f4, 0x8bed, 0x0, 0x1);
        gbc.writeMem(0x4b4d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x21a8);
        EXPECT(gbc.pc(), 0x4b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 036F
        gbc.setState(0x238, 0xa1c9, 0x70b0, 0x72b, 0x7fe6, 0x971a, 0x1, 0x1);
        gbc.writeMem(0x238, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa1c9);
        EXPECT(gbc.pc(), 0x23a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0370
        gbc.setState(0x4eaf, 0x8174, 0xcce0, 0xaaa3, 0x6bf3, 0xb7e3, 0x1, 0x0);
        gbc.writeMem(0x4eaf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8174);
        EXPECT(gbc.pc(), 0x4eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0371
        gbc.setState(0x9f2a, 0xc531, 0x3900, 0x11fb, 0x361d, 0x6ee2, 0x0, 0x1);
        gbc.writeMem(0x9f2a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc531);
        EXPECT(gbc.pc(), 0x9f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f2a), 0xcb);
        EXPECT(gbc.readMem(0x9f2b), 0xdf);
        // CB DF 0372
        gbc.setState(0xb3b1, 0x5b6f, 0x2290, 0xb7cb, 0xf71e, 0x8d80, 0x1, 0x1);
        gbc.writeMem(0xb3b1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5b6f);
        EXPECT(gbc.pc(), 0xb3b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b1), 0xcb);
        EXPECT(gbc.readMem(0xb3b2), 0xdf);
        // CB DF 0373
        gbc.setState(0x2ed6, 0x67dc, 0x9d80, 0xa4e7, 0xb569, 0xad7d, 0x0, 0x1);
        gbc.writeMem(0x2ed6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x67dc);
        EXPECT(gbc.pc(), 0x2ed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0374
        gbc.setState(0x13b6, 0x2ee9, 0xcab0, 0x2ba4, 0x5b0c, 0x3f53, 0x1, 0x0);
        gbc.writeMem(0x13b6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2ee9);
        EXPECT(gbc.pc(), 0x13b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0375
        gbc.setState(0xa1df, 0x964, 0x4900, 0xba55, 0xd423, 0xb333, 0x0, 0x1);
        gbc.writeMem(0xa1df, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x964);
        EXPECT(gbc.pc(), 0xa1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1df), 0xcb);
        EXPECT(gbc.readMem(0xa1e0), 0xdf);
        // CB DF 0376
        gbc.setState(0x379d, 0x9d8, 0xfc30, 0xab19, 0xc9ef, 0xd0b4, 0x1, 0x0);
        gbc.writeMem(0x379d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9d8);
        EXPECT(gbc.pc(), 0x379f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0377
        gbc.setState(0xb47b, 0x6fd, 0x9ab0, 0xc615, 0x6904, 0x2cb7, 0x1, 0x0);
        gbc.writeMem(0xb47b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6fd);
        EXPECT(gbc.pc(), 0xb47d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47b), 0xcb);
        EXPECT(gbc.readMem(0xb47c), 0xdf);
        // CB DF 0378
        gbc.setState(0x380c, 0x42a2, 0x4990, 0x12d8, 0x4496, 0x7a55, 0x1, 0x1);
        gbc.writeMem(0x380c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x42a2);
        EXPECT(gbc.pc(), 0x380e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 037A
        gbc.setState(0x150, 0xa108, 0x760, 0xe44e, 0x7acf, 0xe41d, 0x0, 0x0);
        gbc.writeMem(0x150, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa108);
        EXPECT(gbc.pc(), 0x152);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 037B
        gbc.setState(0xe570, 0x48df, 0x8ef0, 0x4233, 0xca39, 0x8f1c, 0x1, 0x1);
        gbc.writeMem(0xe570, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x48df);
        EXPECT(gbc.pc(), 0xe572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe570), 0xcb);
        EXPECT(gbc.readMem(0xe571), 0xdf);
        // CB DF 037C
        gbc.setState(0xdd26, 0xfa34, 0x9d20, 0xd098, 0xb9a5, 0x123, 0x0, 0x1);
        gbc.writeMem(0xdd26, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xfa34);
        EXPECT(gbc.pc(), 0xdd28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd26), 0xcb);
        EXPECT(gbc.readMem(0xdd27), 0xdf);
        // CB DF 037D
        gbc.setState(0x37bf, 0xcddb, 0x4cb0, 0xf1bd, 0x38fb, 0x888b, 0x1, 0x0);
        gbc.writeMem(0x37bf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcddb);
        EXPECT(gbc.pc(), 0x37c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 037E
        gbc.setState(0x3919, 0x9e4, 0x6500, 0xa54a, 0x1986, 0x692d, 0x1, 0x1);
        gbc.writeMem(0x3919, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9e4);
        EXPECT(gbc.pc(), 0x391b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 037F
        gbc.setState(0x6039, 0x4825, 0x2b30, 0x17, 0x70a1, 0x958b, 0x0, 0x0);
        gbc.writeMem(0x6039, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4825);
        EXPECT(gbc.pc(), 0x603b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0380
        gbc.setState(0xe911, 0xc3e3, 0xe280, 0xb628, 0xa9c4, 0x8dd3, 0x0, 0x0);
        gbc.writeMem(0xe911, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc3e3);
        EXPECT(gbc.pc(), 0xe913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe911), 0xcb);
        EXPECT(gbc.readMem(0xe912), 0xdf);
        // CB DF 0381
        gbc.setState(0x2752, 0xdad3, 0xc000, 0x55ef, 0xe4c9, 0xaf07, 0x0, 0x1);
        gbc.writeMem(0x2752, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdad3);
        EXPECT(gbc.pc(), 0x2754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0382
        gbc.setState(0x76de, 0x8c30, 0x5830, 0xd15e, 0xb43d, 0x9aed, 0x0, 0x1);
        gbc.writeMem(0x76de, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8c30);
        EXPECT(gbc.pc(), 0x76e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0383
        gbc.setState(0xa39d, 0xa5fb, 0x81a0, 0x4046, 0xcdad, 0x39b3, 0x1, 0x1);
        gbc.writeMem(0xa39d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa5fb);
        EXPECT(gbc.pc(), 0xa39f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39d), 0xcb);
        EXPECT(gbc.readMem(0xa39e), 0xdf);
        // CB DF 0384
        gbc.setState(0xe37f, 0x84c7, 0x9070, 0x9586, 0xe9f7, 0xff33, 0x1, 0x0);
        gbc.writeMem(0xe37f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x84c7);
        EXPECT(gbc.pc(), 0xe381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37f), 0xcb);
        EXPECT(gbc.readMem(0xe380), 0xdf);
        // CB DF 0385
        gbc.setState(0x6d15, 0x91c2, 0xe080, 0x5c07, 0x7553, 0xd44, 0x0, 0x0);
        gbc.writeMem(0x6d15, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x91c2);
        EXPECT(gbc.pc(), 0x6d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0386
        gbc.setState(0xb969, 0x23dc, 0x7450, 0xbfb0, 0xf619, 0x4305, 0x1, 0x1);
        gbc.writeMem(0xb969, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x23dc);
        EXPECT(gbc.pc(), 0xb96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb969), 0xcb);
        EXPECT(gbc.readMem(0xb96a), 0xdf);
        // CB DF 0387
        gbc.setState(0xaf1e, 0x514f, 0xa480, 0xf505, 0x9928, 0x434a, 0x1, 0x1);
        gbc.writeMem(0xaf1e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x514f);
        EXPECT(gbc.pc(), 0xaf20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf1e), 0xcb);
        EXPECT(gbc.readMem(0xaf1f), 0xdf);
        // CB DF 0388
        gbc.setState(0xd43e, 0x9160, 0x84a0, 0xcd3c, 0x2df3, 0x8a29, 0x1, 0x0);
        gbc.writeMem(0xd43e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9160);
        EXPECT(gbc.pc(), 0xd440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd43e), 0xcb);
        EXPECT(gbc.readMem(0xd43f), 0xdf);
        // CB DF 0389
        gbc.setState(0x1e8e, 0x50c9, 0x84e0, 0xa6db, 0x8fd9, 0x2fb6, 0x0, 0x0);
        gbc.writeMem(0x1e8e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x50c9);
        EXPECT(gbc.pc(), 0x1e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 038A
        gbc.setState(0x5130, 0x89b4, 0x9300, 0x7d3a, 0xc3a5, 0x98fc, 0x1, 0x0);
        gbc.writeMem(0x5130, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x89b4);
        EXPECT(gbc.pc(), 0x5132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 038B
        gbc.setState(0x369d, 0xc02b, 0xc9e0, 0x6dd1, 0x4751, 0xcb34, 0x1, 0x1);
        gbc.writeMem(0x369d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc02b);
        EXPECT(gbc.pc(), 0x369f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 038C
        gbc.setState(0xe6a2, 0xfa25, 0x9d70, 0xe647, 0x5fca, 0xe4c8, 0x1, 0x1);
        gbc.writeMem(0xe6a2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfa25);
        EXPECT(gbc.pc(), 0xe6a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a2), 0xcb);
        EXPECT(gbc.readMem(0xe6a3), 0xdf);
        // CB DF 038D
        gbc.setState(0xc6a4, 0xca03, 0xfe30, 0x7e52, 0xb412, 0x4e1d, 0x1, 0x1);
        gbc.writeMem(0xc6a4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xca03);
        EXPECT(gbc.pc(), 0xc6a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6a4), 0xcb);
        EXPECT(gbc.readMem(0xc6a5), 0xdf);
        // CB DF 038E
        gbc.setState(0xcdca, 0x8517, 0x27b0, 0x2634, 0xe5a1, 0x78bb, 0x0, 0x1);
        gbc.writeMem(0xcdca, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8517);
        EXPECT(gbc.pc(), 0xcdcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdca), 0xcb);
        EXPECT(gbc.readMem(0xcdcb), 0xdf);
        // CB DF 038F
        gbc.setState(0x9f12, 0x29ba, 0x1b80, 0xe270, 0xe65f, 0xbbf9, 0x1, 0x1);
        gbc.writeMem(0x9f12, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x29ba);
        EXPECT(gbc.pc(), 0x9f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f12), 0xcb);
        EXPECT(gbc.readMem(0x9f13), 0xdf);
        // CB DF 0390
        gbc.setState(0x4f9a, 0x6557, 0xbcb0, 0x2932, 0xf9ab, 0xf33e, 0x0, 0x1);
        gbc.writeMem(0x4f9a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6557);
        EXPECT(gbc.pc(), 0x4f9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0391
        gbc.setState(0x260f, 0xc97e, 0xe300, 0x8b26, 0xe4ff, 0x47a2, 0x0, 0x1);
        gbc.writeMem(0x260f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc97e);
        EXPECT(gbc.pc(), 0x2611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0392
        gbc.setState(0xc8a3, 0x25ce, 0x5380, 0xac07, 0x5d63, 0x8379, 0x0, 0x1);
        gbc.writeMem(0xc8a3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x25ce);
        EXPECT(gbc.pc(), 0xc8a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a3), 0xcb);
        EXPECT(gbc.readMem(0xc8a4), 0xdf);
        // CB DF 0393
        gbc.setState(0x632f, 0xc0c2, 0x91e0, 0x2508, 0x7405, 0x626f, 0x1, 0x1);
        gbc.writeMem(0x632f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc0c2);
        EXPECT(gbc.pc(), 0x6331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0394
        gbc.setState(0x4e37, 0xadbf, 0xf7e0, 0x86b1, 0x8746, 0xfc2b, 0x0, 0x1);
        gbc.writeMem(0x4e37, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xadbf);
        EXPECT(gbc.pc(), 0x4e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 0395
        gbc.setState(0x140a, 0x1da6, 0x3990, 0xa13a, 0xafec, 0x9418, 0x1, 0x1);
        gbc.writeMem(0x140a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1da6);
        EXPECT(gbc.pc(), 0x140c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 0396
        gbc.setState(0xb17d, 0xde96, 0x8290, 0xc74b, 0xcb1, 0x4eae, 0x0, 0x1);
        gbc.writeMem(0xb17d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xde96);
        EXPECT(gbc.pc(), 0xb17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17d), 0xcb);
        EXPECT(gbc.readMem(0xb17e), 0xdf);
        // CB DF 0397
        gbc.setState(0xe64a, 0x65f0, 0xc6e0, 0x1fb5, 0xe38, 0x1233, 0x1, 0x1);
        gbc.writeMem(0xe64a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x65f0);
        EXPECT(gbc.pc(), 0xe64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64a), 0xcb);
        EXPECT(gbc.readMem(0xe64b), 0xdf);
        // CB DF 0398
        gbc.setState(0xcbe2, 0xca9e, 0x26a0, 0xecf3, 0x699a, 0xe70a, 0x0, 0x0);
        gbc.writeMem(0xcbe2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xca9e);
        EXPECT(gbc.pc(), 0xcbe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe2), 0xcb);
        EXPECT(gbc.readMem(0xcbe3), 0xdf);
        // CB DF 0399
        gbc.setState(0x728d, 0x18f4, 0x7ae0, 0x5d3a, 0xd233, 0x69f8, 0x1, 0x1);
        gbc.writeMem(0x728d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x18f4);
        EXPECT(gbc.pc(), 0x728f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 039A
        gbc.setState(0x3923, 0x9b0c, 0xbfe0, 0xfee2, 0xfc62, 0xd3e5, 0x1, 0x0);
        gbc.writeMem(0x3923, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9b0c);
        EXPECT(gbc.pc(), 0x3925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 039B
        gbc.setState(0xeb6e, 0x852e, 0xd9c0, 0xc564, 0xa72c, 0x8768, 0x1, 0x1);
        gbc.writeMem(0xeb6e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x852e);
        EXPECT(gbc.pc(), 0xeb70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb6e), 0xcb);
        EXPECT(gbc.readMem(0xeb6f), 0xdf);
        // CB DF 039C
        gbc.setState(0xd5a7, 0x114c, 0x9ab0, 0x202c, 0xb975, 0xa941, 0x1, 0x0);
        gbc.writeMem(0xd5a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x114c);
        EXPECT(gbc.pc(), 0xd5a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a7), 0xcb);
        EXPECT(gbc.readMem(0xd5a8), 0xdf);
        // CB DF 039D
        gbc.setState(0x6221, 0x792b, 0x6060, 0xbe89, 0xa33e, 0x60f, 0x0, 0x1);
        gbc.writeMem(0x6221, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x792b);
        EXPECT(gbc.pc(), 0x6223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 039E
        gbc.setState(0x706e, 0xee39, 0x4bd0, 0xdbde, 0xbf6e, 0x9493, 0x0, 0x1);
        gbc.writeMem(0x706e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xee39);
        EXPECT(gbc.pc(), 0x7070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 039F
        gbc.setState(0x3256, 0xc255, 0x3a10, 0x66d, 0x9657, 0xa277, 0x0, 0x1);
        gbc.writeMem(0x3256, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc255);
        EXPECT(gbc.pc(), 0x3258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03A0
        gbc.setState(0x1f57, 0xe409, 0x5cb0, 0x9df5, 0x4a6c, 0xdd61, 0x1, 0x0);
        gbc.writeMem(0x1f57, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe409);
        EXPECT(gbc.pc(), 0x1f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03A1
        gbc.setState(0x7db2, 0x4ed7, 0xa5c0, 0x1a7c, 0xcfeb, 0x9331, 0x0, 0x0);
        gbc.writeMem(0x7db2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4ed7);
        EXPECT(gbc.pc(), 0x7db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03A2
        gbc.setState(0xdb25, 0xd631, 0x25d0, 0xce97, 0x22eb, 0x546f, 0x1, 0x1);
        gbc.writeMem(0xdb25, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd631);
        EXPECT(gbc.pc(), 0xdb27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb25), 0xcb);
        EXPECT(gbc.readMem(0xdb26), 0xdf);
        // CB DF 03A3
        gbc.setState(0xc124, 0x6286, 0x1700, 0xd292, 0x1860, 0xbc37, 0x1, 0x1);
        gbc.writeMem(0xc124, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6286);
        EXPECT(gbc.pc(), 0xc126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc124), 0xcb);
        EXPECT(gbc.readMem(0xc125), 0xdf);
        // CB DF 03A4
        gbc.setState(0xa69e, 0x2bcb, 0xa0f0, 0xae2f, 0x7381, 0x951d, 0x0, 0x1);
        gbc.writeMem(0xa69e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2bcb);
        EXPECT(gbc.pc(), 0xa6a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa69e), 0xcb);
        EXPECT(gbc.readMem(0xa69f), 0xdf);
        // CB DF 03A5
        gbc.setState(0xd0ca, 0x1506, 0x2210, 0x6ea8, 0x7c81, 0x1297, 0x0, 0x0);
        gbc.writeMem(0xd0ca, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1506);
        EXPECT(gbc.pc(), 0xd0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ca), 0xcb);
        EXPECT(gbc.readMem(0xd0cb), 0xdf);
        // CB DF 03A7
        gbc.setState(0x260f, 0x9735, 0xf670, 0x4375, 0x2b39, 0xa38, 0x1, 0x1);
        gbc.writeMem(0x260f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9735);
        EXPECT(gbc.pc(), 0x2611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03A9
        gbc.setState(0xac8a, 0xa92a, 0xfed0, 0x797b, 0xc584, 0xb1b6, 0x0, 0x0);
        gbc.writeMem(0xac8a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa92a);
        EXPECT(gbc.pc(), 0xac8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8a), 0xcb);
        EXPECT(gbc.readMem(0xac8b), 0xdf);
        // CB DF 03AA
        gbc.setState(0xb829, 0xbe03, 0x7c90, 0xee11, 0x1db5, 0x1f70, 0x1, 0x0);
        gbc.writeMem(0xb829, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbe03);
        EXPECT(gbc.pc(), 0xb82b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb829), 0xcb);
        EXPECT(gbc.readMem(0xb82a), 0xdf);
        // CB DF 03AB
        gbc.setState(0x96a7, 0xf3b5, 0xe8a0, 0x74ac, 0x3506, 0x699e, 0x1, 0x0);
        gbc.writeMem(0x96a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf3b5);
        EXPECT(gbc.pc(), 0x96a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a7), 0xcb);
        EXPECT(gbc.readMem(0x96a8), 0xdf);
        // CB DF 03AC
        gbc.setState(0x1fce, 0xb184, 0xb3b0, 0x3575, 0x7e23, 0xa1f7, 0x1, 0x0);
        gbc.writeMem(0x1fce, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb184);
        EXPECT(gbc.pc(), 0x1fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03AD
        gbc.setState(0xd83b, 0x34ba, 0x47c0, 0xa4f8, 0x4f8a, 0x59df, 0x1, 0x1);
        gbc.writeMem(0xd83b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x34ba);
        EXPECT(gbc.pc(), 0xd83d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83b), 0xcb);
        EXPECT(gbc.readMem(0xd83c), 0xdf);
        // CB DF 03AE
        gbc.setState(0xb648, 0x92b8, 0x5420, 0x9f01, 0x783c, 0x22c0, 0x0, 0x1);
        gbc.writeMem(0xb648, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x92b8);
        EXPECT(gbc.pc(), 0xb64a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb648), 0xcb);
        EXPECT(gbc.readMem(0xb649), 0xdf);
        // CB DF 03AF
        gbc.setState(0xa1ba, 0x9f32, 0xbbd0, 0xaf55, 0xc34c, 0x5cfe, 0x1, 0x0);
        gbc.writeMem(0xa1ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9f32);
        EXPECT(gbc.pc(), 0xa1bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ba), 0xcb);
        EXPECT(gbc.readMem(0xa1bb), 0xdf);
        // CB DF 03B0
        gbc.setState(0xce07, 0x799e, 0xc9b0, 0x4357, 0x9fbd, 0x8604, 0x0, 0x1);
        gbc.writeMem(0xce07, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x799e);
        EXPECT(gbc.pc(), 0xce09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce07), 0xcb);
        EXPECT(gbc.readMem(0xce08), 0xdf);
        // CB DF 03B1
        gbc.setState(0xe0ec, 0x4750, 0xd840, 0x395e, 0x8441, 0xbb8b, 0x1, 0x0);
        gbc.writeMem(0xe0ec, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4750);
        EXPECT(gbc.pc(), 0xe0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ec), 0xcb);
        EXPECT(gbc.readMem(0xe0ed), 0xdf);
        // CB DF 03B2
        gbc.setState(0x73f3, 0xa3b5, 0x7830, 0xf79a, 0x9c3f, 0x2696, 0x1, 0x1);
        gbc.writeMem(0x73f3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa3b5);
        EXPECT(gbc.pc(), 0x73f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03B3
        gbc.setState(0x7f45, 0x978b, 0x2fe0, 0x2d60, 0x62e3, 0x1dbe, 0x1, 0x1);
        gbc.writeMem(0x7f45, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x978b);
        EXPECT(gbc.pc(), 0x7f47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03B4
        gbc.setState(0x80ab, 0x743f, 0xc5f0, 0x2e7a, 0x4b3c, 0x3ea0, 0x0, 0x0);
        gbc.writeMem(0x80ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x743f);
        EXPECT(gbc.pc(), 0x80ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ab), 0xcb);
        EXPECT(gbc.readMem(0x80ac), 0xdf);
        // CB DF 03B5
        gbc.setState(0x41a, 0xd5f7, 0x6630, 0x2968, 0xbfa9, 0x8e44, 0x1, 0x1);
        gbc.writeMem(0x41a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd5f7);
        EXPECT(gbc.pc(), 0x41c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03B6
        gbc.setState(0xab0b, 0xa823, 0x9a80, 0x4f52, 0xb313, 0xc534, 0x0, 0x0);
        gbc.writeMem(0xab0b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa823);
        EXPECT(gbc.pc(), 0xab0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0b), 0xcb);
        EXPECT(gbc.readMem(0xab0c), 0xdf);
        // CB DF 03B7
        gbc.setState(0xdd33, 0x2261, 0x58f0, 0xb1c8, 0x552c, 0x667c, 0x1, 0x1);
        gbc.writeMem(0xdd33, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2261);
        EXPECT(gbc.pc(), 0xdd35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd33), 0xcb);
        EXPECT(gbc.readMem(0xdd34), 0xdf);
        // CB DF 03B8
        gbc.setState(0x9597, 0x604, 0x53c0, 0xfe7c, 0x4310, 0xda85, 0x0, 0x0);
        gbc.writeMem(0x9597, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x604);
        EXPECT(gbc.pc(), 0x9599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9597), 0xcb);
        EXPECT(gbc.readMem(0x9598), 0xdf);
        // CB DF 03B9
        gbc.setState(0x7199, 0xc86a, 0x43e0, 0xea86, 0xbd92, 0x868b, 0x0, 0x1);
        gbc.writeMem(0x7199, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc86a);
        EXPECT(gbc.pc(), 0x719b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03BA
        gbc.setState(0x7cbb, 0x7794, 0x9b90, 0x3afb, 0xfadd, 0x561, 0x1, 0x1);
        gbc.writeMem(0x7cbb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7794);
        EXPECT(gbc.pc(), 0x7cbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03BC
        gbc.setState(0xd8f, 0xcf40, 0x5960, 0x3b4, 0x58cb, 0x967e, 0x0, 0x1);
        gbc.writeMem(0xd8f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xcf40);
        EXPECT(gbc.pc(), 0xd91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03BD
        gbc.setState(0x9115, 0xeafb, 0x6d40, 0x3c22, 0xf1cf, 0x5595, 0x1, 0x1);
        gbc.writeMem(0x9115, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xeafb);
        EXPECT(gbc.pc(), 0x9117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9115), 0xcb);
        EXPECT(gbc.readMem(0x9116), 0xdf);
        // CB DF 03BF
        gbc.setState(0xbbc5, 0x27b, 0xea40, 0xa5fd, 0xbb2f, 0x5fb9, 0x0, 0x0);
        gbc.writeMem(0xbbc5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x27b);
        EXPECT(gbc.pc(), 0xbbc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc5), 0xcb);
        EXPECT(gbc.readMem(0xbbc6), 0xdf);
        // CB DF 03C0
        gbc.setState(0x64b7, 0x1aa6, 0xb500, 0x8112, 0xebc6, 0x91b, 0x0, 0x0);
        gbc.writeMem(0x64b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1aa6);
        EXPECT(gbc.pc(), 0x64b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03C1
        gbc.setState(0x217c, 0x2305, 0xb840, 0xc087, 0x131a, 0x6a38, 0x0, 0x1);
        gbc.writeMem(0x217c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2305);
        EXPECT(gbc.pc(), 0x217e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03C2
        gbc.setState(0x23ea, 0xe83f, 0x97a0, 0x9e3f, 0xdfd3, 0x2e99, 0x0, 0x0);
        gbc.writeMem(0x23ea, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe83f);
        EXPECT(gbc.pc(), 0x23ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03C3
        gbc.setState(0x8fe8, 0xffe, 0xd3b0, 0x3dc9, 0x5802, 0xb2ce, 0x1, 0x0);
        gbc.writeMem(0x8fe8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xffe);
        EXPECT(gbc.pc(), 0x8fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fe8), 0xcb);
        EXPECT(gbc.readMem(0x8fe9), 0xdf);
        // CB DF 03C4
        gbc.setState(0xeca, 0xfe43, 0xd0, 0x187d, 0x9f60, 0x6309, 0x1, 0x0);
        gbc.writeMem(0xeca, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xfe43);
        EXPECT(gbc.pc(), 0xecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03C6
        gbc.setState(0x90f4, 0x2be, 0x16f0, 0xde3, 0x2459, 0x8728, 0x1, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2be);
        EXPECT(gbc.pc(), 0x90f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f4), 0xcb);
        EXPECT(gbc.readMem(0x90f5), 0xdf);
        // CB DF 03C7
        gbc.setState(0x8fa0, 0xd6ba, 0x28a0, 0x8e58, 0xdf2f, 0xba88, 0x0, 0x1);
        gbc.writeMem(0x8fa0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd6ba);
        EXPECT(gbc.pc(), 0x8fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa0), 0xcb);
        EXPECT(gbc.readMem(0x8fa1), 0xdf);
        // CB DF 03C8
        gbc.setState(0xc53f, 0x5867, 0xa350, 0xf881, 0xaf90, 0x6c54, 0x1, 0x0);
        gbc.writeMem(0xc53f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5867);
        EXPECT(gbc.pc(), 0xc541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc53f), 0xcb);
        EXPECT(gbc.readMem(0xc540), 0xdf);
        // CB DF 03C9
        gbc.setState(0x76b0, 0x7bb5, 0x56e0, 0x1f2d, 0x300, 0x8198, 0x0, 0x0);
        gbc.writeMem(0x76b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7bb5);
        EXPECT(gbc.pc(), 0x76b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03CA
        gbc.setState(0xd6cd, 0x72a0, 0x97b0, 0xef1a, 0x7638, 0x627f, 0x0, 0x1);
        gbc.writeMem(0xd6cd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x72a0);
        EXPECT(gbc.pc(), 0xd6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6cd), 0xcb);
        EXPECT(gbc.readMem(0xd6ce), 0xdf);
        // CB DF 03CB
        gbc.setState(0xc7d6, 0xd956, 0x11d0, 0xfadc, 0xfe50, 0xe53c, 0x1, 0x0);
        gbc.writeMem(0xc7d6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd956);
        EXPECT(gbc.pc(), 0xc7d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d6), 0xcb);
        EXPECT(gbc.readMem(0xc7d7), 0xdf);
        // CB DF 03CC
        gbc.setState(0x3697, 0xa5c3, 0xf910, 0x3aaa, 0xc52b, 0x4668, 0x1, 0x1);
        gbc.writeMem(0x3697, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa5c3);
        EXPECT(gbc.pc(), 0x3699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03CD
        gbc.setState(0x6da4, 0x1d22, 0x45a0, 0x630f, 0xc9ae, 0x163f, 0x1, 0x1);
        gbc.writeMem(0x6da4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1d22);
        EXPECT(gbc.pc(), 0x6da6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03CE
        gbc.setState(0xda49, 0x2b0e, 0xbe90, 0x1e7e, 0x2b25, 0xad2b, 0x1, 0x1);
        gbc.writeMem(0xda49, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2b0e);
        EXPECT(gbc.pc(), 0xda4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda49), 0xcb);
        EXPECT(gbc.readMem(0xda4a), 0xdf);
        // CB DF 03D0
        gbc.setState(0x579a, 0x69f8, 0x6550, 0xd4ab, 0xf212, 0x9eab, 0x0, 0x0);
        gbc.writeMem(0x579a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x69f8);
        EXPECT(gbc.pc(), 0x579c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03D1
        gbc.setState(0x36fe, 0xa399, 0x1b40, 0x6314, 0x82b5, 0x3960, 0x0, 0x0);
        gbc.writeMem(0x36fe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa399);
        EXPECT(gbc.pc(), 0x3700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03D2
        gbc.setState(0x7cd7, 0xedb5, 0xfbc0, 0x8a63, 0x9dcf, 0x1076, 0x0, 0x1);
        gbc.writeMem(0x7cd7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xedb5);
        EXPECT(gbc.pc(), 0x7cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03D3
        gbc.setState(0x3913, 0xc20c, 0x9b10, 0xba11, 0x7d05, 0x71fe, 0x0, 0x0);
        gbc.writeMem(0x3913, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc20c);
        EXPECT(gbc.pc(), 0x3915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03D4
        gbc.setState(0x7434, 0x3c7e, 0x7b90, 0xb5d8, 0xd860, 0x7ae4, 0x1, 0x1);
        gbc.writeMem(0x7434, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3c7e);
        EXPECT(gbc.pc(), 0x7436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03D5
        gbc.setState(0x1613, 0xc7a6, 0xa810, 0xabbd, 0xd9ba, 0x4b86, 0x0, 0x1);
        gbc.writeMem(0x1613, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc7a6);
        EXPECT(gbc.pc(), 0x1615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03D7
        gbc.setState(0xa4fc, 0xce2b, 0x6130, 0x53ad, 0xd4cc, 0x50c8, 0x1, 0x0);
        gbc.writeMem(0xa4fc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xce2b);
        EXPECT(gbc.pc(), 0xa4fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4fc), 0xcb);
        EXPECT(gbc.readMem(0xa4fd), 0xdf);
        // CB DF 03D8
        gbc.setState(0x8361, 0x4ea7, 0x2a90, 0x38d9, 0x8dbf, 0x6530, 0x0, 0x0);
        gbc.writeMem(0x8361, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4ea7);
        EXPECT(gbc.pc(), 0x8363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8361), 0xcb);
        EXPECT(gbc.readMem(0x8362), 0xdf);
        // CB DF 03D9
        gbc.setState(0x50b9, 0xaf20, 0x68d0, 0x8a8d, 0x200a, 0x26d1, 0x0, 0x0);
        gbc.writeMem(0x50b9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xaf20);
        EXPECT(gbc.pc(), 0x50bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03DA
        gbc.setState(0xc4cf, 0x2df6, 0x5ce0, 0x7d14, 0xae16, 0xd65d, 0x0, 0x0);
        gbc.writeMem(0xc4cf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2df6);
        EXPECT(gbc.pc(), 0xc4d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4cf), 0xcb);
        EXPECT(gbc.readMem(0xc4d0), 0xdf);
        // CB DF 03DB
        gbc.setState(0xe57e, 0x4594, 0xd8f0, 0x8926, 0x6d69, 0x2806, 0x1, 0x0);
        gbc.writeMem(0xe57e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4594);
        EXPECT(gbc.pc(), 0xe580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe57e), 0xcb);
        EXPECT(gbc.readMem(0xe57f), 0xdf);
        // CB DF 03DC
        gbc.setState(0xcbf8, 0x107, 0x4040, 0x7df6, 0x67a, 0x6243, 0x0, 0x0);
        gbc.writeMem(0xcbf8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x107);
        EXPECT(gbc.pc(), 0xcbfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf8), 0xcb);
        EXPECT(gbc.readMem(0xcbf9), 0xdf);
        // CB DF 03DD
        gbc.setState(0x30d, 0x840e, 0x40c0, 0x3be1, 0x1f84, 0xb5ac, 0x0, 0x0);
        gbc.writeMem(0x30d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x840e);
        EXPECT(gbc.pc(), 0x30f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DF 03DE
        gbc.setState(0x8165, 0x1da6, 0x3be0, 0x8b97, 0x438c, 0x6542, 0x0, 0x0);
        gbc.writeMem(0x8165, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1da6);
        EXPECT(gbc.pc(), 0x8167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8165), 0xcb);
        EXPECT(gbc.readMem(0x8166), 0xdf);
        // CB DF 03DF
        gbc.setState(0xbdf4, 0xc05c, 0x93a0, 0x3b2e, 0x6ec, 0xb62a, 0x1, 0x1);
        gbc.writeMem(0xbdf4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc05c);
        EXPECT(gbc.pc(), 0xbdf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf4), 0xcb);
        EXPECT(gbc.readMem(0xbdf5), 0xdf);
        // CB DF 03E1
        gbc.setState(0x1dd, 0x8b86, 0x56b0, 0xb5e0, 0x3749, 0xff0c, 0x0, 0x1);
        gbc.writeMem(0x1dd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8b86);
        EXPECT(gbc.pc(), 0x1df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03E2
        gbc.setState(0xe9c5, 0xad9b, 0x4350, 0x79b4, 0x82bc, 0xa030, 0x1, 0x1);
        gbc.writeMem(0xe9c5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xad9b);
        EXPECT(gbc.pc(), 0xe9c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c5), 0xcb);
        EXPECT(gbc.readMem(0xe9c6), 0xdf);
        // CB DF 03E3
        gbc.setState(0x2b4b, 0x816c, 0xff50, 0x7adc, 0xc52b, 0xa265, 0x1, 0x1);
        gbc.writeMem(0x2b4b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x816c);
        EXPECT(gbc.pc(), 0x2b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DF 03E5
        gbc.setState(0x8399, 0xcce8, 0x5240, 0x7cf2, 0x91c4, 0x1782, 0x1, 0x1);
        gbc.writeMem(0x8399, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcce8);
        EXPECT(gbc.pc(), 0x839b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8399), 0xcb);
        EXPECT(gbc.readMem(0x839a), 0xdf);
        // CB DF 03E6
        gbc.setState(0xa4ad, 0xf07a, 0xecd0, 0x2195, 0x1f60, 0x91fb, 0x0, 0x0);
        gbc.writeMem(0xa4ad, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf07a);
        EXPECT(gbc.pc(), 0xa4af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ad), 0xcb);
        EXPECT(gbc.readMem(0xa4ae), 0xdf);
        // CB DF 03E7
        gbc.setState(0x920, 0x87d3, 0x7100, 0x7e5f, 0x8472, 0xe28b, 0x0, 0x0);
        gbc.writeMem(0x920, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x87d3);
        EXPECT(gbc.pc(), 0x922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
