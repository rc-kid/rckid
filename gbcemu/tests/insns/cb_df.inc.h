    TEST(gbcemu, opcode_cb_df) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB DF 0000
        gbc.setState(0xe4b1, 0x78a9, 0x74f0, 0x1fb1, 0xb4de, 0x38a9, 0x0, 0x1);
        gbc.writeMem(0xe4b1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x78a9, gbc.sp());
        EXPECT(0xe4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b1));
        EXPECT(0xdf, gbc.readMem(0xe4b2));
        // CB DF 0001
        gbc.setState(0x8df2, 0x67a8, 0x6c60, 0x9dca, 0xab35, 0x6871, 0x1, 0x1);
        gbc.writeMem(0x8df2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x67a8, gbc.sp());
        EXPECT(0x8df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df2));
        EXPECT(0xdf, gbc.readMem(0x8df3));
        // CB DF 0002
        gbc.setState(0xa106, 0x43c1, 0x2c0, 0xdbbc, 0xfc12, 0x9a27, 0x0, 0x1);
        gbc.writeMem(0xa106, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x43c1, gbc.sp());
        EXPECT(0xa108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa106));
        EXPECT(0xdf, gbc.readMem(0xa107));
        // CB DF 0003
        gbc.setState(0xbeb7, 0x82ef, 0x4db0, 0xe444, 0x5eba, 0xaea2, 0x1, 0x1);
        gbc.writeMem(0xbeb7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x82ef, gbc.sp());
        EXPECT(0xbeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb7));
        EXPECT(0xdf, gbc.readMem(0xbeb8));
        // CB DF 0004
        gbc.setState(0x8e52, 0xc607, 0x7370, 0xb472, 0x79a2, 0x821a, 0x1, 0x1);
        gbc.writeMem(0x8e52, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc607, gbc.sp());
        EXPECT(0x8e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e52));
        EXPECT(0xdf, gbc.readMem(0x8e53));
        // CB DF 0005
        gbc.setState(0xb087, 0x85da, 0x5cd0, 0xa067, 0xf83a, 0x53c7, 0x0, 0x0);
        gbc.writeMem(0xb087, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x85da, gbc.sp());
        EXPECT(0xb089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb087));
        EXPECT(0xdf, gbc.readMem(0xb088));
        // CB DF 0006
        gbc.setState(0x19fc, 0x199a, 0x6110, 0xaedb, 0xa49b, 0x526, 0x0, 0x0);
        gbc.writeMem(0x19fc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x199a, gbc.sp());
        EXPECT(0x19fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0007
        gbc.setState(0x67aa, 0x922d, 0xfc30, 0x715f, 0x9c96, 0xc5e4, 0x0, 0x1);
        gbc.writeMem(0x67aa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x922d, gbc.sp());
        EXPECT(0x67ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0008
        gbc.setState(0x3e56, 0xe35f, 0x3c30, 0x8579, 0x321, 0xba, 0x0, 0x0);
        gbc.writeMem(0x3e56, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0x3e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0009
        gbc.setState(0xb31f, 0x3e20, 0xca10, 0x3166, 0xc0f2, 0x513a, 0x1, 0x0);
        gbc.writeMem(0xb31f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3e20, gbc.sp());
        EXPECT(0xb321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31f));
        EXPECT(0xdf, gbc.readMem(0xb320));
        // CB DF 000A
        gbc.setState(0xca08, 0x77a2, 0x41f0, 0xb99d, 0xf00c, 0xa83c, 0x1, 0x0);
        gbc.writeMem(0xca08, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x77a2, gbc.sp());
        EXPECT(0xca0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca08));
        EXPECT(0xdf, gbc.readMem(0xca09));
        // CB DF 000B
        gbc.setState(0xb6b7, 0x55ea, 0xd740, 0x7fb6, 0x74e3, 0xb4f2, 0x0, 0x0);
        gbc.writeMem(0xb6b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x55ea, gbc.sp());
        EXPECT(0xb6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b7));
        EXPECT(0xdf, gbc.readMem(0xb6b8));
        // CB DF 000C
        gbc.setState(0x99e0, 0x677b, 0x3680, 0xb634, 0x7827, 0x9d7, 0x1, 0x0);
        gbc.writeMem(0x99e0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0x99e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e0));
        EXPECT(0xdf, gbc.readMem(0x99e1));
        // CB DF 000D
        gbc.setState(0xeb5e, 0xe776, 0x8980, 0x630e, 0x6c4f, 0xaf05, 0x1, 0x0);
        gbc.writeMem(0xeb5e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe776, gbc.sp());
        EXPECT(0xeb60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5e));
        EXPECT(0xdf, gbc.readMem(0xeb5f));
        // CB DF 000E
        gbc.setState(0xdf71, 0x325f, 0x4fa0, 0x644c, 0xcdd2, 0xa371, 0x1, 0x0);
        gbc.writeMem(0xdf71, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x325f, gbc.sp());
        EXPECT(0xdf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf71));
        EXPECT(0xdf, gbc.readMem(0xdf72));
        // CB DF 000F
        gbc.setState(0x5981, 0xfba3, 0x71e0, 0xfc52, 0xea1e, 0x69e0, 0x1, 0x1);
        gbc.writeMem(0x5981, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfba3, gbc.sp());
        EXPECT(0x5983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0010
        gbc.setState(0x4b24, 0xb1c, 0xf810, 0x8da5, 0xb0ff, 0x236b, 0x1, 0x1);
        gbc.writeMem(0x4b24, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb1c, gbc.sp());
        EXPECT(0x4b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0011
        gbc.setState(0x510f, 0x49a1, 0xde50, 0x6c7c, 0x1b60, 0xf28b, 0x0, 0x0);
        gbc.writeMem(0x510f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x49a1, gbc.sp());
        EXPECT(0x5111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0012
        gbc.setState(0xc87, 0x253c, 0xc50, 0x6f3c, 0x4029, 0x2803, 0x1, 0x1);
        gbc.writeMem(0xc87, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x253c, gbc.sp());
        EXPECT(0xc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0013
        gbc.setState(0x6d82, 0x15b6, 0x4e60, 0x9764, 0x3170, 0xf192, 0x0, 0x0);
        gbc.writeMem(0x6d82, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x15b6, gbc.sp());
        EXPECT(0x6d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0014
        gbc.setState(0x75c2, 0x925c, 0x4930, 0x6ab, 0xc8be, 0xa3cb, 0x0, 0x0);
        gbc.writeMem(0x75c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x925c, gbc.sp());
        EXPECT(0x75c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0015
        gbc.setState(0xd036, 0x6828, 0xf0e0, 0x675d, 0xf2da, 0x77df, 0x0, 0x0);
        gbc.writeMem(0xd036, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6828, gbc.sp());
        EXPECT(0xd038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd036));
        EXPECT(0xdf, gbc.readMem(0xd037));
        // CB DF 0017
        gbc.setState(0x98c4, 0xc517, 0xbf0, 0xb410, 0x69e1, 0xb422, 0x1, 0x0);
        gbc.writeMem(0x98c4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc517, gbc.sp());
        EXPECT(0x98c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c4));
        EXPECT(0xdf, gbc.readMem(0x98c5));
        // CB DF 0018
        gbc.setState(0xd792, 0x26b9, 0xc4c0, 0x71b2, 0x77ca, 0x4a07, 0x1, 0x1);
        gbc.writeMem(0xd792, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x26b9, gbc.sp());
        EXPECT(0xd794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd792));
        EXPECT(0xdf, gbc.readMem(0xd793));
        // CB DF 0019
        gbc.setState(0x613b, 0x5daa, 0x1ef0, 0xcbf, 0x8ced, 0x5d28, 0x1, 0x0);
        gbc.writeMem(0x613b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5daa, gbc.sp());
        EXPECT(0x613d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 001A
        gbc.setState(0xefd9, 0x681d, 0xe880, 0xd7e, 0x42b8, 0x5eb1, 0x0, 0x1);
        gbc.writeMem(0xefd9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x681d, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd9));
        EXPECT(0xdf, gbc.readMem(0xefda));
        // CB DF 001C
        gbc.setState(0x607, 0xd69c, 0xcab0, 0x2e4c, 0xd8d8, 0x5445, 0x1, 0x1);
        gbc.writeMem(0x607, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd69c, gbc.sp());
        EXPECT(0x609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 001D
        gbc.setState(0xb1ab, 0xe9fc, 0x5000, 0xc5d8, 0x86f3, 0x8c95, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe9fc, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ab));
        EXPECT(0xdf, gbc.readMem(0xb1ac));
        // CB DF 001E
        gbc.setState(0xee39, 0x55dd, 0x1120, 0x4536, 0xa6e0, 0x4022, 0x0, 0x0);
        gbc.writeMem(0xee39, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x55dd, gbc.sp());
        EXPECT(0xee3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee39));
        EXPECT(0xdf, gbc.readMem(0xee3a));
        // CB DF 001F
        gbc.setState(0x89e9, 0xdffc, 0x54a0, 0xb2af, 0x59c2, 0x5695, 0x1, 0x0);
        gbc.writeMem(0x89e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdffc, gbc.sp());
        EXPECT(0x89eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e9));
        EXPECT(0xdf, gbc.readMem(0x89ea));
        // CB DF 0020
        gbc.setState(0x1585, 0xb1b8, 0xe7a0, 0x8933, 0xf7, 0x5a0b, 0x1, 0x1);
        gbc.writeMem(0x1585, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb1b8, gbc.sp());
        EXPECT(0x1587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0022
        gbc.setState(0x9372, 0xed82, 0xae10, 0x8b65, 0xbcb0, 0x81c7, 0x1, 0x0);
        gbc.writeMem(0x9372, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xed82, gbc.sp());
        EXPECT(0x9374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9372));
        EXPECT(0xdf, gbc.readMem(0x9373));
        // CB DF 0023
        gbc.setState(0xe481, 0xeec7, 0xf4c0, 0x89e3, 0x3157, 0x3394, 0x1, 0x1);
        gbc.writeMem(0xe481, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeec7, gbc.sp());
        EXPECT(0xe483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe481));
        EXPECT(0xdf, gbc.readMem(0xe482));
        // CB DF 0024
        gbc.setState(0x9c64, 0x125d, 0x1ce0, 0x187, 0x6b7c, 0x4f99, 0x0, 0x0);
        gbc.writeMem(0x9c64, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x125d, gbc.sp());
        EXPECT(0x9c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c64));
        EXPECT(0xdf, gbc.readMem(0x9c65));
        // CB DF 0025
        gbc.setState(0xc5ae, 0x14ff, 0xe000, 0x643a, 0x8366, 0x1b5c, 0x0, 0x0);
        gbc.writeMem(0xc5ae, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x14ff, gbc.sp());
        EXPECT(0xc5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ae));
        EXPECT(0xdf, gbc.readMem(0xc5af));
        // CB DF 0026
        gbc.setState(0xab9a, 0x470b, 0xa150, 0x7a94, 0x1803, 0x797c, 0x1, 0x0);
        gbc.writeMem(0xab9a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x470b, gbc.sp());
        EXPECT(0xab9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9a));
        EXPECT(0xdf, gbc.readMem(0xab9b));
        // CB DF 0027
        gbc.setState(0xb16b, 0x73e8, 0xc8b0, 0xaeb0, 0x8018, 0x1e1d, 0x0, 0x1);
        gbc.writeMem(0xb16b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x73e8, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16b));
        EXPECT(0xdf, gbc.readMem(0xb16c));
        // CB DF 0028
        gbc.setState(0x6993, 0xd465, 0xee20, 0xa62c, 0x7be0, 0x53b7, 0x1, 0x1);
        gbc.writeMem(0x6993, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd465, gbc.sp());
        EXPECT(0x6995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0029
        gbc.setState(0x71eb, 0xb01f, 0xbe60, 0x686d, 0xb280, 0xddb6, 0x1, 0x0);
        gbc.writeMem(0x71eb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb01f, gbc.sp());
        EXPECT(0x71ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 002A
        gbc.setState(0xbbeb, 0xe031, 0x6460, 0xf9c0, 0x2c38, 0xda23, 0x0, 0x1);
        gbc.writeMem(0xbbeb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe031, gbc.sp());
        EXPECT(0xbbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbeb));
        EXPECT(0xdf, gbc.readMem(0xbbec));
        // CB DF 002B
        gbc.setState(0x44a3, 0xdcb5, 0x3c40, 0x6962, 0x1b7b, 0x342e, 0x0, 0x0);
        gbc.writeMem(0x44a3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdcb5, gbc.sp());
        EXPECT(0x44a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 002C
        gbc.setState(0x1178, 0xed3, 0xa5b0, 0x6277, 0xc3b0, 0xfb50, 0x0, 0x1);
        gbc.writeMem(0x1178, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xed3, gbc.sp());
        EXPECT(0x117a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 002D
        gbc.setState(0x6be1, 0xad42, 0x5d20, 0x28a, 0x8b2f, 0x3a87, 0x1, 0x0);
        gbc.writeMem(0x6be1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xad42, gbc.sp());
        EXPECT(0x6be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 002E
        gbc.setState(0x9cc5, 0x349d, 0x8940, 0xd946, 0xfe0, 0xad05, 0x1, 0x1);
        gbc.writeMem(0x9cc5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x349d, gbc.sp());
        EXPECT(0x9cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc5));
        EXPECT(0xdf, gbc.readMem(0x9cc6));
        // CB DF 002F
        gbc.setState(0x2160, 0xa817, 0x6980, 0xda33, 0xa744, 0x691a, 0x0, 0x0);
        gbc.writeMem(0x2160, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa817, gbc.sp());
        EXPECT(0x2162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0030
        gbc.setState(0x3262, 0xe1bd, 0xf4d0, 0xd577, 0xe23, 0x2b9d, 0x1, 0x0);
        gbc.writeMem(0x3262, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe1bd, gbc.sp());
        EXPECT(0x3264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0032
        gbc.setState(0xb98a, 0x1510, 0x2db0, 0x22e3, 0x274d, 0xf09b, 0x1, 0x1);
        gbc.writeMem(0xb98a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1510, gbc.sp());
        EXPECT(0xb98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98a));
        EXPECT(0xdf, gbc.readMem(0xb98b));
        // CB DF 0033
        gbc.setState(0x1cf8, 0xa8e0, 0x1d30, 0x649d, 0xa3d9, 0x7388, 0x1, 0x0);
        gbc.writeMem(0x1cf8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa8e0, gbc.sp());
        EXPECT(0x1cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0034
        gbc.setState(0xeb12, 0x8d30, 0x1740, 0xb563, 0x552e, 0x5540, 0x0, 0x1);
        gbc.writeMem(0xeb12, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8d30, gbc.sp());
        EXPECT(0xeb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb12));
        EXPECT(0xdf, gbc.readMem(0xeb13));
        // CB DF 0035
        gbc.setState(0x8988, 0x6e02, 0x1ea0, 0xa514, 0x3428, 0xa6ab, 0x0, 0x1);
        gbc.writeMem(0x8988, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6e02, gbc.sp());
        EXPECT(0x898a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8988));
        EXPECT(0xdf, gbc.readMem(0x8989));
        // CB DF 0036
        gbc.setState(0x61b5, 0xc1e1, 0x8580, 0x2e51, 0x4f4e, 0x10c1, 0x0, 0x1);
        gbc.writeMem(0x61b5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc1e1, gbc.sp());
        EXPECT(0x61b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0038
        gbc.setState(0x2e9, 0x1484, 0x4e20, 0xdea5, 0x6a57, 0xdd4d, 0x0, 0x1);
        gbc.writeMem(0x2e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1484, gbc.sp());
        EXPECT(0x2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0039
        gbc.setState(0x1dc9, 0x727a, 0x4cf0, 0x4fe0, 0x6554, 0x4f5e, 0x0, 0x0);
        gbc.writeMem(0x1dc9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x727a, gbc.sp());
        EXPECT(0x1dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 003A
        gbc.setState(0x9f4, 0x9018, 0x10a0, 0xb85d, 0x7fd9, 0xe53c, 0x1, 0x0);
        gbc.writeMem(0x9f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9018, gbc.sp());
        EXPECT(0x9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 003B
        gbc.setState(0xada2, 0x9c8e, 0x4420, 0xdb8d, 0x2fe3, 0xad25, 0x0, 0x1);
        gbc.writeMem(0xada2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9c8e, gbc.sp());
        EXPECT(0xada4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada2));
        EXPECT(0xdf, gbc.readMem(0xada3));
        // CB DF 003C
        gbc.setState(0x4bb7, 0xf6eb, 0x3fc0, 0x6ce9, 0x4904, 0xbd71, 0x1, 0x0);
        gbc.writeMem(0x4bb7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf6eb, gbc.sp());
        EXPECT(0x4bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 003D
        gbc.setState(0x2d3c, 0xac2b, 0x7c30, 0xa578, 0xda28, 0xa124, 0x1, 0x1);
        gbc.writeMem(0x2d3c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xac2b, gbc.sp());
        EXPECT(0x2d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 003E
        gbc.setState(0x70d6, 0x6f0b, 0xb7f0, 0xb33c, 0x2341, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0x70d6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6f0b, gbc.sp());
        EXPECT(0x70d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 003F
        gbc.setState(0xaa83, 0xeebd, 0x52b0, 0x2e67, 0x6ef9, 0xc530, 0x1, 0x1);
        gbc.writeMem(0xaa83, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xeebd, gbc.sp());
        EXPECT(0xaa85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa83));
        EXPECT(0xdf, gbc.readMem(0xaa84));
        // CB DF 0040
        gbc.setState(0xdc7a, 0x783b, 0x14c0, 0x51df, 0xda2b, 0x1899, 0x1, 0x1);
        gbc.writeMem(0xdc7a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x783b, gbc.sp());
        EXPECT(0xdc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7a));
        EXPECT(0xdf, gbc.readMem(0xdc7b));
        // CB DF 0041
        gbc.setState(0xdd5, 0x7449, 0x77f0, 0x3ab1, 0xd270, 0xed5a, 0x1, 0x1);
        gbc.writeMem(0xdd5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7449, gbc.sp());
        EXPECT(0xdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0042
        gbc.setState(0x5bdb, 0xd81a, 0xa1a0, 0x1340, 0x6bf2, 0xed9b, 0x1, 0x0);
        gbc.writeMem(0x5bdb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd81a, gbc.sp());
        EXPECT(0x5bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0043
        gbc.setState(0x6904, 0x3937, 0x37b0, 0x4965, 0x781f, 0xd, 0x1, 0x0);
        gbc.writeMem(0x6904, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3937, gbc.sp());
        EXPECT(0x6906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0044
        gbc.setState(0x9fc4, 0xcdd2, 0xfae0, 0x7dfb, 0x7856, 0x72b6, 0x0, 0x1);
        gbc.writeMem(0x9fc4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcdd2, gbc.sp());
        EXPECT(0x9fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc4));
        EXPECT(0xdf, gbc.readMem(0x9fc5));
        // CB DF 0045
        gbc.setState(0xceb6, 0xe3eb, 0xa90, 0x6054, 0x62e7, 0xbc6b, 0x1, 0x0);
        gbc.writeMem(0xceb6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe3eb, gbc.sp());
        EXPECT(0xceb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb6));
        EXPECT(0xdf, gbc.readMem(0xceb7));
        // CB DF 0046
        gbc.setState(0x8132, 0xa937, 0xa860, 0x5d04, 0x15c1, 0x3e08, 0x0, 0x0);
        gbc.writeMem(0x8132, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa937, gbc.sp());
        EXPECT(0x8134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8132));
        EXPECT(0xdf, gbc.readMem(0x8133));
        // CB DF 0047
        gbc.setState(0x6da, 0x431a, 0x45c0, 0x3ff2, 0x520c, 0x94d8, 0x0, 0x0);
        gbc.writeMem(0x6da, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x431a, gbc.sp());
        EXPECT(0x6dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0048
        gbc.setState(0x2243, 0x951b, 0x3310, 0x29ec, 0x94c6, 0x6823, 0x1, 0x0);
        gbc.writeMem(0x2243, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x951b, gbc.sp());
        EXPECT(0x2245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0049
        gbc.setState(0x809e, 0xb10, 0xd910, 0xaf8c, 0xf9df, 0x3a5d, 0x0, 0x1);
        gbc.writeMem(0x809e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0x80a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809e));
        EXPECT(0xdf, gbc.readMem(0x809f));
        // CB DF 004A
        gbc.setState(0x2c48, 0xebde, 0x6f50, 0xc7d2, 0x6aa4, 0x3bf2, 0x1, 0x0);
        gbc.writeMem(0x2c48, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xebde, gbc.sp());
        EXPECT(0x2c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 004B
        gbc.setState(0x1f7, 0xfc03, 0xd6c0, 0xc2fc, 0xae58, 0x1a58, 0x0, 0x0);
        gbc.writeMem(0x1f7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfc03, gbc.sp());
        EXPECT(0x1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 004C
        gbc.setState(0x4b86, 0x56c5, 0x84b0, 0xcef3, 0xa666, 0x33df, 0x1, 0x0);
        gbc.writeMem(0x4b86, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x56c5, gbc.sp());
        EXPECT(0x4b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 004F
        gbc.setState(0x8b4d, 0x1887, 0xf9a0, 0xc0d3, 0x30ff, 0xf5ea, 0x1, 0x0);
        gbc.writeMem(0x8b4d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1887, gbc.sp());
        EXPECT(0x8b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4d));
        EXPECT(0xdf, gbc.readMem(0x8b4e));
        // CB DF 0050
        gbc.setState(0xa7ff, 0xc61a, 0xca00, 0x406f, 0xc8f8, 0xb55b, 0x1, 0x1);
        gbc.writeMem(0xa7ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc61a, gbc.sp());
        EXPECT(0xa801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ff));
        EXPECT(0xdf, gbc.readMem(0xa800));
        // CB DF 0052
        gbc.setState(0x7b78, 0x1904, 0x8f70, 0xf2f3, 0x8567, 0x5849, 0x1, 0x1);
        gbc.writeMem(0x7b78, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1904, gbc.sp());
        EXPECT(0x7b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0053
        gbc.setState(0x8ea0, 0x8d2c, 0x9080, 0xcfd2, 0xa767, 0x7688, 0x0, 0x0);
        gbc.writeMem(0x8ea0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8d2c, gbc.sp());
        EXPECT(0x8ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea0));
        EXPECT(0xdf, gbc.readMem(0x8ea1));
        // CB DF 0054
        gbc.setState(0x9f3, 0x2b80, 0xd200, 0x4b7f, 0x6846, 0x2120, 0x0, 0x0);
        gbc.writeMem(0x9f3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2b80, gbc.sp());
        EXPECT(0x9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0055
        gbc.setState(0xee3a, 0x4509, 0xda70, 0x8620, 0x9c4, 0x1e30, 0x1, 0x1);
        gbc.writeMem(0xee3a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4509, gbc.sp());
        EXPECT(0xee3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3a));
        EXPECT(0xdf, gbc.readMem(0xee3b));
        // CB DF 0056
        gbc.setState(0x8170, 0x9aa6, 0x590, 0xe7d5, 0x9de3, 0x13c, 0x0, 0x0);
        gbc.writeMem(0x8170, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9aa6, gbc.sp());
        EXPECT(0x8172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8170));
        EXPECT(0xdf, gbc.readMem(0x8171));
        // CB DF 0057
        gbc.setState(0x348c, 0xff25, 0xd3a0, 0xb54c, 0x6da9, 0x846a, 0x0, 0x1);
        gbc.writeMem(0x348c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xff25, gbc.sp());
        EXPECT(0x348e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0058
        gbc.setState(0xae17, 0xb234, 0x2000, 0xcd30, 0x2222, 0xb11a, 0x1, 0x0);
        gbc.writeMem(0xae17, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb234, gbc.sp());
        EXPECT(0xae19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae17));
        EXPECT(0xdf, gbc.readMem(0xae18));
        // CB DF 005A
        gbc.setState(0x71ae, 0x98d1, 0x2850, 0xc2cf, 0x9610, 0xdd08, 0x0, 0x0);
        gbc.writeMem(0x71ae, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x98d1, gbc.sp());
        EXPECT(0x71b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 005B
        gbc.setState(0xe96b, 0xb86f, 0x2bf0, 0x28c3, 0xf91f, 0x9835, 0x1, 0x1);
        gbc.writeMem(0xe96b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb86f, gbc.sp());
        EXPECT(0xe96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96b));
        EXPECT(0xdf, gbc.readMem(0xe96c));
        // CB DF 005C
        gbc.setState(0x7cee, 0xcfce, 0x6560, 0x6598, 0xa0, 0x1972, 0x1, 0x1);
        gbc.writeMem(0x7cee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcfce, gbc.sp());
        EXPECT(0x7cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 005D
        gbc.setState(0x8a94, 0x55d0, 0x9fd0, 0xaba1, 0x3937, 0xba58, 0x0, 0x0);
        gbc.writeMem(0x8a94, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x55d0, gbc.sp());
        EXPECT(0x8a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a94));
        EXPECT(0xdf, gbc.readMem(0x8a95));
        // CB DF 005E
        gbc.setState(0x3a74, 0x9c18, 0xc470, 0xd93a, 0x3b6, 0xcd15, 0x1, 0x1);
        gbc.writeMem(0x3a74, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9c18, gbc.sp());
        EXPECT(0x3a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 005F
        gbc.setState(0x1c99, 0xd9ce, 0xbe70, 0xa062, 0x98eb, 0x274c, 0x0, 0x1);
        gbc.writeMem(0x1c99, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd9ce, gbc.sp());
        EXPECT(0x1c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0060
        gbc.setState(0xa7cd, 0x735f, 0xda50, 0x5752, 0x9ce8, 0xfe97, 0x0, 0x0);
        gbc.writeMem(0xa7cd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x735f, gbc.sp());
        EXPECT(0xa7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cd));
        EXPECT(0xdf, gbc.readMem(0xa7ce));
        // CB DF 0061
        gbc.setState(0x236, 0xe1a3, 0x1860, 0x23d0, 0xa2a9, 0xda2b, 0x1, 0x1);
        gbc.writeMem(0x236, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe1a3, gbc.sp());
        EXPECT(0x238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0062
        gbc.setState(0xd8b, 0x2418, 0x3750, 0x87a8, 0x5b71, 0xa83a, 0x0, 0x0);
        gbc.writeMem(0xd8b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2418, gbc.sp());
        EXPECT(0xd8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0063
        gbc.setState(0x3f72, 0xf9d9, 0xa3f0, 0x51c4, 0xc5b, 0xba80, 0x1, 0x0);
        gbc.writeMem(0x3f72, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf9d9, gbc.sp());
        EXPECT(0x3f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0064
        gbc.setState(0xa33a, 0x6f30, 0x52a0, 0xa5c9, 0x65fd, 0x788f, 0x1, 0x0);
        gbc.writeMem(0xa33a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6f30, gbc.sp());
        EXPECT(0xa33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33a));
        EXPECT(0xdf, gbc.readMem(0xa33b));
        // CB DF 0065
        gbc.setState(0xc204, 0x4b71, 0xa020, 0xc36, 0x1545, 0x70c, 0x1, 0x1);
        gbc.writeMem(0xc204, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4b71, gbc.sp());
        EXPECT(0xc206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc204));
        EXPECT(0xdf, gbc.readMem(0xc205));
        // CB DF 0066
        gbc.setState(0x492e, 0x3024, 0xf070, 0xece8, 0x27cc, 0xde71, 0x1, 0x0);
        gbc.writeMem(0x492e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3024, gbc.sp());
        EXPECT(0x4930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0067
        gbc.setState(0x65a4, 0xdf0, 0x9600, 0xaa35, 0x3370, 0xdb2, 0x1, 0x1);
        gbc.writeMem(0x65a4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdf0, gbc.sp());
        EXPECT(0x65a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0068
        gbc.setState(0xcfdb, 0x3d1c, 0xe30, 0xf9e9, 0xfc42, 0x64cb, 0x1, 0x0);
        gbc.writeMem(0xcfdb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3d1c, gbc.sp());
        EXPECT(0xcfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdb));
        EXPECT(0xdf, gbc.readMem(0xcfdc));
        // CB DF 0069
        gbc.setState(0x1094, 0x24e6, 0xc810, 0xabb2, 0x4a45, 0x5468, 0x0, 0x0);
        gbc.writeMem(0x1094, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x24e6, gbc.sp());
        EXPECT(0x1096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 006A
        gbc.setState(0x9de9, 0x83d4, 0x3a00, 0x3d49, 0x9c9, 0x26ec, 0x0, 0x1);
        gbc.writeMem(0x9de9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x83d4, gbc.sp());
        EXPECT(0x9deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de9));
        EXPECT(0xdf, gbc.readMem(0x9dea));
        // CB DF 006B
        gbc.setState(0xbe46, 0x79e7, 0x34a0, 0x2d65, 0x97f1, 0x5484, 0x1, 0x0);
        gbc.writeMem(0xbe46, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x79e7, gbc.sp());
        EXPECT(0xbe48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe46));
        EXPECT(0xdf, gbc.readMem(0xbe47));
        // CB DF 006C
        gbc.setState(0x4fc9, 0x102f, 0x860, 0x6460, 0xceff, 0xe0a6, 0x0, 0x0);
        gbc.writeMem(0x4fc9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x102f, gbc.sp());
        EXPECT(0x4fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 006D
        gbc.setState(0x63b, 0x5b89, 0xd60, 0x42dd, 0x3459, 0xca0e, 0x0, 0x0);
        gbc.writeMem(0x63b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5b89, gbc.sp());
        EXPECT(0x63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 006E
        gbc.setState(0x3974, 0xb375, 0x59f0, 0x1805, 0x31f2, 0x9d67, 0x0, 0x0);
        gbc.writeMem(0x3974, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb375, gbc.sp());
        EXPECT(0x3976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 006F
        gbc.setState(0x49f2, 0x7003, 0xf390, 0x5df2, 0x4d29, 0xcc0f, 0x0, 0x0);
        gbc.writeMem(0x49f2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7003, gbc.sp());
        EXPECT(0x49f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0070
        gbc.setState(0x74b0, 0x29b6, 0xd9b0, 0x3ed3, 0x78f1, 0xa0c6, 0x0, 0x1);
        gbc.writeMem(0x74b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x29b6, gbc.sp());
        EXPECT(0x74b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0072
        gbc.setState(0x8d1d, 0xca1a, 0xdf10, 0xf8f, 0x6a9f, 0x16d, 0x1, 0x0);
        gbc.writeMem(0x8d1d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xca1a, gbc.sp());
        EXPECT(0x8d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1d));
        EXPECT(0xdf, gbc.readMem(0x8d1e));
        // CB DF 0073
        gbc.setState(0x4b6c, 0x6e97, 0x8cc0, 0x3383, 0x6780, 0x5385, 0x1, 0x1);
        gbc.writeMem(0x4b6c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6e97, gbc.sp());
        EXPECT(0x4b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0074
        gbc.setState(0x4a65, 0xbf50, 0xbc70, 0x1bed, 0x8a61, 0xf72c, 0x1, 0x1);
        gbc.writeMem(0x4a65, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0x4a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0075
        gbc.setState(0x9d2a, 0xa1f5, 0x63b0, 0x9b8c, 0xd19b, 0x6287, 0x0, 0x1);
        gbc.writeMem(0x9d2a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa1f5, gbc.sp());
        EXPECT(0x9d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2a));
        EXPECT(0xdf, gbc.readMem(0x9d2b));
        // CB DF 0076
        gbc.setState(0xdbce, 0x4684, 0x48f0, 0x6516, 0xc159, 0x50d, 0x0, 0x0);
        gbc.writeMem(0xdbce, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4684, gbc.sp());
        EXPECT(0xdbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbce));
        EXPECT(0xdf, gbc.readMem(0xdbcf));
        // CB DF 0077
        gbc.setState(0xa766, 0xb6d9, 0xb3a0, 0x5d89, 0x50d2, 0x5f53, 0x0, 0x0);
        gbc.writeMem(0xa766, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb6d9, gbc.sp());
        EXPECT(0xa768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa766));
        EXPECT(0xdf, gbc.readMem(0xa767));
        // CB DF 0078
        gbc.setState(0x4d88, 0xbb4e, 0x53c0, 0x924e, 0xee9f, 0x8eb6, 0x0, 0x1);
        gbc.writeMem(0x4d88, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbb4e, gbc.sp());
        EXPECT(0x4d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0079
        gbc.setState(0xc6dc, 0x4cdf, 0x47d0, 0xd12f, 0x19bd, 0x6b18, 0x1, 0x1);
        gbc.writeMem(0xc6dc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4cdf, gbc.sp());
        EXPECT(0xc6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6dc));
        EXPECT(0xdf, gbc.readMem(0xc6dd));
        // CB DF 007A
        gbc.setState(0x9f67, 0xc6ad, 0xcc80, 0x8a56, 0xa5a2, 0xd65a, 0x1, 0x0);
        gbc.writeMem(0x9f67, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc6ad, gbc.sp());
        EXPECT(0x9f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f67));
        EXPECT(0xdf, gbc.readMem(0x9f68));
        // CB DF 007B
        gbc.setState(0x644e, 0xf250, 0x1540, 0x7724, 0xffc8, 0xeef6, 0x0, 0x0);
        gbc.writeMem(0x644e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf250, gbc.sp());
        EXPECT(0x6450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 007C
        gbc.setState(0x2587, 0x2e1d, 0xb0d0, 0xe43c, 0x5284, 0xd12, 0x0, 0x1);
        gbc.writeMem(0x2587, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2e1d, gbc.sp());
        EXPECT(0x2589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 007D
        gbc.setState(0x8789, 0x5bcb, 0xfd90, 0x4609, 0xbb20, 0xc852, 0x0, 0x1);
        gbc.writeMem(0x8789, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0x878b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8789));
        EXPECT(0xdf, gbc.readMem(0x878a));
        // CB DF 007E
        gbc.setState(0x200b, 0x10ce, 0x700, 0xd802, 0xdb0e, 0x3456, 0x1, 0x1);
        gbc.writeMem(0x200b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x10ce, gbc.sp());
        EXPECT(0x200d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 007F
        gbc.setState(0x8b8b, 0xb17a, 0x22d0, 0xec6, 0x4044, 0x78be, 0x0, 0x1);
        gbc.writeMem(0x8b8b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb17a, gbc.sp());
        EXPECT(0x8b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8b));
        EXPECT(0xdf, gbc.readMem(0x8b8c));
        // CB DF 0080
        gbc.setState(0x68ba, 0xbdcb, 0x3f80, 0x53b4, 0x6209, 0x9dec, 0x1, 0x0);
        gbc.writeMem(0x68ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbdcb, gbc.sp());
        EXPECT(0x68bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0081
        gbc.setState(0x506a, 0xb37, 0x3690, 0x21fd, 0xdb33, 0x6c7d, 0x0, 0x1);
        gbc.writeMem(0x506a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb37, gbc.sp());
        EXPECT(0x506c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0082
        gbc.setState(0xd3e, 0x674a, 0xc1e0, 0x9221, 0x5d05, 0x7d1d, 0x0, 0x1);
        gbc.writeMem(0xd3e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x674a, gbc.sp());
        EXPECT(0xd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0083
        gbc.setState(0x6f56, 0xb81b, 0xde30, 0xc6c1, 0x7607, 0x58aa, 0x0, 0x1);
        gbc.writeMem(0x6f56, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb81b, gbc.sp());
        EXPECT(0x6f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0084
        gbc.setState(0xdab2, 0xf45b, 0xcd50, 0x8885, 0xab89, 0xb379, 0x1, 0x1);
        gbc.writeMem(0xdab2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf45b, gbc.sp());
        EXPECT(0xdab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab2));
        EXPECT(0xdf, gbc.readMem(0xdab3));
        // CB DF 0085
        gbc.setState(0xb3e2, 0x1afb, 0xd470, 0xb0df, 0xaaf7, 0xec3a, 0x1, 0x0);
        gbc.writeMem(0xb3e2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1afb, gbc.sp());
        EXPECT(0xb3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e2));
        EXPECT(0xdf, gbc.readMem(0xb3e3));
        // CB DF 0086
        gbc.setState(0x7f8c, 0xe3e, 0xc120, 0xac17, 0xede9, 0xde9a, 0x0, 0x1);
        gbc.writeMem(0x7f8c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe3e, gbc.sp());
        EXPECT(0x7f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0087
        gbc.setState(0x9bfa, 0x630b, 0x67a0, 0xdc91, 0xc1f3, 0x4ccf, 0x0, 0x0);
        gbc.writeMem(0x9bfa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x630b, gbc.sp());
        EXPECT(0x9bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfa));
        EXPECT(0xdf, gbc.readMem(0x9bfb));
        // CB DF 0088
        gbc.setState(0x7205, 0x43fe, 0x1b80, 0x14c8, 0xbd38, 0xc5b9, 0x1, 0x0);
        gbc.writeMem(0x7205, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x43fe, gbc.sp());
        EXPECT(0x7207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0089
        gbc.setState(0x84a8, 0xf612, 0xdd50, 0xfd81, 0x3b0b, 0x1315, 0x0, 0x0);
        gbc.writeMem(0x84a8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf612, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a8));
        EXPECT(0xdf, gbc.readMem(0x84a9));
        // CB DF 008A
        gbc.setState(0x6000, 0x8f56, 0xfd20, 0x44c5, 0x848f, 0x6876, 0x0, 0x1);
        gbc.writeMem(0x6000, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8f56, gbc.sp());
        EXPECT(0x6002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 008B
        gbc.setState(0x1683, 0xf0c8, 0x1440, 0xbf1b, 0x7a38, 0x6b93, 0x1, 0x1);
        gbc.writeMem(0x1683, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf0c8, gbc.sp());
        EXPECT(0x1685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 008C
        gbc.setState(0x3984, 0x9651, 0xfab0, 0xb7b3, 0xae2c, 0x5790, 0x1, 0x1);
        gbc.writeMem(0x3984, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9651, gbc.sp());
        EXPECT(0x3986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 008D
        gbc.setState(0x3265, 0x9a21, 0xeb30, 0x1920, 0x791a, 0x580f, 0x1, 0x1);
        gbc.writeMem(0x3265, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9a21, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 008E
        gbc.setState(0x8e76, 0xe93d, 0x4250, 0xa3d3, 0x113b, 0xc52c, 0x1, 0x1);
        gbc.writeMem(0x8e76, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe93d, gbc.sp());
        EXPECT(0x8e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e76));
        EXPECT(0xdf, gbc.readMem(0x8e77));
        // CB DF 008F
        gbc.setState(0x3bfc, 0xaea, 0xbaa0, 0xdeff, 0x8313, 0xc17f, 0x1, 0x1);
        gbc.writeMem(0x3bfc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaea, gbc.sp());
        EXPECT(0x3bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0090
        gbc.setState(0x74be, 0x9a1a, 0xac0, 0x87c8, 0x5fb0, 0x15d9, 0x0, 0x1);
        gbc.writeMem(0x74be, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9a1a, gbc.sp());
        EXPECT(0x74c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0091
        gbc.setState(0x7be6, 0xe70d, 0xd600, 0x5f28, 0x582a, 0x32f8, 0x0, 0x1);
        gbc.writeMem(0x7be6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe70d, gbc.sp());
        EXPECT(0x7be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0092
        gbc.setState(0x5f13, 0x4c2a, 0x51c0, 0x3daf, 0xbc13, 0x60ed, 0x0, 0x1);
        gbc.writeMem(0x5f13, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4c2a, gbc.sp());
        EXPECT(0x5f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0093
        gbc.setState(0x6dec, 0xbf11, 0x3780, 0xa61f, 0x10ae, 0x2c9, 0x1, 0x0);
        gbc.writeMem(0x6dec, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbf11, gbc.sp());
        EXPECT(0x6dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0094
        gbc.setState(0xa0b1, 0x1cf, 0x1450, 0x191f, 0xcf3b, 0xe8a5, 0x1, 0x0);
        gbc.writeMem(0xa0b1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1cf, gbc.sp());
        EXPECT(0xa0b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b1));
        EXPECT(0xdf, gbc.readMem(0xa0b2));
        // CB DF 0095
        gbc.setState(0xd8c8, 0xe7ac, 0xe370, 0x9bc4, 0xca60, 0xaf98, 0x0, 0x1);
        gbc.writeMem(0xd8c8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe7ac, gbc.sp());
        EXPECT(0xd8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c8));
        EXPECT(0xdf, gbc.readMem(0xd8c9));
        // CB DF 0096
        gbc.setState(0x50d8, 0x5c03, 0xd2a0, 0x5770, 0xfb84, 0x499d, 0x0, 0x0);
        gbc.writeMem(0x50d8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5c03, gbc.sp());
        EXPECT(0x50da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0097
        gbc.setState(0x6b0, 0x3038, 0x6200, 0xa766, 0xb552, 0xc438, 0x0, 0x0);
        gbc.writeMem(0x6b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3038, gbc.sp());
        EXPECT(0x6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0098
        gbc.setState(0xad16, 0x2a05, 0x9f10, 0x2793, 0xb329, 0x8613, 0x0, 0x0);
        gbc.writeMem(0xad16, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2a05, gbc.sp());
        EXPECT(0xad18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad16));
        EXPECT(0xdf, gbc.readMem(0xad17));
        // CB DF 0099
        gbc.setState(0x2bb0, 0x8c00, 0x7d80, 0xfb9f, 0x24c2, 0x8315, 0x0, 0x1);
        gbc.writeMem(0x2bb0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8c00, gbc.sp());
        EXPECT(0x2bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 009B
        gbc.setState(0xa800, 0x4f64, 0xb770, 0x16d3, 0x1138, 0x1403, 0x1, 0x0);
        gbc.writeMem(0xa800, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4f64, gbc.sp());
        EXPECT(0xa802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa800));
        EXPECT(0xdf, gbc.readMem(0xa801));
        // CB DF 009C
        gbc.setState(0x18ae, 0x44c7, 0x47e0, 0x8069, 0xaa1d, 0x8a7d, 0x1, 0x0);
        gbc.writeMem(0x18ae, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x44c7, gbc.sp());
        EXPECT(0x18b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 009D
        gbc.setState(0x4415, 0xbd35, 0x7f30, 0xe649, 0x5d2e, 0xd3e6, 0x1, 0x1);
        gbc.writeMem(0x4415, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0x4417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 009E
        gbc.setState(0x713c, 0x2963, 0xca20, 0xec69, 0x5a53, 0xe292, 0x0, 0x0);
        gbc.writeMem(0x713c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0x713e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 009F
        gbc.setState(0xbd10, 0x461c, 0xf8b0, 0x56df, 0xb539, 0xbd77, 0x1, 0x0);
        gbc.writeMem(0xbd10, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x461c, gbc.sp());
        EXPECT(0xbd12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd10));
        EXPECT(0xdf, gbc.readMem(0xbd11));
        // CB DF 00A0
        gbc.setState(0x6cf1, 0x7a78, 0xc5d0, 0x726, 0x7af0, 0x44fb, 0x1, 0x0);
        gbc.writeMem(0x6cf1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7a78, gbc.sp());
        EXPECT(0x6cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00A1
        gbc.setState(0xe7c2, 0x9b7f, 0xa5e0, 0xb9fa, 0xab0a, 0x49a8, 0x0, 0x1);
        gbc.writeMem(0xe7c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9b7f, gbc.sp());
        EXPECT(0xe7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c2));
        EXPECT(0xdf, gbc.readMem(0xe7c3));
        // CB DF 00A2
        gbc.setState(0xe519, 0xc951, 0x7730, 0x4827, 0x2ddd, 0xc4e, 0x1, 0x1);
        gbc.writeMem(0xe519, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc951, gbc.sp());
        EXPECT(0xe51b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe519));
        EXPECT(0xdf, gbc.readMem(0xe51a));
        // CB DF 00A3
        gbc.setState(0x4d17, 0xe21b, 0x7ca0, 0x4498, 0x3bc8, 0xaa9c, 0x0, 0x1);
        gbc.writeMem(0x4d17, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe21b, gbc.sp());
        EXPECT(0x4d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00A4
        gbc.setState(0x6d0a, 0xa989, 0x7fd0, 0xfb53, 0xd3c9, 0xffff, 0x0, 0x1);
        gbc.writeMem(0x6d0a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa989, gbc.sp());
        EXPECT(0x6d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00A5
        gbc.setState(0x85cb, 0x38d, 0x1140, 0x4d57, 0x7f59, 0xeb5e, 0x0, 0x1);
        gbc.writeMem(0x85cb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x38d, gbc.sp());
        EXPECT(0x85cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85cb));
        EXPECT(0xdf, gbc.readMem(0x85cc));
        // CB DF 00A7
        gbc.setState(0xae95, 0xdec1, 0x5060, 0xb905, 0x6bc3, 0x1a23, 0x0, 0x0);
        gbc.writeMem(0xae95, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdec1, gbc.sp());
        EXPECT(0xae97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae95));
        EXPECT(0xdf, gbc.readMem(0xae96));
        // CB DF 00A8
        gbc.setState(0x86bf, 0x17a7, 0xa810, 0x46ec, 0x2e69, 0xa314, 0x0, 0x1);
        gbc.writeMem(0x86bf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x17a7, gbc.sp());
        EXPECT(0x86c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86bf));
        EXPECT(0xdf, gbc.readMem(0x86c0));
        // CB DF 00A9
        gbc.setState(0xed12, 0x3e2b, 0x3e40, 0x9d39, 0x58f4, 0xab53, 0x1, 0x1);
        gbc.writeMem(0xed12, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3e2b, gbc.sp());
        EXPECT(0xed14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed12));
        EXPECT(0xdf, gbc.readMem(0xed13));
        // CB DF 00AA
        gbc.setState(0x9b32, 0xb6e3, 0xf50, 0x89c9, 0x3ef, 0x56f8, 0x0, 0x0);
        gbc.writeMem(0x9b32, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb6e3, gbc.sp());
        EXPECT(0x9b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b32));
        EXPECT(0xdf, gbc.readMem(0x9b33));
        // CB DF 00AC
        gbc.setState(0x5c1d, 0xa5bb, 0xf970, 0xb352, 0xd1d2, 0x3d04, 0x1, 0x1);
        gbc.writeMem(0x5c1d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa5bb, gbc.sp());
        EXPECT(0x5c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00AD
        gbc.setState(0xe01b, 0xfc59, 0x2040, 0x5785, 0x62a9, 0x4d3c, 0x0, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfc59, gbc.sp());
        EXPECT(0xe01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01b));
        EXPECT(0xdf, gbc.readMem(0xe01c));
        // CB DF 00AE
        gbc.setState(0xe2cc, 0x8d37, 0xa300, 0x8a6a, 0xa8b7, 0x2ea3, 0x1, 0x0);
        gbc.writeMem(0xe2cc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8d37, gbc.sp());
        EXPECT(0xe2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2cc));
        EXPECT(0xdf, gbc.readMem(0xe2cd));
        // CB DF 00AF
        gbc.setState(0xdcb3, 0x714c, 0x4100, 0x4ff3, 0xfd21, 0xc5ca, 0x1, 0x1);
        gbc.writeMem(0xdcb3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x714c, gbc.sp());
        EXPECT(0xdcb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb3));
        EXPECT(0xdf, gbc.readMem(0xdcb4));
        // CB DF 00B0
        gbc.setState(0x76ee, 0x4b53, 0x4490, 0x5d4a, 0x40f2, 0xf46, 0x0, 0x1);
        gbc.writeMem(0x76ee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4b53, gbc.sp());
        EXPECT(0x76f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00B1
        gbc.setState(0x552a, 0x6bc, 0x2b90, 0x4bc0, 0xdc48, 0x4f55, 0x0, 0x1);
        gbc.writeMem(0x552a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6bc, gbc.sp());
        EXPECT(0x552c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00B2
        gbc.setState(0x5519, 0x195f, 0xfbb0, 0x8c49, 0xce15, 0x5f4b, 0x0, 0x0);
        gbc.writeMem(0x5519, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x195f, gbc.sp());
        EXPECT(0x551b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00B3
        gbc.setState(0x3808, 0xe9b0, 0x1370, 0xfaff, 0xebbb, 0xee14, 0x1, 0x0);
        gbc.writeMem(0x3808, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe9b0, gbc.sp());
        EXPECT(0x380a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00B4
        gbc.setState(0x9b49, 0x54e0, 0xaf0, 0xb742, 0xfbf9, 0x2ab4, 0x0, 0x1);
        gbc.writeMem(0x9b49, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x54e0, gbc.sp());
        EXPECT(0x9b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b49));
        EXPECT(0xdf, gbc.readMem(0x9b4a));
        // CB DF 00B6
        gbc.setState(0x5db1, 0xbd4, 0xa4a0, 0x8419, 0x4305, 0x8aab, 0x0, 0x0);
        gbc.writeMem(0x5db1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0x5db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00B7
        gbc.setState(0x3f2d, 0x7306, 0x230, 0x931a, 0xf1b8, 0x47e5, 0x0, 0x0);
        gbc.writeMem(0x3f2d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7306, gbc.sp());
        EXPECT(0x3f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00B8
        gbc.setState(0x8e72, 0xfd3e, 0xae70, 0xaf18, 0xea0d, 0x5a38, 0x0, 0x1);
        gbc.writeMem(0x8e72, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfd3e, gbc.sp());
        EXPECT(0x8e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e72));
        EXPECT(0xdf, gbc.readMem(0x8e73));
        // CB DF 00B9
        gbc.setState(0x529a, 0x661d, 0xbe30, 0x6192, 0x4d49, 0x5ce6, 0x1, 0x1);
        gbc.writeMem(0x529a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x661d, gbc.sp());
        EXPECT(0x529c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00BA
        gbc.setState(0x489d, 0xeb34, 0x2af0, 0xda5e, 0x72dc, 0xb2f8, 0x1, 0x0);
        gbc.writeMem(0x489d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xeb34, gbc.sp());
        EXPECT(0x489f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00BB
        gbc.setState(0x4258, 0x1663, 0x93f0, 0xf93d, 0xa71c, 0x2108, 0x0, 0x0);
        gbc.writeMem(0x4258, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1663, gbc.sp());
        EXPECT(0x425a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00BC
        gbc.setState(0x2dcb, 0x695a, 0x8a0, 0x4827, 0x4dd1, 0xe517, 0x1, 0x0);
        gbc.writeMem(0x2dcb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x695a, gbc.sp());
        EXPECT(0x2dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00BD
        gbc.setState(0xd9e9, 0x18d6, 0x4300, 0x7333, 0x21a7, 0x91ce, 0x1, 0x1);
        gbc.writeMem(0xd9e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x18d6, gbc.sp());
        EXPECT(0xd9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e9));
        EXPECT(0xdf, gbc.readMem(0xd9ea));
        // CB DF 00BE
        gbc.setState(0x6ba7, 0xee82, 0x8960, 0xb2dd, 0x32b2, 0xb234, 0x1, 0x0);
        gbc.writeMem(0x6ba7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xee82, gbc.sp());
        EXPECT(0x6ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00C0
        gbc.setState(0x7b05, 0x706b, 0xba0, 0x4f00, 0x9c9b, 0x8fd2, 0x0, 0x1);
        gbc.writeMem(0x7b05, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x706b, gbc.sp());
        EXPECT(0x7b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00C1
        gbc.setState(0x2077, 0xf, 0x49c0, 0x94f8, 0x7446, 0xa516, 0x1, 0x0);
        gbc.writeMem(0x2077, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf, gbc.sp());
        EXPECT(0x2079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00C2
        gbc.setState(0x1eca, 0x7112, 0x3d0, 0x66a5, 0x23c1, 0x8ab, 0x1, 0x0);
        gbc.writeMem(0x1eca, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7112, gbc.sp());
        EXPECT(0x1ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00C3
        gbc.setState(0x8c76, 0x172a, 0x8bf0, 0x3aa5, 0x798d, 0x4512, 0x0, 0x1);
        gbc.writeMem(0x8c76, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x172a, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c76));
        EXPECT(0xdf, gbc.readMem(0x8c77));
        // CB DF 00C4
        gbc.setState(0xd77d, 0xf453, 0xb260, 0x351e, 0x51bf, 0x3306, 0x0, 0x0);
        gbc.writeMem(0xd77d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf453, gbc.sp());
        EXPECT(0xd77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77d));
        EXPECT(0xdf, gbc.readMem(0xd77e));
        // CB DF 00C5
        gbc.setState(0x5695, 0xaea7, 0x6f30, 0xbb3a, 0xc3b0, 0x8dde, 0x1, 0x0);
        gbc.writeMem(0x5695, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaea7, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00C6
        gbc.setState(0xeeac, 0xcdb3, 0x6e40, 0xddb9, 0x9f60, 0x57, 0x0, 0x0);
        gbc.writeMem(0xeeac, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0xeeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeac));
        EXPECT(0xdf, gbc.readMem(0xeead));
        // CB DF 00C7
        gbc.setState(0x2052, 0x72e9, 0x8650, 0x8678, 0x7133, 0x3300, 0x0, 0x1);
        gbc.writeMem(0x2052, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x72e9, gbc.sp());
        EXPECT(0x2054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00C8
        gbc.setState(0x3669, 0x1909, 0x53c0, 0xd530, 0xd875, 0xb2d6, 0x0, 0x0);
        gbc.writeMem(0x3669, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1909, gbc.sp());
        EXPECT(0x366b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00C9
        gbc.setState(0xb18a, 0x465a, 0xc810, 0x6f5c, 0x8d45, 0x4887, 0x0, 0x1);
        gbc.writeMem(0xb18a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x465a, gbc.sp());
        EXPECT(0xb18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18a));
        EXPECT(0xdf, gbc.readMem(0xb18b));
        // CB DF 00CA
        gbc.setState(0x122f, 0x977b, 0x42c0, 0xe02e, 0x9783, 0x68ad, 0x0, 0x0);
        gbc.writeMem(0x122f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x977b, gbc.sp());
        EXPECT(0x1231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00CC
        gbc.setState(0x3ad8, 0xc0b9, 0x7b30, 0xf97f, 0xca18, 0x31d, 0x1, 0x1);
        gbc.writeMem(0x3ad8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc0b9, gbc.sp());
        EXPECT(0x3ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00CD
        gbc.setState(0x19ab, 0x3695, 0x36c0, 0x8281, 0xa1b8, 0x84ed, 0x1, 0x0);
        gbc.writeMem(0x19ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3695, gbc.sp());
        EXPECT(0x19ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00CE
        gbc.setState(0x36f6, 0x61bf, 0x8630, 0xe5e8, 0xf076, 0x873f, 0x0, 0x1);
        gbc.writeMem(0x36f6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x61bf, gbc.sp());
        EXPECT(0x36f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00CF
        gbc.setState(0xce87, 0x8da5, 0x4c00, 0x87ee, 0xbcc0, 0x4b88, 0x1, 0x1);
        gbc.writeMem(0xce87, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8da5, gbc.sp());
        EXPECT(0xce89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce87));
        EXPECT(0xdf, gbc.readMem(0xce88));
        // CB DF 00D0
        gbc.setState(0x26c0, 0x717e, 0x68a0, 0xef22, 0x82f3, 0xe2d4, 0x0, 0x1);
        gbc.writeMem(0x26c0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x717e, gbc.sp());
        EXPECT(0x26c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00D1
        gbc.setState(0x82f4, 0x279b, 0x40f0, 0xa15, 0x6f08, 0x6dc, 0x1, 0x0);
        gbc.writeMem(0x82f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x279b, gbc.sp());
        EXPECT(0x82f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f4));
        EXPECT(0xdf, gbc.readMem(0x82f5));
        // CB DF 00D2
        gbc.setState(0xacb8, 0x6f0d, 0x1190, 0x1164, 0x7912, 0x3b21, 0x0, 0x0);
        gbc.writeMem(0xacb8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6f0d, gbc.sp());
        EXPECT(0xacba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb8));
        EXPECT(0xdf, gbc.readMem(0xacb9));
        // CB DF 00D3
        gbc.setState(0xb259, 0x9d73, 0x6db0, 0x913b, 0xb79d, 0xc728, 0x0, 0x0);
        gbc.writeMem(0xb259, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9d73, gbc.sp());
        EXPECT(0xb25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb259));
        EXPECT(0xdf, gbc.readMem(0xb25a));
        // CB DF 00D4
        gbc.setState(0x5a07, 0xeadb, 0xf040, 0x813e, 0x175c, 0x8bc1, 0x1, 0x1);
        gbc.writeMem(0x5a07, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeadb, gbc.sp());
        EXPECT(0x5a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00D5
        gbc.setState(0x90d7, 0x1bbd, 0x5290, 0x44a, 0xa06e, 0x3389, 0x0, 0x0);
        gbc.writeMem(0x90d7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1bbd, gbc.sp());
        EXPECT(0x90d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d7));
        EXPECT(0xdf, gbc.readMem(0x90d8));
        // CB DF 00D6
        gbc.setState(0xab04, 0x6fc6, 0xc650, 0xcb81, 0x3fa5, 0x4c4a, 0x0, 0x1);
        gbc.writeMem(0xab04, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6fc6, gbc.sp());
        EXPECT(0xab06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab04));
        EXPECT(0xdf, gbc.readMem(0xab05));
        // CB DF 00D7
        gbc.setState(0x5221, 0xa907, 0x3950, 0x6c72, 0x898, 0x6b6e, 0x0, 0x0);
        gbc.writeMem(0x5221, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa907, gbc.sp());
        EXPECT(0x5223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00D8
        gbc.setState(0x6b79, 0x9afb, 0xe150, 0xc44a, 0x314f, 0x4960, 0x0, 0x0);
        gbc.writeMem(0x6b79, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9afb, gbc.sp());
        EXPECT(0x6b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00D9
        gbc.setState(0x664b, 0xabda, 0x9b60, 0xb558, 0x4116, 0xebbd, 0x0, 0x0);
        gbc.writeMem(0x664b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xabda, gbc.sp());
        EXPECT(0x664d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00DA
        gbc.setState(0x829e, 0xa4c5, 0x4070, 0xcfb7, 0x4dd9, 0xf88d, 0x1, 0x0);
        gbc.writeMem(0x829e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa4c5, gbc.sp());
        EXPECT(0x82a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829e));
        EXPECT(0xdf, gbc.readMem(0x829f));
        // CB DF 00DB
        gbc.setState(0xe29f, 0x59f3, 0x6b60, 0xb7f1, 0x78d, 0xec53, 0x1, 0x0);
        gbc.writeMem(0xe29f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x59f3, gbc.sp());
        EXPECT(0xe2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29f));
        EXPECT(0xdf, gbc.readMem(0xe2a0));
        // CB DF 00DC
        gbc.setState(0x902, 0xdb0a, 0x9410, 0x25db, 0xeab5, 0x6096, 0x0, 0x0);
        gbc.writeMem(0x902, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdb0a, gbc.sp());
        EXPECT(0x904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00DD
        gbc.setState(0x9bc7, 0x6174, 0xbd30, 0xb45c, 0x1b99, 0x99c, 0x1, 0x1);
        gbc.writeMem(0x9bc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6174, gbc.sp());
        EXPECT(0x9bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc7));
        EXPECT(0xdf, gbc.readMem(0x9bc8));
        // CB DF 00DE
        gbc.setState(0x1bda, 0xfdd7, 0x25e0, 0x8153, 0xbb54, 0x89a6, 0x1, 0x1);
        gbc.writeMem(0x1bda, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfdd7, gbc.sp());
        EXPECT(0x1bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00E0
        gbc.setState(0xe98f, 0xc6d6, 0x9570, 0x599e, 0x7f35, 0xb898, 0x1, 0x0);
        gbc.writeMem(0xe98f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc6d6, gbc.sp());
        EXPECT(0xe991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98f));
        EXPECT(0xdf, gbc.readMem(0xe990));
        // CB DF 00E1
        gbc.setState(0x74ef, 0x53a6, 0xf9f0, 0x869f, 0x50ba, 0x45e3, 0x1, 0x0);
        gbc.writeMem(0x74ef, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x53a6, gbc.sp());
        EXPECT(0x74f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00E2
        gbc.setState(0x95b, 0x637e, 0x3e0, 0xdeed, 0x2b90, 0xbac8, 0x1, 0x1);
        gbc.writeMem(0x95b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x637e, gbc.sp());
        EXPECT(0x95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00E3
        gbc.setState(0x2ac3, 0x30b5, 0x4810, 0xa302, 0x4579, 0xefa7, 0x0, 0x1);
        gbc.writeMem(0x2ac3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x30b5, gbc.sp());
        EXPECT(0x2ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00E5
        gbc.setState(0x33b4, 0x7259, 0xabc0, 0x2627, 0xbc94, 0x80dc, 0x0, 0x0);
        gbc.writeMem(0x33b4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7259, gbc.sp());
        EXPECT(0x33b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00E6
        gbc.setState(0x6ac8, 0xb46f, 0x6bb0, 0x1b06, 0x7719, 0xf035, 0x0, 0x0);
        gbc.writeMem(0x6ac8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb46f, gbc.sp());
        EXPECT(0x6aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00E7
        gbc.setState(0x3853, 0x6289, 0x33c0, 0xdd46, 0xfc5e, 0x7153, 0x0, 0x1);
        gbc.writeMem(0x3853, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6289, gbc.sp());
        EXPECT(0x3855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00E8
        gbc.setState(0x79d9, 0x70d, 0xc030, 0x37a5, 0x2a26, 0x9378, 0x0, 0x0);
        gbc.writeMem(0x79d9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x70d, gbc.sp());
        EXPECT(0x79db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00E9
        gbc.setState(0x3a04, 0xd148, 0xa600, 0x1cdc, 0xe0dd, 0x16e2, 0x1, 0x1);
        gbc.writeMem(0x3a04, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd148, gbc.sp());
        EXPECT(0x3a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00EA
        gbc.setState(0x7933, 0xb84d, 0x9020, 0xe6ce, 0xf3bd, 0x52ed, 0x1, 0x1);
        gbc.writeMem(0x7933, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb84d, gbc.sp());
        EXPECT(0x7935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00EB
        gbc.setState(0xca52, 0xf000, 0xcc0, 0x7583, 0x5ea, 0xa004, 0x0, 0x1);
        gbc.writeMem(0xca52, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf000, gbc.sp());
        EXPECT(0xca54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca52));
        EXPECT(0xdf, gbc.readMem(0xca53));
        // CB DF 00EC
        gbc.setState(0x9938, 0x8e07, 0x73b0, 0x2be5, 0xd4dd, 0x4573, 0x1, 0x1);
        gbc.writeMem(0x9938, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8e07, gbc.sp());
        EXPECT(0x993a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9938));
        EXPECT(0xdf, gbc.readMem(0x9939));
        // CB DF 00ED
        gbc.setState(0x10f4, 0x38fb, 0xf3e0, 0xa6a3, 0xe98e, 0xd8e9, 0x1, 0x0);
        gbc.writeMem(0x10f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x38fb, gbc.sp());
        EXPECT(0x10f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00EE
        gbc.setState(0xea62, 0x8e47, 0xad80, 0x442, 0x7440, 0xf795, 0x1, 0x1);
        gbc.writeMem(0xea62, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8e47, gbc.sp());
        EXPECT(0xea64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea62));
        EXPECT(0xdf, gbc.readMem(0xea63));
        // CB DF 00EF
        gbc.setState(0x35ba, 0x3b51, 0x7170, 0xe822, 0x22f3, 0x681c, 0x1, 0x0);
        gbc.writeMem(0x35ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3b51, gbc.sp());
        EXPECT(0x35bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00F0
        gbc.setState(0x9294, 0xfbe8, 0x4180, 0xfb49, 0xed9c, 0x4bd3, 0x0, 0x1);
        gbc.writeMem(0x9294, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfbe8, gbc.sp());
        EXPECT(0x9296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9294));
        EXPECT(0xdf, gbc.readMem(0x9295));
        // CB DF 00F1
        gbc.setState(0xc056, 0xdd89, 0x5cc0, 0xad1, 0x831b, 0x4242, 0x1, 0x1);
        gbc.writeMem(0xc056, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdd89, gbc.sp());
        EXPECT(0xc058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc056));
        EXPECT(0xdf, gbc.readMem(0xc057));
        // CB DF 00F2
        gbc.setState(0x4c8f, 0x44fd, 0x3f50, 0xbf32, 0x565f, 0x2468, 0x0, 0x1);
        gbc.writeMem(0x4c8f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x44fd, gbc.sp());
        EXPECT(0x4c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00F3
        gbc.setState(0x407f, 0x2847, 0x3370, 0xa1aa, 0xbd77, 0xdd6d, 0x0, 0x1);
        gbc.writeMem(0x407f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2847, gbc.sp());
        EXPECT(0x4081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00F4
        gbc.setState(0x77d1, 0x4968, 0xbed0, 0x7ea3, 0xb6af, 0xf7af, 0x1, 0x1);
        gbc.writeMem(0x77d1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4968, gbc.sp());
        EXPECT(0x77d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00F5
        gbc.setState(0x6d73, 0x8468, 0x7570, 0xb2c8, 0xfc7b, 0xef43, 0x1, 0x0);
        gbc.writeMem(0x6d73, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00F7
        gbc.setState(0x202d, 0xf55f, 0x7060, 0xe30c, 0x4ddd, 0x68fc, 0x1, 0x0);
        gbc.writeMem(0x202d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf55f, gbc.sp());
        EXPECT(0x202f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00F8
        gbc.setState(0xc71e, 0x55d2, 0x1b40, 0x5bde, 0x3458, 0xd2c1, 0x0, 0x1);
        gbc.writeMem(0xc71e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x55d2, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71e));
        EXPECT(0xdf, gbc.readMem(0xc71f));
        // CB DF 00F9
        gbc.setState(0x8dd8, 0xa7c6, 0x1880, 0x3932, 0x55e6, 0xd394, 0x0, 0x1);
        gbc.writeMem(0x8dd8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa7c6, gbc.sp());
        EXPECT(0x8dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd8));
        EXPECT(0xdf, gbc.readMem(0x8dd9));
        // CB DF 00FA
        gbc.setState(0xcd29, 0x217f, 0x7c90, 0xf683, 0x2370, 0x3da9, 0x1, 0x1);
        gbc.writeMem(0xcd29, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x217f, gbc.sp());
        EXPECT(0xcd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd29));
        EXPECT(0xdf, gbc.readMem(0xcd2a));
        // CB DF 00FB
        gbc.setState(0x3b3e, 0xb460, 0x76d0, 0xb7bd, 0x2843, 0xe153, 0x1, 0x0);
        gbc.writeMem(0x3b3e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb460, gbc.sp());
        EXPECT(0x3b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00FD
        gbc.setState(0x527, 0xc4b2, 0xc3f0, 0xbf57, 0xd187, 0x91ef, 0x1, 0x0);
        gbc.writeMem(0x527, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc4b2, gbc.sp());
        EXPECT(0x529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 00FE
        gbc.setState(0x6e77, 0xd9af, 0x9ea0, 0x3090, 0xbed9, 0xd1ac, 0x1, 0x1);
        gbc.writeMem(0x6e77, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd9af, gbc.sp());
        EXPECT(0x6e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 00FF
        gbc.setState(0x1f67, 0x3740, 0xd290, 0xdc6b, 0x20a3, 0x4fee, 0x0, 0x0);
        gbc.writeMem(0x1f67, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3740, gbc.sp());
        EXPECT(0x1f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0100
        gbc.setState(0x376c, 0x579a, 0xa790, 0xe600, 0xdbf5, 0x35bd, 0x1, 0x0);
        gbc.writeMem(0x376c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x579a, gbc.sp());
        EXPECT(0x376e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0101
        gbc.setState(0x74df, 0x587e, 0xcfd0, 0x8d43, 0x9b58, 0x1ca7, 0x1, 0x1);
        gbc.writeMem(0x74df, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x587e, gbc.sp());
        EXPECT(0x74e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0102
        gbc.setState(0xe2ff, 0x9913, 0xd8c0, 0xa612, 0x7241, 0x2a32, 0x1, 0x0);
        gbc.writeMem(0xe2ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9913, gbc.sp());
        EXPECT(0xe301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ff));
        EXPECT(0xdf, gbc.readMem(0xe300));
        // CB DF 0103
        gbc.setState(0xc85b, 0x69fa, 0x6040, 0xc4d2, 0xdeaf, 0xd18e, 0x1, 0x0);
        gbc.writeMem(0xc85b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x69fa, gbc.sp());
        EXPECT(0xc85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85b));
        EXPECT(0xdf, gbc.readMem(0xc85c));
        // CB DF 0104
        gbc.setState(0x3f2b, 0x1991, 0x4590, 0x2151, 0x92f4, 0xe103, 0x1, 0x1);
        gbc.writeMem(0x3f2b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1991, gbc.sp());
        EXPECT(0x3f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0105
        gbc.setState(0x3afb, 0xc1bc, 0x4730, 0x84e1, 0x2308, 0xcec5, 0x0, 0x0);
        gbc.writeMem(0x3afb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc1bc, gbc.sp());
        EXPECT(0x3afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0106
        gbc.setState(0x68d7, 0x7a0b, 0x33f0, 0x6e43, 0xc768, 0x10aa, 0x0, 0x0);
        gbc.writeMem(0x68d7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7a0b, gbc.sp());
        EXPECT(0x68d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0107
        gbc.setState(0x6f5c, 0xee46, 0x1f10, 0x484a, 0x2f6a, 0x8708, 0x0, 0x0);
        gbc.writeMem(0x6f5c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xee46, gbc.sp());
        EXPECT(0x6f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0108
        gbc.setState(0x7ad6, 0xb138, 0xf490, 0xcd5f, 0x6e28, 0xac2b, 0x0, 0x1);
        gbc.writeMem(0x7ad6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb138, gbc.sp());
        EXPECT(0x7ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0109
        gbc.setState(0x1475, 0xf6a9, 0xddf0, 0x91e8, 0xe745, 0xb186, 0x0, 0x1);
        gbc.writeMem(0x1475, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf6a9, gbc.sp());
        EXPECT(0x1477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 010A
        gbc.setState(0x633d, 0xfe06, 0xcb20, 0x2c9a, 0xea71, 0x7bf0, 0x1, 0x0);
        gbc.writeMem(0x633d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfe06, gbc.sp());
        EXPECT(0x633f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 010B
        gbc.setState(0xebfa, 0x6477, 0xf200, 0x4edc, 0xf41e, 0xe2b5, 0x1, 0x1);
        gbc.writeMem(0xebfa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6477, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfa));
        EXPECT(0xdf, gbc.readMem(0xebfb));
        // CB DF 010C
        gbc.setState(0x627, 0xf45b, 0xc8e0, 0xe54c, 0x6eac, 0x206e, 0x1, 0x1);
        gbc.writeMem(0x627, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf45b, gbc.sp());
        EXPECT(0x629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 010D
        gbc.setState(0xe407, 0x644f, 0x42c0, 0x3180, 0xa862, 0xde39, 0x0, 0x0);
        gbc.writeMem(0xe407, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x644f, gbc.sp());
        EXPECT(0xe409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe407));
        EXPECT(0xdf, gbc.readMem(0xe408));
        // CB DF 010E
        gbc.setState(0x2776, 0x7f96, 0xfd80, 0xe5d4, 0x9f58, 0x3717, 0x0, 0x1);
        gbc.writeMem(0x2776, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7f96, gbc.sp());
        EXPECT(0x2778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 010F
        gbc.setState(0xe32a, 0xb774, 0x1c50, 0xb585, 0xfb8e, 0x6184, 0x0, 0x1);
        gbc.writeMem(0xe32a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb774, gbc.sp());
        EXPECT(0xe32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe32a));
        EXPECT(0xdf, gbc.readMem(0xe32b));
        // CB DF 0110
        gbc.setState(0xe4f1, 0xaf87, 0x78d0, 0xb08a, 0x558b, 0x7003, 0x0, 0x0);
        gbc.writeMem(0xe4f1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaf87, gbc.sp());
        EXPECT(0xe4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f1));
        EXPECT(0xdf, gbc.readMem(0xe4f2));
        // CB DF 0111
        gbc.setState(0xdfc1, 0x9781, 0x9b10, 0x888, 0xedce, 0x9a4c, 0x0, 0x1);
        gbc.writeMem(0xdfc1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9781, gbc.sp());
        EXPECT(0xdfc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc1));
        EXPECT(0xdf, gbc.readMem(0xdfc2));
        // CB DF 0112
        gbc.setState(0xd8e3, 0xe7fa, 0xabb0, 0x6de2, 0x6049, 0x1143, 0x0, 0x0);
        gbc.writeMem(0xd8e3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe7fa, gbc.sp());
        EXPECT(0xd8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e3));
        EXPECT(0xdf, gbc.readMem(0xd8e4));
        // CB DF 0113
        gbc.setState(0x5b50, 0x78c4, 0x9360, 0xf9dd, 0xfb01, 0x1571, 0x0, 0x1);
        gbc.writeMem(0x5b50, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x78c4, gbc.sp());
        EXPECT(0x5b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0114
        gbc.setState(0xd81f, 0xbf13, 0xb020, 0x3116, 0x6e66, 0x3c14, 0x1, 0x0);
        gbc.writeMem(0xd81f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbf13, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81f));
        EXPECT(0xdf, gbc.readMem(0xd820));
        // CB DF 0115
        gbc.setState(0xdc19, 0x5b2a, 0xc9d0, 0xb855, 0x96af, 0x1d8b, 0x1, 0x1);
        gbc.writeMem(0xdc19, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5b2a, gbc.sp());
        EXPECT(0xdc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc19));
        EXPECT(0xdf, gbc.readMem(0xdc1a));
        // CB DF 0116
        gbc.setState(0xa886, 0x3cbc, 0x6000, 0x6719, 0xf78c, 0x2bf4, 0x1, 0x1);
        gbc.writeMem(0xa886, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3cbc, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa886));
        EXPECT(0xdf, gbc.readMem(0xa887));
        // CB DF 0117
        gbc.setState(0x6e2f, 0xe6a8, 0x3a30, 0xe1df, 0x763b, 0x6dd5, 0x1, 0x0);
        gbc.writeMem(0x6e2f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe6a8, gbc.sp());
        EXPECT(0x6e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0118
        gbc.setState(0xb3fd, 0x39b, 0x7b60, 0x4b6b, 0x4421, 0x580b, 0x0, 0x0);
        gbc.writeMem(0xb3fd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x39b, gbc.sp());
        EXPECT(0xb3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fd));
        EXPECT(0xdf, gbc.readMem(0xb3fe));
        // CB DF 0119
        gbc.setState(0xb073, 0x12f4, 0xd9a0, 0x37e5, 0x8e7c, 0x56b4, 0x0, 0x1);
        gbc.writeMem(0xb073, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x12f4, gbc.sp());
        EXPECT(0xb075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb073));
        EXPECT(0xdf, gbc.readMem(0xb074));
        // CB DF 011A
        gbc.setState(0xc009, 0x2431, 0xa7d0, 0xde57, 0x9cda, 0x659e, 0x0, 0x1);
        gbc.writeMem(0xc009, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2431, gbc.sp());
        EXPECT(0xc00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc009));
        EXPECT(0xdf, gbc.readMem(0xc00a));
        // CB DF 011B
        gbc.setState(0x3688, 0xe8df, 0x3480, 0x9b48, 0x1aa9, 0xbdb8, 0x1, 0x1);
        gbc.writeMem(0x3688, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe8df, gbc.sp());
        EXPECT(0x368a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 011C
        gbc.setState(0x20be, 0x2326, 0xd5f0, 0xc527, 0xd367, 0x75b8, 0x0, 0x1);
        gbc.writeMem(0x20be, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2326, gbc.sp());
        EXPECT(0x20c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 011D
        gbc.setState(0x7fd2, 0xb06d, 0x6d60, 0x1424, 0xccf9, 0x98c4, 0x0, 0x1);
        gbc.writeMem(0x7fd2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb06d, gbc.sp());
        EXPECT(0x7fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 011E
        gbc.setState(0xada1, 0xba27, 0x56e0, 0x6c7c, 0x5a46, 0xa149, 0x0, 0x1);
        gbc.writeMem(0xada1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xba27, gbc.sp());
        EXPECT(0xada3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada1));
        EXPECT(0xdf, gbc.readMem(0xada2));
        // CB DF 011F
        gbc.setState(0x884c, 0x73b5, 0x2a30, 0x16da, 0x2831, 0xbe50, 0x1, 0x1);
        gbc.writeMem(0x884c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x73b5, gbc.sp());
        EXPECT(0x884e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884c));
        EXPECT(0xdf, gbc.readMem(0x884d));
        // CB DF 0120
        gbc.setState(0x31d7, 0xe4c3, 0x1ee0, 0x23a, 0x2a61, 0x35d2, 0x0, 0x0);
        gbc.writeMem(0x31d7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe4c3, gbc.sp());
        EXPECT(0x31d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0121
        gbc.setState(0x3203, 0xca98, 0x1c20, 0xc4a4, 0xad25, 0xfee2, 0x0, 0x1);
        gbc.writeMem(0x3203, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xca98, gbc.sp());
        EXPECT(0x3205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0122
        gbc.setState(0x6893, 0x3d0c, 0xe110, 0x3d12, 0x9b1e, 0x7376, 0x0, 0x1);
        gbc.writeMem(0x6893, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3d0c, gbc.sp());
        EXPECT(0x6895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0123
        gbc.setState(0x4e62, 0x3260, 0xad20, 0xaeb6, 0x4ab2, 0x38f2, 0x0, 0x0);
        gbc.writeMem(0x4e62, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x4e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0124
        gbc.setState(0x70c6, 0xbcb0, 0xb5f0, 0xf987, 0x6a1b, 0x52ab, 0x1, 0x0);
        gbc.writeMem(0x70c6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbcb0, gbc.sp());
        EXPECT(0x70c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0126
        gbc.setState(0x9368, 0x5a40, 0x5c50, 0x8bfe, 0xef4b, 0x95dc, 0x1, 0x1);
        gbc.writeMem(0x9368, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5a40, gbc.sp());
        EXPECT(0x936a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9368));
        EXPECT(0xdf, gbc.readMem(0x9369));
        // CB DF 0127
        gbc.setState(0x2eee, 0xf5e6, 0x2a90, 0x6198, 0x3878, 0x8381, 0x0, 0x0);
        gbc.writeMem(0x2eee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf5e6, gbc.sp());
        EXPECT(0x2ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0128
        gbc.setState(0x2b6d, 0xe95e, 0x14c0, 0x1784, 0xd936, 0xf7f4, 0x0, 0x0);
        gbc.writeMem(0x2b6d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe95e, gbc.sp());
        EXPECT(0x2b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0129
        gbc.setState(0xa61a, 0x292, 0x8a60, 0xce3d, 0xedd, 0x984d, 0x1, 0x1);
        gbc.writeMem(0xa61a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x292, gbc.sp());
        EXPECT(0xa61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61a));
        EXPECT(0xdf, gbc.readMem(0xa61b));
        // CB DF 012A
        gbc.setState(0x6d1f, 0x5cca, 0xb080, 0x9ac3, 0xad19, 0xa78d, 0x1, 0x1);
        gbc.writeMem(0x6d1f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5cca, gbc.sp());
        EXPECT(0x6d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 012B
        gbc.setState(0x36da, 0x7d3, 0x3a50, 0xaf2c, 0x1230, 0xd12e, 0x0, 0x0);
        gbc.writeMem(0x36da, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7d3, gbc.sp());
        EXPECT(0x36dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 012C
        gbc.setState(0xf7c, 0xd1cd, 0xf1f0, 0x9303, 0xf0cd, 0xe143, 0x1, 0x0);
        gbc.writeMem(0xf7c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd1cd, gbc.sp());
        EXPECT(0xf7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 012D
        gbc.setState(0xa9ab, 0x6fd0, 0x7cd0, 0xe599, 0x6cc6, 0x9054, 0x0, 0x0);
        gbc.writeMem(0xa9ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6fd0, gbc.sp());
        EXPECT(0xa9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ab));
        EXPECT(0xdf, gbc.readMem(0xa9ac));
        // CB DF 012E
        gbc.setState(0x1096, 0xf8f2, 0xdc30, 0x164a, 0xb95c, 0xac6d, 0x1, 0x1);
        gbc.writeMem(0x1096, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf8f2, gbc.sp());
        EXPECT(0x1098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 012F
        gbc.setState(0xa867, 0xbdf6, 0xfff0, 0x477b, 0x4bbc, 0x2339, 0x0, 0x0);
        gbc.writeMem(0xa867, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbdf6, gbc.sp());
        EXPECT(0xa869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa867));
        EXPECT(0xdf, gbc.readMem(0xa868));
        // CB DF 0130
        gbc.setState(0x9270, 0x6eb4, 0xcb50, 0xfc73, 0x42d2, 0x64a0, 0x1, 0x1);
        gbc.writeMem(0x9270, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6eb4, gbc.sp());
        EXPECT(0x9272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9270));
        EXPECT(0xdf, gbc.readMem(0x9271));
        // CB DF 0131
        gbc.setState(0x54bd, 0x30b7, 0xac60, 0x7f3e, 0xef93, 0xbdf, 0x1, 0x1);
        gbc.writeMem(0x54bd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x30b7, gbc.sp());
        EXPECT(0x54bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0132
        gbc.setState(0x7afd, 0x4375, 0xe70, 0xa017, 0x9aaa, 0xf313, 0x0, 0x1);
        gbc.writeMem(0x7afd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4375, gbc.sp());
        EXPECT(0x7aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0133
        gbc.setState(0x1a82, 0xee7, 0x33e0, 0x9e53, 0x5e92, 0xef65, 0x0, 0x0);
        gbc.writeMem(0x1a82, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xee7, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0134
        gbc.setState(0xe1de, 0xeaa, 0xf250, 0xc654, 0xb911, 0x95b3, 0x1, 0x0);
        gbc.writeMem(0xe1de, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0xe1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1de));
        EXPECT(0xdf, gbc.readMem(0xe1df));
        // CB DF 0135
        gbc.setState(0x1591, 0xecf9, 0xb9f0, 0x70d0, 0x64aa, 0x7a0d, 0x0, 0x0);
        gbc.writeMem(0x1591, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xecf9, gbc.sp());
        EXPECT(0x1593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0136
        gbc.setState(0x6f94, 0xcb57, 0x1840, 0x42a0, 0xb228, 0x1fa8, 0x0, 0x0);
        gbc.writeMem(0x6f94, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcb57, gbc.sp());
        EXPECT(0x6f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0137
        gbc.setState(0xc0d, 0x903e, 0x7cb0, 0x1bac, 0xd0b9, 0xc28b, 0x1, 0x0);
        gbc.writeMem(0xc0d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x903e, gbc.sp());
        EXPECT(0xc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0138
        gbc.setState(0x23fa, 0x640c, 0x5f60, 0x99f0, 0x46f, 0x5ace, 0x1, 0x0);
        gbc.writeMem(0x23fa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x640c, gbc.sp());
        EXPECT(0x23fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0139
        gbc.setState(0xa0f3, 0x5526, 0x1120, 0xd60e, 0xe862, 0xa36e, 0x0, 0x0);
        gbc.writeMem(0xa0f3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5526, gbc.sp());
        EXPECT(0xa0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f3));
        EXPECT(0xdf, gbc.readMem(0xa0f4));
        // CB DF 013A
        gbc.setState(0xaa1c, 0x26ab, 0xe3e0, 0x2ba, 0xba74, 0xc203, 0x0, 0x1);
        gbc.writeMem(0xaa1c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x26ab, gbc.sp());
        EXPECT(0xaa1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1c));
        EXPECT(0xdf, gbc.readMem(0xaa1d));
        // CB DF 013B
        gbc.setState(0xc4bc, 0x728f, 0x5520, 0x4698, 0x6ad5, 0x8454, 0x1, 0x1);
        gbc.writeMem(0xc4bc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x728f, gbc.sp());
        EXPECT(0xc4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bc));
        EXPECT(0xdf, gbc.readMem(0xc4bd));
        // CB DF 013D
        gbc.setState(0xd4e4, 0xb6bd, 0xcfe0, 0x4c64, 0x1031, 0x919d, 0x1, 0x0);
        gbc.writeMem(0xd4e4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb6bd, gbc.sp());
        EXPECT(0xd4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e4));
        EXPECT(0xdf, gbc.readMem(0xd4e5));
        // CB DF 013E
        gbc.setState(0x34a6, 0xe748, 0xfd40, 0xd61e, 0x334d, 0x2bb0, 0x1, 0x0);
        gbc.writeMem(0x34a6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe748, gbc.sp());
        EXPECT(0x34a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0140
        gbc.setState(0x460b, 0x2a1a, 0xf430, 0x9d39, 0xbefc, 0x73cb, 0x1, 0x1);
        gbc.writeMem(0x460b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2a1a, gbc.sp());
        EXPECT(0x460d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0141
        gbc.setState(0xc9b9, 0xe51e, 0x8aa0, 0xfbe4, 0xa48d, 0xacd9, 0x0, 0x0);
        gbc.writeMem(0xc9b9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe51e, gbc.sp());
        EXPECT(0xc9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b9));
        EXPECT(0xdf, gbc.readMem(0xc9ba));
        // CB DF 0142
        gbc.setState(0xc642, 0xefa, 0x7490, 0xe294, 0x9374, 0x105d, 0x0, 0x1);
        gbc.writeMem(0xc642, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xefa, gbc.sp());
        EXPECT(0xc644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc642));
        EXPECT(0xdf, gbc.readMem(0xc643));
        // CB DF 0143
        gbc.setState(0x11d5, 0x1936, 0xd9d0, 0xe1c5, 0x2a51, 0x2f2, 0x1, 0x1);
        gbc.writeMem(0x11d5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1936, gbc.sp());
        EXPECT(0x11d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0144
        gbc.setState(0x1a6b, 0xe16a, 0x28f0, 0xafe1, 0xec6a, 0xc8cb, 0x0, 0x1);
        gbc.writeMem(0x1a6b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe16a, gbc.sp());
        EXPECT(0x1a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0145
        gbc.setState(0xd6f9, 0xc20, 0x3610, 0x4067, 0xed28, 0x2282, 0x1, 0x0);
        gbc.writeMem(0xd6f9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc20, gbc.sp());
        EXPECT(0xd6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f9));
        EXPECT(0xdf, gbc.readMem(0xd6fa));
        // CB DF 0146
        gbc.setState(0x7fde, 0x5f43, 0x17f0, 0xf1d1, 0x2041, 0x5bc5, 0x0, 0x0);
        gbc.writeMem(0x7fde, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5f43, gbc.sp());
        EXPECT(0x7fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0147
        gbc.setState(0x52e5, 0x81a, 0xa730, 0xbcaa, 0x822d, 0xdd0a, 0x0, 0x0);
        gbc.writeMem(0x52e5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x81a, gbc.sp());
        EXPECT(0x52e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0148
        gbc.setState(0x5a5b, 0xc315, 0x2330, 0xc401, 0xc339, 0x78aa, 0x0, 0x0);
        gbc.writeMem(0x5a5b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc315, gbc.sp());
        EXPECT(0x5a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0149
        gbc.setState(0xccf6, 0xbc1f, 0x4550, 0x6cab, 0xed14, 0x7c1d, 0x0, 0x0);
        gbc.writeMem(0xccf6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbc1f, gbc.sp());
        EXPECT(0xccf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf6));
        EXPECT(0xdf, gbc.readMem(0xccf7));
        // CB DF 014A
        gbc.setState(0x7d6c, 0x2cf4, 0xe700, 0x834d, 0x48f3, 0xe17f, 0x0, 0x0);
        gbc.writeMem(0x7d6c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2cf4, gbc.sp());
        EXPECT(0x7d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 014B
        gbc.setState(0xa74c, 0xaa88, 0x37d0, 0x1ba3, 0x95b6, 0xe659, 0x1, 0x1);
        gbc.writeMem(0xa74c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaa88, gbc.sp());
        EXPECT(0xa74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74c));
        EXPECT(0xdf, gbc.readMem(0xa74d));
        // CB DF 014C
        gbc.setState(0x6258, 0x6bd7, 0xce0, 0xacca, 0xf393, 0x8b90, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6bd7, gbc.sp());
        EXPECT(0x625a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 014D
        gbc.setState(0x110f, 0x2b8b, 0x9a90, 0x936f, 0x217c, 0x5b24, 0x0, 0x0);
        gbc.writeMem(0x110f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2b8b, gbc.sp());
        EXPECT(0x1111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 014E
        gbc.setState(0x636e, 0xb013, 0x4a40, 0x4683, 0x6aab, 0x5456, 0x0, 0x0);
        gbc.writeMem(0x636e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb013, gbc.sp());
        EXPECT(0x6370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 014F
        gbc.setState(0xea5, 0x63c9, 0x57e0, 0xc6ea, 0x964d, 0xc1ff, 0x1, 0x0);
        gbc.writeMem(0xea5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x63c9, gbc.sp());
        EXPECT(0xea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0150
        gbc.setState(0x5337, 0x6e13, 0x7fb0, 0x1854, 0x706c, 0x5ad7, 0x1, 0x1);
        gbc.writeMem(0x5337, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6e13, gbc.sp());
        EXPECT(0x5339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0151
        gbc.setState(0xc543, 0xb4c3, 0xd470, 0x71d1, 0xf7bc, 0xc045, 0x0, 0x0);
        gbc.writeMem(0xc543, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb4c3, gbc.sp());
        EXPECT(0xc545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc543));
        EXPECT(0xdf, gbc.readMem(0xc544));
        // CB DF 0152
        gbc.setState(0xb947, 0x6d12, 0x7fd0, 0x3964, 0x46b3, 0x7b4a, 0x1, 0x0);
        gbc.writeMem(0xb947, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6d12, gbc.sp());
        EXPECT(0xb949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb947));
        EXPECT(0xdf, gbc.readMem(0xb948));
        // CB DF 0153
        gbc.setState(0x1f22, 0xee11, 0xa190, 0x895d, 0xdb7f, 0x46a7, 0x0, 0x0);
        gbc.writeMem(0x1f22, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xee11, gbc.sp());
        EXPECT(0x1f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0154
        gbc.setState(0x31a7, 0x1e9d, 0x3e40, 0x35d8, 0xf192, 0x9683, 0x0, 0x0);
        gbc.writeMem(0x31a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1e9d, gbc.sp());
        EXPECT(0x31a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0155
        gbc.setState(0xaae3, 0x6c76, 0xd440, 0x6d6e, 0xc11, 0x653b, 0x1, 0x1);
        gbc.writeMem(0xaae3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6c76, gbc.sp());
        EXPECT(0xaae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae3));
        EXPECT(0xdf, gbc.readMem(0xaae4));
        // CB DF 0156
        gbc.setState(0xeb44, 0x7bd0, 0x6a50, 0x9e37, 0x963c, 0x6619, 0x1, 0x0);
        gbc.writeMem(0xeb44, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0xeb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb44));
        EXPECT(0xdf, gbc.readMem(0xeb45));
        // CB DF 0157
        gbc.setState(0x401, 0xb7b5, 0xab60, 0x9cb1, 0x8e17, 0xed8a, 0x0, 0x0);
        gbc.writeMem(0x401, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb7b5, gbc.sp());
        EXPECT(0x403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0158
        gbc.setState(0x90e3, 0xc809, 0x5040, 0x7b2f, 0xa875, 0xbdd8, 0x1, 0x0);
        gbc.writeMem(0x90e3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc809, gbc.sp());
        EXPECT(0x90e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e3));
        EXPECT(0xdf, gbc.readMem(0x90e4));
        // CB DF 0159
        gbc.setState(0xb8a3, 0xa2a8, 0x8fd0, 0x7dc0, 0x5984, 0xf9b8, 0x0, 0x1);
        gbc.writeMem(0xb8a3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa2a8, gbc.sp());
        EXPECT(0xb8a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a3));
        EXPECT(0xdf, gbc.readMem(0xb8a4));
        // CB DF 015A
        gbc.setState(0x2abf, 0x848a, 0xc950, 0x2767, 0xd79f, 0xf8e5, 0x0, 0x0);
        gbc.writeMem(0x2abf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x848a, gbc.sp());
        EXPECT(0x2ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 015B
        gbc.setState(0x7960, 0x1c7a, 0x9ca0, 0xd243, 0x2ab1, 0x7061, 0x0, 0x0);
        gbc.writeMem(0x7960, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1c7a, gbc.sp());
        EXPECT(0x7962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 015C
        gbc.setState(0x9232, 0x869c, 0xc750, 0x974d, 0x16e3, 0xddc3, 0x0, 0x0);
        gbc.writeMem(0x9232, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0x9234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9232));
        EXPECT(0xdf, gbc.readMem(0x9233));
        // CB DF 015D
        gbc.setState(0x4e31, 0x7e1, 0xef80, 0xc7dd, 0x6ae1, 0x611c, 0x0, 0x1);
        gbc.writeMem(0x4e31, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7e1, gbc.sp());
        EXPECT(0x4e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 015E
        gbc.setState(0x6b05, 0xdd67, 0x9300, 0x539a, 0xa92c, 0x1954, 0x0, 0x0);
        gbc.writeMem(0x6b05, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdd67, gbc.sp());
        EXPECT(0x6b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 015F
        gbc.setState(0xa01f, 0xa243, 0x3780, 0x6da8, 0x9559, 0xc31f, 0x0, 0x1);
        gbc.writeMem(0xa01f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa243, gbc.sp());
        EXPECT(0xa021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01f));
        EXPECT(0xdf, gbc.readMem(0xa020));
        // CB DF 0160
        gbc.setState(0xc0b0, 0x9965, 0x9230, 0xf5bf, 0xa52c, 0xf995, 0x1, 0x1);
        gbc.writeMem(0xc0b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9965, gbc.sp());
        EXPECT(0xc0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b0));
        EXPECT(0xdf, gbc.readMem(0xc0b1));
        // CB DF 0161
        gbc.setState(0x461f, 0xc280, 0x6c0, 0x21d, 0xcb04, 0x91ae, 0x1, 0x0);
        gbc.writeMem(0x461f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc280, gbc.sp());
        EXPECT(0x4621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0162
        gbc.setState(0x50ea, 0x4517, 0xee30, 0xa798, 0x4e83, 0xe1b4, 0x0, 0x1);
        gbc.writeMem(0x50ea, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4517, gbc.sp());
        EXPECT(0x50ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0163
        gbc.setState(0x8f18, 0xbe9f, 0x6720, 0x973, 0x674f, 0x30e0, 0x1, 0x0);
        gbc.writeMem(0x8f18, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbe9f, gbc.sp());
        EXPECT(0x8f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f18));
        EXPECT(0xdf, gbc.readMem(0x8f19));
        // CB DF 0164
        gbc.setState(0x180f, 0xa6b6, 0xe6b0, 0xa745, 0x4703, 0x4a43, 0x0, 0x0);
        gbc.writeMem(0x180f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa6b6, gbc.sp());
        EXPECT(0x1811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0165
        gbc.setState(0x18ec, 0x8d18, 0x3e10, 0x71d0, 0x37, 0xe631, 0x0, 0x0);
        gbc.writeMem(0x18ec, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8d18, gbc.sp());
        EXPECT(0x18ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0166
        gbc.setState(0x1ac, 0x281c, 0x8a30, 0x7075, 0xe381, 0x4a0a, 0x1, 0x0);
        gbc.writeMem(0x1ac, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x281c, gbc.sp());
        EXPECT(0x1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0167
        gbc.setState(0x56dc, 0xde0b, 0x6b60, 0x961e, 0xf3a4, 0x284f, 0x0, 0x1);
        gbc.writeMem(0x56dc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xde0b, gbc.sp());
        EXPECT(0x56de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0168
        gbc.setState(0xe56b, 0x6b71, 0x86f0, 0xd06f, 0x8816, 0x309c, 0x1, 0x0);
        gbc.writeMem(0xe56b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6b71, gbc.sp());
        EXPECT(0xe56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56b));
        EXPECT(0xdf, gbc.readMem(0xe56c));
        // CB DF 0169
        gbc.setState(0x3ad7, 0x73b8, 0x2c60, 0x86c4, 0x3ddb, 0x23b9, 0x0, 0x0);
        gbc.writeMem(0x3ad7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x73b8, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 016C
        gbc.setState(0x4d7d, 0x423, 0x14a0, 0xfbdb, 0xf14a, 0xceed, 0x1, 0x0);
        gbc.writeMem(0x4d7d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x423, gbc.sp());
        EXPECT(0x4d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 016D
        gbc.setState(0x849a, 0x511a, 0x5180, 0x799e, 0x1a1f, 0xcf05, 0x0, 0x0);
        gbc.writeMem(0x849a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x511a, gbc.sp());
        EXPECT(0x849c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849a));
        EXPECT(0xdf, gbc.readMem(0x849b));
        // CB DF 016E
        gbc.setState(0xbebe, 0x678e, 0x3050, 0xf831, 0xf79c, 0x83eb, 0x1, 0x0);
        gbc.writeMem(0xbebe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x678e, gbc.sp());
        EXPECT(0xbec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebe));
        EXPECT(0xdf, gbc.readMem(0xbebf));
        // CB DF 0170
        gbc.setState(0x8bd5, 0xd087, 0xbdb0, 0x12fa, 0xd705, 0xe757, 0x1, 0x0);
        gbc.writeMem(0x8bd5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd087, gbc.sp());
        EXPECT(0x8bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd5));
        EXPECT(0xdf, gbc.readMem(0x8bd6));
        // CB DF 0171
        gbc.setState(0x5492, 0x7413, 0xf620, 0x648a, 0xed5b, 0xcccb, 0x1, 0x1);
        gbc.writeMem(0x5492, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7413, gbc.sp());
        EXPECT(0x5494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0172
        gbc.setState(0xadba, 0x85f5, 0x3c70, 0x5645, 0xadf6, 0xb074, 0x1, 0x0);
        gbc.writeMem(0xadba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x85f5, gbc.sp());
        EXPECT(0xadbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadba));
        EXPECT(0xdf, gbc.readMem(0xadbb));
        // CB DF 0173
        gbc.setState(0xe8a9, 0x9278, 0x9cc0, 0x9882, 0x224b, 0x5a96, 0x1, 0x1);
        gbc.writeMem(0xe8a9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9278, gbc.sp());
        EXPECT(0xe8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a9));
        EXPECT(0xdf, gbc.readMem(0xe8aa));
        // CB DF 0174
        gbc.setState(0xd9c2, 0x9ba8, 0x950, 0x92fa, 0xe338, 0xdd14, 0x0, 0x1);
        gbc.writeMem(0xd9c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9ba8, gbc.sp());
        EXPECT(0xd9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c2));
        EXPECT(0xdf, gbc.readMem(0xd9c3));
        // CB DF 0175
        gbc.setState(0x903c, 0x30be, 0xc160, 0xb45c, 0xed31, 0xab61, 0x0, 0x0);
        gbc.writeMem(0x903c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x30be, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903c));
        EXPECT(0xdf, gbc.readMem(0x903d));
        // CB DF 0176
        gbc.setState(0x324e, 0x64f3, 0x4ea0, 0xb349, 0xdda0, 0x311f, 0x1, 0x0);
        gbc.writeMem(0x324e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x64f3, gbc.sp());
        EXPECT(0x3250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0177
        gbc.setState(0x6747, 0x9002, 0xaac0, 0xfa78, 0x6806, 0x78a5, 0x1, 0x0);
        gbc.writeMem(0x6747, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9002, gbc.sp());
        EXPECT(0x6749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0178
        gbc.setState(0xafb6, 0xfe4c, 0x5fb0, 0x53b0, 0x4b2e, 0x2d81, 0x0, 0x1);
        gbc.writeMem(0xafb6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfe4c, gbc.sp());
        EXPECT(0xafb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb6));
        EXPECT(0xdf, gbc.readMem(0xafb7));
        // CB DF 0179
        gbc.setState(0x1eec, 0xdcae, 0x79d0, 0x30d4, 0xfe73, 0x782a, 0x0, 0x1);
        gbc.writeMem(0x1eec, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdcae, gbc.sp());
        EXPECT(0x1eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 017A
        gbc.setState(0xbb90, 0x506c, 0xc510, 0x5a46, 0xad0e, 0xb2f1, 0x0, 0x0);
        gbc.writeMem(0xbb90, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x506c, gbc.sp());
        EXPECT(0xbb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb90));
        EXPECT(0xdf, gbc.readMem(0xbb91));
        // CB DF 017B
        gbc.setState(0x9139, 0x4170, 0xc910, 0x9729, 0x1185, 0x4dce, 0x0, 0x0);
        gbc.writeMem(0x9139, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4170, gbc.sp());
        EXPECT(0x913b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9139));
        EXPECT(0xdf, gbc.readMem(0x913a));
        // CB DF 017C
        gbc.setState(0x58b9, 0x4e16, 0xe3c0, 0x9a41, 0xc98e, 0xd204, 0x1, 0x1);
        gbc.writeMem(0x58b9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4e16, gbc.sp());
        EXPECT(0x58bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 017D
        gbc.setState(0x8959, 0x2998, 0x9d00, 0x84c0, 0x2f3, 0x9287, 0x1, 0x1);
        gbc.writeMem(0x8959, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2998, gbc.sp());
        EXPECT(0x895b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8959));
        EXPECT(0xdf, gbc.readMem(0x895a));
        // CB DF 017E
        gbc.setState(0x7ac8, 0x7c55, 0xeb0, 0x6a63, 0xc2e4, 0xe9d2, 0x1, 0x1);
        gbc.writeMem(0x7ac8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7c55, gbc.sp());
        EXPECT(0x7aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 017F
        gbc.setState(0xe0b7, 0xe651, 0x9230, 0x7794, 0xf579, 0x55f5, 0x1, 0x0);
        gbc.writeMem(0xe0b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe651, gbc.sp());
        EXPECT(0xe0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b7));
        EXPECT(0xdf, gbc.readMem(0xe0b8));
        // CB DF 0180
        gbc.setState(0x2139, 0xefd0, 0x4b60, 0x21a5, 0x10ec, 0x38f5, 0x0, 0x0);
        gbc.writeMem(0x2139, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xefd0, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0182
        gbc.setState(0x4226, 0x9da9, 0xfe40, 0x69b3, 0xa645, 0x811a, 0x0, 0x1);
        gbc.writeMem(0x4226, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9da9, gbc.sp());
        EXPECT(0x4228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0183
        gbc.setState(0x8e2c, 0xc0c5, 0x3660, 0x9354, 0x594c, 0x2a1b, 0x1, 0x0);
        gbc.writeMem(0x8e2c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc0c5, gbc.sp());
        EXPECT(0x8e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2c));
        EXPECT(0xdf, gbc.readMem(0x8e2d));
        // CB DF 0184
        gbc.setState(0x537b, 0xdbe9, 0x4000, 0xf02b, 0x8186, 0x8a89, 0x1, 0x0);
        gbc.writeMem(0x537b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdbe9, gbc.sp());
        EXPECT(0x537d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0185
        gbc.setState(0x680, 0x14b5, 0x4c90, 0xe96c, 0x249b, 0x7b5c, 0x1, 0x1);
        gbc.writeMem(0x680, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x14b5, gbc.sp());
        EXPECT(0x682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0186
        gbc.setState(0x9b79, 0xb5d2, 0xfd60, 0x774d, 0x8dac, 0xd048, 0x0, 0x0);
        gbc.writeMem(0x9b79, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb5d2, gbc.sp());
        EXPECT(0x9b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b79));
        EXPECT(0xdf, gbc.readMem(0x9b7a));
        // CB DF 0187
        gbc.setState(0x87, 0x1415, 0x720, 0x3138, 0xca04, 0x9740, 0x0, 0x1);
        gbc.writeMem(0x87, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1415, gbc.sp());
        EXPECT(0x89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0188
        gbc.setState(0x3b7, 0xc76e, 0xf2b0, 0x9ca5, 0x2bfd, 0x2ff3, 0x1, 0x0);
        gbc.writeMem(0x3b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc76e, gbc.sp());
        EXPECT(0x3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0189
        gbc.setState(0x4d15, 0xcbc1, 0x210, 0xcdc, 0xdcf6, 0xa5e0, 0x1, 0x0);
        gbc.writeMem(0x4d15, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcbc1, gbc.sp());
        EXPECT(0x4d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 018A
        gbc.setState(0x6e52, 0xe845, 0x95b0, 0x24b1, 0xdc93, 0x8c27, 0x1, 0x0);
        gbc.writeMem(0x6e52, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe845, gbc.sp());
        EXPECT(0x6e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 018B
        gbc.setState(0xecd6, 0x29b, 0x8270, 0x69db, 0xa0f4, 0xc066, 0x0, 0x0);
        gbc.writeMem(0xecd6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x29b, gbc.sp());
        EXPECT(0xecd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd6));
        EXPECT(0xdf, gbc.readMem(0xecd7));
        // CB DF 018C
        gbc.setState(0x72c3, 0x8316, 0x32a0, 0xbe57, 0x47a5, 0xd878, 0x0, 0x0);
        gbc.writeMem(0x72c3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8316, gbc.sp());
        EXPECT(0x72c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 018D
        gbc.setState(0x66af, 0x64d9, 0x6200, 0x9185, 0xbe2b, 0x36d0, 0x1, 0x1);
        gbc.writeMem(0x66af, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x64d9, gbc.sp());
        EXPECT(0x66b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 018F
        gbc.setState(0xcd89, 0xfa86, 0xac60, 0x6ac3, 0x8919, 0xe41d, 0x0, 0x1);
        gbc.writeMem(0xcd89, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfa86, gbc.sp());
        EXPECT(0xcd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd89));
        EXPECT(0xdf, gbc.readMem(0xcd8a));
        // CB DF 0190
        gbc.setState(0xc9ce, 0xcef0, 0x1c70, 0x372a, 0x3225, 0x9ab8, 0x1, 0x0);
        gbc.writeMem(0xc9ce, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcef0, gbc.sp());
        EXPECT(0xc9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ce));
        EXPECT(0xdf, gbc.readMem(0xc9cf));
        // CB DF 0192
        gbc.setState(0xba4a, 0xf43c, 0x75a0, 0xc775, 0x3c0b, 0xe208, 0x1, 0x0);
        gbc.writeMem(0xba4a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf43c, gbc.sp());
        EXPECT(0xba4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4a));
        EXPECT(0xdf, gbc.readMem(0xba4b));
        // CB DF 0193
        gbc.setState(0x7d14, 0x926c, 0x6c20, 0x8c21, 0x308f, 0x923a, 0x0, 0x1);
        gbc.writeMem(0x7d14, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x926c, gbc.sp());
        EXPECT(0x7d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0195
        gbc.setState(0x4a03, 0x3df3, 0xf5f0, 0x461c, 0x6a95, 0x5a83, 0x1, 0x0);
        gbc.writeMem(0x4a03, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3df3, gbc.sp());
        EXPECT(0x4a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0196
        gbc.setState(0x1992, 0x262a, 0x2490, 0x91a9, 0x442f, 0x9304, 0x1, 0x0);
        gbc.writeMem(0x1992, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x262a, gbc.sp());
        EXPECT(0x1994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0197
        gbc.setState(0x1274, 0xb706, 0x5e10, 0xd9a6, 0xaf72, 0x8a67, 0x1, 0x1);
        gbc.writeMem(0x1274, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb706, gbc.sp());
        EXPECT(0x1276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0198
        gbc.setState(0x87b6, 0xd67c, 0x2970, 0x319c, 0xba01, 0xbce8, 0x1, 0x0);
        gbc.writeMem(0x87b6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd67c, gbc.sp());
        EXPECT(0x87b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b6));
        EXPECT(0xdf, gbc.readMem(0x87b7));
        // CB DF 0199
        gbc.setState(0xb693, 0x7eec, 0x4f70, 0x72ba, 0xc3f4, 0x5adf, 0x0, 0x0);
        gbc.writeMem(0xb693, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7eec, gbc.sp());
        EXPECT(0xb695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb693));
        EXPECT(0xdf, gbc.readMem(0xb694));
        // CB DF 019A
        gbc.setState(0x956f, 0xca33, 0x6d90, 0x911d, 0x7b3b, 0xd61e, 0x1, 0x1);
        gbc.writeMem(0x956f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xca33, gbc.sp());
        EXPECT(0x9571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956f));
        EXPECT(0xdf, gbc.readMem(0x9570));
        // CB DF 019B
        gbc.setState(0xbc2e, 0x7ac0, 0x6ac0, 0xbe8, 0xc9a7, 0xb398, 0x1, 0x1);
        gbc.writeMem(0xbc2e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7ac0, gbc.sp());
        EXPECT(0xbc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2e));
        EXPECT(0xdf, gbc.readMem(0xbc2f));
        // CB DF 019C
        gbc.setState(0xafc7, 0xe895, 0xecb0, 0xa56a, 0xca34, 0x19f, 0x0, 0x0);
        gbc.writeMem(0xafc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe895, gbc.sp());
        EXPECT(0xafc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc7));
        EXPECT(0xdf, gbc.readMem(0xafc8));
        // CB DF 019D
        gbc.setState(0x8dae, 0xd1bf, 0x35f0, 0xbf4b, 0x14f8, 0xaa72, 0x1, 0x0);
        gbc.writeMem(0x8dae, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd1bf, gbc.sp());
        EXPECT(0x8db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dae));
        EXPECT(0xdf, gbc.readMem(0x8daf));
        // CB DF 019E
        gbc.setState(0x2630, 0xc169, 0x40, 0x8e2f, 0x66a2, 0x1388, 0x0, 0x1);
        gbc.writeMem(0x2630, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc169, gbc.sp());
        EXPECT(0x2632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 019F
        gbc.setState(0x9e48, 0x72ab, 0x8450, 0x81c5, 0x8d20, 0x9533, 0x0, 0x0);
        gbc.writeMem(0x9e48, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x72ab, gbc.sp());
        EXPECT(0x9e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e48));
        EXPECT(0xdf, gbc.readMem(0x9e49));
        // CB DF 01A0
        gbc.setState(0xe64c, 0x4004, 0xa9f0, 0x1dda, 0x5d47, 0x1a2c, 0x1, 0x1);
        gbc.writeMem(0xe64c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4004, gbc.sp());
        EXPECT(0xe64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64c));
        EXPECT(0xdf, gbc.readMem(0xe64d));
        // CB DF 01A1
        gbc.setState(0x76c9, 0xa089, 0x7d70, 0xfbe, 0xa780, 0xf2a0, 0x0, 0x1);
        gbc.writeMem(0x76c9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa089, gbc.sp());
        EXPECT(0x76cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01A2
        gbc.setState(0x9663, 0xa0d0, 0xe3b0, 0x64c0, 0xfc50, 0xcd34, 0x0, 0x0);
        gbc.writeMem(0x9663, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa0d0, gbc.sp());
        EXPECT(0x9665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9663));
        EXPECT(0xdf, gbc.readMem(0x9664));
        // CB DF 01A3
        gbc.setState(0xe217, 0xba4d, 0x8970, 0x4217, 0x78bd, 0xc8b6, 0x1, 0x1);
        gbc.writeMem(0xe217, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xba4d, gbc.sp());
        EXPECT(0xe219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe217));
        EXPECT(0xdf, gbc.readMem(0xe218));
        // CB DF 01A4
        gbc.setState(0xd7bf, 0xb9ce, 0xda10, 0xfffe, 0x793c, 0xbf6, 0x1, 0x0);
        gbc.writeMem(0xd7bf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb9ce, gbc.sp());
        EXPECT(0xd7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7bf));
        EXPECT(0xdf, gbc.readMem(0xd7c0));
        // CB DF 01A5
        gbc.setState(0xcc73, 0xd080, 0xeb60, 0x84aa, 0x664d, 0xa0ba, 0x0, 0x1);
        gbc.writeMem(0xcc73, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0xcc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc73));
        EXPECT(0xdf, gbc.readMem(0xcc74));
        // CB DF 01A8
        gbc.setState(0x4b54, 0xda9, 0x5a20, 0x2afe, 0x7140, 0x1ec6, 0x1, 0x1);
        gbc.writeMem(0x4b54, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xda9, gbc.sp());
        EXPECT(0x4b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01A9
        gbc.setState(0xbeea, 0xf03, 0xe600, 0x3d46, 0x6b25, 0xdbf9, 0x1, 0x0);
        gbc.writeMem(0xbeea, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf03, gbc.sp());
        EXPECT(0xbeec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeea));
        EXPECT(0xdf, gbc.readMem(0xbeeb));
        // CB DF 01AA
        gbc.setState(0xe9af, 0x59a, 0x9190, 0xe0ce, 0xcf6, 0x9e23, 0x0, 0x1);
        gbc.writeMem(0xe9af, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x59a, gbc.sp());
        EXPECT(0xe9b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9af));
        EXPECT(0xdf, gbc.readMem(0xe9b0));
        // CB DF 01AB
        gbc.setState(0x288b, 0xa0a5, 0x2f00, 0x1486, 0x302e, 0x7236, 0x0, 0x1);
        gbc.writeMem(0x288b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa0a5, gbc.sp());
        EXPECT(0x288d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01AC
        gbc.setState(0x773d, 0xaa9a, 0x9110, 0x2962, 0xd1fc, 0xb62e, 0x0, 0x0);
        gbc.writeMem(0x773d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xaa9a, gbc.sp());
        EXPECT(0x773f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01AD
        gbc.setState(0x14bc, 0x9cc2, 0xd980, 0x8dba, 0x7044, 0xa2db, 0x0, 0x0);
        gbc.writeMem(0x14bc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9cc2, gbc.sp());
        EXPECT(0x14be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01AE
        gbc.setState(0xbde, 0x599f, 0x4c10, 0x5b34, 0x738b, 0x2648, 0x0, 0x1);
        gbc.writeMem(0xbde, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x599f, gbc.sp());
        EXPECT(0xbe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01AF
        gbc.setState(0x5143, 0x3efa, 0xa1d0, 0xfe3a, 0xf104, 0xb1dc, 0x1, 0x0);
        gbc.writeMem(0x5143, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3efa, gbc.sp());
        EXPECT(0x5145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01B0
        gbc.setState(0x20b1, 0x4da1, 0x6230, 0x8418, 0xddf3, 0x76d, 0x0, 0x1);
        gbc.writeMem(0x20b1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4da1, gbc.sp());
        EXPECT(0x20b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01B1
        gbc.setState(0xc7be, 0x907b, 0xf400, 0xcdf6, 0xfe3, 0xf1c6, 0x0, 0x0);
        gbc.writeMem(0xc7be, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x907b, gbc.sp());
        EXPECT(0xc7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7be));
        EXPECT(0xdf, gbc.readMem(0xc7bf));
        // CB DF 01B2
        gbc.setState(0x5987, 0xd4a4, 0xfc60, 0x18d, 0x8aa2, 0xb83b, 0x0, 0x0);
        gbc.writeMem(0x5987, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd4a4, gbc.sp());
        EXPECT(0x5989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01B3
        gbc.setState(0xb450, 0x23bc, 0xdc60, 0x661b, 0xa5f0, 0xa95a, 0x0, 0x1);
        gbc.writeMem(0xb450, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x23bc, gbc.sp());
        EXPECT(0xb452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb450));
        EXPECT(0xdf, gbc.readMem(0xb451));
        // CB DF 01B4
        gbc.setState(0x205a, 0x4dea, 0x5700, 0xe57f, 0x1595, 0xe068, 0x0, 0x1);
        gbc.writeMem(0x205a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4dea, gbc.sp());
        EXPECT(0x205c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01B5
        gbc.setState(0x8f71, 0x31f, 0x9c10, 0xfac7, 0x82b4, 0xe9e0, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x31f, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f71));
        EXPECT(0xdf, gbc.readMem(0x8f72));
        // CB DF 01B6
        gbc.setState(0xef0d, 0x83ef, 0x3c00, 0x7bfb, 0x4f02, 0x9460, 0x1, 0x1);
        gbc.writeMem(0xef0d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x83ef, gbc.sp());
        EXPECT(0xef0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0d));
        EXPECT(0xdf, gbc.readMem(0xef0e));
        // CB DF 01B7
        gbc.setState(0x7d94, 0xd57d, 0x2970, 0xdea, 0xb92b, 0xb69a, 0x0, 0x1);
        gbc.writeMem(0x7d94, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd57d, gbc.sp());
        EXPECT(0x7d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01B8
        gbc.setState(0x3dd9, 0x7eda, 0x5bd0, 0xa56b, 0x36f9, 0xce65, 0x0, 0x1);
        gbc.writeMem(0x3dd9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7eda, gbc.sp());
        EXPECT(0x3ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01B9
        gbc.setState(0x7c89, 0x57e3, 0xfe30, 0x6b8b, 0x16d3, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0x7c89, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x57e3, gbc.sp());
        EXPECT(0x7c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01BA
        gbc.setState(0x6760, 0x5b75, 0x40d0, 0x8c68, 0xcf90, 0x1677, 0x1, 0x1);
        gbc.writeMem(0x6760, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5b75, gbc.sp());
        EXPECT(0x6762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01BB
        gbc.setState(0xc123, 0xdd37, 0x560, 0x5e9d, 0x2ca1, 0x1f3f, 0x1, 0x1);
        gbc.writeMem(0xc123, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdd37, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc123));
        EXPECT(0xdf, gbc.readMem(0xc124));
        // CB DF 01BC
        gbc.setState(0x5360, 0x2321, 0x4840, 0xa3c8, 0x6665, 0xb2cb, 0x0, 0x1);
        gbc.writeMem(0x5360, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01BD
        gbc.setState(0xeef2, 0x2c46, 0x35b0, 0x912b, 0x2888, 0x4ccf, 0x0, 0x1);
        gbc.writeMem(0xeef2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2c46, gbc.sp());
        EXPECT(0xeef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef2));
        EXPECT(0xdf, gbc.readMem(0xeef3));
        // CB DF 01BE
        gbc.setState(0xee60, 0x7a32, 0x9aa0, 0xeadf, 0x3c74, 0xf855, 0x1, 0x0);
        gbc.writeMem(0xee60, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7a32, gbc.sp());
        EXPECT(0xee62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee60));
        EXPECT(0xdf, gbc.readMem(0xee61));
        // CB DF 01BF
        gbc.setState(0x5e1, 0x49a8, 0x8970, 0x4d99, 0x8fbb, 0x41f0, 0x0, 0x0);
        gbc.writeMem(0x5e1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x49a8, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01C0
        gbc.setState(0x4d49, 0xf37c, 0x8cd0, 0x491b, 0x120a, 0xf23c, 0x1, 0x0);
        gbc.writeMem(0x4d49, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf37c, gbc.sp());
        EXPECT(0x4d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01C1
        gbc.setState(0x7216, 0x878c, 0x1010, 0x715, 0x23, 0x82c7, 0x1, 0x1);
        gbc.writeMem(0x7216, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x878c, gbc.sp());
        EXPECT(0x7218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01C2
        gbc.setState(0x309f, 0xf0c7, 0xe110, 0xba72, 0x7f89, 0xf1a2, 0x1, 0x1);
        gbc.writeMem(0x309f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf0c7, gbc.sp());
        EXPECT(0x30a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01C3
        gbc.setState(0x8826, 0x100c, 0xdd30, 0x123e, 0x78dd, 0x1da6, 0x1, 0x0);
        gbc.writeMem(0x8826, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x100c, gbc.sp());
        EXPECT(0x8828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8826));
        EXPECT(0xdf, gbc.readMem(0x8827));
        // CB DF 01C4
        gbc.setState(0x2b04, 0x6d49, 0x2a40, 0xa580, 0x8b73, 0x18b3, 0x1, 0x0);
        gbc.writeMem(0x2b04, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6d49, gbc.sp());
        EXPECT(0x2b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01C5
        gbc.setState(0xd6f2, 0xc973, 0x6e40, 0xc365, 0xd80a, 0x279b, 0x1, 0x0);
        gbc.writeMem(0xd6f2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc973, gbc.sp());
        EXPECT(0xd6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f2));
        EXPECT(0xdf, gbc.readMem(0xd6f3));
        // CB DF 01C6
        gbc.setState(0x1e71, 0x2a5d, 0xcd20, 0x8bcd, 0x251d, 0xc01f, 0x1, 0x1);
        gbc.writeMem(0x1e71, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2a5d, gbc.sp());
        EXPECT(0x1e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01C7
        gbc.setState(0x5510, 0xa892, 0xdb00, 0x5304, 0xb0ef, 0x4610, 0x0, 0x1);
        gbc.writeMem(0x5510, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa892, gbc.sp());
        EXPECT(0x5512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01C8
        gbc.setState(0x4b58, 0xf832, 0x4510, 0x6462, 0x8644, 0x16f8, 0x0, 0x1);
        gbc.writeMem(0x4b58, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf832, gbc.sp());
        EXPECT(0x4b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01C9
        gbc.setState(0x98ff, 0xd581, 0x6930, 0x6689, 0x9dff, 0x5293, 0x0, 0x0);
        gbc.writeMem(0x98ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd581, gbc.sp());
        EXPECT(0x9901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ff));
        EXPECT(0xdf, gbc.readMem(0x9900));
        // CB DF 01CA
        gbc.setState(0xd8c, 0xd184, 0x10d0, 0xe18c, 0xa4b6, 0x557, 0x0, 0x0);
        gbc.writeMem(0xd8c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd184, gbc.sp());
        EXPECT(0xd8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01CB
        gbc.setState(0x9073, 0x7d81, 0xbe20, 0xecef, 0xb934, 0x23cb, 0x0, 0x1);
        gbc.writeMem(0x9073, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7d81, gbc.sp());
        EXPECT(0x9075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9073));
        EXPECT(0xdf, gbc.readMem(0x9074));
        // CB DF 01CC
        gbc.setState(0xd9c4, 0x7465, 0xbdb0, 0x10c1, 0x4120, 0xd075, 0x1, 0x1);
        gbc.writeMem(0xd9c4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7465, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c4));
        EXPECT(0xdf, gbc.readMem(0xd9c5));
        // CB DF 01CD
        gbc.setState(0x5715, 0xbeea, 0xbba0, 0x4b02, 0x1207, 0x8e89, 0x0, 0x1);
        gbc.writeMem(0x5715, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbeea, gbc.sp());
        EXPECT(0x5717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01CE
        gbc.setState(0xd781, 0xf3ab, 0xecd0, 0xf873, 0x86c6, 0xdeda, 0x0, 0x0);
        gbc.writeMem(0xd781, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf3ab, gbc.sp());
        EXPECT(0xd783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd781));
        EXPECT(0xdf, gbc.readMem(0xd782));
        // CB DF 01CF
        gbc.setState(0xaeee, 0x68ed, 0xf900, 0xbbe1, 0x7442, 0x2b47, 0x1, 0x1);
        gbc.writeMem(0xaeee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x68ed, gbc.sp());
        EXPECT(0xaef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeee));
        EXPECT(0xdf, gbc.readMem(0xaeef));
        // CB DF 01D0
        gbc.setState(0x46d2, 0xd3e6, 0xd0d0, 0x3734, 0x8b36, 0x6857, 0x1, 0x1);
        gbc.writeMem(0x46d2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd3e6, gbc.sp());
        EXPECT(0x46d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01D1
        gbc.setState(0x9020, 0x103e, 0xfdc0, 0x80fb, 0xa5ac, 0xdd1b, 0x1, 0x1);
        gbc.writeMem(0x9020, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x103e, gbc.sp());
        EXPECT(0x9022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9020));
        EXPECT(0xdf, gbc.readMem(0x9021));
        // CB DF 01D2
        gbc.setState(0x3cb5, 0x278e, 0xec00, 0x191, 0x5a36, 0x2ad9, 0x1, 0x1);
        gbc.writeMem(0x3cb5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x278e, gbc.sp());
        EXPECT(0x3cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01D3
        gbc.setState(0xee2, 0xdd30, 0x3570, 0x7c84, 0xe252, 0xad6, 0x0, 0x1);
        gbc.writeMem(0xee2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdd30, gbc.sp());
        EXPECT(0xee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01D4
        gbc.setState(0x6e0f, 0xbda5, 0xe3e0, 0x4fbb, 0xdf87, 0x606e, 0x0, 0x1);
        gbc.writeMem(0x6e0f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbda5, gbc.sp());
        EXPECT(0x6e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01D5
        gbc.setState(0x9d56, 0x232, 0x1770, 0x8342, 0x765f, 0x3544, 0x0, 0x0);
        gbc.writeMem(0x9d56, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x232, gbc.sp());
        EXPECT(0x9d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d56));
        EXPECT(0xdf, gbc.readMem(0x9d57));
        // CB DF 01D6
        gbc.setState(0x72ee, 0xdb7d, 0x73d0, 0x344b, 0x112d, 0x3474, 0x0, 0x0);
        gbc.writeMem(0x72ee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdb7d, gbc.sp());
        EXPECT(0x72f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01D7
        gbc.setState(0x7099, 0x8e5f, 0xd5b0, 0xa80e, 0xd533, 0x52e7, 0x0, 0x1);
        gbc.writeMem(0x7099, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8e5f, gbc.sp());
        EXPECT(0x709b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01D8
        gbc.setState(0xe19d, 0x4c9c, 0x35d0, 0x37f6, 0xa968, 0xecad, 0x0, 0x0);
        gbc.writeMem(0xe19d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4c9c, gbc.sp());
        EXPECT(0xe19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19d));
        EXPECT(0xdf, gbc.readMem(0xe19e));
        // CB DF 01D9
        gbc.setState(0x9bcd, 0x7371, 0x5580, 0xb65d, 0xebe3, 0xbcf9, 0x0, 0x1);
        gbc.writeMem(0x9bcd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7371, gbc.sp());
        EXPECT(0x9bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bcd));
        EXPECT(0xdf, gbc.readMem(0x9bce));
        // CB DF 01DA
        gbc.setState(0x457f, 0xf4ed, 0x2e20, 0x583d, 0xa265, 0x495e, 0x1, 0x1);
        gbc.writeMem(0x457f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf4ed, gbc.sp());
        EXPECT(0x4581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01DB
        gbc.setState(0x4f96, 0x218f, 0xa850, 0x6b23, 0x3a7b, 0xcec8, 0x0, 0x1);
        gbc.writeMem(0x4f96, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x218f, gbc.sp());
        EXPECT(0x4f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01DC
        gbc.setState(0xc8a6, 0x1e9e, 0xe3a0, 0x2be7, 0x8a8, 0xca4a, 0x1, 0x0);
        gbc.writeMem(0xc8a6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1e9e, gbc.sp());
        EXPECT(0xc8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a6));
        EXPECT(0xdf, gbc.readMem(0xc8a7));
        // CB DF 01DD
        gbc.setState(0x5445, 0x2983, 0x1d80, 0x7566, 0x761d, 0xede8, 0x0, 0x0);
        gbc.writeMem(0x5445, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2983, gbc.sp());
        EXPECT(0x5447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01DE
        gbc.setState(0x501, 0x2a1b, 0xb030, 0x243f, 0x67a3, 0xf670, 0x1, 0x0);
        gbc.writeMem(0x501, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2a1b, gbc.sp());
        EXPECT(0x503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01E0
        gbc.setState(0xc72b, 0xab92, 0xe320, 0x1a4e, 0x3520, 0xdfe, 0x0, 0x0);
        gbc.writeMem(0xc72b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xab92, gbc.sp());
        EXPECT(0xc72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72b));
        EXPECT(0xdf, gbc.readMem(0xc72c));
        // CB DF 01E1
        gbc.setState(0x473, 0x8b75, 0xf5f0, 0xe4ff, 0x4a59, 0x3e54, 0x1, 0x0);
        gbc.writeMem(0x473, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8b75, gbc.sp());
        EXPECT(0x475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01E2
        gbc.setState(0xa522, 0xbee0, 0x44b0, 0x2d55, 0x48aa, 0xfb99, 0x1, 0x0);
        gbc.writeMem(0xa522, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbee0, gbc.sp());
        EXPECT(0xa524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa522));
        EXPECT(0xdf, gbc.readMem(0xa523));
        // CB DF 01E3
        gbc.setState(0x208b, 0x4dfa, 0x9b60, 0x2210, 0x95c8, 0xe7c8, 0x0, 0x1);
        gbc.writeMem(0x208b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4dfa, gbc.sp());
        EXPECT(0x208d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01E4
        gbc.setState(0xb86c, 0x94ea, 0x490, 0x5619, 0x704f, 0x920f, 0x1, 0x1);
        gbc.writeMem(0xb86c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x94ea, gbc.sp());
        EXPECT(0xb86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb86c));
        EXPECT(0xdf, gbc.readMem(0xb86d));
        // CB DF 01E5
        gbc.setState(0x93a0, 0xae50, 0xb010, 0xc396, 0x1a3c, 0x721c, 0x1, 0x0);
        gbc.writeMem(0x93a0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xae50, gbc.sp());
        EXPECT(0x93a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a0));
        EXPECT(0xdf, gbc.readMem(0x93a1));
        // CB DF 01E6
        gbc.setState(0xbccd, 0xc273, 0x11b0, 0xabc1, 0xae4a, 0x2910, 0x0, 0x1);
        gbc.writeMem(0xbccd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc273, gbc.sp());
        EXPECT(0xbccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbccd));
        EXPECT(0xdf, gbc.readMem(0xbcce));
        // CB DF 01E7
        gbc.setState(0x2b2d, 0xe53a, 0xcc20, 0x71b7, 0xecd0, 0xccc3, 0x0, 0x0);
        gbc.writeMem(0x2b2d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe53a, gbc.sp());
        EXPECT(0x2b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01E8
        gbc.setState(0x27b3, 0xf4c1, 0xa430, 0xc0d2, 0x2ce0, 0x7251, 0x0, 0x0);
        gbc.writeMem(0x27b3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf4c1, gbc.sp());
        EXPECT(0x27b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01E9
        gbc.setState(0x894a, 0x27bf, 0xc590, 0x1e45, 0xa7cf, 0x1646, 0x1, 0x1);
        gbc.writeMem(0x894a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x27bf, gbc.sp());
        EXPECT(0x894c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894a));
        EXPECT(0xdf, gbc.readMem(0x894b));
        // CB DF 01EA
        gbc.setState(0x412, 0x3403, 0xc510, 0x5896, 0xfa14, 0xebdf, 0x0, 0x0);
        gbc.writeMem(0x412, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3403, gbc.sp());
        EXPECT(0x414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01EB
        gbc.setState(0xd08c, 0x3944, 0xe5a0, 0x4719, 0xf070, 0xcb65, 0x0, 0x0);
        gbc.writeMem(0xd08c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3944, gbc.sp());
        EXPECT(0xd08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08c));
        EXPECT(0xdf, gbc.readMem(0xd08d));
        // CB DF 01EC
        gbc.setState(0x256f, 0xa10c, 0xe3e0, 0x6775, 0x470c, 0x4440, 0x1, 0x1);
        gbc.writeMem(0x256f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa10c, gbc.sp());
        EXPECT(0x2571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01ED
        gbc.setState(0x1340, 0xcac5, 0xba10, 0x95c3, 0xe611, 0xc47, 0x0, 0x0);
        gbc.writeMem(0x1340, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcac5, gbc.sp());
        EXPECT(0x1342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01EE
        gbc.setState(0xca83, 0xfed5, 0x930, 0x71db, 0x2048, 0xdbbe, 0x0, 0x1);
        gbc.writeMem(0xca83, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfed5, gbc.sp());
        EXPECT(0xca85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca83));
        EXPECT(0xdf, gbc.readMem(0xca84));
        // CB DF 01EF
        gbc.setState(0xa1e6, 0xd0c, 0xabe0, 0x54e0, 0x1c6e, 0xf673, 0x0, 0x0);
        gbc.writeMem(0xa1e6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd0c, gbc.sp());
        EXPECT(0xa1e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e6));
        EXPECT(0xdf, gbc.readMem(0xa1e7));
        // CB DF 01F1
        gbc.setState(0x351, 0xa637, 0xe010, 0x5d71, 0x36f8, 0xe725, 0x1, 0x1);
        gbc.writeMem(0x351, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa637, gbc.sp());
        EXPECT(0x353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01F2
        gbc.setState(0x8acd, 0xe015, 0x6f40, 0xbd77, 0xce27, 0xa6b0, 0x0, 0x0);
        gbc.writeMem(0x8acd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe015, gbc.sp());
        EXPECT(0x8acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8acd));
        EXPECT(0xdf, gbc.readMem(0x8ace));
        // CB DF 01F3
        gbc.setState(0x93c4, 0x6fdb, 0xa870, 0x8e11, 0x59fa, 0x61bf, 0x1, 0x0);
        gbc.writeMem(0x93c4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6fdb, gbc.sp());
        EXPECT(0x93c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c4));
        EXPECT(0xdf, gbc.readMem(0x93c5));
        // CB DF 01F4
        gbc.setState(0xc958, 0xa6f3, 0xc840, 0xecd8, 0x5b24, 0x3c8a, 0x1, 0x0);
        gbc.writeMem(0xc958, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa6f3, gbc.sp());
        EXPECT(0xc95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc958));
        EXPECT(0xdf, gbc.readMem(0xc959));
        // CB DF 01F5
        gbc.setState(0xe14c, 0xb4e3, 0x14a0, 0x8d89, 0x840f, 0x7705, 0x1, 0x0);
        gbc.writeMem(0xe14c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb4e3, gbc.sp());
        EXPECT(0xe14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14c));
        EXPECT(0xdf, gbc.readMem(0xe14d));
        // CB DF 01F6
        gbc.setState(0x4480, 0x8279, 0xa310, 0xa208, 0x2393, 0x2bb, 0x0, 0x1);
        gbc.writeMem(0x4480, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8279, gbc.sp());
        EXPECT(0x4482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01F7
        gbc.setState(0xc1a8, 0x6009, 0xce70, 0xc7ce, 0xb658, 0x63c2, 0x1, 0x0);
        gbc.writeMem(0xc1a8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6009, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a8));
        EXPECT(0xdf, gbc.readMem(0xc1a9));
        // CB DF 01F8
        gbc.setState(0x6297, 0x9444, 0x870, 0xdf77, 0x52cd, 0xc261, 0x0, 0x1);
        gbc.writeMem(0x6297, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9444, gbc.sp());
        EXPECT(0x6299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 01FA
        gbc.setState(0xa58e, 0xae14, 0x8c40, 0x48df, 0x9817, 0x4745, 0x1, 0x1);
        gbc.writeMem(0xa58e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0xa590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58e));
        EXPECT(0xdf, gbc.readMem(0xa58f));
        // CB DF 01FB
        gbc.setState(0x9b9, 0x6124, 0xcf20, 0xa67d, 0xa5e1, 0xe290, 0x0, 0x1);
        gbc.writeMem(0x9b9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6124, gbc.sp());
        EXPECT(0x9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01FC
        gbc.setState(0xe3ab, 0xb7ce, 0xd0f0, 0x7707, 0xcd66, 0xf00, 0x1, 0x1);
        gbc.writeMem(0xe3ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0xe3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ab));
        EXPECT(0xdf, gbc.readMem(0xe3ac));
        // CB DF 01FD
        gbc.setState(0xb2a0, 0x4906, 0xa1c0, 0xeb1e, 0x7b15, 0x94df, 0x0, 0x0);
        gbc.writeMem(0xb2a0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4906, gbc.sp());
        EXPECT(0xb2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a0));
        EXPECT(0xdf, gbc.readMem(0xb2a1));
        // CB DF 01FE
        gbc.setState(0x72c0, 0xa21d, 0xff60, 0xf9a8, 0xc4e0, 0xd67d, 0x0, 0x0);
        gbc.writeMem(0x72c0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa21d, gbc.sp());
        EXPECT(0x72c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 01FF
        gbc.setState(0xba81, 0x3a46, 0xe520, 0xbf55, 0xf3fe, 0x1328, 0x1, 0x1);
        gbc.writeMem(0xba81, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3a46, gbc.sp());
        EXPECT(0xba83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba81));
        EXPECT(0xdf, gbc.readMem(0xba82));
        // CB DF 0200
        gbc.setState(0x71b7, 0x9d19, 0xcbe0, 0xb356, 0x27ff, 0xf683, 0x0, 0x1);
        gbc.writeMem(0x71b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9d19, gbc.sp());
        EXPECT(0x71b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0201
        gbc.setState(0xa00c, 0x6bd6, 0xfe70, 0x3406, 0x2ce6, 0xad9e, 0x1, 0x1);
        gbc.writeMem(0xa00c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6bd6, gbc.sp());
        EXPECT(0xa00e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00c));
        EXPECT(0xdf, gbc.readMem(0xa00d));
        // CB DF 0202
        gbc.setState(0xdb75, 0x4c8f, 0xd750, 0x514c, 0xf9fe, 0xe984, 0x1, 0x1);
        gbc.writeMem(0xdb75, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4c8f, gbc.sp());
        EXPECT(0xdb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb75));
        EXPECT(0xdf, gbc.readMem(0xdb76));
        // CB DF 0203
        gbc.setState(0xe071, 0xc4af, 0x36d0, 0xb3d3, 0x6f5f, 0x2054, 0x0, 0x1);
        gbc.writeMem(0xe071, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc4af, gbc.sp());
        EXPECT(0xe073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe071));
        EXPECT(0xdf, gbc.readMem(0xe072));
        // CB DF 0204
        gbc.setState(0x96d1, 0x13e1, 0x3650, 0x6638, 0xf187, 0x2794, 0x0, 0x0);
        gbc.writeMem(0x96d1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x13e1, gbc.sp());
        EXPECT(0x96d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d1));
        EXPECT(0xdf, gbc.readMem(0x96d2));
        // CB DF 0205
        gbc.setState(0x6238, 0x75fa, 0x54e0, 0x1f72, 0x5a44, 0x68d5, 0x0, 0x1);
        gbc.writeMem(0x6238, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x75fa, gbc.sp());
        EXPECT(0x623a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0206
        gbc.setState(0x5b9b, 0x2f03, 0xf350, 0x8415, 0x26eb, 0x6093, 0x1, 0x1);
        gbc.writeMem(0x5b9b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2f03, gbc.sp());
        EXPECT(0x5b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0207
        gbc.setState(0x4584, 0x320a, 0xa2e0, 0x5e01, 0x11d1, 0xe0d9, 0x1, 0x1);
        gbc.writeMem(0x4584, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x320a, gbc.sp());
        EXPECT(0x4586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0208
        gbc.setState(0xe732, 0x7461, 0xc2b0, 0xd56a, 0x7e90, 0x2f80, 0x0, 0x1);
        gbc.writeMem(0xe732, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7461, gbc.sp());
        EXPECT(0xe734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe732));
        EXPECT(0xdf, gbc.readMem(0xe733));
        // CB DF 0209
        gbc.setState(0xe7a9, 0xd10e, 0xb850, 0x14de, 0x6c50, 0xaef1, 0x1, 0x0);
        gbc.writeMem(0xe7a9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd10e, gbc.sp());
        EXPECT(0xe7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a9));
        EXPECT(0xdf, gbc.readMem(0xe7aa));
        // CB DF 020A
        gbc.setState(0xe3f9, 0x95cf, 0x4ed0, 0x34c2, 0xc510, 0x5b75, 0x1, 0x1);
        gbc.writeMem(0xe3f9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x95cf, gbc.sp());
        EXPECT(0xe3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f9));
        EXPECT(0xdf, gbc.readMem(0xe3fa));
        // CB DF 020B
        gbc.setState(0x4016, 0xc850, 0x9bf0, 0xd6f4, 0xc744, 0x2bc0, 0x1, 0x1);
        gbc.writeMem(0x4016, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc850, gbc.sp());
        EXPECT(0x4018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 020C
        gbc.setState(0xe640, 0x9864, 0x2c40, 0x9ef9, 0x16be, 0x7e74, 0x0, 0x0);
        gbc.writeMem(0xe640, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9864, gbc.sp());
        EXPECT(0xe642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe640));
        EXPECT(0xdf, gbc.readMem(0xe641));
        // CB DF 020D
        gbc.setState(0xcb19, 0xf6c5, 0xf010, 0x3578, 0xe6b2, 0x1d65, 0x1, 0x1);
        gbc.writeMem(0xcb19, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf6c5, gbc.sp());
        EXPECT(0xcb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb19));
        EXPECT(0xdf, gbc.readMem(0xcb1a));
        // CB DF 020E
        gbc.setState(0x6cd1, 0x33ad, 0xb4c0, 0x23d4, 0xe2b6, 0xf07c, 0x0, 0x0);
        gbc.writeMem(0x6cd1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x33ad, gbc.sp());
        EXPECT(0x6cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 020F
        gbc.setState(0xb098, 0x6fb3, 0xc680, 0x416f, 0x60b5, 0xeb07, 0x1, 0x1);
        gbc.writeMem(0xb098, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6fb3, gbc.sp());
        EXPECT(0xb09a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb098));
        EXPECT(0xdf, gbc.readMem(0xb099));
        // CB DF 0210
        gbc.setState(0x138b, 0x393d, 0xaf90, 0x9bf1, 0xb44e, 0xebcc, 0x0, 0x0);
        gbc.writeMem(0x138b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x393d, gbc.sp());
        EXPECT(0x138d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0211
        gbc.setState(0x7b33, 0xc9c9, 0x1930, 0xf393, 0x77da, 0x30fb, 0x0, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc9c9, gbc.sp());
        EXPECT(0x7b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0213
        gbc.setState(0x9728, 0xccfa, 0x83f0, 0xf15e, 0x3f36, 0x9a2f, 0x1, 0x1);
        gbc.writeMem(0x9728, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xccfa, gbc.sp());
        EXPECT(0x972a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9728));
        EXPECT(0xdf, gbc.readMem(0x9729));
        // CB DF 0214
        gbc.setState(0xaf99, 0x2f0f, 0xf0e0, 0xab02, 0x2498, 0x4226, 0x1, 0x1);
        gbc.writeMem(0xaf99, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2f0f, gbc.sp());
        EXPECT(0xaf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf99));
        EXPECT(0xdf, gbc.readMem(0xaf9a));
        // CB DF 0215
        gbc.setState(0x2858, 0x20fc, 0x4d20, 0x3342, 0x8a30, 0x754e, 0x1, 0x0);
        gbc.writeMem(0x2858, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x20fc, gbc.sp());
        EXPECT(0x285a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0216
        gbc.setState(0x1056, 0x9a0, 0x750, 0x85c2, 0x532, 0x7a49, 0x1, 0x0);
        gbc.writeMem(0x1056, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9a0, gbc.sp());
        EXPECT(0x1058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0217
        gbc.setState(0x10a1, 0xb7a, 0x21c0, 0x4863, 0xe472, 0x4ced, 0x1, 0x1);
        gbc.writeMem(0x10a1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb7a, gbc.sp());
        EXPECT(0x10a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0218
        gbc.setState(0xecb5, 0xd967, 0xa3f0, 0x5a7c, 0x605b, 0xc206, 0x1, 0x0);
        gbc.writeMem(0xecb5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd967, gbc.sp());
        EXPECT(0xecb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb5));
        EXPECT(0xdf, gbc.readMem(0xecb6));
        // CB DF 0219
        gbc.setState(0x6c4d, 0x2fa7, 0xf7a0, 0xef99, 0xd9bd, 0xc760, 0x1, 0x1);
        gbc.writeMem(0x6c4d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2fa7, gbc.sp());
        EXPECT(0x6c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 021A
        gbc.setState(0x4cb5, 0xe65d, 0x6a20, 0xd54, 0x76b7, 0xd598, 0x1, 0x0);
        gbc.writeMem(0x4cb5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe65d, gbc.sp());
        EXPECT(0x4cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 021B
        gbc.setState(0x17bb, 0x9d7, 0x5220, 0xe1b6, 0x9d7d, 0x931d, 0x1, 0x0);
        gbc.writeMem(0x17bb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9d7, gbc.sp());
        EXPECT(0x17bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 021C
        gbc.setState(0x3169, 0x4c46, 0x33f0, 0xbe11, 0x5d7e, 0x13cf, 0x0, 0x1);
        gbc.writeMem(0x3169, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4c46, gbc.sp());
        EXPECT(0x316b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 021D
        gbc.setState(0xa95d, 0x52c, 0x3f10, 0xd8f5, 0x55e7, 0xf8ad, 0x0, 0x1);
        gbc.writeMem(0xa95d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x52c, gbc.sp());
        EXPECT(0xa95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95d));
        EXPECT(0xdf, gbc.readMem(0xa95e));
        // CB DF 021E
        gbc.setState(0x5d77, 0x1709, 0xff90, 0x183c, 0x3141, 0xbf7b, 0x0, 0x1);
        gbc.writeMem(0x5d77, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1709, gbc.sp());
        EXPECT(0x5d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 021F
        gbc.setState(0x478e, 0xbbac, 0x6470, 0x9409, 0xc1e5, 0xdd40, 0x0, 0x0);
        gbc.writeMem(0x478e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbbac, gbc.sp());
        EXPECT(0x4790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0220
        gbc.setState(0x63f1, 0xae58, 0x9be0, 0x39d8, 0x2d06, 0xfc7d, 0x1, 0x0);
        gbc.writeMem(0x63f1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xae58, gbc.sp());
        EXPECT(0x63f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0221
        gbc.setState(0x67e1, 0x49ae, 0xc390, 0x976e, 0x2561, 0x5e3b, 0x0, 0x0);
        gbc.writeMem(0x67e1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x49ae, gbc.sp());
        EXPECT(0x67e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0222
        gbc.setState(0x9127, 0xc486, 0xb160, 0x3a63, 0xb55b, 0xa4d2, 0x1, 0x0);
        gbc.writeMem(0x9127, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x9129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9127));
        EXPECT(0xdf, gbc.readMem(0x9128));
        // CB DF 0223
        gbc.setState(0xe21d, 0x2a6b, 0xe040, 0xedd4, 0x6687, 0x8084, 0x0, 0x0);
        gbc.writeMem(0xe21d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2a6b, gbc.sp());
        EXPECT(0xe21f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21d));
        EXPECT(0xdf, gbc.readMem(0xe21e));
        // CB DF 0224
        gbc.setState(0xccd1, 0xcaa9, 0x3160, 0xa087, 0x8bae, 0xffa6, 0x1, 0x1);
        gbc.writeMem(0xccd1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcaa9, gbc.sp());
        EXPECT(0xccd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd1));
        EXPECT(0xdf, gbc.readMem(0xccd2));
        // CB DF 0225
        gbc.setState(0x4f1c, 0x4599, 0xf020, 0xbd02, 0x50af, 0x17a8, 0x0, 0x1);
        gbc.writeMem(0x4f1c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4599, gbc.sp());
        EXPECT(0x4f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0226
        gbc.setState(0x78f4, 0x1c06, 0xd200, 0xb9dc, 0xd21b, 0xf38d, 0x1, 0x1);
        gbc.writeMem(0x78f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1c06, gbc.sp());
        EXPECT(0x78f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0227
        gbc.setState(0xaf83, 0x4848, 0x1c70, 0x2517, 0xb690, 0x70b7, 0x1, 0x0);
        gbc.writeMem(0xaf83, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4848, gbc.sp());
        EXPECT(0xaf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf83));
        EXPECT(0xdf, gbc.readMem(0xaf84));
        // CB DF 0228
        gbc.setState(0x4b91, 0xaadb, 0xd420, 0x2c2c, 0x7565, 0x9321, 0x1, 0x1);
        gbc.writeMem(0x4b91, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaadb, gbc.sp());
        EXPECT(0x4b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0229
        gbc.setState(0x9ec9, 0x5ab9, 0xb870, 0x9edf, 0xfbfa, 0x46a8, 0x0, 0x1);
        gbc.writeMem(0x9ec9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5ab9, gbc.sp());
        EXPECT(0x9ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec9));
        EXPECT(0xdf, gbc.readMem(0x9eca));
        // CB DF 022A
        gbc.setState(0xe69e, 0x529f, 0x4e50, 0x41cb, 0xa88f, 0xf699, 0x1, 0x1);
        gbc.writeMem(0xe69e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x529f, gbc.sp());
        EXPECT(0xe6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69e));
        EXPECT(0xdf, gbc.readMem(0xe69f));
        // CB DF 022B
        gbc.setState(0x9bfb, 0x5edd, 0x400, 0x6e9, 0x2ba0, 0x5fa0, 0x1, 0x1);
        gbc.writeMem(0x9bfb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5edd, gbc.sp());
        EXPECT(0x9bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfb));
        EXPECT(0xdf, gbc.readMem(0x9bfc));
        // CB DF 022C
        gbc.setState(0x474b, 0x9c8d, 0x7800, 0xd5b0, 0xb4fc, 0x9c5c, 0x1, 0x0);
        gbc.writeMem(0x474b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9c8d, gbc.sp());
        EXPECT(0x474d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 022D
        gbc.setState(0xad9d, 0xc777, 0xc540, 0xcd1d, 0xab66, 0xb33c, 0x0, 0x1);
        gbc.writeMem(0xad9d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc777, gbc.sp());
        EXPECT(0xad9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad9d));
        EXPECT(0xdf, gbc.readMem(0xad9e));
        // CB DF 022E
        gbc.setState(0xc2ee, 0x5a5a, 0x3b70, 0x4c, 0x44aa, 0x56ea, 0x0, 0x0);
        gbc.writeMem(0xc2ee, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5a5a, gbc.sp());
        EXPECT(0xc2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ee));
        EXPECT(0xdf, gbc.readMem(0xc2ef));
        // CB DF 022F
        gbc.setState(0x19bc, 0xa59, 0x63f0, 0x4bf, 0x7b3a, 0x1274, 0x0, 0x0);
        gbc.writeMem(0x19bc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa59, gbc.sp());
        EXPECT(0x19be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0230
        gbc.setState(0x65fe, 0xb752, 0x49f0, 0x2d4e, 0xa3fc, 0x4a6e, 0x0, 0x1);
        gbc.writeMem(0x65fe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb752, gbc.sp());
        EXPECT(0x6600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0231
        gbc.setState(0xe5a1, 0x5c4e, 0x4d80, 0x3c1c, 0xe15d, 0xb7ac, 0x0, 0x1);
        gbc.writeMem(0xe5a1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5c4e, gbc.sp());
        EXPECT(0xe5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a1));
        EXPECT(0xdf, gbc.readMem(0xe5a2));
        // CB DF 0232
        gbc.setState(0xa2ba, 0x6b83, 0x1d0, 0xcfdb, 0x7595, 0x8b2, 0x0, 0x1);
        gbc.writeMem(0xa2ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6b83, gbc.sp());
        EXPECT(0xa2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ba));
        EXPECT(0xdf, gbc.readMem(0xa2bb));
        // CB DF 0233
        gbc.setState(0x6458, 0xc1db, 0x8820, 0xf278, 0x2d5b, 0x8777, 0x0, 0x0);
        gbc.writeMem(0x6458, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc1db, gbc.sp());
        EXPECT(0x645a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0234
        gbc.setState(0xdbaa, 0x7e54, 0xc3c0, 0x4101, 0xe424, 0xcbfe, 0x1, 0x1);
        gbc.writeMem(0xdbaa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7e54, gbc.sp());
        EXPECT(0xdbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbaa));
        EXPECT(0xdf, gbc.readMem(0xdbab));
        // CB DF 0235
        gbc.setState(0x7a9e, 0x1e4e, 0x7760, 0x551a, 0x554e, 0xfc11, 0x0, 0x1);
        gbc.writeMem(0x7a9e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1e4e, gbc.sp());
        EXPECT(0x7aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0236
        gbc.setState(0x4de3, 0xc578, 0xbd90, 0xdcd6, 0xff91, 0xe1a6, 0x1, 0x1);
        gbc.writeMem(0x4de3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc578, gbc.sp());
        EXPECT(0x4de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0237
        gbc.setState(0x4063, 0x4a38, 0x5b80, 0xc402, 0x891a, 0x5c26, 0x1, 0x0);
        gbc.writeMem(0x4063, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4a38, gbc.sp());
        EXPECT(0x4065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0238
        gbc.setState(0x7351, 0x771f, 0x3e90, 0x4904, 0x6034, 0x3b00, 0x1, 0x0);
        gbc.writeMem(0x7351, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x771f, gbc.sp());
        EXPECT(0x7353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0239
        gbc.setState(0x2b1f, 0xbc41, 0xc250, 0xb795, 0xf4fc, 0xf9a3, 0x0, 0x1);
        gbc.writeMem(0x2b1f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbc41, gbc.sp());
        EXPECT(0x2b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 023A
        gbc.setState(0xcc60, 0x2113, 0x4d40, 0xb348, 0xb26b, 0xff3a, 0x0, 0x1);
        gbc.writeMem(0xcc60, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2113, gbc.sp());
        EXPECT(0xcc62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc60));
        EXPECT(0xdf, gbc.readMem(0xcc61));
        // CB DF 023B
        gbc.setState(0xd70b, 0x7c68, 0x82c0, 0xca65, 0x53bb, 0x79ea, 0x1, 0x1);
        gbc.writeMem(0xd70b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7c68, gbc.sp());
        EXPECT(0xd70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70b));
        EXPECT(0xdf, gbc.readMem(0xd70c));
        // CB DF 023D
        gbc.setState(0x1b0, 0xc1d6, 0x3fd0, 0xaa54, 0xe4f4, 0xb6c4, 0x0, 0x1);
        gbc.writeMem(0x1b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc1d6, gbc.sp());
        EXPECT(0x1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 023E
        gbc.setState(0x563a, 0x3f6b, 0xba90, 0xd20f, 0xc18d, 0xacac, 0x0, 0x0);
        gbc.writeMem(0x563a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3f6b, gbc.sp());
        EXPECT(0x563c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 023F
        gbc.setState(0xadfb, 0x5c78, 0x3400, 0x44e4, 0x3ec8, 0xf9bf, 0x0, 0x1);
        gbc.writeMem(0xadfb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5c78, gbc.sp());
        EXPECT(0xadfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadfb));
        EXPECT(0xdf, gbc.readMem(0xadfc));
        // CB DF 0240
        gbc.setState(0xb77, 0x7282, 0x14e0, 0xcce3, 0x3d7d, 0xf57c, 0x1, 0x0);
        gbc.writeMem(0xb77, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7282, gbc.sp());
        EXPECT(0xb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0242
        gbc.setState(0xc9ac, 0xc76f, 0x5e90, 0x4671, 0x82df, 0xbc12, 0x0, 0x1);
        gbc.writeMem(0xc9ac, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc76f, gbc.sp());
        EXPECT(0xc9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ac));
        EXPECT(0xdf, gbc.readMem(0xc9ad));
        // CB DF 0243
        gbc.setState(0x16e9, 0x1b02, 0xff90, 0x48fd, 0x969a, 0xf152, 0x0, 0x1);
        gbc.writeMem(0x16e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1b02, gbc.sp());
        EXPECT(0x16eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0244
        gbc.setState(0x9a9a, 0xc3e7, 0x7b60, 0x907f, 0x819e, 0xccb7, 0x0, 0x1);
        gbc.writeMem(0x9a9a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc3e7, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9a));
        EXPECT(0xdf, gbc.readMem(0x9a9b));
        // CB DF 0245
        gbc.setState(0x682, 0x4433, 0x20, 0x6bc5, 0x65cf, 0x4949, 0x1, 0x0);
        gbc.writeMem(0x682, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4433, gbc.sp());
        EXPECT(0x684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0246
        gbc.setState(0x1197, 0x2bee, 0x5740, 0xda57, 0x5fb0, 0x917b, 0x0, 0x1);
        gbc.writeMem(0x1197, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2bee, gbc.sp());
        EXPECT(0x1199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0247
        gbc.setState(0xd041, 0xa90f, 0x73b0, 0xee40, 0x630e, 0xb01b, 0x0, 0x1);
        gbc.writeMem(0xd041, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa90f, gbc.sp());
        EXPECT(0xd043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd041));
        EXPECT(0xdf, gbc.readMem(0xd042));
        // CB DF 0248
        gbc.setState(0x7b1e, 0x1648, 0x6760, 0x71c1, 0xe88f, 0xcd51, 0x1, 0x1);
        gbc.writeMem(0x7b1e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1648, gbc.sp());
        EXPECT(0x7b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0249
        gbc.setState(0x1517, 0x8954, 0x6a0, 0x7ce7, 0x9dac, 0xc3bd, 0x1, 0x0);
        gbc.writeMem(0x1517, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8954, gbc.sp());
        EXPECT(0x1519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 024A
        gbc.setState(0x677a, 0xdd28, 0xda80, 0x5b55, 0xd54d, 0x46f8, 0x1, 0x1);
        gbc.writeMem(0x677a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdd28, gbc.sp());
        EXPECT(0x677c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 024B
        gbc.setState(0xdbdb, 0x2f0e, 0x1840, 0xddf4, 0x99cb, 0xf3f5, 0x1, 0x0);
        gbc.writeMem(0xdbdb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2f0e, gbc.sp());
        EXPECT(0xdbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbdb));
        EXPECT(0xdf, gbc.readMem(0xdbdc));
        // CB DF 024C
        gbc.setState(0x6ab2, 0x6a29, 0xbfc0, 0xd69a, 0x2aa4, 0x1237, 0x0, 0x0);
        gbc.writeMem(0x6ab2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 024D
        gbc.setState(0x1428, 0x50aa, 0x90a0, 0xf000, 0xbdee, 0x3fd3, 0x1, 0x1);
        gbc.writeMem(0x1428, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x50aa, gbc.sp());
        EXPECT(0x142a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 024E
        gbc.setState(0x4e46, 0x97b5, 0xbd90, 0x256c, 0x8e57, 0xed14, 0x1, 0x1);
        gbc.writeMem(0x4e46, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x97b5, gbc.sp());
        EXPECT(0x4e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 024F
        gbc.setState(0xa721, 0x93a2, 0x86b0, 0x5e0d, 0xb337, 0xf88a, 0x1, 0x0);
        gbc.writeMem(0xa721, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x93a2, gbc.sp());
        EXPECT(0xa723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa721));
        EXPECT(0xdf, gbc.readMem(0xa722));
        // CB DF 0250
        gbc.setState(0xe0e, 0xbdb4, 0x3790, 0x8a9b, 0xbb3a, 0x9e7e, 0x1, 0x0);
        gbc.writeMem(0xe0e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbdb4, gbc.sp());
        EXPECT(0xe10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0251
        gbc.setState(0x2e66, 0x2324, 0xf8b0, 0xe222, 0x659, 0xe8f8, 0x0, 0x0);
        gbc.writeMem(0x2e66, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2324, gbc.sp());
        EXPECT(0x2e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0252
        gbc.setState(0x4aad, 0xe02c, 0xe440, 0x360f, 0x7eaa, 0xb97a, 0x0, 0x1);
        gbc.writeMem(0x4aad, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe02c, gbc.sp());
        EXPECT(0x4aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0253
        gbc.setState(0xb0f4, 0xdb5c, 0x26b0, 0x69ba, 0x7765, 0x14e2, 0x0, 0x1);
        gbc.writeMem(0xb0f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdb5c, gbc.sp());
        EXPECT(0xb0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f4));
        EXPECT(0xdf, gbc.readMem(0xb0f5));
        // CB DF 0254
        gbc.setState(0x8750, 0x1b71, 0x4ab0, 0x7c98, 0xc0b3, 0x4b4c, 0x0, 0x0);
        gbc.writeMem(0x8750, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1b71, gbc.sp());
        EXPECT(0x8752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8750));
        EXPECT(0xdf, gbc.readMem(0x8751));
        // CB DF 0255
        gbc.setState(0xa61c, 0x9d72, 0x7dd0, 0x216f, 0x7507, 0x743c, 0x0, 0x1);
        gbc.writeMem(0xa61c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9d72, gbc.sp());
        EXPECT(0xa61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61c));
        EXPECT(0xdf, gbc.readMem(0xa61d));
        // CB DF 0256
        gbc.setState(0xda35, 0x9be7, 0x48d0, 0x1db1, 0xb069, 0x1b01, 0x0, 0x1);
        gbc.writeMem(0xda35, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9be7, gbc.sp());
        EXPECT(0xda37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda35));
        EXPECT(0xdf, gbc.readMem(0xda36));
        // CB DF 0257
        gbc.setState(0x6ab7, 0x38a3, 0x5620, 0x598b, 0x98e0, 0xdc8, 0x1, 0x0);
        gbc.writeMem(0x6ab7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x38a3, gbc.sp());
        EXPECT(0x6ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0258
        gbc.setState(0xd11f, 0xe43b, 0x90d0, 0x536d, 0x9049, 0x6efe, 0x1, 0x1);
        gbc.writeMem(0xd11f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe43b, gbc.sp());
        EXPECT(0xd121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11f));
        EXPECT(0xdf, gbc.readMem(0xd120));
        // CB DF 0259
        gbc.setState(0xa340, 0x59a1, 0x6980, 0xc00e, 0x596e, 0x2eb2, 0x0, 0x0);
        gbc.writeMem(0xa340, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x59a1, gbc.sp());
        EXPECT(0xa342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa340));
        EXPECT(0xdf, gbc.readMem(0xa341));
        // CB DF 025A
        gbc.setState(0xe166, 0x3298, 0xfc70, 0x3a52, 0xa438, 0xdfbf, 0x1, 0x1);
        gbc.writeMem(0xe166, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3298, gbc.sp());
        EXPECT(0xe168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe166));
        EXPECT(0xdf, gbc.readMem(0xe167));
        // CB DF 025B
        gbc.setState(0x9ffe, 0xe876, 0x5560, 0x7906, 0x84ec, 0x6353, 0x1, 0x1);
        gbc.writeMem(0x9ffe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe876, gbc.sp());
        EXPECT(0xa000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ffe));
        EXPECT(0xdf, gbc.readMem(0x9fff));
        // CB DF 025C
        gbc.setState(0x6edd, 0x72cd, 0xc120, 0xed2e, 0x928e, 0x26dd, 0x0, 0x1);
        gbc.writeMem(0x6edd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x72cd, gbc.sp());
        EXPECT(0x6edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 025D
        gbc.setState(0x4307, 0xce9f, 0xec10, 0xfb80, 0xc23, 0xce3d, 0x0, 0x0);
        gbc.writeMem(0x4307, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xce9f, gbc.sp());
        EXPECT(0x4309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 025E
        gbc.setState(0x864, 0xa988, 0x1df0, 0xa7a2, 0xd111, 0x55df, 0x0, 0x0);
        gbc.writeMem(0x864, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa988, gbc.sp());
        EXPECT(0x866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 025F
        gbc.setState(0x8ab5, 0x77b6, 0x1b80, 0xf0d6, 0x64e, 0xdafb, 0x1, 0x0);
        gbc.writeMem(0x8ab5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x77b6, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab5));
        EXPECT(0xdf, gbc.readMem(0x8ab6));
        // CB DF 0260
        gbc.setState(0x6d48, 0x7b3f, 0x47a0, 0x443d, 0xf584, 0x13f6, 0x0, 0x1);
        gbc.writeMem(0x6d48, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7b3f, gbc.sp());
        EXPECT(0x6d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0261
        gbc.setState(0x7adc, 0x75c1, 0xd920, 0xbf4e, 0x910a, 0x8459, 0x0, 0x1);
        gbc.writeMem(0x7adc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0262
        gbc.setState(0x328e, 0x7b8f, 0x90, 0x5142, 0x31cb, 0xbfa9, 0x1, 0x1);
        gbc.writeMem(0x328e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7b8f, gbc.sp());
        EXPECT(0x3290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0263
        gbc.setState(0x4eb2, 0x2123, 0x4a80, 0x9dee, 0xce8c, 0x28eb, 0x1, 0x1);
        gbc.writeMem(0x4eb2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2123, gbc.sp());
        EXPECT(0x4eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0264
        gbc.setState(0x696b, 0xe7c4, 0xb000, 0xe519, 0x3ad4, 0x98b, 0x1, 0x1);
        gbc.writeMem(0x696b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe7c4, gbc.sp());
        EXPECT(0x696d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0265
        gbc.setState(0xe757, 0xc4be, 0x4a30, 0x7638, 0xa383, 0xee3c, 0x0, 0x0);
        gbc.writeMem(0xe757, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0xe759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe757));
        EXPECT(0xdf, gbc.readMem(0xe758));
        // CB DF 0266
        gbc.setState(0xdfdc, 0xf93a, 0x8f70, 0xfccd, 0xaf3c, 0x84, 0x1, 0x0);
        gbc.writeMem(0xdfdc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf93a, gbc.sp());
        EXPECT(0xdfde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdc));
        EXPECT(0xdf, gbc.readMem(0xdfdd));
        // CB DF 0268
        gbc.setState(0x5eb8, 0x3709, 0x42b0, 0xedb6, 0xb622, 0x484a, 0x1, 0x1);
        gbc.writeMem(0x5eb8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3709, gbc.sp());
        EXPECT(0x5eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0269
        gbc.setState(0x6868, 0xd93, 0xae30, 0x5d74, 0x4b29, 0xa68b, 0x0, 0x1);
        gbc.writeMem(0x6868, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd93, gbc.sp());
        EXPECT(0x686a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 026A
        gbc.setState(0x8065, 0x40d4, 0x3cd0, 0xede4, 0x479e, 0xb926, 0x0, 0x1);
        gbc.writeMem(0x8065, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x40d4, gbc.sp());
        EXPECT(0x8067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8065));
        EXPECT(0xdf, gbc.readMem(0x8066));
        // CB DF 026B
        gbc.setState(0x32e, 0x50a, 0x4e70, 0x17a5, 0xef89, 0xd62, 0x0, 0x1);
        gbc.writeMem(0x32e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x50a, gbc.sp());
        EXPECT(0x330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 026C
        gbc.setState(0xa9e2, 0x5307, 0x9dd0, 0xfd7d, 0xfadd, 0x48fe, 0x1, 0x1);
        gbc.writeMem(0xa9e2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5307, gbc.sp());
        EXPECT(0xa9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e2));
        EXPECT(0xdf, gbc.readMem(0xa9e3));
        // CB DF 026D
        gbc.setState(0x6740, 0xd9ad, 0x140, 0x72b3, 0x7f26, 0x5d2b, 0x1, 0x1);
        gbc.writeMem(0x6740, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd9ad, gbc.sp());
        EXPECT(0x6742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 026E
        gbc.setState(0x4ee0, 0x5c15, 0x33a0, 0x4e0f, 0x44d3, 0xe41f, 0x0, 0x1);
        gbc.writeMem(0x4ee0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5c15, gbc.sp());
        EXPECT(0x4ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 026F
        gbc.setState(0x707f, 0x8292, 0xaef0, 0xebe0, 0xa4ff, 0xd087, 0x1, 0x1);
        gbc.writeMem(0x707f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8292, gbc.sp());
        EXPECT(0x7081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0270
        gbc.setState(0xdaf4, 0x264e, 0x1970, 0x86db, 0xe576, 0xbf, 0x1, 0x0);
        gbc.writeMem(0xdaf4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x264e, gbc.sp());
        EXPECT(0xdaf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf4));
        EXPECT(0xdf, gbc.readMem(0xdaf5));
        // CB DF 0271
        gbc.setState(0xcdf6, 0x6524, 0x1f70, 0x9fd5, 0xc22f, 0xeb0e, 0x1, 0x1);
        gbc.writeMem(0xcdf6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6524, gbc.sp());
        EXPECT(0xcdf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf6));
        EXPECT(0xdf, gbc.readMem(0xcdf7));
        // CB DF 0272
        gbc.setState(0x898a, 0x3910, 0x3d00, 0x3ec3, 0x7e15, 0xe56d, 0x0, 0x0);
        gbc.writeMem(0x898a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3910, gbc.sp());
        EXPECT(0x898c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898a));
        EXPECT(0xdf, gbc.readMem(0x898b));
        // CB DF 0273
        gbc.setState(0x9b0b, 0xddbf, 0x2410, 0x6dd3, 0x95a9, 0xb18e, 0x1, 0x1);
        gbc.writeMem(0x9b0b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xddbf, gbc.sp());
        EXPECT(0x9b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0b));
        EXPECT(0xdf, gbc.readMem(0x9b0c));
        // CB DF 0274
        gbc.setState(0xbe2c, 0x178c, 0xd730, 0xcaf4, 0x8f46, 0xf0fd, 0x1, 0x0);
        gbc.writeMem(0xbe2c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x178c, gbc.sp());
        EXPECT(0xbe2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2c));
        EXPECT(0xdf, gbc.readMem(0xbe2d));
        // CB DF 0275
        gbc.setState(0x3f66, 0xc977, 0x1950, 0x7e9f, 0x70fd, 0x2c2c, 0x1, 0x1);
        gbc.writeMem(0x3f66, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc977, gbc.sp());
        EXPECT(0x3f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0276
        gbc.setState(0x761e, 0x1ee6, 0xf20, 0xae96, 0x43e8, 0xd7f1, 0x1, 0x1);
        gbc.writeMem(0x761e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1ee6, gbc.sp());
        EXPECT(0x7620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0277
        gbc.setState(0x264f, 0x65a5, 0x2d00, 0x8608, 0x28f6, 0xad4f, 0x0, 0x1);
        gbc.writeMem(0x264f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x65a5, gbc.sp());
        EXPECT(0x2651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0278
        gbc.setState(0x9c81, 0x4635, 0x2880, 0x4f2e, 0x35f, 0xecb, 0x0, 0x0);
        gbc.writeMem(0x9c81, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4635, gbc.sp());
        EXPECT(0x9c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c81));
        EXPECT(0xdf, gbc.readMem(0x9c82));
        // CB DF 0279
        gbc.setState(0x8af7, 0xa090, 0xbcc0, 0x88ce, 0x31c2, 0x15bc, 0x0, 0x0);
        gbc.writeMem(0x8af7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa090, gbc.sp());
        EXPECT(0x8af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af7));
        EXPECT(0xdf, gbc.readMem(0x8af8));
        // CB DF 027A
        gbc.setState(0x6caf, 0x6f4a, 0xfa00, 0x6f7d, 0x2c40, 0x3d4e, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6f4a, gbc.sp());
        EXPECT(0x6cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 027B
        gbc.setState(0xce8, 0x5708, 0xb530, 0xb21b, 0x9e5a, 0x77d9, 0x0, 0x0);
        gbc.writeMem(0xce8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5708, gbc.sp());
        EXPECT(0xcea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 027C
        gbc.setState(0x883, 0xce2c, 0x4b50, 0x659a, 0xc95c, 0xe9a6, 0x0, 0x0);
        gbc.writeMem(0x883, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xce2c, gbc.sp());
        EXPECT(0x885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 027D
        gbc.setState(0xbd00, 0x378a, 0xe680, 0x3d8, 0x635f, 0x965a, 0x0, 0x1);
        gbc.writeMem(0xbd00, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x378a, gbc.sp());
        EXPECT(0xbd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd00));
        EXPECT(0xdf, gbc.readMem(0xbd01));
        // CB DF 027E
        gbc.setState(0xe600, 0x51a3, 0xae10, 0x16ce, 0x76d4, 0x2daf, 0x0, 0x0);
        gbc.writeMem(0xe600, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x51a3, gbc.sp());
        EXPECT(0xe602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe600));
        EXPECT(0xdf, gbc.readMem(0xe601));
        // CB DF 027F
        gbc.setState(0x38d5, 0x9607, 0x7900, 0xc239, 0x1890, 0xbfa0, 0x0, 0x0);
        gbc.writeMem(0x38d5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9607, gbc.sp());
        EXPECT(0x38d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0280
        gbc.setState(0x9d7e, 0xec8, 0x3a30, 0x17e9, 0x2b3e, 0xe467, 0x1, 0x1);
        gbc.writeMem(0x9d7e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xec8, gbc.sp());
        EXPECT(0x9d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7e));
        EXPECT(0xdf, gbc.readMem(0x9d7f));
        // CB DF 0281
        gbc.setState(0xbb8d, 0x76ec, 0x8250, 0xba57, 0xe041, 0x18ee, 0x1, 0x1);
        gbc.writeMem(0xbb8d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x76ec, gbc.sp());
        EXPECT(0xbb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb8d));
        EXPECT(0xdf, gbc.readMem(0xbb8e));
        // CB DF 0282
        gbc.setState(0x7cfc, 0x8942, 0x5c40, 0x1a22, 0x9a61, 0xbb6f, 0x0, 0x1);
        gbc.writeMem(0x7cfc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8942, gbc.sp());
        EXPECT(0x7cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0283
        gbc.setState(0x9274, 0xc607, 0x3970, 0xcde7, 0xf4d2, 0x95fd, 0x1, 0x1);
        gbc.writeMem(0x9274, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc607, gbc.sp());
        EXPECT(0x9276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9274));
        EXPECT(0xdf, gbc.readMem(0x9275));
        // CB DF 0284
        gbc.setState(0xbdc7, 0xda31, 0x6fa0, 0xb200, 0x94ef, 0x80e5, 0x1, 0x0);
        gbc.writeMem(0xbdc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xda31, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc7));
        EXPECT(0xdf, gbc.readMem(0xbdc8));
        // CB DF 0285
        gbc.setState(0x3671, 0x70a1, 0x3960, 0x36af, 0x640e, 0xdce1, 0x0, 0x0);
        gbc.writeMem(0x3671, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x70a1, gbc.sp());
        EXPECT(0x3673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0286
        gbc.setState(0xab23, 0x58e3, 0x2e40, 0xa3a2, 0x59c, 0x8e02, 0x1, 0x0);
        gbc.writeMem(0xab23, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x58e3, gbc.sp());
        EXPECT(0xab25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab23));
        EXPECT(0xdf, gbc.readMem(0xab24));
        // CB DF 0287
        gbc.setState(0x408e, 0xd84f, 0x4d40, 0x18e2, 0xc586, 0xb108, 0x0, 0x0);
        gbc.writeMem(0x408e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd84f, gbc.sp());
        EXPECT(0x4090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0288
        gbc.setState(0x6b23, 0x46c2, 0xdf30, 0x17b1, 0x39e7, 0x57ab, 0x1, 0x1);
        gbc.writeMem(0x6b23, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x46c2, gbc.sp());
        EXPECT(0x6b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0289
        gbc.setState(0xd519, 0xf737, 0x6190, 0x4b29, 0xc0fb, 0x7bfa, 0x0, 0x0);
        gbc.writeMem(0xd519, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf737, gbc.sp());
        EXPECT(0xd51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd519));
        EXPECT(0xdf, gbc.readMem(0xd51a));
        // CB DF 028A
        gbc.setState(0x6516, 0x6542, 0x7ab0, 0x5ece, 0x45ef, 0xc938, 0x1, 0x0);
        gbc.writeMem(0x6516, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6542, gbc.sp());
        EXPECT(0x6518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 028B
        gbc.setState(0x3886, 0x37c0, 0xbd90, 0x28df, 0x38f2, 0x1b8b, 0x0, 0x0);
        gbc.writeMem(0x3886, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x37c0, gbc.sp());
        EXPECT(0x3888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 028C
        gbc.setState(0x6818, 0x2275, 0x2ec0, 0x9b1c, 0xbe60, 0x7439, 0x0, 0x1);
        gbc.writeMem(0x6818, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2275, gbc.sp());
        EXPECT(0x681a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 028D
        gbc.setState(0xc54c, 0x5075, 0x9ac0, 0xb6ed, 0x983, 0xade3, 0x0, 0x0);
        gbc.writeMem(0xc54c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5075, gbc.sp());
        EXPECT(0xc54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54c));
        EXPECT(0xdf, gbc.readMem(0xc54d));
        // CB DF 028E
        gbc.setState(0x77e7, 0x6ed3, 0xeb00, 0xbadc, 0x64be, 0xb4c9, 0x0, 0x1);
        gbc.writeMem(0x77e7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6ed3, gbc.sp());
        EXPECT(0x77e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0290
        gbc.setState(0xc302, 0xfdc9, 0x89b0, 0xec9e, 0xb5c1, 0x66f0, 0x0, 0x0);
        gbc.writeMem(0xc302, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfdc9, gbc.sp());
        EXPECT(0xc304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc302));
        EXPECT(0xdf, gbc.readMem(0xc303));
        // CB DF 0292
        gbc.setState(0x537c, 0x527d, 0x98b0, 0x2c1d, 0xcd01, 0x62b0, 0x1, 0x1);
        gbc.writeMem(0x537c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x527d, gbc.sp());
        EXPECT(0x537e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0293
        gbc.setState(0x442f, 0xed0c, 0xc1a0, 0x7b8, 0x5a81, 0xf402, 0x1, 0x1);
        gbc.writeMem(0x442f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xed0c, gbc.sp());
        EXPECT(0x4431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0294
        gbc.setState(0x8a41, 0xaeec, 0x73e0, 0xf924, 0xe07c, 0x3b88, 0x0, 0x0);
        gbc.writeMem(0x8a41, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaeec, gbc.sp());
        EXPECT(0x8a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a41));
        EXPECT(0xdf, gbc.readMem(0x8a42));
        // CB DF 0295
        gbc.setState(0xe7b4, 0x4ef5, 0x26f0, 0xdff5, 0x4de, 0x335c, 0x0, 0x1);
        gbc.writeMem(0xe7b4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4ef5, gbc.sp());
        EXPECT(0xe7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b4));
        EXPECT(0xdf, gbc.readMem(0xe7b5));
        // CB DF 0296
        gbc.setState(0x30ff, 0xe56a, 0x5140, 0x4b6e, 0x6ea1, 0x9012, 0x0, 0x0);
        gbc.writeMem(0x30ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe56a, gbc.sp());
        EXPECT(0x3101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0298
        gbc.setState(0x9933, 0xd788, 0x4960, 0x5cd3, 0xb6d2, 0x4ab2, 0x0, 0x1);
        gbc.writeMem(0x9933, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd788, gbc.sp());
        EXPECT(0x9935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9933));
        EXPECT(0xdf, gbc.readMem(0x9934));
        // CB DF 0299
        gbc.setState(0x6c5d, 0xb394, 0x3030, 0x328b, 0x3917, 0x1e8c, 0x1, 0x1);
        gbc.writeMem(0x6c5d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb394, gbc.sp());
        EXPECT(0x6c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 029B
        gbc.setState(0x563b, 0x1a81, 0x8760, 0x3e57, 0x7810, 0x79e4, 0x0, 0x0);
        gbc.writeMem(0x563b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1a81, gbc.sp());
        EXPECT(0x563d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 029C
        gbc.setState(0x7f63, 0x4e87, 0x8e20, 0xa562, 0xfaef, 0x7594, 0x1, 0x1);
        gbc.writeMem(0x7f63, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4e87, gbc.sp());
        EXPECT(0x7f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 029D
        gbc.setState(0xb38c, 0x5345, 0xe870, 0xd46f, 0x9c35, 0xce5b, 0x1, 0x1);
        gbc.writeMem(0xb38c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5345, gbc.sp());
        EXPECT(0xb38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38c));
        EXPECT(0xdf, gbc.readMem(0xb38d));
        // CB DF 029E
        gbc.setState(0x1d15, 0x6a5c, 0x48e0, 0xa7a6, 0x1f78, 0xc76a, 0x0, 0x0);
        gbc.writeMem(0x1d15, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6a5c, gbc.sp());
        EXPECT(0x1d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 029F
        gbc.setState(0x64cd, 0x87c7, 0x62f0, 0xc89f, 0xfbd9, 0xb1c0, 0x0, 0x0);
        gbc.writeMem(0x64cd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x87c7, gbc.sp());
        EXPECT(0x64cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02A0
        gbc.setState(0xa8c, 0x604d, 0x1140, 0x4766, 0x8dd2, 0xdf49, 0x0, 0x1);
        gbc.writeMem(0xa8c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x604d, gbc.sp());
        EXPECT(0xa8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02A1
        gbc.setState(0xc862, 0xc84c, 0x6b0, 0x7962, 0x2059, 0x1fd9, 0x1, 0x0);
        gbc.writeMem(0xc862, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc84c, gbc.sp());
        EXPECT(0xc864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc862));
        EXPECT(0xdf, gbc.readMem(0xc863));
        // CB DF 02A2
        gbc.setState(0x4765, 0x5ee7, 0x63e0, 0x8626, 0xa2f8, 0x2def, 0x0, 0x0);
        gbc.writeMem(0x4765, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5ee7, gbc.sp());
        EXPECT(0x4767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02A3
        gbc.setState(0xb745, 0xf217, 0xf2e0, 0x6be3, 0x1582, 0x458f, 0x1, 0x1);
        gbc.writeMem(0xb745, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf217, gbc.sp());
        EXPECT(0xb747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb745));
        EXPECT(0xdf, gbc.readMem(0xb746));
        // CB DF 02A4
        gbc.setState(0xadf2, 0x8631, 0xef70, 0xf171, 0xa6ae, 0x9440, 0x0, 0x1);
        gbc.writeMem(0xadf2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8631, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf2));
        EXPECT(0xdf, gbc.readMem(0xadf3));
        // CB DF 02A5
        gbc.setState(0x8be6, 0xc2ec, 0xdb40, 0xa77d, 0xd5fb, 0xd6b, 0x1, 0x0);
        gbc.writeMem(0x8be6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc2ec, gbc.sp());
        EXPECT(0x8be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be6));
        EXPECT(0xdf, gbc.readMem(0x8be7));
        // CB DF 02A6
        gbc.setState(0xa583, 0x2778, 0x2360, 0x6661, 0xfea0, 0xa925, 0x1, 0x0);
        gbc.writeMem(0xa583, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2778, gbc.sp());
        EXPECT(0xa585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa583));
        EXPECT(0xdf, gbc.readMem(0xa584));
        // CB DF 02A7
        gbc.setState(0xe026, 0x16ae, 0xea10, 0x470f, 0x455e, 0x8195, 0x1, 0x0);
        gbc.writeMem(0xe026, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x16ae, gbc.sp());
        EXPECT(0xe028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe026));
        EXPECT(0xdf, gbc.readMem(0xe027));
        // CB DF 02A8
        gbc.setState(0x537b, 0xf271, 0xa040, 0x93e3, 0xd99c, 0xf7c, 0x1, 0x1);
        gbc.writeMem(0x537b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf271, gbc.sp());
        EXPECT(0x537d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02A9
        gbc.setState(0xa617, 0xf99f, 0x7db0, 0x6064, 0xce9a, 0x573c, 0x0, 0x0);
        gbc.writeMem(0xa617, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf99f, gbc.sp());
        EXPECT(0xa619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa617));
        EXPECT(0xdf, gbc.readMem(0xa618));
        // CB DF 02AA
        gbc.setState(0x9075, 0xdf0a, 0xd310, 0x437a, 0x158e, 0xfc74, 0x0, 0x0);
        gbc.writeMem(0x9075, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdf0a, gbc.sp());
        EXPECT(0x9077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9075));
        EXPECT(0xdf, gbc.readMem(0x9076));
        // CB DF 02AB
        gbc.setState(0x3d99, 0xe9f4, 0x7f80, 0x73ed, 0x9a9, 0xfec8, 0x1, 0x0);
        gbc.writeMem(0x3d99, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe9f4, gbc.sp());
        EXPECT(0x3d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02AC
        gbc.setState(0x64ff, 0xa47f, 0x3b60, 0xec2b, 0x1ac, 0x29d0, 0x1, 0x1);
        gbc.writeMem(0x64ff, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa47f, gbc.sp());
        EXPECT(0x6501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02AD
        gbc.setState(0x56b7, 0xa21f, 0x1920, 0x1ed1, 0x8279, 0x99a0, 0x1, 0x0);
        gbc.writeMem(0x56b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa21f, gbc.sp());
        EXPECT(0x56b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02AE
        gbc.setState(0x758, 0x43b5, 0x26e0, 0x6efe, 0x37c9, 0xe7bd, 0x1, 0x1);
        gbc.writeMem(0x758, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x43b5, gbc.sp());
        EXPECT(0x75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02AF
        gbc.setState(0x89a7, 0xda9a, 0x70d0, 0x4187, 0x8eff, 0xcdc3, 0x0, 0x0);
        gbc.writeMem(0x89a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xda9a, gbc.sp());
        EXPECT(0x89a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a7));
        EXPECT(0xdf, gbc.readMem(0x89a8));
        // CB DF 02B0
        gbc.setState(0xa47a, 0x7696, 0xe960, 0x2413, 0x432c, 0x3913, 0x1, 0x0);
        gbc.writeMem(0xa47a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7696, gbc.sp());
        EXPECT(0xa47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47a));
        EXPECT(0xdf, gbc.readMem(0xa47b));
        // CB DF 02B1
        gbc.setState(0x5b35, 0xd50f, 0xb0a0, 0x5782, 0xa081, 0xda68, 0x1, 0x0);
        gbc.writeMem(0x5b35, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd50f, gbc.sp());
        EXPECT(0x5b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02B2
        gbc.setState(0xb74f, 0x6bfd, 0xd8d0, 0xae49, 0xcfbe, 0xf70b, 0x1, 0x0);
        gbc.writeMem(0xb74f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6bfd, gbc.sp());
        EXPECT(0xb751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74f));
        EXPECT(0xdf, gbc.readMem(0xb750));
        // CB DF 02B3
        gbc.setState(0xd4b2, 0x5e28, 0x1e00, 0x3036, 0xee11, 0x2014, 0x1, 0x0);
        gbc.writeMem(0xd4b2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5e28, gbc.sp());
        EXPECT(0xd4b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b2));
        EXPECT(0xdf, gbc.readMem(0xd4b3));
        // CB DF 02B4
        gbc.setState(0x3d08, 0x71c7, 0xeb40, 0x5fef, 0xaa2d, 0x1839, 0x1, 0x0);
        gbc.writeMem(0x3d08, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x71c7, gbc.sp());
        EXPECT(0x3d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02B5
        gbc.setState(0x2bf7, 0x3564, 0x6110, 0xa446, 0x1ce3, 0xa944, 0x1, 0x0);
        gbc.writeMem(0x2bf7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3564, gbc.sp());
        EXPECT(0x2bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02B6
        gbc.setState(0x632c, 0xec4f, 0x1730, 0x58d6, 0x904e, 0x8d08, 0x0, 0x1);
        gbc.writeMem(0x632c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xec4f, gbc.sp());
        EXPECT(0x632e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02B7
        gbc.setState(0xc56c, 0xa81a, 0x1530, 0x7465, 0x3b30, 0xdaaf, 0x1, 0x1);
        gbc.writeMem(0xc56c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa81a, gbc.sp());
        EXPECT(0xc56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56c));
        EXPECT(0xdf, gbc.readMem(0xc56d));
        // CB DF 02B8
        gbc.setState(0xe4fa, 0xb11c, 0x6030, 0xd710, 0x5baa, 0x602, 0x0, 0x0);
        gbc.writeMem(0xe4fa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb11c, gbc.sp());
        EXPECT(0xe4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fa));
        EXPECT(0xdf, gbc.readMem(0xe4fb));
        // CB DF 02B9
        gbc.setState(0x549c, 0xed9e, 0xa020, 0x988c, 0xd203, 0x867d, 0x1, 0x0);
        gbc.writeMem(0x549c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0x549e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02BA
        gbc.setState(0xa7dd, 0xe716, 0x9c10, 0xd905, 0x9e55, 0x21f2, 0x1, 0x0);
        gbc.writeMem(0xa7dd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe716, gbc.sp());
        EXPECT(0xa7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7dd));
        EXPECT(0xdf, gbc.readMem(0xa7de));
        // CB DF 02BB
        gbc.setState(0x3d19, 0x79d5, 0xb880, 0x7b95, 0xc5b5, 0xc4d4, 0x1, 0x0);
        gbc.writeMem(0x3d19, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x79d5, gbc.sp());
        EXPECT(0x3d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02BC
        gbc.setState(0x4e80, 0x3a4d, 0x7240, 0xbca7, 0xcded, 0x27a5, 0x1, 0x0);
        gbc.writeMem(0x4e80, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3a4d, gbc.sp());
        EXPECT(0x4e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02BE
        gbc.setState(0x27ad, 0xd4e5, 0xbe20, 0xbdc1, 0xe73f, 0x985, 0x0, 0x1);
        gbc.writeMem(0x27ad, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd4e5, gbc.sp());
        EXPECT(0x27af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02C0
        gbc.setState(0x61fd, 0x8a6d, 0xcb30, 0x9a85, 0xb068, 0x4ea3, 0x1, 0x1);
        gbc.writeMem(0x61fd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8a6d, gbc.sp());
        EXPECT(0x61ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02C1
        gbc.setState(0x61ea, 0xd798, 0x4f0, 0xca24, 0x69a5, 0xd5fe, 0x1, 0x1);
        gbc.writeMem(0x61ea, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd798, gbc.sp());
        EXPECT(0x61ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02C2
        gbc.setState(0x8868, 0xdffb, 0xcc70, 0x982f, 0x523e, 0x1dca, 0x0, 0x0);
        gbc.writeMem(0x8868, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdffb, gbc.sp());
        EXPECT(0x886a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8868));
        EXPECT(0xdf, gbc.readMem(0x8869));
        // CB DF 02C4
        gbc.setState(0x5abc, 0xd919, 0xa960, 0x479d, 0xffdd, 0x2740, 0x0, 0x0);
        gbc.writeMem(0x5abc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd919, gbc.sp());
        EXPECT(0x5abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02C5
        gbc.setState(0x7edf, 0x841d, 0x3190, 0xffc2, 0xb1c9, 0xf7fe, 0x1, 0x0);
        gbc.writeMem(0x7edf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x841d, gbc.sp());
        EXPECT(0x7ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02C6
        gbc.setState(0x79c2, 0x2602, 0x3d70, 0x2b75, 0x4867, 0xb091, 0x1, 0x0);
        gbc.writeMem(0x79c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2602, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02C8
        gbc.setState(0x911, 0xf528, 0xb440, 0xe820, 0x4721, 0x8393, 0x1, 0x0);
        gbc.writeMem(0x911, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf528, gbc.sp());
        EXPECT(0x913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02C9
        gbc.setState(0x4f7f, 0x725, 0x5ce0, 0xc377, 0x9d72, 0x6e3b, 0x1, 0x1);
        gbc.writeMem(0x4f7f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x725, gbc.sp());
        EXPECT(0x4f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02CA
        gbc.setState(0x69a7, 0xaa41, 0xce10, 0xa28b, 0x1c52, 0xfd83, 0x1, 0x0);
        gbc.writeMem(0x69a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaa41, gbc.sp());
        EXPECT(0x69a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02CC
        gbc.setState(0x5d82, 0x1175, 0x1320, 0x8915, 0xc2eb, 0x7bac, 0x1, 0x0);
        gbc.writeMem(0x5d82, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1175, gbc.sp());
        EXPECT(0x5d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02CD
        gbc.setState(0xe5e9, 0x8521, 0x4b90, 0xcd49, 0xa70f, 0xc324, 0x0, 0x0);
        gbc.writeMem(0xe5e9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8521, gbc.sp());
        EXPECT(0xe5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e9));
        EXPECT(0xdf, gbc.readMem(0xe5ea));
        // CB DF 02CE
        gbc.setState(0x26f5, 0x2365, 0x3de0, 0x9ce0, 0xa13f, 0xece4, 0x0, 0x1);
        gbc.writeMem(0x26f5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2365, gbc.sp());
        EXPECT(0x26f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02CF
        gbc.setState(0x1678, 0xdc1a, 0xab0, 0xf68d, 0x4618, 0xe2ce, 0x0, 0x1);
        gbc.writeMem(0x1678, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdc1a, gbc.sp());
        EXPECT(0x167a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02D0
        gbc.setState(0x5461, 0x7546, 0x2d00, 0xab4d, 0x9cbd, 0xd7cf, 0x0, 0x0);
        gbc.writeMem(0x5461, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0x5463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02D1
        gbc.setState(0xdf79, 0xa5f1, 0xd30, 0x42c4, 0x86cf, 0x3c86, 0x0, 0x1);
        gbc.writeMem(0xdf79, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa5f1, gbc.sp());
        EXPECT(0xdf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf79));
        EXPECT(0xdf, gbc.readMem(0xdf7a));
        // CB DF 02D2
        gbc.setState(0x9f8d, 0x4fe, 0xd730, 0xc06f, 0x6439, 0x14d4, 0x1, 0x1);
        gbc.writeMem(0x9f8d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4fe, gbc.sp());
        EXPECT(0x9f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8d));
        EXPECT(0xdf, gbc.readMem(0x9f8e));
        // CB DF 02D3
        gbc.setState(0xa3d, 0x1951, 0x2740, 0x23dd, 0xf3bf, 0xf480, 0x0, 0x0);
        gbc.writeMem(0xa3d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1951, gbc.sp());
        EXPECT(0xa3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02D4
        gbc.setState(0x9348, 0xa437, 0x5680, 0x9d6f, 0xc646, 0x8a12, 0x0, 0x0);
        gbc.writeMem(0x9348, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0x934a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9348));
        EXPECT(0xdf, gbc.readMem(0x9349));
        // CB DF 02D5
        gbc.setState(0x4578, 0x85bd, 0x93c0, 0x67d7, 0xab47, 0x10ba, 0x1, 0x1);
        gbc.writeMem(0x4578, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x85bd, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02D6
        gbc.setState(0x3263, 0xf14e, 0xe900, 0x831, 0x9c, 0x2754, 0x1, 0x0);
        gbc.writeMem(0x3263, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf14e, gbc.sp());
        EXPECT(0x3265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02D7
        gbc.setState(0xd065, 0xfb4b, 0x11e0, 0x91fb, 0x4e1e, 0x4cd1, 0x0, 0x1);
        gbc.writeMem(0xd065, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfb4b, gbc.sp());
        EXPECT(0xd067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd065));
        EXPECT(0xdf, gbc.readMem(0xd066));
        // CB DF 02DA
        gbc.setState(0xe370, 0xf048, 0x54c0, 0x5539, 0x1dbc, 0xcfa1, 0x1, 0x1);
        gbc.writeMem(0xe370, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf048, gbc.sp());
        EXPECT(0xe372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe370));
        EXPECT(0xdf, gbc.readMem(0xe371));
        // CB DF 02DB
        gbc.setState(0x6edf, 0xc4db, 0xcbc0, 0x76e4, 0xf8c2, 0xbc2f, 0x1, 0x1);
        gbc.writeMem(0x6edf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc4db, gbc.sp());
        EXPECT(0x6ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02DC
        gbc.setState(0xee2b, 0x49e8, 0xcc90, 0x8490, 0x190, 0xbc91, 0x0, 0x1);
        gbc.writeMem(0xee2b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x49e8, gbc.sp());
        EXPECT(0xee2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2b));
        EXPECT(0xdf, gbc.readMem(0xee2c));
        // CB DF 02DD
        gbc.setState(0x6b8f, 0xbab3, 0x3e70, 0xf222, 0xbdc3, 0xd077, 0x0, 0x1);
        gbc.writeMem(0x6b8f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbab3, gbc.sp());
        EXPECT(0x6b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02DF
        gbc.setState(0xdf23, 0x2bb2, 0xcec0, 0xd5db, 0x7f88, 0xe1c4, 0x1, 0x1);
        gbc.writeMem(0xdf23, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2bb2, gbc.sp());
        EXPECT(0xdf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf23));
        EXPECT(0xdf, gbc.readMem(0xdf24));
        // CB DF 02E1
        gbc.setState(0xa674, 0xc9a7, 0x80b0, 0x4ca8, 0x9018, 0x1a19, 0x0, 0x1);
        gbc.writeMem(0xa674, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc9a7, gbc.sp());
        EXPECT(0xa676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa674));
        EXPECT(0xdf, gbc.readMem(0xa675));
        // CB DF 02E2
        gbc.setState(0x2112, 0x300e, 0x8bc0, 0x49c8, 0x776a, 0x8711, 0x0, 0x1);
        gbc.writeMem(0x2112, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x300e, gbc.sp());
        EXPECT(0x2114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02E3
        gbc.setState(0x449c, 0x12f1, 0x4060, 0xd3e2, 0xf9fe, 0x36de, 0x1, 0x0);
        gbc.writeMem(0x449c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x12f1, gbc.sp());
        EXPECT(0x449e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02E4
        gbc.setState(0x6ead, 0x5bbb, 0xddf0, 0xbd1c, 0xa594, 0xd491, 0x0, 0x1);
        gbc.writeMem(0x6ead, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5bbb, gbc.sp());
        EXPECT(0x6eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02E5
        gbc.setState(0xc5ba, 0x96f6, 0x7a50, 0x4724, 0xa864, 0xf6ac, 0x1, 0x1);
        gbc.writeMem(0xc5ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x96f6, gbc.sp());
        EXPECT(0xc5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ba));
        EXPECT(0xdf, gbc.readMem(0xc5bb));
        // CB DF 02E6
        gbc.setState(0x15cb, 0x4e76, 0x2b10, 0x8b49, 0xac57, 0xe39f, 0x1, 0x0);
        gbc.writeMem(0x15cb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4e76, gbc.sp());
        EXPECT(0x15cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02E7
        gbc.setState(0x9234, 0xe08e, 0xa6d0, 0x96c3, 0xb67a, 0xd22c, 0x0, 0x0);
        gbc.writeMem(0x9234, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe08e, gbc.sp());
        EXPECT(0x9236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9234));
        EXPECT(0xdf, gbc.readMem(0x9235));
        // CB DF 02E8
        gbc.setState(0x103d, 0x9f4c, 0x4960, 0xa040, 0x2d40, 0x1e4c, 0x1, 0x1);
        gbc.writeMem(0x103d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9f4c, gbc.sp());
        EXPECT(0x103f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02E9
        gbc.setState(0x2276, 0xf076, 0x89e0, 0xc285, 0xf279, 0x194d, 0x0, 0x1);
        gbc.writeMem(0x2276, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf076, gbc.sp());
        EXPECT(0x2278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 02EA
        gbc.setState(0xdee7, 0x90ac, 0x1af0, 0x36f2, 0x4de3, 0x58ca, 0x1, 0x1);
        gbc.writeMem(0xdee7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x90ac, gbc.sp());
        EXPECT(0xdee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee7));
        EXPECT(0xdf, gbc.readMem(0xdee8));
        // CB DF 02EB
        gbc.setState(0x548d, 0x4e17, 0xb590, 0xbcef, 0xe34f, 0xa18e, 0x1, 0x1);
        gbc.writeMem(0x548d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4e17, gbc.sp());
        EXPECT(0x548f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02EC
        gbc.setState(0xc53c, 0x5100, 0x1910, 0x3473, 0x8782, 0x6b8b, 0x1, 0x1);
        gbc.writeMem(0xc53c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5100, gbc.sp());
        EXPECT(0xc53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53c));
        EXPECT(0xdf, gbc.readMem(0xc53d));
        // CB DF 02ED
        gbc.setState(0xe3c2, 0xd900, 0xe7b0, 0x831f, 0xaa22, 0x7d44, 0x1, 0x0);
        gbc.writeMem(0xe3c2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd900, gbc.sp());
        EXPECT(0xe3c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c2));
        EXPECT(0xdf, gbc.readMem(0xe3c3));
        // CB DF 02EE
        gbc.setState(0xd922, 0xfde9, 0x9f00, 0xcd39, 0x476b, 0xcb5a, 0x0, 0x1);
        gbc.writeMem(0xd922, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfde9, gbc.sp());
        EXPECT(0xd924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd922));
        EXPECT(0xdf, gbc.readMem(0xd923));
        // CB DF 02EF
        gbc.setState(0x82ac, 0x5d59, 0x3e70, 0xe68f, 0xc473, 0x801f, 0x0, 0x0);
        gbc.writeMem(0x82ac, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5d59, gbc.sp());
        EXPECT(0x82ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ac));
        EXPECT(0xdf, gbc.readMem(0x82ad));
        // CB DF 02F0
        gbc.setState(0xc482, 0x4639, 0xe6a0, 0x3076, 0xac19, 0x2a3f, 0x1, 0x1);
        gbc.writeMem(0xc482, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4639, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc482));
        EXPECT(0xdf, gbc.readMem(0xc483));
        // CB DF 02F1
        gbc.setState(0x6ee1, 0xb3cc, 0x39f0, 0xeecb, 0x7e06, 0xca4f, 0x1, 0x1);
        gbc.writeMem(0x6ee1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb3cc, gbc.sp());
        EXPECT(0x6ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02F2
        gbc.setState(0xe9f7, 0x6c3f, 0xc4f0, 0xfda0, 0x5f16, 0x8e70, 0x1, 0x0);
        gbc.writeMem(0xe9f7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6c3f, gbc.sp());
        EXPECT(0xe9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f7));
        EXPECT(0xdf, gbc.readMem(0xe9f8));
        // CB DF 02F3
        gbc.setState(0x8d0b, 0x1d4f, 0x3600, 0x9479, 0xec1e, 0xb233, 0x1, 0x1);
        gbc.writeMem(0x8d0b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1d4f, gbc.sp());
        EXPECT(0x8d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0b));
        EXPECT(0xdf, gbc.readMem(0x8d0c));
        // CB DF 02F4
        gbc.setState(0xea8e, 0xc974, 0xf10, 0xfa0e, 0x38fa, 0x7b54, 0x0, 0x1);
        gbc.writeMem(0xea8e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc974, gbc.sp());
        EXPECT(0xea90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8e));
        EXPECT(0xdf, gbc.readMem(0xea8f));
        // CB DF 02F5
        gbc.setState(0xea7a, 0xdf90, 0x9930, 0x3d41, 0xe49a, 0x35ab, 0x1, 0x0);
        gbc.writeMem(0xea7a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdf90, gbc.sp());
        EXPECT(0xea7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7a));
        EXPECT(0xdf, gbc.readMem(0xea7b));
        // CB DF 02F6
        gbc.setState(0x3f03, 0x7280, 0xe30, 0xed8d, 0xa4d0, 0x1038, 0x1, 0x1);
        gbc.writeMem(0x3f03, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7280, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02F7
        gbc.setState(0xe73c, 0xa04a, 0x20d0, 0x9e65, 0xb00c, 0xa855, 0x1, 0x1);
        gbc.writeMem(0xe73c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa04a, gbc.sp());
        EXPECT(0xe73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73c));
        EXPECT(0xdf, gbc.readMem(0xe73d));
        // CB DF 02F8
        gbc.setState(0x4b16, 0x149e, 0x7b30, 0x4dcc, 0xf389, 0xfc4a, 0x0, 0x1);
        gbc.writeMem(0x4b16, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x149e, gbc.sp());
        EXPECT(0x4b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02F9
        gbc.setState(0xca67, 0xe9db, 0x6d00, 0xa3ac, 0x7da9, 0xfe0b, 0x0, 0x1);
        gbc.writeMem(0xca67, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe9db, gbc.sp());
        EXPECT(0xca69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca67));
        EXPECT(0xdf, gbc.readMem(0xca68));
        // CB DF 02FA
        gbc.setState(0x8b12, 0x248b, 0xc60, 0xfa0d, 0xf4e2, 0xcdc3, 0x1, 0x0);
        gbc.writeMem(0x8b12, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0x8b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b12));
        EXPECT(0xdf, gbc.readMem(0x8b13));
        // CB DF 02FB
        gbc.setState(0x80cb, 0x9098, 0x8060, 0x998e, 0xdb4f, 0x51c1, 0x0, 0x1);
        gbc.writeMem(0x80cb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9098, gbc.sp());
        EXPECT(0x80cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cb));
        EXPECT(0xdf, gbc.readMem(0x80cc));
        // CB DF 02FC
        gbc.setState(0xded, 0xcca9, 0xe550, 0xc3b, 0x86da, 0x5eb4, 0x0, 0x1);
        gbc.writeMem(0xded, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcca9, gbc.sp());
        EXPECT(0xdef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02FD
        gbc.setState(0x1b1c, 0x35cd, 0x57f0, 0xcf16, 0x9c2d, 0xd72c, 0x0, 0x1);
        gbc.writeMem(0x1b1c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x35cd, gbc.sp());
        EXPECT(0x1b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 02FE
        gbc.setState(0x92cf, 0x1756, 0xcf0, 0x2891, 0xe9ac, 0x8425, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1756, gbc.sp());
        EXPECT(0x92d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92cf));
        EXPECT(0xdf, gbc.readMem(0x92d0));
        // CB DF 02FF
        gbc.setState(0xaf70, 0x6ae0, 0xf830, 0x15d5, 0x9cf0, 0x422a, 0x0, 0x1);
        gbc.writeMem(0xaf70, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6ae0, gbc.sp());
        EXPECT(0xaf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf70));
        EXPECT(0xdf, gbc.readMem(0xaf71));
        // CB DF 0300
        gbc.setState(0xd817, 0x2b92, 0x5ff0, 0x46cc, 0xee23, 0xfb60, 0x0, 0x1);
        gbc.writeMem(0xd817, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2b92, gbc.sp());
        EXPECT(0xd819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd817));
        EXPECT(0xdf, gbc.readMem(0xd818));
        // CB DF 0301
        gbc.setState(0x62f6, 0x3af2, 0x4b40, 0xf9be, 0x60c8, 0x67dc, 0x1, 0x0);
        gbc.writeMem(0x62f6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3af2, gbc.sp());
        EXPECT(0x62f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0302
        gbc.setState(0x4033, 0xd8f8, 0xff10, 0x1986, 0xd0d3, 0xd92e, 0x1, 0x0);
        gbc.writeMem(0x4033, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd8f8, gbc.sp());
        EXPECT(0x4035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0303
        gbc.setState(0x357a, 0x881f, 0x3710, 0x826c, 0xf668, 0xdcc2, 0x0, 0x0);
        gbc.writeMem(0x357a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x881f, gbc.sp());
        EXPECT(0x357c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0304
        gbc.setState(0x2694, 0xfbbf, 0x9020, 0xccb0, 0x7e16, 0x223e, 0x0, 0x0);
        gbc.writeMem(0x2694, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfbbf, gbc.sp());
        EXPECT(0x2696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0305
        gbc.setState(0x90db, 0x2492, 0xb160, 0x74b, 0x5a54, 0x9fde, 0x0, 0x0);
        gbc.writeMem(0x90db, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2492, gbc.sp());
        EXPECT(0x90dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90db));
        EXPECT(0xdf, gbc.readMem(0x90dc));
        // CB DF 0306
        gbc.setState(0x2fa6, 0x8db7, 0x6290, 0x8abf, 0xe65d, 0x5b61, 0x1, 0x0);
        gbc.writeMem(0x2fa6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8db7, gbc.sp());
        EXPECT(0x2fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0307
        gbc.setState(0xe1d8, 0xf635, 0xe260, 0x8933, 0x6594, 0x2b02, 0x1, 0x0);
        gbc.writeMem(0xe1d8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf635, gbc.sp());
        EXPECT(0xe1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d8));
        EXPECT(0xdf, gbc.readMem(0xe1d9));
        // CB DF 0308
        gbc.setState(0x1ff9, 0x18a9, 0x2730, 0x7772, 0x2d5a, 0xd9e9, 0x1, 0x0);
        gbc.writeMem(0x1ff9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x18a9, gbc.sp());
        EXPECT(0x1ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0309
        gbc.setState(0xb77a, 0x563, 0x6a90, 0x249f, 0x55df, 0xff0, 0x0, 0x1);
        gbc.writeMem(0xb77a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x563, gbc.sp());
        EXPECT(0xb77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77a));
        EXPECT(0xdf, gbc.readMem(0xb77b));
        // CB DF 030A
        gbc.setState(0x26a5, 0x1111, 0xde30, 0xb924, 0x3300, 0x631c, 0x1, 0x1);
        gbc.writeMem(0x26a5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1111, gbc.sp());
        EXPECT(0x26a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 030B
        gbc.setState(0x993a, 0x42a2, 0x9a30, 0x7d51, 0xa59a, 0x927f, 0x1, 0x0);
        gbc.writeMem(0x993a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x42a2, gbc.sp());
        EXPECT(0x993c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993a));
        EXPECT(0xdf, gbc.readMem(0x993b));
        // CB DF 030C
        gbc.setState(0xb936, 0x6bce, 0xf360, 0x1ba6, 0x3114, 0x193b, 0x1, 0x1);
        gbc.writeMem(0xb936, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6bce, gbc.sp());
        EXPECT(0xb938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb936));
        EXPECT(0xdf, gbc.readMem(0xb937));
        // CB DF 030D
        gbc.setState(0x58e1, 0x6a16, 0x5290, 0xb43b, 0xe3ee, 0xf3fe, 0x0, 0x1);
        gbc.writeMem(0x58e1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6a16, gbc.sp());
        EXPECT(0x58e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 030E
        gbc.setState(0x8007, 0x36dd, 0xc500, 0x4028, 0x2923, 0xfe2f, 0x0, 0x0);
        gbc.writeMem(0x8007, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x36dd, gbc.sp());
        EXPECT(0x8009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8007));
        EXPECT(0xdf, gbc.readMem(0x8008));
        // CB DF 030F
        gbc.setState(0x5fd6, 0xcd52, 0x45f0, 0x7bdd, 0xe0cb, 0x62ce, 0x0, 0x0);
        gbc.writeMem(0x5fd6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcd52, gbc.sp());
        EXPECT(0x5fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0310
        gbc.setState(0xaf7, 0xa2e9, 0xaf0, 0xa73a, 0x183, 0xf473, 0x0, 0x1);
        gbc.writeMem(0xaf7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa2e9, gbc.sp());
        EXPECT(0xaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0311
        gbc.setState(0x878e, 0x25d7, 0xe670, 0xeff7, 0x3e57, 0xeb76, 0x0, 0x0);
        gbc.writeMem(0x878e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x25d7, gbc.sp());
        EXPECT(0x8790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878e));
        EXPECT(0xdf, gbc.readMem(0x878f));
        // CB DF 0312
        gbc.setState(0x65e, 0xece, 0x2630, 0x5231, 0xf1cc, 0x91bd, 0x1, 0x1);
        gbc.writeMem(0x65e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xece, gbc.sp());
        EXPECT(0x660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0313
        gbc.setState(0x57cc, 0x3705, 0x84d0, 0x30d4, 0xc0c1, 0x45ee, 0x1, 0x0);
        gbc.writeMem(0x57cc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3705, gbc.sp());
        EXPECT(0x57ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0314
        gbc.setState(0xa74d, 0x71bc, 0x3f10, 0xbb28, 0x67c2, 0x3d9c, 0x1, 0x1);
        gbc.writeMem(0xa74d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x71bc, gbc.sp());
        EXPECT(0xa74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74d));
        EXPECT(0xdf, gbc.readMem(0xa74e));
        // CB DF 0315
        gbc.setState(0xbcfe, 0x470c, 0x30f0, 0x8f18, 0xa3a0, 0x473e, 0x0, 0x0);
        gbc.writeMem(0xbcfe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x470c, gbc.sp());
        EXPECT(0xbd00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcfe));
        EXPECT(0xdf, gbc.readMem(0xbcff));
        // CB DF 0316
        gbc.setState(0xaef2, 0x3b43, 0xc2e0, 0xf500, 0x9ce3, 0xe935, 0x1, 0x0);
        gbc.writeMem(0xaef2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3b43, gbc.sp());
        EXPECT(0xaef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef2));
        EXPECT(0xdf, gbc.readMem(0xaef3));
        // CB DF 0317
        gbc.setState(0x5de5, 0x7452, 0x8ec0, 0x3b39, 0x4012, 0xf295, 0x1, 0x1);
        gbc.writeMem(0x5de5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7452, gbc.sp());
        EXPECT(0x5de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0318
        gbc.setState(0x3c50, 0x3bb7, 0xfb80, 0x5efd, 0x3268, 0x767a, 0x1, 0x0);
        gbc.writeMem(0x3c50, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3bb7, gbc.sp());
        EXPECT(0x3c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0319
        gbc.setState(0x48f4, 0x5687, 0xb920, 0xf725, 0x664d, 0x9152, 0x1, 0x0);
        gbc.writeMem(0x48f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5687, gbc.sp());
        EXPECT(0x48f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 031A
        gbc.setState(0x13d1, 0xfbbe, 0x1e50, 0x5213, 0x5efd, 0x8978, 0x0, 0x0);
        gbc.writeMem(0x13d1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfbbe, gbc.sp());
        EXPECT(0x13d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 031B
        gbc.setState(0xb219, 0x235, 0x8b20, 0x45b4, 0x3fe3, 0x35ca, 0x1, 0x1);
        gbc.writeMem(0xb219, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x235, gbc.sp());
        EXPECT(0xb21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb219));
        EXPECT(0xdf, gbc.readMem(0xb21a));
        // CB DF 031C
        gbc.setState(0xcc64, 0x2376, 0x5dd0, 0x8a67, 0x5d70, 0xe5d2, 0x1, 0x0);
        gbc.writeMem(0xcc64, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2376, gbc.sp());
        EXPECT(0xcc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc64));
        EXPECT(0xdf, gbc.readMem(0xcc65));
        // CB DF 031D
        gbc.setState(0x2e3d, 0x332b, 0x5f0, 0xa4fb, 0x5dbc, 0x29b1, 0x1, 0x0);
        gbc.writeMem(0x2e3d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0x2e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 031E
        gbc.setState(0x230d, 0x1c1, 0xfa00, 0x6328, 0x9398, 0xb745, 0x0, 0x0);
        gbc.writeMem(0x230d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1c1, gbc.sp());
        EXPECT(0x230f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 031F
        gbc.setState(0xe5d7, 0xb5cb, 0x4a0, 0x20f7, 0x1a01, 0x707e, 0x0, 0x0);
        gbc.writeMem(0xe5d7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb5cb, gbc.sp());
        EXPECT(0xe5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d7));
        EXPECT(0xdf, gbc.readMem(0xe5d8));
        // CB DF 0320
        gbc.setState(0x92e3, 0xe6a6, 0xa540, 0xb48a, 0xc31c, 0x7f31, 0x1, 0x1);
        gbc.writeMem(0x92e3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe6a6, gbc.sp());
        EXPECT(0x92e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e3));
        EXPECT(0xdf, gbc.readMem(0x92e4));
        // CB DF 0321
        gbc.setState(0xc89b, 0xcdb3, 0x5ba0, 0x74e2, 0xe213, 0xe1ea, 0x0, 0x0);
        gbc.writeMem(0xc89b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0xc89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89b));
        EXPECT(0xdf, gbc.readMem(0xc89c));
        // CB DF 0322
        gbc.setState(0xbb2f, 0x7190, 0xff50, 0x5c48, 0x7d0, 0x8bf6, 0x1, 0x0);
        gbc.writeMem(0xbb2f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7190, gbc.sp());
        EXPECT(0xbb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2f));
        EXPECT(0xdf, gbc.readMem(0xbb30));
        // CB DF 0323
        gbc.setState(0x6343, 0x682a, 0xa790, 0x5d9c, 0x8930, 0x6a81, 0x0, 0x0);
        gbc.writeMem(0x6343, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x682a, gbc.sp());
        EXPECT(0x6345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0324
        gbc.setState(0x6ab5, 0x5b5e, 0x5120, 0xcb79, 0x3778, 0xcf6f, 0x1, 0x1);
        gbc.writeMem(0x6ab5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5b5e, gbc.sp());
        EXPECT(0x6ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0325
        gbc.setState(0x3fdd, 0x41c0, 0xfe30, 0x73c1, 0x3264, 0xede3, 0x1, 0x0);
        gbc.writeMem(0x3fdd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x41c0, gbc.sp());
        EXPECT(0x3fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0326
        gbc.setState(0x3880, 0xf480, 0x93b0, 0xc0a2, 0x601e, 0xb617, 0x0, 0x0);
        gbc.writeMem(0x3880, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf480, gbc.sp());
        EXPECT(0x3882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0327
        gbc.setState(0x8c9e, 0xcaa4, 0x8b90, 0x67d1, 0x12d5, 0x917c, 0x0, 0x0);
        gbc.writeMem(0x8c9e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcaa4, gbc.sp());
        EXPECT(0x8ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9e));
        EXPECT(0xdf, gbc.readMem(0x8c9f));
        // CB DF 0328
        gbc.setState(0x2b75, 0x7355, 0x9e00, 0x9d01, 0x3427, 0x4df2, 0x1, 0x0);
        gbc.writeMem(0x2b75, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7355, gbc.sp());
        EXPECT(0x2b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0329
        gbc.setState(0x34a4, 0x52c5, 0x8700, 0x2503, 0x9ad5, 0xbbdb, 0x0, 0x0);
        gbc.writeMem(0x34a4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x52c5, gbc.sp());
        EXPECT(0x34a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 032A
        gbc.setState(0xe4bb, 0xd0af, 0xa90, 0x19da, 0xba03, 0x25ab, 0x0, 0x1);
        gbc.writeMem(0xe4bb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd0af, gbc.sp());
        EXPECT(0xe4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bb));
        EXPECT(0xdf, gbc.readMem(0xe4bc));
        // CB DF 032B
        gbc.setState(0xc8cf, 0xc7c4, 0x7720, 0x8d86, 0x930, 0x5b1c, 0x1, 0x0);
        gbc.writeMem(0xc8cf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc7c4, gbc.sp());
        EXPECT(0xc8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cf));
        EXPECT(0xdf, gbc.readMem(0xc8d0));
        // CB DF 032C
        gbc.setState(0x130a, 0xdea, 0xb540, 0xff3a, 0x3f9c, 0xfcb, 0x1, 0x1);
        gbc.writeMem(0x130a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdea, gbc.sp());
        EXPECT(0x130c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 032D
        gbc.setState(0x67fa, 0x19d4, 0x4b60, 0xc998, 0xb072, 0xff08, 0x1, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x19d4, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 032E
        gbc.setState(0xc8b4, 0x99ba, 0x43f0, 0x9553, 0x4eff, 0xa0e0, 0x0, 0x0);
        gbc.writeMem(0xc8b4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x99ba, gbc.sp());
        EXPECT(0xc8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b4));
        EXPECT(0xdf, gbc.readMem(0xc8b5));
        // CB DF 032F
        gbc.setState(0x8366, 0x9ccd, 0x94b0, 0x4827, 0x94eb, 0xba91, 0x0, 0x1);
        gbc.writeMem(0x8366, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9ccd, gbc.sp());
        EXPECT(0x8368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8366));
        EXPECT(0xdf, gbc.readMem(0x8367));
        // CB DF 0330
        gbc.setState(0x9dbb, 0x8925, 0xd0a0, 0xb1e6, 0x4328, 0x2e32, 0x0, 0x1);
        gbc.writeMem(0x9dbb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8925, gbc.sp());
        EXPECT(0x9dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbb));
        EXPECT(0xdf, gbc.readMem(0x9dbc));
        // CB DF 0331
        gbc.setState(0xc3d3, 0xaab4, 0xb6b0, 0x7dac, 0x865, 0x37d6, 0x0, 0x1);
        gbc.writeMem(0xc3d3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xaab4, gbc.sp());
        EXPECT(0xc3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d3));
        EXPECT(0xdf, gbc.readMem(0xc3d4));
        // CB DF 0332
        gbc.setState(0xbb1f, 0x799a, 0x8860, 0x57ce, 0x4d4d, 0x8bee, 0x0, 0x0);
        gbc.writeMem(0xbb1f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x799a, gbc.sp());
        EXPECT(0xbb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1f));
        EXPECT(0xdf, gbc.readMem(0xbb20));
        // CB DF 0333
        gbc.setState(0x3273, 0x4cd5, 0x4860, 0x2561, 0x1442, 0xf76, 0x1, 0x0);
        gbc.writeMem(0x3273, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4cd5, gbc.sp());
        EXPECT(0x3275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0334
        gbc.setState(0xb89, 0x4238, 0x6b10, 0x981e, 0xed79, 0x8597, 0x0, 0x1);
        gbc.writeMem(0xb89, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4238, gbc.sp());
        EXPECT(0xb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0335
        gbc.setState(0xbe19, 0x150b, 0x47b0, 0x1339, 0xc0bd, 0x7a5b, 0x1, 0x1);
        gbc.writeMem(0xbe19, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x150b, gbc.sp());
        EXPECT(0xbe1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe19));
        EXPECT(0xdf, gbc.readMem(0xbe1a));
        // CB DF 0337
        gbc.setState(0x3ccf, 0x8a69, 0x14f0, 0xa153, 0x8249, 0x1b29, 0x0, 0x0);
        gbc.writeMem(0x3ccf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8a69, gbc.sp());
        EXPECT(0x3cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0338
        gbc.setState(0x5e52, 0x27a4, 0xb4f0, 0xc2, 0x6f58, 0x38bd, 0x0, 0x0);
        gbc.writeMem(0x5e52, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x27a4, gbc.sp());
        EXPECT(0x5e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0339
        gbc.setState(0x3520, 0xaee4, 0xdcd0, 0xafe5, 0x2d78, 0xe0d9, 0x0, 0x0);
        gbc.writeMem(0x3520, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xaee4, gbc.sp());
        EXPECT(0x3522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 033A
        gbc.setState(0x7265, 0xbfb1, 0xd4b0, 0x4b52, 0x324, 0xf7b1, 0x1, 0x1);
        gbc.writeMem(0x7265, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbfb1, gbc.sp());
        EXPECT(0x7267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 033B
        gbc.setState(0x3d5c, 0xe4ec, 0x1290, 0xa08f, 0xfe38, 0xf1a4, 0x1, 0x1);
        gbc.writeMem(0x3d5c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe4ec, gbc.sp());
        EXPECT(0x3d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 033C
        gbc.setState(0x1362, 0xcff2, 0x6120, 0x528a, 0xba7d, 0xdccd, 0x1, 0x1);
        gbc.writeMem(0x1362, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcff2, gbc.sp());
        EXPECT(0x1364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 033D
        gbc.setState(0x9b38, 0x6f78, 0x5b20, 0xa7be, 0x71c7, 0xef9b, 0x1, 0x1);
        gbc.writeMem(0x9b38, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6f78, gbc.sp());
        EXPECT(0x9b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b38));
        EXPECT(0xdf, gbc.readMem(0x9b39));
        // CB DF 033E
        gbc.setState(0x619a, 0xca31, 0xdec0, 0x7aac, 0x3efe, 0xfdb5, 0x0, 0x1);
        gbc.writeMem(0x619a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xca31, gbc.sp());
        EXPECT(0x619c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 033F
        gbc.setState(0xafd9, 0x3bb8, 0xea90, 0x9b7f, 0x5f2, 0x6cf9, 0x0, 0x1);
        gbc.writeMem(0xafd9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3bb8, gbc.sp());
        EXPECT(0xafdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd9));
        EXPECT(0xdf, gbc.readMem(0xafda));
        // CB DF 0340
        gbc.setState(0xa437, 0x4e12, 0xa4f0, 0xdf39, 0x39e3, 0x3d9e, 0x0, 0x0);
        gbc.writeMem(0xa437, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4e12, gbc.sp());
        EXPECT(0xa439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa437));
        EXPECT(0xdf, gbc.readMem(0xa438));
        // CB DF 0341
        gbc.setState(0x3116, 0x9e73, 0x6120, 0xb38e, 0xcc9c, 0xc177, 0x1, 0x0);
        gbc.writeMem(0x3116, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9e73, gbc.sp());
        EXPECT(0x3118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0342
        gbc.setState(0x87b2, 0xbbcc, 0xc8c0, 0x5967, 0x4593, 0x954a, 0x1, 0x0);
        gbc.writeMem(0x87b2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbbcc, gbc.sp());
        EXPECT(0x87b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b2));
        EXPECT(0xdf, gbc.readMem(0x87b3));
        // CB DF 0343
        gbc.setState(0x7d1, 0x1e52, 0x380, 0xeee1, 0xb8fa, 0x2273, 0x0, 0x0);
        gbc.writeMem(0x7d1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1e52, gbc.sp());
        EXPECT(0x7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0344
        gbc.setState(0xa692, 0x9f68, 0xda60, 0x3f5e, 0x38cd, 0xd998, 0x1, 0x1);
        gbc.writeMem(0xa692, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9f68, gbc.sp());
        EXPECT(0xa694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa692));
        EXPECT(0xdf, gbc.readMem(0xa693));
        // CB DF 0345
        gbc.setState(0xbeb2, 0xa6d6, 0xede0, 0xc6eb, 0x3224, 0xf545, 0x1, 0x1);
        gbc.writeMem(0xbeb2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa6d6, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb2));
        EXPECT(0xdf, gbc.readMem(0xbeb3));
        // CB DF 0346
        gbc.setState(0x5710, 0x2caa, 0x5f50, 0xf747, 0x9deb, 0x7672, 0x0, 0x1);
        gbc.writeMem(0x5710, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2caa, gbc.sp());
        EXPECT(0x5712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0347
        gbc.setState(0x704, 0x7fc6, 0x1950, 0x604d, 0xf5a3, 0x286b, 0x0, 0x0);
        gbc.writeMem(0x704, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7fc6, gbc.sp());
        EXPECT(0x706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0348
        gbc.setState(0xbdc7, 0x4fa, 0x2e70, 0xa4f7, 0xda3f, 0x2922, 0x0, 0x0);
        gbc.writeMem(0xbdc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4fa, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc7));
        EXPECT(0xdf, gbc.readMem(0xbdc8));
        // CB DF 0349
        gbc.setState(0x2a67, 0xa72d, 0x1bb0, 0x3a82, 0x886c, 0x85, 0x0, 0x1);
        gbc.writeMem(0x2a67, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa72d, gbc.sp());
        EXPECT(0x2a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 034A
        gbc.setState(0x3fe6, 0xe096, 0xeaf0, 0x81fa, 0x4f71, 0x197a, 0x1, 0x0);
        gbc.writeMem(0x3fe6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe096, gbc.sp());
        EXPECT(0x3fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 034B
        gbc.setState(0xd423, 0x223c, 0xcaf0, 0xa2cc, 0x67b0, 0x2f86, 0x1, 0x0);
        gbc.writeMem(0xd423, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x223c, gbc.sp());
        EXPECT(0xd425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd423));
        EXPECT(0xdf, gbc.readMem(0xd424));
        // CB DF 034C
        gbc.setState(0xd75a, 0x7b69, 0xe5d0, 0xdfcb, 0xc85, 0xf80e, 0x1, 0x1);
        gbc.writeMem(0xd75a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7b69, gbc.sp());
        EXPECT(0xd75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75a));
        EXPECT(0xdf, gbc.readMem(0xd75b));
        // CB DF 034D
        gbc.setState(0x8838, 0xf499, 0x6bb0, 0xda21, 0x3de2, 0xb596, 0x0, 0x0);
        gbc.writeMem(0x8838, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf499, gbc.sp());
        EXPECT(0x883a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8838));
        EXPECT(0xdf, gbc.readMem(0x8839));
        // CB DF 034F
        gbc.setState(0x973e, 0xb16, 0x3ce0, 0xb0d7, 0xe1d2, 0xe88e, 0x1, 0x0);
        gbc.writeMem(0x973e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb16, gbc.sp());
        EXPECT(0x9740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973e));
        EXPECT(0xdf, gbc.readMem(0x973f));
        // CB DF 0351
        gbc.setState(0x1382, 0xf44e, 0xa6d0, 0x8be4, 0xbf50, 0x2a2e, 0x0, 0x1);
        gbc.writeMem(0x1382, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf44e, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0352
        gbc.setState(0x5fc8, 0x7a05, 0x6750, 0x5821, 0xfaf3, 0xb187, 0x0, 0x1);
        gbc.writeMem(0x5fc8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7a05, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0353
        gbc.setState(0xdd4a, 0x6989, 0xc710, 0x6344, 0xded0, 0xf2a1, 0x0, 0x0);
        gbc.writeMem(0xdd4a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6989, gbc.sp());
        EXPECT(0xdd4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd4a));
        EXPECT(0xdf, gbc.readMem(0xdd4b));
        // CB DF 0354
        gbc.setState(0xd329, 0x9208, 0x1850, 0x8d0, 0x9fa9, 0x47f9, 0x0, 0x0);
        gbc.writeMem(0xd329, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9208, gbc.sp());
        EXPECT(0xd32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd329));
        EXPECT(0xdf, gbc.readMem(0xd32a));
        // CB DF 0355
        gbc.setState(0xebda, 0xa247, 0x85f0, 0x9c47, 0x2b29, 0xdc47, 0x0, 0x0);
        gbc.writeMem(0xebda, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa247, gbc.sp());
        EXPECT(0xebdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebda));
        EXPECT(0xdf, gbc.readMem(0xebdb));
        // CB DF 0356
        gbc.setState(0xb9df, 0xa10d, 0x1d60, 0xdf09, 0x9daa, 0x5a1a, 0x0, 0x0);
        gbc.writeMem(0xb9df, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa10d, gbc.sp());
        EXPECT(0xb9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9df));
        EXPECT(0xdf, gbc.readMem(0xb9e0));
        // CB DF 0357
        gbc.setState(0x393a, 0x283d, 0xed00, 0x7a27, 0xfb12, 0x7bfe, 0x1, 0x0);
        gbc.writeMem(0x393a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x283d, gbc.sp());
        EXPECT(0x393c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0358
        gbc.setState(0x25f9, 0x2358, 0xb070, 0xed95, 0x4f8a, 0xb400, 0x0, 0x0);
        gbc.writeMem(0x25f9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2358, gbc.sp());
        EXPECT(0x25fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0359
        gbc.setState(0xc7, 0x91c1, 0xea50, 0x39ea, 0xeaf3, 0x5fef, 0x1, 0x1);
        gbc.writeMem(0xc7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x91c1, gbc.sp());
        EXPECT(0xc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 035A
        gbc.setState(0x9570, 0x938b, 0x1bb0, 0x3d4d, 0xc29e, 0x3e65, 0x0, 0x1);
        gbc.writeMem(0x9570, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x938b, gbc.sp());
        EXPECT(0x9572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9570));
        EXPECT(0xdf, gbc.readMem(0x9571));
        // CB DF 035B
        gbc.setState(0x80e4, 0xd57c, 0xe5d0, 0xb798, 0x13d3, 0xf910, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd57c, gbc.sp());
        EXPECT(0x80e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e4));
        EXPECT(0xdf, gbc.readMem(0x80e5));
        // CB DF 035C
        gbc.setState(0xed37, 0xad24, 0x9e40, 0xb81e, 0x574d, 0xd8ea, 0x0, 0x0);
        gbc.writeMem(0xed37, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xad24, gbc.sp());
        EXPECT(0xed39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed37));
        EXPECT(0xdf, gbc.readMem(0xed38));
        // CB DF 035D
        gbc.setState(0x1303, 0xfc96, 0xad00, 0xa853, 0x4ea1, 0xba44, 0x0, 0x0);
        gbc.writeMem(0x1303, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfc96, gbc.sp());
        EXPECT(0x1305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 035E
        gbc.setState(0x3f4f, 0x8b62, 0xe5e0, 0xf00c, 0x3ad5, 0xa3d3, 0x0, 0x0);
        gbc.writeMem(0x3f4f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8b62, gbc.sp());
        EXPECT(0x3f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 035F
        gbc.setState(0x4ecc, 0x7da6, 0x4640, 0xa5b1, 0x692d, 0x6cab, 0x0, 0x1);
        gbc.writeMem(0x4ecc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7da6, gbc.sp());
        EXPECT(0x4ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0360
        gbc.setState(0x2620, 0x87c3, 0xf940, 0xe72b, 0xe445, 0x639c, 0x0, 0x0);
        gbc.writeMem(0x2620, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x87c3, gbc.sp());
        EXPECT(0x2622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0361
        gbc.setState(0xe42d, 0x293b, 0x2840, 0xe60d, 0x55b, 0x4cd8, 0x1, 0x0);
        gbc.writeMem(0xe42d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x293b, gbc.sp());
        EXPECT(0xe42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42d));
        EXPECT(0xdf, gbc.readMem(0xe42e));
        // CB DF 0362
        gbc.setState(0xbdbb, 0x9103, 0x2580, 0x9897, 0xdd91, 0x2d18, 0x0, 0x0);
        gbc.writeMem(0xbdbb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9103, gbc.sp());
        EXPECT(0xbdbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdbb));
        EXPECT(0xdf, gbc.readMem(0xbdbc));
        // CB DF 0363
        gbc.setState(0xccb9, 0x4ef1, 0x5570, 0x3321, 0xd6ca, 0xff60, 0x0, 0x1);
        gbc.writeMem(0xccb9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4ef1, gbc.sp());
        EXPECT(0xccbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb9));
        EXPECT(0xdf, gbc.readMem(0xccba));
        // CB DF 0364
        gbc.setState(0x5d29, 0x93ae, 0xe4f0, 0xfc58, 0xc86b, 0xc873, 0x1, 0x1);
        gbc.writeMem(0x5d29, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x93ae, gbc.sp());
        EXPECT(0x5d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0365
        gbc.setState(0x4c62, 0xaf7f, 0x1640, 0xb497, 0x9eb6, 0x3c8, 0x1, 0x0);
        gbc.writeMem(0x4c62, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaf7f, gbc.sp());
        EXPECT(0x4c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0366
        gbc.setState(0xbf00, 0xc429, 0x5580, 0xfd69, 0xab15, 0xa868, 0x0, 0x0);
        gbc.writeMem(0xbf00, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc429, gbc.sp());
        EXPECT(0xbf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf00));
        EXPECT(0xdf, gbc.readMem(0xbf01));
        // CB DF 0367
        gbc.setState(0x8493, 0xe702, 0xb940, 0xd53e, 0xb04b, 0xf723, 0x0, 0x0);
        gbc.writeMem(0x8493, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe702, gbc.sp());
        EXPECT(0x8495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8493));
        EXPECT(0xdf, gbc.readMem(0x8494));
        // CB DF 0368
        gbc.setState(0x7d38, 0x7c90, 0xeef0, 0x540a, 0xdc03, 0xc7bd, 0x1, 0x0);
        gbc.writeMem(0x7d38, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7c90, gbc.sp());
        EXPECT(0x7d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0369
        gbc.setState(0xb37d, 0x4387, 0xb9a0, 0x5a5e, 0x249d, 0xe5cf, 0x0, 0x1);
        gbc.writeMem(0xb37d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4387, gbc.sp());
        EXPECT(0xb37f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb37d));
        EXPECT(0xdf, gbc.readMem(0xb37e));
        // CB DF 036A
        gbc.setState(0x1b77, 0x8b3d, 0x5020, 0x5d92, 0x4f71, 0x5a2a, 0x1, 0x0);
        gbc.writeMem(0x1b77, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8b3d, gbc.sp());
        EXPECT(0x1b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 036B
        gbc.setState(0x9cf0, 0x579a, 0xdef0, 0x4a37, 0x807b, 0xb6ca, 0x0, 0x0);
        gbc.writeMem(0x9cf0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x579a, gbc.sp());
        EXPECT(0x9cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf0));
        EXPECT(0xdf, gbc.readMem(0x9cf1));
        // CB DF 036C
        gbc.setState(0xe79a, 0x732a, 0x4910, 0x1f1b, 0x5885, 0x4d84, 0x1, 0x0);
        gbc.writeMem(0xe79a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x732a, gbc.sp());
        EXPECT(0xe79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79a));
        EXPECT(0xdf, gbc.readMem(0xe79b));
        // CB DF 036D
        gbc.setState(0xbdf7, 0xc131, 0x4ed0, 0x29f2, 0x4a0, 0x44a4, 0x0, 0x1);
        gbc.writeMem(0xbdf7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc131, gbc.sp());
        EXPECT(0xbdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf7));
        EXPECT(0xdf, gbc.readMem(0xbdf8));
        // CB DF 036E
        gbc.setState(0x4b4d, 0x21a8, 0x5e10, 0x4ebe, 0x93f4, 0x8bed, 0x0, 0x1);
        gbc.writeMem(0x4b4d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x21a8, gbc.sp());
        EXPECT(0x4b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 036F
        gbc.setState(0x238, 0xa1c9, 0x70b0, 0x72b, 0x7fe6, 0x971a, 0x1, 0x1);
        gbc.writeMem(0x238, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa1c9, gbc.sp());
        EXPECT(0x23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0370
        gbc.setState(0x4eaf, 0x8174, 0xcce0, 0xaaa3, 0x6bf3, 0xb7e3, 0x1, 0x0);
        gbc.writeMem(0x4eaf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8174, gbc.sp());
        EXPECT(0x4eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0371
        gbc.setState(0x9f2a, 0xc531, 0x3900, 0x11fb, 0x361d, 0x6ee2, 0x0, 0x1);
        gbc.writeMem(0x9f2a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc531, gbc.sp());
        EXPECT(0x9f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2a));
        EXPECT(0xdf, gbc.readMem(0x9f2b));
        // CB DF 0372
        gbc.setState(0xb3b1, 0x5b6f, 0x2290, 0xb7cb, 0xf71e, 0x8d80, 0x1, 0x1);
        gbc.writeMem(0xb3b1, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5b6f, gbc.sp());
        EXPECT(0xb3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b1));
        EXPECT(0xdf, gbc.readMem(0xb3b2));
        // CB DF 0373
        gbc.setState(0x2ed6, 0x67dc, 0x9d80, 0xa4e7, 0xb569, 0xad7d, 0x0, 0x1);
        gbc.writeMem(0x2ed6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x67dc, gbc.sp());
        EXPECT(0x2ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0374
        gbc.setState(0x13b6, 0x2ee9, 0xcab0, 0x2ba4, 0x5b0c, 0x3f53, 0x1, 0x0);
        gbc.writeMem(0x13b6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2ee9, gbc.sp());
        EXPECT(0x13b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0375
        gbc.setState(0xa1df, 0x964, 0x4900, 0xba55, 0xd423, 0xb333, 0x0, 0x1);
        gbc.writeMem(0xa1df, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x964, gbc.sp());
        EXPECT(0xa1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1df));
        EXPECT(0xdf, gbc.readMem(0xa1e0));
        // CB DF 0376
        gbc.setState(0x379d, 0x9d8, 0xfc30, 0xab19, 0xc9ef, 0xd0b4, 0x1, 0x0);
        gbc.writeMem(0x379d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9d8, gbc.sp());
        EXPECT(0x379f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0377
        gbc.setState(0xb47b, 0x6fd, 0x9ab0, 0xc615, 0x6904, 0x2cb7, 0x1, 0x0);
        gbc.writeMem(0xb47b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6fd, gbc.sp());
        EXPECT(0xb47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47b));
        EXPECT(0xdf, gbc.readMem(0xb47c));
        // CB DF 0378
        gbc.setState(0x380c, 0x42a2, 0x4990, 0x12d8, 0x4496, 0x7a55, 0x1, 0x1);
        gbc.writeMem(0x380c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x42a2, gbc.sp());
        EXPECT(0x380e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 037A
        gbc.setState(0x150, 0xa108, 0x760, 0xe44e, 0x7acf, 0xe41d, 0x0, 0x0);
        gbc.writeMem(0x150, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa108, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 037B
        gbc.setState(0xe570, 0x48df, 0x8ef0, 0x4233, 0xca39, 0x8f1c, 0x1, 0x1);
        gbc.writeMem(0xe570, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x48df, gbc.sp());
        EXPECT(0xe572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe570));
        EXPECT(0xdf, gbc.readMem(0xe571));
        // CB DF 037C
        gbc.setState(0xdd26, 0xfa34, 0x9d20, 0xd098, 0xb9a5, 0x123, 0x0, 0x1);
        gbc.writeMem(0xdd26, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfa34, gbc.sp());
        EXPECT(0xdd28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd26));
        EXPECT(0xdf, gbc.readMem(0xdd27));
        // CB DF 037D
        gbc.setState(0x37bf, 0xcddb, 0x4cb0, 0xf1bd, 0x38fb, 0x888b, 0x1, 0x0);
        gbc.writeMem(0x37bf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcddb, gbc.sp());
        EXPECT(0x37c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 037E
        gbc.setState(0x3919, 0x9e4, 0x6500, 0xa54a, 0x1986, 0x692d, 0x1, 0x1);
        gbc.writeMem(0x3919, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9e4, gbc.sp());
        EXPECT(0x391b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 037F
        gbc.setState(0x6039, 0x4825, 0x2b30, 0x17, 0x70a1, 0x958b, 0x0, 0x0);
        gbc.writeMem(0x6039, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4825, gbc.sp());
        EXPECT(0x603b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0380
        gbc.setState(0xe911, 0xc3e3, 0xe280, 0xb628, 0xa9c4, 0x8dd3, 0x0, 0x0);
        gbc.writeMem(0xe911, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc3e3, gbc.sp());
        EXPECT(0xe913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe911));
        EXPECT(0xdf, gbc.readMem(0xe912));
        // CB DF 0381
        gbc.setState(0x2752, 0xdad3, 0xc000, 0x55ef, 0xe4c9, 0xaf07, 0x0, 0x1);
        gbc.writeMem(0x2752, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdad3, gbc.sp());
        EXPECT(0x2754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0382
        gbc.setState(0x76de, 0x8c30, 0x5830, 0xd15e, 0xb43d, 0x9aed, 0x0, 0x1);
        gbc.writeMem(0x76de, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8c30, gbc.sp());
        EXPECT(0x76e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0383
        gbc.setState(0xa39d, 0xa5fb, 0x81a0, 0x4046, 0xcdad, 0x39b3, 0x1, 0x1);
        gbc.writeMem(0xa39d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa5fb, gbc.sp());
        EXPECT(0xa39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39d));
        EXPECT(0xdf, gbc.readMem(0xa39e));
        // CB DF 0384
        gbc.setState(0xe37f, 0x84c7, 0x9070, 0x9586, 0xe9f7, 0xff33, 0x1, 0x0);
        gbc.writeMem(0xe37f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x84c7, gbc.sp());
        EXPECT(0xe381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37f));
        EXPECT(0xdf, gbc.readMem(0xe380));
        // CB DF 0385
        gbc.setState(0x6d15, 0x91c2, 0xe080, 0x5c07, 0x7553, 0xd44, 0x0, 0x0);
        gbc.writeMem(0x6d15, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x91c2, gbc.sp());
        EXPECT(0x6d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0386
        gbc.setState(0xb969, 0x23dc, 0x7450, 0xbfb0, 0xf619, 0x4305, 0x1, 0x1);
        gbc.writeMem(0xb969, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x23dc, gbc.sp());
        EXPECT(0xb96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb969));
        EXPECT(0xdf, gbc.readMem(0xb96a));
        // CB DF 0387
        gbc.setState(0xaf1e, 0x514f, 0xa480, 0xf505, 0x9928, 0x434a, 0x1, 0x1);
        gbc.writeMem(0xaf1e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x514f, gbc.sp());
        EXPECT(0xaf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1e));
        EXPECT(0xdf, gbc.readMem(0xaf1f));
        // CB DF 0388
        gbc.setState(0xd43e, 0x9160, 0x84a0, 0xcd3c, 0x2df3, 0x8a29, 0x1, 0x0);
        gbc.writeMem(0xd43e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9160, gbc.sp());
        EXPECT(0xd440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43e));
        EXPECT(0xdf, gbc.readMem(0xd43f));
        // CB DF 0389
        gbc.setState(0x1e8e, 0x50c9, 0x84e0, 0xa6db, 0x8fd9, 0x2fb6, 0x0, 0x0);
        gbc.writeMem(0x1e8e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x50c9, gbc.sp());
        EXPECT(0x1e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 038A
        gbc.setState(0x5130, 0x89b4, 0x9300, 0x7d3a, 0xc3a5, 0x98fc, 0x1, 0x0);
        gbc.writeMem(0x5130, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x89b4, gbc.sp());
        EXPECT(0x5132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 038B
        gbc.setState(0x369d, 0xc02b, 0xc9e0, 0x6dd1, 0x4751, 0xcb34, 0x1, 0x1);
        gbc.writeMem(0x369d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc02b, gbc.sp());
        EXPECT(0x369f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 038C
        gbc.setState(0xe6a2, 0xfa25, 0x9d70, 0xe647, 0x5fca, 0xe4c8, 0x1, 0x1);
        gbc.writeMem(0xe6a2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfa25, gbc.sp());
        EXPECT(0xe6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a2));
        EXPECT(0xdf, gbc.readMem(0xe6a3));
        // CB DF 038D
        gbc.setState(0xc6a4, 0xca03, 0xfe30, 0x7e52, 0xb412, 0x4e1d, 0x1, 0x1);
        gbc.writeMem(0xc6a4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xca03, gbc.sp());
        EXPECT(0xc6a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a4));
        EXPECT(0xdf, gbc.readMem(0xc6a5));
        // CB DF 038E
        gbc.setState(0xcdca, 0x8517, 0x27b0, 0x2634, 0xe5a1, 0x78bb, 0x0, 0x1);
        gbc.writeMem(0xcdca, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8517, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdca));
        EXPECT(0xdf, gbc.readMem(0xcdcb));
        // CB DF 038F
        gbc.setState(0x9f12, 0x29ba, 0x1b80, 0xe270, 0xe65f, 0xbbf9, 0x1, 0x1);
        gbc.writeMem(0x9f12, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x29ba, gbc.sp());
        EXPECT(0x9f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f12));
        EXPECT(0xdf, gbc.readMem(0x9f13));
        // CB DF 0390
        gbc.setState(0x4f9a, 0x6557, 0xbcb0, 0x2932, 0xf9ab, 0xf33e, 0x0, 0x1);
        gbc.writeMem(0x4f9a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6557, gbc.sp());
        EXPECT(0x4f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0391
        gbc.setState(0x260f, 0xc97e, 0xe300, 0x8b26, 0xe4ff, 0x47a2, 0x0, 0x1);
        gbc.writeMem(0x260f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc97e, gbc.sp());
        EXPECT(0x2611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0392
        gbc.setState(0xc8a3, 0x25ce, 0x5380, 0xac07, 0x5d63, 0x8379, 0x0, 0x1);
        gbc.writeMem(0xc8a3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x25ce, gbc.sp());
        EXPECT(0xc8a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a3));
        EXPECT(0xdf, gbc.readMem(0xc8a4));
        // CB DF 0393
        gbc.setState(0x632f, 0xc0c2, 0x91e0, 0x2508, 0x7405, 0x626f, 0x1, 0x1);
        gbc.writeMem(0x632f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc0c2, gbc.sp());
        EXPECT(0x6331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0394
        gbc.setState(0x4e37, 0xadbf, 0xf7e0, 0x86b1, 0x8746, 0xfc2b, 0x0, 0x1);
        gbc.writeMem(0x4e37, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xadbf, gbc.sp());
        EXPECT(0x4e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 0395
        gbc.setState(0x140a, 0x1da6, 0x3990, 0xa13a, 0xafec, 0x9418, 0x1, 0x1);
        gbc.writeMem(0x140a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1da6, gbc.sp());
        EXPECT(0x140c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 0396
        gbc.setState(0xb17d, 0xde96, 0x8290, 0xc74b, 0xcb1, 0x4eae, 0x0, 0x1);
        gbc.writeMem(0xb17d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xde96, gbc.sp());
        EXPECT(0xb17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17d));
        EXPECT(0xdf, gbc.readMem(0xb17e));
        // CB DF 0397
        gbc.setState(0xe64a, 0x65f0, 0xc6e0, 0x1fb5, 0xe38, 0x1233, 0x1, 0x1);
        gbc.writeMem(0xe64a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x65f0, gbc.sp());
        EXPECT(0xe64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64a));
        EXPECT(0xdf, gbc.readMem(0xe64b));
        // CB DF 0398
        gbc.setState(0xcbe2, 0xca9e, 0x26a0, 0xecf3, 0x699a, 0xe70a, 0x0, 0x0);
        gbc.writeMem(0xcbe2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xca9e, gbc.sp());
        EXPECT(0xcbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe2));
        EXPECT(0xdf, gbc.readMem(0xcbe3));
        // CB DF 0399
        gbc.setState(0x728d, 0x18f4, 0x7ae0, 0x5d3a, 0xd233, 0x69f8, 0x1, 0x1);
        gbc.writeMem(0x728d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x18f4, gbc.sp());
        EXPECT(0x728f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 039A
        gbc.setState(0x3923, 0x9b0c, 0xbfe0, 0xfee2, 0xfc62, 0xd3e5, 0x1, 0x0);
        gbc.writeMem(0x3923, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9b0c, gbc.sp());
        EXPECT(0x3925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 039B
        gbc.setState(0xeb6e, 0x852e, 0xd9c0, 0xc564, 0xa72c, 0x8768, 0x1, 0x1);
        gbc.writeMem(0xeb6e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x852e, gbc.sp());
        EXPECT(0xeb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6e));
        EXPECT(0xdf, gbc.readMem(0xeb6f));
        // CB DF 039C
        gbc.setState(0xd5a7, 0x114c, 0x9ab0, 0x202c, 0xb975, 0xa941, 0x1, 0x0);
        gbc.writeMem(0xd5a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x114c, gbc.sp());
        EXPECT(0xd5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a7));
        EXPECT(0xdf, gbc.readMem(0xd5a8));
        // CB DF 039D
        gbc.setState(0x6221, 0x792b, 0x6060, 0xbe89, 0xa33e, 0x60f, 0x0, 0x1);
        gbc.writeMem(0x6221, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x792b, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 039E
        gbc.setState(0x706e, 0xee39, 0x4bd0, 0xdbde, 0xbf6e, 0x9493, 0x0, 0x1);
        gbc.writeMem(0x706e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xee39, gbc.sp());
        EXPECT(0x7070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 039F
        gbc.setState(0x3256, 0xc255, 0x3a10, 0x66d, 0x9657, 0xa277, 0x0, 0x1);
        gbc.writeMem(0x3256, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc255, gbc.sp());
        EXPECT(0x3258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03A0
        gbc.setState(0x1f57, 0xe409, 0x5cb0, 0x9df5, 0x4a6c, 0xdd61, 0x1, 0x0);
        gbc.writeMem(0x1f57, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe409, gbc.sp());
        EXPECT(0x1f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03A1
        gbc.setState(0x7db2, 0x4ed7, 0xa5c0, 0x1a7c, 0xcfeb, 0x9331, 0x0, 0x0);
        gbc.writeMem(0x7db2, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4ed7, gbc.sp());
        EXPECT(0x7db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03A2
        gbc.setState(0xdb25, 0xd631, 0x25d0, 0xce97, 0x22eb, 0x546f, 0x1, 0x1);
        gbc.writeMem(0xdb25, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd631, gbc.sp());
        EXPECT(0xdb27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb25));
        EXPECT(0xdf, gbc.readMem(0xdb26));
        // CB DF 03A3
        gbc.setState(0xc124, 0x6286, 0x1700, 0xd292, 0x1860, 0xbc37, 0x1, 0x1);
        gbc.writeMem(0xc124, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6286, gbc.sp());
        EXPECT(0xc126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc124));
        EXPECT(0xdf, gbc.readMem(0xc125));
        // CB DF 03A4
        gbc.setState(0xa69e, 0x2bcb, 0xa0f0, 0xae2f, 0x7381, 0x951d, 0x0, 0x1);
        gbc.writeMem(0xa69e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2bcb, gbc.sp());
        EXPECT(0xa6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa69e));
        EXPECT(0xdf, gbc.readMem(0xa69f));
        // CB DF 03A5
        gbc.setState(0xd0ca, 0x1506, 0x2210, 0x6ea8, 0x7c81, 0x1297, 0x0, 0x0);
        gbc.writeMem(0xd0ca, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1506, gbc.sp());
        EXPECT(0xd0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ca));
        EXPECT(0xdf, gbc.readMem(0xd0cb));
        // CB DF 03A7
        gbc.setState(0x260f, 0x9735, 0xf670, 0x4375, 0x2b39, 0xa38, 0x1, 0x1);
        gbc.writeMem(0x260f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9735, gbc.sp());
        EXPECT(0x2611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03A9
        gbc.setState(0xac8a, 0xa92a, 0xfed0, 0x797b, 0xc584, 0xb1b6, 0x0, 0x0);
        gbc.writeMem(0xac8a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa92a, gbc.sp());
        EXPECT(0xac8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8a));
        EXPECT(0xdf, gbc.readMem(0xac8b));
        // CB DF 03AA
        gbc.setState(0xb829, 0xbe03, 0x7c90, 0xee11, 0x1db5, 0x1f70, 0x1, 0x0);
        gbc.writeMem(0xb829, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbe03, gbc.sp());
        EXPECT(0xb82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb829));
        EXPECT(0xdf, gbc.readMem(0xb82a));
        // CB DF 03AB
        gbc.setState(0x96a7, 0xf3b5, 0xe8a0, 0x74ac, 0x3506, 0x699e, 0x1, 0x0);
        gbc.writeMem(0x96a7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf3b5, gbc.sp());
        EXPECT(0x96a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a7));
        EXPECT(0xdf, gbc.readMem(0x96a8));
        // CB DF 03AC
        gbc.setState(0x1fce, 0xb184, 0xb3b0, 0x3575, 0x7e23, 0xa1f7, 0x1, 0x0);
        gbc.writeMem(0x1fce, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb184, gbc.sp());
        EXPECT(0x1fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03AD
        gbc.setState(0xd83b, 0x34ba, 0x47c0, 0xa4f8, 0x4f8a, 0x59df, 0x1, 0x1);
        gbc.writeMem(0xd83b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x34ba, gbc.sp());
        EXPECT(0xd83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd83b));
        EXPECT(0xdf, gbc.readMem(0xd83c));
        // CB DF 03AE
        gbc.setState(0xb648, 0x92b8, 0x5420, 0x9f01, 0x783c, 0x22c0, 0x0, 0x1);
        gbc.writeMem(0xb648, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x92b8, gbc.sp());
        EXPECT(0xb64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb648));
        EXPECT(0xdf, gbc.readMem(0xb649));
        // CB DF 03AF
        gbc.setState(0xa1ba, 0x9f32, 0xbbd0, 0xaf55, 0xc34c, 0x5cfe, 0x1, 0x0);
        gbc.writeMem(0xa1ba, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9f32, gbc.sp());
        EXPECT(0xa1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ba));
        EXPECT(0xdf, gbc.readMem(0xa1bb));
        // CB DF 03B0
        gbc.setState(0xce07, 0x799e, 0xc9b0, 0x4357, 0x9fbd, 0x8604, 0x0, 0x1);
        gbc.writeMem(0xce07, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x799e, gbc.sp());
        EXPECT(0xce09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce07));
        EXPECT(0xdf, gbc.readMem(0xce08));
        // CB DF 03B1
        gbc.setState(0xe0ec, 0x4750, 0xd840, 0x395e, 0x8441, 0xbb8b, 0x1, 0x0);
        gbc.writeMem(0xe0ec, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4750, gbc.sp());
        EXPECT(0xe0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ec));
        EXPECT(0xdf, gbc.readMem(0xe0ed));
        // CB DF 03B2
        gbc.setState(0x73f3, 0xa3b5, 0x7830, 0xf79a, 0x9c3f, 0x2696, 0x1, 0x1);
        gbc.writeMem(0x73f3, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa3b5, gbc.sp());
        EXPECT(0x73f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03B3
        gbc.setState(0x7f45, 0x978b, 0x2fe0, 0x2d60, 0x62e3, 0x1dbe, 0x1, 0x1);
        gbc.writeMem(0x7f45, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x978b, gbc.sp());
        EXPECT(0x7f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03B4
        gbc.setState(0x80ab, 0x743f, 0xc5f0, 0x2e7a, 0x4b3c, 0x3ea0, 0x0, 0x0);
        gbc.writeMem(0x80ab, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x743f, gbc.sp());
        EXPECT(0x80ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ab));
        EXPECT(0xdf, gbc.readMem(0x80ac));
        // CB DF 03B5
        gbc.setState(0x41a, 0xd5f7, 0x6630, 0x2968, 0xbfa9, 0x8e44, 0x1, 0x1);
        gbc.writeMem(0x41a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd5f7, gbc.sp());
        EXPECT(0x41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03B6
        gbc.setState(0xab0b, 0xa823, 0x9a80, 0x4f52, 0xb313, 0xc534, 0x0, 0x0);
        gbc.writeMem(0xab0b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa823, gbc.sp());
        EXPECT(0xab0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0b));
        EXPECT(0xdf, gbc.readMem(0xab0c));
        // CB DF 03B7
        gbc.setState(0xdd33, 0x2261, 0x58f0, 0xb1c8, 0x552c, 0x667c, 0x1, 0x1);
        gbc.writeMem(0xdd33, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0xdd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd33));
        EXPECT(0xdf, gbc.readMem(0xdd34));
        // CB DF 03B8
        gbc.setState(0x9597, 0x604, 0x53c0, 0xfe7c, 0x4310, 0xda85, 0x0, 0x0);
        gbc.writeMem(0x9597, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x604, gbc.sp());
        EXPECT(0x9599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9597));
        EXPECT(0xdf, gbc.readMem(0x9598));
        // CB DF 03B9
        gbc.setState(0x7199, 0xc86a, 0x43e0, 0xea86, 0xbd92, 0x868b, 0x0, 0x1);
        gbc.writeMem(0x7199, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc86a, gbc.sp());
        EXPECT(0x719b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03BA
        gbc.setState(0x7cbb, 0x7794, 0x9b90, 0x3afb, 0xfadd, 0x561, 0x1, 0x1);
        gbc.writeMem(0x7cbb, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7794, gbc.sp());
        EXPECT(0x7cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03BC
        gbc.setState(0xd8f, 0xcf40, 0x5960, 0x3b4, 0x58cb, 0x967e, 0x0, 0x1);
        gbc.writeMem(0xd8f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcf40, gbc.sp());
        EXPECT(0xd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03BD
        gbc.setState(0x9115, 0xeafb, 0x6d40, 0x3c22, 0xf1cf, 0x5595, 0x1, 0x1);
        gbc.writeMem(0x9115, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeafb, gbc.sp());
        EXPECT(0x9117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9115));
        EXPECT(0xdf, gbc.readMem(0x9116));
        // CB DF 03BF
        gbc.setState(0xbbc5, 0x27b, 0xea40, 0xa5fd, 0xbb2f, 0x5fb9, 0x0, 0x0);
        gbc.writeMem(0xbbc5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x27b, gbc.sp());
        EXPECT(0xbbc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc5));
        EXPECT(0xdf, gbc.readMem(0xbbc6));
        // CB DF 03C0
        gbc.setState(0x64b7, 0x1aa6, 0xb500, 0x8112, 0xebc6, 0x91b, 0x0, 0x0);
        gbc.writeMem(0x64b7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1aa6, gbc.sp());
        EXPECT(0x64b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03C1
        gbc.setState(0x217c, 0x2305, 0xb840, 0xc087, 0x131a, 0x6a38, 0x0, 0x1);
        gbc.writeMem(0x217c, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2305, gbc.sp());
        EXPECT(0x217e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03C2
        gbc.setState(0x23ea, 0xe83f, 0x97a0, 0x9e3f, 0xdfd3, 0x2e99, 0x0, 0x0);
        gbc.writeMem(0x23ea, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe83f, gbc.sp());
        EXPECT(0x23ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03C3
        gbc.setState(0x8fe8, 0xffe, 0xd3b0, 0x3dc9, 0x5802, 0xb2ce, 0x1, 0x0);
        gbc.writeMem(0x8fe8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xffe, gbc.sp());
        EXPECT(0x8fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe8));
        EXPECT(0xdf, gbc.readMem(0x8fe9));
        // CB DF 03C4
        gbc.setState(0xeca, 0xfe43, 0xd0, 0x187d, 0x9f60, 0x6309, 0x1, 0x0);
        gbc.writeMem(0xeca, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfe43, gbc.sp());
        EXPECT(0xecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03C6
        gbc.setState(0x90f4, 0x2be, 0x16f0, 0xde3, 0x2459, 0x8728, 0x1, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f4));
        EXPECT(0xdf, gbc.readMem(0x90f5));
        // CB DF 03C7
        gbc.setState(0x8fa0, 0xd6ba, 0x28a0, 0x8e58, 0xdf2f, 0xba88, 0x0, 0x1);
        gbc.writeMem(0x8fa0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd6ba, gbc.sp());
        EXPECT(0x8fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa0));
        EXPECT(0xdf, gbc.readMem(0x8fa1));
        // CB DF 03C8
        gbc.setState(0xc53f, 0x5867, 0xa350, 0xf881, 0xaf90, 0x6c54, 0x1, 0x0);
        gbc.writeMem(0xc53f, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5867, gbc.sp());
        EXPECT(0xc541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53f));
        EXPECT(0xdf, gbc.readMem(0xc540));
        // CB DF 03C9
        gbc.setState(0x76b0, 0x7bb5, 0x56e0, 0x1f2d, 0x300, 0x8198, 0x0, 0x0);
        gbc.writeMem(0x76b0, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7bb5, gbc.sp());
        EXPECT(0x76b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03CA
        gbc.setState(0xd6cd, 0x72a0, 0x97b0, 0xef1a, 0x7638, 0x627f, 0x0, 0x1);
        gbc.writeMem(0xd6cd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x72a0, gbc.sp());
        EXPECT(0xd6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cd));
        EXPECT(0xdf, gbc.readMem(0xd6ce));
        // CB DF 03CB
        gbc.setState(0xc7d6, 0xd956, 0x11d0, 0xfadc, 0xfe50, 0xe53c, 0x1, 0x0);
        gbc.writeMem(0xc7d6, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd956, gbc.sp());
        EXPECT(0xc7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d6));
        EXPECT(0xdf, gbc.readMem(0xc7d7));
        // CB DF 03CC
        gbc.setState(0x3697, 0xa5c3, 0xf910, 0x3aaa, 0xc52b, 0x4668, 0x1, 0x1);
        gbc.writeMem(0x3697, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa5c3, gbc.sp());
        EXPECT(0x3699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03CD
        gbc.setState(0x6da4, 0x1d22, 0x45a0, 0x630f, 0xc9ae, 0x163f, 0x1, 0x1);
        gbc.writeMem(0x6da4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1d22, gbc.sp());
        EXPECT(0x6da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03CE
        gbc.setState(0xda49, 0x2b0e, 0xbe90, 0x1e7e, 0x2b25, 0xad2b, 0x1, 0x1);
        gbc.writeMem(0xda49, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2b0e, gbc.sp());
        EXPECT(0xda4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda49));
        EXPECT(0xdf, gbc.readMem(0xda4a));
        // CB DF 03D0
        gbc.setState(0x579a, 0x69f8, 0x6550, 0xd4ab, 0xf212, 0x9eab, 0x0, 0x0);
        gbc.writeMem(0x579a, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x69f8, gbc.sp());
        EXPECT(0x579c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03D1
        gbc.setState(0x36fe, 0xa399, 0x1b40, 0x6314, 0x82b5, 0x3960, 0x0, 0x0);
        gbc.writeMem(0x36fe, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa399, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03D2
        gbc.setState(0x7cd7, 0xedb5, 0xfbc0, 0x8a63, 0x9dcf, 0x1076, 0x0, 0x1);
        gbc.writeMem(0x7cd7, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xedb5, gbc.sp());
        EXPECT(0x7cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03D3
        gbc.setState(0x3913, 0xc20c, 0x9b10, 0xba11, 0x7d05, 0x71fe, 0x0, 0x0);
        gbc.writeMem(0x3913, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc20c, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03D4
        gbc.setState(0x7434, 0x3c7e, 0x7b90, 0xb5d8, 0xd860, 0x7ae4, 0x1, 0x1);
        gbc.writeMem(0x7434, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3c7e, gbc.sp());
        EXPECT(0x7436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03D5
        gbc.setState(0x1613, 0xc7a6, 0xa810, 0xabbd, 0xd9ba, 0x4b86, 0x0, 0x1);
        gbc.writeMem(0x1613, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc7a6, gbc.sp());
        EXPECT(0x1615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03D7
        gbc.setState(0xa4fc, 0xce2b, 0x6130, 0x53ad, 0xd4cc, 0x50c8, 0x1, 0x0);
        gbc.writeMem(0xa4fc, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0xa4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4fc));
        EXPECT(0xdf, gbc.readMem(0xa4fd));
        // CB DF 03D8
        gbc.setState(0x8361, 0x4ea7, 0x2a90, 0x38d9, 0x8dbf, 0x6530, 0x0, 0x0);
        gbc.writeMem(0x8361, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4ea7, gbc.sp());
        EXPECT(0x8363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8361));
        EXPECT(0xdf, gbc.readMem(0x8362));
        // CB DF 03D9
        gbc.setState(0x50b9, 0xaf20, 0x68d0, 0x8a8d, 0x200a, 0x26d1, 0x0, 0x0);
        gbc.writeMem(0x50b9, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaf20, gbc.sp());
        EXPECT(0x50bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03DA
        gbc.setState(0xc4cf, 0x2df6, 0x5ce0, 0x7d14, 0xae16, 0xd65d, 0x0, 0x0);
        gbc.writeMem(0xc4cf, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2df6, gbc.sp());
        EXPECT(0xc4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cf));
        EXPECT(0xdf, gbc.readMem(0xc4d0));
        // CB DF 03DB
        gbc.setState(0xe57e, 0x4594, 0xd8f0, 0x8926, 0x6d69, 0x2806, 0x1, 0x0);
        gbc.writeMem(0xe57e, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4594, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57e));
        EXPECT(0xdf, gbc.readMem(0xe57f));
        // CB DF 03DC
        gbc.setState(0xcbf8, 0x107, 0x4040, 0x7df6, 0x67a, 0x6243, 0x0, 0x0);
        gbc.writeMem(0xcbf8, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x107, gbc.sp());
        EXPECT(0xcbfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf8));
        EXPECT(0xdf, gbc.readMem(0xcbf9));
        // CB DF 03DD
        gbc.setState(0x30d, 0x840e, 0x40c0, 0x3be1, 0x1f84, 0xb5ac, 0x0, 0x0);
        gbc.writeMem(0x30d, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x840e, gbc.sp());
        EXPECT(0x30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DF 03DE
        gbc.setState(0x8165, 0x1da6, 0x3be0, 0x8b97, 0x438c, 0x6542, 0x0, 0x0);
        gbc.writeMem(0x8165, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1da6, gbc.sp());
        EXPECT(0x8167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8165));
        EXPECT(0xdf, gbc.readMem(0x8166));
        // CB DF 03DF
        gbc.setState(0xbdf4, 0xc05c, 0x93a0, 0x3b2e, 0x6ec, 0xb62a, 0x1, 0x1);
        gbc.writeMem(0xbdf4, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc05c, gbc.sp());
        EXPECT(0xbdf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf4));
        EXPECT(0xdf, gbc.readMem(0xbdf5));
        // CB DF 03E1
        gbc.setState(0x1dd, 0x8b86, 0x56b0, 0xb5e0, 0x3749, 0xff0c, 0x0, 0x1);
        gbc.writeMem(0x1dd, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8b86, gbc.sp());
        EXPECT(0x1df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03E2
        gbc.setState(0xe9c5, 0xad9b, 0x4350, 0x79b4, 0x82bc, 0xa030, 0x1, 0x1);
        gbc.writeMem(0xe9c5, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xad9b, gbc.sp());
        EXPECT(0xe9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c5));
        EXPECT(0xdf, gbc.readMem(0xe9c6));
        // CB DF 03E3
        gbc.setState(0x2b4b, 0x816c, 0xff50, 0x7adc, 0xc52b, 0xa265, 0x1, 0x1);
        gbc.writeMem(0x2b4b, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x816c, gbc.sp());
        EXPECT(0x2b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DF 03E5
        gbc.setState(0x8399, 0xcce8, 0x5240, 0x7cf2, 0x91c4, 0x1782, 0x1, 0x1);
        gbc.writeMem(0x8399, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcce8, gbc.sp());
        EXPECT(0x839b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8399));
        EXPECT(0xdf, gbc.readMem(0x839a));
        // CB DF 03E6
        gbc.setState(0xa4ad, 0xf07a, 0xecd0, 0x2195, 0x1f60, 0x91fb, 0x0, 0x0);
        gbc.writeMem(0xa4ad, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf07a, gbc.sp());
        EXPECT(0xa4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ad));
        EXPECT(0xdf, gbc.readMem(0xa4ae));
        // CB DF 03E7
        gbc.setState(0x920, 0x87d3, 0x7100, 0x7e5f, 0x8472, 0xe28b, 0x0, 0x0);
        gbc.writeMem(0x920, { 0xcb, 0xdf });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x87d3, gbc.sp());
        EXPECT(0x922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
