    TEST(gbcemu, opcode_cb_ab) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB AB 0000
        gbc.setState(0xc58, 0xd141, 0x4180, 0x5b99, 0xa228, 0x6808, 0x0, 0x1);
        gbc.writeMem(0xc58, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd141);
        EXPECT(gbc.pc(), 0xc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0001
        gbc.setState(0x4948, 0x2c02, 0xd720, 0x6bcd, 0x697b, 0x5aea, 0x0, 0x1);
        gbc.writeMem(0x4948, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2c02);
        EXPECT(gbc.pc(), 0x494a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0003
        gbc.setState(0xbe7a, 0x3968, 0xf300, 0x4a19, 0x9d73, 0x230e, 0x1, 0x1);
        gbc.writeMem(0xbe7a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3968);
        EXPECT(gbc.pc(), 0xbe7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe7a), 0xcb);
        EXPECT(gbc.readMem(0xbe7b), 0xab);
        // CB AB 0004
        gbc.setState(0xa65c, 0x2300, 0x1aa0, 0x45b0, 0x3d60, 0xfe56, 0x0, 0x1);
        gbc.writeMem(0xa65c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2300);
        EXPECT(gbc.pc(), 0xa65e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65c), 0xcb);
        EXPECT(gbc.readMem(0xa65d), 0xab);
        // CB AB 0005
        gbc.setState(0x62f1, 0x6917, 0x8740, 0xfaed, 0x5297, 0x1af7, 0x1, 0x0);
        gbc.writeMem(0x62f1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6917);
        EXPECT(gbc.pc(), 0x62f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0006
        gbc.setState(0x5293, 0x15ff, 0x600, 0x39de, 0xebf8, 0xa0dd, 0x0, 0x0);
        gbc.writeMem(0x5293, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x15ff);
        EXPECT(gbc.pc(), 0x5295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0008
        gbc.setState(0x8cb0, 0x75ec, 0xa570, 0x61f8, 0xb66c, 0x61e8, 0x1, 0x1);
        gbc.writeMem(0x8cb0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x75ec);
        EXPECT(gbc.pc(), 0x8cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb0), 0xcb);
        EXPECT(gbc.readMem(0x8cb1), 0xab);
        // CB AB 0009
        gbc.setState(0x13e7, 0x2083, 0xb720, 0xa387, 0x3c90, 0xa90f, 0x1, 0x1);
        gbc.writeMem(0x13e7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2083);
        EXPECT(gbc.pc(), 0x13e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 000A
        gbc.setState(0xb495, 0xbd50, 0xc960, 0xf326, 0x789f, 0xaf83, 0x0, 0x1);
        gbc.writeMem(0xb495, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbd50);
        EXPECT(gbc.pc(), 0xb497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb495), 0xcb);
        EXPECT(gbc.readMem(0xb496), 0xab);
        // CB AB 000B
        gbc.setState(0x715d, 0x559d, 0xcb90, 0xfbc, 0xf8, 0xec2b, 0x1, 0x0);
        gbc.writeMem(0x715d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x559d);
        EXPECT(gbc.pc(), 0x715f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 000C
        gbc.setState(0x9f58, 0xc36a, 0x9fc0, 0x5172, 0x2966, 0x5bab, 0x0, 0x0);
        gbc.writeMem(0x9f58, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc36a);
        EXPECT(gbc.pc(), 0x9f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f58), 0xcb);
        EXPECT(gbc.readMem(0x9f59), 0xab);
        // CB AB 000D
        gbc.setState(0xa982, 0xbae5, 0xf020, 0xab37, 0xdaf1, 0x3c4f, 0x1, 0x1);
        gbc.writeMem(0xa982, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xbae5);
        EXPECT(gbc.pc(), 0xa984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa982), 0xcb);
        EXPECT(gbc.readMem(0xa983), 0xab);
        // CB AB 000E
        gbc.setState(0xbf42, 0xc50, 0xf810, 0x9518, 0x7419, 0xd468, 0x0, 0x1);
        gbc.writeMem(0xbf42, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc50);
        EXPECT(gbc.pc(), 0xbf44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf42), 0xcb);
        EXPECT(gbc.readMem(0xbf43), 0xab);
        // CB AB 000F
        gbc.setState(0x9f1f, 0x7a04, 0x3a30, 0xce53, 0x32c9, 0x24c5, 0x1, 0x0);
        gbc.writeMem(0x9f1f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7a04);
        EXPECT(gbc.pc(), 0x9f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1f), 0xcb);
        EXPECT(gbc.readMem(0x9f20), 0xab);
        // CB AB 0010
        gbc.setState(0xada8, 0x30b2, 0x9980, 0x53bc, 0xba0a, 0x5ba2, 0x0, 0x0);
        gbc.writeMem(0xada8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x30b2);
        EXPECT(gbc.pc(), 0xadaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada8), 0xcb);
        EXPECT(gbc.readMem(0xada9), 0xab);
        // CB AB 0011
        gbc.setState(0x2dce, 0xaeb3, 0x4380, 0xafd2, 0x4b3e, 0xcdb0, 0x1, 0x1);
        gbc.writeMem(0x2dce, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xaeb3);
        EXPECT(gbc.pc(), 0x2dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0012
        gbc.setState(0xb79, 0x1758, 0x8580, 0x17db, 0xd4a3, 0x4051, 0x0, 0x0);
        gbc.writeMem(0xb79, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1758);
        EXPECT(gbc.pc(), 0xb7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0013
        gbc.setState(0xab99, 0x489e, 0x6600, 0xfa51, 0xb88d, 0x52e4, 0x0, 0x1);
        gbc.writeMem(0xab99, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x489e);
        EXPECT(gbc.pc(), 0xab9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab99), 0xcb);
        EXPECT(gbc.readMem(0xab9a), 0xab);
        // CB AB 0014
        gbc.setState(0x9ae6, 0x1a87, 0x8610, 0xdb92, 0x4f36, 0xc4bc, 0x1, 0x1);
        gbc.writeMem(0x9ae6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1a87);
        EXPECT(gbc.pc(), 0x9ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae6), 0xcb);
        EXPECT(gbc.readMem(0x9ae7), 0xab);
        // CB AB 0015
        gbc.setState(0x62d1, 0x82e2, 0xdef0, 0x348f, 0x2ac5, 0x3984, 0x0, 0x0);
        gbc.writeMem(0x62d1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x82e2);
        EXPECT(gbc.pc(), 0x62d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0016
        gbc.setState(0xfb0, 0x5518, 0xec00, 0xf5e0, 0x416a, 0x2301, 0x0, 0x1);
        gbc.writeMem(0xfb0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5518);
        EXPECT(gbc.pc(), 0xfb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0017
        gbc.setState(0x8dfb, 0xceb2, 0xf980, 0x923b, 0x3d42, 0x87f1, 0x0, 0x1);
        gbc.writeMem(0x8dfb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xceb2);
        EXPECT(gbc.pc(), 0x8dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dfb), 0xcb);
        EXPECT(gbc.readMem(0x8dfc), 0xab);
        // CB AB 0018
        gbc.setState(0xcc7a, 0x6f82, 0xc760, 0x55d4, 0xe20d, 0x575, 0x1, 0x1);
        gbc.writeMem(0xcc7a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6f82);
        EXPECT(gbc.pc(), 0xcc7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc7a), 0xcb);
        EXPECT(gbc.readMem(0xcc7b), 0xab);
        // CB AB 001A
        gbc.setState(0x5b3c, 0xc379, 0xb380, 0x8def, 0xaab1, 0xfabb, 0x1, 0x0);
        gbc.writeMem(0x5b3c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc379);
        EXPECT(gbc.pc(), 0x5b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 001B
        gbc.setState(0x99af, 0x7a19, 0x9450, 0x580f, 0x7538, 0xe727, 0x1, 0x1);
        gbc.writeMem(0x99af, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7a19);
        EXPECT(gbc.pc(), 0x99b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99af), 0xcb);
        EXPECT(gbc.readMem(0x99b0), 0xab);
        // CB AB 001C
        gbc.setState(0x8203, 0x342b, 0xd0e0, 0xdb58, 0x6de3, 0x8fa2, 0x0, 0x1);
        gbc.writeMem(0x8203, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x342b);
        EXPECT(gbc.pc(), 0x8205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8203), 0xcb);
        EXPECT(gbc.readMem(0x8204), 0xab);
        // CB AB 001D
        gbc.setState(0x918d, 0x6673, 0x61e0, 0xf177, 0x775b, 0x5c42, 0x1, 0x0);
        gbc.writeMem(0x918d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6673);
        EXPECT(gbc.pc(), 0x918f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918d), 0xcb);
        EXPECT(gbc.readMem(0x918e), 0xab);
        // CB AB 001E
        gbc.setState(0xaa9c, 0xdef3, 0xbff0, 0xc28b, 0x5c56, 0x8c26, 0x1, 0x0);
        gbc.writeMem(0xaa9c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xdef3);
        EXPECT(gbc.pc(), 0xaa9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9c), 0xcb);
        EXPECT(gbc.readMem(0xaa9d), 0xab);
        // CB AB 0020
        gbc.setState(0x1585, 0x1718, 0x9070, 0x9a96, 0x5dca, 0x6933, 0x0, 0x0);
        gbc.writeMem(0x1585, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1718);
        EXPECT(gbc.pc(), 0x1587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0021
        gbc.setState(0x3347, 0x9c0f, 0x8700, 0x3e38, 0x63ce, 0xd249, 0x1, 0x1);
        gbc.writeMem(0x3347, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9c0f);
        EXPECT(gbc.pc(), 0x3349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0022
        gbc.setState(0xe39, 0xc320, 0xbd70, 0x81a4, 0xa5e3, 0xe41e, 0x1, 0x0);
        gbc.writeMem(0xe39, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc320);
        EXPECT(gbc.pc(), 0xe3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0023
        gbc.setState(0x8f7, 0x196b, 0x30e0, 0x6770, 0x36fc, 0x75b7, 0x1, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x196b);
        EXPECT(gbc.pc(), 0x8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0024
        gbc.setState(0xad49, 0x9ef0, 0x530, 0x2757, 0xc634, 0x3585, 0x1, 0x1);
        gbc.writeMem(0xad49, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9ef0);
        EXPECT(gbc.pc(), 0xad4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad49), 0xcb);
        EXPECT(gbc.readMem(0xad4a), 0xab);
        // CB AB 0025
        gbc.setState(0x750d, 0x86a4, 0x4aa0, 0x4a6f, 0x1c3a, 0xf477, 0x0, 0x0);
        gbc.writeMem(0x750d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x86a4);
        EXPECT(gbc.pc(), 0x750f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0027
        gbc.setState(0x61a7, 0xe705, 0x7b50, 0x8037, 0xf1d2, 0xe9f1, 0x0, 0x1);
        gbc.writeMem(0x61a7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe705);
        EXPECT(gbc.pc(), 0x61a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0028
        gbc.setState(0x6ce0, 0x3aae, 0x2390, 0x1912, 0x953e, 0x262e, 0x0, 0x1);
        gbc.writeMem(0x6ce0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3aae);
        EXPECT(gbc.pc(), 0x6ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0029
        gbc.setState(0x1f4c, 0x21e1, 0x3400, 0xf59, 0x5e6a, 0x15da, 0x0, 0x1);
        gbc.writeMem(0x1f4c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x21e1);
        EXPECT(gbc.pc(), 0x1f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 002A
        gbc.setState(0x8044, 0x3665, 0xa550, 0x9405, 0xebf3, 0xd37f, 0x1, 0x0);
        gbc.writeMem(0x8044, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3665);
        EXPECT(gbc.pc(), 0x8046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8044), 0xcb);
        EXPECT(gbc.readMem(0x8045), 0xab);
        // CB AB 002B
        gbc.setState(0x5189, 0x1b08, 0x3b30, 0x8a6, 0x3b1f, 0xed65, 0x1, 0x1);
        gbc.writeMem(0x5189, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1b08);
        EXPECT(gbc.pc(), 0x518b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 002C
        gbc.setState(0xcaf3, 0x6133, 0x6a40, 0x2a36, 0x1bd1, 0x442b, 0x1, 0x1);
        gbc.writeMem(0xcaf3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6133);
        EXPECT(gbc.pc(), 0xcaf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf3), 0xcb);
        EXPECT(gbc.readMem(0xcaf4), 0xab);
        // CB AB 002D
        gbc.setState(0x6042, 0x1d70, 0x6a70, 0x1f0e, 0x4a8d, 0xe371, 0x1, 0x1);
        gbc.writeMem(0x6042, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1d70);
        EXPECT(gbc.pc(), 0x6044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 002E
        gbc.setState(0x5677, 0xd0f1, 0xf230, 0x13d7, 0x873f, 0xa0b5, 0x0, 0x0);
        gbc.writeMem(0x5677, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd0f1);
        EXPECT(gbc.pc(), 0x5679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 002F
        gbc.setState(0xb721, 0x3b33, 0x6210, 0x73af, 0x606e, 0xb0c0, 0x1, 0x0);
        gbc.writeMem(0xb721, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3b33);
        EXPECT(gbc.pc(), 0xb723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb721), 0xcb);
        EXPECT(gbc.readMem(0xb722), 0xab);
        // CB AB 0030
        gbc.setState(0xc4c3, 0xe0c3, 0x6b30, 0x5867, 0x40e4, 0x83a3, 0x0, 0x1);
        gbc.writeMem(0xc4c3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe0c3);
        EXPECT(gbc.pc(), 0xc4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c3), 0xcb);
        EXPECT(gbc.readMem(0xc4c4), 0xab);
        // CB AB 0031
        gbc.setState(0x802f, 0x9cb7, 0xb0d0, 0x1fb1, 0x8438, 0xf659, 0x1, 0x1);
        gbc.writeMem(0x802f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9cb7);
        EXPECT(gbc.pc(), 0x8031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x802f), 0xcb);
        EXPECT(gbc.readMem(0x8030), 0xab);
        // CB AB 0032
        gbc.setState(0x8b3, 0x31d6, 0xf0e0, 0xb2a6, 0xa9c2, 0xd40d, 0x1, 0x0);
        gbc.writeMem(0x8b3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x31d6);
        EXPECT(gbc.pc(), 0x8b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0033
        gbc.setState(0xb1d6, 0x6eb3, 0x27f0, 0x3ad8, 0x93bf, 0x4977, 0x1, 0x0);
        gbc.writeMem(0xb1d6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6eb3);
        EXPECT(gbc.pc(), 0xb1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1d6), 0xcb);
        EXPECT(gbc.readMem(0xb1d7), 0xab);
        // CB AB 0034
        gbc.setState(0xe62e, 0x5855, 0x29d0, 0xaec0, 0xfae3, 0x9b9, 0x1, 0x1);
        gbc.writeMem(0xe62e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5855);
        EXPECT(gbc.pc(), 0xe630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62e), 0xcb);
        EXPECT(gbc.readMem(0xe62f), 0xab);
        // CB AB 0035
        gbc.setState(0xc7ac, 0x1d90, 0x2ba0, 0xb939, 0x1041, 0x5361, 0x0, 0x1);
        gbc.writeMem(0xc7ac, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1d90);
        EXPECT(gbc.pc(), 0xc7ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ac), 0xcb);
        EXPECT(gbc.readMem(0xc7ad), 0xab);
        // CB AB 0036
        gbc.setState(0x1229, 0x24e3, 0x4a00, 0xd9c0, 0x7bb4, 0x964f, 0x1, 0x1);
        gbc.writeMem(0x1229, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x24e3);
        EXPECT(gbc.pc(), 0x122b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0037
        gbc.setState(0x81da, 0xe45a, 0x13b0, 0x3bf6, 0xce7e, 0x9581, 0x0, 0x1);
        gbc.writeMem(0x81da, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe45a);
        EXPECT(gbc.pc(), 0x81dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81da), 0xcb);
        EXPECT(gbc.readMem(0x81db), 0xab);
        // CB AB 0038
        gbc.setState(0xc8ad, 0x88b, 0xe6d0, 0x7bca, 0x37e4, 0xc6bd, 0x1, 0x1);
        gbc.writeMem(0xc8ad, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x88b);
        EXPECT(gbc.pc(), 0xc8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ad), 0xcb);
        EXPECT(gbc.readMem(0xc8ae), 0xab);
        // CB AB 0039
        gbc.setState(0xd0a7, 0x191e, 0xe1d0, 0xfc5a, 0xf0a9, 0x193b, 0x1, 0x1);
        gbc.writeMem(0xd0a7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x191e);
        EXPECT(gbc.pc(), 0xd0a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a7), 0xcb);
        EXPECT(gbc.readMem(0xd0a8), 0xab);
        // CB AB 003A
        gbc.setState(0xb397, 0x5a97, 0x8cc0, 0x25c0, 0xe9c2, 0x8509, 0x0, 0x1);
        gbc.writeMem(0xb397, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5a97);
        EXPECT(gbc.pc(), 0xb399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb397), 0xcb);
        EXPECT(gbc.readMem(0xb398), 0xab);
        // CB AB 003B
        gbc.setState(0xeef7, 0x1437, 0xa270, 0x178a, 0x6202, 0xf303, 0x0, 0x1);
        gbc.writeMem(0xeef7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1437);
        EXPECT(gbc.pc(), 0xeef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef7), 0xcb);
        EXPECT(gbc.readMem(0xeef8), 0xab);
        // CB AB 003C
        gbc.setState(0xe208, 0x2811, 0x4c50, 0xcf66, 0x8d5f, 0x9ffc, 0x1, 0x0);
        gbc.writeMem(0xe208, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2811);
        EXPECT(gbc.pc(), 0xe20a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe208), 0xcb);
        EXPECT(gbc.readMem(0xe209), 0xab);
        // CB AB 003D
        gbc.setState(0xeaad, 0x2521, 0x8860, 0x310d, 0xe935, 0x6dd7, 0x0, 0x1);
        gbc.writeMem(0xeaad, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2521);
        EXPECT(gbc.pc(), 0xeaaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaad), 0xcb);
        EXPECT(gbc.readMem(0xeaae), 0xab);
        // CB AB 003E
        gbc.setState(0xc7ca, 0x513f, 0x5ba0, 0xd489, 0x53b1, 0x8ba0, 0x0, 0x0);
        gbc.writeMem(0xc7ca, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x513f);
        EXPECT(gbc.pc(), 0xc7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ca), 0xcb);
        EXPECT(gbc.readMem(0xc7cb), 0xab);
        // CB AB 003F
        gbc.setState(0xd68e, 0xb59, 0xce60, 0x4b0d, 0x36b2, 0x89b, 0x0, 0x0);
        gbc.writeMem(0xd68e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb59);
        EXPECT(gbc.pc(), 0xd690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd68e), 0xcb);
        EXPECT(gbc.readMem(0xd68f), 0xab);
        // CB AB 0040
        gbc.setState(0xeed9, 0x5cdc, 0x2d20, 0xbee1, 0x3c07, 0x1e22, 0x1, 0x0);
        gbc.writeMem(0xeed9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5cdc);
        EXPECT(gbc.pc(), 0xeedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed9), 0xcb);
        EXPECT(gbc.readMem(0xeeda), 0xab);
        // CB AB 0041
        gbc.setState(0x448d, 0xfb4c, 0xaab0, 0x44ae, 0x94b8, 0xd4e6, 0x0, 0x1);
        gbc.writeMem(0x448d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfb4c);
        EXPECT(gbc.pc(), 0x448f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0042
        gbc.setState(0x5d71, 0xc403, 0xa6d0, 0xbaae, 0xb060, 0xd4f6, 0x0, 0x0);
        gbc.writeMem(0x5d71, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc403);
        EXPECT(gbc.pc(), 0x5d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0043
        gbc.setState(0x72ed, 0xf607, 0x4e90, 0x789b, 0xf46e, 0xb6f4, 0x0, 0x1);
        gbc.writeMem(0x72ed, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf607);
        EXPECT(gbc.pc(), 0x72ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0044
        gbc.setState(0x2710, 0x4a9d, 0x7650, 0xdfdd, 0x1859, 0x753e, 0x1, 0x1);
        gbc.writeMem(0x2710, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4a9d);
        EXPECT(gbc.pc(), 0x2712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0045
        gbc.setState(0x20a0, 0x711c, 0xc6d0, 0x27ae, 0x74e1, 0x2890, 0x0, 0x1);
        gbc.writeMem(0x20a0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x711c);
        EXPECT(gbc.pc(), 0x20a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0046
        gbc.setState(0x6b39, 0x43a9, 0xe170, 0x4395, 0x3f20, 0x88eb, 0x1, 0x1);
        gbc.writeMem(0x6b39, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x43a9);
        EXPECT(gbc.pc(), 0x6b3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0047
        gbc.setState(0x4e94, 0xcbdf, 0x61c0, 0x409b, 0xb6e1, 0x737c, 0x0, 0x1);
        gbc.writeMem(0x4e94, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcbdf);
        EXPECT(gbc.pc(), 0x4e96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0049
        gbc.setState(0x3b13, 0x4d7, 0x5330, 0x2c25, 0x84f4, 0x1fde, 0x0, 0x0);
        gbc.writeMem(0x3b13, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4d7);
        EXPECT(gbc.pc(), 0x3b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 004A
        gbc.setState(0x88c2, 0x39b4, 0xb370, 0x6b90, 0x5a7e, 0xfc60, 0x0, 0x1);
        gbc.writeMem(0x88c2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x39b4);
        EXPECT(gbc.pc(), 0x88c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c2), 0xcb);
        EXPECT(gbc.readMem(0x88c3), 0xab);
        // CB AB 004B
        gbc.setState(0xdd62, 0x9fc, 0x5fc0, 0x226f, 0xee77, 0x95a, 0x1, 0x0);
        gbc.writeMem(0xdd62, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9fc);
        EXPECT(gbc.pc(), 0xdd64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd62), 0xcb);
        EXPECT(gbc.readMem(0xdd63), 0xab);
        // CB AB 004D
        gbc.setState(0x490f, 0x4e23, 0xe820, 0x9b69, 0xc0f8, 0x9700, 0x0, 0x0);
        gbc.writeMem(0x490f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4e23);
        EXPECT(gbc.pc(), 0x4911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 004E
        gbc.setState(0x5f68, 0x8981, 0xb7c0, 0x6f63, 0x2137, 0xd45e, 0x1, 0x1);
        gbc.writeMem(0x5f68, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8981);
        EXPECT(gbc.pc(), 0x5f6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 004F
        gbc.setState(0xdba6, 0xca87, 0x6b80, 0x6e8f, 0x582d, 0xe09d, 0x0, 0x1);
        gbc.writeMem(0xdba6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xca87);
        EXPECT(gbc.pc(), 0xdba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba6), 0xcb);
        EXPECT(gbc.readMem(0xdba7), 0xab);
        // CB AB 0050
        gbc.setState(0x36ff, 0x8d5, 0x71c0, 0x8c8c, 0xb17f, 0x163e, 0x0, 0x1);
        gbc.writeMem(0x36ff, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8d5);
        EXPECT(gbc.pc(), 0x3701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0051
        gbc.setState(0x9038, 0x3ffe, 0x26e0, 0xaf3c, 0xb7a3, 0x302a, 0x1, 0x1);
        gbc.writeMem(0x9038, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3ffe);
        EXPECT(gbc.pc(), 0x903a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9038), 0xcb);
        EXPECT(gbc.readMem(0x9039), 0xab);
        // CB AB 0052
        gbc.setState(0xd878, 0x64a8, 0x9f10, 0x9078, 0x49dd, 0xc655, 0x0, 0x0);
        gbc.writeMem(0xd878, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x64a8);
        EXPECT(gbc.pc(), 0xd87a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd878), 0xcb);
        EXPECT(gbc.readMem(0xd879), 0xab);
        // CB AB 0053
        gbc.setState(0x285f, 0x2582, 0xe2e0, 0x8aee, 0x9c53, 0x6102, 0x0, 0x0);
        gbc.writeMem(0x285f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2582);
        EXPECT(gbc.pc(), 0x2861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0054
        gbc.setState(0x471b, 0xcc39, 0x4910, 0x6efe, 0x632d, 0xa02d, 0x0, 0x0);
        gbc.writeMem(0x471b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xcc39);
        EXPECT(gbc.pc(), 0x471d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0055
        gbc.setState(0x6ebe, 0x4e69, 0x1bf0, 0xd29e, 0x32f0, 0xb02b, 0x0, 0x0);
        gbc.writeMem(0x6ebe, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4e69);
        EXPECT(gbc.pc(), 0x6ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0056
        gbc.setState(0xb3f4, 0x4f8f, 0x570, 0xabec, 0x5058, 0xaa7b, 0x1, 0x1);
        gbc.writeMem(0xb3f4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4f8f);
        EXPECT(gbc.pc(), 0xb3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f4), 0xcb);
        EXPECT(gbc.readMem(0xb3f5), 0xab);
        // CB AB 0057
        gbc.setState(0x9182, 0xf709, 0x52c0, 0xa99c, 0x6ddf, 0x7337, 0x1, 0x0);
        gbc.writeMem(0x9182, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf709);
        EXPECT(gbc.pc(), 0x9184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9182), 0xcb);
        EXPECT(gbc.readMem(0x9183), 0xab);
        // CB AB 0058
        gbc.setState(0xbe0d, 0x255d, 0xca70, 0xbafb, 0xdeea, 0xc28b, 0x0, 0x1);
        gbc.writeMem(0xbe0d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x255d);
        EXPECT(gbc.pc(), 0xbe0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0d), 0xcb);
        EXPECT(gbc.readMem(0xbe0e), 0xab);
        // CB AB 0059
        gbc.setState(0x8e3f, 0x9f05, 0x2320, 0x62af, 0x1ab3, 0xaa4, 0x0, 0x1);
        gbc.writeMem(0x8e3f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9f05);
        EXPECT(gbc.pc(), 0x8e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3f), 0xcb);
        EXPECT(gbc.readMem(0x8e40), 0xab);
        // CB AB 005A
        gbc.setState(0x83e0, 0xef26, 0x2f60, 0x6cec, 0x7fa9, 0x1a71, 0x0, 0x1);
        gbc.writeMem(0x83e0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xef26);
        EXPECT(gbc.pc(), 0x83e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e0), 0xcb);
        EXPECT(gbc.readMem(0x83e1), 0xab);
        // CB AB 005B
        gbc.setState(0xb4eb, 0xcd49, 0x500, 0xde78, 0x8a1e, 0x6726, 0x0, 0x0);
        gbc.writeMem(0xb4eb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcd49);
        EXPECT(gbc.pc(), 0xb4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4eb), 0xcb);
        EXPECT(gbc.readMem(0xb4ec), 0xab);
        // CB AB 005C
        gbc.setState(0x7c43, 0xdee7, 0xa8b0, 0x2930, 0xd0c0, 0x922a, 0x0, 0x1);
        gbc.writeMem(0x7c43, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdee7);
        EXPECT(gbc.pc(), 0x7c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 005D
        gbc.setState(0x6f87, 0x87ed, 0xc7b0, 0x30a6, 0x9ff, 0x602b, 0x1, 0x1);
        gbc.writeMem(0x6f87, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x87ed);
        EXPECT(gbc.pc(), 0x6f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 005E
        gbc.setState(0xbf9b, 0xe113, 0xa390, 0x5c90, 0x740f, 0x2da, 0x1, 0x1);
        gbc.writeMem(0xbf9b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe113);
        EXPECT(gbc.pc(), 0xbf9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9b), 0xcb);
        EXPECT(gbc.readMem(0xbf9c), 0xab);
        // CB AB 005F
        gbc.setState(0xb97a, 0x2e2a, 0xce80, 0x81ad, 0xfc0f, 0x90d0, 0x0, 0x0);
        gbc.writeMem(0xb97a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2e2a);
        EXPECT(gbc.pc(), 0xb97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb97a), 0xcb);
        EXPECT(gbc.readMem(0xb97b), 0xab);
        // CB AB 0060
        gbc.setState(0xad4e, 0x9dc0, 0x2960, 0xe99, 0x98b4, 0xb745, 0x1, 0x0);
        gbc.writeMem(0xad4e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9dc0);
        EXPECT(gbc.pc(), 0xad50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4e), 0xcb);
        EXPECT(gbc.readMem(0xad4f), 0xab);
        // CB AB 0061
        gbc.setState(0xe524, 0x9e96, 0xd430, 0x462e, 0x62f2, 0x377e, 0x1, 0x0);
        gbc.writeMem(0xe524, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9e96);
        EXPECT(gbc.pc(), 0xe526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe524), 0xcb);
        EXPECT(gbc.readMem(0xe525), 0xab);
        // CB AB 0062
        gbc.setState(0xcd5e, 0xed45, 0x4490, 0xd40b, 0x5c39, 0x8557, 0x1, 0x0);
        gbc.writeMem(0xcd5e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xed45);
        EXPECT(gbc.pc(), 0xcd60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd5e), 0xcb);
        EXPECT(gbc.readMem(0xcd5f), 0xab);
        // CB AB 0063
        gbc.setState(0xaf24, 0xfe0c, 0xbda0, 0x49be, 0x99d8, 0x6c5b, 0x0, 0x0);
        gbc.writeMem(0xaf24, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xfe0c);
        EXPECT(gbc.pc(), 0xaf26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf24), 0xcb);
        EXPECT(gbc.readMem(0xaf25), 0xab);
        // CB AB 0064
        gbc.setState(0x5796, 0x16e3, 0x7530, 0xc1b8, 0x42a5, 0x6d9f, 0x0, 0x0);
        gbc.writeMem(0x5796, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x16e3);
        EXPECT(gbc.pc(), 0x5798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0065
        gbc.setState(0x81fd, 0xef82, 0xaf00, 0xbbe3, 0x8536, 0x456e, 0x0, 0x0);
        gbc.writeMem(0x81fd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xef82);
        EXPECT(gbc.pc(), 0x81ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fd), 0xcb);
        EXPECT(gbc.readMem(0x81fe), 0xab);
        // CB AB 0066
        gbc.setState(0xbdcd, 0xcf23, 0xeeb0, 0x8825, 0x24f5, 0x677c, 0x1, 0x0);
        gbc.writeMem(0xbdcd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcf23);
        EXPECT(gbc.pc(), 0xbdcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdcd), 0xcb);
        EXPECT(gbc.readMem(0xbdce), 0xab);
        // CB AB 0067
        gbc.setState(0x3b49, 0x8581, 0xd030, 0x2d83, 0xa08e, 0x9094, 0x0, 0x1);
        gbc.writeMem(0x3b49, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8581);
        EXPECT(gbc.pc(), 0x3b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0068
        gbc.setState(0xc639, 0x3d8d, 0x690, 0xe52d, 0x7d46, 0x5e6f, 0x1, 0x1);
        gbc.writeMem(0xc639, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3d8d);
        EXPECT(gbc.pc(), 0xc63b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc639), 0xcb);
        EXPECT(gbc.readMem(0xc63a), 0xab);
        // CB AB 0069
        gbc.setState(0x5741, 0x2527, 0x9d10, 0x40, 0xf580, 0xc740, 0x0, 0x0);
        gbc.writeMem(0x5741, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2527);
        EXPECT(gbc.pc(), 0x5743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 006A
        gbc.setState(0x71cd, 0xb1fe, 0x7c0, 0x10c, 0x8fcb, 0x88a1, 0x0, 0x0);
        gbc.writeMem(0x71cd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb1fe);
        EXPECT(gbc.pc(), 0x71cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 006B
        gbc.setState(0x9648, 0xaabc, 0x2a00, 0x8917, 0xba29, 0xf290, 0x0, 0x1);
        gbc.writeMem(0x9648, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaabc);
        EXPECT(gbc.pc(), 0x964a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9648), 0xcb);
        EXPECT(gbc.readMem(0x9649), 0xab);
        // CB AB 006C
        gbc.setState(0xcfff, 0x3e23, 0xd730, 0x8e3c, 0xbeb9, 0xd2a4, 0x1, 0x1);
        gbc.writeMem(0xcfff, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3e23);
        EXPECT(gbc.pc(), 0xd001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfff), 0xcb);
        EXPECT(gbc.readMem(0xd000), 0xab);
        // CB AB 006D
        gbc.setState(0x8847, 0x86f9, 0x5130, 0xd16c, 0xfc3b, 0x14d, 0x1, 0x0);
        gbc.writeMem(0x8847, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x86f9);
        EXPECT(gbc.pc(), 0x8849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8847), 0xcb);
        EXPECT(gbc.readMem(0x8848), 0xab);
        // CB AB 006E
        gbc.setState(0x5932, 0x89d9, 0x5100, 0x8aeb, 0xc1d4, 0x7618, 0x1, 0x0);
        gbc.writeMem(0x5932, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x89d9);
        EXPECT(gbc.pc(), 0x5934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 006F
        gbc.setState(0x1307, 0xb24, 0x2340, 0x4c6a, 0xecb4, 0x84ec, 0x1, 0x1);
        gbc.writeMem(0x1307, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb24);
        EXPECT(gbc.pc(), 0x1309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0070
        gbc.setState(0x98c8, 0xdd79, 0xf3b0, 0x6c3c, 0xc76f, 0x268b, 0x1, 0x1);
        gbc.writeMem(0x98c8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdd79);
        EXPECT(gbc.pc(), 0x98ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c8), 0xcb);
        EXPECT(gbc.readMem(0x98c9), 0xab);
        // CB AB 0071
        gbc.setState(0x6fab, 0x84d5, 0x15e0, 0x5134, 0x8428, 0xfd6e, 0x1, 0x0);
        gbc.writeMem(0x6fab, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x84d5);
        EXPECT(gbc.pc(), 0x6fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0072
        gbc.setState(0xb069, 0xb8de, 0xfdf0, 0x36b0, 0xf10e, 0x3e05, 0x0, 0x0);
        gbc.writeMem(0xb069, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb8de);
        EXPECT(gbc.pc(), 0xb06b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb069), 0xcb);
        EXPECT(gbc.readMem(0xb06a), 0xab);
        // CB AB 0073
        gbc.setState(0x79fb, 0xf1d2, 0xeea0, 0xd83, 0x249e, 0x3a5a, 0x1, 0x0);
        gbc.writeMem(0x79fb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf1d2);
        EXPECT(gbc.pc(), 0x79fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0074
        gbc.setState(0xb317, 0xc323, 0xc290, 0x1622, 0x6e3, 0x962e, 0x1, 0x1);
        gbc.writeMem(0xb317, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc323);
        EXPECT(gbc.pc(), 0xb319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb317), 0xcb);
        EXPECT(gbc.readMem(0xb318), 0xab);
        // CB AB 0075
        gbc.setState(0x3170, 0x93da, 0x7a40, 0x69af, 0x9f86, 0x4eee, 0x0, 0x0);
        gbc.writeMem(0x3170, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x93da);
        EXPECT(gbc.pc(), 0x3172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0076
        gbc.setState(0x79ed, 0x34f7, 0x4490, 0x418b, 0xaa9a, 0xc840, 0x0, 0x0);
        gbc.writeMem(0x79ed, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x34f7);
        EXPECT(gbc.pc(), 0x79ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0078
        gbc.setState(0xe4ef, 0xa9e5, 0x5880, 0x2358, 0x9cf0, 0xb0d4, 0x1, 0x1);
        gbc.writeMem(0xe4ef, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa9e5);
        EXPECT(gbc.pc(), 0xe4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ef), 0xcb);
        EXPECT(gbc.readMem(0xe4f0), 0xab);
        // CB AB 0079
        gbc.setState(0x2b0, 0xc1cf, 0x9e40, 0xff87, 0x8074, 0xc302, 0x1, 0x1);
        gbc.writeMem(0x2b0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc1cf);
        EXPECT(gbc.pc(), 0x2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 007A
        gbc.setState(0xb032, 0x6d6e, 0x4cf0, 0xe2e7, 0x62a9, 0x721e, 0x0, 0x0);
        gbc.writeMem(0xb032, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6d6e);
        EXPECT(gbc.pc(), 0xb034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb032), 0xcb);
        EXPECT(gbc.readMem(0xb033), 0xab);
        // CB AB 007B
        gbc.setState(0xc6be, 0x64e, 0xa210, 0x1f40, 0x63d9, 0x958a, 0x1, 0x0);
        gbc.writeMem(0xc6be, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x64e);
        EXPECT(gbc.pc(), 0xc6c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6be), 0xcb);
        EXPECT(gbc.readMem(0xc6bf), 0xab);
        // CB AB 007C
        gbc.setState(0xe123, 0x78a6, 0xa80, 0x859f, 0xec01, 0x36a, 0x1, 0x1);
        gbc.writeMem(0xe123, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x78a6);
        EXPECT(gbc.pc(), 0xe125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe123), 0xcb);
        EXPECT(gbc.readMem(0xe124), 0xab);
        // CB AB 007F
        gbc.setState(0x5cd2, 0xbe98, 0x5bc0, 0xcdbe, 0x4629, 0xd1d7, 0x0, 0x1);
        gbc.writeMem(0x5cd2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbe98);
        EXPECT(gbc.pc(), 0x5cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0080
        gbc.setState(0x1c8d, 0x2c6d, 0xba90, 0x19b2, 0xdd8b, 0xa6fa, 0x1, 0x1);
        gbc.writeMem(0x1c8d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2c6d);
        EXPECT(gbc.pc(), 0x1c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0081
        gbc.setState(0xc2c8, 0xef77, 0xed30, 0x3e99, 0xb3fb, 0x41e4, 0x0, 0x1);
        gbc.writeMem(0xc2c8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xef77);
        EXPECT(gbc.pc(), 0xc2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c8), 0xcb);
        EXPECT(gbc.readMem(0xc2c9), 0xab);
        // CB AB 0082
        gbc.setState(0xe616, 0xacc4, 0x5c40, 0xb4ee, 0xff0, 0xf8fd, 0x1, 0x0);
        gbc.writeMem(0xe616, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xacc4);
        EXPECT(gbc.pc(), 0xe618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe616), 0xcb);
        EXPECT(gbc.readMem(0xe617), 0xab);
        // CB AB 0083
        gbc.setState(0x50eb, 0x2385, 0x65e0, 0xe0bc, 0x462, 0x3761, 0x1, 0x0);
        gbc.writeMem(0x50eb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2385);
        EXPECT(gbc.pc(), 0x50ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0084
        gbc.setState(0xb4b4, 0x85f7, 0x6990, 0x90bd, 0x7ba2, 0xc3c, 0x0, 0x1);
        gbc.writeMem(0xb4b4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x85f7);
        EXPECT(gbc.pc(), 0xb4b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b4), 0xcb);
        EXPECT(gbc.readMem(0xb4b5), 0xab);
        // CB AB 0085
        gbc.setState(0x4951, 0xcdc, 0xe570, 0x486, 0xe4e8, 0x7, 0x0, 0x0);
        gbc.writeMem(0x4951, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcdc);
        EXPECT(gbc.pc(), 0x4953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0086
        gbc.setState(0x1145, 0xb5e, 0xc690, 0x5453, 0xda76, 0x78f1, 0x0, 0x0);
        gbc.writeMem(0x1145, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb5e);
        EXPECT(gbc.pc(), 0x1147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0087
        gbc.setState(0x4c93, 0x7648, 0x9fb0, 0x7502, 0xf028, 0x3de6, 0x0, 0x1);
        gbc.writeMem(0x4c93, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7648);
        EXPECT(gbc.pc(), 0x4c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0088
        gbc.setState(0x6dd3, 0xcdfb, 0xfc50, 0xd4b6, 0xf2e4, 0x8f10, 0x1, 0x1);
        gbc.writeMem(0x6dd3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcdfb);
        EXPECT(gbc.pc(), 0x6dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0089
        gbc.setState(0xacba, 0xc0ed, 0x1a10, 0x40ab, 0x8041, 0x8f4a, 0x1, 0x1);
        gbc.writeMem(0xacba, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc0ed);
        EXPECT(gbc.pc(), 0xacbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacba), 0xcb);
        EXPECT(gbc.readMem(0xacbb), 0xab);
        // CB AB 008A
        gbc.setState(0xb76c, 0xcc42, 0x6e00, 0xd6e4, 0x1cc, 0x966, 0x0, 0x0);
        gbc.writeMem(0xb76c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcc42);
        EXPECT(gbc.pc(), 0xb76e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb76c), 0xcb);
        EXPECT(gbc.readMem(0xb76d), 0xab);
        // CB AB 008B
        gbc.setState(0xdb34, 0x4016, 0x84f0, 0xd7f0, 0x92e8, 0xb0db, 0x1, 0x0);
        gbc.writeMem(0xdb34, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4016);
        EXPECT(gbc.pc(), 0xdb36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb34), 0xcb);
        EXPECT(gbc.readMem(0xdb35), 0xab);
        // CB AB 008C
        gbc.setState(0x5567, 0x9579, 0x96a0, 0x44c, 0x5a2e, 0x86a7, 0x0, 0x0);
        gbc.writeMem(0x5567, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9579);
        EXPECT(gbc.pc(), 0x5569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 008D
        gbc.setState(0xb67, 0x2714, 0x4d30, 0xfe46, 0x8c35, 0x801e, 0x0, 0x1);
        gbc.writeMem(0xb67, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2714);
        EXPECT(gbc.pc(), 0xb69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 008E
        gbc.setState(0x8a53, 0x510, 0x2fe0, 0x825c, 0xea91, 0xfc2f, 0x0, 0x0);
        gbc.writeMem(0x8a53, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x510);
        EXPECT(gbc.pc(), 0x8a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a53), 0xcb);
        EXPECT(gbc.readMem(0x8a54), 0xab);
        // CB AB 008F
        gbc.setState(0xc25d, 0xc665, 0x7710, 0xc3d3, 0x6f6b, 0xad7b, 0x0, 0x0);
        gbc.writeMem(0xc25d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc665);
        EXPECT(gbc.pc(), 0xc25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25d), 0xcb);
        EXPECT(gbc.readMem(0xc25e), 0xab);
        // CB AB 0090
        gbc.setState(0x25ed, 0x2a6e, 0x3700, 0xc6c9, 0xa3b2, 0xe468, 0x0, 0x1);
        gbc.writeMem(0x25ed, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2a6e);
        EXPECT(gbc.pc(), 0x25ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0091
        gbc.setState(0x573e, 0xf1e5, 0x15e0, 0x1513, 0xd822, 0x2996, 0x1, 0x1);
        gbc.writeMem(0x573e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf1e5);
        EXPECT(gbc.pc(), 0x5740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0092
        gbc.setState(0xdc31, 0x7aba, 0xdbb0, 0xc5c9, 0x4118, 0x7ce1, 0x0, 0x0);
        gbc.writeMem(0xdc31, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7aba);
        EXPECT(gbc.pc(), 0xdc33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc31), 0xcb);
        EXPECT(gbc.readMem(0xdc32), 0xab);
        // CB AB 0093
        gbc.setState(0x577f, 0x689c, 0x63e0, 0x27ca, 0x3a9f, 0x7607, 0x0, 0x1);
        gbc.writeMem(0x577f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x689c);
        EXPECT(gbc.pc(), 0x5781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0094
        gbc.setState(0xb941, 0xd9e3, 0xab90, 0x260e, 0x19c0, 0x808f, 0x1, 0x1);
        gbc.writeMem(0xb941, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd9e3);
        EXPECT(gbc.pc(), 0xb943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb941), 0xcb);
        EXPECT(gbc.readMem(0xb942), 0xab);
        // CB AB 0095
        gbc.setState(0x2762, 0xe6bc, 0x8c20, 0xd3, 0xfeb0, 0xed29, 0x0, 0x1);
        gbc.writeMem(0x2762, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe6bc);
        EXPECT(gbc.pc(), 0x2764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0096
        gbc.setState(0xac79, 0x2fe9, 0x6690, 0x3dc9, 0xc499, 0x5371, 0x1, 0x1);
        gbc.writeMem(0xac79, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2fe9);
        EXPECT(gbc.pc(), 0xac7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac79), 0xcb);
        EXPECT(gbc.readMem(0xac7a), 0xab);
        // CB AB 0097
        gbc.setState(0xd15b, 0xc294, 0x5f40, 0x1f73, 0x5c2d, 0xac38, 0x1, 0x1);
        gbc.writeMem(0xd15b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc294);
        EXPECT(gbc.pc(), 0xd15d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15b), 0xcb);
        EXPECT(gbc.readMem(0xd15c), 0xab);
        // CB AB 0098
        gbc.setState(0xd53f, 0x6d37, 0xbbe0, 0xf9ab, 0xf25b, 0x74be, 0x1, 0x0);
        gbc.writeMem(0xd53f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6d37);
        EXPECT(gbc.pc(), 0xd541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd53f), 0xcb);
        EXPECT(gbc.readMem(0xd540), 0xab);
        // CB AB 0099
        gbc.setState(0x6cab, 0x552d, 0x4ec0, 0x2e8d, 0x164a, 0x3908, 0x0, 0x1);
        gbc.writeMem(0x6cab, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x552d);
        EXPECT(gbc.pc(), 0x6cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 009A
        gbc.setState(0xb05c, 0xa4d1, 0xffb0, 0xc401, 0xba27, 0x6068, 0x1, 0x0);
        gbc.writeMem(0xb05c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa4d1);
        EXPECT(gbc.pc(), 0xb05e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05c), 0xcb);
        EXPECT(gbc.readMem(0xb05d), 0xab);
        // CB AB 009B
        gbc.setState(0x591, 0xef6c, 0x1530, 0x5cfa, 0x9617, 0xb651, 0x0, 0x0);
        gbc.writeMem(0x591, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xef6c);
        EXPECT(gbc.pc(), 0x593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 009C
        gbc.setState(0x9fe, 0x5775, 0x8c40, 0x1cf6, 0x9c0f, 0x371d, 0x0, 0x1);
        gbc.writeMem(0x9fe, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5775);
        EXPECT(gbc.pc(), 0xa00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 009D
        gbc.setState(0x38cc, 0x4af8, 0x6d00, 0xb29f, 0x4e8c, 0x75ac, 0x1, 0x1);
        gbc.writeMem(0x38cc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4af8);
        EXPECT(gbc.pc(), 0x38ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 009F
        gbc.setState(0xa4a4, 0x7826, 0x69d0, 0x6221, 0xc61c, 0x82bf, 0x1, 0x0);
        gbc.writeMem(0xa4a4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7826);
        EXPECT(gbc.pc(), 0xa4a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a4), 0xcb);
        EXPECT(gbc.readMem(0xa4a5), 0xab);
        // CB AB 00A0
        gbc.setState(0x4b83, 0x4a36, 0x2070, 0xa22, 0xfc0f, 0xf6ba, 0x1, 0x0);
        gbc.writeMem(0x4b83, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4a36);
        EXPECT(gbc.pc(), 0x4b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00A1
        gbc.setState(0x8b85, 0xa191, 0xeac0, 0x5996, 0xc961, 0x7d90, 0x1, 0x0);
        gbc.writeMem(0x8b85, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa191);
        EXPECT(gbc.pc(), 0x8b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b85), 0xcb);
        EXPECT(gbc.readMem(0x8b86), 0xab);
        // CB AB 00A2
        gbc.setState(0x80f0, 0x744, 0x930, 0x7108, 0x83af, 0x52b1, 0x0, 0x1);
        gbc.writeMem(0x80f0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x744);
        EXPECT(gbc.pc(), 0x80f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f0), 0xcb);
        EXPECT(gbc.readMem(0x80f1), 0xab);
        // CB AB 00A3
        gbc.setState(0x9563, 0x2788, 0x8a50, 0x12f, 0xc0e7, 0xee03, 0x1, 0x0);
        gbc.writeMem(0x9563, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2788);
        EXPECT(gbc.pc(), 0x9565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9563), 0xcb);
        EXPECT(gbc.readMem(0x9564), 0xab);
        // CB AB 00A4
        gbc.setState(0x5de4, 0xe44d, 0xa780, 0xa23a, 0xf9fa, 0x287d, 0x0, 0x0);
        gbc.writeMem(0x5de4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe44d);
        EXPECT(gbc.pc(), 0x5de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00A5
        gbc.setState(0xe528, 0xf8de, 0x8e40, 0x269d, 0x19fe, 0xd116, 0x1, 0x1);
        gbc.writeMem(0xe528, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf8de);
        EXPECT(gbc.pc(), 0xe52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe528), 0xcb);
        EXPECT(gbc.readMem(0xe529), 0xab);
        // CB AB 00A6
        gbc.setState(0xbe64, 0x4c47, 0x19a0, 0x3d22, 0xd30d, 0xd455, 0x1, 0x0);
        gbc.writeMem(0xbe64, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4c47);
        EXPECT(gbc.pc(), 0xbe66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe64), 0xcb);
        EXPECT(gbc.readMem(0xbe65), 0xab);
        // CB AB 00A8
        gbc.setState(0xe760, 0xd964, 0xdc10, 0xacac, 0xbaf3, 0x21a6, 0x0, 0x1);
        gbc.writeMem(0xe760, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd964);
        EXPECT(gbc.pc(), 0xe762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe760), 0xcb);
        EXPECT(gbc.readMem(0xe761), 0xab);
        // CB AB 00A9
        gbc.setState(0x5a8a, 0x3f5e, 0x2f20, 0xddbe, 0xa94, 0xf9e2, 0x0, 0x1);
        gbc.writeMem(0x5a8a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3f5e);
        EXPECT(gbc.pc(), 0x5a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00AA
        gbc.setState(0xb6c5, 0x482a, 0xe880, 0xb76a, 0xe50a, 0x1cfe, 0x0, 0x0);
        gbc.writeMem(0xb6c5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x482a);
        EXPECT(gbc.pc(), 0xb6c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c5), 0xcb);
        EXPECT(gbc.readMem(0xb6c6), 0xab);
        // CB AB 00AB
        gbc.setState(0x565d, 0x79ce, 0xbb00, 0x6270, 0xecfd, 0xb05c, 0x0, 0x0);
        gbc.writeMem(0x565d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x79ce);
        EXPECT(gbc.pc(), 0x565f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00AC
        gbc.setState(0xcfb1, 0x7c84, 0xee80, 0x3b5c, 0xb88b, 0x3d0a, 0x0, 0x0);
        gbc.writeMem(0xcfb1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7c84);
        EXPECT(gbc.pc(), 0xcfb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb1), 0xcb);
        EXPECT(gbc.readMem(0xcfb2), 0xab);
        // CB AB 00AD
        gbc.setState(0x7b15, 0x1758, 0xb180, 0x38c2, 0xb3c5, 0xab03, 0x0, 0x1);
        gbc.writeMem(0x7b15, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1758);
        EXPECT(gbc.pc(), 0x7b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00AE
        gbc.setState(0xb642, 0x542f, 0x78c0, 0x8644, 0xac36, 0x1646, 0x1, 0x1);
        gbc.writeMem(0xb642, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x542f);
        EXPECT(gbc.pc(), 0xb644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb642), 0xcb);
        EXPECT(gbc.readMem(0xb643), 0xab);
        // CB AB 00AF
        gbc.setState(0xe1b4, 0x1fbc, 0x6a0, 0xfeaf, 0x590e, 0x41c, 0x1, 0x0);
        gbc.writeMem(0xe1b4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1fbc);
        EXPECT(gbc.pc(), 0xe1b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b4), 0xcb);
        EXPECT(gbc.readMem(0xe1b5), 0xab);
        // CB AB 00B0
        gbc.setState(0x5e7e, 0x5e2f, 0x34e0, 0xc071, 0xd9e1, 0x268b, 0x1, 0x1);
        gbc.writeMem(0x5e7e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5e2f);
        EXPECT(gbc.pc(), 0x5e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00B1
        gbc.setState(0x7479, 0x9d23, 0xbed0, 0xc43b, 0x5472, 0x9a41, 0x1, 0x0);
        gbc.writeMem(0x7479, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9d23);
        EXPECT(gbc.pc(), 0x747b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00B2
        gbc.setState(0xe85c, 0x8fbd, 0xde10, 0xafe3, 0x2d8e, 0xc1c3, 0x1, 0x1);
        gbc.writeMem(0xe85c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8fbd);
        EXPECT(gbc.pc(), 0xe85e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85c), 0xcb);
        EXPECT(gbc.readMem(0xe85d), 0xab);
        // CB AB 00B3
        gbc.setState(0x13ed, 0x3fad, 0xd530, 0xfbab, 0x21f3, 0xf1d9, 0x0, 0x0);
        gbc.writeMem(0x13ed, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3fad);
        EXPECT(gbc.pc(), 0x13ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00B4
        gbc.setState(0x25cc, 0xe31f, 0x6860, 0x1ac9, 0xf003, 0x7023, 0x0, 0x1);
        gbc.writeMem(0x25cc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe31f);
        EXPECT(gbc.pc(), 0x25ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00B5
        gbc.setState(0x3732, 0xd78e, 0x3f20, 0x804a, 0x331f, 0x13a4, 0x1, 0x0);
        gbc.writeMem(0x3732, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd78e);
        EXPECT(gbc.pc(), 0x3734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00B6
        gbc.setState(0x944f, 0xf21d, 0x9fd0, 0x4804, 0x6d54, 0x1515, 0x1, 0x0);
        gbc.writeMem(0x944f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf21d);
        EXPECT(gbc.pc(), 0x9451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x944f), 0xcb);
        EXPECT(gbc.readMem(0x9450), 0xab);
        // CB AB 00B8
        gbc.setState(0x78e3, 0xed40, 0x38b0, 0xfcde, 0xee91, 0x9ee7, 0x0, 0x0);
        gbc.writeMem(0x78e3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xed40);
        EXPECT(gbc.pc(), 0x78e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00B9
        gbc.setState(0xcbca, 0xfca8, 0x28d0, 0x837, 0x4cb1, 0x4003, 0x1, 0x0);
        gbc.writeMem(0xcbca, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfca8);
        EXPECT(gbc.pc(), 0xcbcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbca), 0xcb);
        EXPECT(gbc.readMem(0xcbcb), 0xab);
        // CB AB 00BA
        gbc.setState(0x4ce1, 0xc9cc, 0x57c0, 0xb63f, 0xbf9c, 0xde3, 0x0, 0x1);
        gbc.writeMem(0x4ce1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc9cc);
        EXPECT(gbc.pc(), 0x4ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00BB
        gbc.setState(0x8106, 0x9c7a, 0x1f80, 0x40d7, 0x1efd, 0xf0a6, 0x1, 0x1);
        gbc.writeMem(0x8106, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9c7a);
        EXPECT(gbc.pc(), 0x8108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8106), 0xcb);
        EXPECT(gbc.readMem(0x8107), 0xab);
        // CB AB 00BC
        gbc.setState(0xbb1f, 0xce49, 0x370, 0xaccb, 0x1a2d, 0xe1fa, 0x0, 0x0);
        gbc.writeMem(0xbb1f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xce49);
        EXPECT(gbc.pc(), 0xbb21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb1f), 0xcb);
        EXPECT(gbc.readMem(0xbb20), 0xab);
        // CB AB 00BD
        gbc.setState(0x6f71, 0xf215, 0x9110, 0x84af, 0x847c, 0xe9f1, 0x1, 0x0);
        gbc.writeMem(0x6f71, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf215);
        EXPECT(gbc.pc(), 0x6f73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00BE
        gbc.setState(0xbf58, 0xb1d7, 0x6570, 0x253a, 0x1d5d, 0x1c7e, 0x1, 0x1);
        gbc.writeMem(0xbf58, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb1d7);
        EXPECT(gbc.pc(), 0xbf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf58), 0xcb);
        EXPECT(gbc.readMem(0xbf59), 0xab);
        // CB AB 00BF
        gbc.setState(0x7a4b, 0xdb38, 0xc350, 0x9ae1, 0xee08, 0xb1be, 0x0, 0x0);
        gbc.writeMem(0x7a4b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdb38);
        EXPECT(gbc.pc(), 0x7a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00C0
        gbc.setState(0x8aa8, 0xefb1, 0x81e0, 0xa96d, 0xfe72, 0x67a9, 0x1, 0x0);
        gbc.writeMem(0x8aa8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xefb1);
        EXPECT(gbc.pc(), 0x8aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa8), 0xcb);
        EXPECT(gbc.readMem(0x8aa9), 0xab);
        // CB AB 00C1
        gbc.setState(0xbfd0, 0xf11d, 0x4110, 0xaf69, 0x7dbf, 0xbdc3, 0x0, 0x0);
        gbc.writeMem(0xbfd0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf11d);
        EXPECT(gbc.pc(), 0xbfd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfd0), 0xcb);
        EXPECT(gbc.readMem(0xbfd1), 0xab);
        // CB AB 00C2
        gbc.setState(0x8f08, 0x374, 0x8620, 0x714e, 0x939c, 0x713, 0x1, 0x0);
        gbc.writeMem(0x8f08, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x374);
        EXPECT(gbc.pc(), 0x8f0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f08), 0xcb);
        EXPECT(gbc.readMem(0x8f09), 0xab);
        // CB AB 00C3
        gbc.setState(0x9356, 0xacc8, 0xf400, 0xcbef, 0xf388, 0x7695, 0x0, 0x0);
        gbc.writeMem(0x9356, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xacc8);
        EXPECT(gbc.pc(), 0x9358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9356), 0xcb);
        EXPECT(gbc.readMem(0x9357), 0xab);
        // CB AB 00C4
        gbc.setState(0x1355, 0x66c6, 0x9740, 0xf79d, 0x8d99, 0xb64c, 0x1, 0x0);
        gbc.writeMem(0x1355, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x66c6);
        EXPECT(gbc.pc(), 0x1357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00C5
        gbc.setState(0x100c, 0xa4b0, 0xfa30, 0xbe85, 0x53f7, 0xfa7d, 0x0, 0x1);
        gbc.writeMem(0x100c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa4b0);
        EXPECT(gbc.pc(), 0x100e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00C6
        gbc.setState(0x19c9, 0xc0e5, 0xfd0, 0x7c03, 0xea13, 0x860, 0x0, 0x0);
        gbc.writeMem(0x19c9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc0e5);
        EXPECT(gbc.pc(), 0x19cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00C7
        gbc.setState(0xa374, 0xa14d, 0xd3c0, 0x3aaa, 0x73a7, 0x475d, 0x0, 0x1);
        gbc.writeMem(0xa374, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa14d);
        EXPECT(gbc.pc(), 0xa376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa374), 0xcb);
        EXPECT(gbc.readMem(0xa375), 0xab);
        // CB AB 00C8
        gbc.setState(0x9eb, 0x408c, 0xd370, 0xf4f4, 0xaa82, 0xbe17, 0x1, 0x1);
        gbc.writeMem(0x9eb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x408c);
        EXPECT(gbc.pc(), 0x9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00C9
        gbc.setState(0x1018, 0xe200, 0x45a0, 0x2dcf, 0x682f, 0xa8eb, 0x0, 0x1);
        gbc.writeMem(0x1018, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe200);
        EXPECT(gbc.pc(), 0x101a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00CA
        gbc.setState(0x3cac, 0xbe0d, 0x550, 0xb4a8, 0xd46b, 0xcba, 0x1, 0x1);
        gbc.writeMem(0x3cac, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbe0d);
        EXPECT(gbc.pc(), 0x3cae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00CB
        gbc.setState(0x9c81, 0x8a26, 0x220, 0x27d8, 0xc0eb, 0xf5fd, 0x1, 0x0);
        gbc.writeMem(0x9c81, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8a26);
        EXPECT(gbc.pc(), 0x9c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c81), 0xcb);
        EXPECT(gbc.readMem(0x9c82), 0xab);
        // CB AB 00CC
        gbc.setState(0x2dd0, 0xe378, 0x17f0, 0x1872, 0xa294, 0x92ee, 0x0, 0x1);
        gbc.writeMem(0x2dd0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe378);
        EXPECT(gbc.pc(), 0x2dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00CD
        gbc.setState(0x83ff, 0x1bb7, 0xe9f0, 0x6d51, 0xfbef, 0x8e6f, 0x0, 0x0);
        gbc.writeMem(0x83ff, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1bb7);
        EXPECT(gbc.pc(), 0x8401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ff), 0xcb);
        EXPECT(gbc.readMem(0x8400), 0xab);
        // CB AB 00CE
        gbc.setState(0xce00, 0xaf26, 0x9ae0, 0x68fa, 0x2c9b, 0xf990, 0x0, 0x0);
        gbc.writeMem(0xce00, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaf26);
        EXPECT(gbc.pc(), 0xce02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce00), 0xcb);
        EXPECT(gbc.readMem(0xce01), 0xab);
        // CB AB 00CF
        gbc.setState(0xb8bc, 0x3064, 0x9410, 0xe013, 0x3f9a, 0x3c0b, 0x1, 0x0);
        gbc.writeMem(0xb8bc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3064);
        EXPECT(gbc.pc(), 0xb8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8bc), 0xcb);
        EXPECT(gbc.readMem(0xb8bd), 0xab);
        // CB AB 00D0
        gbc.setState(0x922a, 0xdbe5, 0x58d0, 0xf47f, 0x8155, 0xc473, 0x1, 0x1);
        gbc.writeMem(0x922a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xdbe5);
        EXPECT(gbc.pc(), 0x922c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922a), 0xcb);
        EXPECT(gbc.readMem(0x922b), 0xab);
        // CB AB 00D1
        gbc.setState(0x2be, 0xa8a6, 0xcd30, 0x9f70, 0x88d9, 0x5b3, 0x0, 0x0);
        gbc.writeMem(0x2be, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa8a6);
        EXPECT(gbc.pc(), 0x2c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00D2
        gbc.setState(0x7da3, 0xe34c, 0x94f0, 0x7db0, 0x3a2e, 0xf15f, 0x1, 0x0);
        gbc.writeMem(0x7da3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe34c);
        EXPECT(gbc.pc(), 0x7da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00D3
        gbc.setState(0x360, 0x92ce, 0x62c0, 0xe83f, 0x22e4, 0x43b, 0x1, 0x1);
        gbc.writeMem(0x360, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x92ce);
        EXPECT(gbc.pc(), 0x362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00D4
        gbc.setState(0xac09, 0xb542, 0xcd40, 0x22ff, 0xc429, 0x8e0c, 0x1, 0x1);
        gbc.writeMem(0xac09, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb542);
        EXPECT(gbc.pc(), 0xac0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac09), 0xcb);
        EXPECT(gbc.readMem(0xac0a), 0xab);
        // CB AB 00D5
        gbc.setState(0xd0fa, 0x61bc, 0xe3d0, 0x509, 0x27d8, 0x754f, 0x0, 0x0);
        gbc.writeMem(0xd0fa, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x61bc);
        EXPECT(gbc.pc(), 0xd0fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0fa), 0xcb);
        EXPECT(gbc.readMem(0xd0fb), 0xab);
        // CB AB 00D6
        gbc.setState(0x2e3c, 0x4b03, 0xa280, 0x59ac, 0xab65, 0x24e7, 0x0, 0x0);
        gbc.writeMem(0x2e3c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4b03);
        EXPECT(gbc.pc(), 0x2e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00D7
        gbc.setState(0x3dc3, 0xfb68, 0xdc40, 0xa303, 0xd8c9, 0xd29e, 0x1, 0x0);
        gbc.writeMem(0x3dc3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfb68);
        EXPECT(gbc.pc(), 0x3dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00DA
        gbc.setState(0xa90f, 0x37c4, 0x7df0, 0xf9b1, 0x4a2f, 0xbff, 0x0, 0x0);
        gbc.writeMem(0xa90f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x37c4);
        EXPECT(gbc.pc(), 0xa911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa90f), 0xcb);
        EXPECT(gbc.readMem(0xa910), 0xab);
        // CB AB 00DB
        gbc.setState(0x8ca4, 0x10de, 0x9880, 0x4c76, 0x358b, 0x7695, 0x1, 0x0);
        gbc.writeMem(0x8ca4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x10de);
        EXPECT(gbc.pc(), 0x8ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca4), 0xcb);
        EXPECT(gbc.readMem(0x8ca5), 0xab);
        // CB AB 00DC
        gbc.setState(0x3bb4, 0x6e8b, 0x3620, 0x9bdc, 0x6ebd, 0x93d5, 0x1, 0x0);
        gbc.writeMem(0x3bb4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6e8b);
        EXPECT(gbc.pc(), 0x3bb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00DD
        gbc.setState(0x5129, 0xfdcc, 0xe6f0, 0xac15, 0x6294, 0x5457, 0x0, 0x0);
        gbc.writeMem(0x5129, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfdcc);
        EXPECT(gbc.pc(), 0x512b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00DE
        gbc.setState(0x53b2, 0x6ce9, 0x6330, 0x48cc, 0x4687, 0xb14e, 0x0, 0x0);
        gbc.writeMem(0x53b2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6ce9);
        EXPECT(gbc.pc(), 0x53b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00DF
        gbc.setState(0xc27e, 0x35f, 0xde60, 0x53a2, 0xf4aa, 0xd548, 0x1, 0x0);
        gbc.writeMem(0xc27e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x35f);
        EXPECT(gbc.pc(), 0xc280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27e), 0xcb);
        EXPECT(gbc.readMem(0xc27f), 0xab);
        // CB AB 00E0
        gbc.setState(0x90a0, 0xcc78, 0x13b0, 0x2a15, 0x4637, 0xf4b7, 0x1, 0x0);
        gbc.writeMem(0x90a0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcc78);
        EXPECT(gbc.pc(), 0x90a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a0), 0xcb);
        EXPECT(gbc.readMem(0x90a1), 0xab);
        // CB AB 00E2
        gbc.setState(0x7fc6, 0x316b, 0xc6b0, 0xb7da, 0x451d, 0xb29b, 0x0, 0x0);
        gbc.writeMem(0x7fc6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x316b);
        EXPECT(gbc.pc(), 0x7fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00E4
        gbc.setState(0x947, 0x8b88, 0xe860, 0x7c48, 0x709f, 0x460d, 0x1, 0x1);
        gbc.writeMem(0x947, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8b88);
        EXPECT(gbc.pc(), 0x949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00E5
        gbc.setState(0xce9a, 0x901e, 0x630, 0xa858, 0xcef9, 0xd7db, 0x1, 0x1);
        gbc.writeMem(0xce9a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x901e);
        EXPECT(gbc.pc(), 0xce9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9a), 0xcb);
        EXPECT(gbc.readMem(0xce9b), 0xab);
        // CB AB 00E6
        gbc.setState(0x12ed, 0x5149, 0x5cb0, 0x18da, 0x2966, 0x23f7, 0x0, 0x1);
        gbc.writeMem(0x12ed, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5149);
        EXPECT(gbc.pc(), 0x12ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00E7
        gbc.setState(0xe5d7, 0x3936, 0xdee0, 0xe8c7, 0x8f52, 0xede6, 0x0, 0x1);
        gbc.writeMem(0xe5d7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3936);
        EXPECT(gbc.pc(), 0xe5d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d7), 0xcb);
        EXPECT(gbc.readMem(0xe5d8), 0xab);
        // CB AB 00E8
        gbc.setState(0xeb4a, 0xa8ef, 0xf6f0, 0xabd7, 0xb92e, 0xd13f, 0x1, 0x1);
        gbc.writeMem(0xeb4a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa8ef);
        EXPECT(gbc.pc(), 0xeb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb4a), 0xcb);
        EXPECT(gbc.readMem(0xeb4b), 0xab);
        // CB AB 00E9
        gbc.setState(0xb1b5, 0x6a62, 0xdf60, 0xc2dc, 0x693, 0x916e, 0x1, 0x1);
        gbc.writeMem(0xb1b5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6a62);
        EXPECT(gbc.pc(), 0xb1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b5), 0xcb);
        EXPECT(gbc.readMem(0xb1b6), 0xab);
        // CB AB 00EA
        gbc.setState(0x3404, 0x7ec9, 0x8820, 0x75a7, 0x97b7, 0x86ad, 0x1, 0x0);
        gbc.writeMem(0x3404, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7ec9);
        EXPECT(gbc.pc(), 0x3406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00EB
        gbc.setState(0xe1b7, 0x144b, 0x2030, 0xd5a5, 0xc878, 0xf794, 0x0, 0x0);
        gbc.writeMem(0xe1b7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x144b);
        EXPECT(gbc.pc(), 0xe1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b7), 0xcb);
        EXPECT(gbc.readMem(0xe1b8), 0xab);
        // CB AB 00EC
        gbc.setState(0xa6c9, 0x5996, 0x4200, 0xfb9f, 0x9188, 0xb2e0, 0x1, 0x1);
        gbc.writeMem(0xa6c9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5996);
        EXPECT(gbc.pc(), 0xa6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c9), 0xcb);
        EXPECT(gbc.readMem(0xa6ca), 0xab);
        // CB AB 00EE
        gbc.setState(0xb409, 0x9e3c, 0x1060, 0xdb35, 0x7fee, 0x1483, 0x1, 0x1);
        gbc.writeMem(0xb409, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9e3c);
        EXPECT(gbc.pc(), 0xb40b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb409), 0xcb);
        EXPECT(gbc.readMem(0xb40a), 0xab);
        // CB AB 00EF
        gbc.setState(0x9f5d, 0xdc67, 0xf570, 0x68cf, 0x714b, 0x83f9, 0x0, 0x0);
        gbc.writeMem(0x9f5d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdc67);
        EXPECT(gbc.pc(), 0x9f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f5d), 0xcb);
        EXPECT(gbc.readMem(0x9f5e), 0xab);
        // CB AB 00F0
        gbc.setState(0x4bea, 0x13c3, 0x4f70, 0x68ca, 0x6b6a, 0xfedf, 0x1, 0x1);
        gbc.writeMem(0x4bea, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x13c3);
        EXPECT(gbc.pc(), 0x4bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00F1
        gbc.setState(0xce8, 0xbd8f, 0x80d0, 0xb3bf, 0xdab8, 0xd96a, 0x1, 0x1);
        gbc.writeMem(0xce8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbd8f);
        EXPECT(gbc.pc(), 0xcea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00F2
        gbc.setState(0x47ec, 0xb565, 0x3040, 0xc206, 0x40f2, 0xd815, 0x0, 0x0);
        gbc.writeMem(0x47ec, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb565);
        EXPECT(gbc.pc(), 0x47ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00F3
        gbc.setState(0xb65a, 0x6fef, 0x80c0, 0x68df, 0x6ddc, 0xc9e0, 0x0, 0x1);
        gbc.writeMem(0xb65a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6fef);
        EXPECT(gbc.pc(), 0xb65c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb65a), 0xcb);
        EXPECT(gbc.readMem(0xb65b), 0xab);
        // CB AB 00F5
        gbc.setState(0x7787, 0x753f, 0xdca0, 0x91b5, 0xd016, 0x5754, 0x1, 0x0);
        gbc.writeMem(0x7787, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x753f);
        EXPECT(gbc.pc(), 0x7789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00F6
        gbc.setState(0x57d6, 0x2a51, 0xcd70, 0x7094, 0x742, 0x94fd, 0x1, 0x0);
        gbc.writeMem(0x57d6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2a51);
        EXPECT(gbc.pc(), 0x57d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00F7
        gbc.setState(0x234f, 0x10d6, 0xc670, 0xc3ef, 0x1690, 0xb468, 0x1, 0x1);
        gbc.writeMem(0x234f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x10d6);
        EXPECT(gbc.pc(), 0x2351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00F8
        gbc.setState(0x54fd, 0x89e6, 0xbd90, 0xa2fc, 0xaf35, 0x6c19, 0x0, 0x1);
        gbc.writeMem(0x54fd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x89e6);
        EXPECT(gbc.pc(), 0x54ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 00F9
        gbc.setState(0xe6de, 0xffb9, 0xd5b0, 0x80af, 0x6a30, 0xd186, 0x0, 0x0);
        gbc.writeMem(0xe6de, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xffb9);
        EXPECT(gbc.pc(), 0xe6e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6de), 0xcb);
        EXPECT(gbc.readMem(0xe6df), 0xab);
        // CB AB 00FA
        gbc.setState(0xc7ca, 0x417c, 0xb850, 0xede3, 0x6494, 0x33c3, 0x1, 0x1);
        gbc.writeMem(0xc7ca, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x417c);
        EXPECT(gbc.pc(), 0xc7cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ca), 0xcb);
        EXPECT(gbc.readMem(0xc7cb), 0xab);
        // CB AB 00FB
        gbc.setState(0x1dc5, 0x8f52, 0x420, 0xc091, 0x2496, 0xd2ee, 0x0, 0x1);
        gbc.writeMem(0x1dc5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8f52);
        EXPECT(gbc.pc(), 0x1dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00FC
        gbc.setState(0xc78b, 0xc8e2, 0xa820, 0x80df, 0x50c0, 0x78fb, 0x0, 0x1);
        gbc.writeMem(0xc78b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc8e2);
        EXPECT(gbc.pc(), 0xc78d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78b), 0xcb);
        EXPECT(gbc.readMem(0xc78c), 0xab);
        // CB AB 00FD
        gbc.setState(0xa2, 0x8cd8, 0x2280, 0x8143, 0x703a, 0x5814, 0x1, 0x1);
        gbc.writeMem(0xa2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8cd8);
        EXPECT(gbc.pc(), 0xa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 00FE
        gbc.setState(0x9eb3, 0xd7d, 0x7270, 0x9b43, 0x4cd9, 0xe3d, 0x1, 0x0);
        gbc.writeMem(0x9eb3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd7d);
        EXPECT(gbc.pc(), 0x9eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb3), 0xcb);
        EXPECT(gbc.readMem(0x9eb4), 0xab);
        // CB AB 00FF
        gbc.setState(0xbc4e, 0xfda4, 0xdfd0, 0x9d43, 0xc291, 0xfe41, 0x1, 0x1);
        gbc.writeMem(0xbc4e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xfda4);
        EXPECT(gbc.pc(), 0xbc50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4e), 0xcb);
        EXPECT(gbc.readMem(0xbc4f), 0xab);
        // CB AB 0100
        gbc.setState(0x44e, 0xc399, 0x3730, 0xd436, 0x291c, 0x8e34, 0x1, 0x0);
        gbc.writeMem(0x44e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc399);
        EXPECT(gbc.pc(), 0x450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0101
        gbc.setState(0x8c4a, 0x532d, 0x8fd0, 0xe68d, 0x9b25, 0x89e, 0x1, 0x1);
        gbc.writeMem(0x8c4a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x532d);
        EXPECT(gbc.pc(), 0x8c4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4a), 0xcb);
        EXPECT(gbc.readMem(0x8c4b), 0xab);
        // CB AB 0102
        gbc.setState(0xdb29, 0x2026, 0x8930, 0x6377, 0x601, 0x59f3, 0x1, 0x1);
        gbc.writeMem(0xdb29, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2026);
        EXPECT(gbc.pc(), 0xdb2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb29), 0xcb);
        EXPECT(gbc.readMem(0xdb2a), 0xab);
        // CB AB 0103
        gbc.setState(0x7540, 0x111a, 0x4b30, 0x1f79, 0x3ae6, 0x4d31, 0x1, 0x0);
        gbc.writeMem(0x7540, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x111a);
        EXPECT(gbc.pc(), 0x7542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0104
        gbc.setState(0x314e, 0x56bd, 0x8630, 0x4eee, 0x364f, 0x4566, 0x1, 0x0);
        gbc.writeMem(0x314e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x56bd);
        EXPECT(gbc.pc(), 0x3150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0105
        gbc.setState(0x472d, 0x7253, 0x34e0, 0x5434, 0x43a0, 0xc990, 0x0, 0x1);
        gbc.writeMem(0x472d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7253);
        EXPECT(gbc.pc(), 0x472f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0106
        gbc.setState(0xcebd, 0x539d, 0x18c0, 0x29d1, 0x761, 0xa816, 0x1, 0x1);
        gbc.writeMem(0xcebd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x539d);
        EXPECT(gbc.pc(), 0xcebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcebd), 0xcb);
        EXPECT(gbc.readMem(0xcebe), 0xab);
        // CB AB 0107
        gbc.setState(0xc26f, 0xf296, 0xe640, 0x4898, 0xaa45, 0xb4eb, 0x0, 0x1);
        gbc.writeMem(0xc26f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf296);
        EXPECT(gbc.pc(), 0xc271);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26f), 0xcb);
        EXPECT(gbc.readMem(0xc270), 0xab);
        // CB AB 0108
        gbc.setState(0x236, 0xb267, 0x4cb0, 0xafba, 0xad54, 0x6a5c, 0x0, 0x1);
        gbc.writeMem(0x236, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb267);
        EXPECT(gbc.pc(), 0x238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0109
        gbc.setState(0x9034, 0x9657, 0xca50, 0x94ce, 0xf07, 0x912c, 0x1, 0x1);
        gbc.writeMem(0x9034, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9657);
        EXPECT(gbc.pc(), 0x9036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9034), 0xcb);
        EXPECT(gbc.readMem(0x9035), 0xab);
        // CB AB 010A
        gbc.setState(0xa044, 0xc3f0, 0x3050, 0x1b0e, 0x4400, 0xda0c, 0x0, 0x0);
        gbc.writeMem(0xa044, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc3f0);
        EXPECT(gbc.pc(), 0xa046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa044), 0xcb);
        EXPECT(gbc.readMem(0xa045), 0xab);
        // CB AB 010B
        gbc.setState(0x3875, 0xa23c, 0x1a50, 0x499d, 0x2ea6, 0x5751, 0x1, 0x1);
        gbc.writeMem(0x3875, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa23c);
        EXPECT(gbc.pc(), 0x3877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 010C
        gbc.setState(0xebb7, 0x145a, 0x6d00, 0x4f35, 0xce8b, 0x9a30, 0x0, 0x1);
        gbc.writeMem(0xebb7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x145a);
        EXPECT(gbc.pc(), 0xebb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb7), 0xcb);
        EXPECT(gbc.readMem(0xebb8), 0xab);
        // CB AB 010D
        gbc.setState(0xc8c1, 0x8d68, 0xff50, 0x7bc6, 0xc2d3, 0x7156, 0x1, 0x1);
        gbc.writeMem(0xc8c1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8d68);
        EXPECT(gbc.pc(), 0xc8c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c1), 0xcb);
        EXPECT(gbc.readMem(0xc8c2), 0xab);
        // CB AB 010E
        gbc.setState(0x8fa, 0xd808, 0x6ae0, 0xc8c, 0xf393, 0xd86f, 0x1, 0x1);
        gbc.writeMem(0x8fa, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd808);
        EXPECT(gbc.pc(), 0x8fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 010F
        gbc.setState(0x3585, 0x5b7, 0x3930, 0x1b24, 0x4392, 0x6871, 0x0, 0x1);
        gbc.writeMem(0x3585, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5b7);
        EXPECT(gbc.pc(), 0x3587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0110
        gbc.setState(0xd769, 0x939c, 0xca30, 0x6cde, 0x2122, 0x352b, 0x0, 0x1);
        gbc.writeMem(0xd769, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x939c);
        EXPECT(gbc.pc(), 0xd76b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd769), 0xcb);
        EXPECT(gbc.readMem(0xd76a), 0xab);
        // CB AB 0111
        gbc.setState(0x7693, 0x32c0, 0x8310, 0xc005, 0x8b95, 0xdf25, 0x0, 0x1);
        gbc.writeMem(0x7693, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x32c0);
        EXPECT(gbc.pc(), 0x7695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0112
        gbc.setState(0x311a, 0x834b, 0xc450, 0xc6b8, 0x59d5, 0x5dc7, 0x0, 0x1);
        gbc.writeMem(0x311a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x834b);
        EXPECT(gbc.pc(), 0x311c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0113
        gbc.setState(0xaa88, 0xf28c, 0x55d0, 0x45da, 0x18f, 0x86ff, 0x0, 0x0);
        gbc.writeMem(0xaa88, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf28c);
        EXPECT(gbc.pc(), 0xaa8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa88), 0xcb);
        EXPECT(gbc.readMem(0xaa89), 0xab);
        // CB AB 0114
        gbc.setState(0x4d9b, 0x8773, 0xa310, 0x6ad, 0xf6ef, 0x3f61, 0x0, 0x0);
        gbc.writeMem(0x4d9b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8773);
        EXPECT(gbc.pc(), 0x4d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0115
        gbc.setState(0x299e, 0x5785, 0x8030, 0xe10b, 0x59c6, 0xccad, 0x0, 0x0);
        gbc.writeMem(0x299e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5785);
        EXPECT(gbc.pc(), 0x29a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0116
        gbc.setState(0x1474, 0xfc0c, 0xbb90, 0x5c77, 0x495a, 0xb8b7, 0x1, 0x1);
        gbc.writeMem(0x1474, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfc0c);
        EXPECT(gbc.pc(), 0x1476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0117
        gbc.setState(0x4f9, 0x98ae, 0x780, 0x7d47, 0xb71c, 0x460f, 0x0, 0x0);
        gbc.writeMem(0x4f9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x98ae);
        EXPECT(gbc.pc(), 0x4fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0118
        gbc.setState(0xe1aa, 0x6b64, 0xc9a0, 0x8d3a, 0xef85, 0x42d2, 0x1, 0x0);
        gbc.writeMem(0xe1aa, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6b64);
        EXPECT(gbc.pc(), 0xe1ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1aa), 0xcb);
        EXPECT(gbc.readMem(0xe1ab), 0xab);
        // CB AB 0119
        gbc.setState(0x1128, 0x103f, 0x23d0, 0x89ab, 0xfb37, 0x3d13, 0x1, 0x1);
        gbc.writeMem(0x1128, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x103f);
        EXPECT(gbc.pc(), 0x112a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 011B
        gbc.setState(0xd594, 0xc237, 0x7850, 0xb170, 0x6f36, 0x33e0, 0x1, 0x0);
        gbc.writeMem(0xd594, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc237);
        EXPECT(gbc.pc(), 0xd596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd594), 0xcb);
        EXPECT(gbc.readMem(0xd595), 0xab);
        // CB AB 011C
        gbc.setState(0x260d, 0x3e4f, 0xf00, 0x5978, 0xeef8, 0xe42c, 0x0, 0x1);
        gbc.writeMem(0x260d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3e4f);
        EXPECT(gbc.pc(), 0x260f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 011E
        gbc.setState(0x2964, 0x5214, 0xc920, 0x7bb3, 0xec2f, 0xe8c8, 0x0, 0x0);
        gbc.writeMem(0x2964, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5214);
        EXPECT(gbc.pc(), 0x2966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 011F
        gbc.setState(0x99ba, 0x8671, 0x4830, 0x4f0a, 0x3d62, 0xaf62, 0x1, 0x0);
        gbc.writeMem(0x99ba, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8671);
        EXPECT(gbc.pc(), 0x99bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99ba), 0xcb);
        EXPECT(gbc.readMem(0x99bb), 0xab);
        // CB AB 0120
        gbc.setState(0xdba1, 0x248a, 0x3db0, 0x9c08, 0x442d, 0xd951, 0x0, 0x0);
        gbc.writeMem(0xdba1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x248a);
        EXPECT(gbc.pc(), 0xdba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba1), 0xcb);
        EXPECT(gbc.readMem(0xdba2), 0xab);
        // CB AB 0122
        gbc.setState(0x97cc, 0xee8d, 0xc940, 0x951f, 0x9bee, 0x8878, 0x0, 0x0);
        gbc.writeMem(0x97cc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xee8d);
        EXPECT(gbc.pc(), 0x97ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97cc), 0xcb);
        EXPECT(gbc.readMem(0x97cd), 0xab);
        // CB AB 0123
        gbc.setState(0x2c3b, 0x23f6, 0x2560, 0xa9d3, 0x5c4c, 0x94ff, 0x0, 0x0);
        gbc.writeMem(0x2c3b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x23f6);
        EXPECT(gbc.pc(), 0x2c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0124
        gbc.setState(0x10f9, 0x1b15, 0x190, 0x6cb2, 0x8e57, 0xd78e, 0x0, 0x0);
        gbc.writeMem(0x10f9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1b15);
        EXPECT(gbc.pc(), 0x10fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0125
        gbc.setState(0x4abe, 0x19ac, 0x7a60, 0x3652, 0x5891, 0xeaff, 0x0, 0x0);
        gbc.writeMem(0x4abe, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x19ac);
        EXPECT(gbc.pc(), 0x4ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0126
        gbc.setState(0x3ed4, 0x5ee6, 0x16b0, 0xae60, 0xc4bc, 0x541d, 0x0, 0x1);
        gbc.writeMem(0x3ed4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5ee6);
        EXPECT(gbc.pc(), 0x3ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0127
        gbc.setState(0x1034, 0xc4, 0x9a0, 0x151d, 0x61f9, 0x3d46, 0x1, 0x1);
        gbc.writeMem(0x1034, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc4);
        EXPECT(gbc.pc(), 0x1036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0128
        gbc.setState(0xc7db, 0x7c43, 0xdbf0, 0xd3bb, 0x52b3, 0x14e5, 0x0, 0x0);
        gbc.writeMem(0xc7db, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7c43);
        EXPECT(gbc.pc(), 0xc7dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7db), 0xcb);
        EXPECT(gbc.readMem(0xc7dc), 0xab);
        // CB AB 0129
        gbc.setState(0xccc4, 0xc6e5, 0x9d0, 0x9961, 0xcbe6, 0xe35b, 0x1, 0x1);
        gbc.writeMem(0xccc4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc6e5);
        EXPECT(gbc.pc(), 0xccc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc4), 0xcb);
        EXPECT(gbc.readMem(0xccc5), 0xab);
        // CB AB 012A
        gbc.setState(0xe946, 0xff21, 0xc680, 0x84dc, 0x6921, 0x330b, 0x0, 0x0);
        gbc.writeMem(0xe946, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xff21);
        EXPECT(gbc.pc(), 0xe948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe946), 0xcb);
        EXPECT(gbc.readMem(0xe947), 0xab);
        // CB AB 012B
        gbc.setState(0x2606, 0xf1e5, 0x9e90, 0xc81b, 0x205a, 0xb36f, 0x1, 0x1);
        gbc.writeMem(0x2606, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf1e5);
        EXPECT(gbc.pc(), 0x2608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 012C
        gbc.setState(0xcc21, 0x61a2, 0xa890, 0x5337, 0xadec, 0x49d0, 0x1, 0x1);
        gbc.writeMem(0xcc21, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x61a2);
        EXPECT(gbc.pc(), 0xcc23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc21), 0xcb);
        EXPECT(gbc.readMem(0xcc22), 0xab);
        // CB AB 012D
        gbc.setState(0xf27, 0x3787, 0x3760, 0x78af, 0x2d25, 0x4719, 0x0, 0x1);
        gbc.writeMem(0xf27, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3787);
        EXPECT(gbc.pc(), 0xf29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 012E
        gbc.setState(0x29d7, 0x7416, 0xf5d0, 0x873b, 0xde11, 0x5c07, 0x1, 0x1);
        gbc.writeMem(0x29d7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7416);
        EXPECT(gbc.pc(), 0x29d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 012F
        gbc.setState(0xa8dd, 0x8d4f, 0xe250, 0xb3d6, 0xd28b, 0xc790, 0x1, 0x0);
        gbc.writeMem(0xa8dd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8d4f);
        EXPECT(gbc.pc(), 0xa8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8dd), 0xcb);
        EXPECT(gbc.readMem(0xa8de), 0xab);
        // CB AB 0130
        gbc.setState(0x269d, 0x81b0, 0xa7f0, 0xbe33, 0x612, 0x80ad, 0x1, 0x0);
        gbc.writeMem(0x269d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x81b0);
        EXPECT(gbc.pc(), 0x269f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0131
        gbc.setState(0xc53b, 0x107a, 0xaea0, 0x41c7, 0x49b5, 0xa76, 0x1, 0x0);
        gbc.writeMem(0xc53b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x107a);
        EXPECT(gbc.pc(), 0xc53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc53b), 0xcb);
        EXPECT(gbc.readMem(0xc53c), 0xab);
        // CB AB 0132
        gbc.setState(0x5ed2, 0x4022, 0x87c0, 0xf8c1, 0xeb77, 0x2df8, 0x0, 0x1);
        gbc.writeMem(0x5ed2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4022);
        EXPECT(gbc.pc(), 0x5ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0133
        gbc.setState(0xabeb, 0x11ad, 0x1d20, 0xd46e, 0x9a9f, 0x2913, 0x1, 0x1);
        gbc.writeMem(0xabeb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x11ad);
        EXPECT(gbc.pc(), 0xabed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabeb), 0xcb);
        EXPECT(gbc.readMem(0xabec), 0xab);
        // CB AB 0134
        gbc.setState(0xa383, 0xc20, 0xf640, 0x1249, 0x3c28, 0x392d, 0x0, 0x0);
        gbc.writeMem(0xa383, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc20);
        EXPECT(gbc.pc(), 0xa385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa383), 0xcb);
        EXPECT(gbc.readMem(0xa384), 0xab);
        // CB AB 0135
        gbc.setState(0x4222, 0x264d, 0x5640, 0x2941, 0x9c2b, 0x3612, 0x1, 0x1);
        gbc.writeMem(0x4222, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x264d);
        EXPECT(gbc.pc(), 0x4224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0136
        gbc.setState(0x3f0c, 0x6370, 0x1e00, 0x5be4, 0x37bb, 0x3850, 0x1, 0x0);
        gbc.writeMem(0x3f0c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6370);
        EXPECT(gbc.pc(), 0x3f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0137
        gbc.setState(0x31dd, 0x690a, 0x67b0, 0xa169, 0xf114, 0xa6ce, 0x0, 0x1);
        gbc.writeMem(0x31dd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x690a);
        EXPECT(gbc.pc(), 0x31df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0138
        gbc.setState(0x4cdf, 0x4ad8, 0x9650, 0xac85, 0x61f9, 0x4a9c, 0x0, 0x0);
        gbc.writeMem(0x4cdf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4ad8);
        EXPECT(gbc.pc(), 0x4ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0139
        gbc.setState(0x1c81, 0xb3ff, 0x85d0, 0x6dc9, 0x3670, 0xb7e1, 0x0, 0x1);
        gbc.writeMem(0x1c81, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb3ff);
        EXPECT(gbc.pc(), 0x1c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 013A
        gbc.setState(0xd9da, 0xf1e0, 0xc570, 0x7638, 0xff39, 0x82f8, 0x1, 0x1);
        gbc.writeMem(0xd9da, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf1e0);
        EXPECT(gbc.pc(), 0xd9dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9da), 0xcb);
        EXPECT(gbc.readMem(0xd9db), 0xab);
        // CB AB 013B
        gbc.setState(0xb67c, 0x9e5c, 0xdc70, 0x3eec, 0xf7c3, 0xa351, 0x0, 0x0);
        gbc.writeMem(0xb67c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9e5c);
        EXPECT(gbc.pc(), 0xb67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67c), 0xcb);
        EXPECT(gbc.readMem(0xb67d), 0xab);
        // CB AB 013C
        gbc.setState(0x771f, 0x6262, 0xe440, 0x22ee, 0xfc78, 0x9506, 0x1, 0x0);
        gbc.writeMem(0x771f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6262);
        EXPECT(gbc.pc(), 0x7721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 013D
        gbc.setState(0x4bdd, 0xa8f0, 0x8220, 0x81fb, 0x8413, 0x5a8d, 0x1, 0x0);
        gbc.writeMem(0x4bdd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa8f0);
        EXPECT(gbc.pc(), 0x4bdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 013E
        gbc.setState(0x1bd6, 0xa83d, 0xd530, 0xde4c, 0x8c28, 0xc5aa, 0x1, 0x1);
        gbc.writeMem(0x1bd6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa83d);
        EXPECT(gbc.pc(), 0x1bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0140
        gbc.setState(0x165d, 0x1e0b, 0x3560, 0xa8b5, 0xe92, 0xe8b6, 0x1, 0x1);
        gbc.writeMem(0x165d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1e0b);
        EXPECT(gbc.pc(), 0x165f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0141
        gbc.setState(0x2574, 0xc826, 0xac70, 0x3cdd, 0xb743, 0xe8da, 0x1, 0x0);
        gbc.writeMem(0x2574, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc826);
        EXPECT(gbc.pc(), 0x2576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0142
        gbc.setState(0xaba0, 0xf067, 0x3e30, 0x1aa0, 0x9bb8, 0x7bce, 0x0, 0x0);
        gbc.writeMem(0xaba0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf067);
        EXPECT(gbc.pc(), 0xaba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba0), 0xcb);
        EXPECT(gbc.readMem(0xaba1), 0xab);
        // CB AB 0143
        gbc.setState(0x466d, 0x26ee, 0xf5d0, 0xa1e5, 0xb1f, 0xeeb3, 0x0, 0x1);
        gbc.writeMem(0x466d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x26ee);
        EXPECT(gbc.pc(), 0x466f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0144
        gbc.setState(0xeb17, 0x453a, 0xa450, 0x86cc, 0x24ec, 0xee9a, 0x0, 0x1);
        gbc.writeMem(0xeb17, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x453a);
        EXPECT(gbc.pc(), 0xeb19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb17), 0xcb);
        EXPECT(gbc.readMem(0xeb18), 0xab);
        // CB AB 0145
        gbc.setState(0x8676, 0xb0a5, 0x22c0, 0x2751, 0x2339, 0x69f6, 0x1, 0x1);
        gbc.writeMem(0x8676, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb0a5);
        EXPECT(gbc.pc(), 0x8678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8676), 0xcb);
        EXPECT(gbc.readMem(0x8677), 0xab);
        // CB AB 0146
        gbc.setState(0x9f1c, 0x84dd, 0x17b0, 0x2c8f, 0x78a9, 0xc97e, 0x1, 0x1);
        gbc.writeMem(0x9f1c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x84dd);
        EXPECT(gbc.pc(), 0x9f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1c), 0xcb);
        EXPECT(gbc.readMem(0x9f1d), 0xab);
        // CB AB 0147
        gbc.setState(0x3800, 0xa09f, 0x8050, 0xcf82, 0x4f, 0xe041, 0x0, 0x0);
        gbc.writeMem(0x3800, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa09f);
        EXPECT(gbc.pc(), 0x3802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0148
        gbc.setState(0xe030, 0xed06, 0x4ce0, 0xf6fd, 0x2cec, 0x330a, 0x1, 0x1);
        gbc.writeMem(0xe030, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xed06);
        EXPECT(gbc.pc(), 0xe032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe030), 0xcb);
        EXPECT(gbc.readMem(0xe031), 0xab);
        // CB AB 0149
        gbc.setState(0x7088, 0xeb33, 0x72b0, 0xcb74, 0x948d, 0xf887, 0x0, 0x0);
        gbc.writeMem(0x7088, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xeb33);
        EXPECT(gbc.pc(), 0x708a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 014A
        gbc.setState(0xb127, 0xd25c, 0x6d20, 0x163d, 0x92fc, 0xcd41, 0x1, 0x1);
        gbc.writeMem(0xb127, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd25c);
        EXPECT(gbc.pc(), 0xb129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb127), 0xcb);
        EXPECT(gbc.readMem(0xb128), 0xab);
        // CB AB 014B
        gbc.setState(0x3e0b, 0xdc99, 0x9cc0, 0xabe4, 0xf22a, 0xf1ee, 0x1, 0x0);
        gbc.writeMem(0x3e0b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdc99);
        EXPECT(gbc.pc(), 0x3e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 014C
        gbc.setState(0x407e, 0xfd08, 0x9770, 0x6922, 0x3c91, 0x1de5, 0x0, 0x0);
        gbc.writeMem(0x407e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfd08);
        EXPECT(gbc.pc(), 0x4080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 014D
        gbc.setState(0x8da9, 0x5e32, 0x50a0, 0xcd04, 0x10f2, 0x897b, 0x0, 0x0);
        gbc.writeMem(0x8da9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5e32);
        EXPECT(gbc.pc(), 0x8dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da9), 0xcb);
        EXPECT(gbc.readMem(0x8daa), 0xab);
        // CB AB 014E
        gbc.setState(0xc0a2, 0x1839, 0xe00, 0x8f91, 0x992d, 0x1871, 0x0, 0x0);
        gbc.writeMem(0xc0a2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1839);
        EXPECT(gbc.pc(), 0xc0a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a2), 0xcb);
        EXPECT(gbc.readMem(0xc0a3), 0xab);
        // CB AB 014F
        gbc.setState(0x242e, 0x6299, 0xbcc0, 0xdabc, 0xb927, 0xe4f, 0x0, 0x0);
        gbc.writeMem(0x242e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6299);
        EXPECT(gbc.pc(), 0x2430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0150
        gbc.setState(0xceae, 0x1ed9, 0xd7b0, 0x988a, 0x1187, 0x74b5, 0x1, 0x1);
        gbc.writeMem(0xceae, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1ed9);
        EXPECT(gbc.pc(), 0xceb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceae), 0xcb);
        EXPECT(gbc.readMem(0xceaf), 0xab);
        // CB AB 0151
        gbc.setState(0x4553, 0x15e9, 0xe7f0, 0x91ab, 0xdf87, 0x7182, 0x0, 0x0);
        gbc.writeMem(0x4553, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x15e9);
        EXPECT(gbc.pc(), 0x4555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0152
        gbc.setState(0xb5d4, 0x712f, 0xb000, 0xea9e, 0x390b, 0xce98, 0x0, 0x0);
        gbc.writeMem(0xb5d4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x712f);
        EXPECT(gbc.pc(), 0xb5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5d4), 0xcb);
        EXPECT(gbc.readMem(0xb5d5), 0xab);
        // CB AB 0154
        gbc.setState(0xec23, 0x9607, 0x7d40, 0xb649, 0x906c, 0x563b, 0x0, 0x1);
        gbc.writeMem(0xec23, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9607);
        EXPECT(gbc.pc(), 0xec25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec23), 0xcb);
        EXPECT(gbc.readMem(0xec24), 0xab);
        // CB AB 0155
        gbc.setState(0x599b, 0x6cee, 0x5620, 0xffdc, 0x34d7, 0x1bc7, 0x0, 0x1);
        gbc.writeMem(0x599b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6cee);
        EXPECT(gbc.pc(), 0x599d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0156
        gbc.setState(0x7a9, 0xabab, 0xbe60, 0x75be, 0x2070, 0x52a3, 0x1, 0x0);
        gbc.writeMem(0x7a9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xabab);
        EXPECT(gbc.pc(), 0x7ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0157
        gbc.setState(0xb3c3, 0xf760, 0xd950, 0xe053, 0xb868, 0x4703, 0x1, 0x0);
        gbc.writeMem(0xb3c3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf760);
        EXPECT(gbc.pc(), 0xb3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c3), 0xcb);
        EXPECT(gbc.readMem(0xb3c4), 0xab);
        // CB AB 0158
        gbc.setState(0x56eb, 0x5ecd, 0xb620, 0xc45f, 0x8d86, 0xda0f, 0x0, 0x1);
        gbc.writeMem(0x56eb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5ecd);
        EXPECT(gbc.pc(), 0x56ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0159
        gbc.setState(0x740a, 0x6176, 0xdc70, 0xf4ea, 0xf3b5, 0xb095, 0x1, 0x0);
        gbc.writeMem(0x740a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6176);
        EXPECT(gbc.pc(), 0x740c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 015A
        gbc.setState(0x4de1, 0xe7ff, 0xc650, 0xd633, 0x5992, 0xabb7, 0x0, 0x0);
        gbc.writeMem(0x4de1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe7ff);
        EXPECT(gbc.pc(), 0x4de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 015B
        gbc.setState(0xc78e, 0x3862, 0x2b20, 0x604b, 0x70bf, 0x8a25, 0x0, 0x0);
        gbc.writeMem(0xc78e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3862);
        EXPECT(gbc.pc(), 0xc790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78e), 0xcb);
        EXPECT(gbc.readMem(0xc78f), 0xab);
        // CB AB 015C
        gbc.setState(0x56c, 0x8c70, 0x3520, 0x3119, 0x254b, 0x5dbe, 0x0, 0x0);
        gbc.writeMem(0x56c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8c70);
        EXPECT(gbc.pc(), 0x56e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 015D
        gbc.setState(0xe463, 0xdb25, 0xb280, 0xf80, 0xc7f, 0x862f, 0x1, 0x1);
        gbc.writeMem(0xe463, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdb25);
        EXPECT(gbc.pc(), 0xe465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe463), 0xcb);
        EXPECT(gbc.readMem(0xe464), 0xab);
        // CB AB 015E
        gbc.setState(0x1dd8, 0xd484, 0x8750, 0x7720, 0x4b5a, 0x5581, 0x0, 0x0);
        gbc.writeMem(0x1dd8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd484);
        EXPECT(gbc.pc(), 0x1dda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 015F
        gbc.setState(0xbca6, 0xea83, 0x52c0, 0x5fc0, 0xca16, 0x32dc, 0x1, 0x0);
        gbc.writeMem(0xbca6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xea83);
        EXPECT(gbc.pc(), 0xbca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca6), 0xcb);
        EXPECT(gbc.readMem(0xbca7), 0xab);
        // CB AB 0160
        gbc.setState(0x6c94, 0x3d53, 0x1390, 0xf613, 0xc84f, 0x700e, 0x0, 0x0);
        gbc.writeMem(0x6c94, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3d53);
        EXPECT(gbc.pc(), 0x6c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0161
        gbc.setState(0x5aaf, 0x3566, 0xe6a0, 0x9aca, 0xaa3c, 0xc114, 0x0, 0x1);
        gbc.writeMem(0x5aaf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3566);
        EXPECT(gbc.pc(), 0x5ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0162
        gbc.setState(0x610b, 0x362c, 0xd380, 0xde13, 0x3159, 0x3c50, 0x0, 0x1);
        gbc.writeMem(0x610b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x362c);
        EXPECT(gbc.pc(), 0x610d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0163
        gbc.setState(0x3e04, 0x2313, 0x9d00, 0xdd4, 0xd815, 0x6d9f, 0x1, 0x1);
        gbc.writeMem(0x3e04, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2313);
        EXPECT(gbc.pc(), 0x3e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0164
        gbc.setState(0xa14f, 0x9cb, 0x7d30, 0x359e, 0xdfb8, 0x58c0, 0x0, 0x1);
        gbc.writeMem(0xa14f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9cb);
        EXPECT(gbc.pc(), 0xa151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa14f), 0xcb);
        EXPECT(gbc.readMem(0xa150), 0xab);
        // CB AB 0166
        gbc.setState(0x4d58, 0x36fe, 0xfd60, 0xece4, 0x75e6, 0x3723, 0x1, 0x1);
        gbc.writeMem(0x4d58, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x36fe);
        EXPECT(gbc.pc(), 0x4d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0167
        gbc.setState(0x28ce, 0x471d, 0x2e10, 0xa63c, 0x35ed, 0x5ecd, 0x1, 0x0);
        gbc.writeMem(0x28ce, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x471d);
        EXPECT(gbc.pc(), 0x28d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0168
        gbc.setState(0xdb17, 0x8cb5, 0xa780, 0x28ce, 0xafd9, 0x20af, 0x1, 0x1);
        gbc.writeMem(0xdb17, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8cb5);
        EXPECT(gbc.pc(), 0xdb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb17), 0xcb);
        EXPECT(gbc.readMem(0xdb18), 0xab);
        // CB AB 0169
        gbc.setState(0x1fba, 0x456e, 0xff60, 0x33a0, 0x1fee, 0x4a45, 0x0, 0x1);
        gbc.writeMem(0x1fba, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x456e);
        EXPECT(gbc.pc(), 0x1fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 016A
        gbc.setState(0x191c, 0x8566, 0xe550, 0x9a5d, 0x9811, 0x5ce0, 0x0, 0x1);
        gbc.writeMem(0x191c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8566);
        EXPECT(gbc.pc(), 0x191e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 016B
        gbc.setState(0x54bd, 0x1443, 0x3b20, 0x39bf, 0xbba9, 0x15f3, 0x1, 0x0);
        gbc.writeMem(0x54bd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1443);
        EXPECT(gbc.pc(), 0x54bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 016C
        gbc.setState(0x8553, 0xd4e0, 0x1eb0, 0x807e, 0x29f1, 0xd731, 0x0, 0x1);
        gbc.writeMem(0x8553, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd4e0);
        EXPECT(gbc.pc(), 0x8555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8553), 0xcb);
        EXPECT(gbc.readMem(0x8554), 0xab);
        // CB AB 016D
        gbc.setState(0x1ac2, 0x52d3, 0x3fe0, 0xa5b, 0x3d5a, 0xe2fb, 0x1, 0x0);
        gbc.writeMem(0x1ac2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x52d3);
        EXPECT(gbc.pc(), 0x1ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 016E
        gbc.setState(0xecf, 0x4545, 0xe480, 0xea36, 0x1219, 0xf636, 0x1, 0x0);
        gbc.writeMem(0xecf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4545);
        EXPECT(gbc.pc(), 0xed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0170
        gbc.setState(0xb09f, 0x53af, 0x47b0, 0x6afa, 0x5f0a, 0x1179, 0x0, 0x0);
        gbc.writeMem(0xb09f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x53af);
        EXPECT(gbc.pc(), 0xb0a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb09f), 0xcb);
        EXPECT(gbc.readMem(0xb0a0), 0xab);
        // CB AB 0171
        gbc.setState(0xed0a, 0x712f, 0xb810, 0xddee, 0xeea4, 0xef74, 0x1, 0x0);
        gbc.writeMem(0xed0a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x712f);
        EXPECT(gbc.pc(), 0xed0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed0a), 0xcb);
        EXPECT(gbc.readMem(0xed0b), 0xab);
        // CB AB 0172
        gbc.setState(0x475f, 0xbed4, 0x74c0, 0xd78d, 0x1096, 0xb632, 0x0, 0x0);
        gbc.writeMem(0x475f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbed4);
        EXPECT(gbc.pc(), 0x4761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0173
        gbc.setState(0xbe0c, 0xc750, 0xa830, 0xae8c, 0x4bf0, 0xd38, 0x1, 0x0);
        gbc.writeMem(0xbe0c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc750);
        EXPECT(gbc.pc(), 0xbe0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0c), 0xcb);
        EXPECT(gbc.readMem(0xbe0d), 0xab);
        // CB AB 0174
        gbc.setState(0x6a80, 0x73ea, 0x7770, 0x9606, 0xa067, 0xa254, 0x1, 0x0);
        gbc.writeMem(0x6a80, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x73ea);
        EXPECT(gbc.pc(), 0x6a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0175
        gbc.setState(0x72e5, 0x7d2, 0xa630, 0x118e, 0xaef0, 0x7c1c, 0x1, 0x0);
        gbc.writeMem(0x72e5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7d2);
        EXPECT(gbc.pc(), 0x72e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0176
        gbc.setState(0x748, 0x907f, 0xc1d0, 0xbd80, 0x151c, 0xbf25, 0x0, 0x1);
        gbc.writeMem(0x748, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x907f);
        EXPECT(gbc.pc(), 0x74a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0177
        gbc.setState(0xad0e, 0xa82e, 0xd890, 0xc16e, 0x6da2, 0xf29b, 0x1, 0x0);
        gbc.writeMem(0xad0e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa82e);
        EXPECT(gbc.pc(), 0xad10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad0e), 0xcb);
        EXPECT(gbc.readMem(0xad0f), 0xab);
        // CB AB 0178
        gbc.setState(0xb065, 0x66c6, 0xeea0, 0x409c, 0x5038, 0xf670, 0x1, 0x0);
        gbc.writeMem(0xb065, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x66c6);
        EXPECT(gbc.pc(), 0xb067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb065), 0xcb);
        EXPECT(gbc.readMem(0xb066), 0xab);
        // CB AB 017A
        gbc.setState(0x9936, 0xa212, 0xdc40, 0x8563, 0x481e, 0xc16c, 0x1, 0x1);
        gbc.writeMem(0x9936, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa212);
        EXPECT(gbc.pc(), 0x9938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9936), 0xcb);
        EXPECT(gbc.readMem(0x9937), 0xab);
        // CB AB 017B
        gbc.setState(0x19a4, 0x64c0, 0x8840, 0xee0b, 0xa534, 0xfbfa, 0x1, 0x1);
        gbc.writeMem(0x19a4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x64c0);
        EXPECT(gbc.pc(), 0x19a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 017C
        gbc.setState(0xdde9, 0xe3fe, 0x1760, 0x9572, 0x3476, 0xd9bf, 0x1, 0x1);
        gbc.writeMem(0xdde9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe3fe);
        EXPECT(gbc.pc(), 0xddeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde9), 0xcb);
        EXPECT(gbc.readMem(0xddea), 0xab);
        // CB AB 017D
        gbc.setState(0xaa7c, 0x4a0f, 0xfe30, 0xae35, 0xdde2, 0xabf2, 0x1, 0x0);
        gbc.writeMem(0xaa7c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4a0f);
        EXPECT(gbc.pc(), 0xaa7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7c), 0xcb);
        EXPECT(gbc.readMem(0xaa7d), 0xab);
        // CB AB 017E
        gbc.setState(0x75f3, 0x7ea, 0x4ba0, 0x553f, 0xf674, 0x54d3, 0x1, 0x1);
        gbc.writeMem(0x75f3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7ea);
        EXPECT(gbc.pc(), 0x75f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0180
        gbc.setState(0xde21, 0xf9ca, 0xc920, 0xce41, 0x9791, 0xdaec, 0x1, 0x0);
        gbc.writeMem(0xde21, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf9ca);
        EXPECT(gbc.pc(), 0xde23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde21), 0xcb);
        EXPECT(gbc.readMem(0xde22), 0xab);
        // CB AB 0181
        gbc.setState(0xd796, 0x930d, 0x920, 0xa5ea, 0x96cb, 0x2766, 0x0, 0x0);
        gbc.writeMem(0xd796, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x930d);
        EXPECT(gbc.pc(), 0xd798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd796), 0xcb);
        EXPECT(gbc.readMem(0xd797), 0xab);
        // CB AB 0183
        gbc.setState(0xd860, 0xb9bb, 0x6330, 0xacb7, 0x16dc, 0x23e2, 0x1, 0x1);
        gbc.writeMem(0xd860, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb9bb);
        EXPECT(gbc.pc(), 0xd862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd860), 0xcb);
        EXPECT(gbc.readMem(0xd861), 0xab);
        // CB AB 0184
        gbc.setState(0x7fc5, 0x2fed, 0xbd60, 0x3ec9, 0x9c9a, 0xe612, 0x0, 0x1);
        gbc.writeMem(0x7fc5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2fed);
        EXPECT(gbc.pc(), 0x7fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0185
        gbc.setState(0x8a64, 0x483, 0xc9b0, 0x2669, 0x6a08, 0x4160, 0x0, 0x0);
        gbc.writeMem(0x8a64, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x483);
        EXPECT(gbc.pc(), 0x8a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a64), 0xcb);
        EXPECT(gbc.readMem(0x8a65), 0xab);
        // CB AB 0186
        gbc.setState(0x2c0d, 0xedb4, 0x860, 0x4a28, 0xf8d0, 0x578a, 0x0, 0x1);
        gbc.writeMem(0x2c0d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xedb4);
        EXPECT(gbc.pc(), 0x2c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0187
        gbc.setState(0x7cc, 0x6394, 0x96f0, 0x109a, 0x75d2, 0x41ec, 0x0, 0x1);
        gbc.writeMem(0x7cc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6394);
        EXPECT(gbc.pc(), 0x7ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0188
        gbc.setState(0xd200, 0x31ef, 0x2590, 0x5ba4, 0x33b3, 0xf71b, 0x1, 0x0);
        gbc.writeMem(0xd200, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x31ef);
        EXPECT(gbc.pc(), 0xd202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd200), 0xcb);
        EXPECT(gbc.readMem(0xd201), 0xab);
        // CB AB 0189
        gbc.setState(0x3117, 0xd99, 0xf6e0, 0xc267, 0xff35, 0xb490, 0x0, 0x0);
        gbc.writeMem(0x3117, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd99);
        EXPECT(gbc.pc(), 0x3119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 018A
        gbc.setState(0xc2fb, 0x79af, 0xaec0, 0xb5fb, 0xab68, 0x7e80, 0x1, 0x0);
        gbc.writeMem(0xc2fb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x79af);
        EXPECT(gbc.pc(), 0xc2fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2fb), 0xcb);
        EXPECT(gbc.readMem(0xc2fc), 0xab);
        // CB AB 018B
        gbc.setState(0xbeb5, 0x4cd0, 0xe3e0, 0x6865, 0xc382, 0x9386, 0x1, 0x1);
        gbc.writeMem(0xbeb5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4cd0);
        EXPECT(gbc.pc(), 0xbeb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb5), 0xcb);
        EXPECT(gbc.readMem(0xbeb6), 0xab);
        // CB AB 018D
        gbc.setState(0x237d, 0x3e3f, 0x6100, 0x5b4d, 0xe890, 0x6b4a, 0x0, 0x1);
        gbc.writeMem(0x237d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3e3f);
        EXPECT(gbc.pc(), 0x237f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 018E
        gbc.setState(0x94ff, 0x3ae7, 0x3220, 0x37c8, 0xefa7, 0xf0cf, 0x1, 0x0);
        gbc.writeMem(0x94ff, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3ae7);
        EXPECT(gbc.pc(), 0x9501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ff), 0xcb);
        EXPECT(gbc.readMem(0x9500), 0xab);
        // CB AB 018F
        gbc.setState(0x7c18, 0x9f6e, 0x45c0, 0x9f02, 0x4e70, 0x1be8, 0x1, 0x1);
        gbc.writeMem(0x7c18, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9f6e);
        EXPECT(gbc.pc(), 0x7c1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0190
        gbc.setState(0x51a1, 0x8d69, 0xa320, 0xceaa, 0xb84c, 0xb1f4, 0x0, 0x0);
        gbc.writeMem(0x51a1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8d69);
        EXPECT(gbc.pc(), 0x51a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0191
        gbc.setState(0x57ce, 0x23fa, 0x9250, 0xfb0b, 0x9983, 0xbd03, 0x1, 0x0);
        gbc.writeMem(0x57ce, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x23fa);
        EXPECT(gbc.pc(), 0x57d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0192
        gbc.setState(0x3889, 0x9473, 0xb40, 0x89e1, 0xdb2f, 0xe3dc, 0x1, 0x1);
        gbc.writeMem(0x3889, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9473);
        EXPECT(gbc.pc(), 0x388b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0193
        gbc.setState(0x1c06, 0xe054, 0x4270, 0x3b74, 0x521e, 0x29d1, 0x1, 0x0);
        gbc.writeMem(0x1c06, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe054);
        EXPECT(gbc.pc(), 0x1c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0194
        gbc.setState(0xc39b, 0xa77b, 0x7d70, 0x4f2, 0x27c9, 0xc74c, 0x1, 0x0);
        gbc.writeMem(0xc39b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa77b);
        EXPECT(gbc.pc(), 0xc39d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc39b), 0xcb);
        EXPECT(gbc.readMem(0xc39c), 0xab);
        // CB AB 0195
        gbc.setState(0xdd80, 0xd0ff, 0x6af0, 0xc4e9, 0xbfd9, 0x622c, 0x1, 0x0);
        gbc.writeMem(0xdd80, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd0ff);
        EXPECT(gbc.pc(), 0xdd82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd80), 0xcb);
        EXPECT(gbc.readMem(0xdd81), 0xab);
        // CB AB 0196
        gbc.setState(0xcc5d, 0xa004, 0x2220, 0x104f, 0x428, 0xbd02, 0x1, 0x1);
        gbc.writeMem(0xcc5d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa004);
        EXPECT(gbc.pc(), 0xcc5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc5d), 0xcb);
        EXPECT(gbc.readMem(0xcc5e), 0xab);
        // CB AB 0197
        gbc.setState(0x8cc0, 0x733, 0xd0e0, 0xac2b, 0xab4a, 0xf15f, 0x0, 0x0);
        gbc.writeMem(0x8cc0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x733);
        EXPECT(gbc.pc(), 0x8cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc0), 0xcb);
        EXPECT(gbc.readMem(0x8cc1), 0xab);
        // CB AB 0198
        gbc.setState(0x7488, 0xacba, 0x36d0, 0xa1be, 0x910b, 0xfb0e, 0x1, 0x1);
        gbc.writeMem(0x7488, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xacba);
        EXPECT(gbc.pc(), 0x748a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0199
        gbc.setState(0xb9a3, 0xbf, 0x7410, 0x894a, 0x6944, 0x5833, 0x1, 0x0);
        gbc.writeMem(0xb9a3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbf);
        EXPECT(gbc.pc(), 0xb9a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a3), 0xcb);
        EXPECT(gbc.readMem(0xb9a4), 0xab);
        // CB AB 019A
        gbc.setState(0x1fed, 0x9278, 0xa3c0, 0x3e96, 0xccda, 0x3da0, 0x1, 0x1);
        gbc.writeMem(0x1fed, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9278);
        EXPECT(gbc.pc(), 0x1fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 019B
        gbc.setState(0x1ac1, 0xa252, 0xf3d0, 0x9af2, 0xac9c, 0x5531, 0x1, 0x0);
        gbc.writeMem(0x1ac1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa252);
        EXPECT(gbc.pc(), 0x1ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 019C
        gbc.setState(0x37f3, 0xc962, 0x230, 0x8396, 0x45ad, 0x1db4, 0x1, 0x1);
        gbc.writeMem(0x37f3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc962);
        EXPECT(gbc.pc(), 0x37f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 019D
        gbc.setState(0x6d4, 0x6f52, 0x4840, 0xd828, 0x77ae, 0x87b3, 0x1, 0x1);
        gbc.writeMem(0x6d4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6f52);
        EXPECT(gbc.pc(), 0x6d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 019E
        gbc.setState(0xc594, 0x7dc8, 0x58f0, 0xa2d9, 0xace, 0xf60f, 0x1, 0x0);
        gbc.writeMem(0xc594, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7dc8);
        EXPECT(gbc.pc(), 0xc596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc594), 0xcb);
        EXPECT(gbc.readMem(0xc595), 0xab);
        // CB AB 01A0
        gbc.setState(0x35a7, 0xf65c, 0x5180, 0x1604, 0x60b7, 0x8100, 0x0, 0x0);
        gbc.writeMem(0x35a7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf65c);
        EXPECT(gbc.pc(), 0x35a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01A1
        gbc.setState(0xe2eb, 0x3f3a, 0x7fd0, 0xab34, 0xd6d3, 0xb087, 0x0, 0x0);
        gbc.writeMem(0xe2eb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3f3a);
        EXPECT(gbc.pc(), 0xe2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2eb), 0xcb);
        EXPECT(gbc.readMem(0xe2ec), 0xab);
        // CB AB 01A3
        gbc.setState(0xd82a, 0x563, 0x26f0, 0x84, 0x789f, 0xe72c, 0x1, 0x1);
        gbc.writeMem(0xd82a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x563);
        EXPECT(gbc.pc(), 0xd82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82a), 0xcb);
        EXPECT(gbc.readMem(0xd82b), 0xab);
        // CB AB 01A4
        gbc.setState(0xc8b8, 0x5cdc, 0xc6c0, 0x1a57, 0x40dd, 0x7373, 0x1, 0x0);
        gbc.writeMem(0xc8b8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5cdc);
        EXPECT(gbc.pc(), 0xc8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b8), 0xcb);
        EXPECT(gbc.readMem(0xc8b9), 0xab);
        // CB AB 01A5
        gbc.setState(0xe86f, 0x9b42, 0x7e0, 0x790a, 0x596d, 0xba2, 0x1, 0x1);
        gbc.writeMem(0xe86f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9b42);
        EXPECT(gbc.pc(), 0xe871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86f), 0xcb);
        EXPECT(gbc.readMem(0xe870), 0xab);
        // CB AB 01A6
        gbc.setState(0x7287, 0xfe24, 0xaf50, 0x407d, 0x6b10, 0xfa9f, 0x1, 0x1);
        gbc.writeMem(0x7287, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfe24);
        EXPECT(gbc.pc(), 0x7289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01A7
        gbc.setState(0x7fd8, 0x8937, 0x6150, 0xc9ca, 0x2a9f, 0x1556, 0x0, 0x0);
        gbc.writeMem(0x7fd8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8937);
        EXPECT(gbc.pc(), 0x7fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01A8
        gbc.setState(0xed3a, 0xd27d, 0x8380, 0xf89, 0x9da5, 0x8a8f, 0x1, 0x0);
        gbc.writeMem(0xed3a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd27d);
        EXPECT(gbc.pc(), 0xed3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3a), 0xcb);
        EXPECT(gbc.readMem(0xed3b), 0xab);
        // CB AB 01A9
        gbc.setState(0x22d5, 0xdfd6, 0x8ca0, 0xaf4c, 0xa696, 0xb7af, 0x0, 0x1);
        gbc.writeMem(0x22d5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xdfd6);
        EXPECT(gbc.pc(), 0x22d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01AA
        gbc.setState(0x9744, 0x2dbf, 0x53c0, 0x7a0b, 0xf49f, 0x8de5, 0x0, 0x1);
        gbc.writeMem(0x9744, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2dbf);
        EXPECT(gbc.pc(), 0x9746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9744), 0xcb);
        EXPECT(gbc.readMem(0x9745), 0xab);
        // CB AB 01AB
        gbc.setState(0xb5aa, 0xaba5, 0xff50, 0x29a7, 0x82d, 0xc275, 0x0, 0x1);
        gbc.writeMem(0xb5aa, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xaba5);
        EXPECT(gbc.pc(), 0xb5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5aa), 0xcb);
        EXPECT(gbc.readMem(0xb5ab), 0xab);
        // CB AB 01AC
        gbc.setState(0xb4c0, 0x1d59, 0xf720, 0x60bf, 0x7313, 0x7a20, 0x1, 0x1);
        gbc.writeMem(0xb4c0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1d59);
        EXPECT(gbc.pc(), 0xb4c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4c0), 0xcb);
        EXPECT(gbc.readMem(0xb4c1), 0xab);
        // CB AB 01AD
        gbc.setState(0xb12c, 0xb9a6, 0xf320, 0x1231, 0x5371, 0xde57, 0x1, 0x0);
        gbc.writeMem(0xb12c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb9a6);
        EXPECT(gbc.pc(), 0xb12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb12c), 0xcb);
        EXPECT(gbc.readMem(0xb12d), 0xab);
        // CB AB 01AE
        gbc.setState(0xeff7, 0x524, 0x4a30, 0xf1f7, 0x9cad, 0x19e7, 0x1, 0x1);
        gbc.writeMem(0xeff7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x524);
        EXPECT(gbc.pc(), 0xeff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff7), 0xcb);
        EXPECT(gbc.readMem(0xeff8), 0xab);
        // CB AB 01AF
        gbc.setState(0xca5d, 0xa9cc, 0x3cc0, 0x245e, 0xacad, 0x5d87, 0x0, 0x0);
        gbc.writeMem(0xca5d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa9cc);
        EXPECT(gbc.pc(), 0xca5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca5d), 0xcb);
        EXPECT(gbc.readMem(0xca5e), 0xab);
        // CB AB 01B1
        gbc.setState(0xc8f8, 0x18c1, 0xdbe0, 0x92ca, 0x95a2, 0xd7a6, 0x1, 0x0);
        gbc.writeMem(0xc8f8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x18c1);
        EXPECT(gbc.pc(), 0xc8fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f8), 0xcb);
        EXPECT(gbc.readMem(0xc8f9), 0xab);
        // CB AB 01B2
        gbc.setState(0xa1db, 0x9c95, 0x8ee0, 0x7907, 0x48bc, 0x514b, 0x0, 0x0);
        gbc.writeMem(0xa1db, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9c95);
        EXPECT(gbc.pc(), 0xa1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1db), 0xcb);
        EXPECT(gbc.readMem(0xa1dc), 0xab);
        // CB AB 01B3
        gbc.setState(0x9e6b, 0xe381, 0x1360, 0x6529, 0x664f, 0xfd83, 0x1, 0x0);
        gbc.writeMem(0x9e6b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe381);
        EXPECT(gbc.pc(), 0x9e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6b), 0xcb);
        EXPECT(gbc.readMem(0x9e6c), 0xab);
        // CB AB 01B4
        gbc.setState(0x7aca, 0x58, 0xb310, 0xe805, 0x8245, 0xecef, 0x1, 0x0);
        gbc.writeMem(0x7aca, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x58);
        EXPECT(gbc.pc(), 0x7acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01B5
        gbc.setState(0x4cc7, 0x35ed, 0xc590, 0x104b, 0x9963, 0x11d8, 0x0, 0x1);
        gbc.writeMem(0x4cc7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x35ed);
        EXPECT(gbc.pc(), 0x4cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01B6
        gbc.setState(0x8911, 0xeb37, 0x7580, 0xd88f, 0xd7b9, 0x680, 0x1, 0x1);
        gbc.writeMem(0x8911, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeb37);
        EXPECT(gbc.pc(), 0x8913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8911), 0xcb);
        EXPECT(gbc.readMem(0x8912), 0xab);
        // CB AB 01B7
        gbc.setState(0xad38, 0xeee6, 0x9a90, 0xc3ab, 0xb1f4, 0x3fd1, 0x0, 0x0);
        gbc.writeMem(0xad38, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xeee6);
        EXPECT(gbc.pc(), 0xad3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad38), 0xcb);
        EXPECT(gbc.readMem(0xad39), 0xab);
        // CB AB 01B8
        gbc.setState(0x72c4, 0x2884, 0x3fe0, 0xaa0b, 0xc4eb, 0xb8d, 0x0, 0x0);
        gbc.writeMem(0x72c4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2884);
        EXPECT(gbc.pc(), 0x72c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01B9
        gbc.setState(0x3679, 0x542b, 0xd6e0, 0x842, 0xca75, 0x8cdf, 0x0, 0x1);
        gbc.writeMem(0x3679, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x542b);
        EXPECT(gbc.pc(), 0x367b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01BA
        gbc.setState(0xaee1, 0xc18f, 0xd620, 0xef6e, 0x7ca4, 0x7e2f, 0x1, 0x1);
        gbc.writeMem(0xaee1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc18f);
        EXPECT(gbc.pc(), 0xaee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee1), 0xcb);
        EXPECT(gbc.readMem(0xaee2), 0xab);
        // CB AB 01BB
        gbc.setState(0xcee0, 0xdcde, 0x35c0, 0x6f7c, 0x9f46, 0xfb1d, 0x0, 0x1);
        gbc.writeMem(0xcee0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdcde);
        EXPECT(gbc.pc(), 0xcee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee0), 0xcb);
        EXPECT(gbc.readMem(0xcee1), 0xab);
        // CB AB 01BC
        gbc.setState(0x2ec2, 0x58bb, 0xd7d0, 0x9e7c, 0x8197, 0x21f1, 0x1, 0x1);
        gbc.writeMem(0x2ec2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x58bb);
        EXPECT(gbc.pc(), 0x2ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01BD
        gbc.setState(0xd08b, 0xbdc7, 0x2560, 0x8d6e, 0x8f0a, 0xad6e, 0x1, 0x1);
        gbc.writeMem(0xd08b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbdc7);
        EXPECT(gbc.pc(), 0xd08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd08b), 0xcb);
        EXPECT(gbc.readMem(0xd08c), 0xab);
        // CB AB 01BE
        gbc.setState(0x13d2, 0x5a8b, 0x9ec0, 0x5a91, 0x1634, 0x9b74, 0x0, 0x0);
        gbc.writeMem(0x13d2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5a8b);
        EXPECT(gbc.pc(), 0x13d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01BF
        gbc.setState(0xa662, 0x2609, 0xb7b0, 0xaf20, 0xefac, 0x10e1, 0x0, 0x1);
        gbc.writeMem(0xa662, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2609);
        EXPECT(gbc.pc(), 0xa664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa662), 0xcb);
        EXPECT(gbc.readMem(0xa663), 0xab);
        // CB AB 01C0
        gbc.setState(0x3405, 0xb38e, 0xc530, 0xed06, 0x4788, 0x8d63, 0x1, 0x0);
        gbc.writeMem(0x3405, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb38e);
        EXPECT(gbc.pc(), 0x3407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01C1
        gbc.setState(0x9045, 0xb8dc, 0xabc0, 0x50c8, 0x77b8, 0x3b82, 0x0, 0x1);
        gbc.writeMem(0x9045, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb8dc);
        EXPECT(gbc.pc(), 0x9047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9045), 0xcb);
        EXPECT(gbc.readMem(0x9046), 0xab);
        // CB AB 01C2
        gbc.setState(0xa040, 0x76c9, 0xbaf0, 0x61c6, 0xdf4, 0x775a, 0x0, 0x0);
        gbc.writeMem(0xa040, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x76c9);
        EXPECT(gbc.pc(), 0xa042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa040), 0xcb);
        EXPECT(gbc.readMem(0xa041), 0xab);
        // CB AB 01C3
        gbc.setState(0x9eae, 0xec16, 0xa5d0, 0x9a20, 0xed24, 0xcdc1, 0x0, 0x1);
        gbc.writeMem(0x9eae, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xec16);
        EXPECT(gbc.pc(), 0x9eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eae), 0xcb);
        EXPECT(gbc.readMem(0x9eaf), 0xab);
        // CB AB 01C4
        gbc.setState(0xafc7, 0x1f70, 0xc600, 0xcaeb, 0xdfe1, 0x626f, 0x0, 0x1);
        gbc.writeMem(0xafc7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1f70);
        EXPECT(gbc.pc(), 0xafc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc7), 0xcb);
        EXPECT(gbc.readMem(0xafc8), 0xab);
        // CB AB 01C5
        gbc.setState(0x90e1, 0xdcb0, 0x1500, 0x5b39, 0xfa30, 0x1e68, 0x1, 0x1);
        gbc.writeMem(0x90e1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdcb0);
        EXPECT(gbc.pc(), 0x90e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e1), 0xcb);
        EXPECT(gbc.readMem(0x90e2), 0xab);
        // CB AB 01C6
        gbc.setState(0x3e3f, 0x48ba, 0xccd0, 0xd60b, 0xecfc, 0x4736, 0x0, 0x1);
        gbc.writeMem(0x3e3f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x48ba);
        EXPECT(gbc.pc(), 0x3e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01C7
        gbc.setState(0x4989, 0x5cd8, 0xc530, 0x3b17, 0x34a4, 0xeaf7, 0x1, 0x0);
        gbc.writeMem(0x4989, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5cd8);
        EXPECT(gbc.pc(), 0x498b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01C9
        gbc.setState(0x236a, 0x730a, 0x7090, 0xeebe, 0xf068, 0xe9f5, 0x1, 0x0);
        gbc.writeMem(0x236a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x730a);
        EXPECT(gbc.pc(), 0x236c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01CA
        gbc.setState(0xd187, 0xcb07, 0xcdb0, 0x91a, 0x71f2, 0xeb66, 0x1, 0x1);
        gbc.writeMem(0xd187, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcb07);
        EXPECT(gbc.pc(), 0xd189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd187), 0xcb);
        EXPECT(gbc.readMem(0xd188), 0xab);
        // CB AB 01CB
        gbc.setState(0xe099, 0x3835, 0x9720, 0x37c, 0x105c, 0x8e4c, 0x0, 0x1);
        gbc.writeMem(0xe099, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3835);
        EXPECT(gbc.pc(), 0xe09b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe099), 0xcb);
        EXPECT(gbc.readMem(0xe09a), 0xab);
        // CB AB 01CC
        gbc.setState(0x55f6, 0xf9b7, 0x2790, 0x8518, 0xd2be, 0x6434, 0x1, 0x0);
        gbc.writeMem(0x55f6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf9b7);
        EXPECT(gbc.pc(), 0x55f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01CD
        gbc.setState(0xb57a, 0xf4a3, 0x8f70, 0x73d3, 0x6e46, 0x4d40, 0x0, 0x0);
        gbc.writeMem(0xb57a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf4a3);
        EXPECT(gbc.pc(), 0xb57c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb57a), 0xcb);
        EXPECT(gbc.readMem(0xb57b), 0xab);
        // CB AB 01CE
        gbc.setState(0x73ee, 0x4766, 0xb610, 0x943, 0xa8c1, 0xab10, 0x0, 0x1);
        gbc.writeMem(0x73ee, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4766);
        EXPECT(gbc.pc(), 0x73f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01CF
        gbc.setState(0x409c, 0xffb9, 0x9f40, 0xb58a, 0xb045, 0x8974, 0x0, 0x1);
        gbc.writeMem(0x409c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xffb9);
        EXPECT(gbc.pc(), 0x409e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01D0
        gbc.setState(0x3f9b, 0xb9f7, 0x68f0, 0xa557, 0xf5ba, 0x244f, 0x1, 0x0);
        gbc.writeMem(0x3f9b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb9f7);
        EXPECT(gbc.pc(), 0x3f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01D1
        gbc.setState(0x6516, 0x455e, 0xba60, 0x968, 0xad0, 0x4de1, 0x1, 0x0);
        gbc.writeMem(0x6516, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x455e);
        EXPECT(gbc.pc(), 0x6518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01D2
        gbc.setState(0x2bb1, 0xb81a, 0x4760, 0x8c67, 0x2099, 0x68b4, 0x0, 0x1);
        gbc.writeMem(0x2bb1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb81a);
        EXPECT(gbc.pc(), 0x2bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01D3
        gbc.setState(0x93d1, 0xe80b, 0x8100, 0x24f3, 0xe3c7, 0x6e29, 0x1, 0x1);
        gbc.writeMem(0x93d1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe80b);
        EXPECT(gbc.pc(), 0x93d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d1), 0xcb);
        EXPECT(gbc.readMem(0x93d2), 0xab);
        // CB AB 01D4
        gbc.setState(0x3421, 0x28a4, 0x9d40, 0xe26b, 0x7d82, 0xef0c, 0x1, 0x0);
        gbc.writeMem(0x3421, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x28a4);
        EXPECT(gbc.pc(), 0x3423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01D5
        gbc.setState(0x6ecf, 0x93bf, 0xbd00, 0xcec8, 0xb17e, 0x6d4, 0x0, 0x1);
        gbc.writeMem(0x6ecf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x93bf);
        EXPECT(gbc.pc(), 0x6ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01D6
        gbc.setState(0xb428, 0xbe29, 0x7d70, 0x312e, 0xe9f3, 0x1fc2, 0x1, 0x0);
        gbc.writeMem(0xb428, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbe29);
        EXPECT(gbc.pc(), 0xb42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb428), 0xcb);
        EXPECT(gbc.readMem(0xb429), 0xab);
        // CB AB 01D7
        gbc.setState(0x9f7b, 0x36ac, 0xfac0, 0xc21a, 0x4d50, 0x74f6, 0x1, 0x0);
        gbc.writeMem(0x9f7b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x36ac);
        EXPECT(gbc.pc(), 0x9f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7b), 0xcb);
        EXPECT(gbc.readMem(0x9f7c), 0xab);
        // CB AB 01D8
        gbc.setState(0x8dd2, 0x6950, 0xc840, 0x5215, 0xf0fe, 0x2e8, 0x1, 0x0);
        gbc.writeMem(0x8dd2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6950);
        EXPECT(gbc.pc(), 0x8dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd2), 0xcb);
        EXPECT(gbc.readMem(0x8dd3), 0xab);
        // CB AB 01D9
        gbc.setState(0x149d, 0xc2bb, 0xa0c0, 0x651d, 0x3125, 0x408, 0x0, 0x1);
        gbc.writeMem(0x149d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc2bb);
        EXPECT(gbc.pc(), 0x149f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01DA
        gbc.setState(0x9626, 0x19e7, 0x5e80, 0xaeff, 0x7c4a, 0x93b9, 0x1, 0x0);
        gbc.writeMem(0x9626, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x19e7);
        EXPECT(gbc.pc(), 0x9628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9626), 0xcb);
        EXPECT(gbc.readMem(0x9627), 0xab);
        // CB AB 01DB
        gbc.setState(0xef37, 0xf026, 0xf5b0, 0x7bc0, 0xd10a, 0xcca7, 0x1, 0x1);
        gbc.writeMem(0xef37, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf026);
        EXPECT(gbc.pc(), 0xef39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef37), 0xcb);
        EXPECT(gbc.readMem(0xef38), 0xab);
        // CB AB 01DC
        gbc.setState(0x3c9, 0x3535, 0x5030, 0x8296, 0x9495, 0x38ff, 0x1, 0x0);
        gbc.writeMem(0x3c9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3535);
        EXPECT(gbc.pc(), 0x3cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01DD
        gbc.setState(0xa0e0, 0xe05f, 0x7f00, 0xd6e2, 0x9f7a, 0x532f, 0x0, 0x1);
        gbc.writeMem(0xa0e0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe05f);
        EXPECT(gbc.pc(), 0xa0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e0), 0xcb);
        EXPECT(gbc.readMem(0xa0e1), 0xab);
        // CB AB 01DE
        gbc.setState(0xa956, 0x12da, 0x3510, 0x9602, 0x575e, 0x808b, 0x0, 0x0);
        gbc.writeMem(0xa956, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x12da);
        EXPECT(gbc.pc(), 0xa958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa956), 0xcb);
        EXPECT(gbc.readMem(0xa957), 0xab);
        // CB AB 01E0
        gbc.setState(0xb1d9, 0xaf9c, 0x9400, 0xbe6d, 0xb889, 0xa76d, 0x1, 0x0);
        gbc.writeMem(0xb1d9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xaf9c);
        EXPECT(gbc.pc(), 0xb1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d9), 0xcb);
        EXPECT(gbc.readMem(0xb1da), 0xab);
        // CB AB 01E1
        gbc.setState(0xd3bb, 0x846e, 0xfb60, 0xee71, 0x5ee2, 0x48c1, 0x0, 0x0);
        gbc.writeMem(0xd3bb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x846e);
        EXPECT(gbc.pc(), 0xd3bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3bb), 0xcb);
        EXPECT(gbc.readMem(0xd3bc), 0xab);
        // CB AB 01E2
        gbc.setState(0x8151, 0x794f, 0x880, 0xb57a, 0x7d6, 0x1085, 0x0, 0x0);
        gbc.writeMem(0x8151, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x794f);
        EXPECT(gbc.pc(), 0x8153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8151), 0xcb);
        EXPECT(gbc.readMem(0x8152), 0xab);
        // CB AB 01E3
        gbc.setState(0xe10, 0xd8a6, 0x1ea0, 0x57c5, 0x1f69, 0x45df, 0x0, 0x0);
        gbc.writeMem(0xe10, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd8a6);
        EXPECT(gbc.pc(), 0xe12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01E5
        gbc.setState(0xb700, 0x7545, 0x3dd0, 0xd1f2, 0x4f96, 0x19dd, 0x1, 0x1);
        gbc.writeMem(0xb700, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7545);
        EXPECT(gbc.pc(), 0xb702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb700), 0xcb);
        EXPECT(gbc.readMem(0xb701), 0xab);
        // CB AB 01E6
        gbc.setState(0xb401, 0xd591, 0xec40, 0xd0f9, 0xf067, 0x148d, 0x0, 0x1);
        gbc.writeMem(0xb401, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd591);
        EXPECT(gbc.pc(), 0xb403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb401), 0xcb);
        EXPECT(gbc.readMem(0xb402), 0xab);
        // CB AB 01E7
        gbc.setState(0xb619, 0x7c96, 0x17c0, 0x6818, 0xc461, 0x5842, 0x1, 0x1);
        gbc.writeMem(0xb619, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7c96);
        EXPECT(gbc.pc(), 0xb61b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb619), 0xcb);
        EXPECT(gbc.readMem(0xb61a), 0xab);
        // CB AB 01E8
        gbc.setState(0xb4c2, 0x5d72, 0xb900, 0xd9b1, 0x1d8a, 0x4742, 0x1, 0x0);
        gbc.writeMem(0xb4c2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5d72);
        EXPECT(gbc.pc(), 0xb4c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4c2), 0xcb);
        EXPECT(gbc.readMem(0xb4c3), 0xab);
        // CB AB 01EA
        gbc.setState(0x8244, 0x9559, 0x2240, 0xb049, 0xe4b, 0x71ba, 0x1, 0x0);
        gbc.writeMem(0x8244, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9559);
        EXPECT(gbc.pc(), 0x8246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8244), 0xcb);
        EXPECT(gbc.readMem(0x8245), 0xab);
        // CB AB 01EB
        gbc.setState(0x1799, 0x5361, 0xa0f0, 0x75b9, 0x8caa, 0x370, 0x0, 0x1);
        gbc.writeMem(0x1799, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5361);
        EXPECT(gbc.pc(), 0x179b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01EC
        gbc.setState(0x6e35, 0xa7a8, 0xe450, 0x80db, 0x6e8b, 0xaf83, 0x1, 0x0);
        gbc.writeMem(0x6e35, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa7a8);
        EXPECT(gbc.pc(), 0x6e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01ED
        gbc.setState(0x26bf, 0xd273, 0xc220, 0xce37, 0xc0e2, 0x86cf, 0x0, 0x0);
        gbc.writeMem(0x26bf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd273);
        EXPECT(gbc.pc(), 0x26c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01EE
        gbc.setState(0xcfad, 0xb3b7, 0x8470, 0xee39, 0xbd21, 0x3cfa, 0x0, 0x0);
        gbc.writeMem(0xcfad, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb3b7);
        EXPECT(gbc.pc(), 0xcfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfad), 0xcb);
        EXPECT(gbc.readMem(0xcfae), 0xab);
        // CB AB 01EF
        gbc.setState(0xa3ee, 0xa8bc, 0x6820, 0xa407, 0xd567, 0xa29e, 0x0, 0x0);
        gbc.writeMem(0xa3ee, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa8bc);
        EXPECT(gbc.pc(), 0xa3f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ee), 0xcb);
        EXPECT(gbc.readMem(0xa3ef), 0xab);
        // CB AB 01F0
        gbc.setState(0x7ae7, 0xdf45, 0x1cb0, 0x11ad, 0x5d67, 0xc214, 0x1, 0x0);
        gbc.writeMem(0x7ae7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdf45);
        EXPECT(gbc.pc(), 0x7ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01F1
        gbc.setState(0x289, 0x9b23, 0x5b20, 0x76e9, 0x9bb4, 0xb15d, 0x1, 0x1);
        gbc.writeMem(0x289, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9b23);
        EXPECT(gbc.pc(), 0x28b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01F2
        gbc.setState(0xd998, 0x7e6, 0xc7b0, 0x9722, 0x9ac9, 0xa0ff, 0x1, 0x0);
        gbc.writeMem(0xd998, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7e6);
        EXPECT(gbc.pc(), 0xd99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd998), 0xcb);
        EXPECT(gbc.readMem(0xd999), 0xab);
        // CB AB 01F3
        gbc.setState(0xc232, 0xdecf, 0x9160, 0x4925, 0x9bea, 0x5b, 0x1, 0x0);
        gbc.writeMem(0xc232, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdecf);
        EXPECT(gbc.pc(), 0xc234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc232), 0xcb);
        EXPECT(gbc.readMem(0xc233), 0xab);
        // CB AB 01F4
        gbc.setState(0x7129, 0x446f, 0xb2e0, 0xc55f, 0x3447, 0x8c11, 0x1, 0x0);
        gbc.writeMem(0x7129, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x446f);
        EXPECT(gbc.pc(), 0x712b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01F5
        gbc.setState(0x8ba6, 0xa0b1, 0xfaf0, 0xb371, 0x5377, 0x3545, 0x1, 0x1);
        gbc.writeMem(0x8ba6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa0b1);
        EXPECT(gbc.pc(), 0x8ba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba6), 0xcb);
        EXPECT(gbc.readMem(0x8ba7), 0xab);
        // CB AB 01F6
        gbc.setState(0x9591, 0xe532, 0x19e0, 0xaa04, 0x478d, 0x21bd, 0x0, 0x0);
        gbc.writeMem(0x9591, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe532);
        EXPECT(gbc.pc(), 0x9593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9591), 0xcb);
        EXPECT(gbc.readMem(0x9592), 0xab);
        // CB AB 01F7
        gbc.setState(0x3dcd, 0x9cfe, 0x6120, 0xa0ee, 0xb0ed, 0x143d, 0x1, 0x0);
        gbc.writeMem(0x3dcd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9cfe);
        EXPECT(gbc.pc(), 0x3dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01F8
        gbc.setState(0x4bfb, 0x6578, 0x1440, 0x71d2, 0x96a6, 0xf528, 0x1, 0x0);
        gbc.writeMem(0x4bfb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6578);
        EXPECT(gbc.pc(), 0x4bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01F9
        gbc.setState(0xeb6a, 0xd59b, 0x8510, 0xa5f2, 0xcfab, 0x2f70, 0x1, 0x0);
        gbc.writeMem(0xeb6a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd59b);
        EXPECT(gbc.pc(), 0xeb6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6a), 0xcb);
        EXPECT(gbc.readMem(0xeb6b), 0xab);
        // CB AB 01FA
        gbc.setState(0x484b, 0x4995, 0xa4c0, 0x6837, 0x6562, 0xf4, 0x1, 0x0);
        gbc.writeMem(0x484b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4995);
        EXPECT(gbc.pc(), 0x484d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 01FC
        gbc.setState(0xb65c, 0xd7b9, 0x8360, 0x334a, 0xbf1e, 0xa0b5, 0x1, 0x1);
        gbc.writeMem(0xb65c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd7b9);
        EXPECT(gbc.pc(), 0xb65e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb65c), 0xcb);
        EXPECT(gbc.readMem(0xb65d), 0xab);
        // CB AB 01FD
        gbc.setState(0xb2b6, 0x981e, 0x63d0, 0xddbd, 0x724c, 0xf5c5, 0x0, 0x1);
        gbc.writeMem(0xb2b6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x981e);
        EXPECT(gbc.pc(), 0xb2b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b6), 0xcb);
        EXPECT(gbc.readMem(0xb2b7), 0xab);
        // CB AB 01FE
        gbc.setState(0x33a6, 0xd37e, 0xb5f0, 0x6755, 0xbc39, 0x878, 0x1, 0x1);
        gbc.writeMem(0x33a6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd37e);
        EXPECT(gbc.pc(), 0x33a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 01FF
        gbc.setState(0x6c30, 0x5d38, 0xb630, 0xeffb, 0x917d, 0x219b, 0x0, 0x0);
        gbc.writeMem(0x6c30, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5d38);
        EXPECT(gbc.pc(), 0x6c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0200
        gbc.setState(0xbafe, 0xf931, 0x7db0, 0xc037, 0x150, 0xfd3d, 0x1, 0x1);
        gbc.writeMem(0xbafe, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf931);
        EXPECT(gbc.pc(), 0xbb00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafe), 0xcb);
        EXPECT(gbc.readMem(0xbaff), 0xab);
        // CB AB 0201
        gbc.setState(0x9057, 0x8d19, 0x2e60, 0x9141, 0x1ac0, 0x73ae, 0x1, 0x1);
        gbc.writeMem(0x9057, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8d19);
        EXPECT(gbc.pc(), 0x9059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9057), 0xcb);
        EXPECT(gbc.readMem(0x9058), 0xab);
        // CB AB 0202
        gbc.setState(0x5c68, 0xf040, 0xd800, 0xf658, 0x873b, 0x5312, 0x0, 0x1);
        gbc.writeMem(0x5c68, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf040);
        EXPECT(gbc.pc(), 0x5c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0203
        gbc.setState(0x3143, 0xf947, 0xd2f0, 0x2adc, 0xefc, 0x4558, 0x0, 0x1);
        gbc.writeMem(0x3143, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf947);
        EXPECT(gbc.pc(), 0x3145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0205
        gbc.setState(0xec3d, 0xacb9, 0xec40, 0x5e88, 0xbef, 0x1579, 0x0, 0x0);
        gbc.writeMem(0xec3d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xacb9);
        EXPECT(gbc.pc(), 0xec3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3d), 0xcb);
        EXPECT(gbc.readMem(0xec3e), 0xab);
        // CB AB 0206
        gbc.setState(0x13a0, 0xbfb2, 0x660, 0xcf38, 0xb8db, 0x32ed, 0x1, 0x1);
        gbc.writeMem(0x13a0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbfb2);
        EXPECT(gbc.pc(), 0x13a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0207
        gbc.setState(0x1c94, 0xccf, 0x49c0, 0xf951, 0x138a, 0xf175, 0x0, 0x0);
        gbc.writeMem(0x1c94, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xccf);
        EXPECT(gbc.pc(), 0x1c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0208
        gbc.setState(0xcbd6, 0x1530, 0xf5a0, 0x10b8, 0xafb9, 0xc017, 0x0, 0x1);
        gbc.writeMem(0xcbd6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1530);
        EXPECT(gbc.pc(), 0xcbd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd6), 0xcb);
        EXPECT(gbc.readMem(0xcbd7), 0xab);
        // CB AB 0209
        gbc.setState(0xab9e, 0x1508, 0xbe70, 0xf050, 0xdda5, 0xcd58, 0x1, 0x1);
        gbc.writeMem(0xab9e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1508);
        EXPECT(gbc.pc(), 0xaba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab9e), 0xcb);
        EXPECT(gbc.readMem(0xab9f), 0xab);
        // CB AB 020A
        gbc.setState(0xe6a, 0x5188, 0xd370, 0x9df2, 0xbbe9, 0xd122, 0x1, 0x0);
        gbc.writeMem(0xe6a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5188);
        EXPECT(gbc.pc(), 0xe6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 020B
        gbc.setState(0x7fa4, 0x569a, 0x7400, 0x9984, 0xc8b7, 0x2cd6, 0x0, 0x1);
        gbc.writeMem(0x7fa4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x569a);
        EXPECT(gbc.pc(), 0x7fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 020C
        gbc.setState(0x1540, 0xf20d, 0xec0, 0x659, 0xf18b, 0x5e81, 0x0, 0x1);
        gbc.writeMem(0x1540, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf20d);
        EXPECT(gbc.pc(), 0x1542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 020D
        gbc.setState(0xb696, 0x35d7, 0xa2d0, 0xc766, 0xc9ca, 0x1257, 0x1, 0x0);
        gbc.writeMem(0xb696, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x35d7);
        EXPECT(gbc.pc(), 0xb698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb696), 0xcb);
        EXPECT(gbc.readMem(0xb697), 0xab);
        // CB AB 020E
        gbc.setState(0xcb8d, 0x594a, 0xf620, 0x84bc, 0x311d, 0xe65b, 0x0, 0x1);
        gbc.writeMem(0xcb8d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x594a);
        EXPECT(gbc.pc(), 0xcb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb8d), 0xcb);
        EXPECT(gbc.readMem(0xcb8e), 0xab);
        // CB AB 020F
        gbc.setState(0xe79a, 0x41ef, 0x4620, 0xec4e, 0xe385, 0xeee9, 0x0, 0x0);
        gbc.writeMem(0xe79a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x41ef);
        EXPECT(gbc.pc(), 0xe79c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe79a), 0xcb);
        EXPECT(gbc.readMem(0xe79b), 0xab);
        // CB AB 0210
        gbc.setState(0xc3fe, 0x1818, 0x1270, 0xae5a, 0xf5fb, 0x7573, 0x1, 0x1);
        gbc.writeMem(0xc3fe, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1818);
        EXPECT(gbc.pc(), 0xc400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3fe), 0xcb);
        EXPECT(gbc.readMem(0xc3ff), 0xab);
        // CB AB 0211
        gbc.setState(0x2ff0, 0xbd49, 0xf4f0, 0xf10b, 0x1df6, 0xc91d, 0x0, 0x0);
        gbc.writeMem(0x2ff0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbd49);
        EXPECT(gbc.pc(), 0x2ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0212
        gbc.setState(0x39a6, 0x768d, 0xbdd0, 0x902, 0x53a9, 0xdf12, 0x0, 0x1);
        gbc.writeMem(0x39a6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x768d);
        EXPECT(gbc.pc(), 0x39a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0213
        gbc.setState(0x1f66, 0x189c, 0x6eb0, 0x9766, 0x5061, 0xc419, 0x0, 0x0);
        gbc.writeMem(0x1f66, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x189c);
        EXPECT(gbc.pc(), 0x1f68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0214
        gbc.setState(0x3dc, 0x56eb, 0x10a0, 0xff87, 0xe383, 0x2b29, 0x0, 0x1);
        gbc.writeMem(0x3dc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x56eb);
        EXPECT(gbc.pc(), 0x3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0215
        gbc.setState(0x91df, 0x104c, 0x1660, 0x7268, 0x4378, 0x5dd, 0x1, 0x0);
        gbc.writeMem(0x91df, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x104c);
        EXPECT(gbc.pc(), 0x91e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91df), 0xcb);
        EXPECT(gbc.readMem(0x91e0), 0xab);
        // CB AB 0216
        gbc.setState(0x59a7, 0x7ff7, 0xeb40, 0x8350, 0xd510, 0xf52e, 0x1, 0x0);
        gbc.writeMem(0x59a7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7ff7);
        EXPECT(gbc.pc(), 0x59a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0217
        gbc.setState(0x94b6, 0xcfe8, 0xf2d0, 0xcce0, 0x9cec, 0x5ff3, 0x0, 0x0);
        gbc.writeMem(0x94b6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcfe8);
        EXPECT(gbc.pc(), 0x94b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b6), 0xcb);
        EXPECT(gbc.readMem(0x94b7), 0xab);
        // CB AB 0218
        gbc.setState(0x72fd, 0x638, 0xb300, 0x4976, 0x3f91, 0xcc7d, 0x1, 0x1);
        gbc.writeMem(0x72fd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x638);
        EXPECT(gbc.pc(), 0x72ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0219
        gbc.setState(0xb930, 0x4634, 0xc920, 0xa70e, 0xf03c, 0xe7d9, 0x0, 0x0);
        gbc.writeMem(0xb930, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4634);
        EXPECT(gbc.pc(), 0xb932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb930), 0xcb);
        EXPECT(gbc.readMem(0xb931), 0xab);
        // CB AB 021B
        gbc.setState(0xb267, 0x8290, 0x6ca0, 0xb51, 0x5556, 0x428c, 0x1, 0x0);
        gbc.writeMem(0xb267, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8290);
        EXPECT(gbc.pc(), 0xb269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb267), 0xcb);
        EXPECT(gbc.readMem(0xb268), 0xab);
        // CB AB 021C
        gbc.setState(0xd9f3, 0x1e1c, 0xe430, 0xb46e, 0xf37, 0x948b, 0x1, 0x0);
        gbc.writeMem(0xd9f3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1e1c);
        EXPECT(gbc.pc(), 0xd9f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f3), 0xcb);
        EXPECT(gbc.readMem(0xd9f4), 0xab);
        // CB AB 021D
        gbc.setState(0xd2f6, 0x1c26, 0xc270, 0xc7eb, 0x2628, 0x83d9, 0x1, 0x0);
        gbc.writeMem(0xd2f6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1c26);
        EXPECT(gbc.pc(), 0xd2f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f6), 0xcb);
        EXPECT(gbc.readMem(0xd2f7), 0xab);
        // CB AB 021E
        gbc.setState(0x403a, 0x8432, 0xede0, 0xf979, 0xb9ce, 0x4ff7, 0x1, 0x0);
        gbc.writeMem(0x403a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8432);
        EXPECT(gbc.pc(), 0x403c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 021F
        gbc.setState(0xdf94, 0x8a6c, 0x2030, 0x45a2, 0x3114, 0x54e7, 0x1, 0x0);
        gbc.writeMem(0xdf94, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8a6c);
        EXPECT(gbc.pc(), 0xdf96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf94), 0xcb);
        EXPECT(gbc.readMem(0xdf95), 0xab);
        // CB AB 0220
        gbc.setState(0x396e, 0xb75, 0x9b80, 0x8f46, 0x21f4, 0xa15d, 0x0, 0x1);
        gbc.writeMem(0x396e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb75);
        EXPECT(gbc.pc(), 0x3970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0221
        gbc.setState(0x4947, 0x18a6, 0x6690, 0x5af7, 0x22df, 0xdb87, 0x1, 0x0);
        gbc.writeMem(0x4947, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x18a6);
        EXPECT(gbc.pc(), 0x4949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0222
        gbc.setState(0xce72, 0x6ab9, 0xcf10, 0x6530, 0x3582, 0xab44, 0x1, 0x0);
        gbc.writeMem(0xce72, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6ab9);
        EXPECT(gbc.pc(), 0xce74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce72), 0xcb);
        EXPECT(gbc.readMem(0xce73), 0xab);
        // CB AB 0224
        gbc.setState(0x2812, 0xaecb, 0x41d0, 0x1a88, 0xa757, 0xf448, 0x0, 0x0);
        gbc.writeMem(0x2812, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xaecb);
        EXPECT(gbc.pc(), 0x2814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0225
        gbc.setState(0x3175, 0xcdc6, 0x4240, 0xbd22, 0x94f9, 0xc583, 0x0, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcdc6);
        EXPECT(gbc.pc(), 0x3177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0226
        gbc.setState(0xbe8d, 0x29e1, 0x26a0, 0x4e9d, 0x2303, 0xc533, 0x0, 0x1);
        gbc.writeMem(0xbe8d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x29e1);
        EXPECT(gbc.pc(), 0xbe8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8d), 0xcb);
        EXPECT(gbc.readMem(0xbe8e), 0xab);
        // CB AB 0228
        gbc.setState(0xbbe3, 0xc3cd, 0x1430, 0x9dac, 0x4307, 0xc961, 0x1, 0x0);
        gbc.writeMem(0xbbe3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc3cd);
        EXPECT(gbc.pc(), 0xbbe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe3), 0xcb);
        EXPECT(gbc.readMem(0xbbe4), 0xab);
        // CB AB 0229
        gbc.setState(0xd1e5, 0x20d2, 0x4f00, 0x71e2, 0x2149, 0x312b, 0x0, 0x0);
        gbc.writeMem(0xd1e5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x20d2);
        EXPECT(gbc.pc(), 0xd1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e5), 0xcb);
        EXPECT(gbc.readMem(0xd1e6), 0xab);
        // CB AB 022A
        gbc.setState(0xc74f, 0x5c65, 0x9ec0, 0x1ecf, 0xf802, 0x1a38, 0x0, 0x1);
        gbc.writeMem(0xc74f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5c65);
        EXPECT(gbc.pc(), 0xc751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74f), 0xcb);
        EXPECT(gbc.readMem(0xc750), 0xab);
        // CB AB 022B
        gbc.setState(0x594b, 0x9c21, 0xe900, 0x2105, 0xfa0, 0xe778, 0x1, 0x1);
        gbc.writeMem(0x594b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9c21);
        EXPECT(gbc.pc(), 0x594d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 022C
        gbc.setState(0xecce, 0xade7, 0x16f0, 0xc3ca, 0xbe4e, 0xbc32, 0x0, 0x0);
        gbc.writeMem(0xecce, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xade7);
        EXPECT(gbc.pc(), 0xecd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecce), 0xcb);
        EXPECT(gbc.readMem(0xeccf), 0xab);
        // CB AB 022D
        gbc.setState(0xd967, 0xbaf, 0xbd50, 0xc05a, 0xab41, 0x49b7, 0x1, 0x0);
        gbc.writeMem(0xd967, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xbaf);
        EXPECT(gbc.pc(), 0xd969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd967), 0xcb);
        EXPECT(gbc.readMem(0xd968), 0xab);
        // CB AB 022E
        gbc.setState(0x1de7, 0x740c, 0xede0, 0xeea3, 0x4119, 0xb28c, 0x0, 0x0);
        gbc.writeMem(0x1de7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x740c);
        EXPECT(gbc.pc(), 0x1de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 022F
        gbc.setState(0xd732, 0x6c16, 0x2830, 0x5cf8, 0xccc, 0xff22, 0x0, 0x1);
        gbc.writeMem(0xd732, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6c16);
        EXPECT(gbc.pc(), 0xd734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd732), 0xcb);
        EXPECT(gbc.readMem(0xd733), 0xab);
        // CB AB 0230
        gbc.setState(0x9a58, 0x56eb, 0xd220, 0xf6fb, 0x6428, 0x363d, 0x1, 0x1);
        gbc.writeMem(0x9a58, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x56eb);
        EXPECT(gbc.pc(), 0x9a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a58), 0xcb);
        EXPECT(gbc.readMem(0x9a59), 0xab);
        // CB AB 0231
        gbc.setState(0xb19d, 0xc58a, 0x1020, 0xb560, 0xf87a, 0x8fb, 0x1, 0x1);
        gbc.writeMem(0xb19d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc58a);
        EXPECT(gbc.pc(), 0xb19f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb19d), 0xcb);
        EXPECT(gbc.readMem(0xb19e), 0xab);
        // CB AB 0232
        gbc.setState(0xc605, 0x6f8, 0x6180, 0x7c0e, 0xb72c, 0x5efe, 0x1, 0x0);
        gbc.writeMem(0xc605, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6f8);
        EXPECT(gbc.pc(), 0xc607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc605), 0xcb);
        EXPECT(gbc.readMem(0xc606), 0xab);
        // CB AB 0233
        gbc.setState(0x2e93, 0xe5c4, 0x49f0, 0x96d9, 0xb7aa, 0x5062, 0x0, 0x1);
        gbc.writeMem(0x2e93, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe5c4);
        EXPECT(gbc.pc(), 0x2e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0234
        gbc.setState(0x5cc9, 0x4596, 0xc070, 0x8ef7, 0xa54, 0xa1c6, 0x1, 0x0);
        gbc.writeMem(0x5cc9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4596);
        EXPECT(gbc.pc(), 0x5ccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0235
        gbc.setState(0x9032, 0xe065, 0x54f0, 0x60c4, 0x393e, 0x2b50, 0x0, 0x1);
        gbc.writeMem(0x9032, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe065);
        EXPECT(gbc.pc(), 0x9034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9032), 0xcb);
        EXPECT(gbc.readMem(0x9033), 0xab);
        // CB AB 0236
        gbc.setState(0x9b10, 0xfaf8, 0xad40, 0x925d, 0xc6dd, 0x5a34, 0x0, 0x1);
        gbc.writeMem(0x9b10, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfaf8);
        EXPECT(gbc.pc(), 0x9b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b10), 0xcb);
        EXPECT(gbc.readMem(0x9b11), 0xab);
        // CB AB 0237
        gbc.setState(0x6264, 0x5333, 0x5b70, 0x418b, 0xd4c6, 0x7f29, 0x1, 0x1);
        gbc.writeMem(0x6264, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5333);
        EXPECT(gbc.pc(), 0x6266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0239
        gbc.setState(0x1751, 0x6b59, 0x4570, 0xf676, 0x7ec1, 0x56cd, 0x1, 0x1);
        gbc.writeMem(0x1751, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6b59);
        EXPECT(gbc.pc(), 0x1753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 023A
        gbc.setState(0xcc70, 0x9a6f, 0x1680, 0x2573, 0xce86, 0x1de1, 0x1, 0x0);
        gbc.writeMem(0xcc70, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9a6f);
        EXPECT(gbc.pc(), 0xcc72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc70), 0xcb);
        EXPECT(gbc.readMem(0xcc71), 0xab);
        // CB AB 023B
        gbc.setState(0x2a31, 0x3e24, 0xece0, 0x478, 0x2113, 0x8041, 0x1, 0x0);
        gbc.writeMem(0x2a31, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3e24);
        EXPECT(gbc.pc(), 0x2a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 023C
        gbc.setState(0x18c7, 0x3b87, 0xf770, 0xe4d8, 0xb4f8, 0x8136, 0x1, 0x0);
        gbc.writeMem(0x18c7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3b87);
        EXPECT(gbc.pc(), 0x18c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 023D
        gbc.setState(0xd81d, 0x80aa, 0xf2f0, 0xc0d1, 0xbb52, 0x8003, 0x0, 0x1);
        gbc.writeMem(0xd81d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x80aa);
        EXPECT(gbc.pc(), 0xd81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd81d), 0xcb);
        EXPECT(gbc.readMem(0xd81e), 0xab);
        // CB AB 023E
        gbc.setState(0x2f27, 0xba72, 0xa7a0, 0xe3c1, 0x44ae, 0x57da, 0x0, 0x1);
        gbc.writeMem(0x2f27, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xba72);
        EXPECT(gbc.pc(), 0x2f29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 023F
        gbc.setState(0x5be7, 0x5cea, 0x3dc0, 0x347f, 0xb762, 0x4b16, 0x0, 0x0);
        gbc.writeMem(0x5be7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5cea);
        EXPECT(gbc.pc(), 0x5be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0240
        gbc.setState(0x646b, 0x27c5, 0x1ca0, 0x1954, 0xbd88, 0xf60, 0x1, 0x1);
        gbc.writeMem(0x646b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x27c5);
        EXPECT(gbc.pc(), 0x646d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0241
        gbc.setState(0x9a1c, 0x7d59, 0x11a0, 0xff29, 0xe49c, 0x45ac, 0x0, 0x1);
        gbc.writeMem(0x9a1c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7d59);
        EXPECT(gbc.pc(), 0x9a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1c), 0xcb);
        EXPECT(gbc.readMem(0x9a1d), 0xab);
        // CB AB 0242
        gbc.setState(0xd861, 0x2b73, 0x1a50, 0x6bd1, 0xa5eb, 0xca19, 0x1, 0x1);
        gbc.writeMem(0xd861, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2b73);
        EXPECT(gbc.pc(), 0xd863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd861), 0xcb);
        EXPECT(gbc.readMem(0xd862), 0xab);
        // CB AB 0243
        gbc.setState(0x29da, 0x70fc, 0xee70, 0xac32, 0xff7b, 0xded5, 0x0, 0x0);
        gbc.writeMem(0x29da, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x70fc);
        EXPECT(gbc.pc(), 0x29dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0244
        gbc.setState(0xdb7c, 0x975, 0x78b0, 0x9337, 0x540, 0xfe97, 0x0, 0x0);
        gbc.writeMem(0xdb7c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x975);
        EXPECT(gbc.pc(), 0xdb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7c), 0xcb);
        EXPECT(gbc.readMem(0xdb7d), 0xab);
        // CB AB 0245
        gbc.setState(0x6ae, 0x8adf, 0xd540, 0x77d0, 0x582f, 0x81a9, 0x1, 0x1);
        gbc.writeMem(0x6ae, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8adf);
        EXPECT(gbc.pc(), 0x6b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0246
        gbc.setState(0x4519, 0x9bb5, 0x2ec0, 0x8e87, 0x79a6, 0x833, 0x0, 0x1);
        gbc.writeMem(0x4519, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9bb5);
        EXPECT(gbc.pc(), 0x451b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0247
        gbc.setState(0xa955, 0x712c, 0xd770, 0x41ce, 0x1216, 0x3c04, 0x0, 0x0);
        gbc.writeMem(0xa955, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x712c);
        EXPECT(gbc.pc(), 0xa957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa955), 0xcb);
        EXPECT(gbc.readMem(0xa956), 0xab);
        // CB AB 0248
        gbc.setState(0x10b6, 0xb4f8, 0x4a10, 0xd205, 0xfe7, 0x344b, 0x0, 0x1);
        gbc.writeMem(0x10b6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb4f8);
        EXPECT(gbc.pc(), 0x10b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0249
        gbc.setState(0x8c4, 0xc2a1, 0x5b80, 0x76fc, 0x8aac, 0xf384, 0x1, 0x0);
        gbc.writeMem(0x8c4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc2a1);
        EXPECT(gbc.pc(), 0x8c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 024A
        gbc.setState(0xc152, 0xd23d, 0x1940, 0x934d, 0x273b, 0x9861, 0x0, 0x0);
        gbc.writeMem(0xc152, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd23d);
        EXPECT(gbc.pc(), 0xc154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc152), 0xcb);
        EXPECT(gbc.readMem(0xc153), 0xab);
        // CB AB 024B
        gbc.setState(0x9654, 0xce70, 0xff80, 0xa134, 0x4128, 0xa1c9, 0x0, 0x0);
        gbc.writeMem(0x9654, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xce70);
        EXPECT(gbc.pc(), 0x9656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9654), 0xcb);
        EXPECT(gbc.readMem(0x9655), 0xab);
        // CB AB 024C
        gbc.setState(0x4d00, 0x2468, 0x1910, 0xb938, 0x225b, 0x8acc, 0x1, 0x0);
        gbc.writeMem(0x4d00, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2468);
        EXPECT(gbc.pc(), 0x4d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 024D
        gbc.setState(0xeea2, 0x6ea3, 0x55d0, 0x7ea8, 0xd145, 0x82e8, 0x1, 0x1);
        gbc.writeMem(0xeea2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6ea3);
        EXPECT(gbc.pc(), 0xeea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea2), 0xcb);
        EXPECT(gbc.readMem(0xeea3), 0xab);
        // CB AB 024E
        gbc.setState(0x3a0b, 0x18e1, 0xe3e0, 0xf529, 0x463e, 0x629d, 0x1, 0x1);
        gbc.writeMem(0x3a0b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x18e1);
        EXPECT(gbc.pc(), 0x3a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 024F
        gbc.setState(0xe1f, 0x551d, 0xc960, 0x86b1, 0x6925, 0xc3df, 0x0, 0x1);
        gbc.writeMem(0xe1f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x551d);
        EXPECT(gbc.pc(), 0xe21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0250
        gbc.setState(0x4c2b, 0xa509, 0x980, 0x485, 0xef68, 0xf452, 0x1, 0x0);
        gbc.writeMem(0x4c2b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa509);
        EXPECT(gbc.pc(), 0x4c2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0251
        gbc.setState(0x8d9e, 0xf2f1, 0x1290, 0x5657, 0x989a, 0x486b, 0x1, 0x0);
        gbc.writeMem(0x8d9e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf2f1);
        EXPECT(gbc.pc(), 0x8da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d9e), 0xcb);
        EXPECT(gbc.readMem(0x8d9f), 0xab);
        // CB AB 0252
        gbc.setState(0x713e, 0x657f, 0x5d00, 0xc996, 0x8dcf, 0x6af9, 0x0, 0x1);
        gbc.writeMem(0x713e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x657f);
        EXPECT(gbc.pc(), 0x7140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0253
        gbc.setState(0xb523, 0x5975, 0x6fa0, 0x715e, 0xa029, 0x4a10, 0x1, 0x0);
        gbc.writeMem(0xb523, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5975);
        EXPECT(gbc.pc(), 0xb525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb523), 0xcb);
        EXPECT(gbc.readMem(0xb524), 0xab);
        // CB AB 0254
        gbc.setState(0xfac, 0xe288, 0xd7f0, 0x2f64, 0xaa89, 0x3848, 0x0, 0x0);
        gbc.writeMem(0xfac, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe288);
        EXPECT(gbc.pc(), 0xfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0255
        gbc.setState(0xef1b, 0x7c7c, 0x6bc0, 0x113a, 0x98d8, 0xcc47, 0x1, 0x0);
        gbc.writeMem(0xef1b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7c7c);
        EXPECT(gbc.pc(), 0xef1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1b), 0xcb);
        EXPECT(gbc.readMem(0xef1c), 0xab);
        // CB AB 0256
        gbc.setState(0x92ec, 0x5c6c, 0x1930, 0xaee6, 0x6e62, 0x2a9, 0x0, 0x1);
        gbc.writeMem(0x92ec, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5c6c);
        EXPECT(gbc.pc(), 0x92ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ec), 0xcb);
        EXPECT(gbc.readMem(0x92ed), 0xab);
        // CB AB 0257
        gbc.setState(0x7bbc, 0xb0c5, 0x5d80, 0xec6f, 0xbc97, 0x2dbb, 0x0, 0x0);
        gbc.writeMem(0x7bbc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb0c5);
        EXPECT(gbc.pc(), 0x7bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0258
        gbc.setState(0x818d, 0x7562, 0xe820, 0x7c55, 0x2fb3, 0xa8a, 0x1, 0x1);
        gbc.writeMem(0x818d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7562);
        EXPECT(gbc.pc(), 0x818f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818d), 0xcb);
        EXPECT(gbc.readMem(0x818e), 0xab);
        // CB AB 025A
        gbc.setState(0xb8d, 0x8110, 0xa880, 0x8058, 0xec67, 0xfe6c, 0x0, 0x0);
        gbc.writeMem(0xb8d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8110);
        EXPECT(gbc.pc(), 0xb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 025B
        gbc.setState(0x1a5f, 0xc18f, 0xdc80, 0xa9fe, 0x9cf7, 0x87e5, 0x1, 0x1);
        gbc.writeMem(0x1a5f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc18f);
        EXPECT(gbc.pc(), 0x1a61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 025C
        gbc.setState(0x6cd3, 0xadf6, 0xab00, 0x1cb6, 0x87b7, 0xd8dc, 0x1, 0x1);
        gbc.writeMem(0x6cd3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xadf6);
        EXPECT(gbc.pc(), 0x6cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 025D
        gbc.setState(0x7395, 0xf1dd, 0x9470, 0x42b5, 0x92c2, 0x7e06, 0x1, 0x0);
        gbc.writeMem(0x7395, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf1dd);
        EXPECT(gbc.pc(), 0x7397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 025E
        gbc.setState(0x7bdd, 0xa9ae, 0x74f0, 0xd60f, 0x62cb, 0x97f2, 0x0, 0x0);
        gbc.writeMem(0x7bdd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa9ae);
        EXPECT(gbc.pc(), 0x7bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 025F
        gbc.setState(0xac19, 0x1581, 0x4300, 0xefd4, 0x75a4, 0xd270, 0x0, 0x0);
        gbc.writeMem(0xac19, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1581);
        EXPECT(gbc.pc(), 0xac1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac19), 0xcb);
        EXPECT(gbc.readMem(0xac1a), 0xab);
        // CB AB 0260
        gbc.setState(0x2e49, 0xb1dd, 0x51a0, 0xa3be, 0x32ca, 0x4350, 0x0, 0x0);
        gbc.writeMem(0x2e49, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb1dd);
        EXPECT(gbc.pc(), 0x2e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0261
        gbc.setState(0x1800, 0xfa88, 0xead0, 0xfb44, 0x73e4, 0x262a, 0x1, 0x1);
        gbc.writeMem(0x1800, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfa88);
        EXPECT(gbc.pc(), 0x1802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0262
        gbc.setState(0x23b2, 0x949a, 0x18e0, 0x4257, 0x16af, 0x788b, 0x1, 0x0);
        gbc.writeMem(0x23b2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x949a);
        EXPECT(gbc.pc(), 0x23b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0263
        gbc.setState(0xcd15, 0x4ca4, 0x1da0, 0xcd93, 0x98e7, 0x1b5b, 0x0, 0x1);
        gbc.writeMem(0xcd15, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4ca4);
        EXPECT(gbc.pc(), 0xcd17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd15), 0xcb);
        EXPECT(gbc.readMem(0xcd16), 0xab);
        // CB AB 0264
        gbc.setState(0x5a9c, 0xa579, 0x1830, 0x5fd8, 0x8c10, 0xc905, 0x0, 0x0);
        gbc.writeMem(0x5a9c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa579);
        EXPECT(gbc.pc(), 0x5a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0265
        gbc.setState(0x6df9, 0x1e97, 0x7780, 0x4aa5, 0xe939, 0xe649, 0x1, 0x0);
        gbc.writeMem(0x6df9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1e97);
        EXPECT(gbc.pc(), 0x6dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0266
        gbc.setState(0x43, 0xd068, 0x2110, 0x99d3, 0xaf21, 0x6c57, 0x0, 0x1);
        gbc.writeMem(0x43, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd068);
        EXPECT(gbc.pc(), 0x45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0267
        gbc.setState(0xe17e, 0xff1b, 0x2300, 0x5fa8, 0x56ea, 0x1f42, 0x0, 0x0);
        gbc.writeMem(0xe17e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xff1b);
        EXPECT(gbc.pc(), 0xe180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe17e), 0xcb);
        EXPECT(gbc.readMem(0xe17f), 0xab);
        // CB AB 0268
        gbc.setState(0x9482, 0xcd96, 0xaa40, 0x93f9, 0x182d, 0xd0b1, 0x0, 0x0);
        gbc.writeMem(0x9482, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcd96);
        EXPECT(gbc.pc(), 0x9484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9482), 0xcb);
        EXPECT(gbc.readMem(0x9483), 0xab);
        // CB AB 0269
        gbc.setState(0x646f, 0xedf4, 0xb9a0, 0x166c, 0xfb52, 0xd152, 0x0, 0x0);
        gbc.writeMem(0x646f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xedf4);
        EXPECT(gbc.pc(), 0x6471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 026A
        gbc.setState(0x47c6, 0x5f3d, 0x4de0, 0x1844, 0xe9a, 0xdb43, 0x0, 0x1);
        gbc.writeMem(0x47c6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5f3d);
        EXPECT(gbc.pc(), 0x47c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 026B
        gbc.setState(0xe00b, 0xe383, 0xc80, 0xc4fa, 0x24bb, 0x5236, 0x0, 0x0);
        gbc.writeMem(0xe00b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe383);
        EXPECT(gbc.pc(), 0xe00d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00b), 0xcb);
        EXPECT(gbc.readMem(0xe00c), 0xab);
        // CB AB 026C
        gbc.setState(0x9405, 0xb6eb, 0xa750, 0x8b0e, 0xa667, 0xa81f, 0x0, 0x0);
        gbc.writeMem(0x9405, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb6eb);
        EXPECT(gbc.pc(), 0x9407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9405), 0xcb);
        EXPECT(gbc.readMem(0x9406), 0xab);
        // CB AB 026D
        gbc.setState(0x1d76, 0x9b28, 0x9770, 0x47d5, 0xef65, 0xf185, 0x1, 0x0);
        gbc.writeMem(0x1d76, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9b28);
        EXPECT(gbc.pc(), 0x1d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 026E
        gbc.setState(0xf5a, 0xbd3e, 0x3230, 0x7c2b, 0x8d4e, 0x73d7, 0x0, 0x0);
        gbc.writeMem(0xf5a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbd3e);
        EXPECT(gbc.pc(), 0xf5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 026F
        gbc.setState(0x5e3a, 0x58ae, 0x69d0, 0x1d8f, 0x9d95, 0xb176, 0x0, 0x1);
        gbc.writeMem(0x5e3a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x58ae);
        EXPECT(gbc.pc(), 0x5e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0270
        gbc.setState(0x54f9, 0xd498, 0x3e80, 0xe9ff, 0x2fb, 0x5add, 0x1, 0x0);
        gbc.writeMem(0x54f9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd498);
        EXPECT(gbc.pc(), 0x54fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0271
        gbc.setState(0x18a5, 0x655a, 0x8b50, 0xf6ca, 0x5b3b, 0xef02, 0x1, 0x1);
        gbc.writeMem(0x18a5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x655a);
        EXPECT(gbc.pc(), 0x18a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0272
        gbc.setState(0x778b, 0xfdea, 0x9b00, 0x82bc, 0xd898, 0xc24c, 0x1, 0x0);
        gbc.writeMem(0x778b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfdea);
        EXPECT(gbc.pc(), 0x778d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0273
        gbc.setState(0x5fe4, 0x2217, 0xf110, 0x51a1, 0x110c, 0xe0f9, 0x1, 0x0);
        gbc.writeMem(0x5fe4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2217);
        EXPECT(gbc.pc(), 0x5fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0274
        gbc.setState(0xc426, 0x447f, 0x43c0, 0xbee, 0xbec3, 0x2dd0, 0x1, 0x1);
        gbc.writeMem(0xc426, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x447f);
        EXPECT(gbc.pc(), 0xc428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc426), 0xcb);
        EXPECT(gbc.readMem(0xc427), 0xab);
        // CB AB 0276
        gbc.setState(0xbe18, 0x7485, 0xf820, 0xf2c7, 0xcfea, 0xf25d, 0x0, 0x1);
        gbc.writeMem(0xbe18, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7485);
        EXPECT(gbc.pc(), 0xbe1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe18), 0xcb);
        EXPECT(gbc.readMem(0xbe19), 0xab);
        // CB AB 0277
        gbc.setState(0x1f31, 0x4c7, 0x9c80, 0x4354, 0xce07, 0x570a, 0x0, 0x1);
        gbc.writeMem(0x1f31, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4c7);
        EXPECT(gbc.pc(), 0x1f33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0278
        gbc.setState(0x697c, 0xd720, 0xc590, 0x3aa8, 0x98ce, 0x5f7f, 0x0, 0x1);
        gbc.writeMem(0x697c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd720);
        EXPECT(gbc.pc(), 0x697e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0279
        gbc.setState(0x9d07, 0x4567, 0x4a90, 0xf43a, 0x647d, 0xe31, 0x0, 0x1);
        gbc.writeMem(0x9d07, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4567);
        EXPECT(gbc.pc(), 0x9d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d07), 0xcb);
        EXPECT(gbc.readMem(0x9d08), 0xab);
        // CB AB 027A
        gbc.setState(0x6283, 0x91b1, 0x54d0, 0x3cbf, 0x19f7, 0xc357, 0x0, 0x1);
        gbc.writeMem(0x6283, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x91b1);
        EXPECT(gbc.pc(), 0x6285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 027B
        gbc.setState(0x4553, 0x513c, 0x4600, 0x19e7, 0xd25b, 0xae01, 0x0, 0x0);
        gbc.writeMem(0x4553, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x513c);
        EXPECT(gbc.pc(), 0x4555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 027C
        gbc.setState(0x33e4, 0xa487, 0xa760, 0x4d78, 0x8c4a, 0xab70, 0x0, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa487);
        EXPECT(gbc.pc(), 0x33e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 027F
        gbc.setState(0x3d68, 0x280b, 0x5500, 0xe1e3, 0x8500, 0x648a, 0x1, 0x1);
        gbc.writeMem(0x3d68, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x280b);
        EXPECT(gbc.pc(), 0x3d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0281
        gbc.setState(0x5c74, 0x1fc4, 0x4210, 0x5574, 0x210d, 0xc08e, 0x0, 0x0);
        gbc.writeMem(0x5c74, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1fc4);
        EXPECT(gbc.pc(), 0x5c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0282
        gbc.setState(0xbf71, 0x77a0, 0x5520, 0x482b, 0x3ac7, 0xba41, 0x1, 0x0);
        gbc.writeMem(0xbf71, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x77a0);
        EXPECT(gbc.pc(), 0xbf73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf71), 0xcb);
        EXPECT(gbc.readMem(0xbf72), 0xab);
        // CB AB 0283
        gbc.setState(0x5fc2, 0xb96d, 0xb150, 0xde76, 0xe8af, 0x196f, 0x1, 0x1);
        gbc.writeMem(0x5fc2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb96d);
        EXPECT(gbc.pc(), 0x5fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0284
        gbc.setState(0xc8d3, 0xc2de, 0x99a0, 0x3abf, 0xa20, 0x6ee7, 0x0, 0x0);
        gbc.writeMem(0xc8d3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc2de);
        EXPECT(gbc.pc(), 0xc8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d3), 0xcb);
        EXPECT(gbc.readMem(0xc8d4), 0xab);
        // CB AB 0285
        gbc.setState(0xcfbf, 0x20a9, 0xb9f0, 0xc0f9, 0x84f9, 0xf7e3, 0x1, 0x0);
        gbc.writeMem(0xcfbf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x20a9);
        EXPECT(gbc.pc(), 0xcfc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfbf), 0xcb);
        EXPECT(gbc.readMem(0xcfc0), 0xab);
        // CB AB 0286
        gbc.setState(0x99e4, 0x4b91, 0xdd30, 0xe083, 0xebc5, 0xe0b8, 0x0, 0x1);
        gbc.writeMem(0x99e4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4b91);
        EXPECT(gbc.pc(), 0x99e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e4), 0xcb);
        EXPECT(gbc.readMem(0x99e5), 0xab);
        // CB AB 0287
        gbc.setState(0x685c, 0x5dcd, 0x3940, 0xa3b7, 0x5b5c, 0xb6fb, 0x0, 0x0);
        gbc.writeMem(0x685c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5dcd);
        EXPECT(gbc.pc(), 0x685e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0289
        gbc.setState(0x948f, 0x3e38, 0x1dc0, 0xd2f3, 0x84bf, 0x3169, 0x1, 0x0);
        gbc.writeMem(0x948f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3e38);
        EXPECT(gbc.pc(), 0x9491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948f), 0xcb);
        EXPECT(gbc.readMem(0x9490), 0xab);
        // CB AB 028A
        gbc.setState(0x8a5e, 0x509, 0x8350, 0x8def, 0x1e81, 0x239d, 0x1, 0x1);
        gbc.writeMem(0x8a5e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x509);
        EXPECT(gbc.pc(), 0x8a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a5e), 0xcb);
        EXPECT(gbc.readMem(0x8a5f), 0xab);
        // CB AB 028C
        gbc.setState(0x36c0, 0x71cb, 0xb590, 0xe1a6, 0xcf76, 0xfdac, 0x0, 0x0);
        gbc.writeMem(0x36c0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x71cb);
        EXPECT(gbc.pc(), 0x36c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 028D
        gbc.setState(0x1127, 0x2431, 0xccd0, 0x443, 0xf435, 0xf631, 0x0, 0x0);
        gbc.writeMem(0x1127, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2431);
        EXPECT(gbc.pc(), 0x1129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 028E
        gbc.setState(0x4630, 0xf687, 0x800, 0x5ac1, 0xec9c, 0xdd52, 0x0, 0x1);
        gbc.writeMem(0x4630, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf687);
        EXPECT(gbc.pc(), 0x4632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 028F
        gbc.setState(0xba00, 0x63d2, 0xe3c0, 0x58a0, 0x8517, 0x9970, 0x1, 0x1);
        gbc.writeMem(0xba00, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x63d2);
        EXPECT(gbc.pc(), 0xba02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba00), 0xcb);
        EXPECT(gbc.readMem(0xba01), 0xab);
        // CB AB 0290
        gbc.setState(0x4d2e, 0x86ea, 0x10, 0x7a88, 0x92e6, 0x9c12, 0x1, 0x1);
        gbc.writeMem(0x4d2e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x86ea);
        EXPECT(gbc.pc(), 0x4d30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0291
        gbc.setState(0x2ba, 0x7818, 0x59d0, 0xe319, 0x49d2, 0x1c27, 0x0, 0x0);
        gbc.writeMem(0x2ba, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7818);
        EXPECT(gbc.pc(), 0x2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0292
        gbc.setState(0xc4ff, 0x1158, 0x19a0, 0x5f19, 0xed1e, 0x52da, 0x0, 0x0);
        gbc.writeMem(0xc4ff, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1158);
        EXPECT(gbc.pc(), 0xc501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ff), 0xcb);
        EXPECT(gbc.readMem(0xc500), 0xab);
        // CB AB 0293
        gbc.setState(0xd221, 0x2051, 0xd730, 0x9d5d, 0x172e, 0x3f02, 0x1, 0x1);
        gbc.writeMem(0xd221, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2051);
        EXPECT(gbc.pc(), 0xd223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd221), 0xcb);
        EXPECT(gbc.readMem(0xd222), 0xab);
        // CB AB 0294
        gbc.setState(0x398a, 0x708b, 0xf0, 0xd868, 0x48fe, 0x6677, 0x0, 0x1);
        gbc.writeMem(0x398a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x708b);
        EXPECT(gbc.pc(), 0x398c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0295
        gbc.setState(0x6e06, 0x2fe2, 0x3a60, 0x2cbf, 0x7b05, 0x8238, 0x1, 0x0);
        gbc.writeMem(0x6e06, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2fe2);
        EXPECT(gbc.pc(), 0x6e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0296
        gbc.setState(0x3b88, 0xe7f0, 0x4960, 0x693c, 0x4da7, 0x2b0b, 0x0, 0x0);
        gbc.writeMem(0x3b88, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe7f0);
        EXPECT(gbc.pc(), 0x3b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0297
        gbc.setState(0x3ec2, 0xb9a1, 0xd6a0, 0x21f3, 0xaa97, 0x917a, 0x1, 0x1);
        gbc.writeMem(0x3ec2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb9a1);
        EXPECT(gbc.pc(), 0x3ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0298
        gbc.setState(0x77ae, 0x1780, 0x52d0, 0x6876, 0x371c, 0xadaa, 0x0, 0x1);
        gbc.writeMem(0x77ae, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1780);
        EXPECT(gbc.pc(), 0x77b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0299
        gbc.setState(0x5f88, 0x386d, 0xa780, 0xe05f, 0xf32e, 0xfd54, 0x0, 0x1);
        gbc.writeMem(0x5f88, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x386d);
        EXPECT(gbc.pc(), 0x5f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 029B
        gbc.setState(0xb0ac, 0xe01a, 0xe240, 0x3475, 0x4bdf, 0xf931, 0x1, 0x0);
        gbc.writeMem(0xb0ac, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe01a);
        EXPECT(gbc.pc(), 0xb0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ac), 0xcb);
        EXPECT(gbc.readMem(0xb0ad), 0xab);
        // CB AB 029C
        gbc.setState(0xe977, 0xcb80, 0x4f70, 0x65d9, 0xf89, 0x62, 0x1, 0x0);
        gbc.writeMem(0xe977, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcb80);
        EXPECT(gbc.pc(), 0xe979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe977), 0xcb);
        EXPECT(gbc.readMem(0xe978), 0xab);
        // CB AB 029D
        gbc.setState(0x439b, 0xe1ad, 0xb2b0, 0x90cc, 0x858e, 0x830, 0x1, 0x0);
        gbc.writeMem(0x439b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe1ad);
        EXPECT(gbc.pc(), 0x439d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 029F
        gbc.setState(0xad65, 0x7586, 0x5280, 0xf1cd, 0xfee4, 0x4273, 0x1, 0x0);
        gbc.writeMem(0xad65, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7586);
        EXPECT(gbc.pc(), 0xad67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad65), 0xcb);
        EXPECT(gbc.readMem(0xad66), 0xab);
        // CB AB 02A0
        gbc.setState(0xb955, 0x9b74, 0x7f80, 0x4caf, 0xe639, 0xaa0d, 0x0, 0x1);
        gbc.writeMem(0xb955, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9b74);
        EXPECT(gbc.pc(), 0xb957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb955), 0xcb);
        EXPECT(gbc.readMem(0xb956), 0xab);
        // CB AB 02A1
        gbc.setState(0xe34f, 0xe41c, 0xcbc0, 0x8ca0, 0xe672, 0xe7c6, 0x0, 0x1);
        gbc.writeMem(0xe34f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe41c);
        EXPECT(gbc.pc(), 0xe351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe34f), 0xcb);
        EXPECT(gbc.readMem(0xe350), 0xab);
        // CB AB 02A2
        gbc.setState(0xb937, 0xadf2, 0x4180, 0x186e, 0xe7da, 0x140b, 0x0, 0x0);
        gbc.writeMem(0xb937, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xadf2);
        EXPECT(gbc.pc(), 0xb939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb937), 0xcb);
        EXPECT(gbc.readMem(0xb938), 0xab);
        // CB AB 02A3
        gbc.setState(0x34db, 0xd41, 0x4260, 0x601a, 0x2500, 0xe7af, 0x0, 0x1);
        gbc.writeMem(0x34db, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd41);
        EXPECT(gbc.pc(), 0x34dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02A4
        gbc.setState(0xb1e0, 0x3ad7, 0xab0, 0x986e, 0x2169, 0x27e0, 0x1, 0x0);
        gbc.writeMem(0xb1e0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3ad7);
        EXPECT(gbc.pc(), 0xb1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e0), 0xcb);
        EXPECT(gbc.readMem(0xb1e1), 0xab);
        // CB AB 02A5
        gbc.setState(0x47c6, 0x7434, 0xdf00, 0xa1fa, 0x253a, 0x9845, 0x1, 0x0);
        gbc.writeMem(0x47c6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7434);
        EXPECT(gbc.pc(), 0x47c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02A6
        gbc.setState(0x6f2a, 0x626d, 0x4890, 0xc687, 0x28d5, 0x631, 0x0, 0x0);
        gbc.writeMem(0x6f2a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x626d);
        EXPECT(gbc.pc(), 0x6f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02A7
        gbc.setState(0x32ec, 0x899d, 0x12e0, 0x2770, 0x27a8, 0xdc40, 0x1, 0x1);
        gbc.writeMem(0x32ec, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x899d);
        EXPECT(gbc.pc(), 0x32ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02A8
        gbc.setState(0xc9f1, 0x2034, 0xbe40, 0xd745, 0x85eb, 0xc5c2, 0x1, 0x0);
        gbc.writeMem(0xc9f1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2034);
        EXPECT(gbc.pc(), 0xc9f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9f1), 0xcb);
        EXPECT(gbc.readMem(0xc9f2), 0xab);
        // CB AB 02A9
        gbc.setState(0x5f98, 0x3d45, 0xbc80, 0xe63a, 0x1f92, 0xbd4c, 0x0, 0x1);
        gbc.writeMem(0x5f98, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3d45);
        EXPECT(gbc.pc(), 0x5f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02AA
        gbc.setState(0x6f73, 0xc751, 0x6480, 0x7d9b, 0xa3f, 0x55a7, 0x0, 0x0);
        gbc.writeMem(0x6f73, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc751);
        EXPECT(gbc.pc(), 0x6f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02AB
        gbc.setState(0x3b38, 0x3546, 0xb820, 0x3c63, 0x7767, 0xd4f2, 0x0, 0x1);
        gbc.writeMem(0x3b38, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3546);
        EXPECT(gbc.pc(), 0x3b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02AC
        gbc.setState(0xd607, 0x6308, 0x7110, 0xc2f3, 0xfdb9, 0xccf1, 0x0, 0x0);
        gbc.writeMem(0xd607, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6308);
        EXPECT(gbc.pc(), 0xd609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd607), 0xcb);
        EXPECT(gbc.readMem(0xd608), 0xab);
        // CB AB 02AD
        gbc.setState(0x764e, 0xcaf7, 0x3740, 0x6cbe, 0x6fbe, 0x4621, 0x0, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcaf7);
        EXPECT(gbc.pc(), 0x7650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02AE
        gbc.setState(0x5ba7, 0x8c7d, 0x8850, 0x4f4c, 0x2dd5, 0x3f8e, 0x1, 0x0);
        gbc.writeMem(0x5ba7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8c7d);
        EXPECT(gbc.pc(), 0x5ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02AF
        gbc.setState(0x20c2, 0x9b5c, 0xe100, 0x4492, 0x4ed8, 0x5d7b, 0x1, 0x0);
        gbc.writeMem(0x20c2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9b5c);
        EXPECT(gbc.pc(), 0x20c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02B0
        gbc.setState(0xc880, 0x3cc8, 0x64d0, 0xfe92, 0xca89, 0xfc8a, 0x0, 0x0);
        gbc.writeMem(0xc880, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3cc8);
        EXPECT(gbc.pc(), 0xc882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc880), 0xcb);
        EXPECT(gbc.readMem(0xc881), 0xab);
        // CB AB 02B1
        gbc.setState(0x9ad4, 0x1836, 0x4000, 0x4a2, 0x8ee1, 0x459, 0x1, 0x0);
        gbc.writeMem(0x9ad4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1836);
        EXPECT(gbc.pc(), 0x9ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad4), 0xcb);
        EXPECT(gbc.readMem(0x9ad5), 0xab);
        // CB AB 02B2
        gbc.setState(0xca50, 0x4851, 0x9eb0, 0xbfa8, 0x1cc1, 0xcd1e, 0x0, 0x0);
        gbc.writeMem(0xca50, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4851);
        EXPECT(gbc.pc(), 0xca52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca50), 0xcb);
        EXPECT(gbc.readMem(0xca51), 0xab);
        // CB AB 02B3
        gbc.setState(0x613a, 0x4fc8, 0xe430, 0xeb65, 0x68fb, 0xe0e0, 0x1, 0x1);
        gbc.writeMem(0x613a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4fc8);
        EXPECT(gbc.pc(), 0x613c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02B4
        gbc.setState(0x3b9d, 0x1115, 0xed20, 0xb536, 0xd1c7, 0x5ea4, 0x1, 0x0);
        gbc.writeMem(0x3b9d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1115);
        EXPECT(gbc.pc(), 0x3b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02B5
        gbc.setState(0x6917, 0x3a06, 0xa0e0, 0xeee6, 0xe88c, 0x7716, 0x1, 0x1);
        gbc.writeMem(0x6917, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3a06);
        EXPECT(gbc.pc(), 0x6919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02B6
        gbc.setState(0x4d53, 0xf1, 0x8360, 0xa86b, 0x15c2, 0x177, 0x0, 0x0);
        gbc.writeMem(0x4d53, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf1);
        EXPECT(gbc.pc(), 0x4d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02B7
        gbc.setState(0xc4ae, 0x9079, 0x83d0, 0x8ab3, 0xf39e, 0x5bfd, 0x0, 0x1);
        gbc.writeMem(0xc4ae, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9079);
        EXPECT(gbc.pc(), 0xc4b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ae), 0xcb);
        EXPECT(gbc.readMem(0xc4af), 0xab);
        // CB AB 02B8
        gbc.setState(0x26a4, 0x7116, 0x4610, 0x4ad3, 0x1f34, 0x844b, 0x1, 0x1);
        gbc.writeMem(0x26a4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7116);
        EXPECT(gbc.pc(), 0x26a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02B9
        gbc.setState(0x1f8f, 0xe635, 0x4d40, 0x1c41, 0x20eb, 0x4fa9, 0x1, 0x1);
        gbc.writeMem(0x1f8f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe635);
        EXPECT(gbc.pc(), 0x1f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02BA
        gbc.setState(0xbf5e, 0xad54, 0x6b00, 0xbeb0, 0x7113, 0x351c, 0x1, 0x0);
        gbc.writeMem(0xbf5e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xad54);
        EXPECT(gbc.pc(), 0xbf60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf5e), 0xcb);
        EXPECT(gbc.readMem(0xbf5f), 0xab);
        // CB AB 02BB
        gbc.setState(0x204a, 0x20d2, 0x64b0, 0x2e9a, 0xd31f, 0xd48f, 0x0, 0x1);
        gbc.writeMem(0x204a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x20d2);
        EXPECT(gbc.pc(), 0x204c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02BC
        gbc.setState(0x43c7, 0x1d4e, 0xa810, 0xe97b, 0xeaa0, 0xca25, 0x0, 0x1);
        gbc.writeMem(0x43c7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1d4e);
        EXPECT(gbc.pc(), 0x43c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02BD
        gbc.setState(0x336a, 0x318c, 0xfb90, 0x753, 0xcf7d, 0x8d4d, 0x0, 0x0);
        gbc.writeMem(0x336a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x318c);
        EXPECT(gbc.pc(), 0x336c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02BE
        gbc.setState(0x205b, 0x13e5, 0x7120, 0xf061, 0xfcdc, 0x5d24, 0x1, 0x0);
        gbc.writeMem(0x205b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x13e5);
        EXPECT(gbc.pc(), 0x205d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02BF
        gbc.setState(0xa6ad, 0x12ba, 0xe180, 0x9ee1, 0x461, 0xc148, 0x0, 0x0);
        gbc.writeMem(0xa6ad, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x12ba);
        EXPECT(gbc.pc(), 0xa6af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ad), 0xcb);
        EXPECT(gbc.readMem(0xa6ae), 0xab);
        // CB AB 02C0
        gbc.setState(0x5de8, 0x8d0b, 0xda50, 0x4ef3, 0xcc71, 0xdd2, 0x1, 0x1);
        gbc.writeMem(0x5de8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8d0b);
        EXPECT(gbc.pc(), 0x5dea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02C1
        gbc.setState(0x62a0, 0xf92e, 0xc8d0, 0xae07, 0x514, 0xa833, 0x1, 0x1);
        gbc.writeMem(0x62a0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf92e);
        EXPECT(gbc.pc(), 0x62a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02C2
        gbc.setState(0xd509, 0xae00, 0x1c70, 0xcef0, 0x844b, 0xe0d8, 0x0, 0x0);
        gbc.writeMem(0xd509, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xae00);
        EXPECT(gbc.pc(), 0xd50b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd509), 0xcb);
        EXPECT(gbc.readMem(0xd50a), 0xab);
        // CB AB 02C3
        gbc.setState(0x95d7, 0xaf9c, 0xe880, 0xda08, 0xa11d, 0xcd6c, 0x0, 0x1);
        gbc.writeMem(0x95d7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaf9c);
        EXPECT(gbc.pc(), 0x95d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d7), 0xcb);
        EXPECT(gbc.readMem(0x95d8), 0xab);
        // CB AB 02C4
        gbc.setState(0xecd3, 0x5431, 0x6450, 0xb744, 0x7f72, 0x6fdb, 0x0, 0x0);
        gbc.writeMem(0xecd3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5431);
        EXPECT(gbc.pc(), 0xecd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd3), 0xcb);
        EXPECT(gbc.readMem(0xecd4), 0xab);
        // CB AB 02C5
        gbc.setState(0xbe00, 0x2c8c, 0xba10, 0xe47e, 0x147e, 0xa61c, 0x0, 0x1);
        gbc.writeMem(0xbe00, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2c8c);
        EXPECT(gbc.pc(), 0xbe02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe00), 0xcb);
        EXPECT(gbc.readMem(0xbe01), 0xab);
        // CB AB 02C6
        gbc.setState(0x498b, 0x6511, 0xcf90, 0xb2f, 0x9b7, 0x362a, 0x1, 0x0);
        gbc.writeMem(0x498b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6511);
        EXPECT(gbc.pc(), 0x498d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02C7
        gbc.setState(0x91c4, 0xf6d1, 0x7bc0, 0xba1e, 0x7bf1, 0x66b1, 0x0, 0x1);
        gbc.writeMem(0x91c4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf6d1);
        EXPECT(gbc.pc(), 0x91c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c4), 0xcb);
        EXPECT(gbc.readMem(0x91c5), 0xab);
        // CB AB 02C8
        gbc.setState(0x8bd0, 0xbbdb, 0x77a0, 0x8f, 0xf4d7, 0xabc8, 0x1, 0x1);
        gbc.writeMem(0x8bd0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbbdb);
        EXPECT(gbc.pc(), 0x8bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd0), 0xcb);
        EXPECT(gbc.readMem(0x8bd1), 0xab);
        // CB AB 02C9
        gbc.setState(0xc631, 0x8c57, 0xdbe0, 0x73af, 0x90f3, 0xb6f9, 0x0, 0x0);
        gbc.writeMem(0xc631, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8c57);
        EXPECT(gbc.pc(), 0xc633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc631), 0xcb);
        EXPECT(gbc.readMem(0xc632), 0xab);
        // CB AB 02CA
        gbc.setState(0x233f, 0xe2ba, 0xffa0, 0xcc1e, 0x10a9, 0xbdd0, 0x0, 0x0);
        gbc.writeMem(0x233f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe2ba);
        EXPECT(gbc.pc(), 0x2341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02CB
        gbc.setState(0x45e0, 0x49e5, 0x4de0, 0x38bf, 0xac81, 0x8cf, 0x0, 0x1);
        gbc.writeMem(0x45e0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x49e5);
        EXPECT(gbc.pc(), 0x45e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02CC
        gbc.setState(0x26ee, 0xfac3, 0xab60, 0xb5e8, 0x30d3, 0x3c6c, 0x1, 0x1);
        gbc.writeMem(0x26ee, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfac3);
        EXPECT(gbc.pc(), 0x26f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02CE
        gbc.setState(0x4f7b, 0xd793, 0x45b0, 0x30cc, 0x92c1, 0x94be, 0x1, 0x1);
        gbc.writeMem(0x4f7b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd793);
        EXPECT(gbc.pc(), 0x4f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02CF
        gbc.setState(0x2ebb, 0x501c, 0x8c0, 0xd33b, 0xc7a3, 0x2a22, 0x0, 0x1);
        gbc.writeMem(0x2ebb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x501c);
        EXPECT(gbc.pc(), 0x2ebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02D0
        gbc.setState(0xb21a, 0x41dd, 0x9210, 0x53e9, 0xe726, 0x1d01, 0x1, 0x1);
        gbc.writeMem(0xb21a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x41dd);
        EXPECT(gbc.pc(), 0xb21c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21a), 0xcb);
        EXPECT(gbc.readMem(0xb21b), 0xab);
        // CB AB 02D1
        gbc.setState(0x3e3a, 0xe928, 0xf030, 0xff68, 0xcea1, 0x44ae, 0x1, 0x1);
        gbc.writeMem(0x3e3a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe928);
        EXPECT(gbc.pc(), 0x3e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02D2
        gbc.setState(0xbc, 0xc9a0, 0xb830, 0xda39, 0x94f1, 0xaf10, 0x0, 0x1);
        gbc.writeMem(0xbc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc9a0);
        EXPECT(gbc.pc(), 0xbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02D3
        gbc.setState(0x8d66, 0xb67d, 0x7620, 0x83bf, 0x982f, 0xb890, 0x0, 0x1);
        gbc.writeMem(0x8d66, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb67d);
        EXPECT(gbc.pc(), 0x8d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d66), 0xcb);
        EXPECT(gbc.readMem(0x8d67), 0xab);
        // CB AB 02D4
        gbc.setState(0x9cf6, 0xe554, 0xfd10, 0x45ab, 0xe95b, 0x13bc, 0x0, 0x0);
        gbc.writeMem(0x9cf6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe554);
        EXPECT(gbc.pc(), 0x9cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf6), 0xcb);
        EXPECT(gbc.readMem(0x9cf7), 0xab);
        // CB AB 02D5
        gbc.setState(0x620d, 0x9024, 0xd10, 0x1a3, 0xc178, 0xc2fb, 0x1, 0x0);
        gbc.writeMem(0x620d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9024);
        EXPECT(gbc.pc(), 0x620f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02D6
        gbc.setState(0xb019, 0x6cc0, 0x9200, 0xf35e, 0xb68, 0x5f32, 0x0, 0x1);
        gbc.writeMem(0xb019, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6cc0);
        EXPECT(gbc.pc(), 0xb01b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb019), 0xcb);
        EXPECT(gbc.readMem(0xb01a), 0xab);
        // CB AB 02D7
        gbc.setState(0x1298, 0xa906, 0x10d0, 0x6698, 0xf29b, 0x381, 0x1, 0x1);
        gbc.writeMem(0x1298, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa906);
        EXPECT(gbc.pc(), 0x129a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02D8
        gbc.setState(0xdcf9, 0x24c2, 0x1100, 0x1c9c, 0x640a, 0xe530, 0x0, 0x1);
        gbc.writeMem(0xdcf9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x24c2);
        EXPECT(gbc.pc(), 0xdcfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf9), 0xcb);
        EXPECT(gbc.readMem(0xdcfa), 0xab);
        // CB AB 02D9
        gbc.setState(0x5a22, 0xa3c1, 0xfec0, 0x674d, 0x3339, 0x2052, 0x1, 0x1);
        gbc.writeMem(0x5a22, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa3c1);
        EXPECT(gbc.pc(), 0x5a24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02DA
        gbc.setState(0xbdeb, 0xa1e1, 0xc570, 0xacfa, 0x9029, 0x24e2, 0x0, 0x1);
        gbc.writeMem(0xbdeb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa1e1);
        EXPECT(gbc.pc(), 0xbded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdeb), 0xcb);
        EXPECT(gbc.readMem(0xbdec), 0xab);
        // CB AB 02DB
        gbc.setState(0x1085, 0x7e5d, 0x7f00, 0xee7f, 0xe42b, 0x41c, 0x1, 0x0);
        gbc.writeMem(0x1085, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7e5d);
        EXPECT(gbc.pc(), 0x1087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02DC
        gbc.setState(0x9712, 0xf8ce, 0x10b0, 0x79d7, 0x291c, 0x8005, 0x1, 0x0);
        gbc.writeMem(0x9712, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf8ce);
        EXPECT(gbc.pc(), 0x9714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9712), 0xcb);
        EXPECT(gbc.readMem(0x9713), 0xab);
        // CB AB 02DD
        gbc.setState(0x1ebd, 0x68c0, 0x3b70, 0x30db, 0x470, 0xc768, 0x1, 0x1);
        gbc.writeMem(0x1ebd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x68c0);
        EXPECT(gbc.pc(), 0x1ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02DE
        gbc.setState(0x78e9, 0xb18a, 0xa3f0, 0x774f, 0xe061, 0xb1, 0x1, 0x1);
        gbc.writeMem(0x78e9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb18a);
        EXPECT(gbc.pc(), 0x78eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02DF
        gbc.setState(0x7595, 0xd147, 0x7d20, 0xb235, 0x64a4, 0x7e75, 0x1, 0x1);
        gbc.writeMem(0x7595, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd147);
        EXPECT(gbc.pc(), 0x7597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02E0
        gbc.setState(0x2a5d, 0xe4e4, 0x3150, 0xcc88, 0x81c6, 0xc121, 0x1, 0x1);
        gbc.writeMem(0x2a5d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe4e4);
        EXPECT(gbc.pc(), 0x2a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02E1
        gbc.setState(0xa2be, 0x6471, 0x5080, 0x5ede, 0xa2d0, 0x1cc, 0x0, 0x0);
        gbc.writeMem(0xa2be, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6471);
        EXPECT(gbc.pc(), 0xa2c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2be), 0xcb);
        EXPECT(gbc.readMem(0xa2bf), 0xab);
        // CB AB 02E2
        gbc.setState(0x7973, 0x8e6e, 0xf170, 0x1e15, 0xda30, 0x6ad7, 0x0, 0x0);
        gbc.writeMem(0x7973, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8e6e);
        EXPECT(gbc.pc(), 0x7975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02E3
        gbc.setState(0xe642, 0xa5d4, 0x9c80, 0x7e42, 0x948a, 0x671, 0x1, 0x0);
        gbc.writeMem(0xe642, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa5d4);
        EXPECT(gbc.pc(), 0xe644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe642), 0xcb);
        EXPECT(gbc.readMem(0xe643), 0xab);
        // CB AB 02E4
        gbc.setState(0x58c, 0xbbed, 0x45e0, 0xb4a1, 0x4f44, 0xc722, 0x0, 0x0);
        gbc.writeMem(0x58c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbbed);
        EXPECT(gbc.pc(), 0x58e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02E5
        gbc.setState(0x53f1, 0x5b32, 0x3e30, 0x58f1, 0x1f07, 0xa26a, 0x0, 0x0);
        gbc.writeMem(0x53f1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5b32);
        EXPECT(gbc.pc(), 0x53f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02E6
        gbc.setState(0x1cf7, 0x4f08, 0x3f00, 0x501e, 0xbd3f, 0xc1aa, 0x1, 0x0);
        gbc.writeMem(0x1cf7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4f08);
        EXPECT(gbc.pc(), 0x1cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02E7
        gbc.setState(0xd1e9, 0x4672, 0x7410, 0x10b5, 0xd5aa, 0x8a18, 0x0, 0x0);
        gbc.writeMem(0xd1e9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4672);
        EXPECT(gbc.pc(), 0xd1eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e9), 0xcb);
        EXPECT(gbc.readMem(0xd1ea), 0xab);
        // CB AB 02E8
        gbc.setState(0xaf3d, 0xa566, 0x6f00, 0x61a4, 0xab1, 0x4fdc, 0x1, 0x0);
        gbc.writeMem(0xaf3d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa566);
        EXPECT(gbc.pc(), 0xaf3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3d), 0xcb);
        EXPECT(gbc.readMem(0xaf3e), 0xab);
        // CB AB 02E9
        gbc.setState(0xe643, 0xd6d5, 0x7d70, 0xaf1d, 0x583e, 0xd0e8, 0x0, 0x0);
        gbc.writeMem(0xe643, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd6d5);
        EXPECT(gbc.pc(), 0xe645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe643), 0xcb);
        EXPECT(gbc.readMem(0xe644), 0xab);
        // CB AB 02EA
        gbc.setState(0xa201, 0x569, 0x6530, 0xae60, 0x7d94, 0xc50d, 0x1, 0x1);
        gbc.writeMem(0xa201, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x569);
        EXPECT(gbc.pc(), 0xa203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa201), 0xcb);
        EXPECT(gbc.readMem(0xa202), 0xab);
        // CB AB 02EB
        gbc.setState(0x8a90, 0xbb5, 0x7160, 0xd7ce, 0xb8f5, 0xa687, 0x0, 0x1);
        gbc.writeMem(0x8a90, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbb5);
        EXPECT(gbc.pc(), 0x8a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a90), 0xcb);
        EXPECT(gbc.readMem(0x8a91), 0xab);
        // CB AB 02EC
        gbc.setState(0x2f36, 0xc25f, 0x9530, 0x96d3, 0xd5e4, 0x9a55, 0x0, 0x1);
        gbc.writeMem(0x2f36, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc25f);
        EXPECT(gbc.pc(), 0x2f38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02ED
        gbc.setState(0xa72d, 0xc0a3, 0x9e20, 0xf545, 0x9a37, 0xa323, 0x0, 0x0);
        gbc.writeMem(0xa72d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc0a3);
        EXPECT(gbc.pc(), 0xa72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa72d), 0xcb);
        EXPECT(gbc.readMem(0xa72e), 0xab);
        // CB AB 02EE
        gbc.setState(0x56a0, 0x2d7, 0x3840, 0x1e23, 0x478a, 0x825e, 0x1, 0x0);
        gbc.writeMem(0x56a0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2d7);
        EXPECT(gbc.pc(), 0x56a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02EF
        gbc.setState(0xa037, 0x7600, 0x4980, 0xb845, 0x42b5, 0x6042, 0x1, 0x1);
        gbc.writeMem(0xa037, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7600);
        EXPECT(gbc.pc(), 0xa039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa037), 0xcb);
        EXPECT(gbc.readMem(0xa038), 0xab);
        // CB AB 02F0
        gbc.setState(0x6a59, 0x8c40, 0x7340, 0x8579, 0x9866, 0x31a0, 0x0, 0x0);
        gbc.writeMem(0x6a59, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8c40);
        EXPECT(gbc.pc(), 0x6a5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02F1
        gbc.setState(0x76a9, 0xcd2c, 0xa610, 0x2b93, 0x3305, 0x4511, 0x1, 0x0);
        gbc.writeMem(0x76a9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcd2c);
        EXPECT(gbc.pc(), 0x76ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02F2
        gbc.setState(0xfe8, 0x5a9a, 0xd550, 0x20d, 0x9e63, 0xa924, 0x0, 0x0);
        gbc.writeMem(0xfe8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5a9a);
        EXPECT(gbc.pc(), 0xfea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02F3
        gbc.setState(0xb0ac, 0xd1ca, 0xb9a0, 0x516a, 0xca53, 0x3a2e, 0x1, 0x0);
        gbc.writeMem(0xb0ac, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd1ca);
        EXPECT(gbc.pc(), 0xb0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ac), 0xcb);
        EXPECT(gbc.readMem(0xb0ad), 0xab);
        // CB AB 02F4
        gbc.setState(0x1b72, 0xd164, 0xf190, 0x2b69, 0xf1e9, 0xb5a3, 0x1, 0x1);
        gbc.writeMem(0x1b72, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd164);
        EXPECT(gbc.pc(), 0x1b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02F5
        gbc.setState(0x69a9, 0x940b, 0x5190, 0xe16c, 0x49bc, 0xfd18, 0x0, 0x1);
        gbc.writeMem(0x69a9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x940b);
        EXPECT(gbc.pc(), 0x69ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 02F6
        gbc.setState(0x5f1, 0xf993, 0x9540, 0xf37f, 0x96bb, 0x69f3, 0x0, 0x1);
        gbc.writeMem(0x5f1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf993);
        EXPECT(gbc.pc(), 0x5f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02F7
        gbc.setState(0x9e00, 0xe2c2, 0x4f10, 0x6650, 0xcf2d, 0x15d4, 0x1, 0x0);
        gbc.writeMem(0x9e00, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe2c2);
        EXPECT(gbc.pc(), 0x9e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e00), 0xcb);
        EXPECT(gbc.readMem(0x9e01), 0xab);
        // CB AB 02F8
        gbc.setState(0x8f99, 0x21ff, 0xe1c0, 0xdd58, 0xc1a2, 0x3075, 0x0, 0x1);
        gbc.writeMem(0x8f99, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x21ff);
        EXPECT(gbc.pc(), 0x8f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f99), 0xcb);
        EXPECT(gbc.readMem(0x8f9a), 0xab);
        // CB AB 02F9
        gbc.setState(0x2b6e, 0xbc8b, 0x9220, 0xa672, 0x974, 0xc38a, 0x0, 0x0);
        gbc.writeMem(0x2b6e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbc8b);
        EXPECT(gbc.pc(), 0x2b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02FA
        gbc.setState(0x9947, 0x9b70, 0x5e60, 0xbdf7, 0x4bf1, 0xb759, 0x0, 0x1);
        gbc.writeMem(0x9947, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9b70);
        EXPECT(gbc.pc(), 0x9949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9947), 0xcb);
        EXPECT(gbc.readMem(0x9948), 0xab);
        // CB AB 02FB
        gbc.setState(0x3aaf, 0xe907, 0xd840, 0xe1d9, 0xfde3, 0x494b, 0x0, 0x0);
        gbc.writeMem(0x3aaf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe907);
        EXPECT(gbc.pc(), 0x3ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02FC
        gbc.setState(0x4488, 0x947a, 0xd880, 0x47d2, 0xf240, 0x823b, 0x0, 0x0);
        gbc.writeMem(0x4488, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x947a);
        EXPECT(gbc.pc(), 0x448a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 02FD
        gbc.setState(0xe304, 0x641c, 0x6b40, 0x2ae6, 0xbbb2, 0x5e50, 0x0, 0x1);
        gbc.writeMem(0xe304, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x641c);
        EXPECT(gbc.pc(), 0xe306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe304), 0xcb);
        EXPECT(gbc.readMem(0xe305), 0xab);
        // CB AB 02FE
        gbc.setState(0xd3cb, 0x50ef, 0x4310, 0x171f, 0xc1d4, 0x9222, 0x1, 0x0);
        gbc.writeMem(0xd3cb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x50ef);
        EXPECT(gbc.pc(), 0xd3cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3cb), 0xcb);
        EXPECT(gbc.readMem(0xd3cc), 0xab);
        // CB AB 02FF
        gbc.setState(0x6f4f, 0x2786, 0xce30, 0x57e0, 0x7dbf, 0xec1d, 0x0, 0x1);
        gbc.writeMem(0x6f4f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2786);
        EXPECT(gbc.pc(), 0x6f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0300
        gbc.setState(0x7b8f, 0xacb5, 0x6cd0, 0xe904, 0xdbb9, 0x3aaf, 0x1, 0x0);
        gbc.writeMem(0x7b8f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xacb5);
        EXPECT(gbc.pc(), 0x7b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0302
        gbc.setState(0x9678, 0x57f1, 0xb0, 0xf7ce, 0xb067, 0xcafa, 0x1, 0x0);
        gbc.writeMem(0x9678, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x57f1);
        EXPECT(gbc.pc(), 0x967a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9678), 0xcb);
        EXPECT(gbc.readMem(0x9679), 0xab);
        // CB AB 0303
        gbc.setState(0xa96f, 0x646a, 0xea70, 0x92f2, 0x64aa, 0x6cfb, 0x0, 0x1);
        gbc.writeMem(0xa96f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x646a);
        EXPECT(gbc.pc(), 0xa971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96f), 0xcb);
        EXPECT(gbc.readMem(0xa970), 0xab);
        // CB AB 0304
        gbc.setState(0xc1e4, 0xc85c, 0xafa0, 0x1c92, 0xc210, 0x8aa7, 0x0, 0x0);
        gbc.writeMem(0xc1e4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc85c);
        EXPECT(gbc.pc(), 0xc1e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e4), 0xcb);
        EXPECT(gbc.readMem(0xc1e5), 0xab);
        // CB AB 0305
        gbc.setState(0xb07, 0xb3d5, 0xfca0, 0xfb, 0x47e, 0x4889, 0x0, 0x0);
        gbc.writeMem(0xb07, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb3d5);
        EXPECT(gbc.pc(), 0xb09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0306
        gbc.setState(0x6b74, 0xd287, 0x5d00, 0x8df5, 0xe61, 0xc52e, 0x1, 0x1);
        gbc.writeMem(0x6b74, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd287);
        EXPECT(gbc.pc(), 0x6b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0308
        gbc.setState(0x9b44, 0x2833, 0x3ee0, 0x28a5, 0x8ca2, 0x5073, 0x1, 0x1);
        gbc.writeMem(0x9b44, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2833);
        EXPECT(gbc.pc(), 0x9b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b44), 0xcb);
        EXPECT(gbc.readMem(0x9b45), 0xab);
        // CB AB 0309
        gbc.setState(0xaf38, 0x452, 0xd280, 0xdf8e, 0x8248, 0xd9a4, 0x0, 0x0);
        gbc.writeMem(0xaf38, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x452);
        EXPECT(gbc.pc(), 0xaf3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf38), 0xcb);
        EXPECT(gbc.readMem(0xaf39), 0xab);
        // CB AB 030A
        gbc.setState(0xcc88, 0xfa1a, 0x49f0, 0x448d, 0xde0e, 0x8622, 0x1, 0x0);
        gbc.writeMem(0xcc88, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfa1a);
        EXPECT(gbc.pc(), 0xcc8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc88), 0xcb);
        EXPECT(gbc.readMem(0xcc89), 0xab);
        // CB AB 030B
        gbc.setState(0x3cb, 0x9878, 0x5e90, 0xd364, 0x74b8, 0xf89e, 0x1, 0x0);
        gbc.writeMem(0x3cb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9878);
        EXPECT(gbc.pc(), 0x3cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 030C
        gbc.setState(0x2093, 0x6be5, 0x83b0, 0x174c, 0x348b, 0x11ad, 0x1, 0x0);
        gbc.writeMem(0x2093, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6be5);
        EXPECT(gbc.pc(), 0x2095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 030D
        gbc.setState(0x62b9, 0xd765, 0x6450, 0xf404, 0x222b, 0x5078, 0x1, 0x0);
        gbc.writeMem(0x62b9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd765);
        EXPECT(gbc.pc(), 0x62bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 030E
        gbc.setState(0x35d8, 0xaec7, 0xc130, 0x54c4, 0xd00d, 0x56b3, 0x0, 0x0);
        gbc.writeMem(0x35d8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xaec7);
        EXPECT(gbc.pc(), 0x35da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 030F
        gbc.setState(0xebf0, 0xae4f, 0xdb70, 0xa0f1, 0x1027, 0x98ef, 0x1, 0x1);
        gbc.writeMem(0xebf0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xae4f);
        EXPECT(gbc.pc(), 0xebf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf0), 0xcb);
        EXPECT(gbc.readMem(0xebf1), 0xab);
        // CB AB 0310
        gbc.setState(0x9d53, 0x1ca5, 0x2250, 0x8cf7, 0xea32, 0xf89, 0x1, 0x1);
        gbc.writeMem(0x9d53, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1ca5);
        EXPECT(gbc.pc(), 0x9d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d53), 0xcb);
        EXPECT(gbc.readMem(0x9d54), 0xab);
        // CB AB 0311
        gbc.setState(0x6ba0, 0x560c, 0x9d50, 0x97e7, 0x6a0, 0x90bf, 0x1, 0x1);
        gbc.writeMem(0x6ba0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x560c);
        EXPECT(gbc.pc(), 0x6ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0312
        gbc.setState(0xeb2b, 0xa1c5, 0x2490, 0xd9ce, 0x531b, 0x755d, 0x1, 0x0);
        gbc.writeMem(0xeb2b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa1c5);
        EXPECT(gbc.pc(), 0xeb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2b), 0xcb);
        EXPECT(gbc.readMem(0xeb2c), 0xab);
        // CB AB 0313
        gbc.setState(0xd2ce, 0x926, 0x5c00, 0xd964, 0x263a, 0xdf1a, 0x0, 0x0);
        gbc.writeMem(0xd2ce, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x926);
        EXPECT(gbc.pc(), 0xd2d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ce), 0xcb);
        EXPECT(gbc.readMem(0xd2cf), 0xab);
        // CB AB 0315
        gbc.setState(0xcdcc, 0xa9ce, 0xe350, 0x28bb, 0x47ba, 0x24b3, 0x0, 0x1);
        gbc.writeMem(0xcdcc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa9ce);
        EXPECT(gbc.pc(), 0xcdce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdcc), 0xcb);
        EXPECT(gbc.readMem(0xcdcd), 0xab);
        // CB AB 0316
        gbc.setState(0xf21, 0x8bb1, 0x9590, 0xf9a2, 0xf166, 0xd2f1, 0x1, 0x0);
        gbc.writeMem(0xf21, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8bb1);
        EXPECT(gbc.pc(), 0xf23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0317
        gbc.setState(0xb1fa, 0xe9f1, 0xa190, 0xed06, 0xa00c, 0x33e3, 0x1, 0x0);
        gbc.writeMem(0xb1fa, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe9f1);
        EXPECT(gbc.pc(), 0xb1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1fa), 0xcb);
        EXPECT(gbc.readMem(0xb1fb), 0xab);
        // CB AB 0318
        gbc.setState(0xa9e9, 0xcd34, 0x4230, 0x9a68, 0xfb32, 0xe599, 0x0, 0x1);
        gbc.writeMem(0xa9e9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcd34);
        EXPECT(gbc.pc(), 0xa9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9e9), 0xcb);
        EXPECT(gbc.readMem(0xa9ea), 0xab);
        // CB AB 0319
        gbc.setState(0x328b, 0x849b, 0xc4e0, 0xea60, 0x76c5, 0xcdb2, 0x1, 0x1);
        gbc.writeMem(0x328b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x849b);
        EXPECT(gbc.pc(), 0x328d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 031A
        gbc.setState(0x3a3f, 0xa85f, 0x2f70, 0x2c56, 0xbf86, 0xdc08, 0x1, 0x1);
        gbc.writeMem(0x3a3f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa85f);
        EXPECT(gbc.pc(), 0x3a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 031B
        gbc.setState(0xdd78, 0x246a, 0x9930, 0x34a3, 0xd66b, 0xdab3, 0x0, 0x1);
        gbc.writeMem(0xdd78, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x246a);
        EXPECT(gbc.pc(), 0xdd7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd78), 0xcb);
        EXPECT(gbc.readMem(0xdd79), 0xab);
        // CB AB 031C
        gbc.setState(0x20f4, 0xa74c, 0x3260, 0x2d97, 0xb7ec, 0x199f, 0x1, 0x0);
        gbc.writeMem(0x20f4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa74c);
        EXPECT(gbc.pc(), 0x20f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 031D
        gbc.setState(0xb364, 0xbe30, 0xc6f0, 0xddf8, 0x8e39, 0x5d7c, 0x1, 0x0);
        gbc.writeMem(0xb364, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbe30);
        EXPECT(gbc.pc(), 0xb366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb364), 0xcb);
        EXPECT(gbc.readMem(0xb365), 0xab);
        // CB AB 031E
        gbc.setState(0xba7e, 0x19b9, 0x68b0, 0xf671, 0x69fc, 0x2df3, 0x1, 0x0);
        gbc.writeMem(0xba7e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x19b9);
        EXPECT(gbc.pc(), 0xba80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba7e), 0xcb);
        EXPECT(gbc.readMem(0xba7f), 0xab);
        // CB AB 031F
        gbc.setState(0x8958, 0x8e5b, 0xfce0, 0xd549, 0x85db, 0x7957, 0x1, 0x0);
        gbc.writeMem(0x8958, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8e5b);
        EXPECT(gbc.pc(), 0x895a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8958), 0xcb);
        EXPECT(gbc.readMem(0x8959), 0xab);
        // CB AB 0320
        gbc.setState(0x304b, 0x20c6, 0xbea0, 0xf874, 0x5da2, 0xcf8e, 0x1, 0x1);
        gbc.writeMem(0x304b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x20c6);
        EXPECT(gbc.pc(), 0x304d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0321
        gbc.setState(0xe55c, 0xec95, 0x69a0, 0x106b, 0x196b, 0x4d05, 0x1, 0x0);
        gbc.writeMem(0xe55c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xec95);
        EXPECT(gbc.pc(), 0xe55e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55c), 0xcb);
        EXPECT(gbc.readMem(0xe55d), 0xab);
        // CB AB 0322
        gbc.setState(0xbac, 0x7d4c, 0xb9a0, 0xff81, 0x4e68, 0x5112, 0x1, 0x0);
        gbc.writeMem(0xbac, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7d4c);
        EXPECT(gbc.pc(), 0xbae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0323
        gbc.setState(0xd3ef, 0xb08, 0xfb90, 0xc0af, 0xd82e, 0xe504, 0x0, 0x0);
        gbc.writeMem(0xd3ef, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb08);
        EXPECT(gbc.pc(), 0xd3f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ef), 0xcb);
        EXPECT(gbc.readMem(0xd3f0), 0xab);
        // CB AB 0324
        gbc.setState(0x1b16, 0x5171, 0xcb70, 0xbbb7, 0xe962, 0x71eb, 0x0, 0x0);
        gbc.writeMem(0x1b16, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5171);
        EXPECT(gbc.pc(), 0x1b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0325
        gbc.setState(0xe37d, 0xd5c, 0x1c30, 0xdb00, 0x1f46, 0x11ec, 0x1, 0x1);
        gbc.writeMem(0xe37d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd5c);
        EXPECT(gbc.pc(), 0xe37f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37d), 0xcb);
        EXPECT(gbc.readMem(0xe37e), 0xab);
        // CB AB 0326
        gbc.setState(0x275, 0xc223, 0xa150, 0xaf0, 0xceb1, 0x98e9, 0x0, 0x0);
        gbc.writeMem(0x275, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc223);
        EXPECT(gbc.pc(), 0x277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0327
        gbc.setState(0x483f, 0x623f, 0xd9d0, 0xf5bb, 0x8a33, 0x43d, 0x1, 0x1);
        gbc.writeMem(0x483f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x623f);
        EXPECT(gbc.pc(), 0x4841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0328
        gbc.setState(0x4934, 0x8c9b, 0xa4f0, 0x883d, 0xf670, 0x8efa, 0x0, 0x1);
        gbc.writeMem(0x4934, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8c9b);
        EXPECT(gbc.pc(), 0x4936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0329
        gbc.setState(0xaf7c, 0x6944, 0x730, 0x1cdc, 0x7f2b, 0x37ae, 0x0, 0x0);
        gbc.writeMem(0xaf7c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6944);
        EXPECT(gbc.pc(), 0xaf7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7c), 0xcb);
        EXPECT(gbc.readMem(0xaf7d), 0xab);
        // CB AB 032A
        gbc.setState(0xb644, 0x8335, 0xa180, 0xaa67, 0xb93c, 0x4792, 0x0, 0x0);
        gbc.writeMem(0xb644, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8335);
        EXPECT(gbc.pc(), 0xb646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb644), 0xcb);
        EXPECT(gbc.readMem(0xb645), 0xab);
        // CB AB 032B
        gbc.setState(0x62ec, 0x676b, 0x4940, 0xb893, 0x480d, 0xe5d0, 0x0, 0x0);
        gbc.writeMem(0x62ec, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x676b);
        EXPECT(gbc.pc(), 0x62ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 032C
        gbc.setState(0xee7a, 0x18e4, 0x1480, 0x77c4, 0x259e, 0x81e, 0x0, 0x1);
        gbc.writeMem(0xee7a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x18e4);
        EXPECT(gbc.pc(), 0xee7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee7a), 0xcb);
        EXPECT(gbc.readMem(0xee7b), 0xab);
        // CB AB 032D
        gbc.setState(0xd8b2, 0xd62, 0xb350, 0xc5b7, 0xc0f, 0x4348, 0x0, 0x0);
        gbc.writeMem(0xd8b2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd62);
        EXPECT(gbc.pc(), 0xd8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b2), 0xcb);
        EXPECT(gbc.readMem(0xd8b3), 0xab);
        // CB AB 032E
        gbc.setState(0x5fa9, 0x2f62, 0x5d70, 0x1196, 0x981b, 0x9613, 0x0, 0x0);
        gbc.writeMem(0x5fa9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2f62);
        EXPECT(gbc.pc(), 0x5fab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 032F
        gbc.setState(0x300d, 0xc016, 0x2f90, 0x2914, 0x6107, 0x8e48, 0x1, 0x1);
        gbc.writeMem(0x300d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc016);
        EXPECT(gbc.pc(), 0x300f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0330
        gbc.setState(0xdd7d, 0x1dc9, 0x64b0, 0x9d29, 0x3ad, 0x1122, 0x0, 0x0);
        gbc.writeMem(0xdd7d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1dc9);
        EXPECT(gbc.pc(), 0xdd7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd7d), 0xcb);
        EXPECT(gbc.readMem(0xdd7e), 0xab);
        // CB AB 0331
        gbc.setState(0xd385, 0x2f45, 0x1590, 0x6b38, 0x7408, 0x82e, 0x1, 0x1);
        gbc.writeMem(0xd385, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2f45);
        EXPECT(gbc.pc(), 0xd387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd385), 0xcb);
        EXPECT(gbc.readMem(0xd386), 0xab);
        // CB AB 0332
        gbc.setState(0x52c4, 0xbd86, 0xb660, 0x8be4, 0xb485, 0xd312, 0x0, 0x0);
        gbc.writeMem(0x52c4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbd86);
        EXPECT(gbc.pc(), 0x52c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0333
        gbc.setState(0xe26c, 0x9199, 0xbb50, 0xac93, 0x913d, 0x22c2, 0x1, 0x0);
        gbc.writeMem(0xe26c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9199);
        EXPECT(gbc.pc(), 0xe26e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26c), 0xcb);
        EXPECT(gbc.readMem(0xe26d), 0xab);
        // CB AB 0334
        gbc.setState(0x74aa, 0x32ef, 0x7560, 0x3573, 0x87d4, 0xa6d0, 0x1, 0x1);
        gbc.writeMem(0x74aa, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x32ef);
        EXPECT(gbc.pc(), 0x74ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0335
        gbc.setState(0xc623, 0x654d, 0xd270, 0x5ed2, 0xf744, 0xbdf7, 0x0, 0x0);
        gbc.writeMem(0xc623, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x654d);
        EXPECT(gbc.pc(), 0xc625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc623), 0xcb);
        EXPECT(gbc.readMem(0xc624), 0xab);
        // CB AB 0336
        gbc.setState(0x8c82, 0xa2cf, 0x8f40, 0x685d, 0x1d62, 0x3add, 0x1, 0x1);
        gbc.writeMem(0x8c82, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa2cf);
        EXPECT(gbc.pc(), 0x8c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c82), 0xcb);
        EXPECT(gbc.readMem(0x8c83), 0xab);
        // CB AB 0338
        gbc.setState(0x8e58, 0x1782, 0xb590, 0x6e06, 0x8a51, 0x9648, 0x0, 0x0);
        gbc.writeMem(0x8e58, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1782);
        EXPECT(gbc.pc(), 0x8e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e58), 0xcb);
        EXPECT(gbc.readMem(0x8e59), 0xab);
        // CB AB 0339
        gbc.setState(0x10d9, 0x23a3, 0xb8f0, 0x2c82, 0xfa73, 0xd381, 0x1, 0x1);
        gbc.writeMem(0x10d9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x23a3);
        EXPECT(gbc.pc(), 0x10db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 033A
        gbc.setState(0x2ec7, 0xb4, 0x8410, 0x7876, 0x18d1, 0xff50, 0x0, 0x1);
        gbc.writeMem(0x2ec7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb4);
        EXPECT(gbc.pc(), 0x2ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 033B
        gbc.setState(0x1599, 0x8156, 0xf3a0, 0x5167, 0xbb51, 0x91b9, 0x1, 0x1);
        gbc.writeMem(0x1599, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8156);
        EXPECT(gbc.pc(), 0x159b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 033C
        gbc.setState(0x33f5, 0x6a8, 0xe330, 0xb112, 0xa66b, 0xe7be, 0x1, 0x0);
        gbc.writeMem(0x33f5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6a8);
        EXPECT(gbc.pc(), 0x33f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 033D
        gbc.setState(0xa1ee, 0xa11d, 0x6b10, 0xe5bf, 0x6914, 0x10ae, 0x0, 0x1);
        gbc.writeMem(0xa1ee, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa11d);
        EXPECT(gbc.pc(), 0xa1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ee), 0xcb);
        EXPECT(gbc.readMem(0xa1ef), 0xab);
        // CB AB 033F
        gbc.setState(0x9658, 0xba42, 0xaac0, 0x66dc, 0x7f22, 0xb0d4, 0x0, 0x0);
        gbc.writeMem(0x9658, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xba42);
        EXPECT(gbc.pc(), 0x965a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9658), 0xcb);
        EXPECT(gbc.readMem(0x9659), 0xab);
        // CB AB 0340
        gbc.setState(0x1ac, 0x7cf7, 0x4e0, 0x5142, 0xf7a, 0x82d9, 0x1, 0x1);
        gbc.writeMem(0x1ac, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7cf7);
        EXPECT(gbc.pc(), 0x1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0342
        gbc.setState(0xae10, 0x3cbe, 0x11c0, 0xaed5, 0x62a9, 0xe927, 0x0, 0x0);
        gbc.writeMem(0xae10, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3cbe);
        EXPECT(gbc.pc(), 0xae12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae10), 0xcb);
        EXPECT(gbc.readMem(0xae11), 0xab);
        // CB AB 0343
        gbc.setState(0x754e, 0xa28a, 0x62d0, 0x375f, 0xea73, 0x6452, 0x1, 0x1);
        gbc.writeMem(0x754e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa28a);
        EXPECT(gbc.pc(), 0x7550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0344
        gbc.setState(0x1ace, 0x3db0, 0xedc0, 0xbe9e, 0x586f, 0x1ebe, 0x0, 0x1);
        gbc.writeMem(0x1ace, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3db0);
        EXPECT(gbc.pc(), 0x1ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0345
        gbc.setState(0xcb66, 0x9111, 0xcb70, 0x5c1b, 0x64bb, 0x4e77, 0x1, 0x0);
        gbc.writeMem(0xcb66, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9111);
        EXPECT(gbc.pc(), 0xcb68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb66), 0xcb);
        EXPECT(gbc.readMem(0xcb67), 0xab);
        // CB AB 0346
        gbc.setState(0x7735, 0xe009, 0x40a0, 0xd75d, 0x39f2, 0xfcb, 0x1, 0x1);
        gbc.writeMem(0x7735, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe009);
        EXPECT(gbc.pc(), 0x7737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0348
        gbc.setState(0xa6f6, 0xb209, 0xf330, 0xa07f, 0x8563, 0xcc52, 0x0, 0x0);
        gbc.writeMem(0xa6f6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb209);
        EXPECT(gbc.pc(), 0xa6f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6f6), 0xcb);
        EXPECT(gbc.readMem(0xa6f7), 0xab);
        // CB AB 034A
        gbc.setState(0x9d90, 0x8bcf, 0xc230, 0x9d8f, 0xfe64, 0x62b7, 0x1, 0x0);
        gbc.writeMem(0x9d90, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8bcf);
        EXPECT(gbc.pc(), 0x9d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d90), 0xcb);
        EXPECT(gbc.readMem(0x9d91), 0xab);
        // CB AB 034B
        gbc.setState(0x1f3b, 0xa51b, 0xc8e0, 0xae0a, 0xa4b5, 0x3205, 0x0, 0x0);
        gbc.writeMem(0x1f3b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa51b);
        EXPECT(gbc.pc(), 0x1f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 034C
        gbc.setState(0x8e36, 0x34bf, 0x2ee0, 0x3fb1, 0xd8e2, 0x2bb5, 0x1, 0x1);
        gbc.writeMem(0x8e36, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x34bf);
        EXPECT(gbc.pc(), 0x8e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e36), 0xcb);
        EXPECT(gbc.readMem(0x8e37), 0xab);
        // CB AB 034D
        gbc.setState(0x40c8, 0x9b54, 0xf650, 0xa4de, 0x5ea9, 0x3417, 0x0, 0x0);
        gbc.writeMem(0x40c8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9b54);
        EXPECT(gbc.pc(), 0x40ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 034E
        gbc.setState(0xe24a, 0xe225, 0x7b30, 0xc078, 0x9701, 0xb1a5, 0x0, 0x0);
        gbc.writeMem(0xe24a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe225);
        EXPECT(gbc.pc(), 0xe24c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24a), 0xcb);
        EXPECT(gbc.readMem(0xe24b), 0xab);
        // CB AB 034F
        gbc.setState(0x4c41, 0x4ca3, 0xe20, 0x9bf6, 0x6c61, 0x31d4, 0x1, 0x1);
        gbc.writeMem(0x4c41, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4ca3);
        EXPECT(gbc.pc(), 0x4c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0350
        gbc.setState(0x65a7, 0xce15, 0xb760, 0x9272, 0x24d4, 0x78fe, 0x0, 0x0);
        gbc.writeMem(0x65a7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xce15);
        EXPECT(gbc.pc(), 0x65a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0351
        gbc.setState(0xb240, 0x34d6, 0x69c0, 0x7360, 0xdf8d, 0x2c05, 0x1, 0x0);
        gbc.writeMem(0xb240, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x34d6);
        EXPECT(gbc.pc(), 0xb242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb240), 0xcb);
        EXPECT(gbc.readMem(0xb241), 0xab);
        // CB AB 0352
        gbc.setState(0x8cab, 0xe440, 0xd8d0, 0xd756, 0x3ea1, 0xbcd5, 0x1, 0x0);
        gbc.writeMem(0x8cab, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe440);
        EXPECT(gbc.pc(), 0x8cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cab), 0xcb);
        EXPECT(gbc.readMem(0x8cac), 0xab);
        // CB AB 0353
        gbc.setState(0x7d2a, 0xe515, 0x5ad0, 0x7507, 0xe7db, 0xfab8, 0x0, 0x0);
        gbc.writeMem(0x7d2a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe515);
        EXPECT(gbc.pc(), 0x7d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0354
        gbc.setState(0x5f51, 0x7fb, 0xf6c0, 0x3985, 0xba3b, 0x188e, 0x0, 0x1);
        gbc.writeMem(0x5f51, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7fb);
        EXPECT(gbc.pc(), 0x5f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0355
        gbc.setState(0xa267, 0x822b, 0xcde0, 0xbc2d, 0xe12b, 0xdbfa, 0x1, 0x1);
        gbc.writeMem(0xa267, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x822b);
        EXPECT(gbc.pc(), 0xa269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa267), 0xcb);
        EXPECT(gbc.readMem(0xa268), 0xab);
        // CB AB 0356
        gbc.setState(0xcbdc, 0xc6a, 0xe030, 0x3be5, 0x5679, 0x6955, 0x0, 0x0);
        gbc.writeMem(0xcbdc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc6a);
        EXPECT(gbc.pc(), 0xcbde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbdc), 0xcb);
        EXPECT(gbc.readMem(0xcbdd), 0xab);
        // CB AB 0357
        gbc.setState(0x1e71, 0x39ba, 0xaa50, 0x7adf, 0xc627, 0xf41e, 0x1, 0x1);
        gbc.writeMem(0x1e71, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x39ba);
        EXPECT(gbc.pc(), 0x1e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0358
        gbc.setState(0xcc35, 0xbe2b, 0x80c0, 0xfa0d, 0x28d9, 0xeaaf, 0x0, 0x0);
        gbc.writeMem(0xcc35, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbe2b);
        EXPECT(gbc.pc(), 0xcc37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc35), 0xcb);
        EXPECT(gbc.readMem(0xcc36), 0xab);
        // CB AB 0359
        gbc.setState(0xe56c, 0x3ebb, 0x9a0, 0xe712, 0x8ec3, 0x4ed, 0x1, 0x1);
        gbc.writeMem(0xe56c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3ebb);
        EXPECT(gbc.pc(), 0xe56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe56c), 0xcb);
        EXPECT(gbc.readMem(0xe56d), 0xab);
        // CB AB 035A
        gbc.setState(0x2a5e, 0x106a, 0xf7f0, 0x6349, 0xaece, 0xfbec, 0x1, 0x0);
        gbc.writeMem(0x2a5e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x106a);
        EXPECT(gbc.pc(), 0x2a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 035B
        gbc.setState(0xa5b1, 0xadfd, 0x3cf0, 0x9862, 0xd1ce, 0xc16e, 0x0, 0x1);
        gbc.writeMem(0xa5b1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xadfd);
        EXPECT(gbc.pc(), 0xa5b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b1), 0xcb);
        EXPECT(gbc.readMem(0xa5b2), 0xab);
        // CB AB 035C
        gbc.setState(0x914b, 0xfa52, 0x9470, 0x3b, 0x3fe8, 0x159e, 0x0, 0x1);
        gbc.writeMem(0x914b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfa52);
        EXPECT(gbc.pc(), 0x914d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x914b), 0xcb);
        EXPECT(gbc.readMem(0x914c), 0xab);
        // CB AB 035D
        gbc.setState(0xdc3b, 0x30eb, 0x6a60, 0x61aa, 0x2d3f, 0xaccf, 0x1, 0x1);
        gbc.writeMem(0xdc3b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x30eb);
        EXPECT(gbc.pc(), 0xdc3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc3b), 0xcb);
        EXPECT(gbc.readMem(0xdc3c), 0xab);
        // CB AB 035E
        gbc.setState(0x6c07, 0xd422, 0x8430, 0x1df6, 0x5efc, 0x8a40, 0x0, 0x1);
        gbc.writeMem(0x6c07, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd422);
        EXPECT(gbc.pc(), 0x6c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 035F
        gbc.setState(0xebe7, 0xdfb6, 0x51c0, 0xc255, 0x1a78, 0x477e, 0x1, 0x1);
        gbc.writeMem(0xebe7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdfb6);
        EXPECT(gbc.pc(), 0xebe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe7), 0xcb);
        EXPECT(gbc.readMem(0xebe8), 0xab);
        // CB AB 0360
        gbc.setState(0xdbd2, 0x59ce, 0xe5e0, 0x79ca, 0xbe4d, 0x9842, 0x0, 0x0);
        gbc.writeMem(0xdbd2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x59ce);
        EXPECT(gbc.pc(), 0xdbd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd2), 0xcb);
        EXPECT(gbc.readMem(0xdbd3), 0xab);
        // CB AB 0361
        gbc.setState(0x3bb3, 0xba80, 0xa920, 0xbd38, 0x8373, 0x9f17, 0x1, 0x0);
        gbc.writeMem(0x3bb3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xba80);
        EXPECT(gbc.pc(), 0x3bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0362
        gbc.setState(0x5fe6, 0xb96e, 0x20d0, 0x9357, 0x4836, 0x6cbb, 0x0, 0x0);
        gbc.writeMem(0x5fe6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb96e);
        EXPECT(gbc.pc(), 0x5fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0363
        gbc.setState(0x2e5e, 0xc3b, 0xc840, 0xdf20, 0x32af, 0x833f, 0x1, 0x0);
        gbc.writeMem(0x2e5e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc3b);
        EXPECT(gbc.pc(), 0x2e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0364
        gbc.setState(0x2a44, 0x7424, 0xc570, 0x25bb, 0xea8c, 0x70c2, 0x1, 0x0);
        gbc.writeMem(0x2a44, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7424);
        EXPECT(gbc.pc(), 0x2a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0365
        gbc.setState(0x8eff, 0x9acc, 0x2ed0, 0x4bb1, 0xe95a, 0x8886, 0x0, 0x0);
        gbc.writeMem(0x8eff, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9acc);
        EXPECT(gbc.pc(), 0x8f01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eff), 0xcb);
        EXPECT(gbc.readMem(0x8f00), 0xab);
        // CB AB 0367
        gbc.setState(0x6fba, 0x624c, 0x6bc0, 0x9231, 0xff17, 0xf6a3, 0x0, 0x1);
        gbc.writeMem(0x6fba, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x624c);
        EXPECT(gbc.pc(), 0x6fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0368
        gbc.setState(0x50a3, 0x9d12, 0xd870, 0xce57, 0x402b, 0xb5ae, 0x1, 0x0);
        gbc.writeMem(0x50a3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9d12);
        EXPECT(gbc.pc(), 0x50a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0369
        gbc.setState(0x9c9a, 0x57e0, 0xb330, 0xcdec, 0xf21f, 0x5ae1, 0x0, 0x1);
        gbc.writeMem(0x9c9a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x57e0);
        EXPECT(gbc.pc(), 0x9c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9a), 0xcb);
        EXPECT(gbc.readMem(0x9c9b), 0xab);
        // CB AB 036A
        gbc.setState(0x5163, 0xa094, 0xd490, 0x3bc0, 0x36b1, 0xaffc, 0x0, 0x1);
        gbc.writeMem(0x5163, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa094);
        EXPECT(gbc.pc(), 0x5165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 036B
        gbc.setState(0x5880, 0xe2c7, 0x790, 0x4c05, 0x271a, 0x375a, 0x1, 0x0);
        gbc.writeMem(0x5880, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe2c7);
        EXPECT(gbc.pc(), 0x5882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 036C
        gbc.setState(0x29b3, 0xfca3, 0xe320, 0xc314, 0xeca3, 0xcfee, 0x1, 0x1);
        gbc.writeMem(0x29b3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfca3);
        EXPECT(gbc.pc(), 0x29b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 036D
        gbc.setState(0x1a32, 0x4823, 0x6e90, 0x8925, 0xee17, 0x25d6, 0x0, 0x0);
        gbc.writeMem(0x1a32, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4823);
        EXPECT(gbc.pc(), 0x1a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 036E
        gbc.setState(0x2347, 0x50e5, 0xc8a0, 0x2046, 0xbefa, 0xd6f3, 0x0, 0x1);
        gbc.writeMem(0x2347, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x50e5);
        EXPECT(gbc.pc(), 0x2349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 036F
        gbc.setState(0x77bb, 0x8d91, 0xb70, 0xfdf9, 0xdd31, 0xba27, 0x1, 0x0);
        gbc.writeMem(0x77bb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8d91);
        EXPECT(gbc.pc(), 0x77bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0370
        gbc.setState(0x30c5, 0x39c, 0x23e0, 0x4e5, 0xcf2e, 0xd78, 0x1, 0x1);
        gbc.writeMem(0x30c5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x39c);
        EXPECT(gbc.pc(), 0x30c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0371
        gbc.setState(0xb9ee, 0x4372, 0xebb0, 0x157a, 0x4875, 0x88dd, 0x0, 0x0);
        gbc.writeMem(0xb9ee, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4372);
        EXPECT(gbc.pc(), 0xb9f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ee), 0xcb);
        EXPECT(gbc.readMem(0xb9ef), 0xab);
        // CB AB 0372
        gbc.setState(0xaef3, 0xd1b7, 0xdcf0, 0xd71d, 0x3885, 0xaeb3, 0x0, 0x1);
        gbc.writeMem(0xaef3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd1b7);
        EXPECT(gbc.pc(), 0xaef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef3), 0xcb);
        EXPECT(gbc.readMem(0xaef4), 0xab);
        // CB AB 0373
        gbc.setState(0xdd0d, 0x5971, 0x9a30, 0x88c9, 0xee92, 0x87e9, 0x1, 0x1);
        gbc.writeMem(0xdd0d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5971);
        EXPECT(gbc.pc(), 0xdd0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd0d), 0xcb);
        EXPECT(gbc.readMem(0xdd0e), 0xab);
        // CB AB 0374
        gbc.setState(0x6dd2, 0x3067, 0xba70, 0xa231, 0xe320, 0x6b10, 0x0, 0x0);
        gbc.writeMem(0x6dd2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3067);
        EXPECT(gbc.pc(), 0x6dd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0375
        gbc.setState(0xed56, 0xfedc, 0xf2a0, 0xe327, 0xe885, 0x3321, 0x1, 0x1);
        gbc.writeMem(0xed56, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xfedc);
        EXPECT(gbc.pc(), 0xed58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed56), 0xcb);
        EXPECT(gbc.readMem(0xed57), 0xab);
        // CB AB 0376
        gbc.setState(0x79e9, 0x1002, 0x1360, 0x87bd, 0x6391, 0x445f, 0x0, 0x1);
        gbc.writeMem(0x79e9, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1002);
        EXPECT(gbc.pc(), 0x79eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0377
        gbc.setState(0x9d59, 0xc215, 0x5120, 0x6e1d, 0x5d48, 0xeb8e, 0x1, 0x0);
        gbc.writeMem(0x9d59, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc215);
        EXPECT(gbc.pc(), 0x9d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d59), 0xcb);
        EXPECT(gbc.readMem(0x9d5a), 0xab);
        // CB AB 0378
        gbc.setState(0x2d72, 0xebea, 0x4cc0, 0x882a, 0xfddb, 0x7a3f, 0x1, 0x0);
        gbc.writeMem(0x2d72, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xebea);
        EXPECT(gbc.pc(), 0x2d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0379
        gbc.setState(0x5708, 0x6f96, 0x1630, 0xc274, 0xd673, 0x2d10, 0x1, 0x1);
        gbc.writeMem(0x5708, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6f96);
        EXPECT(gbc.pc(), 0x570a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 037A
        gbc.setState(0xa96e, 0xc33, 0xe710, 0x317, 0x3736, 0x79c0, 0x1, 0x1);
        gbc.writeMem(0xa96e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc33);
        EXPECT(gbc.pc(), 0xa970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96e), 0xcb);
        EXPECT(gbc.readMem(0xa96f), 0xab);
        // CB AB 037B
        gbc.setState(0xad02, 0xf5e0, 0x55c0, 0xe3a7, 0xc0eb, 0xa2e0, 0x0, 0x1);
        gbc.writeMem(0xad02, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf5e0);
        EXPECT(gbc.pc(), 0xad04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad02), 0xcb);
        EXPECT(gbc.readMem(0xad03), 0xab);
        // CB AB 037C
        gbc.setState(0x272a, 0x3968, 0x23e0, 0x3a58, 0xfeb7, 0x5f6e, 0x1, 0x1);
        gbc.writeMem(0x272a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3968);
        EXPECT(gbc.pc(), 0x272c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 037D
        gbc.setState(0x2d0b, 0xc50c, 0x43c0, 0xe29f, 0x2d85, 0x1efe, 0x1, 0x1);
        gbc.writeMem(0x2d0b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc50c);
        EXPECT(gbc.pc(), 0x2d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 037E
        gbc.setState(0x199b, 0xfc5d, 0x5a50, 0x59eb, 0x7e5b, 0x4899, 0x0, 0x1);
        gbc.writeMem(0x199b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfc5d);
        EXPECT(gbc.pc(), 0x199d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 037F
        gbc.setState(0xd690, 0x6f87, 0x3030, 0xfbcc, 0x2a8c, 0xe0f, 0x0, 0x0);
        gbc.writeMem(0xd690, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6f87);
        EXPECT(gbc.pc(), 0xd692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd690), 0xcb);
        EXPECT(gbc.readMem(0xd691), 0xab);
        // CB AB 0380
        gbc.setState(0x14e2, 0x3ef9, 0x91e0, 0x3692, 0x1802, 0x8581, 0x1, 0x1);
        gbc.writeMem(0x14e2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3ef9);
        EXPECT(gbc.pc(), 0x14e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0381
        gbc.setState(0x3a68, 0x3993, 0xaf30, 0xf96f, 0x6ad, 0x146d, 0x1, 0x0);
        gbc.writeMem(0x3a68, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3993);
        EXPECT(gbc.pc(), 0x3a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0382
        gbc.setState(0x66d0, 0x6c0e, 0x3fb0, 0x24c6, 0xafd8, 0x1d61, 0x1, 0x0);
        gbc.writeMem(0x66d0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6c0e);
        EXPECT(gbc.pc(), 0x66d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0383
        gbc.setState(0x425c, 0xf5aa, 0x740, 0xdb01, 0x85b9, 0xc63a, 0x1, 0x0);
        gbc.writeMem(0x425c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf5aa);
        EXPECT(gbc.pc(), 0x425e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0384
        gbc.setState(0x30fe, 0x279a, 0x25d0, 0x38c6, 0x4ab, 0xe757, 0x1, 0x1);
        gbc.writeMem(0x30fe, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x279a);
        EXPECT(gbc.pc(), 0x3100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0385
        gbc.setState(0xc426, 0x630d, 0x8b90, 0xc963, 0xf68d, 0x90a7, 0x0, 0x0);
        gbc.writeMem(0xc426, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x630d);
        EXPECT(gbc.pc(), 0xc428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc426), 0xcb);
        EXPECT(gbc.readMem(0xc427), 0xab);
        // CB AB 0387
        gbc.setState(0x72b7, 0xcb94, 0x43e0, 0x1215, 0x6ac, 0x956b, 0x0, 0x0);
        gbc.writeMem(0x72b7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcb94);
        EXPECT(gbc.pc(), 0x72b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0388
        gbc.setState(0x871b, 0xab52, 0xa690, 0xde9e, 0x7cc8, 0x9bcb, 0x0, 0x0);
        gbc.writeMem(0x871b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xab52);
        EXPECT(gbc.pc(), 0x871d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871b), 0xcb);
        EXPECT(gbc.readMem(0x871c), 0xab);
        // CB AB 0389
        gbc.setState(0x77d, 0x8de9, 0x7000, 0x4722, 0x9a5e, 0x21f, 0x0, 0x1);
        gbc.writeMem(0x77d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8de9);
        EXPECT(gbc.pc(), 0x77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 038A
        gbc.setState(0x6e58, 0xf5bb, 0x8550, 0x9e88, 0x7a59, 0x85fc, 0x0, 0x0);
        gbc.writeMem(0x6e58, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf5bb);
        EXPECT(gbc.pc(), 0x6e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 038B
        gbc.setState(0xa8ec, 0xc882, 0x41c0, 0x1a64, 0x72a4, 0xa93a, 0x0, 0x1);
        gbc.writeMem(0xa8ec, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc882);
        EXPECT(gbc.pc(), 0xa8ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ec), 0xcb);
        EXPECT(gbc.readMem(0xa8ed), 0xab);
        // CB AB 038C
        gbc.setState(0xaea2, 0x17cc, 0x73c0, 0xb2ba, 0x265a, 0x6290, 0x0, 0x0);
        gbc.writeMem(0xaea2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x17cc);
        EXPECT(gbc.pc(), 0xaea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea2), 0xcb);
        EXPECT(gbc.readMem(0xaea3), 0xab);
        // CB AB 038D
        gbc.setState(0xa92b, 0x4fa6, 0x4040, 0xfeb5, 0x909c, 0xa626, 0x0, 0x0);
        gbc.writeMem(0xa92b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4fa6);
        EXPECT(gbc.pc(), 0xa92d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa92b), 0xcb);
        EXPECT(gbc.readMem(0xa92c), 0xab);
        // CB AB 038E
        gbc.setState(0x75cd, 0x4930, 0x6330, 0xfd8c, 0xfb0d, 0xfab9, 0x1, 0x0);
        gbc.writeMem(0x75cd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4930);
        EXPECT(gbc.pc(), 0x75cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 038F
        gbc.setState(0x9fd0, 0x3c94, 0xbe60, 0x7a65, 0x8e70, 0x792e, 0x0, 0x0);
        gbc.writeMem(0x9fd0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3c94);
        EXPECT(gbc.pc(), 0x9fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd0), 0xcb);
        EXPECT(gbc.readMem(0x9fd1), 0xab);
        // CB AB 0390
        gbc.setState(0xc93f, 0x9cdc, 0x77d0, 0x645c, 0x4723, 0xcca8, 0x1, 0x1);
        gbc.writeMem(0xc93f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9cdc);
        EXPECT(gbc.pc(), 0xc941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93f), 0xcb);
        EXPECT(gbc.readMem(0xc940), 0xab);
        // CB AB 0391
        gbc.setState(0x5cc2, 0x5643, 0xb440, 0x9a13, 0xd1db, 0x98ee, 0x1, 0x1);
        gbc.writeMem(0x5cc2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5643);
        EXPECT(gbc.pc(), 0x5cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0392
        gbc.setState(0x4ab7, 0x8843, 0xfb30, 0x3771, 0x9dc5, 0x85d1, 0x1, 0x1);
        gbc.writeMem(0x4ab7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8843);
        EXPECT(gbc.pc(), 0x4ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0393
        gbc.setState(0x2da5, 0xe41b, 0x860, 0xa76f, 0xc13c, 0x6cca, 0x0, 0x1);
        gbc.writeMem(0x2da5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe41b);
        EXPECT(gbc.pc(), 0x2da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0394
        gbc.setState(0x5b38, 0xe2e5, 0xb490, 0xf50a, 0x359b, 0xf745, 0x1, 0x0);
        gbc.writeMem(0x5b38, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe2e5);
        EXPECT(gbc.pc(), 0x5b3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 0396
        gbc.setState(0xdf4c, 0xf614, 0xf0f0, 0xee4e, 0x91c, 0xba93, 0x0, 0x1);
        gbc.writeMem(0xdf4c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf614);
        EXPECT(gbc.pc(), 0xdf4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf4c), 0xcb);
        EXPECT(gbc.readMem(0xdf4d), 0xab);
        // CB AB 0397
        gbc.setState(0x58cf, 0xc62d, 0x7460, 0x363e, 0xf82c, 0x55fa, 0x1, 0x1);
        gbc.writeMem(0x58cf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc62d);
        EXPECT(gbc.pc(), 0x58d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 0399
        gbc.setState(0x4a4, 0xebe3, 0x6350, 0x1f49, 0x4aa, 0x7f7c, 0x0, 0x0);
        gbc.writeMem(0x4a4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xebe3);
        EXPECT(gbc.pc(), 0x4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 039A
        gbc.setState(0x29fb, 0x3a10, 0xf60, 0xd8, 0xfa7, 0x47b2, 0x0, 0x0);
        gbc.writeMem(0x29fb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3a10);
        EXPECT(gbc.pc(), 0x29fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 039B
        gbc.setState(0x105b, 0x3ec2, 0x430, 0x2450, 0x2cf8, 0x6290, 0x0, 0x0);
        gbc.writeMem(0x105b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3ec2);
        EXPECT(gbc.pc(), 0x105d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 039C
        gbc.setState(0xb786, 0x99cb, 0x4400, 0xcaa9, 0x556d, 0x71f, 0x1, 0x0);
        gbc.writeMem(0xb786, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x99cb);
        EXPECT(gbc.pc(), 0xb788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb786), 0xcb);
        EXPECT(gbc.readMem(0xb787), 0xab);
        // CB AB 039D
        gbc.setState(0x9abf, 0x6ed5, 0x9960, 0x9d28, 0x5c30, 0x74c, 0x1, 0x1);
        gbc.writeMem(0x9abf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6ed5);
        EXPECT(gbc.pc(), 0x9ac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9abf), 0xcb);
        EXPECT(gbc.readMem(0x9ac0), 0xab);
        // CB AB 039E
        gbc.setState(0x327f, 0x3a06, 0xd800, 0xc8ec, 0x96dd, 0xe16f, 0x0, 0x1);
        gbc.writeMem(0x327f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3a06);
        EXPECT(gbc.pc(), 0x3281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 039F
        gbc.setState(0x4904, 0x69a2, 0x8140, 0x241c, 0xd9ba, 0xbd3b, 0x1, 0x0);
        gbc.writeMem(0x4904, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x69a2);
        EXPECT(gbc.pc(), 0x4906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03A0
        gbc.setState(0x35fe, 0x3b19, 0xcdb0, 0xa729, 0xfbf9, 0xfe1f, 0x0, 0x0);
        gbc.writeMem(0x35fe, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3b19);
        EXPECT(gbc.pc(), 0x3600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03A1
        gbc.setState(0xcc30, 0x743a, 0xbaf0, 0xa867, 0x6f6b, 0xb61e, 0x0, 0x1);
        gbc.writeMem(0xcc30, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x743a);
        EXPECT(gbc.pc(), 0xcc32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc30), 0xcb);
        EXPECT(gbc.readMem(0xcc31), 0xab);
        // CB AB 03A2
        gbc.setState(0x419a, 0x72a4, 0x39e0, 0x989a, 0x5db1, 0x605a, 0x0, 0x1);
        gbc.writeMem(0x419a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x72a4);
        EXPECT(gbc.pc(), 0x419c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03A3
        gbc.setState(0xdf, 0x5aae, 0xbfb0, 0xf8b, 0x819c, 0x129d, 0x0, 0x1);
        gbc.writeMem(0xdf, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5aae);
        EXPECT(gbc.pc(), 0xe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03A4
        gbc.setState(0x7c9d, 0x373c, 0xd5f0, 0xeabf, 0xcf5d, 0xa3be, 0x1, 0x0);
        gbc.writeMem(0x7c9d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x373c);
        EXPECT(gbc.pc(), 0x7c9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03A5
        gbc.setState(0x9bb6, 0x5868, 0xe960, 0xebda, 0x2f32, 0x768d, 0x1, 0x0);
        gbc.writeMem(0x9bb6, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5868);
        EXPECT(gbc.pc(), 0x9bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb6), 0xcb);
        EXPECT(gbc.readMem(0x9bb7), 0xab);
        // CB AB 03A6
        gbc.setState(0xb398, 0x69da, 0x8dd0, 0xd898, 0x2679, 0x3b43, 0x0, 0x0);
        gbc.writeMem(0xb398, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x69da);
        EXPECT(gbc.pc(), 0xb39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb398), 0xcb);
        EXPECT(gbc.readMem(0xb399), 0xab);
        // CB AB 03A7
        gbc.setState(0x796a, 0x6be8, 0x6e90, 0x238c, 0x92f3, 0xe499, 0x1, 0x0);
        gbc.writeMem(0x796a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6be8);
        EXPECT(gbc.pc(), 0x796c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03A8
        gbc.setState(0x81a, 0xac07, 0xacc0, 0xc542, 0xfb96, 0x3f1a, 0x0, 0x0);
        gbc.writeMem(0x81a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xac07);
        EXPECT(gbc.pc(), 0x81c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03A9
        gbc.setState(0xb278, 0x9baf, 0xced0, 0xe77d, 0x116f, 0x3c2c, 0x1, 0x1);
        gbc.writeMem(0xb278, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9baf);
        EXPECT(gbc.pc(), 0xb27a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb278), 0xcb);
        EXPECT(gbc.readMem(0xb279), 0xab);
        // CB AB 03AA
        gbc.setState(0x1096, 0x2505, 0xc2f0, 0xb45a, 0xb341, 0x16c8, 0x1, 0x0);
        gbc.writeMem(0x1096, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2505);
        EXPECT(gbc.pc(), 0x1098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03AB
        gbc.setState(0xcfde, 0xce5b, 0xa070, 0x5ef8, 0xd864, 0xf0a5, 0x0, 0x1);
        gbc.writeMem(0xcfde, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xce5b);
        EXPECT(gbc.pc(), 0xcfe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfde), 0xcb);
        EXPECT(gbc.readMem(0xcfdf), 0xab);
        // CB AB 03AD
        gbc.setState(0xc45e, 0x4e7e, 0x940, 0x886, 0x72c7, 0xcf04, 0x0, 0x1);
        gbc.writeMem(0xc45e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4e7e);
        EXPECT(gbc.pc(), 0xc460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45e), 0xcb);
        EXPECT(gbc.readMem(0xc45f), 0xab);
        // CB AB 03AE
        gbc.setState(0xdbbb, 0x8954, 0x8da0, 0xdedd, 0xd1a3, 0x66c7, 0x0, 0x1);
        gbc.writeMem(0xdbbb, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8954);
        EXPECT(gbc.pc(), 0xdbbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbbb), 0xcb);
        EXPECT(gbc.readMem(0xdbbc), 0xab);
        // CB AB 03AF
        gbc.setState(0x8c7b, 0x3da, 0xac40, 0x241d, 0xe121, 0x8a07, 0x0, 0x0);
        gbc.writeMem(0x8c7b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3da);
        EXPECT(gbc.pc(), 0x8c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7b), 0xcb);
        EXPECT(gbc.readMem(0x8c7c), 0xab);
        // CB AB 03B0
        gbc.setState(0xd87b, 0x82, 0x6f10, 0xaeb7, 0x3182, 0x468a, 0x1, 0x0);
        gbc.writeMem(0xd87b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x82);
        EXPECT(gbc.pc(), 0xd87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87b), 0xcb);
        EXPECT(gbc.readMem(0xd87c), 0xab);
        // CB AB 03B1
        gbc.setState(0xdd31, 0x6244, 0xf820, 0x951b, 0x2994, 0x30b4, 0x0, 0x1);
        gbc.writeMem(0xdd31, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6244);
        EXPECT(gbc.pc(), 0xdd33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd31), 0xcb);
        EXPECT(gbc.readMem(0xdd32), 0xab);
        // CB AB 03B2
        gbc.setState(0x6e7d, 0x4f05, 0xe820, 0x4d21, 0x544c, 0x884d, 0x1, 0x1);
        gbc.writeMem(0x6e7d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4f05);
        EXPECT(gbc.pc(), 0x6e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03B3
        gbc.setState(0x2cf4, 0x3cb4, 0x1570, 0x8cec, 0xbb21, 0xf23c, 0x1, 0x0);
        gbc.writeMem(0x2cf4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3cb4);
        EXPECT(gbc.pc(), 0x2cf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03B4
        gbc.setState(0xa34c, 0x4b1d, 0xf370, 0x1c2d, 0x718f, 0xb367, 0x1, 0x1);
        gbc.writeMem(0xa34c, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4b1d);
        EXPECT(gbc.pc(), 0xa34e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa34c), 0xcb);
        EXPECT(gbc.readMem(0xa34d), 0xab);
        // CB AB 03B5
        gbc.setState(0xebd8, 0x103c, 0xf620, 0xc630, 0x692f, 0xa33b, 0x1, 0x1);
        gbc.writeMem(0xebd8, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x103c);
        EXPECT(gbc.pc(), 0xebda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd8), 0xcb);
        EXPECT(gbc.readMem(0xebd9), 0xab);
        // CB AB 03B6
        gbc.setState(0x59d, 0x28b4, 0x30b0, 0x6abf, 0x725e, 0x5bb2, 0x0, 0x0);
        gbc.writeMem(0x59d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x28b4);
        EXPECT(gbc.pc(), 0x59f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03B7
        gbc.setState(0xa1b3, 0xc292, 0x29d0, 0xb17f, 0x89f3, 0xafcb, 0x1, 0x1);
        gbc.writeMem(0xa1b3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc292);
        EXPECT(gbc.pc(), 0xa1b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b3), 0xcb);
        EXPECT(gbc.readMem(0xa1b4), 0xab);
        // CB AB 03B8
        gbc.setState(0x6395, 0x570f, 0xfea0, 0x1de5, 0x495e, 0x9d29, 0x0, 0x0);
        gbc.writeMem(0x6395, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x570f);
        EXPECT(gbc.pc(), 0x6397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03B9
        gbc.setState(0x5e00, 0xbe42, 0xf570, 0x1acf, 0xcdf5, 0x3eff, 0x0, 0x0);
        gbc.writeMem(0x5e00, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbe42);
        EXPECT(gbc.pc(), 0x5e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03BA
        gbc.setState(0x866b, 0xbb59, 0xea90, 0x9cca, 0x48c0, 0xe9d1, 0x0, 0x1);
        gbc.writeMem(0x866b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbb59);
        EXPECT(gbc.pc(), 0x866d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866b), 0xcb);
        EXPECT(gbc.readMem(0x866c), 0xab);
        // CB AB 03BB
        gbc.setState(0xdf8e, 0xc9a, 0x9790, 0xff22, 0xbd95, 0x2bd9, 0x1, 0x0);
        gbc.writeMem(0xdf8e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc9a);
        EXPECT(gbc.pc(), 0xdf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8e), 0xcb);
        EXPECT(gbc.readMem(0xdf8f), 0xab);
        // CB AB 03BC
        gbc.setState(0x7367, 0x7b78, 0x7bd0, 0xc491, 0x4eda, 0xd01a, 0x1, 0x0);
        gbc.writeMem(0x7367, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7b78);
        EXPECT(gbc.pc(), 0x7369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03BD
        gbc.setState(0xaeb2, 0x36ca, 0xad50, 0x88d0, 0xfb86, 0x3c31, 0x1, 0x1);
        gbc.writeMem(0xaeb2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x36ca);
        EXPECT(gbc.pc(), 0xaeb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb2), 0xcb);
        EXPECT(gbc.readMem(0xaeb3), 0xab);
        // CB AB 03BE
        gbc.setState(0x4175, 0x2d86, 0x5e40, 0xee4e, 0xc0ee, 0xff88, 0x0, 0x1);
        gbc.writeMem(0x4175, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2d86);
        EXPECT(gbc.pc(), 0x4177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03BF
        gbc.setState(0xcdf0, 0xa757, 0xce10, 0x3051, 0xba00, 0x8a84, 0x1, 0x0);
        gbc.writeMem(0xcdf0, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa757);
        EXPECT(gbc.pc(), 0xcdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf0), 0xcb);
        EXPECT(gbc.readMem(0xcdf1), 0xab);
        // CB AB 03C0
        gbc.setState(0xcb18, 0xa47, 0xffa0, 0x8ba9, 0x1d46, 0xfbc, 0x0, 0x0);
        gbc.writeMem(0xcb18, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa47);
        EXPECT(gbc.pc(), 0xcb1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb18), 0xcb);
        EXPECT(gbc.readMem(0xcb19), 0xab);
        // CB AB 03C1
        gbc.setState(0xec3b, 0x7ff0, 0x43f0, 0x2f5b, 0xe371, 0xa84f, 0x0, 0x1);
        gbc.writeMem(0xec3b, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7ff0);
        EXPECT(gbc.pc(), 0xec3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3b), 0xcb);
        EXPECT(gbc.readMem(0xec3c), 0xab);
        // CB AB 03C2
        gbc.setState(0x37a7, 0x277b, 0x5a40, 0xacf2, 0x3305, 0xd2cb, 0x0, 0x0);
        gbc.writeMem(0x37a7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x277b);
        EXPECT(gbc.pc(), 0x37a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03C3
        gbc.setState(0xdbc3, 0x4eb9, 0x160, 0x944, 0x5312, 0x1035, 0x0, 0x1);
        gbc.writeMem(0xdbc3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4eb9);
        EXPECT(gbc.pc(), 0xdbc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc3), 0xcb);
        EXPECT(gbc.readMem(0xdbc4), 0xab);
        // CB AB 03C4
        gbc.setState(0x6e8f, 0x38f8, 0x10b0, 0x8405, 0x3d12, 0xa7fb, 0x0, 0x1);
        gbc.writeMem(0x6e8f, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x38f8);
        EXPECT(gbc.pc(), 0x6e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03C5
        gbc.setState(0x877d, 0x101e, 0xa5e0, 0xb6c7, 0xd82b, 0x6a9, 0x0, 0x1);
        gbc.writeMem(0x877d, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x101e);
        EXPECT(gbc.pc(), 0x877f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877d), 0xcb);
        EXPECT(gbc.readMem(0x877e), 0xab);
        // CB AB 03C6
        gbc.setState(0xdba3, 0x729e, 0x7190, 0xb697, 0x79e4, 0xe9cc, 0x0, 0x0);
        gbc.writeMem(0xdba3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x729e);
        EXPECT(gbc.pc(), 0xdba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba3), 0xcb);
        EXPECT(gbc.readMem(0xdba4), 0xab);
        // CB AB 03C7
        gbc.setState(0xd8dc, 0x42e3, 0x4050, 0x3864, 0xc81c, 0x8905, 0x1, 0x0);
        gbc.writeMem(0xd8dc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x42e3);
        EXPECT(gbc.pc(), 0xd8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8dc), 0xcb);
        EXPECT(gbc.readMem(0xd8dd), 0xab);
        // CB AB 03C8
        gbc.setState(0x6525, 0x9749, 0x1470, 0x5db8, 0x8692, 0x3947, 0x1, 0x1);
        gbc.writeMem(0x6525, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9749);
        EXPECT(gbc.pc(), 0x6527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03C9
        gbc.setState(0x70ae, 0x57bd, 0x2350, 0x463c, 0x5092, 0x80ad, 0x0, 0x0);
        gbc.writeMem(0x70ae, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x57bd);
        EXPECT(gbc.pc(), 0x70b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03CA
        gbc.setState(0xe1c7, 0x5d5f, 0xe710, 0x97a6, 0x5978, 0xd68e, 0x1, 0x1);
        gbc.writeMem(0xe1c7, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5d5f);
        EXPECT(gbc.pc(), 0xe1c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1c7), 0xcb);
        EXPECT(gbc.readMem(0xe1c8), 0xab);
        // CB AB 03CB
        gbc.setState(0x5a9e, 0xfb91, 0xc000, 0x1866, 0xabe1, 0x8975, 0x0, 0x1);
        gbc.writeMem(0x5a9e, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfb91);
        EXPECT(gbc.pc(), 0x5aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03CC
        gbc.setState(0x41c3, 0xf474, 0x2610, 0xe0e9, 0xabc9, 0x2482, 0x1, 0x0);
        gbc.writeMem(0x41c3, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf474);
        EXPECT(gbc.pc(), 0x41c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03CD
        gbc.setState(0x4c4, 0x4a06, 0x44a0, 0xa189, 0x9667, 0xbefd, 0x1, 0x1);
        gbc.writeMem(0x4c4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4a06);
        EXPECT(gbc.pc(), 0x4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03CE
        gbc.setState(0x4d17, 0xc264, 0xdd70, 0xdbee, 0x54e2, 0x2f7e, 0x1, 0x1);
        gbc.writeMem(0x4d17, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc264);
        EXPECT(gbc.pc(), 0x4d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03CF
        gbc.setState(0x92dc, 0x8031, 0xcb70, 0x185e, 0xacef, 0x567c, 0x1, 0x1);
        gbc.writeMem(0x92dc, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8031);
        EXPECT(gbc.pc(), 0x92de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92dc), 0xcb);
        EXPECT(gbc.readMem(0x92dd), 0xab);
        // CB AB 03D0
        gbc.setState(0x4c40, 0x2717, 0x97a0, 0x6f7, 0xdb5f, 0x7f74, 0x1, 0x1);
        gbc.writeMem(0x4c40, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2717);
        EXPECT(gbc.pc(), 0x4c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03D1
        gbc.setState(0xceaa, 0x46f9, 0xcfa0, 0x85ec, 0xed92, 0x4ad6, 0x0, 0x0);
        gbc.writeMem(0xceaa, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x46f9);
        EXPECT(gbc.pc(), 0xceac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceaa), 0xcb);
        EXPECT(gbc.readMem(0xceab), 0xab);
        // CB AB 03D3
        gbc.setState(0xc964, 0x3bd3, 0x5ce0, 0xc2e, 0xa55a, 0x137d, 0x0, 0x1);
        gbc.writeMem(0xc964, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3bd3);
        EXPECT(gbc.pc(), 0xc966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc964), 0xcb);
        EXPECT(gbc.readMem(0xc965), 0xab);
        // CB AB 03D4
        gbc.setState(0xb1df, 0xfb9, 0xe3a0, 0x456c, 0x253d, 0xe4b9, 0x1, 0x1);
        gbc.writeMem(0xb1df, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfb9);
        EXPECT(gbc.pc(), 0xb1e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1df), 0xcb);
        EXPECT(gbc.readMem(0xb1e0), 0xab);
        // CB AB 03D5
        gbc.setState(0xd4ce, 0xa94e, 0xd620, 0x7784, 0xc9a0, 0x3feb, 0x0, 0x0);
        gbc.writeMem(0xd4ce, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa94e);
        EXPECT(gbc.pc(), 0xd4d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ce), 0xcb);
        EXPECT(gbc.readMem(0xd4cf), 0xab);
        // CB AB 03D7
        gbc.setState(0x2744, 0xf6a7, 0x5c20, 0x6dd7, 0x53fd, 0x48a4, 0x1, 0x1);
        gbc.writeMem(0x2744, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf6a7);
        EXPECT(gbc.pc(), 0x2746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03D8
        gbc.setState(0xd5a2, 0xe279, 0xc930, 0x8b7c, 0x26b5, 0xde93, 0x0, 0x0);
        gbc.writeMem(0xd5a2, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe279);
        EXPECT(gbc.pc(), 0xd5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a2), 0xcb);
        EXPECT(gbc.readMem(0xd5a3), 0xab);
        // CB AB 03D9
        gbc.setState(0x3ba4, 0x80ac, 0xacd0, 0xa67b, 0xc836, 0xb4fc, 0x1, 0x0);
        gbc.writeMem(0x3ba4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x80ac);
        EXPECT(gbc.pc(), 0x3ba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03DA
        gbc.setState(0xde5, 0xa1f6, 0xf420, 0xce16, 0x6918, 0xf0c3, 0x0, 0x1);
        gbc.writeMem(0xde5, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa1f6);
        EXPECT(gbc.pc(), 0xde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03DB
        gbc.setState(0xd8e4, 0x5550, 0x9e50, 0xf3ec, 0x9a8, 0xac26, 0x1, 0x0);
        gbc.writeMem(0xd8e4, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5550);
        EXPECT(gbc.pc(), 0xd8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e4), 0xcb);
        EXPECT(gbc.readMem(0xd8e5), 0xab);
        // CB AB 03DC
        gbc.setState(0x8d50, 0x99e7, 0x4150, 0x7dbe, 0x7cb4, 0x2d99, 0x1, 0x0);
        gbc.writeMem(0x8d50, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x99e7);
        EXPECT(gbc.pc(), 0x8d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d50), 0xcb);
        EXPECT(gbc.readMem(0x8d51), 0xab);
        // CB AB 03DD
        gbc.setState(0x4dbd, 0x45fb, 0x8980, 0x67da, 0xd918, 0x71a0, 0x1, 0x0);
        gbc.writeMem(0x4dbd, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x45fb);
        EXPECT(gbc.pc(), 0x4dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03DF
        gbc.setState(0x123a, 0x1111, 0x1b10, 0x21b, 0x67c7, 0xde0, 0x1, 0x1);
        gbc.writeMem(0x123a, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1111);
        EXPECT(gbc.pc(), 0x123c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03E1
        gbc.setState(0xe015, 0xfa1c, 0x99e0, 0xc749, 0xd4d0, 0x26cf, 0x0, 0x1);
        gbc.writeMem(0xe015, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfa1c);
        EXPECT(gbc.pc(), 0xe017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe015), 0xcb);
        EXPECT(gbc.readMem(0xe016), 0xab);
        // CB AB 03E2
        gbc.setState(0x8e47, 0x551d, 0x3e00, 0x5681, 0x2367, 0xfd3a, 0x1, 0x0);
        gbc.writeMem(0x8e47, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x551d);
        EXPECT(gbc.pc(), 0x8e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e47), 0xcb);
        EXPECT(gbc.readMem(0x8e48), 0xab);
        // CB AB 03E3
        gbc.setState(0x7691, 0x68a9, 0x2950, 0x9b98, 0xd275, 0x6567, 0x1, 0x1);
        gbc.writeMem(0x7691, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x68a9);
        EXPECT(gbc.pc(), 0x7693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AB 03E4
        gbc.setState(0xa048, 0xb2d0, 0xca00, 0x7117, 0xe6ca, 0x2329, 0x0, 0x0);
        gbc.writeMem(0xa048, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb2d0);
        EXPECT(gbc.pc(), 0xa04a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa048), 0xcb);
        EXPECT(gbc.readMem(0xa049), 0xab);
        // CB AB 03E5
        gbc.setState(0xe886, 0x6f80, 0xadc0, 0x5a23, 0x4189, 0xfaa2, 0x1, 0x0);
        gbc.writeMem(0xe886, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6f80);
        EXPECT(gbc.pc(), 0xe888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe886), 0xcb);
        EXPECT(gbc.readMem(0xe887), 0xab);
        // CB AB 03E6
        gbc.setState(0x1297, 0x7302, 0x6900, 0x2d90, 0xd5e9, 0xcfa0, 0x0, 0x1);
        gbc.writeMem(0x1297, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7302);
        EXPECT(gbc.pc(), 0x1299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AB 03E7
        gbc.setState(0x29a1, 0x65c9, 0xa540, 0x5ebc, 0x9458, 0xc470, 0x0, 0x1);
        gbc.writeMem(0x29a1, { 0xcb, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x65c9);
        EXPECT(gbc.pc(), 0x29a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
