    TEST(gbcemu, opcode_81) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 81 0000
        gbc.setState(0xc64c, 0x9f58, 0x2100, 0x682b, 0x547e, 0x55f8, 0x0, 0x0);
        gbc.writeMem(0xc64c, { 0x81 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9f58, gbc.sp());
        EXPECT(0xc64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc64c));
        // 81 0001
        gbc.setState(0x4997, 0x2357, 0xd980, 0xb53d, 0x59fc, 0xb6e2, 0x1, 0x0);
        gbc.writeMem(0x4997, { 0x81 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2357, gbc.sp());
        EXPECT(0x4998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0002
        gbc.setState(0x23c9, 0xe92e, 0x3070, 0x8efa, 0xaafd, 0x7ff3, 0x1, 0x0);
        gbc.writeMem(0x23c9, { 0x81 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe92e, gbc.sp());
        EXPECT(0x23ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0003
        gbc.setState(0xee74, 0x2f0c, 0x9e30, 0x9cac, 0x92cc, 0x1ba8, 0x1, 0x0);
        gbc.writeMem(0xee74, { 0x81 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2f0c, gbc.sp());
        EXPECT(0xee75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xee74));
        // 81 0004
        gbc.setState(0x850e, 0x6fda, 0x3570, 0xb7c0, 0xdddf, 0x63a0, 0x0, 0x1);
        gbc.writeMem(0x850e, { 0x81 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6fda, gbc.sp());
        EXPECT(0x850f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x850e));
        // 81 0006
        gbc.setState(0x3091, 0xb0f, 0xcba0, 0x7ab6, 0x5c4f, 0x5a56, 0x1, 0x0);
        gbc.writeMem(0x3091, { 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb0f, gbc.sp());
        EXPECT(0x3092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0007
        gbc.setState(0x935, 0x5926, 0xe770, 0x2d53, 0x7b9e, 0x1261, 0x0, 0x0);
        gbc.writeMem(0x935, { 0x81 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5926, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0008
        gbc.setState(0x7353, 0xe01a, 0x4810, 0xfbdd, 0x584c, 0xf44c, 0x0, 0x0);
        gbc.writeMem(0x7353, { 0x81 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe01a, gbc.sp());
        EXPECT(0x7354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0009
        gbc.setState(0xb70b, 0x5cef, 0x54b0, 0x3577, 0x533c, 0x8183, 0x0, 0x0);
        gbc.writeMem(0xb70b, { 0x81 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5cef, gbc.sp());
        EXPECT(0xb70c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb70b));
        // 81 000A
        gbc.setState(0x8bce, 0x3e2e, 0xb8a0, 0xbb33, 0xde6a, 0xfff8, 0x1, 0x1);
        gbc.writeMem(0x8bce, { 0x81 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3e2e, gbc.sp());
        EXPECT(0x8bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8bce));
        // 81 000B
        gbc.setState(0xa8d7, 0x9873, 0xdcd0, 0x25ad, 0xc9d6, 0xc9e5, 0x0, 0x1);
        gbc.writeMem(0xa8d7, { 0x81 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9873, gbc.sp());
        EXPECT(0xa8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa8d7));
        // 81 000C
        gbc.setState(0xeb9f, 0xf852, 0x9820, 0x76e6, 0xb629, 0x9c0b, 0x0, 0x1);
        gbc.writeMem(0xeb9f, { 0x81 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf852, gbc.sp());
        EXPECT(0xeba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xeb9f));
        // 81 000D
        gbc.setState(0xe695, 0x83f5, 0x1f80, 0x6641, 0xccad, 0xba1f, 0x0, 0x1);
        gbc.writeMem(0xe695, { 0x81 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x83f5, gbc.sp());
        EXPECT(0xe696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe695));
        // 81 000E
        gbc.setState(0xd340, 0x5478, 0x9410, 0x8846, 0x9911, 0x1fbb, 0x0, 0x0);
        gbc.writeMem(0xd340, { 0x81 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5478, gbc.sp());
        EXPECT(0xd341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd340));
        // 81 000F
        gbc.setState(0x7da7, 0xfe17, 0xe4a0, 0x9b90, 0x9188, 0x35d5, 0x1, 0x0);
        gbc.writeMem(0x7da7, { 0x81 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfe17, gbc.sp());
        EXPECT(0x7da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0010
        gbc.setState(0x8f17, 0x638c, 0xf620, 0xebbf, 0xda54, 0xd312, 0x1, 0x0);
        gbc.writeMem(0x8f17, { 0x81 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x638c, gbc.sp());
        EXPECT(0x8f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8f17));
        // 81 0011
        gbc.setState(0x40a6, 0x127, 0x3480, 0xbb17, 0x8746, 0xfc5e, 0x1, 0x0);
        gbc.writeMem(0x40a6, { 0x81 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0012
        gbc.setState(0x4959, 0xef91, 0x44b0, 0xb038, 0x74df, 0xe569, 0x1, 0x0);
        gbc.writeMem(0x4959, { 0x81 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xef91, gbc.sp());
        EXPECT(0x495a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0013
        gbc.setState(0xc461, 0xa929, 0xcc50, 0x7858, 0x8dcd, 0xf752, 0x0, 0x0);
        gbc.writeMem(0xc461, { 0x81 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa929, gbc.sp());
        EXPECT(0xc462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc461));
        // 81 0014
        gbc.setState(0xd645, 0x5e1, 0xdf20, 0x8e40, 0xeb92, 0x9373, 0x1, 0x1);
        gbc.writeMem(0xd645, { 0x81 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5e1, gbc.sp());
        EXPECT(0xd646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd645));
        // 81 0015
        gbc.setState(0xdaca, 0x5282, 0xb280, 0x2473, 0xdca2, 0xe2c0, 0x1, 0x0);
        gbc.writeMem(0xdaca, { 0x81 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5282, gbc.sp());
        EXPECT(0xdacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdaca));
        // 81 0016
        gbc.setState(0xa1af, 0xaf91, 0x3b10, 0xf179, 0xe96d, 0x3f80, 0x0, 0x1);
        gbc.writeMem(0xa1af, { 0x81 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaf91, gbc.sp());
        EXPECT(0xa1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa1af));
        // 81 0017
        gbc.setState(0x51a3, 0x72ab, 0x7710, 0x6273, 0x1ee9, 0xbb53, 0x1, 0x0);
        gbc.writeMem(0x51a3, { 0x81 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x72ab, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0019
        gbc.setState(0x3ae8, 0xee53, 0xeb70, 0xcbbf, 0x5371, 0x3ae2, 0x0, 0x0);
        gbc.writeMem(0x3ae8, { 0x81 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xee53, gbc.sp());
        EXPECT(0x3ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 001A
        gbc.setState(0x4b39, 0x3c50, 0x2aa0, 0x3748, 0x59d7, 0x2f67, 0x0, 0x1);
        gbc.writeMem(0x4b39, { 0x81 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3c50, gbc.sp());
        EXPECT(0x4b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 001B
        gbc.setState(0xd4ee, 0xf68f, 0x4b0, 0x45bf, 0xd21e, 0x356c, 0x0, 0x1);
        gbc.writeMem(0xd4ee, { 0x81 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf68f, gbc.sp());
        EXPECT(0xd4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd4ee));
        // 81 001D
        gbc.setState(0x11c0, 0x3592, 0x60c0, 0x1422, 0x7eea, 0xbf1b, 0x1, 0x0);
        gbc.writeMem(0x11c0, { 0x81 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3592, gbc.sp());
        EXPECT(0x11c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 001F
        gbc.setState(0x132d, 0xe044, 0xdc30, 0xb03b, 0x879b, 0xa4f0, 0x0, 0x0);
        gbc.writeMem(0x132d, { 0x81 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe044, gbc.sp());
        EXPECT(0x132e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0020
        gbc.setState(0xc514, 0x3b67, 0xb0e0, 0xe8c6, 0x44d8, 0x68d0, 0x0, 0x1);
        gbc.writeMem(0xc514, { 0x81 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3b67, gbc.sp());
        EXPECT(0xc515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc514));
        // 81 0021
        gbc.setState(0xd8c2, 0x29ae, 0x1ee0, 0x5c12, 0x47da, 0xc5de, 0x0, 0x0);
        gbc.writeMem(0xd8c2, { 0x81 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x29ae, gbc.sp());
        EXPECT(0xd8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd8c2));
        // 81 0022
        gbc.setState(0x4c45, 0x2ac0, 0x86e0, 0x7801, 0x9bb7, 0x66b9, 0x0, 0x0);
        gbc.writeMem(0x4c45, { 0x81 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2ac0, gbc.sp());
        EXPECT(0x4c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0023
        gbc.setState(0x693b, 0xb8a4, 0x34f0, 0x7635, 0xd319, 0x2348, 0x0, 0x0);
        gbc.writeMem(0x693b, { 0x81 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb8a4, gbc.sp());
        EXPECT(0x693c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0024
        gbc.setState(0x63d9, 0x41d4, 0x8150, 0xa3c8, 0x9adb, 0x4fc6, 0x1, 0x1);
        gbc.writeMem(0x63d9, { 0x81 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x41d4, gbc.sp());
        EXPECT(0x63da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0025
        gbc.setState(0x1ab6, 0x293f, 0xf0b0, 0x7013, 0xf964, 0x4ed5, 0x0, 0x0);
        gbc.writeMem(0x1ab6, { 0x81 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x293f, gbc.sp());
        EXPECT(0x1ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0026
        gbc.setState(0xee9f, 0xc291, 0x10a0, 0x3de6, 0xf7aa, 0x26c5, 0x0, 0x0);
        gbc.writeMem(0xee9f, { 0x81 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc291, gbc.sp());
        EXPECT(0xeea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xee9f));
        // 81 0027
        gbc.setState(0xe34a, 0x76e2, 0x86b0, 0x2bc5, 0xb04f, 0x77fa, 0x1, 0x0);
        gbc.writeMem(0xe34a, { 0x81 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x76e2, gbc.sp());
        EXPECT(0xe34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe34a));
        // 81 0028
        gbc.setState(0xcb0c, 0x4b4b, 0xd6f0, 0x15e6, 0x6eb3, 0x64a4, 0x0, 0x0);
        gbc.writeMem(0xcb0c, { 0x81 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4b4b, gbc.sp());
        EXPECT(0xcb0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcb0c));
        // 81 0029
        gbc.setState(0xaae4, 0x6e60, 0xd870, 0x6a74, 0xfc32, 0x6f35, 0x1, 0x0);
        gbc.writeMem(0xaae4, { 0x81 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6e60, gbc.sp());
        EXPECT(0xaae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xaae4));
        // 81 002A
        gbc.setState(0x5056, 0xcb89, 0x2880, 0xd7bc, 0x6189, 0x7459, 0x1, 0x1);
        gbc.writeMem(0x5056, { 0x81 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcb89, gbc.sp());
        EXPECT(0x5057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 002B
        gbc.setState(0x4bd5, 0x1abd, 0x8c10, 0xb4ff, 0xc02e, 0x5f08, 0x0, 0x0);
        gbc.writeMem(0x4bd5, { 0x81 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1abd, gbc.sp());
        EXPECT(0x4bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 002C
        gbc.setState(0xcf16, 0x1bee, 0xa560, 0x6e8e, 0x329b, 0xe693, 0x0, 0x1);
        gbc.writeMem(0xcf16, { 0x81 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1bee, gbc.sp());
        EXPECT(0xcf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcf16));
        // 81 002D
        gbc.setState(0x3b49, 0x968d, 0x44e0, 0x8c8a, 0xc155, 0x483b, 0x1, 0x1);
        gbc.writeMem(0x3b49, { 0x81 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x968d, gbc.sp());
        EXPECT(0x3b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 002E
        gbc.setState(0xbe26, 0xfd67, 0xbe20, 0x8138, 0xb656, 0xe9, 0x1, 0x0);
        gbc.writeMem(0xbe26, { 0x81 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfd67, gbc.sp());
        EXPECT(0xbe27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbe26));
        // 81 002F
        gbc.setState(0xbf30, 0xea6f, 0x4de0, 0xf251, 0x79cc, 0x4c5c, 0x0, 0x0);
        gbc.writeMem(0xbf30, { 0x81 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xea6f, gbc.sp());
        EXPECT(0xbf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbf30));
        // 81 0030
        gbc.setState(0xd746, 0xa8c5, 0x5df0, 0x5723, 0xcc03, 0x6b78, 0x0, 0x0);
        gbc.writeMem(0xd746, { 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa8c5, gbc.sp());
        EXPECT(0xd747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd746));
        // 81 0031
        gbc.setState(0x5501, 0xaf95, 0x4d70, 0x24ba, 0xf402, 0x5d38, 0x0, 0x0);
        gbc.writeMem(0x5501, { 0x81 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaf95, gbc.sp());
        EXPECT(0x5502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0032
        gbc.setState(0xbcf5, 0x3cc9, 0x94d0, 0xa06, 0x401b, 0x9d79, 0x1, 0x1);
        gbc.writeMem(0xbcf5, { 0x81 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3cc9, gbc.sp());
        EXPECT(0xbcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbcf5));
        // 81 0033
        gbc.setState(0xb3e3, 0x88d9, 0x69e0, 0x4971, 0x43b9, 0x8eec, 0x0, 0x1);
        gbc.writeMem(0xb3e3, { 0x81 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x88d9, gbc.sp());
        EXPECT(0xb3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb3e3));
        // 81 0034
        gbc.setState(0x4417, 0xcf93, 0xe5b0, 0x1a53, 0x45c8, 0xe11a, 0x1, 0x0);
        gbc.writeMem(0x4417, { 0x81 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcf93, gbc.sp());
        EXPECT(0x4418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0035
        gbc.setState(0xad45, 0xa0a7, 0x6950, 0xfb9e, 0xfdb2, 0xd2e2, 0x1, 0x1);
        gbc.writeMem(0xad45, { 0x81 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa0a7, gbc.sp());
        EXPECT(0xad46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xad45));
        // 81 0036
        gbc.setState(0x21e8, 0xf962, 0xfb70, 0x8698, 0x94c8, 0x789, 0x1, 0x0);
        gbc.writeMem(0x21e8, { 0x81 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf962, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0037
        gbc.setState(0xcc90, 0x5e4a, 0x290, 0x98a2, 0x93ff, 0x619c, 0x0, 0x0);
        gbc.writeMem(0xcc90, { 0x81 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5e4a, gbc.sp());
        EXPECT(0xcc91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcc90));
        // 81 0038
        gbc.setState(0xb625, 0x38c7, 0xfcc0, 0xbd95, 0xcafb, 0xe7a9, 0x1, 0x0);
        gbc.writeMem(0xb625, { 0x81 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x38c7, gbc.sp());
        EXPECT(0xb626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb625));
        // 81 0039
        gbc.setState(0x23a4, 0x4f34, 0x72f0, 0xd6a6, 0xedca, 0x419e, 0x1, 0x1);
        gbc.writeMem(0x23a4, { 0x81 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4f34, gbc.sp());
        EXPECT(0x23a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 003A
        gbc.setState(0x4244, 0xf8cd, 0x4ce0, 0x5002, 0x65cd, 0x7876, 0x0, 0x0);
        gbc.writeMem(0x4244, { 0x81 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf8cd, gbc.sp());
        EXPECT(0x4245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 003B
        gbc.setState(0xd132, 0xe29e, 0xb600, 0x5784, 0xa820, 0x9bf6, 0x1, 0x0);
        gbc.writeMem(0xd132, { 0x81 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe29e, gbc.sp());
        EXPECT(0xd133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd132));
        // 81 003C
        gbc.setState(0xe376, 0xa803, 0x960, 0x4d55, 0x6237, 0xed94, 0x0, 0x0);
        gbc.writeMem(0xe376, { 0x81 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa803, gbc.sp());
        EXPECT(0xe377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe376));
        // 81 003D
        gbc.setState(0x2cbc, 0x96a8, 0x88d0, 0x987, 0xf589, 0xd1d8, 0x1, 0x0);
        gbc.writeMem(0x2cbc, { 0x81 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x96a8, gbc.sp());
        EXPECT(0x2cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 003E
        gbc.setState(0xcb23, 0xf515, 0xe4c0, 0xf1e3, 0x9c47, 0xaa5f, 0x0, 0x0);
        gbc.writeMem(0xcb23, { 0x81 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf515, gbc.sp());
        EXPECT(0xcb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcb23));
        // 81 003F
        gbc.setState(0x309, 0x955c, 0x8300, 0xe8fe, 0xd690, 0xaf6a, 0x1, 0x1);
        gbc.writeMem(0x309, { 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x955c, gbc.sp());
        EXPECT(0x30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0040
        gbc.setState(0xcbbc, 0x6030, 0xa170, 0x289f, 0xac01, 0x1ce0, 0x0, 0x0);
        gbc.writeMem(0xcbbc, { 0x81 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6030, gbc.sp());
        EXPECT(0xcbbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcbbc));
        // 81 0041
        gbc.setState(0x9272, 0x6870, 0x50e0, 0xc9d0, 0x7591, 0xd1bc, 0x0, 0x0);
        gbc.writeMem(0x9272, { 0x81 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6870, gbc.sp());
        EXPECT(0x9273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9272));
        // 81 0042
        gbc.setState(0x24d5, 0x3e92, 0x4f70, 0x791e, 0x2269, 0xc6c0, 0x1, 0x1);
        gbc.writeMem(0x24d5, { 0x81 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3e92, gbc.sp());
        EXPECT(0x24d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0044
        gbc.setState(0xc55e, 0xfc54, 0xedf0, 0xe38, 0xd474, 0x171b, 0x0, 0x0);
        gbc.writeMem(0xc55e, { 0x81 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfc54, gbc.sp());
        EXPECT(0xc55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc55e));
        // 81 0045
        gbc.setState(0x9166, 0x92b2, 0x9f30, 0xb1c6, 0x67ab, 0xe152, 0x0, 0x0);
        gbc.writeMem(0x9166, { 0x81 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x92b2, gbc.sp());
        EXPECT(0x9167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9166));
        // 81 0046
        gbc.setState(0xbf63, 0xeb4e, 0x31e0, 0x5873, 0x2b99, 0xc9aa, 0x0, 0x1);
        gbc.writeMem(0xbf63, { 0x81 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0xbf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbf63));
        // 81 0047
        gbc.setState(0x9a77, 0xbc6, 0x8d50, 0x78d3, 0x8aae, 0x2de9, 0x1, 0x1);
        gbc.writeMem(0x9a77, { 0x81 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc6, gbc.sp());
        EXPECT(0x9a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9a77));
        // 81 0048
        gbc.setState(0xa9ba, 0x39ba, 0x1e10, 0x204f, 0x3e39, 0xcfe7, 0x0, 0x0);
        gbc.writeMem(0xa9ba, { 0x81 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x39ba, gbc.sp());
        EXPECT(0xa9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa9ba));
        // 81 0049
        gbc.setState(0xce19, 0x74b8, 0x55b0, 0xce8e, 0x2a96, 0x7e10, 0x1, 0x0);
        gbc.writeMem(0xce19, { 0x81 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x74b8, gbc.sp());
        EXPECT(0xce1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xce19));
        // 81 004A
        gbc.setState(0xb69c, 0xe9af, 0x8ad0, 0xca58, 0xefa6, 0x3da5, 0x1, 0x0);
        gbc.writeMem(0xb69c, { 0x81 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe9af, gbc.sp());
        EXPECT(0xb69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb69c));
        // 81 004B
        gbc.setState(0x3d9b, 0x146d, 0xb50, 0xba30, 0xd33a, 0x5406, 0x1, 0x0);
        gbc.writeMem(0x3d9b, { 0x81 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x146d, gbc.sp());
        EXPECT(0x3d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 004C
        gbc.setState(0x595a, 0x16a4, 0x2000, 0x5b4d, 0x1edb, 0x3144, 0x0, 0x0);
        gbc.writeMem(0x595a, { 0x81 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x16a4, gbc.sp());
        EXPECT(0x595b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 004D
        gbc.setState(0x1441, 0x4f43, 0x5ba0, 0xbac5, 0xbc20, 0xe3b5, 0x0, 0x1);
        gbc.writeMem(0x1441, { 0x81 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4f43, gbc.sp());
        EXPECT(0x1442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 004E
        gbc.setState(0xa539, 0x7ccf, 0xdba0, 0xa631, 0xcbd9, 0x1db5, 0x1, 0x1);
        gbc.writeMem(0xa539, { 0x81 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7ccf, gbc.sp());
        EXPECT(0xa53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa539));
        // 81 004F
        gbc.setState(0xac62, 0x56a, 0xf000, 0xad0e, 0x2e25, 0x433, 0x0, 0x0);
        gbc.writeMem(0xac62, { 0x81 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x56a, gbc.sp());
        EXPECT(0xac63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xac62));
        // 81 0050
        gbc.setState(0xcf1e, 0x2a13, 0x6580, 0x6772, 0xf8a2, 0x3240, 0x0, 0x1);
        gbc.writeMem(0xcf1e, { 0x81 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2a13, gbc.sp());
        EXPECT(0xcf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcf1e));
        // 81 0051
        gbc.setState(0x66db, 0x7331, 0x8cc0, 0xe366, 0x88e, 0x1375, 0x0, 0x0);
        gbc.writeMem(0x66db, { 0x81 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7331, gbc.sp());
        EXPECT(0x66dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0052
        gbc.setState(0xaba5, 0x4071, 0x350, 0xa385, 0xc0d3, 0xfa41, 0x1, 0x1);
        gbc.writeMem(0xaba5, { 0x81 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4071, gbc.sp());
        EXPECT(0xaba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xaba5));
        // 81 0053
        gbc.setState(0xe86c, 0xa12e, 0x4c40, 0xb3e, 0x1bd, 0x8fb6, 0x0, 0x0);
        gbc.writeMem(0xe86c, { 0x81 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa12e, gbc.sp());
        EXPECT(0xe86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe86c));
        // 81 0054
        gbc.setState(0xd506, 0xc6d4, 0x3340, 0x44ac, 0x273a, 0xff36, 0x0, 0x0);
        gbc.writeMem(0xd506, { 0x81 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0xd507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd506));
        // 81 0055
        gbc.setState(0x50cc, 0x8710, 0x7590, 0x3301, 0x7622, 0x8821, 0x0, 0x0);
        gbc.writeMem(0x50cc, { 0x81 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8710, gbc.sp());
        EXPECT(0x50cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0056
        gbc.setState(0xb313, 0xf67c, 0x4ab0, 0xffdf, 0x270c, 0xd6e4, 0x0, 0x0);
        gbc.writeMem(0xb313, { 0x81 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf67c, gbc.sp());
        EXPECT(0xb314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb313));
        // 81 0057
        gbc.setState(0x438e, 0xbc49, 0xffd0, 0xcee0, 0x6691, 0x47b9, 0x0, 0x0);
        gbc.writeMem(0x438e, { 0x81 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbc49, gbc.sp());
        EXPECT(0x438f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0058
        gbc.setState(0x37fd, 0x1388, 0x6420, 0x58ff, 0x9589, 0x55d5, 0x1, 0x0);
        gbc.writeMem(0x37fd, { 0x81 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1388, gbc.sp());
        EXPECT(0x37fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0059
        gbc.setState(0x4fd4, 0xd106, 0x6c30, 0x7e34, 0x13ad, 0xf760, 0x0, 0x0);
        gbc.writeMem(0x4fd4, { 0x81 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd106, gbc.sp());
        EXPECT(0x4fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 005A
        gbc.setState(0x73d3, 0x7e69, 0x9260, 0xa4a6, 0x57ed, 0x158, 0x0, 0x1);
        gbc.writeMem(0x73d3, { 0x81 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7e69, gbc.sp());
        EXPECT(0x73d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 005B
        gbc.setState(0xee1c, 0xe51d, 0xdb80, 0x536, 0x2789, 0x2947, 0x0, 0x0);
        gbc.writeMem(0xee1c, { 0x81 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe51d, gbc.sp());
        EXPECT(0xee1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xee1c));
        // 81 005C
        gbc.setState(0xb2ca, 0xd029, 0x22f0, 0x15df, 0xb655, 0xfe67, 0x0, 0x1);
        gbc.writeMem(0xb2ca, { 0x81 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd029, gbc.sp());
        EXPECT(0xb2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb2ca));
        // 81 005D
        gbc.setState(0xa8ca, 0x18de, 0x5260, 0x4bed, 0xf14d, 0xf43d, 0x1, 0x0);
        gbc.writeMem(0xa8ca, { 0x81 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x18de, gbc.sp());
        EXPECT(0xa8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa8ca));
        // 81 005E
        gbc.setState(0x9146, 0x9c1b, 0xd3e0, 0x569e, 0xf069, 0x51ca, 0x1, 0x0);
        gbc.writeMem(0x9146, { 0x81 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9c1b, gbc.sp());
        EXPECT(0x9147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9146));
        // 81 005F
        gbc.setState(0x663f, 0x568, 0xd850, 0x97e7, 0xf7a6, 0xef73, 0x0, 0x1);
        gbc.writeMem(0x663f, { 0x81 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x568, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0060
        gbc.setState(0x9c33, 0x749a, 0xce80, 0xb207, 0x3429, 0xa60c, 0x0, 0x1);
        gbc.writeMem(0x9c33, { 0x81 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x749a, gbc.sp());
        EXPECT(0x9c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9c33));
        // 81 0061
        gbc.setState(0xa5b1, 0xa54e, 0x2d20, 0x26c6, 0xab8f, 0x274, 0x1, 0x1);
        gbc.writeMem(0xa5b1, { 0x81 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa54e, gbc.sp());
        EXPECT(0xa5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa5b1));
        // 81 0062
        gbc.setState(0x5abe, 0x5573, 0x7f90, 0x5f18, 0xe498, 0x2f61, 0x1, 0x1);
        gbc.writeMem(0x5abe, { 0x81 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5573, gbc.sp());
        EXPECT(0x5abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0064
        gbc.setState(0xc61d, 0x6b6d, 0xf2d0, 0x4b1b, 0x4422, 0x7694, 0x0, 0x0);
        gbc.writeMem(0xc61d, { 0x81 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6b6d, gbc.sp());
        EXPECT(0xc61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc61d));
        // 81 0065
        gbc.setState(0x266c, 0xead6, 0x81a0, 0x832a, 0x3356, 0xa258, 0x0, 0x1);
        gbc.writeMem(0x266c, { 0x81 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xead6, gbc.sp());
        EXPECT(0x266d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0066
        gbc.setState(0xa969, 0xdb9b, 0x5c60, 0xa029, 0x6afc, 0x3409, 0x0, 0x0);
        gbc.writeMem(0xa969, { 0x81 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdb9b, gbc.sp());
        EXPECT(0xa96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa969));
        // 81 0067
        gbc.setState(0x1027, 0x3d5a, 0xbd80, 0x5e36, 0xbadb, 0xe0a8, 0x0, 0x0);
        gbc.writeMem(0x1027, { 0x81 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3d5a, gbc.sp());
        EXPECT(0x1028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0068
        gbc.setState(0x2df2, 0xaa08, 0x4f20, 0x936a, 0xda61, 0xcbe3, 0x1, 0x0);
        gbc.writeMem(0x2df2, { 0x81 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xaa08, gbc.sp());
        EXPECT(0x2df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0069
        gbc.setState(0x19e4, 0xf8a0, 0xa3c0, 0x1000, 0x4ff8, 0x89c5, 0x0, 0x1);
        gbc.writeMem(0x19e4, { 0x81 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf8a0, gbc.sp());
        EXPECT(0x19e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 006A
        gbc.setState(0x41ba, 0xe9eb, 0x35c0, 0x4f, 0xdddc, 0x86c5, 0x0, 0x1);
        gbc.writeMem(0x41ba, { 0x81 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe9eb, gbc.sp());
        EXPECT(0x41bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 006B
        gbc.setState(0xd489, 0x9db, 0x2e80, 0x37a1, 0x635f, 0x97fb, 0x1, 0x0);
        gbc.writeMem(0xd489, { 0x81 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9db, gbc.sp());
        EXPECT(0xd48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd489));
        // 81 006C
        gbc.setState(0x39e8, 0x55e7, 0x5f30, 0xf7ca, 0xd075, 0x2c88, 0x1, 0x0);
        gbc.writeMem(0x39e8, { 0x81 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x55e7, gbc.sp());
        EXPECT(0x39e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 006D
        gbc.setState(0xb722, 0xf749, 0xe430, 0x44c6, 0x15e, 0x11c1, 0x0, 0x1);
        gbc.writeMem(0xb722, { 0x81 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf749, gbc.sp());
        EXPECT(0xb723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb722));
        // 81 006E
        gbc.setState(0x9658, 0x32ce, 0x7fc0, 0xc430, 0xb0f8, 0x408c, 0x0, 0x0);
        gbc.writeMem(0x9658, { 0x81 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x32ce, gbc.sp());
        EXPECT(0x9659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9658));
        // 81 006F
        gbc.setState(0xc7b0, 0xde4, 0xc0, 0x9743, 0x9d5e, 0x53bf, 0x0, 0x0);
        gbc.writeMem(0xc7b0, { 0x81 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xde4, gbc.sp());
        EXPECT(0xc7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc7b0));
        // 81 0070
        gbc.setState(0x396c, 0x2cd4, 0x2fa0, 0xac51, 0x15d5, 0x7082, 0x0, 0x1);
        gbc.writeMem(0x396c, { 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2cd4, gbc.sp());
        EXPECT(0x396d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0071
        gbc.setState(0x50c9, 0xe269, 0xde90, 0x4611, 0x5800, 0x1377, 0x0, 0x0);
        gbc.writeMem(0x50c9, { 0x81 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe269, gbc.sp());
        EXPECT(0x50ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0072
        gbc.setState(0xe10c, 0x576b, 0x9100, 0xf85b, 0x2445, 0x845, 0x0, 0x0);
        gbc.writeMem(0xe10c, { 0x81 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x576b, gbc.sp());
        EXPECT(0xe10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe10c));
        // 81 0073
        gbc.setState(0xd654, 0x582, 0x8e60, 0x8168, 0x75dd, 0x29b8, 0x0, 0x1);
        gbc.writeMem(0xd654, { 0x81 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x582, gbc.sp());
        EXPECT(0xd655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd654));
        // 81 0074
        gbc.setState(0xe649, 0x2d1, 0xca70, 0xf294, 0x606c, 0x4cab, 0x0, 0x1);
        gbc.writeMem(0xe649, { 0x81 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2d1, gbc.sp());
        EXPECT(0xe64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe649));
        // 81 0075
        gbc.setState(0xe8cd, 0x4520, 0x2d90, 0x821, 0xdeee, 0x9f49, 0x0, 0x1);
        gbc.writeMem(0xe8cd, { 0x81 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4520, gbc.sp());
        EXPECT(0xe8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe8cd));
        // 81 0076
        gbc.setState(0xee55, 0xad4c, 0x10, 0xfc77, 0x4aa4, 0xb9b3, 0x0, 0x0);
        gbc.writeMem(0xee55, { 0x81 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xad4c, gbc.sp());
        EXPECT(0xee56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xee55));
        // 81 0077
        gbc.setState(0x99bf, 0xaecb, 0x7680, 0xd268, 0xd277, 0xdbab, 0x1, 0x0);
        gbc.writeMem(0x99bf, { 0x81 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaecb, gbc.sp());
        EXPECT(0x99c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x99bf));
        // 81 0079
        gbc.setState(0xde4a, 0x9402, 0x340, 0xeabe, 0x2fe5, 0x7ebb, 0x0, 0x0);
        gbc.writeMem(0xde4a, { 0x81 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9402, gbc.sp());
        EXPECT(0xde4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xde4a));
        // 81 007A
        gbc.setState(0xb8bf, 0x4d7f, 0x49d0, 0x5608, 0x9ac0, 0xd7c, 0x0, 0x0);
        gbc.writeMem(0xb8bf, { 0x81 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4d7f, gbc.sp());
        EXPECT(0xb8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb8bf));
        // 81 007B
        gbc.setState(0xd84e, 0xe767, 0x56b0, 0x1cde, 0x602b, 0xa575, 0x1, 0x0);
        gbc.writeMem(0xd84e, { 0x81 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe767, gbc.sp());
        EXPECT(0xd84f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd84e));
        // 81 007C
        gbc.setState(0x5faa, 0xe9e0, 0x6b40, 0x1e4, 0x3e6b, 0x812c, 0x0, 0x1);
        gbc.writeMem(0x5faa, { 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe9e0, gbc.sp());
        EXPECT(0x5fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 007D
        gbc.setState(0x5da5, 0x3527, 0x94c0, 0xf32d, 0x82b2, 0xdf4d, 0x1, 0x1);
        gbc.writeMem(0x5da5, { 0x81 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3527, gbc.sp());
        EXPECT(0x5da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 007E
        gbc.setState(0xafb9, 0x9cb9, 0x8b70, 0x63d6, 0x1df5, 0x1d80, 0x1, 0x1);
        gbc.writeMem(0xafb9, { 0x81 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9cb9, gbc.sp());
        EXPECT(0xafba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xafb9));
        // 81 007F
        gbc.setState(0x3c3c, 0x5f96, 0x9ff0, 0x921c, 0x70e7, 0x1962, 0x0, 0x1);
        gbc.writeMem(0x3c3c, { 0x81 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5f96, gbc.sp());
        EXPECT(0x3c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0081
        gbc.setState(0x8656, 0x23ae, 0x90b0, 0x8eea, 0x5b79, 0x3a86, 0x0, 0x0);
        gbc.writeMem(0x8656, { 0x81 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x23ae, gbc.sp());
        EXPECT(0x8657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8656));
        // 81 0082
        gbc.setState(0x1b68, 0x8408, 0x15a0, 0x61b6, 0xd913, 0x2874, 0x1, 0x0);
        gbc.writeMem(0x1b68, { 0x81 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8408, gbc.sp());
        EXPECT(0x1b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0083
        gbc.setState(0xb8c8, 0x8a46, 0x9010, 0x1d50, 0x3f65, 0x260b, 0x0, 0x1);
        gbc.writeMem(0xb8c8, { 0x81 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8a46, gbc.sp());
        EXPECT(0xb8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb8c8));
        // 81 0084
        gbc.setState(0x320d, 0xb5c9, 0xe0b0, 0x6d9a, 0x8f70, 0xe012, 0x1, 0x1);
        gbc.writeMem(0x320d, { 0x81 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb5c9, gbc.sp());
        EXPECT(0x320e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0085
        gbc.setState(0x1094, 0x8c37, 0xd950, 0x739e, 0xefbb, 0x4dc5, 0x1, 0x0);
        gbc.writeMem(0x1094, { 0x81 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8c37, gbc.sp());
        EXPECT(0x1095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0086
        gbc.setState(0x8f0c, 0x5daf, 0xb180, 0x2ae6, 0xf49e, 0x463c, 0x0, 0x1);
        gbc.writeMem(0x8f0c, { 0x81 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5daf, gbc.sp());
        EXPECT(0x8f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8f0c));
        // 81 0087
        gbc.setState(0x8e5c, 0xfcb, 0x2ea0, 0xfffd, 0x716d, 0x4a00, 0x0, 0x0);
        gbc.writeMem(0x8e5c, { 0x81 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfcb, gbc.sp());
        EXPECT(0x8e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8e5c));
        // 81 0088
        gbc.setState(0xe2b8, 0x2435, 0x3c70, 0x54fe, 0x8155, 0x161c, 0x1, 0x0);
        gbc.writeMem(0xe2b8, { 0x81 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2435, gbc.sp());
        EXPECT(0xe2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe2b8));
        // 81 0089
        gbc.setState(0x6772, 0xd8c3, 0xcc20, 0x7bb3, 0xdec9, 0x6757, 0x0, 0x0);
        gbc.writeMem(0x6772, { 0x81 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd8c3, gbc.sp());
        EXPECT(0x6773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 008B
        gbc.setState(0xd14e, 0xdcc7, 0xc3d0, 0xfa7f, 0xbac5, 0x6e34, 0x1, 0x1);
        gbc.writeMem(0xd14e, { 0x81 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0xd14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd14e));
        // 81 008C
        gbc.setState(0xee42, 0x943d, 0x7000, 0x9964, 0xb9ec, 0xa666, 0x1, 0x1);
        gbc.writeMem(0xee42, { 0x81 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x943d, gbc.sp());
        EXPECT(0xee43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xee42));
        // 81 008F
        gbc.setState(0x98e, 0xc5d4, 0x3c00, 0xeeda, 0xe81a, 0xaef8, 0x1, 0x1);
        gbc.writeMem(0x98e, { 0x81 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc5d4, gbc.sp());
        EXPECT(0x98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0090
        gbc.setState(0xa023, 0x2019, 0x7100, 0x9f15, 0xfd35, 0x165, 0x1, 0x1);
        gbc.writeMem(0xa023, { 0x81 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2019, gbc.sp());
        EXPECT(0xa024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa023));
        // 81 0091
        gbc.setState(0xecc2, 0x6a1, 0x37e0, 0xe253, 0x111a, 0x3e82, 0x1, 0x1);
        gbc.writeMem(0xecc2, { 0x81 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6a1, gbc.sp());
        EXPECT(0xecc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xecc2));
        // 81 0092
        gbc.setState(0x48dc, 0x19c2, 0xcf70, 0x723a, 0x90f4, 0x3b64, 0x0, 0x0);
        gbc.writeMem(0x48dc, { 0x81 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x19c2, gbc.sp());
        EXPECT(0x48dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0093
        gbc.setState(0xd5ae, 0xc3b3, 0xfac0, 0x33c9, 0xd3f, 0xfb6d, 0x0, 0x1);
        gbc.writeMem(0xd5ae, { 0x81 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc3b3, gbc.sp());
        EXPECT(0xd5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd5ae));
        // 81 0094
        gbc.setState(0x6a0e, 0xf841, 0x7660, 0x55a8, 0x94ff, 0x8eeb, 0x1, 0x0);
        gbc.writeMem(0x6a0e, { 0x81 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf841, gbc.sp());
        EXPECT(0x6a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0095
        gbc.setState(0x9d08, 0x6717, 0x3430, 0xbf7c, 0x607c, 0x72c5, 0x0, 0x1);
        gbc.writeMem(0x9d08, { 0x81 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6717, gbc.sp());
        EXPECT(0x9d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9d08));
        // 81 0096
        gbc.setState(0x90e3, 0xe5db, 0xa050, 0x4654, 0x3473, 0x6a53, 0x1, 0x0);
        gbc.writeMem(0x90e3, { 0x81 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe5db, gbc.sp());
        EXPECT(0x90e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x90e3));
        // 81 0098
        gbc.setState(0xab3b, 0x40a9, 0xce10, 0x88ef, 0x54d, 0x1c1e, 0x0, 0x0);
        gbc.writeMem(0xab3b, { 0x81 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x40a9, gbc.sp());
        EXPECT(0xab3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xab3b));
        // 81 0099
        gbc.setState(0x5fd0, 0x87d1, 0x950, 0x9866, 0x6dc7, 0x5a74, 0x1, 0x0);
        gbc.writeMem(0x5fd0, { 0x81 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x87d1, gbc.sp());
        EXPECT(0x5fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 009A
        gbc.setState(0x2031, 0x3597, 0xce40, 0x1d6d, 0xe331, 0x8a80, 0x0, 0x0);
        gbc.writeMem(0x2031, { 0x81 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3597, gbc.sp());
        EXPECT(0x2032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 009B
        gbc.setState(0xd301, 0x9e33, 0x9e20, 0x32ad, 0xf3c4, 0xe3e2, 0x1, 0x1);
        gbc.writeMem(0xd301, { 0x81 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9e33, gbc.sp());
        EXPECT(0xd302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd301));
        // 81 009C
        gbc.setState(0xb0ce, 0x7838, 0x66d0, 0xf6be, 0xcf4a, 0x8d4, 0x0, 0x1);
        gbc.writeMem(0xb0ce, { 0x81 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7838, gbc.sp());
        EXPECT(0xb0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb0ce));
        // 81 009D
        gbc.setState(0x949a, 0x4a62, 0xac80, 0xc6c9, 0x6ff8, 0xfdb0, 0x1, 0x0);
        gbc.writeMem(0x949a, { 0x81 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4a62, gbc.sp());
        EXPECT(0x949b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x949a));
        // 81 009E
        gbc.setState(0x32c2, 0xf176, 0x22b0, 0x7a5c, 0x1349, 0xff1a, 0x1, 0x0);
        gbc.writeMem(0x32c2, { 0x81 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf176, gbc.sp());
        EXPECT(0x32c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 009F
        gbc.setState(0x62da, 0xc361, 0xc8a0, 0x9f44, 0xec78, 0xee72, 0x0, 0x0);
        gbc.writeMem(0x62da, { 0x81 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc361, gbc.sp());
        EXPECT(0x62db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00A0
        gbc.setState(0xeca2, 0xdd5c, 0x2d50, 0xf4ac, 0xdf4d, 0x4800, 0x0, 0x1);
        gbc.writeMem(0xeca2, { 0x81 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdd5c, gbc.sp());
        EXPECT(0xeca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xeca2));
        // 81 00A1
        gbc.setState(0xbecf, 0x788, 0x2f90, 0x896f, 0x3822, 0xcc4c, 0x0, 0x1);
        gbc.writeMem(0xbecf, { 0x81 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x788, gbc.sp());
        EXPECT(0xbed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbecf));
        // 81 00A2
        gbc.setState(0x54ba, 0xb259, 0x8a50, 0xad0d, 0xf717, 0xeb33, 0x0, 0x0);
        gbc.writeMem(0x54ba, { 0x81 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb259, gbc.sp());
        EXPECT(0x54bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00A3
        gbc.setState(0xc7c7, 0xb08a, 0x4fa0, 0xe2bf, 0x17cd, 0x4a61, 0x1, 0x1);
        gbc.writeMem(0xc7c7, { 0x81 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb08a, gbc.sp());
        EXPECT(0xc7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc7c7));
        // 81 00A4
        gbc.setState(0x3bf6, 0x8624, 0x120, 0x398d, 0xd0dd, 0xfcaa, 0x1, 0x0);
        gbc.writeMem(0x3bf6, { 0x81 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8624, gbc.sp());
        EXPECT(0x3bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00A6
        gbc.setState(0xcb2f, 0x7ea6, 0xd00, 0xc3a, 0xbaba, 0x2f44, 0x1, 0x1);
        gbc.writeMem(0xcb2f, { 0x81 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7ea6, gbc.sp());
        EXPECT(0xcb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcb2f));
        // 81 00A7
        gbc.setState(0xb5ef, 0x62c1, 0x71b0, 0x8eaf, 0xbe8a, 0xb8b5, 0x1, 0x1);
        gbc.writeMem(0xb5ef, { 0x81 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x62c1, gbc.sp());
        EXPECT(0xb5f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb5ef));
        // 81 00A8
        gbc.setState(0x40c3, 0xc605, 0xcba0, 0xa72a, 0xa800, 0xac97, 0x0, 0x1);
        gbc.writeMem(0x40c3, { 0x81 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc605, gbc.sp());
        EXPECT(0x40c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00A9
        gbc.setState(0x6e43, 0x839e, 0xa6c0, 0x7b53, 0x4231, 0x4380, 0x0, 0x0);
        gbc.writeMem(0x6e43, { 0x81 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x839e, gbc.sp());
        EXPECT(0x6e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00AA
        gbc.setState(0xae7f, 0x37b3, 0xa740, 0x293b, 0x7cbd, 0x4ec7, 0x1, 0x0);
        gbc.writeMem(0xae7f, { 0x81 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x37b3, gbc.sp());
        EXPECT(0xae80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xae7f));
        // 81 00AB
        gbc.setState(0xa15d, 0x1b6, 0xa2a0, 0x2593, 0x6b05, 0xa249, 0x0, 0x0);
        gbc.writeMem(0xa15d, { 0x81 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1b6, gbc.sp());
        EXPECT(0xa15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa15d));
        // 81 00AC
        gbc.setState(0x96d9, 0x2306, 0x7a10, 0x47d5, 0x1557, 0x9499, 0x0, 0x0);
        gbc.writeMem(0x96d9, { 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2306, gbc.sp());
        EXPECT(0x96da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x96d9));
        // 81 00AD
        gbc.setState(0x930f, 0xa39b, 0xbad0, 0xece6, 0x2ad2, 0x46b9, 0x0, 0x0);
        gbc.writeMem(0x930f, { 0x81 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa39b, gbc.sp());
        EXPECT(0x9310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x930f));
        // 81 00AE
        gbc.setState(0x7a26, 0xbd37, 0x7b20, 0xe299, 0xd65b, 0xd3b7, 0x1, 0x0);
        gbc.writeMem(0x7a26, { 0x81 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbd37, gbc.sp());
        EXPECT(0x7a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00AF
        gbc.setState(0x3cd3, 0x6f11, 0x9130, 0x8e09, 0x155d, 0x23b2, 0x1, 0x1);
        gbc.writeMem(0x3cd3, { 0x81 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6f11, gbc.sp());
        EXPECT(0x3cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00B0
        gbc.setState(0x8cdf, 0xdb6, 0xf930, 0x11a4, 0xc77e, 0xdd51, 0x0, 0x0);
        gbc.writeMem(0x8cdf, { 0x81 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdb6, gbc.sp());
        EXPECT(0x8ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8cdf));
        // 81 00B1
        gbc.setState(0x44bd, 0x34ac, 0x4970, 0x90f4, 0x55d1, 0x2e90, 0x1, 0x0);
        gbc.writeMem(0x44bd, { 0x81 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x34ac, gbc.sp());
        EXPECT(0x44be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00B2
        gbc.setState(0x7b7, 0x5ab6, 0x7480, 0x4749, 0xdf55, 0xf7d3, 0x0, 0x0);
        gbc.writeMem(0x7b7, { 0x81 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5ab6, gbc.sp());
        EXPECT(0x7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00B3
        gbc.setState(0x663a, 0x7a94, 0x9370, 0x3bd7, 0x84b9, 0x8b1c, 0x0, 0x1);
        gbc.writeMem(0x663a, { 0x81 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7a94, gbc.sp());
        EXPECT(0x663b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00B4
        gbc.setState(0x8310, 0x2ac3, 0xf340, 0x9f98, 0xb8bb, 0xcb29, 0x0, 0x0);
        gbc.writeMem(0x8310, { 0x81 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2ac3, gbc.sp());
        EXPECT(0x8311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8310));
        // 81 00B6
        gbc.setState(0xc4f, 0xc5d0, 0x4fd0, 0x51ab, 0xaa9c, 0xee74, 0x1, 0x0);
        gbc.writeMem(0xc4f, { 0x81 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0xc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00B7
        gbc.setState(0xe6a, 0x4b1e, 0xd310, 0xc4c, 0x2051, 0x29c2, 0x1, 0x0);
        gbc.writeMem(0xe6a, { 0x81 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4b1e, gbc.sp());
        EXPECT(0xe6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00B8
        gbc.setState(0x4470, 0x52cf, 0x5040, 0xdbec, 0x3e6d, 0x3acc, 0x0, 0x0);
        gbc.writeMem(0x4470, { 0x81 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x52cf, gbc.sp());
        EXPECT(0x4471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00B9
        gbc.setState(0xd5fd, 0x361c, 0xbc60, 0x498a, 0x4589, 0xc7fe, 0x0, 0x0);
        gbc.writeMem(0xd5fd, { 0x81 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x361c, gbc.sp());
        EXPECT(0xd5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd5fd));
        // 81 00BA
        gbc.setState(0x3ce9, 0x45f2, 0x28a0, 0xc42f, 0xa1a1, 0x4bea, 0x1, 0x0);
        gbc.writeMem(0x3ce9, { 0x81 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x45f2, gbc.sp());
        EXPECT(0x3cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00BB
        gbc.setState(0x8b8, 0xbe50, 0xfc30, 0x8b06, 0x7b4e, 0x41e1, 0x1, 0x0);
        gbc.writeMem(0x8b8, { 0x81 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbe50, gbc.sp());
        EXPECT(0x8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00BC
        gbc.setState(0x7645, 0x1cf2, 0x1cd0, 0x3b03, 0xbb5, 0x64c9, 0x0, 0x0);
        gbc.writeMem(0x7645, { 0x81 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1cf2, gbc.sp());
        EXPECT(0x7646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00BD
        gbc.setState(0x60cc, 0xe523, 0x4f40, 0x8a79, 0x97a8, 0xe1bd, 0x1, 0x0);
        gbc.writeMem(0x60cc, { 0x81 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe523, gbc.sp());
        EXPECT(0x60cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00BE
        gbc.setState(0xc941, 0xca1c, 0x4b90, 0x6569, 0xf11e, 0xac4d, 0x0, 0x0);
        gbc.writeMem(0xc941, { 0x81 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xca1c, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc941));
        // 81 00BF
        gbc.setState(0x4623, 0xfeb3, 0xde00, 0xc221, 0xcbd2, 0x2f1b, 0x1, 0x0);
        gbc.writeMem(0x4623, { 0x81 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfeb3, gbc.sp());
        EXPECT(0x4624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00C0
        gbc.setState(0x7fec, 0x22b4, 0x4540, 0x82ed, 0xd79e, 0x27ee, 0x1, 0x1);
        gbc.writeMem(0x7fec, { 0x81 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x22b4, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00C1
        gbc.setState(0x6e67, 0xc287, 0x92b0, 0x16c1, 0x9400, 0xc14, 0x0, 0x0);
        gbc.writeMem(0x6e67, { 0x81 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc287, gbc.sp());
        EXPECT(0x6e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00C3
        gbc.setState(0xbcc7, 0xfdf8, 0x6690, 0x481b, 0xfe0d, 0x8a68, 0x0, 0x0);
        gbc.writeMem(0xbcc7, { 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfdf8, gbc.sp());
        EXPECT(0xbcc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbcc7));
        // 81 00C4
        gbc.setState(0x4548, 0x6410, 0x500, 0x326e, 0xb9b6, 0x431b, 0x0, 0x1);
        gbc.writeMem(0x4548, { 0x81 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6410, gbc.sp());
        EXPECT(0x4549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00C5
        gbc.setState(0x6838, 0x902d, 0xc70, 0x150e, 0x6904, 0xa72d, 0x0, 0x0);
        gbc.writeMem(0x6838, { 0x81 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x902d, gbc.sp());
        EXPECT(0x6839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00C6
        gbc.setState(0x1cbb, 0x4442, 0x4820, 0x81ae, 0x3cef, 0xc50d, 0x0, 0x1);
        gbc.writeMem(0x1cbb, { 0x81 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4442, gbc.sp());
        EXPECT(0x1cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00C7
        gbc.setState(0xdcb, 0x27d8, 0x41e0, 0x8216, 0xbf8, 0x299, 0x1, 0x1);
        gbc.writeMem(0xdcb, { 0x81 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x27d8, gbc.sp());
        EXPECT(0xdcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00C8
        gbc.setState(0x5312, 0x13f8, 0x67f0, 0xcc9c, 0x8470, 0xec98, 0x1, 0x0);
        gbc.writeMem(0x5312, { 0x81 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x13f8, gbc.sp());
        EXPECT(0x5313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00C9
        gbc.setState(0x6f3c, 0xe70c, 0xc10, 0x26ee, 0xcf25, 0x91dd, 0x1, 0x0);
        gbc.writeMem(0x6f3c, { 0x81 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe70c, gbc.sp());
        EXPECT(0x6f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00CB
        gbc.setState(0x3a66, 0xbc98, 0xc4a0, 0xc956, 0x8d4b, 0xde43, 0x1, 0x1);
        gbc.writeMem(0x3a66, { 0x81 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbc98, gbc.sp());
        EXPECT(0x3a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00CC
        gbc.setState(0x957b, 0x4982, 0x8e60, 0x9343, 0x2e84, 0x5c1a, 0x1, 0x0);
        gbc.writeMem(0x957b, { 0x81 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4982, gbc.sp());
        EXPECT(0x957c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x957b));
        // 81 00CD
        gbc.setState(0x1ab, 0x894b, 0x2a20, 0xa91a, 0xfde9, 0x1135, 0x1, 0x1);
        gbc.writeMem(0x1ab, { 0x81 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x894b, gbc.sp());
        EXPECT(0x1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00CE
        gbc.setState(0xc25b, 0x3311, 0xd700, 0x84d, 0x5401, 0x6d51, 0x1, 0x0);
        gbc.writeMem(0xc25b, { 0x81 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3311, gbc.sp());
        EXPECT(0xc25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc25b));
        // 81 00CF
        gbc.setState(0x1b1d, 0x94f7, 0x19b0, 0x6565, 0xca79, 0x1723, 0x1, 0x1);
        gbc.writeMem(0x1b1d, { 0x81 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x94f7, gbc.sp());
        EXPECT(0x1b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00D0
        gbc.setState(0x419e, 0xe93a, 0x3f0, 0x315f, 0x53e7, 0x9ee7, 0x0, 0x0);
        gbc.writeMem(0x419e, { 0x81 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe93a, gbc.sp());
        EXPECT(0x419f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00D1
        gbc.setState(0x2fd9, 0x48d9, 0x8c00, 0x1e50, 0x2db9, 0x3e1d, 0x0, 0x0);
        gbc.writeMem(0x2fd9, { 0x81 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x48d9, gbc.sp());
        EXPECT(0x2fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00D2
        gbc.setState(0x3cb5, 0xe2fd, 0xd130, 0x4993, 0x215c, 0x228, 0x1, 0x1);
        gbc.writeMem(0x3cb5, { 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe2fd, gbc.sp());
        EXPECT(0x3cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00D3
        gbc.setState(0x64e7, 0xa758, 0x4360, 0xa9dd, 0x9316, 0xd38c, 0x0, 0x0);
        gbc.writeMem(0x64e7, { 0x81 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa758, gbc.sp());
        EXPECT(0x64e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00D4
        gbc.setState(0xa667, 0x8b35, 0x83b0, 0xab29, 0x2d48, 0xdd79, 0x0, 0x0);
        gbc.writeMem(0xa667, { 0x81 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8b35, gbc.sp());
        EXPECT(0xa668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa667));
        // 81 00D5
        gbc.setState(0x6af4, 0xdade, 0x3e60, 0xf6ed, 0x2a34, 0x640d, 0x1, 0x0);
        gbc.writeMem(0x6af4, { 0x81 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdade, gbc.sp());
        EXPECT(0x6af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00D6
        gbc.setState(0x9fdf, 0x9e00, 0xdf70, 0x1823, 0xe71e, 0x645d, 0x0, 0x1);
        gbc.writeMem(0x9fdf, { 0x81 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9e00, gbc.sp());
        EXPECT(0x9fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9fdf));
        // 81 00D7
        gbc.setState(0x4030, 0x8925, 0x61a0, 0x8a2f, 0x1ab4, 0xb20b, 0x0, 0x0);
        gbc.writeMem(0x4030, { 0x81 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8925, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00D8
        gbc.setState(0x8e26, 0x2d4f, 0x4880, 0xee1, 0x8ab3, 0xb522, 0x1, 0x1);
        gbc.writeMem(0x8e26, { 0x81 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2d4f, gbc.sp());
        EXPECT(0x8e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8e26));
        // 81 00D9
        gbc.setState(0xc7c1, 0xf449, 0x3ec0, 0x4528, 0x803a, 0x5011, 0x1, 0x0);
        gbc.writeMem(0xc7c1, { 0x81 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf449, gbc.sp());
        EXPECT(0xc7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc7c1));
        // 81 00DA
        gbc.setState(0x508c, 0xbb4a, 0xf1a0, 0xe53c, 0xa6f7, 0x1097, 0x1, 0x1);
        gbc.writeMem(0x508c, { 0x81 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbb4a, gbc.sp());
        EXPECT(0x508d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00DB
        gbc.setState(0xb3da, 0xfae4, 0x17a0, 0x920f, 0x2ca1, 0x3c44, 0x1, 0x0);
        gbc.writeMem(0xb3da, { 0x81 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfae4, gbc.sp());
        EXPECT(0xb3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb3da));
        // 81 00DC
        gbc.setState(0x578, 0xb217, 0x7d50, 0x4321, 0x5f0d, 0x73fa, 0x0, 0x1);
        gbc.writeMem(0x578, { 0x81 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb217, gbc.sp());
        EXPECT(0x579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00DD
        gbc.setState(0x506b, 0xef6f, 0xc1b0, 0x3a7, 0x9c2e, 0xf071, 0x1, 0x1);
        gbc.writeMem(0x506b, { 0x81 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xef6f, gbc.sp());
        EXPECT(0x506c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00DE
        gbc.setState(0x8761, 0xa307, 0x2cb0, 0x6ef3, 0x569e, 0x1ecd, 0x1, 0x1);
        gbc.writeMem(0x8761, { 0x81 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa307, gbc.sp());
        EXPECT(0x8762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8761));
        // 81 00DF
        gbc.setState(0xab93, 0x1603, 0x3710, 0xe521, 0x205f, 0x82be, 0x0, 0x0);
        gbc.writeMem(0xab93, { 0x81 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1603, gbc.sp());
        EXPECT(0xab94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xab93));
        // 81 00E1
        gbc.setState(0x1c74, 0x7453, 0xdc50, 0x4b11, 0xf1b0, 0x2ef9, 0x0, 0x1);
        gbc.writeMem(0x1c74, { 0x81 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7453, gbc.sp());
        EXPECT(0x1c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00E2
        gbc.setState(0x63a4, 0xcd8e, 0xd8a0, 0xba80, 0x9669, 0xeba1, 0x0, 0x0);
        gbc.writeMem(0x63a4, { 0x81 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcd8e, gbc.sp());
        EXPECT(0x63a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00E3
        gbc.setState(0x8645, 0x47b3, 0xe7e0, 0xebfb, 0x8fb2, 0x9684, 0x1, 0x1);
        gbc.writeMem(0x8645, { 0x81 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x47b3, gbc.sp());
        EXPECT(0x8646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8645));
        // 81 00E4
        gbc.setState(0x1d58, 0x5e75, 0x6db0, 0xaedb, 0x513e, 0xa8b0, 0x1, 0x1);
        gbc.writeMem(0x1d58, { 0x81 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0x1d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00E5
        gbc.setState(0x6b97, 0x377f, 0x9b0, 0xeaa3, 0xe0aa, 0x25d9, 0x1, 0x1);
        gbc.writeMem(0x6b97, { 0x81 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x377f, gbc.sp());
        EXPECT(0x6b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00E6
        gbc.setState(0x3d5a, 0x7b92, 0xc060, 0x14e1, 0x542c, 0x9e2b, 0x0, 0x0);
        gbc.writeMem(0x3d5a, { 0x81 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7b92, gbc.sp());
        EXPECT(0x3d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00E7
        gbc.setState(0xb4b9, 0x74ad, 0xfab0, 0xa0b2, 0x8bb9, 0xb564, 0x1, 0x0);
        gbc.writeMem(0xb4b9, { 0x81 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x74ad, gbc.sp());
        EXPECT(0xb4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb4b9));
        // 81 00E8
        gbc.setState(0xd9eb, 0x688f, 0xad00, 0xa9d8, 0x41ad, 0xc4be, 0x0, 0x0);
        gbc.writeMem(0xd9eb, { 0x81 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x688f, gbc.sp());
        EXPECT(0xd9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd9eb));
        // 81 00E9
        gbc.setState(0xa8ea, 0xbe11, 0xbba0, 0xed48, 0xba89, 0x27af, 0x1, 0x0);
        gbc.writeMem(0xa8ea, { 0x81 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbe11, gbc.sp());
        EXPECT(0xa8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa8ea));
        // 81 00EA
        gbc.setState(0xbd58, 0xee31, 0xbc50, 0x7012, 0x974e, 0xb94c, 0x1, 0x0);
        gbc.writeMem(0xbd58, { 0x81 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xee31, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbd58));
        // 81 00EB
        gbc.setState(0x3c63, 0x8767, 0x9d40, 0x4f2, 0x18d1, 0x18cb, 0x1, 0x1);
        gbc.writeMem(0x3c63, { 0x81 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8767, gbc.sp());
        EXPECT(0x3c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00EC
        gbc.setState(0xe953, 0xd1fc, 0xded0, 0xbc45, 0x171, 0xd1bc, 0x0, 0x0);
        gbc.writeMem(0xe953, { 0x81 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd1fc, gbc.sp());
        EXPECT(0xe954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe953));
        // 81 00ED
        gbc.setState(0x77c1, 0x60b1, 0xdc20, 0x5428, 0x9dcf, 0xae79, 0x0, 0x1);
        gbc.writeMem(0x77c1, { 0x81 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x60b1, gbc.sp());
        EXPECT(0x77c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00EE
        gbc.setState(0x1f45, 0xfe51, 0xd360, 0x564, 0x572, 0x53c3, 0x0, 0x0);
        gbc.writeMem(0x1f45, { 0x81 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfe51, gbc.sp());
        EXPECT(0x1f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00EF
        gbc.setState(0xefa1, 0xc9e3, 0x6580, 0xc870, 0x4f07, 0x532f, 0x1, 0x0);
        gbc.writeMem(0xefa1, { 0x81 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc9e3, gbc.sp());
        EXPECT(0xefa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xefa1));
        // 81 00F0
        gbc.setState(0xcf47, 0xd24c, 0x39d0, 0x1c60, 0xa957, 0xf641, 0x0, 0x0);
        gbc.writeMem(0xcf47, { 0x81 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd24c, gbc.sp());
        EXPECT(0xcf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcf47));
        // 81 00F1
        gbc.setState(0xed, 0xfff9, 0x2f90, 0x28a5, 0xca40, 0xb3a6, 0x1, 0x1);
        gbc.writeMem(0xed, { 0x81 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfff9, gbc.sp());
        EXPECT(0xee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 00F3
        gbc.setState(0x4fc1, 0xadf3, 0x7cf0, 0xe589, 0x5472, 0x15ec, 0x0, 0x0);
        gbc.writeMem(0x4fc1, { 0x81 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xadf3, gbc.sp());
        EXPECT(0x4fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00F4
        gbc.setState(0x8adb, 0xd5c2, 0x74d0, 0xf19f, 0x8c1a, 0x45a2, 0x0, 0x1);
        gbc.writeMem(0x8adb, { 0x81 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd5c2, gbc.sp());
        EXPECT(0x8adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8adb));
        // 81 00F5
        gbc.setState(0x29d8, 0xeb2d, 0xbc50, 0x97e3, 0x719d, 0x2bab, 0x1, 0x0);
        gbc.writeMem(0x29d8, { 0x81 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xeb2d, gbc.sp());
        EXPECT(0x29d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00F6
        gbc.setState(0x742, 0x157f, 0x8700, 0x62d4, 0xd246, 0xcdc3, 0x1, 0x0);
        gbc.writeMem(0x742, { 0x81 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x157f, gbc.sp());
        EXPECT(0x743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00F7
        gbc.setState(0xee3a, 0xf510, 0xdbf0, 0x1873, 0x8ac2, 0xf22, 0x1, 0x0);
        gbc.writeMem(0xee3a, { 0x81 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf510, gbc.sp());
        EXPECT(0xee3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xee3a));
        // 81 00F8
        gbc.setState(0x1b1a, 0x2938, 0x6af0, 0xb0f2, 0x4ae5, 0x7ce, 0x0, 0x0);
        gbc.writeMem(0x1b1a, { 0x81 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2938, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00F9
        gbc.setState(0xabf1, 0xb61c, 0x4d70, 0xca2, 0x1364, 0xa81d, 0x0, 0x1);
        gbc.writeMem(0xabf1, { 0x81 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb61c, gbc.sp());
        EXPECT(0xabf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xabf1));
        // 81 00FA
        gbc.setState(0xde7e, 0x607a, 0xcba0, 0xfa75, 0x9302, 0xd335, 0x0, 0x1);
        gbc.writeMem(0xde7e, { 0x81 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x607a, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xde7e));
        // 81 00FB
        gbc.setState(0x9c69, 0xbaf, 0xfa10, 0xfb26, 0xf096, 0x276f, 0x0, 0x1);
        gbc.writeMem(0x9c69, { 0x81 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbaf, gbc.sp());
        EXPECT(0x9c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9c69));
        // 81 00FD
        gbc.setState(0x5eb9, 0x21d8, 0xcd00, 0xeecb, 0xfcff, 0x97d4, 0x1, 0x0);
        gbc.writeMem(0x5eb9, { 0x81 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x21d8, gbc.sp());
        EXPECT(0x5eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 00FE
        gbc.setState(0xc962, 0xa92f, 0xf600, 0x33ba, 0x85e5, 0xbd70, 0x1, 0x1);
        gbc.writeMem(0xc962, { 0x81 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa92f, gbc.sp());
        EXPECT(0xc963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc962));
        // 81 00FF
        gbc.setState(0x6ff4, 0x127, 0x9450, 0x5f16, 0x1c66, 0xa9f8, 0x0, 0x0);
        gbc.writeMem(0x6ff4, { 0x81 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0x6ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0100
        gbc.setState(0x8fa6, 0x89e9, 0x6520, 0xf188, 0x127a, 0xd3e3, 0x1, 0x0);
        gbc.writeMem(0x8fa6, { 0x81 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x89e9, gbc.sp());
        EXPECT(0x8fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8fa6));
        // 81 0101
        gbc.setState(0x8ae5, 0x1d26, 0xdcb0, 0xa5f6, 0x5895, 0x314d, 0x0, 0x1);
        gbc.writeMem(0x8ae5, { 0x81 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1d26, gbc.sp());
        EXPECT(0x8ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8ae5));
        // 81 0102
        gbc.setState(0xa5de, 0xd39b, 0xaa50, 0x9683, 0x61d0, 0xfeb3, 0x0, 0x0);
        gbc.writeMem(0xa5de, { 0x81 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd39b, gbc.sp());
        EXPECT(0xa5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa5de));
        // 81 0103
        gbc.setState(0x8d71, 0x491, 0x37b0, 0x270e, 0xd9c0, 0xc4f3, 0x1, 0x1);
        gbc.writeMem(0x8d71, { 0x81 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x491, gbc.sp());
        EXPECT(0x8d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8d71));
        // 81 0104
        gbc.setState(0x82f5, 0xc211, 0x8190, 0xc718, 0x7e00, 0x5ef, 0x0, 0x1);
        gbc.writeMem(0x82f5, { 0x81 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc211, gbc.sp());
        EXPECT(0x82f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x82f5));
        // 81 0105
        gbc.setState(0x9284, 0x3e25, 0xc930, 0x9113, 0xe400, 0xffdc, 0x0, 0x0);
        gbc.writeMem(0x9284, { 0x81 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3e25, gbc.sp());
        EXPECT(0x9285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9284));
        // 81 0106
        gbc.setState(0x411f, 0x7499, 0xbcd0, 0xf1e1, 0xea5d, 0x30d0, 0x0, 0x0);
        gbc.writeMem(0x411f, { 0x81 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7499, gbc.sp());
        EXPECT(0x4120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0107
        gbc.setState(0xaf5f, 0xceaf, 0xf0b0, 0xf9fe, 0x5227, 0x9634, 0x1, 0x1);
        gbc.writeMem(0xaf5f, { 0x81 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xceaf, gbc.sp());
        EXPECT(0xaf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xaf5f));
        // 81 0108
        gbc.setState(0x1be4, 0x2474, 0x25f0, 0xc3db, 0xb2e7, 0xf5a7, 0x1, 0x1);
        gbc.writeMem(0x1be4, { 0x81 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2474, gbc.sp());
        EXPECT(0x1be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0109
        gbc.setState(0xa06f, 0x879c, 0xcd50, 0x3c05, 0x44c5, 0x3246, 0x0, 0x0);
        gbc.writeMem(0xa06f, { 0x81 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x879c, gbc.sp());
        EXPECT(0xa070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa06f));
        // 81 010A
        gbc.setState(0x579c, 0x16fa, 0xe2d0, 0xf371, 0x23d2, 0x6f1c, 0x0, 0x0);
        gbc.writeMem(0x579c, { 0x81 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x16fa, gbc.sp());
        EXPECT(0x579d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 010B
        gbc.setState(0x522e, 0xcf3d, 0x830, 0x171c, 0xdda2, 0x6e1a, 0x1, 0x0);
        gbc.writeMem(0x522e, { 0x81 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcf3d, gbc.sp());
        EXPECT(0x522f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 010C
        gbc.setState(0x4c8e, 0xc452, 0xd540, 0x7ad1, 0xc560, 0x9497, 0x1, 0x1);
        gbc.writeMem(0x4c8e, { 0x81 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc452, gbc.sp());
        EXPECT(0x4c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 010D
        gbc.setState(0x23f5, 0xba, 0x9d90, 0xcee5, 0x721c, 0x1529, 0x0, 0x0);
        gbc.writeMem(0x23f5, { 0x81 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xba, gbc.sp());
        EXPECT(0x23f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 010E
        gbc.setState(0xb1a8, 0x19e3, 0xafa0, 0x2066, 0xd103, 0x5880, 0x0, 0x0);
        gbc.writeMem(0xb1a8, { 0x81 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x19e3, gbc.sp());
        EXPECT(0xb1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb1a8));
        // 81 010F
        gbc.setState(0xd032, 0x37b0, 0x79e0, 0xe1c8, 0xcd0c, 0xc36, 0x1, 0x1);
        gbc.writeMem(0xd032, { 0x81 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x37b0, gbc.sp());
        EXPECT(0xd033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd032));
        // 81 0110
        gbc.setState(0x910a, 0x65e7, 0xc200, 0xf370, 0x9a46, 0xdddf, 0x0, 0x0);
        gbc.writeMem(0x910a, { 0x81 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x65e7, gbc.sp());
        EXPECT(0x910b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x910a));
        // 81 0111
        gbc.setState(0xb2b3, 0xc763, 0x5790, 0xc4bb, 0x8f4c, 0x4c5e, 0x1, 0x1);
        gbc.writeMem(0xb2b3, { 0x81 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc763, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb2b3));
        // 81 0112
        gbc.setState(0xa14b, 0xfddb, 0x3d00, 0xb6fc, 0x967a, 0xfa48, 0x1, 0x1);
        gbc.writeMem(0xa14b, { 0x81 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfddb, gbc.sp());
        EXPECT(0xa14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa14b));
        // 81 0113
        gbc.setState(0x4521, 0xa412, 0x90e0, 0x34c0, 0xa997, 0x7d8a, 0x1, 0x1);
        gbc.writeMem(0x4521, { 0x81 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa412, gbc.sp());
        EXPECT(0x4522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0114
        gbc.setState(0x138c, 0xb005, 0xcf20, 0x5bf0, 0x7a68, 0x3aa7, 0x0, 0x0);
        gbc.writeMem(0x138c, { 0x81 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb005, gbc.sp());
        EXPECT(0x138d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0115
        gbc.setState(0x872, 0x963, 0x3ba0, 0xe299, 0xf29f, 0x373d, 0x1, 0x0);
        gbc.writeMem(0x872, { 0x81 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x963, gbc.sp());
        EXPECT(0x873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0116
        gbc.setState(0x771d, 0xdfe6, 0xe0, 0x2fab, 0x8701, 0x4572, 0x0, 0x1);
        gbc.writeMem(0x771d, { 0x81 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdfe6, gbc.sp());
        EXPECT(0x771e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0117
        gbc.setState(0x172d, 0x2210, 0x310, 0x159e, 0xa94f, 0x38, 0x1, 0x0);
        gbc.writeMem(0x172d, { 0x81 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2210, gbc.sp());
        EXPECT(0x172e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0118
        gbc.setState(0x6c79, 0x859, 0x4b60, 0x34c0, 0x2ca7, 0xc90e, 0x0, 0x1);
        gbc.writeMem(0x6c79, { 0x81 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x859, gbc.sp());
        EXPECT(0x6c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0119
        gbc.setState(0x8bd4, 0x3559, 0xbb40, 0xa631, 0x66b5, 0xc036, 0x1, 0x1);
        gbc.writeMem(0x8bd4, { 0x81 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3559, gbc.sp());
        EXPECT(0x8bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8bd4));
        // 81 011A
        gbc.setState(0x498a, 0x63ad, 0xbf50, 0x639e, 0x1ea9, 0x1911, 0x1, 0x1);
        gbc.writeMem(0x498a, { 0x81 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x63ad, gbc.sp());
        EXPECT(0x498b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 011B
        gbc.setState(0xabbe, 0x45e7, 0x7c50, 0x6933, 0x21c6, 0xfbe4, 0x0, 0x1);
        gbc.writeMem(0xabbe, { 0x81 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x45e7, gbc.sp());
        EXPECT(0xabbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xabbe));
        // 81 011C
        gbc.setState(0x2fc5, 0x378b, 0xff20, 0x8241, 0x6cbe, 0xf57f, 0x1, 0x0);
        gbc.writeMem(0x2fc5, { 0x81 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x378b, gbc.sp());
        EXPECT(0x2fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 011D
        gbc.setState(0x8e2b, 0x9c27, 0x5570, 0xf1a6, 0x40f9, 0xc747, 0x1, 0x1);
        gbc.writeMem(0x8e2b, { 0x81 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9c27, gbc.sp());
        EXPECT(0x8e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8e2b));
        // 81 011E
        gbc.setState(0xb780, 0x8dc7, 0x2900, 0x2baa, 0x54d9, 0x2e1e, 0x1, 0x1);
        gbc.writeMem(0xb780, { 0x81 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb780));
        // 81 011F
        gbc.setState(0xd4a8, 0xb755, 0x510, 0x77fb, 0xb849, 0x6c4d, 0x0, 0x1);
        gbc.writeMem(0xd4a8, { 0x81 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb755, gbc.sp());
        EXPECT(0xd4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd4a8));
        // 81 0120
        gbc.setState(0x97c5, 0xdbda, 0xaa30, 0x3f71, 0x5d45, 0x98cf, 0x1, 0x0);
        gbc.writeMem(0x97c5, { 0x81 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdbda, gbc.sp());
        EXPECT(0x97c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x97c5));
        // 81 0121
        gbc.setState(0x1b7b, 0x2ebd, 0xbc40, 0xa110, 0x9adb, 0xfb30, 0x0, 0x0);
        gbc.writeMem(0x1b7b, { 0x81 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2ebd, gbc.sp());
        EXPECT(0x1b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0122
        gbc.setState(0x1ece, 0x53ee, 0xeb30, 0x2c3c, 0x4e48, 0x647a, 0x0, 0x0);
        gbc.writeMem(0x1ece, { 0x81 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x53ee, gbc.sp());
        EXPECT(0x1ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0123
        gbc.setState(0xd88b, 0x684c, 0xd900, 0xf8c2, 0x1b69, 0x1301, 0x0, 0x0);
        gbc.writeMem(0xd88b, { 0x81 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x684c, gbc.sp());
        EXPECT(0xd88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd88b));
        // 81 0124
        gbc.setState(0xc11b, 0x5692, 0x2620, 0xbaee, 0x9731, 0xf7b1, 0x0, 0x0);
        gbc.writeMem(0xc11b, { 0x81 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5692, gbc.sp());
        EXPECT(0xc11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc11b));
        // 81 0125
        gbc.setState(0x6b52, 0xc67f, 0x6030, 0xd4d8, 0xe87d, 0x1e16, 0x0, 0x0);
        gbc.writeMem(0x6b52, { 0x81 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc67f, gbc.sp());
        EXPECT(0x6b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0126
        gbc.setState(0xce75, 0x1dca, 0x4470, 0x323b, 0xcbd0, 0x77bf, 0x0, 0x1);
        gbc.writeMem(0xce75, { 0x81 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xce75));
        // 81 0127
        gbc.setState(0xe64d, 0x3046, 0x3420, 0x4365, 0xd6be, 0xf8b2, 0x1, 0x1);
        gbc.writeMem(0xe64d, { 0x81 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3046, gbc.sp());
        EXPECT(0xe64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe64d));
        // 81 0128
        gbc.setState(0x2542, 0xc830, 0xee70, 0xb68, 0x18d0, 0x24d3, 0x1, 0x1);
        gbc.writeMem(0x2542, { 0x81 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc830, gbc.sp());
        EXPECT(0x2543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0129
        gbc.setState(0x7a58, 0x95d4, 0x13b0, 0x561d, 0x7842, 0x558b, 0x1, 0x1);
        gbc.writeMem(0x7a58, { 0x81 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x95d4, gbc.sp());
        EXPECT(0x7a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 012A
        gbc.setState(0xdbd4, 0x9e64, 0x4aa0, 0x2b57, 0xee9e, 0x15f1, 0x1, 0x0);
        gbc.writeMem(0xdbd4, { 0x81 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9e64, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdbd4));
        // 81 012B
        gbc.setState(0xb564, 0x9d6, 0xf4e0, 0xff9a, 0xfd0c, 0x9e80, 0x0, 0x1);
        gbc.writeMem(0xb564, { 0x81 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9d6, gbc.sp());
        EXPECT(0xb565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb564));
        // 81 012C
        gbc.setState(0xd4a1, 0x5bbc, 0x22b0, 0x9888, 0x32d7, 0xc41b, 0x1, 0x0);
        gbc.writeMem(0xd4a1, { 0x81 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5bbc, gbc.sp());
        EXPECT(0xd4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd4a1));
        // 81 0130
        gbc.setState(0x3919, 0x962d, 0xd460, 0xc8b0, 0x7068, 0x89e9, 0x1, 0x0);
        gbc.writeMem(0x3919, { 0x81 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x962d, gbc.sp());
        EXPECT(0x391a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0131
        gbc.setState(0xc02f, 0x7e28, 0x2400, 0x3d5c, 0x6149, 0x8034, 0x0, 0x0);
        gbc.writeMem(0xc02f, { 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7e28, gbc.sp());
        EXPECT(0xc030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc02f));
        // 81 0132
        gbc.setState(0x21f2, 0xf0f7, 0x48b0, 0x2bfc, 0xa7a1, 0xee5f, 0x1, 0x1);
        gbc.writeMem(0x21f2, { 0x81 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf0f7, gbc.sp());
        EXPECT(0x21f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0133
        gbc.setState(0x16e3, 0x3fa8, 0xe7f0, 0xc02b, 0x9d66, 0x1774, 0x0, 0x0);
        gbc.writeMem(0x16e3, { 0x81 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3fa8, gbc.sp());
        EXPECT(0x16e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0134
        gbc.setState(0x730d, 0x142b, 0xce40, 0x104d, 0x4063, 0xeb0a, 0x0, 0x1);
        gbc.writeMem(0x730d, { 0x81 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x142b, gbc.sp());
        EXPECT(0x730e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0135
        gbc.setState(0xee32, 0x2480, 0x5090, 0x5236, 0x4582, 0xabc1, 0x0, 0x1);
        gbc.writeMem(0xee32, { 0x81 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2480, gbc.sp());
        EXPECT(0xee33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xee32));
        // 81 0137
        gbc.setState(0x5401, 0xf969, 0x8f70, 0xc737, 0xaa15, 0xfe85, 0x0, 0x1);
        gbc.writeMem(0x5401, { 0x81 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf969, gbc.sp());
        EXPECT(0x5402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0138
        gbc.setState(0x76e0, 0x2f52, 0x2d0, 0xff07, 0x3585, 0xfa8a, 0x0, 0x0);
        gbc.writeMem(0x76e0, { 0x81 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2f52, gbc.sp());
        EXPECT(0x76e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0139
        gbc.setState(0x2414, 0x46fb, 0x12e0, 0xe4d8, 0xb1af, 0x6ebd, 0x1, 0x1);
        gbc.writeMem(0x2414, { 0x81 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x46fb, gbc.sp());
        EXPECT(0x2415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 013A
        gbc.setState(0x7b3, 0xfa48, 0xaef0, 0x1396, 0x4ca8, 0xf16a, 0x1, 0x0);
        gbc.writeMem(0x7b3, { 0x81 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfa48, gbc.sp());
        EXPECT(0x7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 013B
        gbc.setState(0x345e, 0x589f, 0x4af0, 0x99e5, 0xcff9, 0x61f0, 0x0, 0x1);
        gbc.writeMem(0x345e, { 0x81 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x589f, gbc.sp());
        EXPECT(0x345f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 013C
        gbc.setState(0x61cd, 0x8b0b, 0x1170, 0xe643, 0xfb8c, 0x3b35, 0x1, 0x1);
        gbc.writeMem(0x61cd, { 0x81 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8b0b, gbc.sp());
        EXPECT(0x61ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 013D
        gbc.setState(0xade3, 0xe92d, 0x3d10, 0xc05c, 0x457a, 0x2702, 0x1, 0x1);
        gbc.writeMem(0xade3, { 0x81 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe92d, gbc.sp());
        EXPECT(0xade4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xade3));
        // 81 0140
        gbc.setState(0x859f, 0xb549, 0xacb0, 0x6239, 0xe2d0, 0xbc0f, 0x0, 0x0);
        gbc.writeMem(0x859f, { 0x81 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb549, gbc.sp());
        EXPECT(0x85a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x859f));
        // 81 0141
        gbc.setState(0x7e7a, 0x5b94, 0x23f0, 0xf946, 0xa90a, 0xdaef, 0x1, 0x0);
        gbc.writeMem(0x7e7a, { 0x81 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5b94, gbc.sp());
        EXPECT(0x7e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0142
        gbc.setState(0x723e, 0x44e4, 0x1ce0, 0xa470, 0x32cd, 0x7356, 0x0, 0x0);
        gbc.writeMem(0x723e, { 0x81 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x44e4, gbc.sp());
        EXPECT(0x723f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0143
        gbc.setState(0x87a0, 0xae0e, 0xeb0, 0xc340, 0x2107, 0x4b60, 0x1, 0x0);
        gbc.writeMem(0x87a0, { 0x81 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xae0e, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x87a0));
        // 81 0144
        gbc.setState(0xb167, 0x163, 0xd050, 0x8493, 0x6206, 0x36b3, 0x0, 0x1);
        gbc.writeMem(0xb167, { 0x81 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x163, gbc.sp());
        EXPECT(0xb168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb167));
        // 81 0145
        gbc.setState(0x8370, 0x9263, 0x5930, 0xbc18, 0xb8d1, 0xb37a, 0x1, 0x0);
        gbc.writeMem(0x8370, { 0x81 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9263, gbc.sp());
        EXPECT(0x8371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8370));
        // 81 0146
        gbc.setState(0x18fa, 0xa0ae, 0x2d0, 0x63b2, 0xea10, 0x9d5a, 0x0, 0x0);
        gbc.writeMem(0x18fa, { 0x81 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa0ae, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0147
        gbc.setState(0x5089, 0xfb4b, 0x9420, 0xbdbd, 0x8146, 0x4fb1, 0x0, 0x1);
        gbc.writeMem(0x5089, { 0x81 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfb4b, gbc.sp());
        EXPECT(0x508a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0148
        gbc.setState(0x2a81, 0x66c4, 0xf300, 0x4a9a, 0x91cb, 0x1999, 0x1, 0x1);
        gbc.writeMem(0x2a81, { 0x81 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0x2a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0149
        gbc.setState(0x4714, 0x202c, 0x52a0, 0x9996, 0x257e, 0xeae4, 0x0, 0x0);
        gbc.writeMem(0x4714, { 0x81 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x202c, gbc.sp());
        EXPECT(0x4715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 014A
        gbc.setState(0x505f, 0xf5da, 0x71e0, 0xaf1e, 0xe39a, 0x9044, 0x0, 0x0);
        gbc.writeMem(0x505f, { 0x81 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf5da, gbc.sp());
        EXPECT(0x5060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 014B
        gbc.setState(0xcc6d, 0xd965, 0x1960, 0xdaa1, 0xc18, 0x14fc, 0x1, 0x1);
        gbc.writeMem(0xcc6d, { 0x81 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd965, gbc.sp());
        EXPECT(0xcc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcc6d));
        // 81 014C
        gbc.setState(0x1b78, 0xde21, 0x9ee0, 0xca7, 0x7bac, 0x2ea6, 0x0, 0x0);
        gbc.writeMem(0x1b78, { 0x81 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xde21, gbc.sp());
        EXPECT(0x1b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 014D
        gbc.setState(0x8bf, 0x750e, 0x3310, 0x3d12, 0xcae0, 0xf088, 0x1, 0x0);
        gbc.writeMem(0x8bf, { 0x81 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x750e, gbc.sp());
        EXPECT(0x8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 014F
        gbc.setState(0xb680, 0x64e7, 0x34b0, 0xdbcf, 0x56c1, 0xa88, 0x1, 0x0);
        gbc.writeMem(0xb680, { 0x81 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x64e7, gbc.sp());
        EXPECT(0xb681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb680));
        // 81 0150
        gbc.setState(0xb799, 0xeba5, 0xe20, 0xe40a, 0xad76, 0x1b71, 0x1, 0x0);
        gbc.writeMem(0xb799, { 0x81 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeba5, gbc.sp());
        EXPECT(0xb79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb799));
        // 81 0151
        gbc.setState(0xba2e, 0xa792, 0x6860, 0x944a, 0x75b4, 0x586b, 0x1, 0x0);
        gbc.writeMem(0xba2e, { 0x81 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa792, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xba2e));
        // 81 0152
        gbc.setState(0x3031, 0x9031, 0xf840, 0x8ed4, 0x7254, 0x5578, 0x0, 0x1);
        gbc.writeMem(0x3031, { 0x81 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9031, gbc.sp());
        EXPECT(0x3032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0153
        gbc.setState(0x77d, 0xf503, 0x2ba0, 0xbbdb, 0xd5ed, 0x4a17, 0x1, 0x1);
        gbc.writeMem(0x77d, { 0x81 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf503, gbc.sp());
        EXPECT(0x77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0154
        gbc.setState(0x5f5c, 0xe2cf, 0xbd00, 0x49a, 0xf40e, 0xd245, 0x1, 0x0);
        gbc.writeMem(0x5f5c, { 0x81 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe2cf, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0155
        gbc.setState(0x746e, 0x64d2, 0xdf20, 0xe104, 0x7554, 0x8fa8, 0x0, 0x0);
        gbc.writeMem(0x746e, { 0x81 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x64d2, gbc.sp());
        EXPECT(0x746f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0156
        gbc.setState(0x9a4b, 0xaf1c, 0x1a50, 0x63fe, 0x5fb7, 0x6f13, 0x0, 0x0);
        gbc.writeMem(0x9a4b, { 0x81 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaf1c, gbc.sp());
        EXPECT(0x9a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9a4b));
        // 81 0157
        gbc.setState(0xb397, 0xf267, 0x32e0, 0x45bc, 0x96a4, 0x32e9, 0x0, 0x1);
        gbc.writeMem(0xb397, { 0x81 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf267, gbc.sp());
        EXPECT(0xb398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb397));
        // 81 0158
        gbc.setState(0xa630, 0x79dc, 0xc7a0, 0x6676, 0xa99, 0x3171, 0x1, 0x1);
        gbc.writeMem(0xa630, { 0x81 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x79dc, gbc.sp());
        EXPECT(0xa631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa630));
        // 81 0159
        gbc.setState(0xc63e, 0x6c28, 0x5da0, 0x9281, 0xd72f, 0x8f81, 0x1, 0x1);
        gbc.writeMem(0xc63e, { 0x81 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6c28, gbc.sp());
        EXPECT(0xc63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc63e));
        // 81 015A
        gbc.setState(0x25fe, 0xa208, 0xd100, 0x7f90, 0x5afd, 0x574a, 0x1, 0x1);
        gbc.writeMem(0x25fe, { 0x81 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa208, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 015B
        gbc.setState(0xcbcd, 0x1486, 0x5970, 0xc023, 0xf3ca, 0xbe70, 0x1, 0x0);
        gbc.writeMem(0xcbcd, { 0x81 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1486, gbc.sp());
        EXPECT(0xcbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcbcd));
        // 81 015C
        gbc.setState(0x74f9, 0xaa73, 0x23f0, 0x8551, 0x6a45, 0xeb64, 0x0, 0x0);
        gbc.writeMem(0x74f9, { 0x81 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaa73, gbc.sp());
        EXPECT(0x74fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 015D
        gbc.setState(0x2b0c, 0xad17, 0x66b0, 0xd21, 0xf8aa, 0x2fb, 0x1, 0x0);
        gbc.writeMem(0x2b0c, { 0x81 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xad17, gbc.sp());
        EXPECT(0x2b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 015E
        gbc.setState(0xe913, 0x4779, 0xfc70, 0x1616, 0x2d7c, 0xa2ef, 0x1, 0x1);
        gbc.writeMem(0xe913, { 0x81 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4779, gbc.sp());
        EXPECT(0xe914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe913));
        // 81 015F
        gbc.setState(0xcc84, 0x7042, 0x7f30, 0x8579, 0x8fed, 0x13f1, 0x1, 0x1);
        gbc.writeMem(0xcc84, { 0x81 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7042, gbc.sp());
        EXPECT(0xcc85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcc84));
        // 81 0160
        gbc.setState(0x7fd4, 0x528f, 0xb090, 0x34d3, 0x267d, 0xc192, 0x0, 0x0);
        gbc.writeMem(0x7fd4, { 0x81 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x528f, gbc.sp());
        EXPECT(0x7fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0161
        gbc.setState(0x5c6b, 0xd44c, 0x75f0, 0x3f93, 0x9bce, 0xb5aa, 0x0, 0x1);
        gbc.writeMem(0x5c6b, { 0x81 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd44c, gbc.sp());
        EXPECT(0x5c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0162
        gbc.setState(0x90dd, 0x4c06, 0x4b10, 0x2967, 0xeb80, 0x6c0e, 0x1, 0x1);
        gbc.writeMem(0x90dd, { 0x81 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4c06, gbc.sp());
        EXPECT(0x90de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x90dd));
        // 81 0164
        gbc.setState(0xef68, 0xd3bc, 0x1570, 0x9920, 0x360a, 0x8b28, 0x0, 0x0);
        gbc.writeMem(0xef68, { 0x81 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd3bc, gbc.sp());
        EXPECT(0xef69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xef68));
        // 81 0165
        gbc.setState(0xd32, 0xae68, 0x9ab0, 0x9171, 0x5001, 0x1733, 0x1, 0x0);
        gbc.writeMem(0xd32, { 0x81 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xae68, gbc.sp());
        EXPECT(0xd33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0166
        gbc.setState(0x8366, 0xfc61, 0x2f60, 0xde22, 0x872b, 0x6c71, 0x1, 0x0);
        gbc.writeMem(0x8366, { 0x81 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfc61, gbc.sp());
        EXPECT(0x8367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8366));
        // 81 0167
        gbc.setState(0x86c7, 0x3dba, 0xfa0, 0xcac5, 0x6a43, 0x4111, 0x1, 0x1);
        gbc.writeMem(0x86c7, { 0x81 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3dba, gbc.sp());
        EXPECT(0x86c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x86c7));
        // 81 0168
        gbc.setState(0xcb71, 0x9efc, 0x3710, 0xe758, 0xa40e, 0xe2a3, 0x0, 0x1);
        gbc.writeMem(0xcb71, { 0x81 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9efc, gbc.sp());
        EXPECT(0xcb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcb71));
        // 81 0169
        gbc.setState(0x7db8, 0x4c4a, 0xb830, 0xc0bf, 0x9557, 0xee02, 0x0, 0x0);
        gbc.writeMem(0x7db8, { 0x81 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4c4a, gbc.sp());
        EXPECT(0x7db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 016A
        gbc.setState(0xa61, 0x9445, 0x37f0, 0xdd2a, 0x7d06, 0xbbe3, 0x1, 0x1);
        gbc.writeMem(0xa61, { 0x81 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9445, gbc.sp());
        EXPECT(0xa62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 016B
        gbc.setState(0x4915, 0xde98, 0x3da0, 0x68fc, 0x215e, 0x3da0, 0x0, 0x1);
        gbc.writeMem(0x4915, { 0x81 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xde98, gbc.sp());
        EXPECT(0x4916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 016C
        gbc.setState(0x6bc7, 0x84f, 0xfcc0, 0xc775, 0xc7d0, 0x8542, 0x1, 0x1);
        gbc.writeMem(0x6bc7, { 0x81 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x84f, gbc.sp());
        EXPECT(0x6bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 016D
        gbc.setState(0x7dc6, 0x10c4, 0xc6f0, 0x6628, 0x1615, 0xdcdf, 0x1, 0x1);
        gbc.writeMem(0x7dc6, { 0x81 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x10c4, gbc.sp());
        EXPECT(0x7dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 016E
        gbc.setState(0x8f55, 0x61d5, 0x2e30, 0x9a74, 0x3f99, 0x169c, 0x1, 0x0);
        gbc.writeMem(0x8f55, { 0x81 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x61d5, gbc.sp());
        EXPECT(0x8f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8f55));
        // 81 016F
        gbc.setState(0x9e6a, 0xba44, 0x6c70, 0xc3cd, 0xc8a3, 0x115b, 0x1, 0x1);
        gbc.writeMem(0x9e6a, { 0x81 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xba44, gbc.sp());
        EXPECT(0x9e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9e6a));
        // 81 0170
        gbc.setState(0x8b23, 0x82d5, 0xedc0, 0xb52d, 0x309, 0x667d, 0x0, 0x0);
        gbc.writeMem(0x8b23, { 0x81 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x8b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8b23));
        // 81 0171
        gbc.setState(0xe708, 0x62b0, 0x900, 0xa2d, 0xc517, 0xa63e, 0x1, 0x1);
        gbc.writeMem(0xe708, { 0x81 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x62b0, gbc.sp());
        EXPECT(0xe709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe708));
        // 81 0172
        gbc.setState(0xe8c0, 0x8cb9, 0xba0, 0xc392, 0x9bea, 0x5936, 0x1, 0x0);
        gbc.writeMem(0xe8c0, { 0x81 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8cb9, gbc.sp());
        EXPECT(0xe8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe8c0));
        // 81 0173
        gbc.setState(0x7bd, 0xd391, 0x6330, 0xa203, 0xd49d, 0x7c40, 0x0, 0x1);
        gbc.writeMem(0x7bd, { 0x81 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd391, gbc.sp());
        EXPECT(0x7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0174
        gbc.setState(0x4c05, 0x201f, 0xa6d0, 0x4a81, 0x51a1, 0x52e4, 0x0, 0x1);
        gbc.writeMem(0x4c05, { 0x81 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x201f, gbc.sp());
        EXPECT(0x4c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0175
        gbc.setState(0xd874, 0x26ab, 0x9dd0, 0x1328, 0xb424, 0x2a59, 0x1, 0x1);
        gbc.writeMem(0xd874, { 0x81 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x26ab, gbc.sp());
        EXPECT(0xd875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd874));
        // 81 0176
        gbc.setState(0x822f, 0x5efd, 0xba30, 0xdeb3, 0x45d5, 0xba96, 0x1, 0x0);
        gbc.writeMem(0x822f, { 0x81 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5efd, gbc.sp());
        EXPECT(0x8230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x822f));
        // 81 0177
        gbc.setState(0x5a4, 0xc8f0, 0x7dd0, 0x47dc, 0x75b4, 0x1904, 0x1, 0x1);
        gbc.writeMem(0x5a4, { 0x81 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc8f0, gbc.sp());
        EXPECT(0x5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0178
        gbc.setState(0xec13, 0x9c18, 0x18b0, 0x8a79, 0x8f86, 0x1065, 0x1, 0x1);
        gbc.writeMem(0xec13, { 0x81 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9c18, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xec13));
        // 81 0179
        gbc.setState(0x5849, 0xe645, 0x9000, 0x6c72, 0x3bae, 0x8069, 0x1, 0x0);
        gbc.writeMem(0x5849, { 0x81 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe645, gbc.sp());
        EXPECT(0x584a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 017A
        gbc.setState(0xe8c7, 0x97, 0x3350, 0x74b1, 0x6b30, 0x573c, 0x0, 0x0);
        gbc.writeMem(0xe8c7, { 0x81 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x97, gbc.sp());
        EXPECT(0xe8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe8c7));
        // 81 017B
        gbc.setState(0x1e29, 0xb1a0, 0xc80, 0x2872, 0xd2a1, 0x11ba, 0x1, 0x0);
        gbc.writeMem(0x1e29, { 0x81 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb1a0, gbc.sp());
        EXPECT(0x1e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 017C
        gbc.setState(0x5f49, 0x3e22, 0x83d0, 0x53f7, 0xa911, 0x4e44, 0x1, 0x0);
        gbc.writeMem(0x5f49, { 0x81 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3e22, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 017D
        gbc.setState(0x8fe8, 0x43dd, 0x1500, 0x4108, 0x1cbf, 0x2d3a, 0x1, 0x1);
        gbc.writeMem(0x8fe8, { 0x81 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x43dd, gbc.sp());
        EXPECT(0x8fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8fe8));
        // 81 017E
        gbc.setState(0x77e7, 0x11ab, 0x45c0, 0x7d0, 0x9dd9, 0x251, 0x0, 0x0);
        gbc.writeMem(0x77e7, { 0x81 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x11ab, gbc.sp());
        EXPECT(0x77e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 017F
        gbc.setState(0x14c6, 0xbb48, 0x11a0, 0x2a37, 0x4ee6, 0x6bef, 0x1, 0x0);
        gbc.writeMem(0x14c6, { 0x81 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbb48, gbc.sp());
        EXPECT(0x14c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0180
        gbc.setState(0x6b2f, 0x7f66, 0xd30, 0xa112, 0x269e, 0x4b3e, 0x0, 0x0);
        gbc.writeMem(0x6b2f, { 0x81 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7f66, gbc.sp());
        EXPECT(0x6b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0181
        gbc.setState(0xcd5b, 0xaf5f, 0x4ab0, 0xa5d7, 0x9982, 0x7328, 0x0, 0x0);
        gbc.writeMem(0xcd5b, { 0x81 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaf5f, gbc.sp());
        EXPECT(0xcd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcd5b));
        // 81 0182
        gbc.setState(0x4864, 0x7a56, 0x8970, 0x5c5f, 0x15c2, 0x81f6, 0x1, 0x0);
        gbc.writeMem(0x4864, { 0x81 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7a56, gbc.sp());
        EXPECT(0x4865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0183
        gbc.setState(0x44b6, 0x7f56, 0x5890, 0x8e10, 0x4f1d, 0x2c49, 0x0, 0x0);
        gbc.writeMem(0x44b6, { 0x81 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7f56, gbc.sp());
        EXPECT(0x44b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0184
        gbc.setState(0xd831, 0xc113, 0x3350, 0x7a67, 0xcf6c, 0xe54b, 0x1, 0x1);
        gbc.writeMem(0xd831, { 0x81 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc113, gbc.sp());
        EXPECT(0xd832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd831));
        // 81 0185
        gbc.setState(0xd523, 0x9b7d, 0xf4d0, 0x185e, 0x61fb, 0x8fe0, 0x1, 0x0);
        gbc.writeMem(0xd523, { 0x81 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9b7d, gbc.sp());
        EXPECT(0xd524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd523));
        // 81 0186
        gbc.setState(0x3a7c, 0xc513, 0xfe50, 0x8bd3, 0xb88e, 0x4f6b, 0x0, 0x0);
        gbc.writeMem(0x3a7c, { 0x81 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc513, gbc.sp());
        EXPECT(0x3a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0187
        gbc.setState(0x483e, 0x8a95, 0xa1a0, 0x2f83, 0xb791, 0xfbba, 0x0, 0x0);
        gbc.writeMem(0x483e, { 0x81 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8a95, gbc.sp());
        EXPECT(0x483f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0188
        gbc.setState(0xe61b, 0xfae, 0xd5d0, 0x58f1, 0xa677, 0x642a, 0x1, 0x1);
        gbc.writeMem(0xe61b, { 0x81 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfae, gbc.sp());
        EXPECT(0xe61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe61b));
        // 81 0189
        gbc.setState(0x113a, 0x9f77, 0x7740, 0xd743, 0x3a98, 0xde14, 0x1, 0x0);
        gbc.writeMem(0x113a, { 0x81 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9f77, gbc.sp());
        EXPECT(0x113b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 018A
        gbc.setState(0x2e36, 0x4715, 0xf2b0, 0xbe1, 0x1c38, 0xee92, 0x1, 0x1);
        gbc.writeMem(0x2e36, { 0x81 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4715, gbc.sp());
        EXPECT(0x2e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 018B
        gbc.setState(0x1ec5, 0x186, 0xe3b0, 0x3863, 0xcabe, 0x2003, 0x1, 0x0);
        gbc.writeMem(0x1ec5, { 0x81 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x186, gbc.sp());
        EXPECT(0x1ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 018C
        gbc.setState(0x9d03, 0xe4ca, 0xff30, 0xf271, 0xc120, 0xcfaa, 0x0, 0x1);
        gbc.writeMem(0x9d03, { 0x81 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe4ca, gbc.sp());
        EXPECT(0x9d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9d03));
        // 81 018D
        gbc.setState(0xc42, 0xc279, 0x88c0, 0x76ff, 0x7b74, 0x394a, 0x1, 0x1);
        gbc.writeMem(0xc42, { 0x81 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc279, gbc.sp());
        EXPECT(0xc43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 018E
        gbc.setState(0x442f, 0xfe0, 0x5dc0, 0x42e, 0x9720, 0x3b74, 0x0, 0x1);
        gbc.writeMem(0x442f, { 0x81 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfe0, gbc.sp());
        EXPECT(0x4430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 018F
        gbc.setState(0xc3aa, 0x6246, 0x6b0, 0xd6e2, 0xb7fb, 0xd9bf, 0x0, 0x0);
        gbc.writeMem(0xc3aa, { 0x81 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6246, gbc.sp());
        EXPECT(0xc3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc3aa));
        // 81 0190
        gbc.setState(0xd932, 0x4117, 0x520, 0x7d01, 0x14e2, 0xeba4, 0x0, 0x0);
        gbc.writeMem(0xd932, { 0x81 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4117, gbc.sp());
        EXPECT(0xd933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd932));
        // 81 0191
        gbc.setState(0x1b21, 0x97d3, 0x99b0, 0x2d36, 0xaa73, 0xdd6a, 0x1, 0x0);
        gbc.writeMem(0x1b21, { 0x81 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x97d3, gbc.sp());
        EXPECT(0x1b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0192
        gbc.setState(0x37b3, 0x113c, 0xa1d0, 0xaaa, 0x591c, 0x75c6, 0x1, 0x1);
        gbc.writeMem(0x37b3, { 0x81 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x113c, gbc.sp());
        EXPECT(0x37b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0193
        gbc.setState(0x593, 0x6b73, 0x90, 0xfbe1, 0x73a4, 0xfc2b, 0x0, 0x0);
        gbc.writeMem(0x593, { 0x81 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6b73, gbc.sp());
        EXPECT(0x594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0194
        gbc.setState(0x8637, 0xfae, 0x6d00, 0x4ac, 0xd89e, 0xe7d, 0x1, 0x1);
        gbc.writeMem(0x8637, { 0x81 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfae, gbc.sp());
        EXPECT(0x8638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8637));
        // 81 0195
        gbc.setState(0xe5ff, 0xceee, 0x18c0, 0x33a1, 0xeed2, 0xa9cd, 0x0, 0x0);
        gbc.writeMem(0xe5ff, { 0x81 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xceee, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe5ff));
        // 81 0196
        gbc.setState(0x1e9a, 0xcfc1, 0x8080, 0xb3e8, 0xf515, 0x84cb, 0x0, 0x1);
        gbc.writeMem(0x1e9a, { 0x81 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcfc1, gbc.sp());
        EXPECT(0x1e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0197
        gbc.setState(0x5a08, 0x76f4, 0x1970, 0x84cb, 0xe7, 0xe8b0, 0x1, 0x1);
        gbc.writeMem(0x5a08, { 0x81 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x76f4, gbc.sp());
        EXPECT(0x5a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0198
        gbc.setState(0xd38, 0x677c, 0xf5f0, 0xd954, 0x6491, 0x70aa, 0x0, 0x0);
        gbc.writeMem(0xd38, { 0x81 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x677c, gbc.sp());
        EXPECT(0xd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0199
        gbc.setState(0x4c8c, 0x7722, 0x5320, 0x6b6d, 0xb933, 0x1941, 0x1, 0x0);
        gbc.writeMem(0x4c8c, { 0x81 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7722, gbc.sp());
        EXPECT(0x4c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 019A
        gbc.setState(0xca5, 0x7015, 0x8410, 0x661e, 0xf96, 0x5499, 0x1, 0x0);
        gbc.writeMem(0xca5, { 0x81 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7015, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 019B
        gbc.setState(0x7b7, 0x4eb4, 0x6cb0, 0xf330, 0xb3fc, 0xda8c, 0x0, 0x1);
        gbc.writeMem(0x7b7, { 0x81 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4eb4, gbc.sp());
        EXPECT(0x7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 019C
        gbc.setState(0x1236, 0xc4, 0x4740, 0xa1f, 0x5006, 0x8986, 0x1, 0x0);
        gbc.writeMem(0x1236, { 0x81 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc4, gbc.sp());
        EXPECT(0x1237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 019D
        gbc.setState(0x3f65, 0x27cb, 0x7050, 0xcd0d, 0x7dbf, 0x5429, 0x1, 0x0);
        gbc.writeMem(0x3f65, { 0x81 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x27cb, gbc.sp());
        EXPECT(0x3f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 019E
        gbc.setState(0xd907, 0xdf7a, 0xfa0, 0xed1d, 0xc79d, 0x7648, 0x0, 0x0);
        gbc.writeMem(0xd907, { 0x81 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdf7a, gbc.sp());
        EXPECT(0xd908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd907));
        // 81 019F
        gbc.setState(0xbd2a, 0xaca8, 0xec20, 0xa73f, 0xde73, 0xe1c9, 0x0, 0x0);
        gbc.writeMem(0xbd2a, { 0x81 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaca8, gbc.sp());
        EXPECT(0xbd2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbd2a));
        // 81 01A0
        gbc.setState(0xb9a4, 0x65be, 0xbcd0, 0x273b, 0xfb4c, 0x47d9, 0x1, 0x1);
        gbc.writeMem(0xb9a4, { 0x81 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x65be, gbc.sp());
        EXPECT(0xb9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb9a4));
        // 81 01A2
        gbc.setState(0x9a6b, 0xc83, 0xca40, 0xedb4, 0xdeb8, 0xcdd, 0x0, 0x1);
        gbc.writeMem(0x9a6b, { 0x81 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc83, gbc.sp());
        EXPECT(0x9a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9a6b));
        // 81 01A3
        gbc.setState(0x2b42, 0xd5fb, 0xeba0, 0x3343, 0x7ef, 0x6d19, 0x0, 0x1);
        gbc.writeMem(0x2b42, { 0x81 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd5fb, gbc.sp());
        EXPECT(0x2b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01A4
        gbc.setState(0xc787, 0x75ea, 0x910, 0x7c46, 0xf0f0, 0x5a2e, 0x1, 0x0);
        gbc.writeMem(0xc787, { 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0xc788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc787));
        // 81 01A5
        gbc.setState(0xd866, 0xc5e3, 0xde50, 0x8ba5, 0xb430, 0x7bbb, 0x0, 0x1);
        gbc.writeMem(0xd866, { 0x81 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc5e3, gbc.sp());
        EXPECT(0xd867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd866));
        // 81 01A6
        gbc.setState(0x939f, 0x6429, 0xcc00, 0x874, 0xbd42, 0xf6a, 0x1, 0x1);
        gbc.writeMem(0x939f, { 0x81 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6429, gbc.sp());
        EXPECT(0x93a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x939f));
        // 81 01A7
        gbc.setState(0xdd96, 0x5fd1, 0x5e20, 0x27d8, 0xce5b, 0xd6dc, 0x0, 0x0);
        gbc.writeMem(0xdd96, { 0x81 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5fd1, gbc.sp());
        EXPECT(0xdd97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdd96));
        // 81 01A8
        gbc.setState(0xc3e6, 0x6b40, 0xdcb0, 0x8bf5, 0x1ec1, 0x2d4, 0x1, 0x1);
        gbc.writeMem(0xc3e6, { 0x81 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6b40, gbc.sp());
        EXPECT(0xc3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc3e6));
        // 81 01A9
        gbc.setState(0xb342, 0x1096, 0xf210, 0x5b7a, 0x52ce, 0x6a6, 0x1, 0x1);
        gbc.writeMem(0xb342, { 0x81 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1096, gbc.sp());
        EXPECT(0xb343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb342));
        // 81 01AA
        gbc.setState(0xb4d9, 0x736d, 0x1a70, 0x1366, 0x1661, 0xb6be, 0x1, 0x0);
        gbc.writeMem(0xb4d9, { 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x736d, gbc.sp());
        EXPECT(0xb4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb4d9));
        // 81 01AC
        gbc.setState(0xef43, 0x368d, 0x8a60, 0x666a, 0xf085, 0x5827, 0x1, 0x1);
        gbc.writeMem(0xef43, { 0x81 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x368d, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xef43));
        // 81 01AD
        gbc.setState(0xdc32, 0x595, 0x7c50, 0x3f7d, 0x615f, 0xb6b8, 0x1, 0x0);
        gbc.writeMem(0xdc32, { 0x81 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x595, gbc.sp());
        EXPECT(0xdc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdc32));
        // 81 01AE
        gbc.setState(0xde89, 0x9c83, 0xd2c0, 0x755d, 0x569e, 0x5553, 0x1, 0x0);
        gbc.writeMem(0xde89, { 0x81 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9c83, gbc.sp());
        EXPECT(0xde8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xde89));
        // 81 01AF
        gbc.setState(0xeb2a, 0xac38, 0x1290, 0xc4cc, 0xf397, 0x73bb, 0x1, 0x1);
        gbc.writeMem(0xeb2a, { 0x81 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xac38, gbc.sp());
        EXPECT(0xeb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xeb2a));
        // 81 01B0
        gbc.setState(0x85b2, 0xd1fd, 0x2d30, 0x6928, 0xbde1, 0x9a63, 0x0, 0x0);
        gbc.writeMem(0x85b2, { 0x81 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd1fd, gbc.sp());
        EXPECT(0x85b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x85b2));
        // 81 01B1
        gbc.setState(0xecca, 0xd9ee, 0x1930, 0x5157, 0xf609, 0x8e56, 0x1, 0x0);
        gbc.writeMem(0xecca, { 0x81 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd9ee, gbc.sp());
        EXPECT(0xeccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xecca));
        // 81 01B2
        gbc.setState(0xd1aa, 0x633a, 0xb280, 0xb4f6, 0x6865, 0x71cb, 0x0, 0x0);
        gbc.writeMem(0xd1aa, { 0x81 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x633a, gbc.sp());
        EXPECT(0xd1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd1aa));
        // 81 01B3
        gbc.setState(0x5316, 0xed48, 0x7040, 0x40be, 0xb8a2, 0x659, 0x1, 0x1);
        gbc.writeMem(0x5316, { 0x81 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xed48, gbc.sp());
        EXPECT(0x5317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01B4
        gbc.setState(0xd70a, 0x5dc7, 0x3c40, 0x928, 0x6069, 0xd1f3, 0x0, 0x1);
        gbc.writeMem(0xd70a, { 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd70a));
        // 81 01B5
        gbc.setState(0x5620, 0xdba2, 0xd7f0, 0x398, 0x9b38, 0x2844, 0x1, 0x1);
        gbc.writeMem(0x5620, { 0x81 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdba2, gbc.sp());
        EXPECT(0x5621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01B6
        gbc.setState(0xbae2, 0x408f, 0xbd0, 0x1765, 0xbb09, 0xc0b2, 0x1, 0x0);
        gbc.writeMem(0xbae2, { 0x81 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x408f, gbc.sp());
        EXPECT(0xbae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbae2));
        // 81 01B8
        gbc.setState(0x11d8, 0x4baf, 0x70, 0xd996, 0xdaf6, 0x17dd, 0x1, 0x1);
        gbc.writeMem(0x11d8, { 0x81 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0x11d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01B9
        gbc.setState(0x1d9d, 0xee5a, 0x6440, 0x8425, 0x5a0e, 0x13, 0x1, 0x0);
        gbc.writeMem(0x1d9d, { 0x81 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xee5a, gbc.sp());
        EXPECT(0x1d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01BA
        gbc.setState(0x27e2, 0xa774, 0x4300, 0x7691, 0x4e2a, 0x1872, 0x1, 0x0);
        gbc.writeMem(0x27e2, { 0x81 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa774, gbc.sp());
        EXPECT(0x27e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01BD
        gbc.setState(0x3c0a, 0xa5f1, 0xb6e0, 0xcb86, 0xc017, 0x479b, 0x0, 0x1);
        gbc.writeMem(0x3c0a, { 0x81 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa5f1, gbc.sp());
        EXPECT(0x3c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01BE
        gbc.setState(0x8b23, 0x2091, 0x1510, 0x693c, 0xe903, 0x907, 0x0, 0x0);
        gbc.writeMem(0x8b23, { 0x81 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2091, gbc.sp());
        EXPECT(0x8b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8b23));
        // 81 01BF
        gbc.setState(0x7928, 0xe22c, 0x1860, 0x5f04, 0x1d48, 0xc43b, 0x0, 0x1);
        gbc.writeMem(0x7928, { 0x81 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe22c, gbc.sp());
        EXPECT(0x7929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01C0
        gbc.setState(0x5efc, 0x2f7b, 0xf40, 0x37cb, 0x1a05, 0x4ab3, 0x1, 0x1);
        gbc.writeMem(0x5efc, { 0x81 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2f7b, gbc.sp());
        EXPECT(0x5efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01C1
        gbc.setState(0x83ee, 0xde72, 0xa3f0, 0xaa85, 0xb226, 0x5178, 0x0, 0x1);
        gbc.writeMem(0x83ee, { 0x81 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xde72, gbc.sp());
        EXPECT(0x83ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x83ee));
        // 81 01C2
        gbc.setState(0xb7f8, 0x8b58, 0xded0, 0x7680, 0x61ad, 0xe5d9, 0x0, 0x0);
        gbc.writeMem(0xb7f8, { 0x81 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8b58, gbc.sp());
        EXPECT(0xb7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb7f8));
        // 81 01C3
        gbc.setState(0x4f71, 0xcb06, 0x6580, 0xe2fb, 0x2b9b, 0x3a, 0x1, 0x1);
        gbc.writeMem(0x4f71, { 0x81 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcb06, gbc.sp());
        EXPECT(0x4f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01C4
        gbc.setState(0x1b98, 0xe59c, 0xaaa0, 0xc7a2, 0x4d7b, 0x433c, 0x0, 0x1);
        gbc.writeMem(0x1b98, { 0x81 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe59c, gbc.sp());
        EXPECT(0x1b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01C5
        gbc.setState(0x356d, 0xcda1, 0xf230, 0x93d2, 0xb7a7, 0xfc60, 0x0, 0x0);
        gbc.writeMem(0x356d, { 0x81 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcda1, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01C6
        gbc.setState(0xdf4b, 0xd30, 0x9210, 0xdb3b, 0x5e27, 0xf041, 0x0, 0x1);
        gbc.writeMem(0xdf4b, { 0x81 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd30, gbc.sp());
        EXPECT(0xdf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdf4b));
        // 81 01C7
        gbc.setState(0xa130, 0xcb95, 0xd470, 0x8fc2, 0x700a, 0xc953, 0x0, 0x1);
        gbc.writeMem(0xa130, { 0x81 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcb95, gbc.sp());
        EXPECT(0xa131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa130));
        // 81 01C8
        gbc.setState(0x7c67, 0x7e0c, 0xb480, 0x23e2, 0xf9e7, 0x1366, 0x1, 0x1);
        gbc.writeMem(0x7c67, { 0x81 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7e0c, gbc.sp());
        EXPECT(0x7c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01C9
        gbc.setState(0xd025, 0xcec2, 0x8590, 0x16c9, 0xf79d, 0x3438, 0x1, 0x1);
        gbc.writeMem(0xd025, { 0x81 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcec2, gbc.sp());
        EXPECT(0xd026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd025));
        // 81 01CA
        gbc.setState(0x662d, 0x4641, 0x20f0, 0x2eee, 0x95c4, 0xc6cc, 0x0, 0x1);
        gbc.writeMem(0x662d, { 0x81 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4641, gbc.sp());
        EXPECT(0x662e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01CB
        gbc.setState(0xb626, 0x1115, 0x2850, 0xc157, 0x222e, 0xff33, 0x1, 0x1);
        gbc.writeMem(0xb626, { 0x81 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0xb627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb626));
        // 81 01CD
        gbc.setState(0x7744, 0x36ac, 0xf3e0, 0x7fb4, 0xdc47, 0x5deb, 0x1, 0x1);
        gbc.writeMem(0x7744, { 0x81 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x36ac, gbc.sp());
        EXPECT(0x7745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01CE
        gbc.setState(0x7ae, 0xdd58, 0xb6e0, 0xcf4a, 0xad96, 0xbf70, 0x1, 0x1);
        gbc.writeMem(0x7ae, { 0x81 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdd58, gbc.sp());
        EXPECT(0x7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01CF
        gbc.setState(0xedfe, 0xe7d7, 0xb2b0, 0x819f, 0x54b9, 0x3dcf, 0x1, 0x1);
        gbc.writeMem(0xedfe, { 0x81 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe7d7, gbc.sp());
        EXPECT(0xedff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xedfe));
        // 81 01D0
        gbc.setState(0x6143, 0x5a19, 0x3950, 0xe606, 0x620b, 0x9740, 0x0, 0x0);
        gbc.writeMem(0x6143, { 0x81 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5a19, gbc.sp());
        EXPECT(0x6144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01D1
        gbc.setState(0xefa0, 0x5a07, 0x9630, 0x41da, 0xaee5, 0x5bfd, 0x0, 0x1);
        gbc.writeMem(0xefa0, { 0x81 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5a07, gbc.sp());
        EXPECT(0xefa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xefa0));
        // 81 01D2
        gbc.setState(0x93e0, 0xeaed, 0x7d0, 0x3588, 0xdca, 0x9de9, 0x1, 0x1);
        gbc.writeMem(0x93e0, { 0x81 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xeaed, gbc.sp());
        EXPECT(0x93e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x93e0));
        // 81 01D3
        gbc.setState(0x5e2a, 0xb03f, 0x0, 0xbc25, 0xf7d2, 0x2548, 0x0, 0x1);
        gbc.writeMem(0x5e2a, { 0x81 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb03f, gbc.sp());
        EXPECT(0x5e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01D4
        gbc.setState(0x6067, 0xee57, 0x7d10, 0x9e4b, 0xa467, 0x5966, 0x0, 0x1);
        gbc.writeMem(0x6067, { 0x81 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xee57, gbc.sp());
        EXPECT(0x6068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01D5
        gbc.setState(0x6ef4, 0xa454, 0x7690, 0xc877, 0x11c7, 0xe59d, 0x1, 0x1);
        gbc.writeMem(0x6ef4, { 0x81 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa454, gbc.sp());
        EXPECT(0x6ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01D6
        gbc.setState(0x1faf, 0xb70d, 0x76c0, 0x6404, 0xda14, 0xd77d, 0x0, 0x1);
        gbc.writeMem(0x1faf, { 0x81 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0x1fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01D8
        gbc.setState(0x7293, 0xc3e3, 0xefa0, 0x1c0d, 0xce16, 0x7f27, 0x1, 0x0);
        gbc.writeMem(0x7293, { 0x81 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc3e3, gbc.sp());
        EXPECT(0x7294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01D9
        gbc.setState(0xdc6e, 0xb81, 0x83f0, 0xfb27, 0x81, 0x290f, 0x0, 0x0);
        gbc.writeMem(0xdc6e, { 0x81 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb81, gbc.sp());
        EXPECT(0xdc6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdc6e));
        // 81 01DA
        gbc.setState(0x84b2, 0xc367, 0x8270, 0x55d8, 0x1f00, 0xd215, 0x0, 0x1);
        gbc.writeMem(0x84b2, { 0x81 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc367, gbc.sp());
        EXPECT(0x84b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x84b2));
        // 81 01DB
        gbc.setState(0xebcd, 0x67ca, 0xa380, 0x3cf3, 0x6093, 0xf33, 0x0, 0x0);
        gbc.writeMem(0xebcd, { 0x81 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x67ca, gbc.sp());
        EXPECT(0xebce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xebcd));
        // 81 01DC
        gbc.setState(0xd4fe, 0x5ba5, 0x310, 0x4a39, 0xdee7, 0xc79, 0x0, 0x0);
        gbc.writeMem(0xd4fe, { 0x81 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5ba5, gbc.sp());
        EXPECT(0xd4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd4fe));
        // 81 01DD
        gbc.setState(0x5b20, 0xa37a, 0x95a0, 0xaa2, 0x53, 0xbc2d, 0x0, 0x1);
        gbc.writeMem(0x5b20, { 0x81 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa37a, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01DE
        gbc.setState(0x8021, 0x143f, 0x8500, 0x25, 0xfb33, 0x99f0, 0x1, 0x1);
        gbc.writeMem(0x8021, { 0x81 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x143f, gbc.sp());
        EXPECT(0x8022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8021));
        // 81 01DF
        gbc.setState(0x5432, 0xae83, 0xbe30, 0x3ecb, 0x51ae, 0x4448, 0x0, 0x1);
        gbc.writeMem(0x5432, { 0x81 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xae83, gbc.sp());
        EXPECT(0x5433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01E0
        gbc.setState(0x5324, 0x6d7b, 0x1070, 0xd1be, 0xcdba, 0x373a, 0x0, 0x0);
        gbc.writeMem(0x5324, { 0x81 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6d7b, gbc.sp());
        EXPECT(0x5325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01E1
        gbc.setState(0x5879, 0xc1e8, 0x8ef0, 0xb07c, 0xaf10, 0xfcfb, 0x1, 0x0);
        gbc.writeMem(0x5879, { 0x81 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc1e8, gbc.sp());
        EXPECT(0x587a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01E2
        gbc.setState(0x55f, 0xf503, 0xe900, 0x1b41, 0x9966, 0x4d49, 0x1, 0x1);
        gbc.writeMem(0x55f, { 0x81 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf503, gbc.sp());
        EXPECT(0x560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01E3
        gbc.setState(0xbb2f, 0xdd3, 0x19d0, 0x7e4b, 0x1d06, 0x1de, 0x1, 0x1);
        gbc.writeMem(0xbb2f, { 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdd3, gbc.sp());
        EXPECT(0xbb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbb2f));
        // 81 01E4
        gbc.setState(0x1ed, 0x8ae6, 0x2d20, 0xb116, 0x123c, 0xdc2e, 0x1, 0x1);
        gbc.writeMem(0x1ed, { 0x81 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8ae6, gbc.sp());
        EXPECT(0x1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01E5
        gbc.setState(0xa778, 0x1d3d, 0x5e20, 0xc287, 0x7361, 0x78b6, 0x1, 0x0);
        gbc.writeMem(0xa778, { 0x81 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1d3d, gbc.sp());
        EXPECT(0xa779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa778));
        // 81 01E6
        gbc.setState(0xb217, 0xaa26, 0xe1d0, 0xde00, 0xd99, 0xacb7, 0x0, 0x1);
        gbc.writeMem(0xb217, { 0x81 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0xb218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb217));
        // 81 01E7
        gbc.setState(0x8db0, 0xac05, 0xbdf0, 0x4bf0, 0x1b4c, 0x6cf1, 0x0, 0x1);
        gbc.writeMem(0x8db0, { 0x81 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xac05, gbc.sp());
        EXPECT(0x8db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8db0));
        // 81 01E8
        gbc.setState(0x9b71, 0x775e, 0x8a50, 0xe761, 0x9e99, 0xe536, 0x1, 0x1);
        gbc.writeMem(0x9b71, { 0x81 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x775e, gbc.sp());
        EXPECT(0x9b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9b71));
        // 81 01E9
        gbc.setState(0x8ef1, 0x9a20, 0xe790, 0x14b0, 0xd6cb, 0xc2a0, 0x1, 0x1);
        gbc.writeMem(0x8ef1, { 0x81 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9a20, gbc.sp());
        EXPECT(0x8ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8ef1));
        // 81 01EA
        gbc.setState(0xa628, 0x5cf6, 0xa9a0, 0xb9d2, 0xe188, 0x1edb, 0x1, 0x0);
        gbc.writeMem(0xa628, { 0x81 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5cf6, gbc.sp());
        EXPECT(0xa629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa628));
        // 81 01EB
        gbc.setState(0x871f, 0xfa41, 0xc610, 0xff33, 0xba84, 0x9aa6, 0x0, 0x1);
        gbc.writeMem(0x871f, { 0x81 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfa41, gbc.sp());
        EXPECT(0x8720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x871f));
        // 81 01EC
        gbc.setState(0x6a14, 0x6f80, 0x9fa0, 0xc1dc, 0xc45, 0x37ac, 0x1, 0x0);
        gbc.writeMem(0x6a14, { 0x81 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6f80, gbc.sp());
        EXPECT(0x6a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01ED
        gbc.setState(0x78d9, 0xd9c2, 0xf180, 0x8824, 0x96a2, 0x7922, 0x1, 0x0);
        gbc.writeMem(0x78d9, { 0x81 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd9c2, gbc.sp());
        EXPECT(0x78da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01EE
        gbc.setState(0x5bf6, 0x171c, 0x1fc0, 0x9f24, 0x33cf, 0x4cb0, 0x1, 0x0);
        gbc.writeMem(0x5bf6, { 0x81 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x171c, gbc.sp());
        EXPECT(0x5bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01EF
        gbc.setState(0x4d67, 0xa96e, 0x6c70, 0xc6eb, 0x6044, 0xdd16, 0x1, 0x1);
        gbc.writeMem(0x4d67, { 0x81 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa96e, gbc.sp());
        EXPECT(0x4d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01F0
        gbc.setState(0xeed2, 0x2d22, 0xaac0, 0xa599, 0x3bac, 0x3d08, 0x1, 0x1);
        gbc.writeMem(0xeed2, { 0x81 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2d22, gbc.sp());
        EXPECT(0xeed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xeed2));
        // 81 01F1
        gbc.setState(0x30fb, 0xed1f, 0x5a20, 0x573b, 0x28d9, 0x4607, 0x0, 0x0);
        gbc.writeMem(0x30fb, { 0x81 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xed1f, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01F2
        gbc.setState(0x14c7, 0xa5c5, 0x7d50, 0x9ce2, 0x71b, 0xa1d3, 0x1, 0x1);
        gbc.writeMem(0x14c7, { 0x81 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa5c5, gbc.sp());
        EXPECT(0x14c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01F3
        gbc.setState(0xb62f, 0xadc6, 0x45e0, 0xe9f, 0x7c0c, 0xebd9, 0x0, 0x0);
        gbc.writeMem(0xb62f, { 0x81 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xadc6, gbc.sp());
        EXPECT(0xb630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb62f));
        // 81 01F4
        gbc.setState(0x6161, 0x6981, 0x9510, 0xf7cf, 0x4dcd, 0x878d, 0x0, 0x0);
        gbc.writeMem(0x6161, { 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6981, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01F5
        gbc.setState(0x836a, 0xf31, 0xaec0, 0x269c, 0x8bda, 0xa8bc, 0x0, 0x0);
        gbc.writeMem(0x836a, { 0x81 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf31, gbc.sp());
        EXPECT(0x836b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x836a));
        // 81 01F6
        gbc.setState(0x9e76, 0xaa31, 0x1700, 0x8c8c, 0xe787, 0x3e09, 0x1, 0x0);
        gbc.writeMem(0x9e76, { 0x81 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaa31, gbc.sp());
        EXPECT(0x9e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9e76));
        // 81 01F7
        gbc.setState(0xee69, 0x6e9a, 0x47e0, 0x8e82, 0x48f7, 0x6d21, 0x0, 0x1);
        gbc.writeMem(0xee69, { 0x81 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6e9a, gbc.sp());
        EXPECT(0xee6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xee69));
        // 81 01F8
        gbc.setState(0xdedd, 0x8239, 0xf440, 0xa3ad, 0x72de, 0x1a49, 0x0, 0x1);
        gbc.writeMem(0xdedd, { 0x81 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8239, gbc.sp());
        EXPECT(0xdede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdedd));
        // 81 01F9
        gbc.setState(0xaf8, 0xffc0, 0xeb10, 0x97e, 0x3b0b, 0x1f1b, 0x0, 0x1);
        gbc.writeMem(0xaf8, { 0x81 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xffc0, gbc.sp());
        EXPECT(0xaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 01FA
        gbc.setState(0x541a, 0xfc5e, 0x6a80, 0x7d25, 0xbdd, 0x4f4, 0x0, 0x0);
        gbc.writeMem(0x541a, { 0x81 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfc5e, gbc.sp());
        EXPECT(0x541b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01FB
        gbc.setState(0xa4ab, 0x3cb, 0x1a40, 0xd66b, 0xde86, 0x4350, 0x1, 0x1);
        gbc.writeMem(0xa4ab, { 0x81 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0xa4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa4ab));
        // 81 01FC
        gbc.setState(0x69b2, 0x8258, 0x4d0, 0x7762, 0x7519, 0x4610, 0x0, 0x1);
        gbc.writeMem(0x69b2, { 0x81 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8258, gbc.sp());
        EXPECT(0x69b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 01FD
        gbc.setState(0xa818, 0xac06, 0xcf60, 0xc5a0, 0x9845, 0x168c, 0x1, 0x1);
        gbc.writeMem(0xa818, { 0x81 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xac06, gbc.sp());
        EXPECT(0xa819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa818));
        // 81 01FE
        gbc.setState(0xe64e, 0xab1e, 0x3e70, 0x50cd, 0x2ae4, 0xeb, 0x0, 0x1);
        gbc.writeMem(0xe64e, { 0x81 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xab1e, gbc.sp());
        EXPECT(0xe64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe64e));
        // 81 01FF
        gbc.setState(0xe4d9, 0x311, 0x3e20, 0xa0fb, 0xb6cd, 0x3ba4, 0x1, 0x0);
        gbc.writeMem(0xe4d9, { 0x81 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x311, gbc.sp());
        EXPECT(0xe4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe4d9));
        // 81 0200
        gbc.setState(0x671f, 0x7ff2, 0x16b0, 0x5f95, 0x5ad4, 0x9d9f, 0x0, 0x0);
        gbc.writeMem(0x671f, { 0x81 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7ff2, gbc.sp());
        EXPECT(0x6720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0201
        gbc.setState(0x2e57, 0xba0b, 0x8750, 0xb673, 0xd49e, 0xf52c, 0x1, 0x0);
        gbc.writeMem(0x2e57, { 0x81 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xba0b, gbc.sp());
        EXPECT(0x2e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0202
        gbc.setState(0x9da2, 0x492, 0xd130, 0xe640, 0x90d6, 0x793f, 0x0, 0x1);
        gbc.writeMem(0x9da2, { 0x81 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x492, gbc.sp());
        EXPECT(0x9da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9da2));
        // 81 0203
        gbc.setState(0x29b0, 0xd986, 0xe1d0, 0xc88e, 0x6c2, 0x7b97, 0x1, 0x1);
        gbc.writeMem(0x29b0, { 0x81 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd986, gbc.sp());
        EXPECT(0x29b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0204
        gbc.setState(0x72cd, 0xc92b, 0xb010, 0x3335, 0xe182, 0x8ce7, 0x1, 0x1);
        gbc.writeMem(0x72cd, { 0x81 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc92b, gbc.sp());
        EXPECT(0x72ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0205
        gbc.setState(0x4412, 0x98d, 0x89d0, 0x52cf, 0x437a, 0x4a04, 0x0, 0x1);
        gbc.writeMem(0x4412, { 0x81 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x98d, gbc.sp());
        EXPECT(0x4413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0206
        gbc.setState(0x47f9, 0x3ced, 0x4a90, 0xfc27, 0x75ae, 0x4b71, 0x1, 0x0);
        gbc.writeMem(0x47f9, { 0x81 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3ced, gbc.sp());
        EXPECT(0x47fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0207
        gbc.setState(0x2c6, 0xda48, 0xbf30, 0x9d7f, 0xbed8, 0x62cb, 0x0, 0x0);
        gbc.writeMem(0x2c6, { 0x81 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xda48, gbc.sp());
        EXPECT(0x2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0208
        gbc.setState(0xe419, 0xcb9d, 0xa5f0, 0xc364, 0x4d54, 0x411d, 0x0, 0x0);
        gbc.writeMem(0xe419, { 0x81 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcb9d, gbc.sp());
        EXPECT(0xe41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe419));
        // 81 0209
        gbc.setState(0x1afa, 0xa9dd, 0x550, 0xf6fc, 0x58ce, 0x6510, 0x0, 0x1);
        gbc.writeMem(0x1afa, { 0x81 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa9dd, gbc.sp());
        EXPECT(0x1afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 020A
        gbc.setState(0x7da6, 0x8c5b, 0x7fb0, 0x4343, 0xe51c, 0x77d1, 0x1, 0x1);
        gbc.writeMem(0x7da6, { 0x81 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8c5b, gbc.sp());
        EXPECT(0x7da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 020B
        gbc.setState(0x83e6, 0x5960, 0xacd0, 0x6a48, 0xf4c3, 0x5f6a, 0x1, 0x1);
        gbc.writeMem(0x83e6, { 0x81 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5960, gbc.sp());
        EXPECT(0x83e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x83e6));
        // 81 020C
        gbc.setState(0x7329, 0xbeae, 0xa830, 0xd19, 0xa106, 0xc75b, 0x0, 0x0);
        gbc.writeMem(0x7329, { 0x81 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbeae, gbc.sp());
        EXPECT(0x732a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 020D
        gbc.setState(0x5513, 0xb9dc, 0x680, 0xa962, 0x3a43, 0xedfa, 0x1, 0x0);
        gbc.writeMem(0x5513, { 0x81 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb9dc, gbc.sp());
        EXPECT(0x5514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 020E
        gbc.setState(0xbd3, 0xb389, 0x4920, 0xf909, 0x23fa, 0xfa6c, 0x0, 0x0);
        gbc.writeMem(0xbd3, { 0x81 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb389, gbc.sp());
        EXPECT(0xbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 020F
        gbc.setState(0xb20f, 0xa2f2, 0x3dc0, 0xc0c3, 0x9f86, 0xace4, 0x0, 0x0);
        gbc.writeMem(0xb20f, { 0x81 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa2f2, gbc.sp());
        EXPECT(0xb210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb20f));
        // 81 0210
        gbc.setState(0x7645, 0xac3d, 0x30, 0x1373, 0x71d8, 0x73b8, 0x1, 0x1);
        gbc.writeMem(0x7645, { 0x81 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xac3d, gbc.sp());
        EXPECT(0x7646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0211
        gbc.setState(0x6f0e, 0x3684, 0xb610, 0x610, 0x84e1, 0x5345, 0x0, 0x0);
        gbc.writeMem(0x6f0e, { 0x81 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3684, gbc.sp());
        EXPECT(0x6f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0212
        gbc.setState(0x5687, 0x87a4, 0xb3a0, 0x6792, 0x43f9, 0xf08c, 0x1, 0x1);
        gbc.writeMem(0x5687, { 0x81 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x87a4, gbc.sp());
        EXPECT(0x5688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0213
        gbc.setState(0x4f4f, 0xcb2f, 0x9f50, 0x946d, 0xaf42, 0xe078, 0x0, 0x0);
        gbc.writeMem(0x4f4f, { 0x81 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcb2f, gbc.sp());
        EXPECT(0x4f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0214
        gbc.setState(0x35c, 0xac47, 0x7c00, 0xd9fe, 0x8b2d, 0xaec4, 0x1, 0x0);
        gbc.writeMem(0x35c, { 0x81 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xac47, gbc.sp());
        EXPECT(0x35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0215
        gbc.setState(0x53f0, 0x3e15, 0xa240, 0xa860, 0xf265, 0x1067, 0x0, 0x0);
        gbc.writeMem(0x53f0, { 0x81 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3e15, gbc.sp());
        EXPECT(0x53f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0217
        gbc.setState(0x8503, 0xe75a, 0x6350, 0x2fec, 0xa758, 0x1f9e, 0x1, 0x1);
        gbc.writeMem(0x8503, { 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe75a, gbc.sp());
        EXPECT(0x8504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8503));
        // 81 0218
        gbc.setState(0xad00, 0xb1f5, 0xfb00, 0xdee2, 0x643c, 0x7b98, 0x0, 0x0);
        gbc.writeMem(0xad00, { 0x81 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb1f5, gbc.sp());
        EXPECT(0xad01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xad00));
        // 81 0219
        gbc.setState(0x2038, 0x8849, 0x8b40, 0x32e6, 0xfce, 0xbb67, 0x1, 0x1);
        gbc.writeMem(0x2038, { 0x81 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8849, gbc.sp());
        EXPECT(0x2039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 021A
        gbc.setState(0x7e2e, 0x8e52, 0xb9e0, 0xf05e, 0x7ae8, 0xbf5, 0x0, 0x1);
        gbc.writeMem(0x7e2e, { 0x81 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8e52, gbc.sp());
        EXPECT(0x7e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 021B
        gbc.setState(0xdb7, 0x317b, 0x3d90, 0x8955, 0x580, 0x2a67, 0x1, 0x1);
        gbc.writeMem(0xdb7, { 0x81 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x317b, gbc.sp());
        EXPECT(0xdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 021C
        gbc.setState(0x2d4b, 0xd396, 0x1680, 0xf2bc, 0x1dac, 0xff8f, 0x1, 0x0);
        gbc.writeMem(0x2d4b, { 0x81 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd396, gbc.sp());
        EXPECT(0x2d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 021D
        gbc.setState(0x1784, 0x24a2, 0xaef0, 0x4698, 0xcaf8, 0x4c0e, 0x1, 0x0);
        gbc.writeMem(0x1784, { 0x81 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x24a2, gbc.sp());
        EXPECT(0x1785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 021F
        gbc.setState(0x4f54, 0x3ac8, 0x7c20, 0x81b4, 0x23d2, 0x9242, 0x0, 0x0);
        gbc.writeMem(0x4f54, { 0x81 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3ac8, gbc.sp());
        EXPECT(0x4f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0220
        gbc.setState(0xbe03, 0xfb4d, 0x8c20, 0x2ae8, 0x1841, 0xdf6a, 0x0, 0x0);
        gbc.writeMem(0xbe03, { 0x81 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfb4d, gbc.sp());
        EXPECT(0xbe04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbe03));
        // 81 0221
        gbc.setState(0x464a, 0x7277, 0x8910, 0xf2e0, 0xe88, 0xa56f, 0x1, 0x0);
        gbc.writeMem(0x464a, { 0x81 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7277, gbc.sp());
        EXPECT(0x464b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0222
        gbc.setState(0x33bb, 0xc1a7, 0x1e10, 0x38e, 0xff7, 0x3b01, 0x0, 0x1);
        gbc.writeMem(0x33bb, { 0x81 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc1a7, gbc.sp());
        EXPECT(0x33bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0223
        gbc.setState(0x9be5, 0xb24a, 0xc5b0, 0xf1e0, 0x7860, 0x3d5b, 0x0, 0x1);
        gbc.writeMem(0x9be5, { 0x81 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb24a, gbc.sp());
        EXPECT(0x9be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9be5));
        // 81 0224
        gbc.setState(0xa79b, 0xe9b6, 0xf780, 0x59d1, 0x1af8, 0xb3fd, 0x1, 0x1);
        gbc.writeMem(0xa79b, { 0x81 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe9b6, gbc.sp());
        EXPECT(0xa79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa79b));
        // 81 0225
        gbc.setState(0xbd65, 0xfff2, 0x1390, 0xc972, 0x4429, 0x2171, 0x0, 0x0);
        gbc.writeMem(0xbd65, { 0x81 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfff2, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbd65));
        // 81 0226
        gbc.setState(0xa6e3, 0xaf25, 0x5da0, 0xf432, 0xccc1, 0x6cb, 0x1, 0x1);
        gbc.writeMem(0xa6e3, { 0x81 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaf25, gbc.sp());
        EXPECT(0xa6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa6e3));
        // 81 0227
        gbc.setState(0x225d, 0x3173, 0xecd0, 0xdb0a, 0xdbdb, 0x20c0, 0x0, 0x0);
        gbc.writeMem(0x225d, { 0x81 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3173, gbc.sp());
        EXPECT(0x225e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0228
        gbc.setState(0x32be, 0x89d0, 0x1f00, 0x854a, 0x95e, 0x5e53, 0x0, 0x0);
        gbc.writeMem(0x32be, { 0x81 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x89d0, gbc.sp());
        EXPECT(0x32bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0229
        gbc.setState(0xd414, 0xa4e7, 0xf410, 0xdbc4, 0xbcb0, 0xf6e, 0x0, 0x1);
        gbc.writeMem(0xd414, { 0x81 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa4e7, gbc.sp());
        EXPECT(0xd415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd414));
        // 81 022A
        gbc.setState(0x44df, 0x8477, 0x7000, 0x20af, 0xe103, 0x7cab, 0x1, 0x1);
        gbc.writeMem(0x44df, { 0x81 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8477, gbc.sp());
        EXPECT(0x44e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 022B
        gbc.setState(0x7c54, 0x2d98, 0xf620, 0xe0c2, 0x2835, 0x2374, 0x0, 0x1);
        gbc.writeMem(0x7c54, { 0x81 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2d98, gbc.sp());
        EXPECT(0x7c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 022C
        gbc.setState(0xcb61, 0x831c, 0xec20, 0xbb6b, 0xba18, 0x9968, 0x1, 0x1);
        gbc.writeMem(0xcb61, { 0x81 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x831c, gbc.sp());
        EXPECT(0xcb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcb61));
        // 81 022D
        gbc.setState(0x4c43, 0x9496, 0xe2e0, 0xe0f9, 0x1e3e, 0xdef7, 0x1, 0x0);
        gbc.writeMem(0x4c43, { 0x81 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9496, gbc.sp());
        EXPECT(0x4c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 022E
        gbc.setState(0x560a, 0x53a, 0x68c0, 0x6d37, 0xb5c, 0x7a36, 0x1, 0x1);
        gbc.writeMem(0x560a, { 0x81 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x53a, gbc.sp());
        EXPECT(0x560b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 022F
        gbc.setState(0xe296, 0xa7fa, 0xca10, 0x11ec, 0x6bf1, 0x14ac, 0x1, 0x0);
        gbc.writeMem(0xe296, { 0x81 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa7fa, gbc.sp());
        EXPECT(0xe297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe296));
        // 81 0230
        gbc.setState(0x1a0c, 0xfff2, 0x6de0, 0x9910, 0x21ae, 0xe2fc, 0x0, 0x1);
        gbc.writeMem(0x1a0c, { 0x81 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfff2, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0231
        gbc.setState(0x6d64, 0xd875, 0xda00, 0x4f6, 0xbd7f, 0xa68d, 0x1, 0x0);
        gbc.writeMem(0x6d64, { 0x81 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd875, gbc.sp());
        EXPECT(0x6d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0232
        gbc.setState(0xe5d4, 0xdde9, 0x7380, 0x9036, 0x3e99, 0xfb06, 0x1, 0x0);
        gbc.writeMem(0xe5d4, { 0x81 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdde9, gbc.sp());
        EXPECT(0xe5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe5d4));
        // 81 0233
        gbc.setState(0x9ce8, 0x1986, 0x93c0, 0xb38d, 0x7560, 0xce24, 0x1, 0x0);
        gbc.writeMem(0x9ce8, { 0x81 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1986, gbc.sp());
        EXPECT(0x9ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9ce8));
        // 81 0234
        gbc.setState(0x1b65, 0x287a, 0xf750, 0x3d1b, 0x2ddd, 0xfabb, 0x1, 0x1);
        gbc.writeMem(0x1b65, { 0x81 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x287a, gbc.sp());
        EXPECT(0x1b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0235
        gbc.setState(0x9d61, 0x8709, 0x3840, 0x4243, 0x511c, 0xf71e, 0x0, 0x0);
        gbc.writeMem(0x9d61, { 0x81 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8709, gbc.sp());
        EXPECT(0x9d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9d61));
        // 81 0236
        gbc.setState(0x61f9, 0xc2f5, 0xf710, 0x80d2, 0x72e0, 0xadad, 0x1, 0x1);
        gbc.writeMem(0x61f9, { 0x81 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc2f5, gbc.sp());
        EXPECT(0x61fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0237
        gbc.setState(0x2f61, 0x409d, 0x97c0, 0x9b78, 0xe8d9, 0xe955, 0x1, 0x1);
        gbc.writeMem(0x2f61, { 0x81 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x409d, gbc.sp());
        EXPECT(0x2f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0238
        gbc.setState(0xa1f2, 0x2016, 0x5800, 0x5d48, 0xdc2b, 0x73e9, 0x0, 0x1);
        gbc.writeMem(0xa1f2, { 0x81 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2016, gbc.sp());
        EXPECT(0xa1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa1f2));
        // 81 0239
        gbc.setState(0x3913, 0x7ebf, 0xe10, 0xe4f, 0xef9c, 0xe3fb, 0x0, 0x1);
        gbc.writeMem(0x3913, { 0x81 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7ebf, gbc.sp());
        EXPECT(0x3914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 023A
        gbc.setState(0x98aa, 0xaa7a, 0x7f80, 0x1639, 0x7fea, 0x8d0e, 0x0, 0x1);
        gbc.writeMem(0x98aa, { 0x81 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaa7a, gbc.sp());
        EXPECT(0x98ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x98aa));
        // 81 023B
        gbc.setState(0x80d9, 0xc5d2, 0x4bd0, 0x2198, 0x5d0, 0x4f2f, 0x0, 0x1);
        gbc.writeMem(0x80d9, { 0x81 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc5d2, gbc.sp());
        EXPECT(0x80da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x80d9));
        // 81 023C
        gbc.setState(0x9d61, 0x1ae5, 0x7af0, 0xafcf, 0x49cb, 0x3a25, 0x1, 0x0);
        gbc.writeMem(0x9d61, { 0x81 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1ae5, gbc.sp());
        EXPECT(0x9d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9d61));
        // 81 023E
        gbc.setState(0x3a35, 0x2ad6, 0xb4c0, 0xb1e8, 0xde23, 0xbb15, 0x1, 0x0);
        gbc.writeMem(0x3a35, { 0x81 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2ad6, gbc.sp());
        EXPECT(0x3a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 023F
        gbc.setState(0x4f17, 0x6583, 0x1970, 0xa218, 0xd1da, 0xe1d4, 0x0, 0x0);
        gbc.writeMem(0x4f17, { 0x81 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6583, gbc.sp());
        EXPECT(0x4f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0240
        gbc.setState(0xbfa7, 0xff65, 0x2ff0, 0x31d8, 0x95da, 0x5205, 0x0, 0x0);
        gbc.writeMem(0xbfa7, { 0x81 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0xbfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbfa7));
        // 81 0241
        gbc.setState(0x66de, 0x3ac5, 0x6080, 0xfb69, 0x8214, 0x64dc, 0x0, 0x0);
        gbc.writeMem(0x66de, { 0x81 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3ac5, gbc.sp());
        EXPECT(0x66df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0242
        gbc.setState(0x7c43, 0x865, 0x7c60, 0x81ef, 0xa925, 0xfbdc, 0x1, 0x1);
        gbc.writeMem(0x7c43, { 0x81 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x865, gbc.sp());
        EXPECT(0x7c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0243
        gbc.setState(0xb675, 0x543a, 0x2720, 0xb5ce, 0x8b43, 0x84c4, 0x1, 0x1);
        gbc.writeMem(0xb675, { 0x81 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x543a, gbc.sp());
        EXPECT(0xb676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb675));
        // 81 0244
        gbc.setState(0x4989, 0x1ad, 0x18f0, 0x1c4f, 0xff9c, 0x355e, 0x0, 0x1);
        gbc.writeMem(0x4989, { 0x81 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1ad, gbc.sp());
        EXPECT(0x498a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0245
        gbc.setState(0x4651, 0x7532, 0x8210, 0x1437, 0x5383, 0x5ed0, 0x0, 0x1);
        gbc.writeMem(0x4651, { 0x81 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7532, gbc.sp());
        EXPECT(0x4652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0246
        gbc.setState(0x766c, 0xbf2c, 0xdad0, 0xcc4c, 0x1775, 0x64a6, 0x0, 0x1);
        gbc.writeMem(0x766c, { 0x81 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbf2c, gbc.sp());
        EXPECT(0x766d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0247
        gbc.setState(0x47d7, 0x1f37, 0xffd0, 0xa86, 0x77c2, 0xb3dc, 0x0, 0x0);
        gbc.writeMem(0x47d7, { 0x81 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1f37, gbc.sp());
        EXPECT(0x47d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0248
        gbc.setState(0xad10, 0xbe4e, 0x7460, 0xe5a6, 0x32bd, 0xe36, 0x0, 0x1);
        gbc.writeMem(0xad10, { 0x81 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbe4e, gbc.sp());
        EXPECT(0xad11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xad10));
        // 81 0249
        gbc.setState(0x63d7, 0xedb3, 0x2c90, 0x6d, 0xe134, 0xc161, 0x0, 0x0);
        gbc.writeMem(0x63d7, { 0x81 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xedb3, gbc.sp());
        EXPECT(0x63d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 024A
        gbc.setState(0x9d95, 0xf679, 0xa170, 0x1b2b, 0x3dd6, 0xc0fe, 0x1, 0x0);
        gbc.writeMem(0x9d95, { 0x81 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf679, gbc.sp());
        EXPECT(0x9d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9d95));
        // 81 024B
        gbc.setState(0x5647, 0x8bd5, 0x26b0, 0x313d, 0x18c5, 0xfa8e, 0x0, 0x0);
        gbc.writeMem(0x5647, { 0x81 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8bd5, gbc.sp());
        EXPECT(0x5648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 024C
        gbc.setState(0x1524, 0x9a66, 0xf9a0, 0xe7f6, 0x7a74, 0xef7b, 0x0, 0x0);
        gbc.writeMem(0x1524, { 0x81 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9a66, gbc.sp());
        EXPECT(0x1525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 024D
        gbc.setState(0x56ce, 0x1be6, 0x8ad0, 0x92ed, 0xb8c9, 0xaa19, 0x1, 0x1);
        gbc.writeMem(0x56ce, { 0x81 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1be6, gbc.sp());
        EXPECT(0x56cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 024E
        gbc.setState(0x699a, 0xba66, 0x34d0, 0xd831, 0x73d1, 0x47d7, 0x1, 0x0);
        gbc.writeMem(0x699a, { 0x81 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xba66, gbc.sp());
        EXPECT(0x699b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 024F
        gbc.setState(0xc47a, 0x5673, 0xe20, 0x5a94, 0x69fb, 0x34c6, 0x1, 0x0);
        gbc.writeMem(0xc47a, { 0x81 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5673, gbc.sp());
        EXPECT(0xc47b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc47a));
        // 81 0250
        gbc.setState(0xb230, 0x1ef8, 0x6730, 0x9f91, 0xc44a, 0x1d1c, 0x0, 0x1);
        gbc.writeMem(0xb230, { 0x81 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0xb231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb230));
        // 81 0251
        gbc.setState(0x6101, 0x5d08, 0x68c0, 0xc79c, 0x7e59, 0x8410, 0x1, 0x1);
        gbc.writeMem(0x6101, { 0x81 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0x6102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0252
        gbc.setState(0x6a2, 0xdec0, 0x2200, 0xa0a4, 0xae98, 0x7409, 0x1, 0x1);
        gbc.writeMem(0x6a2, { 0x81 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdec0, gbc.sp());
        EXPECT(0x6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0253
        gbc.setState(0xe1b5, 0x7448, 0xaa90, 0x3203, 0x1651, 0xafc, 0x1, 0x0);
        gbc.writeMem(0xe1b5, { 0x81 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7448, gbc.sp());
        EXPECT(0xe1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe1b5));
        // 81 0254
        gbc.setState(0xb3a5, 0x949, 0x6ae0, 0x3006, 0xdc24, 0x6233, 0x0, 0x0);
        gbc.writeMem(0xb3a5, { 0x81 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x949, gbc.sp());
        EXPECT(0xb3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb3a5));
        // 81 0255
        gbc.setState(0x9ad4, 0x8714, 0x7680, 0x56dc, 0xda5c, 0xde62, 0x0, 0x0);
        gbc.writeMem(0x9ad4, { 0x81 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8714, gbc.sp());
        EXPECT(0x9ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9ad4));
        // 81 0256
        gbc.setState(0xe0f3, 0x2aff, 0x7740, 0xe660, 0x6ff8, 0xe7e3, 0x0, 0x0);
        gbc.writeMem(0xe0f3, { 0x81 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2aff, gbc.sp());
        EXPECT(0xe0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe0f3));
        // 81 0257
        gbc.setState(0xa7dd, 0x840c, 0x3790, 0x946c, 0x641f, 0xc98c, 0x0, 0x1);
        gbc.writeMem(0xa7dd, { 0x81 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x840c, gbc.sp());
        EXPECT(0xa7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa7dd));
        // 81 0258
        gbc.setState(0x2662, 0x12d0, 0x6360, 0x79a0, 0xbc04, 0x6d0b, 0x0, 0x1);
        gbc.writeMem(0x2662, { 0x81 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x12d0, gbc.sp());
        EXPECT(0x2663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0259
        gbc.setState(0xc2d0, 0x7822, 0x2e80, 0x215d, 0x3a95, 0xb5d3, 0x1, 0x0);
        gbc.writeMem(0xc2d0, { 0x81 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7822, gbc.sp());
        EXPECT(0xc2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc2d0));
        // 81 025A
        gbc.setState(0x607b, 0x111b, 0x1e70, 0xdef8, 0xf434, 0xddc3, 0x1, 0x0);
        gbc.writeMem(0x607b, { 0x81 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x111b, gbc.sp());
        EXPECT(0x607c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 025B
        gbc.setState(0xa423, 0x9c33, 0x4c70, 0xafa5, 0x7029, 0x9071, 0x1, 0x0);
        gbc.writeMem(0xa423, { 0x81 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9c33, gbc.sp());
        EXPECT(0xa424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa423));
        // 81 025C
        gbc.setState(0xd43f, 0x69c9, 0x8a70, 0x5ecd, 0xbcf5, 0xef21, 0x1, 0x0);
        gbc.writeMem(0xd43f, { 0x81 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x69c9, gbc.sp());
        EXPECT(0xd440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd43f));
        // 81 025D
        gbc.setState(0x47e9, 0x9838, 0x9ef0, 0x32ff, 0x946c, 0xfac8, 0x0, 0x1);
        gbc.writeMem(0x47e9, { 0x81 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9838, gbc.sp());
        EXPECT(0x47ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 025E
        gbc.setState(0xc01f, 0x14fb, 0x7e80, 0xea82, 0xeb5d, 0xdfc4, 0x1, 0x0);
        gbc.writeMem(0xc01f, { 0x81 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x14fb, gbc.sp());
        EXPECT(0xc020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc01f));
        // 81 025F
        gbc.setState(0x1274, 0x6ad, 0x28f0, 0xa95a, 0xfb80, 0x36d7, 0x0, 0x1);
        gbc.writeMem(0x1274, { 0x81 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6ad, gbc.sp());
        EXPECT(0x1275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0260
        gbc.setState(0x8464, 0xfd5, 0x7e80, 0xe738, 0xcae5, 0x5695, 0x0, 0x0);
        gbc.writeMem(0x8464, { 0x81 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfd5, gbc.sp());
        EXPECT(0x8465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8464));
        // 81 0261
        gbc.setState(0xbe27, 0x5be4, 0xf9a0, 0xcd33, 0x112e, 0xca7b, 0x1, 0x1);
        gbc.writeMem(0xbe27, { 0x81 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5be4, gbc.sp());
        EXPECT(0xbe28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbe27));
        // 81 0263
        gbc.setState(0xc1f4, 0x854f, 0x5fe0, 0xab6c, 0x3ed3, 0x9112, 0x0, 0x1);
        gbc.writeMem(0xc1f4, { 0x81 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x854f, gbc.sp());
        EXPECT(0xc1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc1f4));
        // 81 0264
        gbc.setState(0xaa15, 0x1a0c, 0x1b30, 0xb9f0, 0x5f45, 0x9003, 0x0, 0x1);
        gbc.writeMem(0xaa15, { 0x81 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1a0c, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xaa15));
        // 81 0265
        gbc.setState(0x9ae9, 0xd36a, 0x8990, 0xeb5, 0xa5ac, 0x8766, 0x1, 0x1);
        gbc.writeMem(0x9ae9, { 0x81 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd36a, gbc.sp());
        EXPECT(0x9aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9ae9));
        // 81 0266
        gbc.setState(0x21bc, 0xed, 0x14a0, 0x99f5, 0x5300, 0x3c56, 0x0, 0x0);
        gbc.writeMem(0x21bc, { 0x81 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xed, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0267
        gbc.setState(0x4a30, 0x133d, 0x90e0, 0xf943, 0x3876, 0x26b1, 0x0, 0x1);
        gbc.writeMem(0x4a30, { 0x81 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x133d, gbc.sp());
        EXPECT(0x4a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0268
        gbc.setState(0x83d3, 0x22ad, 0x8250, 0x4675, 0xa496, 0xe452, 0x0, 0x0);
        gbc.writeMem(0x83d3, { 0x81 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x22ad, gbc.sp());
        EXPECT(0x83d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x83d3));
        // 81 0269
        gbc.setState(0x35cb, 0xc109, 0xd9f0, 0xe77f, 0xb404, 0x5a0f, 0x1, 0x1);
        gbc.writeMem(0x35cb, { 0x81 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc109, gbc.sp());
        EXPECT(0x35cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 026A
        gbc.setState(0x3291, 0xc675, 0x9be0, 0x7b61, 0xf0e0, 0xee4f, 0x0, 0x1);
        gbc.writeMem(0x3291, { 0x81 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc675, gbc.sp());
        EXPECT(0x3292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 026B
        gbc.setState(0xbd95, 0x27aa, 0x4110, 0xab9a, 0x3ab2, 0x2556, 0x1, 0x0);
        gbc.writeMem(0xbd95, { 0x81 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x27aa, gbc.sp());
        EXPECT(0xbd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbd95));
        // 81 026C
        gbc.setState(0x1cf7, 0x81ef, 0xc370, 0x1fef, 0x486b, 0xb80f, 0x0, 0x1);
        gbc.writeMem(0x1cf7, { 0x81 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x81ef, gbc.sp());
        EXPECT(0x1cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 026D
        gbc.setState(0xa521, 0xad96, 0x6a10, 0xd65e, 0xe686, 0xf6c5, 0x0, 0x0);
        gbc.writeMem(0xa521, { 0x81 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xad96, gbc.sp());
        EXPECT(0xa522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa521));
        // 81 026E
        gbc.setState(0x59d1, 0x7409, 0x52d0, 0x7093, 0xb7d6, 0x1a31, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0x81 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7409, gbc.sp());
        EXPECT(0x59d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 026F
        gbc.setState(0xace8, 0xa882, 0xf310, 0x91de, 0x2467, 0xe2dd, 0x0, 0x0);
        gbc.writeMem(0xace8, { 0x81 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa882, gbc.sp());
        EXPECT(0xace9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xace8));
        // 81 0270
        gbc.setState(0xdb7b, 0xe7f5, 0x2030, 0xbcc0, 0x2a6c, 0x9cd1, 0x1, 0x1);
        gbc.writeMem(0xdb7b, { 0x81 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe7f5, gbc.sp());
        EXPECT(0xdb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdb7b));
        // 81 0271
        gbc.setState(0x14f4, 0x8066, 0xa6f0, 0x3e05, 0x3bc8, 0x5f38, 0x1, 0x0);
        gbc.writeMem(0x14f4, { 0x81 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8066, gbc.sp());
        EXPECT(0x14f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0273
        gbc.setState(0xd3d, 0x3d43, 0xf720, 0x77b0, 0x6610, 0x3120, 0x1, 0x0);
        gbc.writeMem(0xd3d, { 0x81 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3d43, gbc.sp());
        EXPECT(0xd3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0274
        gbc.setState(0x5e13, 0x1a51, 0x9600, 0x6e65, 0xf50f, 0x1293, 0x0, 0x1);
        gbc.writeMem(0x5e13, { 0x81 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1a51, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0275
        gbc.setState(0x4269, 0x5684, 0x4a20, 0x1f96, 0x4c71, 0xa856, 0x0, 0x1);
        gbc.writeMem(0x4269, { 0x81 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5684, gbc.sp());
        EXPECT(0x426a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0276
        gbc.setState(0x1452, 0xff90, 0xe1a0, 0x4945, 0xee6e, 0xaedd, 0x0, 0x1);
        gbc.writeMem(0x1452, { 0x81 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xff90, gbc.sp());
        EXPECT(0x1453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0277
        gbc.setState(0x482e, 0xc5c5, 0x6650, 0x5567, 0x2bee, 0xade7, 0x0, 0x1);
        gbc.writeMem(0x482e, { 0x81 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc5c5, gbc.sp());
        EXPECT(0x482f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0278
        gbc.setState(0xa3d0, 0xfe4, 0x9b70, 0x40ed, 0x8a7e, 0xdfc0, 0x1, 0x0);
        gbc.writeMem(0xa3d0, { 0x81 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfe4, gbc.sp());
        EXPECT(0xa3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa3d0));
        // 81 0279
        gbc.setState(0xd20, 0x6d4f, 0x4e30, 0x7e16, 0xfaa8, 0x2c3f, 0x1, 0x0);
        gbc.writeMem(0xd20, { 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6d4f, gbc.sp());
        EXPECT(0xd21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 027A
        gbc.setState(0x9412, 0x12cb, 0x4840, 0x73b3, 0xfa03, 0x95df, 0x1, 0x0);
        gbc.writeMem(0x9412, { 0x81 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x12cb, gbc.sp());
        EXPECT(0x9413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9412));
        // 81 027B
        gbc.setState(0x19b6, 0x4b6e, 0xc510, 0x7c8c, 0xb7e, 0x735e, 0x1, 0x1);
        gbc.writeMem(0x19b6, { 0x81 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4b6e, gbc.sp());
        EXPECT(0x19b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 027C
        gbc.setState(0x7132, 0xe125, 0x4b50, 0xf017, 0x775e, 0x3e7f, 0x1, 0x1);
        gbc.writeMem(0x7132, { 0x81 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe125, gbc.sp());
        EXPECT(0x7133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 027D
        gbc.setState(0xe3ba, 0xce2a, 0x3fa0, 0xe1a1, 0xcd30, 0xf735, 0x0, 0x0);
        gbc.writeMem(0xe3ba, { 0x81 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xce2a, gbc.sp());
        EXPECT(0xe3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe3ba));
        // 81 027F
        gbc.setState(0x3bf5, 0x5305, 0xd990, 0xe18, 0xc03e, 0x72d1, 0x0, 0x0);
        gbc.writeMem(0x3bf5, { 0x81 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5305, gbc.sp());
        EXPECT(0x3bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0280
        gbc.setState(0x7abe, 0x4cd0, 0x6b50, 0xea5, 0xf19e, 0x3af4, 0x0, 0x0);
        gbc.writeMem(0x7abe, { 0x81 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4cd0, gbc.sp());
        EXPECT(0x7abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0281
        gbc.setState(0x16c3, 0xa615, 0xc4b0, 0x5293, 0xc2e7, 0xb686, 0x0, 0x0);
        gbc.writeMem(0x16c3, { 0x81 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa615, gbc.sp());
        EXPECT(0x16c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0282
        gbc.setState(0x21d2, 0xffd0, 0x2af0, 0x8c44, 0xeecc, 0x94e0, 0x0, 0x0);
        gbc.writeMem(0x21d2, { 0x81 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0x21d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0283
        gbc.setState(0x3379, 0x7b16, 0x5d40, 0x745f, 0xfdcc, 0x22ca, 0x1, 0x0);
        gbc.writeMem(0x3379, { 0x81 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7b16, gbc.sp());
        EXPECT(0x337a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0284
        gbc.setState(0x87f7, 0x1603, 0xe550, 0xa187, 0x84ce, 0xa221, 0x1, 0x0);
        gbc.writeMem(0x87f7, { 0x81 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1603, gbc.sp());
        EXPECT(0x87f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x87f7));
        // 81 0285
        gbc.setState(0xd84a, 0x2b7b, 0x9e90, 0x312f, 0x6585, 0x53b1, 0x0, 0x1);
        gbc.writeMem(0xd84a, { 0x81 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2b7b, gbc.sp());
        EXPECT(0xd84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd84a));
        // 81 0286
        gbc.setState(0xb204, 0xbfe, 0xdfe0, 0x9870, 0x54e8, 0x2325, 0x0, 0x0);
        gbc.writeMem(0xb204, { 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbfe, gbc.sp());
        EXPECT(0xb205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb204));
        // 81 0288
        gbc.setState(0x1110, 0x2260, 0x4180, 0x43ce, 0xc81e, 0x99e2, 0x0, 0x0);
        gbc.writeMem(0x1110, { 0x81 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2260, gbc.sp());
        EXPECT(0x1111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0289
        gbc.setState(0x839d, 0x7949, 0x1770, 0xe342, 0x1207, 0x2194, 0x1, 0x0);
        gbc.writeMem(0x839d, { 0x81 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7949, gbc.sp());
        EXPECT(0x839e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x839d));
        // 81 028A
        gbc.setState(0x33b9, 0xc978, 0x64b0, 0x3eb, 0x75d5, 0x4996, 0x0, 0x1);
        gbc.writeMem(0x33b9, { 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc978, gbc.sp());
        EXPECT(0x33ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 028C
        gbc.setState(0x3086, 0x1d85, 0x1cc0, 0x63d6, 0x3834, 0x22b5, 0x0, 0x0);
        gbc.writeMem(0x3086, { 0x81 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1d85, gbc.sp());
        EXPECT(0x3087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 028D
        gbc.setState(0x88f0, 0xd998, 0x52b0, 0x294, 0x83bd, 0x23fa, 0x0, 0x0);
        gbc.writeMem(0x88f0, { 0x81 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd998, gbc.sp());
        EXPECT(0x88f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x88f0));
        // 81 028E
        gbc.setState(0x40b4, 0x54a2, 0xb780, 0x7c57, 0x9894, 0x9732, 0x1, 0x0);
        gbc.writeMem(0x40b4, { 0x81 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x54a2, gbc.sp());
        EXPECT(0x40b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 028F
        gbc.setState(0x1b76, 0x8dc6, 0xfbd0, 0x6bdf, 0x6722, 0x5db1, 0x0, 0x1);
        gbc.writeMem(0x1b76, { 0x81 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8dc6, gbc.sp());
        EXPECT(0x1b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0290
        gbc.setState(0x7baa, 0x406, 0xd430, 0xd66f, 0x20a2, 0x245a, 0x0, 0x0);
        gbc.writeMem(0x7baa, { 0x81 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0x7bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0291
        gbc.setState(0x5684, 0xd289, 0xe390, 0x4361, 0x1ee2, 0x6ff5, 0x1, 0x0);
        gbc.writeMem(0x5684, { 0x81 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd289, gbc.sp());
        EXPECT(0x5685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0292
        gbc.setState(0x422c, 0x7994, 0x7500, 0x5436, 0xf824, 0x3cb0, 0x1, 0x1);
        gbc.writeMem(0x422c, { 0x81 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7994, gbc.sp());
        EXPECT(0x422d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0293
        gbc.setState(0x1828, 0x5b50, 0xae30, 0x5752, 0x7062, 0x21da, 0x0, 0x0);
        gbc.writeMem(0x1828, { 0x81 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5b50, gbc.sp());
        EXPECT(0x1829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0294
        gbc.setState(0xc922, 0xeade, 0x36a0, 0x66da, 0xf383, 0xc16d, 0x1, 0x1);
        gbc.writeMem(0xc922, { 0x81 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeade, gbc.sp());
        EXPECT(0xc923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc922));
        // 81 0296
        gbc.setState(0x8, 0x3a6d, 0x2650, 0xe79a, 0x60e, 0xd396, 0x1, 0x1);
        gbc.writeMem(0x8, { 0x81 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3a6d, gbc.sp());
        EXPECT(0x9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0297
        gbc.setState(0xd21b, 0xa7f8, 0x9860, 0x165, 0x5227, 0x3df5, 0x1, 0x1);
        gbc.writeMem(0xd21b, { 0x81 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa7f8, gbc.sp());
        EXPECT(0xd21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd21b));
        // 81 0298
        gbc.setState(0x4463, 0x739b, 0xc7b0, 0x65c9, 0xf66c, 0x239d, 0x1, 0x0);
        gbc.writeMem(0x4463, { 0x81 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x739b, gbc.sp());
        EXPECT(0x4464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0299
        gbc.setState(0xaedb, 0xcf00, 0x5bc0, 0xa02, 0x1ded, 0xd9cf, 0x0, 0x0);
        gbc.writeMem(0xaedb, { 0x81 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcf00, gbc.sp());
        EXPECT(0xaedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xaedb));
        // 81 029A
        gbc.setState(0x3caa, 0x8486, 0x8f80, 0x478f, 0x4c1d, 0xfa2f, 0x0, 0x0);
        gbc.writeMem(0x3caa, { 0x81 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8486, gbc.sp());
        EXPECT(0x3cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 029B
        gbc.setState(0xe303, 0xcbb7, 0xedb0, 0x8597, 0x3cb5, 0xe91, 0x0, 0x1);
        gbc.writeMem(0xe303, { 0x81 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcbb7, gbc.sp());
        EXPECT(0xe304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe303));
        // 81 029C
        gbc.setState(0xb805, 0x5c38, 0x7b00, 0xbce5, 0x2a73, 0x4a22, 0x1, 0x0);
        gbc.writeMem(0xb805, { 0x81 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5c38, gbc.sp());
        EXPECT(0xb806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb805));
        // 81 029D
        gbc.setState(0x11, 0xcd54, 0x1290, 0x86f7, 0xc853, 0xf356, 0x0, 0x0);
        gbc.writeMem(0x11, { 0x81 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcd54, gbc.sp());
        EXPECT(0x12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 029E
        gbc.setState(0x429e, 0xb59e, 0x2000, 0x2c6, 0x748e, 0xa9d4, 0x0, 0x0);
        gbc.writeMem(0x429e, { 0x81 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb59e, gbc.sp());
        EXPECT(0x429f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 029F
        gbc.setState(0x4560, 0x61b3, 0x5b00, 0xb401, 0x8b40, 0xe316, 0x0, 0x1);
        gbc.writeMem(0x4560, { 0x81 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x61b3, gbc.sp());
        EXPECT(0x4561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02A0
        gbc.setState(0xed91, 0x5e40, 0xd180, 0x3b3d, 0xe168, 0x79b2, 0x0, 0x0);
        gbc.writeMem(0xed91, { 0x81 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5e40, gbc.sp());
        EXPECT(0xed92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xed91));
        // 81 02A1
        gbc.setState(0x8b73, 0xb4e2, 0xf910, 0x919d, 0xf417, 0x11b4, 0x1, 0x0);
        gbc.writeMem(0x8b73, { 0x81 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb4e2, gbc.sp());
        EXPECT(0x8b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8b73));
        // 81 02A2
        gbc.setState(0xc52, 0x30dd, 0xf570, 0xe81e, 0x66b3, 0xc796, 0x1, 0x0);
        gbc.writeMem(0xc52, { 0x81 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x30dd, gbc.sp());
        EXPECT(0xc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02A3
        gbc.setState(0x8fed, 0x4cff, 0x2380, 0x1a57, 0xec91, 0xdb22, 0x0, 0x0);
        gbc.writeMem(0x8fed, { 0x81 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4cff, gbc.sp());
        EXPECT(0x8fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8fed));
        // 81 02A4
        gbc.setState(0x276a, 0x17cf, 0xa440, 0xf0e2, 0x67ae, 0x525, 0x1, 0x1);
        gbc.writeMem(0x276a, { 0x81 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x17cf, gbc.sp());
        EXPECT(0x276b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02A5
        gbc.setState(0xbebf, 0x948d, 0x8c40, 0xe612, 0x2064, 0xb8ae, 0x0, 0x0);
        gbc.writeMem(0xbebf, { 0x81 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0xbec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbebf));
        // 81 02A6
        gbc.setState(0xd49c, 0x147e, 0x49b0, 0xbbcd, 0xbc70, 0xed5f, 0x1, 0x1);
        gbc.writeMem(0xd49c, { 0x81 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x147e, gbc.sp());
        EXPECT(0xd49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd49c));
        // 81 02A7
        gbc.setState(0x2676, 0x61ba, 0x2230, 0xd18a, 0xc606, 0x128a, 0x1, 0x0);
        gbc.writeMem(0x2676, { 0x81 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x61ba, gbc.sp());
        EXPECT(0x2677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02A8
        gbc.setState(0x67e9, 0x13c7, 0xdcd0, 0x8d1b, 0x8e5a, 0xaa37, 0x1, 0x1);
        gbc.writeMem(0x67e9, { 0x81 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x13c7, gbc.sp());
        EXPECT(0x67ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02A9
        gbc.setState(0x4294, 0x8c22, 0x9db0, 0x53db, 0xc1e4, 0x46af, 0x0, 0x1);
        gbc.writeMem(0x4294, { 0x81 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8c22, gbc.sp());
        EXPECT(0x4295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02AA
        gbc.setState(0xc443, 0xe84c, 0x9540, 0xdd99, 0x9cc6, 0x6824, 0x0, 0x1);
        gbc.writeMem(0xc443, { 0x81 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe84c, gbc.sp());
        EXPECT(0xc444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc443));
        // 81 02AB
        gbc.setState(0x7d7a, 0xe198, 0x1760, 0xe379, 0x87ad, 0x54cb, 0x1, 0x0);
        gbc.writeMem(0x7d7a, { 0x81 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe198, gbc.sp());
        EXPECT(0x7d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02AC
        gbc.setState(0x3b58, 0xe606, 0x44a0, 0x9093, 0x4c06, 0x2cd4, 0x0, 0x0);
        gbc.writeMem(0x3b58, { 0x81 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe606, gbc.sp());
        EXPECT(0x3b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02AD
        gbc.setState(0x6974, 0xdc73, 0xee40, 0x47ae, 0x686b, 0xb544, 0x0, 0x1);
        gbc.writeMem(0x6974, { 0x81 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdc73, gbc.sp());
        EXPECT(0x6975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02AE
        gbc.setState(0x1dc4, 0xea6, 0xa3f0, 0x42e8, 0xda5d, 0x116d, 0x0, 0x0);
        gbc.writeMem(0x1dc4, { 0x81 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xea6, gbc.sp());
        EXPECT(0x1dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02AF
        gbc.setState(0x3541, 0x61d4, 0xb920, 0x9583, 0x7831, 0x60d4, 0x0, 0x0);
        gbc.writeMem(0x3541, { 0x81 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x61d4, gbc.sp());
        EXPECT(0x3542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02B0
        gbc.setState(0x28fc, 0x1ed3, 0xd5a0, 0x2e8d, 0xb09e, 0x52b6, 0x1, 0x0);
        gbc.writeMem(0x28fc, { 0x81 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1ed3, gbc.sp());
        EXPECT(0x28fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02B1
        gbc.setState(0xec46, 0xca70, 0x5fc0, 0xecfc, 0xe85a, 0x3e19, 0x0, 0x0);
        gbc.writeMem(0xec46, { 0x81 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xca70, gbc.sp());
        EXPECT(0xec47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xec46));
        // 81 02B2
        gbc.setState(0xbe9f, 0xad9a, 0x1e60, 0x7357, 0xabbc, 0x4a5, 0x0, 0x0);
        gbc.writeMem(0xbe9f, { 0x81 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0xbea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbe9f));
        // 81 02B3
        gbc.setState(0x2625, 0xa7fe, 0xd2f0, 0x7610, 0x470c, 0xd20b, 0x0, 0x1);
        gbc.writeMem(0x2625, { 0x81 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa7fe, gbc.sp());
        EXPECT(0x2626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02B4
        gbc.setState(0xb429, 0xe181, 0xc20, 0xffe, 0xabea, 0x3861, 0x1, 0x0);
        gbc.writeMem(0xb429, { 0x81 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe181, gbc.sp());
        EXPECT(0xb42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb429));
        // 81 02B5
        gbc.setState(0x6762, 0x4c2c, 0xb930, 0xb268, 0x2416, 0x1090, 0x0, 0x0);
        gbc.writeMem(0x6762, { 0x81 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4c2c, gbc.sp());
        EXPECT(0x6763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02B6
        gbc.setState(0x432f, 0xda4e, 0xcb30, 0x5ef3, 0x44a, 0xfc76, 0x1, 0x0);
        gbc.writeMem(0x432f, { 0x81 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xda4e, gbc.sp());
        EXPECT(0x4330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02B7
        gbc.setState(0x265c, 0x6f, 0x32b0, 0x2b08, 0x5d50, 0x4c5d, 0x1, 0x1);
        gbc.writeMem(0x265c, { 0x81 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6f, gbc.sp());
        EXPECT(0x265d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02B8
        gbc.setState(0x7bf, 0xea7a, 0x24a0, 0xdae0, 0x995e, 0xdd16, 0x0, 0x0);
        gbc.writeMem(0x7bf, { 0x81 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xea7a, gbc.sp());
        EXPECT(0x7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02B9
        gbc.setState(0x2e95, 0x6fb0, 0xda20, 0xfb4b, 0x798, 0x5350, 0x0, 0x1);
        gbc.writeMem(0x2e95, { 0x81 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6fb0, gbc.sp());
        EXPECT(0x2e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02BA
        gbc.setState(0x4920, 0x1a73, 0x5ca0, 0xf274, 0x75d5, 0xd6d1, 0x0, 0x1);
        gbc.writeMem(0x4920, { 0x81 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1a73, gbc.sp());
        EXPECT(0x4921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02BB
        gbc.setState(0xc463, 0xe1e4, 0xf8b0, 0xbf57, 0x2b15, 0x4303, 0x0, 0x0);
        gbc.writeMem(0xc463, { 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe1e4, gbc.sp());
        EXPECT(0xc464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc463));
        // 81 02BD
        gbc.setState(0xd6b3, 0x9277, 0xeec0, 0x7066, 0x5bdc, 0xf39a, 0x1, 0x0);
        gbc.writeMem(0xd6b3, { 0x81 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9277, gbc.sp());
        EXPECT(0xd6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd6b3));
        // 81 02BE
        gbc.setState(0x3893, 0x26d5, 0x9d10, 0x6449, 0xc2e3, 0x1363, 0x1, 0x0);
        gbc.writeMem(0x3893, { 0x81 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x26d5, gbc.sp());
        EXPECT(0x3894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02BF
        gbc.setState(0xb09, 0x3fa9, 0x9ab0, 0x5642, 0x4cb5, 0x6bcf, 0x0, 0x1);
        gbc.writeMem(0xb09, { 0x81 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3fa9, gbc.sp());
        EXPECT(0xb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02C0
        gbc.setState(0x4353, 0x4d52, 0x9640, 0x16e, 0x390, 0x1b8d, 0x0, 0x0);
        gbc.writeMem(0x4353, { 0x81 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4d52, gbc.sp());
        EXPECT(0x4354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02C1
        gbc.setState(0x5d0c, 0x2049, 0xabe0, 0xbb9, 0xec9d, 0xd832, 0x0, 0x0);
        gbc.writeMem(0x5d0c, { 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2049, gbc.sp());
        EXPECT(0x5d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02C2
        gbc.setState(0x939a, 0xdbfc, 0xf520, 0xe987, 0x8686, 0xd70d, 0x0, 0x0);
        gbc.writeMem(0x939a, { 0x81 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdbfc, gbc.sp());
        EXPECT(0x939b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x939a));
        // 81 02C3
        gbc.setState(0xd4e7, 0x1f64, 0x36b0, 0xffd7, 0xa570, 0xe234, 0x1, 0x1);
        gbc.writeMem(0xd4e7, { 0x81 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1f64, gbc.sp());
        EXPECT(0xd4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd4e7));
        // 81 02C4
        gbc.setState(0xc25e, 0x752c, 0x85a0, 0x7047, 0xd29a, 0xd2ce, 0x0, 0x1);
        gbc.writeMem(0xc25e, { 0x81 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x752c, gbc.sp());
        EXPECT(0xc25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc25e));
        // 81 02C5
        gbc.setState(0xa323, 0xe243, 0xc030, 0xafd5, 0x55c0, 0x1019, 0x0, 0x1);
        gbc.writeMem(0xa323, { 0x81 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe243, gbc.sp());
        EXPECT(0xa324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa323));
        // 81 02C6
        gbc.setState(0x2e0f, 0xfee9, 0xd160, 0xf5b3, 0x471d, 0x6454, 0x0, 0x0);
        gbc.writeMem(0x2e0f, { 0x81 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfee9, gbc.sp());
        EXPECT(0x2e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02C8
        gbc.setState(0xbc15, 0x7620, 0x9980, 0x861e, 0xa573, 0x62b7, 0x1, 0x1);
        gbc.writeMem(0xbc15, { 0x81 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7620, gbc.sp());
        EXPECT(0xbc16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbc15));
        // 81 02C9
        gbc.setState(0x4e9c, 0xd1d0, 0x9970, 0xec89, 0xffd7, 0x639, 0x1, 0x0);
        gbc.writeMem(0x4e9c, { 0x81 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd1d0, gbc.sp());
        EXPECT(0x4e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02CA
        gbc.setState(0x5b0, 0x2b1b, 0x4e00, 0x7706, 0x313e, 0xa311, 0x0, 0x1);
        gbc.writeMem(0x5b0, { 0x81 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2b1b, gbc.sp());
        EXPECT(0x5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02CB
        gbc.setState(0x324e, 0x463e, 0xb5a0, 0xef48, 0x8e53, 0xe5f6, 0x1, 0x0);
        gbc.writeMem(0x324e, { 0x81 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x463e, gbc.sp());
        EXPECT(0x324f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02CC
        gbc.setState(0x396, 0x45aa, 0x7ee0, 0x6118, 0xb3d5, 0x3ec2, 0x1, 0x0);
        gbc.writeMem(0x396, { 0x81 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x45aa, gbc.sp());
        EXPECT(0x397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02CD
        gbc.setState(0x7888, 0xd19e, 0xa230, 0x7d0, 0x829e, 0x65ea, 0x0, 0x1);
        gbc.writeMem(0x7888, { 0x81 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd19e, gbc.sp());
        EXPECT(0x7889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02CE
        gbc.setState(0xa309, 0x28ef, 0xae50, 0xd1a9, 0x33f2, 0xe823, 0x1, 0x1);
        gbc.writeMem(0xa309, { 0x81 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x28ef, gbc.sp());
        EXPECT(0xa30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa309));
        // 81 02D0
        gbc.setState(0x9ae8, 0xc657, 0x9c20, 0xec3e, 0x511b, 0x77b3, 0x0, 0x1);
        gbc.writeMem(0x9ae8, { 0x81 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc657, gbc.sp());
        EXPECT(0x9ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9ae8));
        // 81 02D1
        gbc.setState(0x5c38, 0x963a, 0xe0f0, 0x86c1, 0x6ab, 0xc308, 0x0, 0x1);
        gbc.writeMem(0x5c38, { 0x81 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x963a, gbc.sp());
        EXPECT(0x5c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02D2
        gbc.setState(0x2d1a, 0xc688, 0x6220, 0xb830, 0x22fa, 0x83cd, 0x0, 0x1);
        gbc.writeMem(0x2d1a, { 0x81 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc688, gbc.sp());
        EXPECT(0x2d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02D3
        gbc.setState(0xa2a0, 0x55a9, 0x2e00, 0xfdb7, 0x3bc0, 0xdff0, 0x0, 0x0);
        gbc.writeMem(0xa2a0, { 0x81 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x55a9, gbc.sp());
        EXPECT(0xa2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa2a0));
        // 81 02D4
        gbc.setState(0x2f60, 0xd109, 0x7170, 0xf510, 0x38ef, 0x55ff, 0x0, 0x1);
        gbc.writeMem(0x2f60, { 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd109, gbc.sp());
        EXPECT(0x2f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02D5
        gbc.setState(0x83fd, 0x8ee6, 0x1af0, 0xc8dd, 0xfa98, 0xe1f4, 0x0, 0x1);
        gbc.writeMem(0x83fd, { 0x81 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8ee6, gbc.sp());
        EXPECT(0x83fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x83fd));
        // 81 02D6
        gbc.setState(0x6d7e, 0x8ee9, 0x6ac0, 0x6695, 0xd8b3, 0x24a, 0x1, 0x1);
        gbc.writeMem(0x6d7e, { 0x81 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8ee9, gbc.sp());
        EXPECT(0x6d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02D7
        gbc.setState(0xe087, 0xa047, 0xbcd0, 0xe1, 0xda9f, 0xb194, 0x1, 0x1);
        gbc.writeMem(0xe087, { 0x81 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa047, gbc.sp());
        EXPECT(0xe088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe087));
        // 81 02D8
        gbc.setState(0xc7b0, 0x82ef, 0xaed0, 0x3b0d, 0x6552, 0xf8e1, 0x1, 0x1);
        gbc.writeMem(0xc7b0, { 0x81 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x82ef, gbc.sp());
        EXPECT(0xc7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc7b0));
        // 81 02D9
        gbc.setState(0xdf9, 0x3b5b, 0xb570, 0x3b71, 0xeb9b, 0x6616, 0x0, 0x1);
        gbc.writeMem(0xdf9, { 0x81 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3b5b, gbc.sp());
        EXPECT(0xdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02DA
        gbc.setState(0x7ea7, 0xcd6e, 0xaf50, 0xc18b, 0x6afc, 0x3126, 0x0, 0x0);
        gbc.writeMem(0x7ea7, { 0x81 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcd6e, gbc.sp());
        EXPECT(0x7ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02DB
        gbc.setState(0x45c6, 0x752c, 0x9360, 0xc013, 0xb463, 0x942a, 0x1, 0x0);
        gbc.writeMem(0x45c6, { 0x81 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x752c, gbc.sp());
        EXPECT(0x45c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02DC
        gbc.setState(0x6919, 0xf63b, 0xd000, 0xd7b9, 0xdc31, 0x807c, 0x1, 0x0);
        gbc.writeMem(0x6919, { 0x81 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf63b, gbc.sp());
        EXPECT(0x691a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02DD
        gbc.setState(0x2ab8, 0xc042, 0x6080, 0x71e7, 0xcc69, 0x39e0, 0x1, 0x0);
        gbc.writeMem(0x2ab8, { 0x81 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc042, gbc.sp());
        EXPECT(0x2ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02DE
        gbc.setState(0x89f9, 0x15cc, 0xf900, 0x347c, 0x6b7a, 0xceb1, 0x1, 0x1);
        gbc.writeMem(0x89f9, { 0x81 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x15cc, gbc.sp());
        EXPECT(0x89fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x89f9));
        // 81 02DF
        gbc.setState(0x331b, 0x1f98, 0x75e0, 0xb719, 0xa9c4, 0xdc93, 0x0, 0x1);
        gbc.writeMem(0x331b, { 0x81 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1f98, gbc.sp());
        EXPECT(0x331c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02E0
        gbc.setState(0x3435, 0xf37f, 0xbc30, 0xdbcf, 0xb660, 0x453a, 0x0, 0x0);
        gbc.writeMem(0x3435, { 0x81 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf37f, gbc.sp());
        EXPECT(0x3436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02E1
        gbc.setState(0xa872, 0xe4bb, 0x7e90, 0xb526, 0x6d09, 0x4c10, 0x0, 0x1);
        gbc.writeMem(0xa872, { 0x81 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe4bb, gbc.sp());
        EXPECT(0xa873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa872));
        // 81 02E2
        gbc.setState(0x38e0, 0x58b7, 0xf670, 0x944, 0xf5ef, 0x6497, 0x0, 0x0);
        gbc.writeMem(0x38e0, { 0x81 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x58b7, gbc.sp());
        EXPECT(0x38e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02E3
        gbc.setState(0xdda7, 0xb77c, 0x8400, 0xd640, 0x5c41, 0xab94, 0x1, 0x0);
        gbc.writeMem(0xdda7, { 0x81 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb77c, gbc.sp());
        EXPECT(0xdda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdda7));
        // 81 02E5
        gbc.setState(0x3ab4, 0xdea3, 0x2ea0, 0x16e9, 0x327, 0x332f, 0x0, 0x1);
        gbc.writeMem(0x3ab4, { 0x81 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdea3, gbc.sp());
        EXPECT(0x3ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02E6
        gbc.setState(0xed37, 0xc814, 0x2d60, 0x6b54, 0x7e87, 0xaa88, 0x0, 0x1);
        gbc.writeMem(0xed37, { 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc814, gbc.sp());
        EXPECT(0xed38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xed37));
        // 81 02E7
        gbc.setState(0xe63b, 0xbc4a, 0x2920, 0xada3, 0x3270, 0xaa3c, 0x0, 0x0);
        gbc.writeMem(0xe63b, { 0x81 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbc4a, gbc.sp());
        EXPECT(0xe63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe63b));
        // 81 02E8
        gbc.setState(0x871c, 0xc4ca, 0x4140, 0x8a1f, 0x64c7, 0xfd05, 0x0, 0x1);
        gbc.writeMem(0x871c, { 0x81 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc4ca, gbc.sp());
        EXPECT(0x871d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x871c));
        // 81 02E9
        gbc.setState(0x856e, 0xca60, 0xe360, 0x3046, 0x795a, 0x6c8c, 0x0, 0x0);
        gbc.writeMem(0x856e, { 0x81 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xca60, gbc.sp());
        EXPECT(0x856f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x856e));
        // 81 02EA
        gbc.setState(0x7026, 0xdae6, 0x5b0, 0xed48, 0xe9b3, 0xf6f4, 0x1, 0x0);
        gbc.writeMem(0x7026, { 0x81 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdae6, gbc.sp());
        EXPECT(0x7027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02EB
        gbc.setState(0xc8d1, 0x2bec, 0x1e10, 0x6d06, 0x314e, 0xac4a, 0x0, 0x1);
        gbc.writeMem(0xc8d1, { 0x81 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2bec, gbc.sp());
        EXPECT(0xc8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc8d1));
        // 81 02EC
        gbc.setState(0x764, 0x7050, 0x5be0, 0xa99b, 0x8a9f, 0x1498, 0x0, 0x1);
        gbc.writeMem(0x764, { 0x81 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7050, gbc.sp());
        EXPECT(0x765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02ED
        gbc.setState(0xdb9f, 0xace4, 0x3d00, 0xd434, 0xc3d2, 0x89c, 0x1, 0x1);
        gbc.writeMem(0xdb9f, { 0x81 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xace4, gbc.sp());
        EXPECT(0xdba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdb9f));
        // 81 02EE
        gbc.setState(0xc0dc, 0xb34f, 0x2f00, 0xb536, 0x375f, 0x7acf, 0x1, 0x0);
        gbc.writeMem(0xc0dc, { 0x81 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb34f, gbc.sp());
        EXPECT(0xc0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc0dc));
        // 81 02EF
        gbc.setState(0xd001, 0x39ae, 0xe5c0, 0x4ea5, 0xa60c, 0x3602, 0x1, 0x0);
        gbc.writeMem(0xd001, { 0x81 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x39ae, gbc.sp());
        EXPECT(0xd002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd001));
        // 81 02F0
        gbc.setState(0x9f32, 0x4069, 0x6fc0, 0x4a44, 0xa741, 0x1380, 0x0, 0x1);
        gbc.writeMem(0x9f32, { 0x81 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4069, gbc.sp());
        EXPECT(0x9f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9f32));
        // 81 02F1
        gbc.setState(0x1839, 0x686e, 0xfc60, 0x5d73, 0xc419, 0x6cf4, 0x1, 0x1);
        gbc.writeMem(0x1839, { 0x81 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x686e, gbc.sp());
        EXPECT(0x183a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02F2
        gbc.setState(0xe1e6, 0xaa57, 0x4aa0, 0x331a, 0x25d6, 0xf87f, 0x0, 0x1);
        gbc.writeMem(0xe1e6, { 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaa57, gbc.sp());
        EXPECT(0xe1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe1e6));
        // 81 02F3
        gbc.setState(0x790, 0xe21a, 0xb120, 0xeb72, 0x450b, 0xb664, 0x1, 0x0);
        gbc.writeMem(0x790, { 0x81 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe21a, gbc.sp());
        EXPECT(0x791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02F4
        gbc.setState(0x96fa, 0x7fc3, 0x2490, 0x77fd, 0xe2a3, 0x949c, 0x1, 0x1);
        gbc.writeMem(0x96fa, { 0x81 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7fc3, gbc.sp());
        EXPECT(0x96fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x96fa));
        // 81 02F5
        gbc.setState(0xea22, 0x11c7, 0x4de0, 0xaa5b, 0x20f2, 0xe049, 0x1, 0x1);
        gbc.writeMem(0xea22, { 0x81 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x11c7, gbc.sp());
        EXPECT(0xea23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xea22));
        // 81 02F6
        gbc.setState(0xc81f, 0x1267, 0xec90, 0xe22f, 0x6e0c, 0x63e8, 0x1, 0x1);
        gbc.writeMem(0xc81f, { 0x81 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1267, gbc.sp());
        EXPECT(0xc820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc81f));
        // 81 02F7
        gbc.setState(0xc73a, 0xc990, 0x8fe0, 0x96fa, 0x897f, 0x429e, 0x0, 0x0);
        gbc.writeMem(0xc73a, { 0x81 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc990, gbc.sp());
        EXPECT(0xc73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc73a));
        // 81 02F8
        gbc.setState(0x1bf1, 0x3269, 0x5950, 0x7a71, 0x568f, 0x23f7, 0x1, 0x1);
        gbc.writeMem(0x1bf1, { 0x81 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3269, gbc.sp());
        EXPECT(0x1bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02F9
        gbc.setState(0x47b8, 0x7e23, 0xa190, 0x7412, 0x67b1, 0xbddf, 0x0, 0x1);
        gbc.writeMem(0x47b8, { 0x81 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7e23, gbc.sp());
        EXPECT(0x47b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02FA
        gbc.setState(0x2be7, 0xa8ff, 0x92d0, 0xee4b, 0x61c3, 0xe403, 0x0, 0x0);
        gbc.writeMem(0x2be7, { 0x81 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa8ff, gbc.sp());
        EXPECT(0x2be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 02FB
        gbc.setState(0x5d2b, 0xe476, 0x93d0, 0xc975, 0x4b69, 0xb435, 0x0, 0x0);
        gbc.writeMem(0x5d2b, { 0x81 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe476, gbc.sp());
        EXPECT(0x5d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 02FC
        gbc.setState(0xd93a, 0x7c96, 0x26e0, 0x5441, 0x44db, 0x6500, 0x1, 0x1);
        gbc.writeMem(0xd93a, { 0x81 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7c96, gbc.sp());
        EXPECT(0xd93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd93a));
        // 81 02FD
        gbc.setState(0xbe3a, 0xf861, 0x8860, 0xf321, 0x5aa6, 0x1e4f, 0x0, 0x0);
        gbc.writeMem(0xbe3a, { 0x81 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf861, gbc.sp());
        EXPECT(0xbe3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbe3a));
        // 81 02FE
        gbc.setState(0xcb0f, 0x2055, 0x1580, 0xec62, 0xeec6, 0xe8b2, 0x1, 0x0);
        gbc.writeMem(0xcb0f, { 0x81 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2055, gbc.sp());
        EXPECT(0xcb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcb0f));
        // 81 0300
        gbc.setState(0xc44d, 0xcf4a, 0xcc60, 0x5850, 0x8c78, 0xfc4a, 0x1, 0x1);
        gbc.writeMem(0xc44d, { 0x81 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcf4a, gbc.sp());
        EXPECT(0xc44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc44d));
        // 81 0301
        gbc.setState(0xb82d, 0xd72, 0xc710, 0x892a, 0xde4c, 0x7e35, 0x1, 0x0);
        gbc.writeMem(0xb82d, { 0x81 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd72, gbc.sp());
        EXPECT(0xb82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb82d));
        // 81 0302
        gbc.setState(0xdba9, 0xf17, 0x4de0, 0x3213, 0x8f9e, 0x69b3, 0x0, 0x0);
        gbc.writeMem(0xdba9, { 0x81 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf17, gbc.sp());
        EXPECT(0xdbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdba9));
        // 81 0303
        gbc.setState(0x693d, 0x5b, 0xcd90, 0x4e47, 0x29a3, 0xcfe9, 0x1, 0x1);
        gbc.writeMem(0x693d, { 0x81 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5b, gbc.sp());
        EXPECT(0x693e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0304
        gbc.setState(0x9bb0, 0x2fb, 0x30a0, 0xf709, 0x5f8b, 0x37d0, 0x0, 0x1);
        gbc.writeMem(0x9bb0, { 0x81 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2fb, gbc.sp());
        EXPECT(0x9bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9bb0));
        // 81 0305
        gbc.setState(0xe40, 0x290a, 0xf8a0, 0xe9cd, 0x5d2a, 0xb95a, 0x1, 0x0);
        gbc.writeMem(0xe40, { 0x81 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x290a, gbc.sp());
        EXPECT(0xe41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0306
        gbc.setState(0xcaba, 0x82a, 0x39f0, 0x3e4b, 0xf3d, 0x41b4, 0x1, 0x0);
        gbc.writeMem(0xcaba, { 0x81 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x82a, gbc.sp());
        EXPECT(0xcabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcaba));
        // 81 0307
        gbc.setState(0x60d4, 0xc627, 0xda30, 0xca88, 0x7d1b, 0x452e, 0x0, 0x1);
        gbc.writeMem(0x60d4, { 0x81 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc627, gbc.sp());
        EXPECT(0x60d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0308
        gbc.setState(0x376a, 0xe1a4, 0x150, 0x66, 0xbedd, 0x466, 0x0, 0x0);
        gbc.writeMem(0x376a, { 0x81 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe1a4, gbc.sp());
        EXPECT(0x376b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0309
        gbc.setState(0xbbea, 0x8aa0, 0x3010, 0xe90c, 0xd83, 0x98a1, 0x0, 0x1);
        gbc.writeMem(0xbbea, { 0x81 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8aa0, gbc.sp());
        EXPECT(0xbbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbbea));
        // 81 030A
        gbc.setState(0xd4f4, 0x453e, 0x3a50, 0xa114, 0xff34, 0x7270, 0x0, 0x1);
        gbc.writeMem(0xd4f4, { 0x81 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x453e, gbc.sp());
        EXPECT(0xd4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd4f4));
        // 81 030B
        gbc.setState(0xdccb, 0x26f7, 0xd990, 0x1afa, 0xadd3, 0x43d1, 0x0, 0x1);
        gbc.writeMem(0xdccb, { 0x81 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x26f7, gbc.sp());
        EXPECT(0xdccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdccb));
        // 81 030C
        gbc.setState(0xa34, 0x1c0f, 0x8800, 0x4d44, 0x85de, 0x5071, 0x1, 0x1);
        gbc.writeMem(0xa34, { 0x81 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1c0f, gbc.sp());
        EXPECT(0xa35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 030D
        gbc.setState(0xdb02, 0xe9a0, 0xa8d0, 0x1fa6, 0xd5e7, 0x91f3, 0x1, 0x0);
        gbc.writeMem(0xdb02, { 0x81 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe9a0, gbc.sp());
        EXPECT(0xdb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdb02));
        // 81 030E
        gbc.setState(0x1831, 0xd2c7, 0x2780, 0xc2a5, 0xd37b, 0x79d4, 0x1, 0x0);
        gbc.writeMem(0x1831, { 0x81 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd2c7, gbc.sp());
        EXPECT(0x1832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 030F
        gbc.setState(0xdfe3, 0x283, 0xd0d0, 0x716, 0x3b05, 0xa4a5, 0x1, 0x1);
        gbc.writeMem(0xdfe3, { 0x81 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x283, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdfe3));
        // 81 0310
        gbc.setState(0x479, 0x5d8b, 0xc290, 0xade8, 0x8354, 0x280d, 0x0, 0x0);
        gbc.writeMem(0x479, { 0x81 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5d8b, gbc.sp());
        EXPECT(0x47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0311
        gbc.setState(0x1c27, 0x4ab, 0x4f20, 0x9b70, 0x8479, 0x6963, 0x0, 0x1);
        gbc.writeMem(0x1c27, { 0x81 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4ab, gbc.sp());
        EXPECT(0x1c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0312
        gbc.setState(0xe7db, 0xd432, 0xe130, 0x9964, 0x7e4, 0xdbf, 0x1, 0x1);
        gbc.writeMem(0xe7db, { 0x81 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd432, gbc.sp());
        EXPECT(0xe7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe7db));
        // 81 0314
        gbc.setState(0xcc23, 0x1ef8, 0xcd40, 0x6f46, 0xee68, 0x991f, 0x1, 0x1);
        gbc.writeMem(0xcc23, { 0x81 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0xcc24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcc23));
        // 81 0315
        gbc.setState(0x88e8, 0xac34, 0x1870, 0xe21, 0x68c3, 0x4675, 0x0, 0x1);
        gbc.writeMem(0x88e8, { 0x81 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xac34, gbc.sp());
        EXPECT(0x88e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x88e8));
        // 81 0317
        gbc.setState(0x772b, 0x9b76, 0x51c0, 0x89fc, 0xf6a0, 0x84e9, 0x1, 0x0);
        gbc.writeMem(0x772b, { 0x81 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9b76, gbc.sp());
        EXPECT(0x772c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0318
        gbc.setState(0x4fc6, 0xcdd7, 0x35a0, 0x75cf, 0x8a7c, 0xe418, 0x1, 0x1);
        gbc.writeMem(0x4fc6, { 0x81 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcdd7, gbc.sp());
        EXPECT(0x4fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0319
        gbc.setState(0x3c44, 0x20e5, 0xa990, 0x7e20, 0xc4ae, 0x5755, 0x0, 0x0);
        gbc.writeMem(0x3c44, { 0x81 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x20e5, gbc.sp());
        EXPECT(0x3c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 031A
        gbc.setState(0xd0fb, 0x435c, 0x79d0, 0xeb07, 0x8974, 0xdad4, 0x1, 0x1);
        gbc.writeMem(0xd0fb, { 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x435c, gbc.sp());
        EXPECT(0xd0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd0fb));
        // 81 031B
        gbc.setState(0x7fd5, 0x5d42, 0x5b70, 0x5432, 0xc226, 0xf374, 0x0, 0x1);
        gbc.writeMem(0x7fd5, { 0x81 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5d42, gbc.sp());
        EXPECT(0x7fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 031C
        gbc.setState(0x8fd6, 0xed72, 0xed80, 0x546d, 0x5961, 0x6019, 0x0, 0x0);
        gbc.writeMem(0x8fd6, { 0x81 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xed72, gbc.sp());
        EXPECT(0x8fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8fd6));
        // 81 031D
        gbc.setState(0x64fe, 0xea9c, 0x770, 0x2146, 0xac28, 0xdbfc, 0x0, 0x0);
        gbc.writeMem(0x64fe, { 0x81 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xea9c, gbc.sp());
        EXPECT(0x64ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 031E
        gbc.setState(0xa6a7, 0xf4c5, 0xf3d0, 0x77ca, 0x7bcc, 0x953a, 0x1, 0x0);
        gbc.writeMem(0xa6a7, { 0x81 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf4c5, gbc.sp());
        EXPECT(0xa6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa6a7));
        // 81 031F
        gbc.setState(0x4cf6, 0xfdbe, 0xecd0, 0x4778, 0x39d, 0x20a, 0x0, 0x0);
        gbc.writeMem(0x4cf6, { 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfdbe, gbc.sp());
        EXPECT(0x4cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0320
        gbc.setState(0x97f6, 0xdd1, 0x6440, 0x30e4, 0x7186, 0xc89c, 0x0, 0x0);
        gbc.writeMem(0x97f6, { 0x81 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdd1, gbc.sp());
        EXPECT(0x97f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x97f6));
        // 81 0321
        gbc.setState(0x2bb3, 0x29a0, 0x73a0, 0x77f9, 0x635e, 0x8dcd, 0x0, 0x0);
        gbc.writeMem(0x2bb3, { 0x81 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x29a0, gbc.sp());
        EXPECT(0x2bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0322
        gbc.setState(0x5499, 0x5143, 0xd800, 0xf142, 0x9900, 0xa8c7, 0x0, 0x1);
        gbc.writeMem(0x5499, { 0x81 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5143, gbc.sp());
        EXPECT(0x549a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0323
        gbc.setState(0x3b5e, 0x6628, 0xe0e0, 0xcc0b, 0xf498, 0xf56c, 0x0, 0x1);
        gbc.writeMem(0x3b5e, { 0x81 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6628, gbc.sp());
        EXPECT(0x3b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0324
        gbc.setState(0xec76, 0xb1f, 0xd360, 0x36f8, 0x443c, 0xf35e, 0x0, 0x1);
        gbc.writeMem(0xec76, { 0x81 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0xec77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xec76));
        // 81 0325
        gbc.setState(0xe078, 0xb028, 0x7ee0, 0x5c49, 0x95de, 0xf72, 0x1, 0x1);
        gbc.writeMem(0xe078, { 0x81 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb028, gbc.sp());
        EXPECT(0xe079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe078));
        // 81 0326
        gbc.setState(0xc7fa, 0x4cfe, 0x8510, 0x5e5e, 0x2a9f, 0xec5d, 0x0, 0x0);
        gbc.writeMem(0xc7fa, { 0x81 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4cfe, gbc.sp());
        EXPECT(0xc7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc7fa));
        // 81 0327
        gbc.setState(0xcdad, 0x53e6, 0x4800, 0x9e42, 0x2113, 0x6148, 0x0, 0x0);
        gbc.writeMem(0xcdad, { 0x81 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x53e6, gbc.sp());
        EXPECT(0xcdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcdad));
        // 81 0328
        gbc.setState(0x5ade, 0xcb2a, 0x960, 0x47ec, 0x895, 0xf239, 0x0, 0x0);
        gbc.writeMem(0x5ade, { 0x81 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcb2a, gbc.sp());
        EXPECT(0x5adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0329
        gbc.setState(0x352b, 0x5b5f, 0x75b0, 0xcff7, 0x56e0, 0xd63, 0x0, 0x1);
        gbc.writeMem(0x352b, { 0x81 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5b5f, gbc.sp());
        EXPECT(0x352c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 032A
        gbc.setState(0xe140, 0x5a2a, 0x9250, 0x1606, 0xef83, 0x60c8, 0x0, 0x1);
        gbc.writeMem(0xe140, { 0x81 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5a2a, gbc.sp());
        EXPECT(0xe141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe140));
        // 81 032B
        gbc.setState(0x4565, 0x40c3, 0x130, 0x38f9, 0x481b, 0xe20b, 0x0, 0x0);
        gbc.writeMem(0x4565, { 0x81 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x40c3, gbc.sp());
        EXPECT(0x4566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 032C
        gbc.setState(0xd45e, 0x26f5, 0x2b90, 0x9d34, 0x6d8f, 0x2546, 0x0, 0x0);
        gbc.writeMem(0xd45e, { 0x81 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x26f5, gbc.sp());
        EXPECT(0xd45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd45e));
        // 81 032D
        gbc.setState(0x59fe, 0xaaff, 0x6b20, 0x830b, 0x3b4a, 0x160e, 0x0, 0x0);
        gbc.writeMem(0x59fe, { 0x81 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaaff, gbc.sp());
        EXPECT(0x59ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 032E
        gbc.setState(0x663b, 0x6233, 0xd170, 0x423d, 0x545e, 0x6ed1, 0x0, 0x0);
        gbc.writeMem(0x663b, { 0x81 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6233, gbc.sp());
        EXPECT(0x663c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0330
        gbc.setState(0xafe5, 0x68fe, 0xd910, 0x9012, 0x59fc, 0x6fd1, 0x1, 0x0);
        gbc.writeMem(0xafe5, { 0x81 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x68fe, gbc.sp());
        EXPECT(0xafe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xafe5));
        // 81 0331
        gbc.setState(0xb348, 0x3789, 0xa880, 0xc9b5, 0xd3da, 0xc4e4, 0x0, 0x0);
        gbc.writeMem(0xb348, { 0x81 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3789, gbc.sp());
        EXPECT(0xb349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb348));
        // 81 0332
        gbc.setState(0xaf93, 0x4ca1, 0xd840, 0x93f2, 0x8ddb, 0x5741, 0x1, 0x1);
        gbc.writeMem(0xaf93, { 0x81 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4ca1, gbc.sp());
        EXPECT(0xaf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xaf93));
        // 81 0333
        gbc.setState(0x8906, 0x1ef3, 0x2470, 0xfe24, 0xf6ca, 0xd2d9, 0x0, 0x1);
        gbc.writeMem(0x8906, { 0x81 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1ef3, gbc.sp());
        EXPECT(0x8907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8906));
        // 81 0334
        gbc.setState(0xa06b, 0x5b94, 0xbfc0, 0x2ea3, 0x8160, 0xa1fb, 0x1, 0x1);
        gbc.writeMem(0xa06b, { 0x81 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5b94, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa06b));
        // 81 0335
        gbc.setState(0x381b, 0x1161, 0xc500, 0x8c1b, 0x9cf3, 0x2c77, 0x0, 0x1);
        gbc.writeMem(0x381b, { 0x81 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1161, gbc.sp());
        EXPECT(0x381c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0336
        gbc.setState(0x6709, 0x2f44, 0x56e0, 0x4e88, 0xb8e4, 0x3877, 0x0, 0x1);
        gbc.writeMem(0x6709, { 0x81 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2f44, gbc.sp());
        EXPECT(0x670a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0337
        gbc.setState(0x4a31, 0xc32e, 0x3bd0, 0xc666, 0xb150, 0x9676, 0x0, 0x0);
        gbc.writeMem(0x4a31, { 0x81 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc32e, gbc.sp());
        EXPECT(0x4a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0338
        gbc.setState(0x8891, 0x8496, 0x5d90, 0xcf3a, 0x93d2, 0xb5be, 0x1, 0x0);
        gbc.writeMem(0x8891, { 0x81 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8496, gbc.sp());
        EXPECT(0x8892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8891));
        // 81 0339
        gbc.setState(0xa0cb, 0x52c0, 0x63a0, 0x88f2, 0xa984, 0x74db, 0x0, 0x1);
        gbc.writeMem(0xa0cb, { 0x81 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x52c0, gbc.sp());
        EXPECT(0xa0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa0cb));
        // 81 033A
        gbc.setState(0x98ba, 0x7bd5, 0x1130, 0x49c, 0x3c2a, 0xd046, 0x0, 0x1);
        gbc.writeMem(0x98ba, { 0x81 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7bd5, gbc.sp());
        EXPECT(0x98bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x98ba));
        // 81 033B
        gbc.setState(0x5779, 0x9cea, 0x96b0, 0x2f35, 0xc38a, 0x6d37, 0x1, 0x1);
        gbc.writeMem(0x5779, { 0x81 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9cea, gbc.sp());
        EXPECT(0x577a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 033C
        gbc.setState(0xdc66, 0x2da7, 0xf160, 0x4708, 0x797a, 0x65f4, 0x0, 0x0);
        gbc.writeMem(0xdc66, { 0x81 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2da7, gbc.sp());
        EXPECT(0xdc67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdc66));
        // 81 033D
        gbc.setState(0xaaf, 0x5d9a, 0x8ed0, 0xe75a, 0x77a7, 0x46dd, 0x0, 0x0);
        gbc.writeMem(0xaaf, { 0x81 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5d9a, gbc.sp());
        EXPECT(0xab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 033E
        gbc.setState(0xbd33, 0x8ce4, 0x40e0, 0xe39a, 0xba71, 0xd07c, 0x0, 0x1);
        gbc.writeMem(0xbd33, { 0x81 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8ce4, gbc.sp());
        EXPECT(0xbd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbd33));
        // 81 033F
        gbc.setState(0x5a94, 0x59e3, 0x8980, 0xf737, 0x8c65, 0xd073, 0x0, 0x0);
        gbc.writeMem(0x5a94, { 0x81 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x59e3, gbc.sp());
        EXPECT(0x5a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0340
        gbc.setState(0x452b, 0x5ac1, 0x5420, 0x84a0, 0x2511, 0xd3de, 0x1, 0x1);
        gbc.writeMem(0x452b, { 0x81 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5ac1, gbc.sp());
        EXPECT(0x452c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0341
        gbc.setState(0xcbe2, 0xe918, 0x4fb0, 0xc743, 0xb73f, 0xcc70, 0x0, 0x1);
        gbc.writeMem(0xcbe2, { 0x81 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe918, gbc.sp());
        EXPECT(0xcbe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcbe2));
        // 81 0342
        gbc.setState(0x99e9, 0xff86, 0xb40, 0x9efb, 0xd953, 0x627f, 0x0, 0x1);
        gbc.writeMem(0x99e9, { 0x81 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xff86, gbc.sp());
        EXPECT(0x99ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x99e9));
        // 81 0343
        gbc.setState(0x9ec3, 0xc5a1, 0xdb60, 0x19aa, 0x3be2, 0xc442, 0x1, 0x0);
        gbc.writeMem(0x9ec3, { 0x81 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc5a1, gbc.sp());
        EXPECT(0x9ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9ec3));
        // 81 0344
        gbc.setState(0x53f3, 0x35b0, 0x3490, 0x3edc, 0x926, 0x4d46, 0x0, 0x1);
        gbc.writeMem(0x53f3, { 0x81 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x35b0, gbc.sp());
        EXPECT(0x53f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0345
        gbc.setState(0x2a28, 0xdaae, 0xf1e0, 0xda4e, 0x9e8d, 0x78fc, 0x0, 0x1);
        gbc.writeMem(0x2a28, { 0x81 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdaae, gbc.sp());
        EXPECT(0x2a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0346
        gbc.setState(0xe1d1, 0x4b65, 0x4940, 0x18c4, 0xb139, 0x9307, 0x0, 0x0);
        gbc.writeMem(0xe1d1, { 0x81 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4b65, gbc.sp());
        EXPECT(0xe1d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe1d1));
        // 81 0347
        gbc.setState(0x74, 0xf3d6, 0xe5f0, 0xe3a6, 0x355c, 0x16c7, 0x1, 0x0);
        gbc.writeMem(0x74, { 0x81 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf3d6, gbc.sp());
        EXPECT(0x75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0348
        gbc.setState(0x8a2d, 0x11d2, 0xf550, 0xd407, 0x3b3e, 0x16ca, 0x1, 0x1);
        gbc.writeMem(0x8a2d, { 0x81 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x11d2, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8a2d));
        // 81 0349
        gbc.setState(0x61a9, 0x6268, 0x28e0, 0x676c, 0x2017, 0x6314, 0x0, 0x1);
        gbc.writeMem(0x61a9, { 0x81 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6268, gbc.sp());
        EXPECT(0x61aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 034A
        gbc.setState(0xb269, 0x899b, 0x1990, 0x83ed, 0x1fcd, 0x1a2a, 0x1, 0x0);
        gbc.writeMem(0xb269, { 0x81 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0xb26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb269));
        // 81 034B
        gbc.setState(0x9c58, 0x8bd6, 0x5590, 0x9814, 0x3131, 0xed94, 0x0, 0x0);
        gbc.writeMem(0x9c58, { 0x81 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8bd6, gbc.sp());
        EXPECT(0x9c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9c58));
        // 81 034C
        gbc.setState(0x5d3, 0xd695, 0x67d0, 0x9a69, 0x7a05, 0x9d59, 0x0, 0x0);
        gbc.writeMem(0x5d3, { 0x81 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd695, gbc.sp());
        EXPECT(0x5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 034D
        gbc.setState(0x1861, 0x1cda, 0xb790, 0x2b0b, 0xd856, 0x5d18, 0x1, 0x0);
        gbc.writeMem(0x1861, { 0x81 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1cda, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 034E
        gbc.setState(0xd4d1, 0xfa31, 0x6360, 0xdffb, 0x613a, 0x584e, 0x1, 0x1);
        gbc.writeMem(0xd4d1, { 0x81 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfa31, gbc.sp());
        EXPECT(0xd4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd4d1));
        // 81 034F
        gbc.setState(0x72d3, 0xea20, 0xa9a0, 0xa34b, 0x5377, 0x8ad6, 0x0, 0x0);
        gbc.writeMem(0x72d3, { 0x81 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xea20, gbc.sp());
        EXPECT(0x72d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0350
        gbc.setState(0xce8e, 0xb185, 0x2ad0, 0xe765, 0xe422, 0xa516, 0x1, 0x1);
        gbc.writeMem(0xce8e, { 0x81 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb185, gbc.sp());
        EXPECT(0xce8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xce8e));
        // 81 0351
        gbc.setState(0xd035, 0xb088, 0x43c0, 0xf5d0, 0xb039, 0x5af9, 0x1, 0x1);
        gbc.writeMem(0xd035, { 0x81 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb088, gbc.sp());
        EXPECT(0xd036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd035));
        // 81 0352
        gbc.setState(0x709b, 0xdae1, 0x1e00, 0xe826, 0x7af7, 0xa0a4, 0x1, 0x1);
        gbc.writeMem(0x709b, { 0x81 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdae1, gbc.sp());
        EXPECT(0x709c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0353
        gbc.setState(0xeac0, 0x11f9, 0x7030, 0x5c29, 0x17f9, 0x44aa, 0x0, 0x1);
        gbc.writeMem(0xeac0, { 0x81 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x11f9, gbc.sp());
        EXPECT(0xeac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xeac0));
        // 81 0354
        gbc.setState(0x97c7, 0x99ed, 0x940, 0xa044, 0x22d6, 0x38c8, 0x1, 0x0);
        gbc.writeMem(0x97c7, { 0x81 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x99ed, gbc.sp());
        EXPECT(0x97c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x97c7));
        // 81 0355
        gbc.setState(0x11b9, 0x3fbe, 0xcd10, 0x354e, 0xeb81, 0x3a2a, 0x1, 0x1);
        gbc.writeMem(0x11b9, { 0x81 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3fbe, gbc.sp());
        EXPECT(0x11ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0356
        gbc.setState(0x321a, 0xcc8, 0xbfc0, 0xcb06, 0x4c9f, 0xe84a, 0x0, 0x0);
        gbc.writeMem(0x321a, { 0x81 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcc8, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0357
        gbc.setState(0xb5ed, 0x5c4b, 0x840, 0xdaf3, 0x281f, 0x999a, 0x0, 0x1);
        gbc.writeMem(0xb5ed, { 0x81 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5c4b, gbc.sp());
        EXPECT(0xb5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb5ed));
        // 81 0358
        gbc.setState(0xed30, 0xb394, 0xe050, 0x9233, 0xe689, 0xaefa, 0x0, 0x1);
        gbc.writeMem(0xed30, { 0x81 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb394, gbc.sp());
        EXPECT(0xed31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xed30));
        // 81 0359
        gbc.setState(0xa2db, 0x2448, 0x9440, 0xb5f8, 0xfbdd, 0x56ca, 0x1, 0x0);
        gbc.writeMem(0xa2db, { 0x81 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2448, gbc.sp());
        EXPECT(0xa2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa2db));
        // 81 035A
        gbc.setState(0xc6ba, 0xc3e0, 0x9360, 0xc71a, 0x789f, 0x1f2, 0x1, 0x1);
        gbc.writeMem(0xc6ba, { 0x81 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc3e0, gbc.sp());
        EXPECT(0xc6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc6ba));
        // 81 035B
        gbc.setState(0xa0e4, 0xc06e, 0x5bd0, 0x22e6, 0x56ce, 0x3302, 0x0, 0x0);
        gbc.writeMem(0xa0e4, { 0x81 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc06e, gbc.sp());
        EXPECT(0xa0e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa0e4));
        // 81 035E
        gbc.setState(0xecb6, 0x288, 0x49f0, 0x6d74, 0x5737, 0x6437, 0x0, 0x1);
        gbc.writeMem(0xecb6, { 0x81 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x288, gbc.sp());
        EXPECT(0xecb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xecb6));
        // 81 035F
        gbc.setState(0x7913, 0x92a6, 0xbcf0, 0x4232, 0x8480, 0x44cc, 0x0, 0x0);
        gbc.writeMem(0x7913, { 0x81 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x92a6, gbc.sp());
        EXPECT(0x7914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0360
        gbc.setState(0x430c, 0x6f68, 0x6140, 0xeb0b, 0xfb08, 0x4e64, 0x1, 0x1);
        gbc.writeMem(0x430c, { 0x81 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6f68, gbc.sp());
        EXPECT(0x430d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0361
        gbc.setState(0x3a9f, 0xcb2e, 0x3e80, 0x9cea, 0xe375, 0x9c7b, 0x1, 0x1);
        gbc.writeMem(0x3a9f, { 0x81 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcb2e, gbc.sp());
        EXPECT(0x3aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0362
        gbc.setState(0x3de0, 0xbc0b, 0x72a0, 0x30a8, 0xaec3, 0xcc59, 0x0, 0x0);
        gbc.writeMem(0x3de0, { 0x81 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbc0b, gbc.sp());
        EXPECT(0x3de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0363
        gbc.setState(0x754b, 0xf667, 0xd120, 0x5c84, 0xe8a9, 0x2b31, 0x0, 0x1);
        gbc.writeMem(0x754b, { 0x81 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf667, gbc.sp());
        EXPECT(0x754c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0364
        gbc.setState(0x8439, 0x1066, 0xaa10, 0x19c5, 0xb2fd, 0xd364, 0x0, 0x1);
        gbc.writeMem(0x8439, { 0x81 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1066, gbc.sp());
        EXPECT(0x843a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8439));
        // 81 0365
        gbc.setState(0x105f, 0xd4db, 0x3ba0, 0xe2fc, 0xd180, 0xfec6, 0x0, 0x1);
        gbc.writeMem(0x105f, { 0x81 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd4db, gbc.sp());
        EXPECT(0x1060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0366
        gbc.setState(0xe577, 0x4649, 0x6720, 0x5c19, 0x413f, 0xa95, 0x0, 0x1);
        gbc.writeMem(0xe577, { 0x81 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4649, gbc.sp());
        EXPECT(0xe578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe577));
        // 81 0367
        gbc.setState(0x4909, 0xc580, 0x6a70, 0xcf8, 0x17e1, 0x974, 0x1, 0x0);
        gbc.writeMem(0x4909, { 0x81 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc580, gbc.sp());
        EXPECT(0x490a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0368
        gbc.setState(0x473a, 0xda84, 0x3d50, 0xeec5, 0x8e6d, 0x7b2e, 0x0, 0x0);
        gbc.writeMem(0x473a, { 0x81 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xda84, gbc.sp());
        EXPECT(0x473b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0369
        gbc.setState(0xe1dd, 0x2515, 0x89e0, 0x2b58, 0x58a1, 0xe51, 0x0, 0x0);
        gbc.writeMem(0xe1dd, { 0x81 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2515, gbc.sp());
        EXPECT(0xe1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe1dd));
        // 81 036A
        gbc.setState(0x7f35, 0xd86e, 0x3ee0, 0xb2a7, 0xae61, 0x9282, 0x1, 0x1);
        gbc.writeMem(0x7f35, { 0x81 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd86e, gbc.sp());
        EXPECT(0x7f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 036B
        gbc.setState(0x3385, 0x2085, 0xb2a0, 0x15dd, 0x2705, 0x8a0f, 0x0, 0x1);
        gbc.writeMem(0x3385, { 0x81 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2085, gbc.sp());
        EXPECT(0x3386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 036C
        gbc.setState(0xa9bc, 0x3cb4, 0x8aa0, 0x4a0a, 0x1006, 0x19f4, 0x1, 0x0);
        gbc.writeMem(0xa9bc, { 0x81 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3cb4, gbc.sp());
        EXPECT(0xa9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa9bc));
        // 81 036D
        gbc.setState(0x8c80, 0xaf7e, 0x7c50, 0x5f3d, 0xd90c, 0x5040, 0x1, 0x1);
        gbc.writeMem(0x8c80, { 0x81 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaf7e, gbc.sp());
        EXPECT(0x8c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8c80));
        // 81 036E
        gbc.setState(0x73c7, 0x12d5, 0xc930, 0x24a2, 0x9d17, 0x9c63, 0x1, 0x1);
        gbc.writeMem(0x73c7, { 0x81 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x12d5, gbc.sp());
        EXPECT(0x73c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 036F
        gbc.setState(0xa118, 0x34a2, 0x4810, 0xbeb9, 0xdff0, 0xb9bf, 0x1, 0x1);
        gbc.writeMem(0xa118, { 0x81 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x34a2, gbc.sp());
        EXPECT(0xa119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa118));
        // 81 0370
        gbc.setState(0xe555, 0x9b72, 0x4370, 0x7d47, 0x732f, 0xaef8, 0x1, 0x0);
        gbc.writeMem(0xe555, { 0x81 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9b72, gbc.sp());
        EXPECT(0xe556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe555));
        // 81 0371
        gbc.setState(0x6aff, 0x9c51, 0x72e0, 0xa130, 0x6714, 0x3e2b, 0x1, 0x0);
        gbc.writeMem(0x6aff, { 0x81 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9c51, gbc.sp());
        EXPECT(0x6b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0372
        gbc.setState(0x722c, 0x357a, 0x4ad0, 0xcfe0, 0x418b, 0x54b0, 0x0, 0x1);
        gbc.writeMem(0x722c, { 0x81 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x357a, gbc.sp());
        EXPECT(0x722d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0373
        gbc.setState(0x5693, 0x5750, 0x6420, 0x1eeb, 0x1d9b, 0xcbec, 0x0, 0x0);
        gbc.writeMem(0x5693, { 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5750, gbc.sp());
        EXPECT(0x5694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0374
        gbc.setState(0x5a5, 0x2c51, 0x1890, 0x89b9, 0x6dc3, 0x1120, 0x1, 0x1);
        gbc.writeMem(0x5a5, { 0x81 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2c51, gbc.sp());
        EXPECT(0x5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0375
        gbc.setState(0xac12, 0xfa3a, 0x1720, 0xadfd, 0xa565, 0xd779, 0x0, 0x1);
        gbc.writeMem(0xac12, { 0x81 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfa3a, gbc.sp());
        EXPECT(0xac13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xac12));
        // 81 0377
        gbc.setState(0x53ac, 0xc295, 0x9a50, 0x2c39, 0x4f5f, 0xbdbd, 0x1, 0x1);
        gbc.writeMem(0x53ac, { 0x81 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc295, gbc.sp());
        EXPECT(0x53ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0378
        gbc.setState(0x4a0f, 0x4dd9, 0xf5e0, 0x4e04, 0xffeb, 0xbe98, 0x0, 0x0);
        gbc.writeMem(0x4a0f, { 0x81 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4dd9, gbc.sp());
        EXPECT(0x4a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0379
        gbc.setState(0x2b19, 0xe675, 0x9d40, 0x614a, 0xa24e, 0x5325, 0x0, 0x1);
        gbc.writeMem(0x2b19, { 0x81 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe675, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 037A
        gbc.setState(0x12d, 0xcf23, 0xa880, 0xce0c, 0xbe06, 0x75e0, 0x1, 0x0);
        gbc.writeMem(0x12d, { 0x81 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcf23, gbc.sp());
        EXPECT(0x12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 037B
        gbc.setState(0x39fe, 0x9d97, 0x2740, 0x1ef6, 0x6930, 0x776a, 0x0, 0x0);
        gbc.writeMem(0x39fe, { 0x81 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9d97, gbc.sp());
        EXPECT(0x39ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 037C
        gbc.setState(0x2f0b, 0xbbe7, 0xdc00, 0x6fee, 0xf08b, 0xd811, 0x0, 0x0);
        gbc.writeMem(0x2f0b, { 0x81 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbbe7, gbc.sp());
        EXPECT(0x2f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 037D
        gbc.setState(0x44a6, 0xb941, 0xe220, 0xf36d, 0xed6f, 0x7bc4, 0x0, 0x1);
        gbc.writeMem(0x44a6, { 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb941, gbc.sp());
        EXPECT(0x44a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 037E
        gbc.setState(0xdf40, 0x243c, 0x1150, 0x7d73, 0x2904, 0x2439, 0x1, 0x0);
        gbc.writeMem(0xdf40, { 0x81 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x243c, gbc.sp());
        EXPECT(0xdf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdf40));
        // 81 037F
        gbc.setState(0x9a15, 0xddbb, 0xe270, 0x4240, 0xd8ad, 0x191b, 0x1, 0x0);
        gbc.writeMem(0x9a15, { 0x81 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xddbb, gbc.sp());
        EXPECT(0x9a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9a15));
        // 81 0380
        gbc.setState(0x15a4, 0x5de0, 0x5090, 0xe4c2, 0x697e, 0x4e75, 0x1, 0x0);
        gbc.writeMem(0x15a4, { 0x81 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5de0, gbc.sp());
        EXPECT(0x15a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0381
        gbc.setState(0xd82d, 0xe67d, 0xe30, 0xb787, 0x4a6c, 0x3b1a, 0x1, 0x0);
        gbc.writeMem(0xd82d, { 0x81 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe67d, gbc.sp());
        EXPECT(0xd82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd82d));
        // 81 0382
        gbc.setState(0x764, 0xbd59, 0xfe10, 0xa650, 0x6f59, 0x444, 0x1, 0x1);
        gbc.writeMem(0x764, { 0x81 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbd59, gbc.sp());
        EXPECT(0x765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0384
        gbc.setState(0x1500, 0x7543, 0x62b0, 0xde0a, 0xb0f, 0x852b, 0x1, 0x1);
        gbc.writeMem(0x1500, { 0x81 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7543, gbc.sp());
        EXPECT(0x1501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0385
        gbc.setState(0x7359, 0x5c80, 0xd2f0, 0x9ed6, 0xb704, 0x4f62, 0x1, 0x0);
        gbc.writeMem(0x7359, { 0x81 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5c80, gbc.sp());
        EXPECT(0x735a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0386
        gbc.setState(0xbc74, 0x19c2, 0xb530, 0x2bff, 0x2904, 0xca47, 0x1, 0x0);
        gbc.writeMem(0xbc74, { 0x81 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x19c2, gbc.sp());
        EXPECT(0xbc75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbc74));
        // 81 0387
        gbc.setState(0x98e7, 0x7647, 0x8ae0, 0x882e, 0x3393, 0x6fb6, 0x1, 0x1);
        gbc.writeMem(0x98e7, { 0x81 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7647, gbc.sp());
        EXPECT(0x98e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x98e7));
        // 81 0388
        gbc.setState(0x2ecd, 0x14d3, 0xecd0, 0x4516, 0xffee, 0xb76d, 0x0, 0x0);
        gbc.writeMem(0x2ecd, { 0x81 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x14d3, gbc.sp());
        EXPECT(0x2ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 0389
        gbc.setState(0x657d, 0xeb07, 0xb300, 0x777f, 0x86ef, 0x8d55, 0x0, 0x1);
        gbc.writeMem(0x657d, { 0x81 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xeb07, gbc.sp());
        EXPECT(0x657e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 038A
        gbc.setState(0xd1be, 0xc921, 0x4fd0, 0xbe4f, 0xdd00, 0xeaf4, 0x0, 0x1);
        gbc.writeMem(0xd1be, { 0x81 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc921, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd1be));
        // 81 038B
        gbc.setState(0x1962, 0xf804, 0x8090, 0xeb7, 0x1651, 0x234f, 0x1, 0x0);
        gbc.writeMem(0x1962, { 0x81 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf804, gbc.sp());
        EXPECT(0x1963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 038C
        gbc.setState(0x5cda, 0x314, 0x4180, 0x3791, 0x8e89, 0x512, 0x0, 0x1);
        gbc.writeMem(0x5cda, { 0x81 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x314, gbc.sp());
        EXPECT(0x5cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 038E
        gbc.setState(0x9da9, 0x72f3, 0x35e0, 0x563a, 0xd414, 0x3c94, 0x1, 0x0);
        gbc.writeMem(0x9da9, { 0x81 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x72f3, gbc.sp());
        EXPECT(0x9daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9da9));
        // 81 038F
        gbc.setState(0x4519, 0x78a9, 0x3f30, 0x4994, 0x9d86, 0x19b4, 0x1, 0x0);
        gbc.writeMem(0x4519, { 0x81 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x78a9, gbc.sp());
        EXPECT(0x451a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0390
        gbc.setState(0xcaa2, 0xa8cb, 0x8810, 0xf98b, 0x5ff, 0x53ae, 0x0, 0x1);
        gbc.writeMem(0xcaa2, { 0x81 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa8cb, gbc.sp());
        EXPECT(0xcaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcaa2));
        // 81 0391
        gbc.setState(0x7f3a, 0xcb80, 0x7750, 0x37a, 0x50c6, 0xb23b, 0x0, 0x1);
        gbc.writeMem(0x7f3a, { 0x81 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcb80, gbc.sp());
        EXPECT(0x7f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0392
        gbc.setState(0x1eae, 0x56ed, 0x11c0, 0xaf90, 0xc073, 0x6f6a, 0x0, 0x0);
        gbc.writeMem(0x1eae, { 0x81 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x56ed, gbc.sp());
        EXPECT(0x1eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0393
        gbc.setState(0x3701, 0x5011, 0x6ae0, 0x465e, 0x861b, 0xc4f7, 0x1, 0x1);
        gbc.writeMem(0x3701, { 0x81 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5011, gbc.sp());
        EXPECT(0x3702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0394
        gbc.setState(0x8cde, 0x193e, 0xb880, 0x7667, 0x27de, 0x57c6, 0x1, 0x1);
        gbc.writeMem(0x8cde, { 0x81 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x193e, gbc.sp());
        EXPECT(0x8cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8cde));
        // 81 0395
        gbc.setState(0x9924, 0xd3af, 0x2a0, 0xa2ab, 0xfa60, 0x4346, 0x0, 0x1);
        gbc.writeMem(0x9924, { 0x81 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd3af, gbc.sp());
        EXPECT(0x9925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9924));
        // 81 0396
        gbc.setState(0x2f8b, 0xf9e4, 0x1190, 0x257a, 0xc2e7, 0x91c, 0x1, 0x0);
        gbc.writeMem(0x2f8b, { 0x81 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf9e4, gbc.sp());
        EXPECT(0x2f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0397
        gbc.setState(0x4464, 0x6ec2, 0x3e60, 0xc18e, 0x3b30, 0x6a55, 0x1, 0x1);
        gbc.writeMem(0x4464, { 0x81 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6ec2, gbc.sp());
        EXPECT(0x4465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0398
        gbc.setState(0x78c2, 0x20f4, 0xb110, 0x9721, 0xf8ff, 0xe61b, 0x0, 0x1);
        gbc.writeMem(0x78c2, { 0x81 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x20f4, gbc.sp());
        EXPECT(0x78c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 0399
        gbc.setState(0x5717, 0xe839, 0xe8e0, 0xc435, 0x52cf, 0x33c7, 0x0, 0x1);
        gbc.writeMem(0x5717, { 0x81 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe839, gbc.sp());
        EXPECT(0x5718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 039A
        gbc.setState(0x2c60, 0xdc17, 0x2670, 0xe553, 0xae5f, 0xd52a, 0x0, 0x1);
        gbc.writeMem(0x2c60, { 0x81 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdc17, gbc.sp());
        EXPECT(0x2c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 039B
        gbc.setState(0x64f5, 0xfd7e, 0x9b10, 0xcdb3, 0x1e40, 0x42b, 0x0, 0x1);
        gbc.writeMem(0x64f5, { 0x81 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfd7e, gbc.sp());
        EXPECT(0x64f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 039C
        gbc.setState(0x3cf1, 0xb103, 0x1800, 0xa511, 0x743, 0xbf7b, 0x1, 0x1);
        gbc.writeMem(0x3cf1, { 0x81 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb103, gbc.sp());
        EXPECT(0x3cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 039D
        gbc.setState(0x8c8e, 0xc238, 0x7d90, 0xe497, 0x5658, 0xb235, 0x1, 0x1);
        gbc.writeMem(0x8c8e, { 0x81 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc238, gbc.sp());
        EXPECT(0x8c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8c8e));
        // 81 039E
        gbc.setState(0x64a0, 0xc40c, 0x1980, 0x63d3, 0x24a5, 0x37ea, 0x0, 0x0);
        gbc.writeMem(0x64a0, { 0x81 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc40c, gbc.sp());
        EXPECT(0x64a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 039F
        gbc.setState(0x6283, 0xc39f, 0xfb80, 0xac3f, 0xc66b, 0x1c3b, 0x0, 0x0);
        gbc.writeMem(0x6283, { 0x81 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc39f, gbc.sp());
        EXPECT(0x6284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03A0
        gbc.setState(0x39da, 0xa8ee, 0xd7b0, 0xae85, 0x151b, 0x1c5f, 0x1, 0x0);
        gbc.writeMem(0x39da, { 0x81 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa8ee, gbc.sp());
        EXPECT(0x39db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03A1
        gbc.setState(0x27ca, 0x23c2, 0x33e0, 0x37d6, 0x3b34, 0x9bef, 0x0, 0x0);
        gbc.writeMem(0x27ca, { 0x81 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x23c2, gbc.sp());
        EXPECT(0x27cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03A3
        gbc.setState(0x204a, 0xcd80, 0xb610, 0x6121, 0x19d6, 0xc29b, 0x1, 0x0);
        gbc.writeMem(0x204a, { 0x81 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcd80, gbc.sp());
        EXPECT(0x204b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03A4
        gbc.setState(0x9146, 0x5fe3, 0xef30, 0x71fe, 0x7f45, 0xc6e5, 0x1, 0x1);
        gbc.writeMem(0x9146, { 0x81 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5fe3, gbc.sp());
        EXPECT(0x9147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9146));
        // 81 03A5
        gbc.setState(0x724e, 0xe8fd, 0x4260, 0x98d4, 0xd809, 0x9501, 0x0, 0x0);
        gbc.writeMem(0x724e, { 0x81 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe8fd, gbc.sp());
        EXPECT(0x724f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03A6
        gbc.setState(0x7676, 0x57bc, 0xa620, 0x8efc, 0x41ab, 0x11c3, 0x0, 0x0);
        gbc.writeMem(0x7676, { 0x81 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x57bc, gbc.sp());
        EXPECT(0x7677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03A7
        gbc.setState(0xa633, 0x12e4, 0xb0f0, 0x42e5, 0x822e, 0xb832, 0x0, 0x1);
        gbc.writeMem(0xa633, { 0x81 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x12e4, gbc.sp());
        EXPECT(0xa634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa633));
        // 81 03A8
        gbc.setState(0xcd1b, 0xb0eb, 0x4ed0, 0x9176, 0xac14, 0x55e2, 0x1, 0x1);
        gbc.writeMem(0xcd1b, { 0x81 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb0eb, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcd1b));
        // 81 03A9
        gbc.setState(0x32e9, 0x9655, 0x51f0, 0xe761, 0x6910, 0xda74, 0x0, 0x1);
        gbc.writeMem(0x32e9, { 0x81 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9655, gbc.sp());
        EXPECT(0x32ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03AA
        gbc.setState(0x52ec, 0xc85c, 0xa0e0, 0x9fc5, 0xb433, 0x2d55, 0x1, 0x0);
        gbc.writeMem(0x52ec, { 0x81 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc85c, gbc.sp());
        EXPECT(0x52ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03AB
        gbc.setState(0x7987, 0x654b, 0x28a0, 0xc7ba, 0x26ab, 0x48cb, 0x1, 0x1);
        gbc.writeMem(0x7987, { 0x81 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x654b, gbc.sp());
        EXPECT(0x7988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03AC
        gbc.setState(0xd762, 0xdece, 0x6040, 0xf255, 0xf263, 0x132d, 0x0, 0x0);
        gbc.writeMem(0xd762, { 0x81 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdece, gbc.sp());
        EXPECT(0xd763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd762));
        // 81 03AD
        gbc.setState(0x5d68, 0xa3e5, 0x3160, 0xecf, 0x4322, 0xf888, 0x0, 0x0);
        gbc.writeMem(0x5d68, { 0x81 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa3e5, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03AE
        gbc.setState(0xd816, 0x2ebe, 0x4210, 0x80ee, 0x158b, 0xb509, 0x0, 0x1);
        gbc.writeMem(0xd816, { 0x81 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2ebe, gbc.sp());
        EXPECT(0xd817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd816));
        // 81 03AF
        gbc.setState(0x3169, 0xdfc0, 0x5320, 0xa812, 0x7b30, 0xe7e2, 0x1, 0x1);
        gbc.writeMem(0x3169, { 0x81 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdfc0, gbc.sp());
        EXPECT(0x316a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03B0
        gbc.setState(0xd13c, 0x4756, 0x9f30, 0xe0b6, 0x536d, 0xaf57, 0x0, 0x1);
        gbc.writeMem(0xd13c, { 0x81 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4756, gbc.sp());
        EXPECT(0xd13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd13c));
        // 81 03B1
        gbc.setState(0x3b5e, 0x48d0, 0x9180, 0x452c, 0x984b, 0x4a26, 0x0, 0x0);
        gbc.writeMem(0x3b5e, { 0x81 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x48d0, gbc.sp());
        EXPECT(0x3b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03B2
        gbc.setState(0xbe5f, 0xf3c8, 0x2360, 0xce62, 0xf9bb, 0x569b, 0x0, 0x1);
        gbc.writeMem(0xbe5f, { 0x81 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf3c8, gbc.sp());
        EXPECT(0xbe60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbe5f));
        // 81 03B3
        gbc.setState(0x4a4a, 0x5d23, 0x3f40, 0xce61, 0x3753, 0x1fc3, 0x1, 0x0);
        gbc.writeMem(0x4a4a, { 0x81 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5d23, gbc.sp());
        EXPECT(0x4a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03B4
        gbc.setState(0xe21a, 0x15c5, 0x56d0, 0x6d56, 0x8a26, 0xf4b7, 0x1, 0x1);
        gbc.writeMem(0xe21a, { 0x81 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x15c5, gbc.sp());
        EXPECT(0xe21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe21a));
        // 81 03B5
        gbc.setState(0x90ad, 0x9014, 0x53e0, 0x455, 0xb7bc, 0xd755, 0x1, 0x0);
        gbc.writeMem(0x90ad, { 0x81 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9014, gbc.sp());
        EXPECT(0x90ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x90ad));
        // 81 03B6
        gbc.setState(0xb813, 0xd0a7, 0x4570, 0xbf2c, 0x6ac3, 0x331f, 0x1, 0x1);
        gbc.writeMem(0xb813, { 0x81 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd0a7, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb813));
        // 81 03B7
        gbc.setState(0xdd7d, 0xea9e, 0x6480, 0x7023, 0x8a19, 0xa081, 0x0, 0x1);
        gbc.writeMem(0xdd7d, { 0x81 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xea9e, gbc.sp());
        EXPECT(0xdd7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdd7d));
        // 81 03B8
        gbc.setState(0x7c24, 0x4e79, 0x3c00, 0xff2b, 0x388b, 0xe29f, 0x0, 0x0);
        gbc.writeMem(0x7c24, { 0x81 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4e79, gbc.sp());
        EXPECT(0x7c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03B9
        gbc.setState(0x7857, 0x3ac8, 0x9050, 0x2549, 0x660a, 0x183a, 0x1, 0x1);
        gbc.writeMem(0x7857, { 0x81 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3ac8, gbc.sp());
        EXPECT(0x7858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03BA
        gbc.setState(0xce42, 0xcfb8, 0x90e0, 0x4951, 0xbaba, 0x7c07, 0x1, 0x0);
        gbc.writeMem(0xce42, { 0x81 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcfb8, gbc.sp());
        EXPECT(0xce43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xce42));
        // 81 03BB
        gbc.setState(0x566f, 0xd57, 0xec90, 0x20c0, 0xdc1c, 0xc672, 0x0, 0x0);
        gbc.writeMem(0x566f, { 0x81 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd57, gbc.sp());
        EXPECT(0x5670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03BD
        gbc.setState(0x735, 0xdfc, 0xaa40, 0x360b, 0x9592, 0x7ba1, 0x1, 0x0);
        gbc.writeMem(0x735, { 0x81 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdfc, gbc.sp());
        EXPECT(0x736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03BE
        gbc.setState(0xbfb0, 0xed3a, 0x6b20, 0x473d, 0xcb0f, 0x72a1, 0x0, 0x1);
        gbc.writeMem(0xbfb0, { 0x81 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xed3a, gbc.sp());
        EXPECT(0xbfb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbfb0));
        // 81 03C0
        gbc.setState(0x6ef, 0x9570, 0xb6d0, 0xa9df, 0x2fcd, 0x1726, 0x0, 0x1);
        gbc.writeMem(0x6ef, { 0x81 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9570, gbc.sp());
        EXPECT(0x6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03C1
        gbc.setState(0x241d, 0x4bd5, 0xb590, 0x7bd6, 0x7764, 0xfd3b, 0x0, 0x0);
        gbc.writeMem(0x241d, { 0x81 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4bd5, gbc.sp());
        EXPECT(0x241e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03C2
        gbc.setState(0x6577, 0xba90, 0xd610, 0x4d58, 0xb261, 0xaa44, 0x0, 0x1);
        gbc.writeMem(0x6577, { 0x81 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xba90, gbc.sp());
        EXPECT(0x6578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03C3
        gbc.setState(0xe6a, 0xaf4, 0xbd90, 0x7c05, 0xab5, 0xc86e, 0x1, 0x1);
        gbc.writeMem(0xe6a, { 0x81 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaf4, gbc.sp());
        EXPECT(0xe6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03C4
        gbc.setState(0x9070, 0xac2d, 0xd180, 0x4949, 0xdb5c, 0x56f6, 0x0, 0x0);
        gbc.writeMem(0x9070, { 0x81 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xac2d, gbc.sp());
        EXPECT(0x9071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9070));
        // 81 03C5
        gbc.setState(0xda76, 0x7dfc, 0x5860, 0xde5a, 0xb416, 0x4cb6, 0x1, 0x0);
        gbc.writeMem(0xda76, { 0x81 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7dfc, gbc.sp());
        EXPECT(0xda77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xda76));
        // 81 03C6
        gbc.setState(0xc3e5, 0xd231, 0xc8e0, 0x8d9f, 0xf9ca, 0xb8d5, 0x1, 0x0);
        gbc.writeMem(0xc3e5, { 0x81 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd231, gbc.sp());
        EXPECT(0xc3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc3e5));
        // 81 03C7
        gbc.setState(0x3643, 0xad57, 0x1670, 0x1b0d, 0xbc4d, 0x3ed5, 0x1, 0x0);
        gbc.writeMem(0x3643, { 0x81 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xad57, gbc.sp());
        EXPECT(0x3644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03C8
        gbc.setState(0x8274, 0xd5d0, 0x6660, 0x4043, 0xd425, 0x1e85, 0x1, 0x0);
        gbc.writeMem(0x8274, { 0x81 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd5d0, gbc.sp());
        EXPECT(0x8275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8274));
        // 81 03C9
        gbc.setState(0xd61e, 0xe4c8, 0x8430, 0x1900, 0x8ec2, 0x311c, 0x0, 0x0);
        gbc.writeMem(0xd61e, { 0x81 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe4c8, gbc.sp());
        EXPECT(0xd61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd61e));
        // 81 03CA
        gbc.setState(0x95b8, 0x68ab, 0xc120, 0x8933, 0xb407, 0xd6bd, 0x1, 0x0);
        gbc.writeMem(0x95b8, { 0x81 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x68ab, gbc.sp());
        EXPECT(0x95b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x95b8));
        // 81 03CB
        gbc.setState(0x3817, 0xfdc9, 0x3cd0, 0xb959, 0x529e, 0xf17f, 0x0, 0x0);
        gbc.writeMem(0x3817, { 0x81 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfdc9, gbc.sp());
        EXPECT(0x3818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03CC
        gbc.setState(0xd50d, 0x6d08, 0x27f0, 0x424, 0x9d01, 0xac00, 0x1, 0x1);
        gbc.writeMem(0xd50d, { 0x81 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6d08, gbc.sp());
        EXPECT(0xd50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd50d));
        // 81 03CD
        gbc.setState(0xe105, 0xe12c, 0x0, 0xd011, 0x9166, 0xd184, 0x1, 0x1);
        gbc.writeMem(0xe105, { 0x81 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe12c, gbc.sp());
        EXPECT(0xe106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe105));
        // 81 03CE
        gbc.setState(0x6139, 0x9a75, 0x12a0, 0x6f38, 0x36bc, 0x2204, 0x0, 0x0);
        gbc.writeMem(0x6139, { 0x81 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9a75, gbc.sp());
        EXPECT(0x613a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03CF
        gbc.setState(0xc123, 0x296d, 0x3a50, 0x40e, 0x26c4, 0xaa97, 0x1, 0x0);
        gbc.writeMem(0xc123, { 0x81 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x296d, gbc.sp());
        EXPECT(0xc124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc123));
        // 81 03D0
        gbc.setState(0xd75b, 0x38, 0x3390, 0x99b1, 0x2a24, 0xa133, 0x1, 0x1);
        gbc.writeMem(0xd75b, { 0x81 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x38, gbc.sp());
        EXPECT(0xd75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd75b));
        // 81 03D1
        gbc.setState(0xbb61, 0xb123, 0xd170, 0x64e, 0xea84, 0x895c, 0x1, 0x1);
        gbc.writeMem(0xbb61, { 0x81 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb123, gbc.sp());
        EXPECT(0xbb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbb61));
        // 81 03D2
        gbc.setState(0x835e, 0x7eff, 0x9780, 0x4164, 0xfb85, 0xb619, 0x1, 0x0);
        gbc.writeMem(0x835e, { 0x81 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7eff, gbc.sp());
        EXPECT(0x835f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x835e));
        // 81 03D3
        gbc.setState(0x8195, 0x9da, 0xcf00, 0x5ede, 0x6b2f, 0xe4d0, 0x0, 0x0);
        gbc.writeMem(0x8195, { 0x81 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9da, gbc.sp());
        EXPECT(0x8196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8195));
        // 81 03D4
        gbc.setState(0xce31, 0x948b, 0xa70, 0x975, 0x179e, 0xe190, 0x1, 0x0);
        gbc.writeMem(0xce31, { 0x81 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x948b, gbc.sp());
        EXPECT(0xce32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xce31));
        // 81 03D5
        gbc.setState(0x5f4b, 0x6b17, 0x2a10, 0x7de9, 0xa66, 0x8447, 0x1, 0x0);
        gbc.writeMem(0x5f4b, { 0x81 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6b17, gbc.sp());
        EXPECT(0x5f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03D6
        gbc.setState(0xba57, 0x2135, 0xa7b0, 0x4372, 0xd66f, 0xb5aa, 0x0, 0x1);
        gbc.writeMem(0xba57, { 0x81 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2135, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xba57));
        // 81 03D7
        gbc.setState(0xbef7, 0xc864, 0x740, 0xd986, 0x3d40, 0x1454, 0x0, 0x1);
        gbc.writeMem(0xbef7, { 0x81 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc864, gbc.sp());
        EXPECT(0xbef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbef7));
        // 81 03D8
        gbc.setState(0x3bf5, 0x6564, 0x87d0, 0xebfb, 0x549f, 0x38c4, 0x1, 0x0);
        gbc.writeMem(0x3bf5, { 0x81 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6564, gbc.sp());
        EXPECT(0x3bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03D9
        gbc.setState(0xb138, 0xf7ec, 0x28d0, 0x8889, 0x7d54, 0x4856, 0x1, 0x1);
        gbc.writeMem(0xb138, { 0x81 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf7ec, gbc.sp());
        EXPECT(0xb139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb138));
        // 81 03DA
        gbc.setState(0x716f, 0xa2a2, 0x8d50, 0x65e, 0xd8d0, 0x3532, 0x1, 0x1);
        gbc.writeMem(0x716f, { 0x81 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa2a2, gbc.sp());
        EXPECT(0x7170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03DC
        gbc.setState(0x4d52, 0x7715, 0x3340, 0xdcb3, 0x4b3d, 0x5779, 0x1, 0x0);
        gbc.writeMem(0x4d52, { 0x81 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7715, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03DD
        gbc.setState(0x7a8e, 0x170f, 0x38f0, 0x5055, 0xd27, 0xe55b, 0x0, 0x0);
        gbc.writeMem(0x7a8e, { 0x81 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x170f, gbc.sp());
        EXPECT(0x7a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03DE
        gbc.setState(0x754d, 0x4f58, 0x3740, 0x6730, 0x9df6, 0xafd, 0x1, 0x0);
        gbc.writeMem(0x754d, { 0x81 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4f58, gbc.sp());
        EXPECT(0x754e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03DF
        gbc.setState(0x8faf, 0x4123, 0x990, 0x4c68, 0xea71, 0x36ea, 0x0, 0x0);
        gbc.writeMem(0x8faf, { 0x81 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4123, gbc.sp());
        EXPECT(0x8fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8faf));
        // 81 03E0
        gbc.setState(0x698d, 0x5192, 0x350, 0xc321, 0x7fd8, 0x7aae, 0x0, 0x0);
        gbc.writeMem(0x698d, { 0x81 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5192, gbc.sp());
        EXPECT(0x698e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03E1
        gbc.setState(0xe5ed, 0x46a6, 0xe5c0, 0x9c06, 0x4d6e, 0x840e, 0x1, 0x1);
        gbc.writeMem(0xe5ed, { 0x81 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x46a6, gbc.sp());
        EXPECT(0xe5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe5ed));
        // 81 03E2
        gbc.setState(0x4559, 0xf310, 0x3f30, 0x65f9, 0x251d, 0x7286, 0x0, 0x1);
        gbc.writeMem(0x4559, { 0x81 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf310, gbc.sp());
        EXPECT(0x455a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 81 03E3
        gbc.setState(0x1ba, 0x7b22, 0x39a0, 0x4f9d, 0xbfbd, 0x4777, 0x0, 0x0);
        gbc.writeMem(0x1ba, { 0x81 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7b22, gbc.sp());
        EXPECT(0x1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 81 03E4
        gbc.setState(0xcfcc, 0x1652, 0x70e0, 0x61e7, 0xa8cd, 0xebbd, 0x0, 0x1);
        gbc.writeMem(0xcfcc, { 0x81 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1652, gbc.sp());
        EXPECT(0xcfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcfcc));
        // 81 03E6
        gbc.setState(0x85ff, 0x9a98, 0x3e20, 0x1971, 0x58c8, 0xf48, 0x0, 0x0);
        gbc.writeMem(0x85ff, { 0x81 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9a98, gbc.sp());
        EXPECT(0x8600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x85ff));
        // 81 03E7
        gbc.setState(0x417a, 0x465b, 0x2970, 0x43ab, 0xc007, 0xb17b, 0x0, 0x0);
        gbc.writeMem(0x417a, { 0x81 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x465b, gbc.sp());
        EXPECT(0x417b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
