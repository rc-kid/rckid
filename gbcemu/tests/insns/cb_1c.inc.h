    TEST(gbcemu, opcode_cb_1c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 1C 0000
        gbc.setState(0x6d52, 0x4633, 0xe8a0, 0xd8d3, 0x4bb9, 0x304e, 0x1, 0x0);
        gbc.writeMem(0x6d52, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4633, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0001
        gbc.setState(0xb5d6, 0xab2d, 0x1750, 0xc61e, 0x5629, 0x9da4, 0x0, 0x0);
        gbc.writeMem(0xb5d6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xab2d, gbc.sp());
        EXPECT(0xb5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d6));
        EXPECT(0x1c, gbc.readMem(0xb5d7));
        // CB 1C 0002
        gbc.setState(0x7d50, 0x92e4, 0x4070, 0xeac8, 0x503, 0xac5c, 0x0, 0x0);
        gbc.writeMem(0x7d50, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x92e4, gbc.sp());
        EXPECT(0x7d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0003
        gbc.setState(0x7845, 0x2180, 0x8b00, 0xf330, 0xa90a, 0x87bb, 0x0, 0x0);
        gbc.writeMem(0x7845, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2180, gbc.sp());
        EXPECT(0x7847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0004
        gbc.setState(0x10a1, 0xdc40, 0xe0, 0xeab1, 0x8014, 0xcc10, 0x0, 0x0);
        gbc.writeMem(0x10a1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdc40, gbc.sp());
        EXPECT(0x10a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0005
        gbc.setState(0x4db9, 0x66e3, 0xd640, 0x3d3, 0x53ac, 0x6122, 0x1, 0x0);
        gbc.writeMem(0x4db9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x66e3, gbc.sp());
        EXPECT(0x4dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0006
        gbc.setState(0x8f7, 0xe1af, 0x7650, 0xcd4e, 0xb75c, 0xd26d, 0x0, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe1af, gbc.sp());
        EXPECT(0x8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0007
        gbc.setState(0x9bd, 0xe75d, 0x30f0, 0x8f73, 0x56f4, 0x62ea, 0x1, 0x0);
        gbc.writeMem(0x9bd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe75d, gbc.sp());
        EXPECT(0x9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0008
        gbc.setState(0x3216, 0x1e34, 0xbea0, 0x7862, 0x7d03, 0xb11c, 0x1, 0x1);
        gbc.writeMem(0x3216, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1e34, gbc.sp());
        EXPECT(0x3218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0009
        gbc.setState(0xca50, 0xe50f, 0x7b40, 0x6192, 0x6fdd, 0x84e3, 0x1, 0x1);
        gbc.writeMem(0xca50, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe50f, gbc.sp());
        EXPECT(0xca52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca50));
        EXPECT(0x1c, gbc.readMem(0xca51));
        // CB 1C 000A
        gbc.setState(0x18b9, 0x787c, 0x3da0, 0xb9a1, 0xbc0c, 0x4a92, 0x1, 0x0);
        gbc.writeMem(0x18b9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x787c, gbc.sp());
        EXPECT(0x18bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 000B
        gbc.setState(0x824c, 0xbc9b, 0xc650, 0x4987, 0xd834, 0xaa7c, 0x1, 0x0);
        gbc.writeMem(0x824c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824c));
        EXPECT(0x1c, gbc.readMem(0x824d));
        // CB 1C 000C
        gbc.setState(0xd25b, 0x14f2, 0x8350, 0x4b20, 0x8ec3, 0x8501, 0x1, 0x0);
        gbc.writeMem(0xd25b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x14f2, gbc.sp());
        EXPECT(0xd25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25b));
        EXPECT(0x1c, gbc.readMem(0xd25c));
        // CB 1C 000D
        gbc.setState(0x196c, 0x267, 0x5af0, 0x9605, 0xd3c7, 0x1ce2, 0x1, 0x0);
        gbc.writeMem(0x196c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x267, gbc.sp());
        EXPECT(0x196e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 000E
        gbc.setState(0xb6c7, 0x6cc1, 0xae30, 0x274e, 0x36a5, 0xaabf, 0x1, 0x1);
        gbc.writeMem(0xb6c7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6cc1, gbc.sp());
        EXPECT(0xb6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c7));
        EXPECT(0x1c, gbc.readMem(0xb6c8));
        // CB 1C 000F
        gbc.setState(0x9694, 0x3316, 0x21c0, 0xcb45, 0xb2b2, 0x181e, 0x1, 0x1);
        gbc.writeMem(0x9694, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3316, gbc.sp());
        EXPECT(0x9696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9694));
        EXPECT(0x1c, gbc.readMem(0x9695));
        // CB 1C 0010
        gbc.setState(0x2207, 0x69dd, 0xa8d0, 0x32d, 0x3bfe, 0x650c, 0x0, 0x1);
        gbc.writeMem(0x2207, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x69dd, gbc.sp());
        EXPECT(0x2209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0011
        gbc.setState(0x7f80, 0x225c, 0xf720, 0x5bbe, 0x6e8, 0xae53, 0x1, 0x0);
        gbc.writeMem(0x7f80, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x225c, gbc.sp());
        EXPECT(0x7f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0012
        gbc.setState(0xa0fa, 0xb075, 0xc0c0, 0xe30, 0xa30c, 0xd141, 0x1, 0x0);
        gbc.writeMem(0xa0fa, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb075, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fa));
        EXPECT(0x1c, gbc.readMem(0xa0fb));
        // CB 1C 0013
        gbc.setState(0x5aa5, 0xbbf7, 0x70c0, 0x8f95, 0x9712, 0xd9f0, 0x0, 0x1);
        gbc.writeMem(0x5aa5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbbf7, gbc.sp());
        EXPECT(0x5aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0014
        gbc.setState(0x79a7, 0x5a4a, 0xfa70, 0x977d, 0x70d2, 0xbc11, 0x0, 0x1);
        gbc.writeMem(0x79a7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5a4a, gbc.sp());
        EXPECT(0x79a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0015
        gbc.setState(0x4a68, 0x91b3, 0xf540, 0xa681, 0x5c18, 0x557b, 0x0, 0x0);
        gbc.writeMem(0x4a68, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x91b3, gbc.sp());
        EXPECT(0x4a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0016
        gbc.setState(0x1fa5, 0x3607, 0x5ce0, 0xf757, 0x730f, 0x4cb9, 0x1, 0x0);
        gbc.writeMem(0x1fa5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3607, gbc.sp());
        EXPECT(0x1fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0017
        gbc.setState(0x1081, 0x1aa4, 0xdc40, 0xbd6, 0xda3d, 0x8b18, 0x0, 0x0);
        gbc.writeMem(0x1081, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1aa4, gbc.sp());
        EXPECT(0x1083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0018
        gbc.setState(0x31f3, 0x26f9, 0x50c0, 0xdeb1, 0xe6a5, 0x86eb, 0x0, 0x1);
        gbc.writeMem(0x31f3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x26f9, gbc.sp());
        EXPECT(0x31f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 001A
        gbc.setState(0x70e2, 0x258b, 0xbb0, 0x260b, 0x4871, 0x11e0, 0x1, 0x1);
        gbc.writeMem(0x70e2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x258b, gbc.sp());
        EXPECT(0x70e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 001B
        gbc.setState(0xc1f1, 0xbe74, 0x2920, 0xabfe, 0x97e, 0x3c7b, 0x0, 0x1);
        gbc.writeMem(0xc1f1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbe74, gbc.sp());
        EXPECT(0xc1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f1));
        EXPECT(0x1c, gbc.readMem(0xc1f2));
        // CB 1C 001C
        gbc.setState(0xcd0c, 0xa3, 0xa470, 0x6af0, 0xe85b, 0xe713, 0x0, 0x0);
        gbc.writeMem(0xcd0c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa3, gbc.sp());
        EXPECT(0xcd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0c));
        EXPECT(0x1c, gbc.readMem(0xcd0d));
        // CB 1C 001D
        gbc.setState(0x1170, 0xf8fb, 0x9b00, 0x946, 0xccbc, 0x2bb5, 0x1, 0x0);
        gbc.writeMem(0x1170, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf8fb, gbc.sp());
        EXPECT(0x1172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 001E
        gbc.setState(0x1a1d, 0xbac3, 0xe160, 0x87ee, 0xcd91, 0xf095, 0x1, 0x1);
        gbc.writeMem(0x1a1d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbac3, gbc.sp());
        EXPECT(0x1a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 001F
        gbc.setState(0x68bb, 0xdcef, 0x4a80, 0x2563, 0x7b46, 0xbd78, 0x1, 0x0);
        gbc.writeMem(0x68bb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdcef, gbc.sp());
        EXPECT(0x68bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0020
        gbc.setState(0x3e76, 0xbb75, 0x78b0, 0x15bd, 0xd0fc, 0xdd68, 0x0, 0x1);
        gbc.writeMem(0x3e76, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbb75, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0021
        gbc.setState(0x9d72, 0xd88, 0x9140, 0xc43a, 0xd60c, 0x6f82, 0x1, 0x1);
        gbc.writeMem(0x9d72, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd88, gbc.sp());
        EXPECT(0x9d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d72));
        EXPECT(0x1c, gbc.readMem(0x9d73));
        // CB 1C 0022
        gbc.setState(0x90e9, 0xc612, 0xeb60, 0x2526, 0x636, 0xd0a4, 0x1, 0x0);
        gbc.writeMem(0x90e9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc612, gbc.sp());
        EXPECT(0x90eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e9));
        EXPECT(0x1c, gbc.readMem(0x90ea));
        // CB 1C 0023
        gbc.setState(0x605a, 0xe88b, 0xb910, 0x3c83, 0x3033, 0x89d2, 0x1, 0x0);
        gbc.writeMem(0x605a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe88b, gbc.sp());
        EXPECT(0x605c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0024
        gbc.setState(0x19f7, 0xc7c1, 0x4060, 0x6d02, 0x3b61, 0x3ce7, 0x0, 0x1);
        gbc.writeMem(0x19f7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc7c1, gbc.sp());
        EXPECT(0x19f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0025
        gbc.setState(0x8796, 0xc601, 0xae0, 0x33a0, 0x5522, 0xb386, 0x1, 0x1);
        gbc.writeMem(0x8796, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc601, gbc.sp());
        EXPECT(0x8798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8796));
        EXPECT(0x1c, gbc.readMem(0x8797));
        // CB 1C 0026
        gbc.setState(0x31f6, 0x150b, 0x8690, 0x9f1d, 0x62c9, 0x106b, 0x1, 0x0);
        gbc.writeMem(0x31f6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x150b, gbc.sp());
        EXPECT(0x31f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0027
        gbc.setState(0xe8b5, 0xa604, 0xdae0, 0x3878, 0x1341, 0xbf9c, 0x0, 0x1);
        gbc.writeMem(0xe8b5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa604, gbc.sp());
        EXPECT(0xe8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b5));
        EXPECT(0x1c, gbc.readMem(0xe8b6));
        // CB 1C 0028
        gbc.setState(0x27b8, 0x538a, 0x7e70, 0x427, 0xca0b, 0xcd74, 0x0, 0x0);
        gbc.writeMem(0x27b8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x538a, gbc.sp());
        EXPECT(0x27ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0029
        gbc.setState(0x536f, 0x1f24, 0x4d90, 0x5b04, 0xfefc, 0xbe6c, 0x1, 0x0);
        gbc.writeMem(0x536f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1f24, gbc.sp());
        EXPECT(0x5371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 002A
        gbc.setState(0x851b, 0x1f1b, 0x6620, 0xa895, 0x226f, 0x484a, 0x0, 0x0);
        gbc.writeMem(0x851b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1f1b, gbc.sp());
        EXPECT(0x851d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851b));
        EXPECT(0x1c, gbc.readMem(0x851c));
        // CB 1C 002B
        gbc.setState(0x7e3d, 0x4e35, 0x5e90, 0x744, 0xb995, 0x5652, 0x1, 0x0);
        gbc.writeMem(0x7e3d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4e35, gbc.sp());
        EXPECT(0x7e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 002C
        gbc.setState(0x3314, 0x42e9, 0x8830, 0x6ac2, 0xd55c, 0x1f99, 0x0, 0x0);
        gbc.writeMem(0x3314, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x42e9, gbc.sp());
        EXPECT(0x3316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 002D
        gbc.setState(0x1d0f, 0xbf45, 0xc810, 0xca89, 0x79ae, 0xd853, 0x1, 0x0);
        gbc.writeMem(0x1d0f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbf45, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 002E
        gbc.setState(0x320d, 0x339a, 0xa960, 0xa778, 0xebed, 0x98f7, 0x1, 0x1);
        gbc.writeMem(0x320d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x339a, gbc.sp());
        EXPECT(0x320f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 002F
        gbc.setState(0x8786, 0xb7d8, 0x79f0, 0xadec, 0xea05, 0x360a, 0x0, 0x1);
        gbc.writeMem(0x8786, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb7d8, gbc.sp());
        EXPECT(0x8788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8786));
        EXPECT(0x1c, gbc.readMem(0x8787));
        // CB 1C 0030
        gbc.setState(0x9c66, 0x1909, 0x2b30, 0x935d, 0x7e0d, 0xe09d, 0x1, 0x0);
        gbc.writeMem(0x9c66, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1909, gbc.sp());
        EXPECT(0x9c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c66));
        EXPECT(0x1c, gbc.readMem(0x9c67));
        // CB 1C 0031
        gbc.setState(0xc980, 0x4050, 0xd6b0, 0xf365, 0x1f7c, 0xbe8f, 0x1, 0x0);
        gbc.writeMem(0xc980, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4050, gbc.sp());
        EXPECT(0xc982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc980));
        EXPECT(0x1c, gbc.readMem(0xc981));
        // CB 1C 0032
        gbc.setState(0x1fa2, 0x782a, 0xb9d0, 0x91c9, 0x26a4, 0x8eb0, 0x0, 0x0);
        gbc.writeMem(0x1fa2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x782a, gbc.sp());
        EXPECT(0x1fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0033
        gbc.setState(0x1899, 0x8de7, 0x8320, 0x4709, 0x9684, 0x3fab, 0x1, 0x1);
        gbc.writeMem(0x1899, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8de7, gbc.sp());
        EXPECT(0x189b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0034
        gbc.setState(0xa13, 0x8dd3, 0x62a0, 0x2682, 0x48f6, 0x725d, 0x1, 0x0);
        gbc.writeMem(0xa13, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8dd3, gbc.sp());
        EXPECT(0xa15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0035
        gbc.setState(0x43ee, 0xb68b, 0x61b0, 0xc930, 0x2043, 0x45a, 0x0, 0x1);
        gbc.writeMem(0x43ee, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb68b, gbc.sp());
        EXPECT(0x43f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0036
        gbc.setState(0x1c0f, 0xe8ea, 0xc610, 0x3328, 0xbf6c, 0x4b37, 0x0, 0x1);
        gbc.writeMem(0x1c0f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe8ea, gbc.sp());
        EXPECT(0x1c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0037
        gbc.setState(0x5ea8, 0x37ac, 0xe410, 0x5a5e, 0x4455, 0xbe4d, 0x0, 0x0);
        gbc.writeMem(0x5ea8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x37ac, gbc.sp());
        EXPECT(0x5eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0038
        gbc.setState(0x680e, 0xa168, 0xdc60, 0xda2b, 0x7dbb, 0x322b, 0x0, 0x0);
        gbc.writeMem(0x680e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa168, gbc.sp());
        EXPECT(0x6810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0039
        gbc.setState(0xace2, 0xcde3, 0x3510, 0x9ef5, 0x93a4, 0x3049, 0x0, 0x1);
        gbc.writeMem(0xace2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcde3, gbc.sp());
        EXPECT(0xace4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace2));
        EXPECT(0x1c, gbc.readMem(0xace3));
        // CB 1C 003A
        gbc.setState(0x8882, 0x9bea, 0x78c0, 0xaaf3, 0x8a79, 0x4351, 0x1, 0x1);
        gbc.writeMem(0x8882, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9bea, gbc.sp());
        EXPECT(0x8884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8882));
        EXPECT(0x1c, gbc.readMem(0x8883));
        // CB 1C 003B
        gbc.setState(0x868d, 0x307e, 0xa9e0, 0xebed, 0xbc14, 0x6d3c, 0x0, 0x0);
        gbc.writeMem(0x868d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x307e, gbc.sp());
        EXPECT(0x868f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868d));
        EXPECT(0x1c, gbc.readMem(0x868e));
        // CB 1C 003C
        gbc.setState(0x1757, 0xb6a6, 0xcdb0, 0xf8c3, 0x1291, 0xc7aa, 0x1, 0x0);
        gbc.writeMem(0x1757, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb6a6, gbc.sp());
        EXPECT(0x1759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 003D
        gbc.setState(0xb7cb, 0x54cd, 0xfd30, 0xc361, 0xb022, 0xc8f3, 0x1, 0x0);
        gbc.writeMem(0xb7cb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x54cd, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cb));
        EXPECT(0x1c, gbc.readMem(0xb7cc));
        // CB 1C 003E
        gbc.setState(0xa522, 0x7f85, 0x59a0, 0x8495, 0x50a2, 0x499e, 0x1, 0x1);
        gbc.writeMem(0xa522, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7f85, gbc.sp());
        EXPECT(0xa524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa522));
        EXPECT(0x1c, gbc.readMem(0xa523));
        // CB 1C 0040
        gbc.setState(0x46e8, 0xcd0f, 0x2860, 0x245a, 0x12be, 0x447f, 0x0, 0x1);
        gbc.writeMem(0x46e8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcd0f, gbc.sp());
        EXPECT(0x46ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0041
        gbc.setState(0xa72f, 0x81a6, 0x1b0, 0xa3fd, 0x84b0, 0x7f7b, 0x1, 0x1);
        gbc.writeMem(0xa72f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x81a6, gbc.sp());
        EXPECT(0xa731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72f));
        EXPECT(0x1c, gbc.readMem(0xa730));
        // CB 1C 0042
        gbc.setState(0x5fe7, 0xca8f, 0xe770, 0x7af, 0x9e3a, 0x31fe, 0x1, 0x0);
        gbc.writeMem(0x5fe7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xca8f, gbc.sp());
        EXPECT(0x5fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0043
        gbc.setState(0xde3f, 0x62ab, 0x700, 0x4036, 0x8003, 0x2f1, 0x0, 0x0);
        gbc.writeMem(0xde3f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x62ab, gbc.sp());
        EXPECT(0xde41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde3f));
        EXPECT(0x1c, gbc.readMem(0xde40));
        // CB 1C 0044
        gbc.setState(0x452, 0x3182, 0xc1d0, 0x70c4, 0x76b6, 0x1a8, 0x1, 0x1);
        gbc.writeMem(0x452, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3182, gbc.sp());
        EXPECT(0x454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0045
        gbc.setState(0x49c6, 0x8e4, 0xec80, 0x2d0c, 0x1ef1, 0xd0d7, 0x1, 0x1);
        gbc.writeMem(0x49c6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8e4, gbc.sp());
        EXPECT(0x49c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0046
        gbc.setState(0x478a, 0x653e, 0xe0e0, 0x1c04, 0xde04, 0xed67, 0x1, 0x0);
        gbc.writeMem(0x478a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x653e, gbc.sp());
        EXPECT(0x478c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0047
        gbc.setState(0x5909, 0x2fbb, 0x720, 0xbfde, 0x24ca, 0x51d5, 0x0, 0x1);
        gbc.writeMem(0x5909, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2fbb, gbc.sp());
        EXPECT(0x590b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0048
        gbc.setState(0xae10, 0xd743, 0x9630, 0xa278, 0x14d6, 0x4e88, 0x0, 0x1);
        gbc.writeMem(0xae10, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd743, gbc.sp());
        EXPECT(0xae12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae10));
        EXPECT(0x1c, gbc.readMem(0xae11));
        // CB 1C 0049
        gbc.setState(0xb005, 0x6678, 0xc690, 0x238e, 0xe2e8, 0x463b, 0x0, 0x1);
        gbc.writeMem(0xb005, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6678, gbc.sp());
        EXPECT(0xb007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb005));
        EXPECT(0x1c, gbc.readMem(0xb006));
        // CB 1C 004A
        gbc.setState(0x87da, 0xefaf, 0xc3f0, 0x4104, 0x19d7, 0xa3da, 0x1, 0x1);
        gbc.writeMem(0x87da, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xefaf, gbc.sp());
        EXPECT(0x87dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87da));
        EXPECT(0x1c, gbc.readMem(0x87db));
        // CB 1C 004B
        gbc.setState(0x6601, 0x89d5, 0xdaa0, 0x404c, 0xa7d4, 0x5a24, 0x1, 0x0);
        gbc.writeMem(0x6601, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x89d5, gbc.sp());
        EXPECT(0x6603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 004C
        gbc.setState(0xda80, 0x3c42, 0x8310, 0xa2fd, 0x967a, 0x4682, 0x1, 0x0);
        gbc.writeMem(0xda80, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3c42, gbc.sp());
        EXPECT(0xda82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda80));
        EXPECT(0x1c, gbc.readMem(0xda81));
        // CB 1C 004D
        gbc.setState(0x6eca, 0xa29b, 0x41d0, 0xe64f, 0xee4c, 0x678d, 0x0, 0x0);
        gbc.writeMem(0x6eca, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa29b, gbc.sp());
        EXPECT(0x6ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 004E
        gbc.setState(0x4046, 0x1190, 0xca80, 0x22ab, 0x30f6, 0x68e6, 0x1, 0x0);
        gbc.writeMem(0x4046, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1190, gbc.sp());
        EXPECT(0x4048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 004F
        gbc.setState(0x265f, 0x96e2, 0x6e30, 0xc021, 0x289b, 0x1fa1, 0x0, 0x1);
        gbc.writeMem(0x265f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x96e2, gbc.sp());
        EXPECT(0x2661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0050
        gbc.setState(0x59c3, 0xbfea, 0x81e0, 0x59c4, 0x3ec2, 0x7557, 0x0, 0x1);
        gbc.writeMem(0x59c3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbfea, gbc.sp());
        EXPECT(0x59c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0051
        gbc.setState(0x72ed, 0xc986, 0xf9a0, 0x1a97, 0x967b, 0xa931, 0x0, 0x0);
        gbc.writeMem(0x72ed, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc986, gbc.sp());
        EXPECT(0x72ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0052
        gbc.setState(0x8c5f, 0xc81a, 0x2a00, 0x13b1, 0x8623, 0x23d0, 0x1, 0x0);
        gbc.writeMem(0x8c5f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc81a, gbc.sp());
        EXPECT(0x8c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c5f));
        EXPECT(0x1c, gbc.readMem(0x8c60));
        // CB 1C 0053
        gbc.setState(0x81ff, 0xeaae, 0x7120, 0x4f12, 0xeed3, 0x1e52, 0x0, 0x1);
        gbc.writeMem(0x81ff, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xeaae, gbc.sp());
        EXPECT(0x8201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ff));
        EXPECT(0x1c, gbc.readMem(0x8200));
        // CB 1C 0054
        gbc.setState(0xad54, 0x3277, 0x7d10, 0x613c, 0x505d, 0x8756, 0x0, 0x0);
        gbc.writeMem(0xad54, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3277, gbc.sp());
        EXPECT(0xad56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad54));
        EXPECT(0x1c, gbc.readMem(0xad55));
        // CB 1C 0055
        gbc.setState(0xe0c5, 0x50d1, 0x1e30, 0xa662, 0x5a69, 0x66b3, 0x1, 0x1);
        gbc.writeMem(0xe0c5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x50d1, gbc.sp());
        EXPECT(0xe0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c5));
        EXPECT(0x1c, gbc.readMem(0xe0c6));
        // CB 1C 0056
        gbc.setState(0x914e, 0x4275, 0x5030, 0x3c7a, 0x1a00, 0xfe83, 0x0, 0x0);
        gbc.writeMem(0x914e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4275, gbc.sp());
        EXPECT(0x9150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914e));
        EXPECT(0x1c, gbc.readMem(0x914f));
        // CB 1C 0057
        gbc.setState(0xde16, 0x51bd, 0x8470, 0xe8da, 0x2ce1, 0x5546, 0x0, 0x0);
        gbc.writeMem(0xde16, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x51bd, gbc.sp());
        EXPECT(0xde18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde16));
        EXPECT(0x1c, gbc.readMem(0xde17));
        // CB 1C 0058
        gbc.setState(0x57c2, 0xa77b, 0xaf50, 0xa35f, 0x149, 0x85f0, 0x0, 0x0);
        gbc.writeMem(0x57c2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa77b, gbc.sp());
        EXPECT(0x57c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0059
        gbc.setState(0xd540, 0x94d1, 0x8300, 0x730e, 0xa22c, 0x622f, 0x1, 0x0);
        gbc.writeMem(0xd540, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x94d1, gbc.sp());
        EXPECT(0xd542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd540));
        EXPECT(0x1c, gbc.readMem(0xd541));
        // CB 1C 005A
        gbc.setState(0xb1c6, 0x8f15, 0x9540, 0xd95c, 0xf066, 0xb51, 0x1, 0x0);
        gbc.writeMem(0xb1c6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8f15, gbc.sp());
        EXPECT(0xb1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c6));
        EXPECT(0x1c, gbc.readMem(0xb1c7));
        // CB 1C 005B
        gbc.setState(0x481f, 0x53c9, 0x54d0, 0xbc61, 0x8e27, 0x39d5, 0x1, 0x1);
        gbc.writeMem(0x481f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0x4821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 005C
        gbc.setState(0x2a55, 0xd1bc, 0x1df0, 0xb20b, 0xe997, 0x2ea2, 0x1, 0x1);
        gbc.writeMem(0x2a55, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd1bc, gbc.sp());
        EXPECT(0x2a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 005D
        gbc.setState(0x5f19, 0xea0c, 0xafd0, 0x490b, 0x3eef, 0xa8e2, 0x0, 0x1);
        gbc.writeMem(0x5f19, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xea0c, gbc.sp());
        EXPECT(0x5f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 005E
        gbc.setState(0x91a3, 0x8137, 0xfee0, 0xd0b9, 0x56b5, 0xfffd, 0x0, 0x0);
        gbc.writeMem(0x91a3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8137, gbc.sp());
        EXPECT(0x91a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a3));
        EXPECT(0x1c, gbc.readMem(0x91a4));
        // CB 1C 005F
        gbc.setState(0x40aa, 0x90c1, 0x9f40, 0xc1cb, 0xe206, 0x2a4f, 0x1, 0x0);
        gbc.writeMem(0x40aa, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x90c1, gbc.sp());
        EXPECT(0x40ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0060
        gbc.setState(0xdae3, 0x4daf, 0x900, 0x1e82, 0xcc04, 0xf855, 0x1, 0x0);
        gbc.writeMem(0xdae3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4daf, gbc.sp());
        EXPECT(0xdae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae3));
        EXPECT(0x1c, gbc.readMem(0xdae4));
        // CB 1C 0061
        gbc.setState(0x5f93, 0x894a, 0xbf50, 0x388, 0xca8f, 0x32c0, 0x0, 0x0);
        gbc.writeMem(0x5f93, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x894a, gbc.sp());
        EXPECT(0x5f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0062
        gbc.setState(0xa4d0, 0xfbf8, 0xe9e0, 0x9995, 0xcc4f, 0x9cae, 0x1, 0x1);
        gbc.writeMem(0xa4d0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfbf8, gbc.sp());
        EXPECT(0xa4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d0));
        EXPECT(0x1c, gbc.readMem(0xa4d1));
        // CB 1C 0063
        gbc.setState(0xd1db, 0xfcf4, 0x13e0, 0x1776, 0xde0a, 0x7c94, 0x1, 0x0);
        gbc.writeMem(0xd1db, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfcf4, gbc.sp());
        EXPECT(0xd1dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1db));
        EXPECT(0x1c, gbc.readMem(0xd1dc));
        // CB 1C 0064
        gbc.setState(0x19c8, 0xe3e8, 0xd050, 0xb481, 0x3cc7, 0x8051, 0x0, 0x1);
        gbc.writeMem(0x19c8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe3e8, gbc.sp());
        EXPECT(0x19ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0065
        gbc.setState(0x58b9, 0xeb33, 0xc730, 0x9d7c, 0x5b9, 0xbece, 0x0, 0x0);
        gbc.writeMem(0x58b9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xeb33, gbc.sp());
        EXPECT(0x58bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0066
        gbc.setState(0x59ee, 0xc8ff, 0xa7e0, 0x4711, 0x7d29, 0x6ec9, 0x1, 0x1);
        gbc.writeMem(0x59ee, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc8ff, gbc.sp());
        EXPECT(0x59f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0068
        gbc.setState(0x4dfd, 0x9dde, 0x9270, 0xfc11, 0x9e45, 0x3a5f, 0x1, 0x0);
        gbc.writeMem(0x4dfd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9dde, gbc.sp());
        EXPECT(0x4dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0069
        gbc.setState(0x2deb, 0x8c54, 0x7740, 0x82e, 0x19e6, 0xae0d, 0x1, 0x0);
        gbc.writeMem(0x2deb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8c54, gbc.sp());
        EXPECT(0x2ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 006A
        gbc.setState(0x6ede, 0x8147, 0x8ba0, 0xaec2, 0x49a1, 0xe766, 0x1, 0x0);
        gbc.writeMem(0x6ede, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8147, gbc.sp());
        EXPECT(0x6ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 006B
        gbc.setState(0x2461, 0xc078, 0x75a0, 0x5117, 0xaa52, 0x575a, 0x1, 0x0);
        gbc.writeMem(0x2461, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc078, gbc.sp());
        EXPECT(0x2463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 006C
        gbc.setState(0xa347, 0xd2b7, 0xab60, 0x39dc, 0x1626, 0xa1d1, 0x1, 0x0);
        gbc.writeMem(0xa347, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd2b7, gbc.sp());
        EXPECT(0xa349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa347));
        EXPECT(0x1c, gbc.readMem(0xa348));
        // CB 1C 006E
        gbc.setState(0x12, 0xc056, 0xb7e0, 0xc35f, 0xc39b, 0xd449, 0x1, 0x0);
        gbc.writeMem(0x12, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc056, gbc.sp());
        EXPECT(0x14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 006F
        gbc.setState(0x844b, 0xcd00, 0x1fe0, 0x90ef, 0x2d46, 0x85f4, 0x1, 0x1);
        gbc.writeMem(0x844b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcd00, gbc.sp());
        EXPECT(0x844d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x844b));
        EXPECT(0x1c, gbc.readMem(0x844c));
        // CB 1C 0070
        gbc.setState(0x6539, 0x215f, 0x7150, 0x7ae2, 0x4fdc, 0xd91b, 0x0, 0x1);
        gbc.writeMem(0x6539, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x215f, gbc.sp());
        EXPECT(0x653b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0071
        gbc.setState(0xe4e8, 0x3ea2, 0xc260, 0x9d63, 0xa7ff, 0x5312, 0x0, 0x0);
        gbc.writeMem(0xe4e8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3ea2, gbc.sp());
        EXPECT(0xe4ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e8));
        EXPECT(0x1c, gbc.readMem(0xe4e9));
        // CB 1C 0072
        gbc.setState(0x7620, 0xc7f, 0x6370, 0xceff, 0x26d1, 0xf8b2, 0x1, 0x0);
        gbc.writeMem(0x7620, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc7f, gbc.sp());
        EXPECT(0x7622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0073
        gbc.setState(0xd7a6, 0xfd81, 0xbfb0, 0xa93e, 0xaeb, 0xde72, 0x1, 0x1);
        gbc.writeMem(0xd7a6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfd81, gbc.sp());
        EXPECT(0xd7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a6));
        EXPECT(0x1c, gbc.readMem(0xd7a7));
        // CB 1C 0074
        gbc.setState(0x194f, 0x4aaa, 0x71d0, 0x85c4, 0xbc88, 0x87bf, 0x0, 0x1);
        gbc.writeMem(0x194f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4aaa, gbc.sp());
        EXPECT(0x1951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0075
        gbc.setState(0x14bb, 0x29b2, 0x62c0, 0xa9f7, 0x94d1, 0xf26e, 0x0, 0x1);
        gbc.writeMem(0x14bb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x29b2, gbc.sp());
        EXPECT(0x14bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0076
        gbc.setState(0x8c14, 0x5f74, 0x80f0, 0x5009, 0xbde6, 0xae1a, 0x1, 0x1);
        gbc.writeMem(0x8c14, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5f74, gbc.sp());
        EXPECT(0x8c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c14));
        EXPECT(0x1c, gbc.readMem(0x8c15));
        // CB 1C 0077
        gbc.setState(0xcf32, 0x63a1, 0x4bf0, 0x20ee, 0x2df0, 0x914d, 0x0, 0x1);
        gbc.writeMem(0xcf32, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x63a1, gbc.sp());
        EXPECT(0xcf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf32));
        EXPECT(0x1c, gbc.readMem(0xcf33));
        // CB 1C 0078
        gbc.setState(0x6141, 0xbc64, 0xf9f0, 0x27ad, 0x467d, 0xdd96, 0x1, 0x1);
        gbc.writeMem(0x6141, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbc64, gbc.sp());
        EXPECT(0x6143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0079
        gbc.setState(0xc418, 0x1e92, 0xdd40, 0xecfd, 0x2f3b, 0x7196, 0x1, 0x1);
        gbc.writeMem(0xc418, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1e92, gbc.sp());
        EXPECT(0xc41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc418));
        EXPECT(0x1c, gbc.readMem(0xc419));
        // CB 1C 007A
        gbc.setState(0x5995, 0x8c75, 0x7e30, 0x7350, 0xf015, 0xa016, 0x1, 0x0);
        gbc.writeMem(0x5995, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8c75, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 007B
        gbc.setState(0xc756, 0x49ab, 0x6040, 0x4337, 0xf325, 0xa194, 0x0, 0x0);
        gbc.writeMem(0xc756, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x49ab, gbc.sp());
        EXPECT(0xc758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc756));
        EXPECT(0x1c, gbc.readMem(0xc757));
        // CB 1C 007C
        gbc.setState(0x6222, 0xa717, 0x2320, 0x81d0, 0x5b81, 0xdbf1, 0x1, 0x0);
        gbc.writeMem(0x6222, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa717, gbc.sp());
        EXPECT(0x6224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 007D
        gbc.setState(0x5ef0, 0x283f, 0x1090, 0xe949, 0x1dd, 0xe81, 0x1, 0x0);
        gbc.writeMem(0x5ef0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x283f, gbc.sp());
        EXPECT(0x5ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 007E
        gbc.setState(0x150d, 0xce42, 0x200, 0xd280, 0x67bd, 0x7a33, 0x0, 0x0);
        gbc.writeMem(0x150d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xce42, gbc.sp());
        EXPECT(0x150f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 007F
        gbc.setState(0x8ed8, 0x223d, 0x4020, 0x56a8, 0xaa11, 0x8bbc, 0x1, 0x1);
        gbc.writeMem(0x8ed8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x223d, gbc.sp());
        EXPECT(0x8eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed8));
        EXPECT(0x1c, gbc.readMem(0x8ed9));
        // CB 1C 0080
        gbc.setState(0x46b0, 0x773c, 0xeb50, 0x1bab, 0x3413, 0x7ae, 0x1, 0x1);
        gbc.writeMem(0x46b0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x773c, gbc.sp());
        EXPECT(0x46b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0081
        gbc.setState(0x45de, 0xc15b, 0x3680, 0x8002, 0xfbe5, 0x37c9, 0x1, 0x0);
        gbc.writeMem(0x45de, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc15b, gbc.sp());
        EXPECT(0x45e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0082
        gbc.setState(0x4224, 0xab7d, 0xe710, 0x80d3, 0x5c9, 0xc189, 0x1, 0x0);
        gbc.writeMem(0x4224, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xab7d, gbc.sp());
        EXPECT(0x4226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0084
        gbc.setState(0x7cca, 0x47c1, 0x4440, 0x54f9, 0xb06c, 0xe981, 0x0, 0x0);
        gbc.writeMem(0x7cca, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x47c1, gbc.sp());
        EXPECT(0x7ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0085
        gbc.setState(0xe56a, 0xba1c, 0x1a0, 0x5162, 0x2252, 0x2e9c, 0x0, 0x1);
        gbc.writeMem(0xe56a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xba1c, gbc.sp());
        EXPECT(0xe56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56a));
        EXPECT(0x1c, gbc.readMem(0xe56b));
        // CB 1C 0086
        gbc.setState(0x85d5, 0x990d, 0xb460, 0x29a7, 0xeb7f, 0x90fc, 0x1, 0x1);
        gbc.writeMem(0x85d5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x990d, gbc.sp());
        EXPECT(0x85d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d5));
        EXPECT(0x1c, gbc.readMem(0x85d6));
        // CB 1C 0087
        gbc.setState(0x6562, 0x5fae, 0xbf70, 0xee26, 0xd414, 0x5a7c, 0x1, 0x1);
        gbc.writeMem(0x6562, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5fae, gbc.sp());
        EXPECT(0x6564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0088
        gbc.setState(0x546, 0x1f3c, 0x58b0, 0xf0f5, 0x791e, 0x3228, 0x1, 0x1);
        gbc.writeMem(0x546, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1f3c, gbc.sp());
        EXPECT(0x548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0089
        gbc.setState(0xb66c, 0x8e75, 0xa4a0, 0x4ddc, 0x714a, 0x536, 0x1, 0x1);
        gbc.writeMem(0xb66c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8e75, gbc.sp());
        EXPECT(0xb66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb66c));
        EXPECT(0x1c, gbc.readMem(0xb66d));
        // CB 1C 008A
        gbc.setState(0x198d, 0x79c8, 0x1d30, 0xc683, 0x5fa3, 0x36f1, 0x0, 0x0);
        gbc.writeMem(0x198d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x79c8, gbc.sp());
        EXPECT(0x198f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 008B
        gbc.setState(0x402e, 0xe969, 0xf800, 0x2020, 0xcbf2, 0x9cc4, 0x0, 0x1);
        gbc.writeMem(0x402e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe969, gbc.sp());
        EXPECT(0x4030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 008C
        gbc.setState(0x63e7, 0x2f34, 0xb0d0, 0x3a1f, 0x978e, 0x8418, 0x0, 0x1);
        gbc.writeMem(0x63e7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2f34, gbc.sp());
        EXPECT(0x63e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 008D
        gbc.setState(0x5b3e, 0x4a72, 0x5470, 0xcce5, 0x3b79, 0x5e7, 0x1, 0x1);
        gbc.writeMem(0x5b3e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4a72, gbc.sp());
        EXPECT(0x5b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 008E
        gbc.setState(0x9404, 0xe84e, 0x76c0, 0x680d, 0x8eba, 0xf6a3, 0x1, 0x0);
        gbc.writeMem(0x9404, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe84e, gbc.sp());
        EXPECT(0x9406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9404));
        EXPECT(0x1c, gbc.readMem(0x9405));
        // CB 1C 008F
        gbc.setState(0x6462, 0x24b1, 0x8d90, 0xeb6c, 0x829b, 0x6da2, 0x0, 0x0);
        gbc.writeMem(0x6462, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x24b1, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0090
        gbc.setState(0xa149, 0xb987, 0x37c0, 0xa0f, 0x280e, 0xcd9f, 0x0, 0x1);
        gbc.writeMem(0xa149, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb987, gbc.sp());
        EXPECT(0xa14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa149));
        EXPECT(0x1c, gbc.readMem(0xa14a));
        // CB 1C 0091
        gbc.setState(0xbd07, 0x9cd7, 0xf880, 0xf056, 0x7597, 0x6247, 0x1, 0x0);
        gbc.writeMem(0xbd07, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9cd7, gbc.sp());
        EXPECT(0xbd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd07));
        EXPECT(0x1c, gbc.readMem(0xbd08));
        // CB 1C 0092
        gbc.setState(0x9750, 0xb078, 0xb690, 0x9c84, 0x515b, 0xea5, 0x1, 0x1);
        gbc.writeMem(0x9750, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb078, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9750));
        EXPECT(0x1c, gbc.readMem(0x9751));
        // CB 1C 0093
        gbc.setState(0x6b5c, 0x43bc, 0x1460, 0xb0f1, 0x9234, 0x8ab9, 0x1, 0x1);
        gbc.writeMem(0x6b5c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x43bc, gbc.sp());
        EXPECT(0x6b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0094
        gbc.setState(0x9a67, 0x5d97, 0x8430, 0xae9d, 0x2796, 0xd628, 0x1, 0x0);
        gbc.writeMem(0x9a67, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5d97, gbc.sp());
        EXPECT(0x9a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a67));
        EXPECT(0x1c, gbc.readMem(0x9a68));
        // CB 1C 0095
        gbc.setState(0x8b4d, 0x6429, 0x2330, 0x815c, 0xdefd, 0x5bcd, 0x1, 0x1);
        gbc.writeMem(0x8b4d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6429, gbc.sp());
        EXPECT(0x8b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4d));
        EXPECT(0x1c, gbc.readMem(0x8b4e));
        // CB 1C 0096
        gbc.setState(0xe052, 0x60f1, 0xc930, 0xb997, 0x39f4, 0x7034, 0x1, 0x1);
        gbc.writeMem(0xe052, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x60f1, gbc.sp());
        EXPECT(0xe054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe052));
        EXPECT(0x1c, gbc.readMem(0xe053));
        // CB 1C 0097
        gbc.setState(0x4880, 0xd4f0, 0x3c90, 0x8d43, 0xbba9, 0x459d, 0x0, 0x1);
        gbc.writeMem(0x4880, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd4f0, gbc.sp());
        EXPECT(0x4882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0098
        gbc.setState(0x3b6, 0xfc46, 0xe330, 0x93ed, 0x268b, 0x427e, 0x1, 0x1);
        gbc.writeMem(0x3b6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfc46, gbc.sp());
        EXPECT(0x3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0099
        gbc.setState(0x29e0, 0x6f9d, 0x4b80, 0xf218, 0x24f8, 0xa7e6, 0x0, 0x1);
        gbc.writeMem(0x29e0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6f9d, gbc.sp());
        EXPECT(0x29e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 009A
        gbc.setState(0x5843, 0x9dd5, 0xddf0, 0x7ce2, 0xd6b7, 0xf2d4, 0x1, 0x0);
        gbc.writeMem(0x5843, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9dd5, gbc.sp());
        EXPECT(0x5845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 009B
        gbc.setState(0xb05f, 0xcafb, 0xe170, 0x54ae, 0xfccf, 0xb4bf, 0x1, 0x1);
        gbc.writeMem(0xb05f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcafb, gbc.sp());
        EXPECT(0xb061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05f));
        EXPECT(0x1c, gbc.readMem(0xb060));
        // CB 1C 009C
        gbc.setState(0xab32, 0xf195, 0x9210, 0x193c, 0xa6be, 0x666, 0x0, 0x0);
        gbc.writeMem(0xab32, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf195, gbc.sp());
        EXPECT(0xab34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab32));
        EXPECT(0x1c, gbc.readMem(0xab33));
        // CB 1C 009D
        gbc.setState(0x5470, 0xb5e4, 0xc820, 0x618, 0xb06a, 0x1a04, 0x1, 0x1);
        gbc.writeMem(0x5470, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb5e4, gbc.sp());
        EXPECT(0x5472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 009E
        gbc.setState(0xbf97, 0xe7f1, 0xa0d0, 0x74e4, 0x4851, 0x9257, 0x0, 0x0);
        gbc.writeMem(0xbf97, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0xbf99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf97));
        EXPECT(0x1c, gbc.readMem(0xbf98));
        // CB 1C 009F
        gbc.setState(0xd002, 0x68bc, 0xb050, 0x8518, 0xac5b, 0x7659, 0x1, 0x1);
        gbc.writeMem(0xd002, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x68bc, gbc.sp());
        EXPECT(0xd004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd002));
        EXPECT(0x1c, gbc.readMem(0xd003));
        // CB 1C 00A0
        gbc.setState(0x953e, 0x9fb2, 0x6eb0, 0x89b, 0x3355, 0x630f, 0x1, 0x1);
        gbc.writeMem(0x953e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9fb2, gbc.sp());
        EXPECT(0x9540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953e));
        EXPECT(0x1c, gbc.readMem(0x953f));
        // CB 1C 00A1
        gbc.setState(0x7b36, 0x8051, 0x12f0, 0xc8aa, 0xf197, 0xe12d, 0x0, 0x1);
        gbc.writeMem(0x7b36, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8051, gbc.sp());
        EXPECT(0x7b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00A2
        gbc.setState(0xb02d, 0xdb8, 0x970, 0x4603, 0x9fdf, 0xd0e1, 0x0, 0x1);
        gbc.writeMem(0xb02d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdb8, gbc.sp());
        EXPECT(0xb02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02d));
        EXPECT(0x1c, gbc.readMem(0xb02e));
        // CB 1C 00A4
        gbc.setState(0x2b20, 0x3c57, 0x1760, 0x3aa7, 0xc055, 0x860f, 0x1, 0x0);
        gbc.writeMem(0x2b20, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3c57, gbc.sp());
        EXPECT(0x2b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00A5
        gbc.setState(0x83b3, 0xaa9d, 0xec30, 0xb9f7, 0x280f, 0xd37c, 0x0, 0x0);
        gbc.writeMem(0x83b3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xaa9d, gbc.sp());
        EXPECT(0x83b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b3));
        EXPECT(0x1c, gbc.readMem(0x83b4));
        // CB 1C 00A6
        gbc.setState(0x4f15, 0x244, 0xcb60, 0x59b5, 0xd4d8, 0xc533, 0x0, 0x0);
        gbc.writeMem(0x4f15, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x244, gbc.sp());
        EXPECT(0x4f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00A7
        gbc.setState(0x13b2, 0xcc72, 0x770, 0xcf, 0x1b35, 0x6b08, 0x0, 0x0);
        gbc.writeMem(0x13b2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcc72, gbc.sp());
        EXPECT(0x13b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00A8
        gbc.setState(0xc2d, 0xba6a, 0x77a0, 0xc8f3, 0x1753, 0x933b, 0x1, 0x0);
        gbc.writeMem(0xc2d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xba6a, gbc.sp());
        EXPECT(0xc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00A9
        gbc.setState(0xb4ae, 0xb62d, 0x6160, 0x89c9, 0x1154, 0x46a5, 0x1, 0x1);
        gbc.writeMem(0xb4ae, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb62d, gbc.sp());
        EXPECT(0xb4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ae));
        EXPECT(0x1c, gbc.readMem(0xb4af));
        // CB 1C 00AA
        gbc.setState(0x985b, 0xe6c7, 0x3e90, 0x1f19, 0xed89, 0x58d0, 0x0, 0x1);
        gbc.writeMem(0x985b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe6c7, gbc.sp());
        EXPECT(0x985d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985b));
        EXPECT(0x1c, gbc.readMem(0x985c));
        // CB 1C 00AB
        gbc.setState(0xd8f, 0x22a9, 0x8510, 0x7a4b, 0x9a95, 0x677b, 0x0, 0x1);
        gbc.writeMem(0xd8f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x22a9, gbc.sp());
        EXPECT(0xd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00AC
        gbc.setState(0xd37, 0x5aea, 0x47a0, 0xc0b4, 0x1912, 0x9b53, 0x0, 0x0);
        gbc.writeMem(0xd37, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5aea, gbc.sp());
        EXPECT(0xd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00AD
        gbc.setState(0xabea, 0xba29, 0x990, 0x5933, 0x9973, 0x7671, 0x0, 0x0);
        gbc.writeMem(0xabea, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xba29, gbc.sp());
        EXPECT(0xabec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabea));
        EXPECT(0x1c, gbc.readMem(0xabeb));
        // CB 1C 00AE
        gbc.setState(0x8599, 0x5d48, 0x2ac0, 0xaa10, 0x1eaa, 0xd67a, 0x0, 0x0);
        gbc.writeMem(0x8599, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5d48, gbc.sp());
        EXPECT(0x859b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8599));
        EXPECT(0x1c, gbc.readMem(0x859a));
        // CB 1C 00AF
        gbc.setState(0xa14b, 0x5290, 0x6150, 0x35ce, 0x5a30, 0x2b1f, 0x0, 0x1);
        gbc.writeMem(0xa14b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5290, gbc.sp());
        EXPECT(0xa14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14b));
        EXPECT(0x1c, gbc.readMem(0xa14c));
        // CB 1C 00B0
        gbc.setState(0x679b, 0x92f0, 0xb5a0, 0x29bc, 0x190b, 0xb04c, 0x1, 0x1);
        gbc.writeMem(0x679b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x92f0, gbc.sp());
        EXPECT(0x679d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00B1
        gbc.setState(0x6bbf, 0xeebe, 0xf9f0, 0x73dd, 0xc5ad, 0x2e8, 0x0, 0x0);
        gbc.writeMem(0x6bbf, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xeebe, gbc.sp());
        EXPECT(0x6bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00B2
        gbc.setState(0x6bb1, 0x31d5, 0x4210, 0xaa2b, 0xa5dc, 0x9e3a, 0x0, 0x1);
        gbc.writeMem(0x6bb1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x31d5, gbc.sp());
        EXPECT(0x6bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00B3
        gbc.setState(0xa2fd, 0x9e5a, 0xe680, 0x4709, 0xff9b, 0x63c8, 0x1, 0x0);
        gbc.writeMem(0xa2fd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9e5a, gbc.sp());
        EXPECT(0xa2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fd));
        EXPECT(0x1c, gbc.readMem(0xa2fe));
        // CB 1C 00B4
        gbc.setState(0xbce, 0x42f3, 0x58b0, 0xffe3, 0xc0b, 0xb9a8, 0x0, 0x0);
        gbc.writeMem(0xbce, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x42f3, gbc.sp());
        EXPECT(0xbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00B5
        gbc.setState(0x9f54, 0x5298, 0x8750, 0xafab, 0x9d39, 0x6230, 0x1, 0x0);
        gbc.writeMem(0x9f54, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5298, gbc.sp());
        EXPECT(0x9f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f54));
        EXPECT(0x1c, gbc.readMem(0x9f55));
        // CB 1C 00B7
        gbc.setState(0x1234, 0x8270, 0x29e0, 0x6743, 0xf466, 0x5806, 0x0, 0x0);
        gbc.writeMem(0x1234, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8270, gbc.sp());
        EXPECT(0x1236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00B8
        gbc.setState(0x3fa5, 0x9ec6, 0xbb90, 0xc591, 0xc448, 0x15c3, 0x1, 0x1);
        gbc.writeMem(0x3fa5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9ec6, gbc.sp());
        EXPECT(0x3fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00B9
        gbc.setState(0x90cf, 0x12b4, 0x2940, 0xa377, 0xb35b, 0x37b6, 0x0, 0x1);
        gbc.writeMem(0x90cf, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x12b4, gbc.sp());
        EXPECT(0x90d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90cf));
        EXPECT(0x1c, gbc.readMem(0x90d0));
        // CB 1C 00BA
        gbc.setState(0x3f0d, 0x5a46, 0x1570, 0xca9d, 0xe150, 0xac97, 0x1, 0x0);
        gbc.writeMem(0x3f0d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5a46, gbc.sp());
        EXPECT(0x3f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00BB
        gbc.setState(0x9e2c, 0x57f5, 0x34c0, 0xc4aa, 0x8ef0, 0x4ede, 0x0, 0x1);
        gbc.writeMem(0x9e2c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x57f5, gbc.sp());
        EXPECT(0x9e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2c));
        EXPECT(0x1c, gbc.readMem(0x9e2d));
        // CB 1C 00BC
        gbc.setState(0xa91a, 0x244c, 0x2460, 0x64b8, 0x76ad, 0x721b, 0x1, 0x1);
        gbc.writeMem(0xa91a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x244c, gbc.sp());
        EXPECT(0xa91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91a));
        EXPECT(0x1c, gbc.readMem(0xa91b));
        // CB 1C 00BD
        gbc.setState(0xdeb9, 0x3b55, 0x9a20, 0x372a, 0x3ee9, 0x308b, 0x1, 0x1);
        gbc.writeMem(0xdeb9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3b55, gbc.sp());
        EXPECT(0xdebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb9));
        EXPECT(0x1c, gbc.readMem(0xdeba));
        // CB 1C 00BE
        gbc.setState(0x6da8, 0x8c4f, 0xcc40, 0x95da, 0x7e0e, 0xd61e, 0x0, 0x1);
        gbc.writeMem(0x6da8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8c4f, gbc.sp());
        EXPECT(0x6daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00BF
        gbc.setState(0xd7b9, 0x37a1, 0x13f0, 0xb412, 0xd4df, 0x4b8c, 0x1, 0x1);
        gbc.writeMem(0xd7b9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x37a1, gbc.sp());
        EXPECT(0xd7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b9));
        EXPECT(0x1c, gbc.readMem(0xd7ba));
        // CB 1C 00C0
        gbc.setState(0x13b0, 0x7921, 0x3cb0, 0x654f, 0xf88c, 0x9b3b, 0x0, 0x1);
        gbc.writeMem(0x13b0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7921, gbc.sp());
        EXPECT(0x13b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00C1
        gbc.setState(0x5fc8, 0x362, 0xf040, 0x4bcb, 0x4ab8, 0xd197, 0x1, 0x0);
        gbc.writeMem(0x5fc8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x362, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00C2
        gbc.setState(0x4541, 0x6c1a, 0x92b0, 0xed18, 0xb3cd, 0x5812, 0x1, 0x0);
        gbc.writeMem(0x4541, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6c1a, gbc.sp());
        EXPECT(0x4543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00C3
        gbc.setState(0xc50c, 0x916, 0x9910, 0xb27b, 0x4c15, 0x8411, 0x0, 0x0);
        gbc.writeMem(0xc50c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x916, gbc.sp());
        EXPECT(0xc50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50c));
        EXPECT(0x1c, gbc.readMem(0xc50d));
        // CB 1C 00C4
        gbc.setState(0x836a, 0x26c, 0xc860, 0x80c2, 0x904f, 0xc7da, 0x1, 0x1);
        gbc.writeMem(0x836a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x26c, gbc.sp());
        EXPECT(0x836c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836a));
        EXPECT(0x1c, gbc.readMem(0x836b));
        // CB 1C 00C5
        gbc.setState(0x252b, 0xcfc0, 0x5f90, 0xbb7d, 0x360, 0x8655, 0x0, 0x0);
        gbc.writeMem(0x252b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcfc0, gbc.sp());
        EXPECT(0x252d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00C6
        gbc.setState(0xb7d2, 0xa037, 0xbb50, 0xf152, 0x519c, 0x4468, 0x0, 0x0);
        gbc.writeMem(0xb7d2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa037, gbc.sp());
        EXPECT(0xb7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d2));
        EXPECT(0x1c, gbc.readMem(0xb7d3));
        // CB 1C 00C7
        gbc.setState(0xad79, 0x2a02, 0x3590, 0xcd83, 0x74af, 0x67bb, 0x0, 0x0);
        gbc.writeMem(0xad79, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2a02, gbc.sp());
        EXPECT(0xad7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad79));
        EXPECT(0x1c, gbc.readMem(0xad7a));
        // CB 1C 00C8
        gbc.setState(0x37e1, 0xaa76, 0x8610, 0x8d31, 0xfe3d, 0x27a2, 0x1, 0x0);
        gbc.writeMem(0x37e1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaa76, gbc.sp());
        EXPECT(0x37e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00C9
        gbc.setState(0x5f2b, 0x95f, 0x5660, 0x5f54, 0xf6eb, 0x4446, 0x1, 0x1);
        gbc.writeMem(0x5f2b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x95f, gbc.sp());
        EXPECT(0x5f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00CA
        gbc.setState(0xa182, 0xc10e, 0xa730, 0xee01, 0xd5d7, 0xaf90, 0x0, 0x1);
        gbc.writeMem(0xa182, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc10e, gbc.sp());
        EXPECT(0xa184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa182));
        EXPECT(0x1c, gbc.readMem(0xa183));
        // CB 1C 00CB
        gbc.setState(0x4a60, 0x3495, 0x1eb0, 0xbff5, 0x6713, 0xd8db, 0x0, 0x0);
        gbc.writeMem(0x4a60, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3495, gbc.sp());
        EXPECT(0x4a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00CC
        gbc.setState(0x4a05, 0x975f, 0x73e0, 0xabcd, 0xd785, 0x332d, 0x0, 0x0);
        gbc.writeMem(0x4a05, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x975f, gbc.sp());
        EXPECT(0x4a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00CD
        gbc.setState(0xad28, 0x2a1b, 0x9950, 0x3469, 0x1b63, 0x661, 0x1, 0x1);
        gbc.writeMem(0xad28, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2a1b, gbc.sp());
        EXPECT(0xad2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad28));
        EXPECT(0x1c, gbc.readMem(0xad29));
        // CB 1C 00CE
        gbc.setState(0x59f3, 0xd5de, 0x2230, 0x43bf, 0x1c4b, 0x1a55, 0x0, 0x0);
        gbc.writeMem(0x59f3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd5de, gbc.sp());
        EXPECT(0x59f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00CF
        gbc.setState(0x3864, 0xc6a6, 0x6e70, 0x3265, 0xd68d, 0x5344, 0x1, 0x0);
        gbc.writeMem(0x3864, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc6a6, gbc.sp());
        EXPECT(0x3866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00D0
        gbc.setState(0xa37b, 0x91cd, 0xd010, 0x2548, 0x2cad, 0xab9e, 0x1, 0x1);
        gbc.writeMem(0xa37b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x91cd, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37b));
        EXPECT(0x1c, gbc.readMem(0xa37c));
        // CB 1C 00D1
        gbc.setState(0xcb6c, 0x2f17, 0x7e40, 0xaed1, 0xf5c2, 0x296, 0x1, 0x0);
        gbc.writeMem(0xcb6c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2f17, gbc.sp());
        EXPECT(0xcb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6c));
        EXPECT(0x1c, gbc.readMem(0xcb6d));
        // CB 1C 00D2
        gbc.setState(0x98ae, 0xa05c, 0x25b0, 0xfb93, 0xd7e6, 0x2f8d, 0x0, 0x1);
        gbc.writeMem(0x98ae, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa05c, gbc.sp());
        EXPECT(0x98b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ae));
        EXPECT(0x1c, gbc.readMem(0x98af));
        // CB 1C 00D3
        gbc.setState(0x281a, 0xee8, 0x5570, 0xe971, 0x8db2, 0x7ff6, 0x1, 0x1);
        gbc.writeMem(0x281a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xee8, gbc.sp());
        EXPECT(0x281c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00D5
        gbc.setState(0xf42, 0xaa91, 0x86f0, 0x2496, 0xe297, 0xcbd1, 0x0, 0x1);
        gbc.writeMem(0xf42, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaa91, gbc.sp());
        EXPECT(0xf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00D6
        gbc.setState(0xdb97, 0xe46e, 0x2030, 0xe07b, 0x2a4e, 0x7549, 0x1, 0x0);
        gbc.writeMem(0xdb97, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe46e, gbc.sp());
        EXPECT(0xdb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb97));
        EXPECT(0x1c, gbc.readMem(0xdb98));
        // CB 1C 00D7
        gbc.setState(0x1b77, 0x26f5, 0xcb0, 0xcf73, 0x1122, 0x2493, 0x1, 0x1);
        gbc.writeMem(0x1b77, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x26f5, gbc.sp());
        EXPECT(0x1b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00D8
        gbc.setState(0x747e, 0xff68, 0x3180, 0xf52a, 0xae42, 0x71fb, 0x0, 0x0);
        gbc.writeMem(0x747e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xff68, gbc.sp());
        EXPECT(0x7480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00D9
        gbc.setState(0x8316, 0xf8d8, 0xe240, 0x40b7, 0xfb62, 0x4a31, 0x0, 0x1);
        gbc.writeMem(0x8316, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf8d8, gbc.sp());
        EXPECT(0x8318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8316));
        EXPECT(0x1c, gbc.readMem(0x8317));
        // CB 1C 00DC
        gbc.setState(0xc010, 0xd149, 0x3a70, 0xcfd5, 0x4cf9, 0x382d, 0x1, 0x1);
        gbc.writeMem(0xc010, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd149, gbc.sp());
        EXPECT(0xc012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc010));
        EXPECT(0x1c, gbc.readMem(0xc011));
        // CB 1C 00DE
        gbc.setState(0x98e2, 0xa600, 0xaf90, 0x56c2, 0x1c60, 0x1c56, 0x0, 0x1);
        gbc.writeMem(0x98e2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa600, gbc.sp());
        EXPECT(0x98e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e2));
        EXPECT(0x1c, gbc.readMem(0x98e3));
        // CB 1C 00DF
        gbc.setState(0x97b4, 0xddc3, 0xa7f0, 0x4ca8, 0x3f1c, 0xacea, 0x0, 0x1);
        gbc.writeMem(0x97b4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xddc3, gbc.sp());
        EXPECT(0x97b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b4));
        EXPECT(0x1c, gbc.readMem(0x97b5));
        // CB 1C 00E0
        gbc.setState(0x1c43, 0xcc35, 0x3550, 0x41b8, 0x91e6, 0x5740, 0x1, 0x1);
        gbc.writeMem(0x1c43, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcc35, gbc.sp());
        EXPECT(0x1c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00E1
        gbc.setState(0xdccd, 0x4e96, 0x3200, 0xbab2, 0xe58d, 0x9073, 0x1, 0x0);
        gbc.writeMem(0xdccd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4e96, gbc.sp());
        EXPECT(0xdccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccd));
        EXPECT(0x1c, gbc.readMem(0xdcce));
        // CB 1C 00E2
        gbc.setState(0xb624, 0xab2f, 0xbc60, 0xc5be, 0xe662, 0xabc5, 0x0, 0x0);
        gbc.writeMem(0xb624, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xab2f, gbc.sp());
        EXPECT(0xb626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb624));
        EXPECT(0x1c, gbc.readMem(0xb625));
        // CB 1C 00E3
        gbc.setState(0x7419, 0x893, 0x1e50, 0xfa10, 0xd216, 0x8ede, 0x0, 0x1);
        gbc.writeMem(0x7419, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x893, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00E4
        gbc.setState(0xeb77, 0xb091, 0xf640, 0x3bae, 0xc970, 0xce3e, 0x1, 0x0);
        gbc.writeMem(0xeb77, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb091, gbc.sp());
        EXPECT(0xeb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb77));
        EXPECT(0x1c, gbc.readMem(0xeb78));
        // CB 1C 00E5
        gbc.setState(0x76ca, 0x57c3, 0xeb20, 0x1288, 0x297, 0x7222, 0x0, 0x0);
        gbc.writeMem(0x76ca, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x57c3, gbc.sp());
        EXPECT(0x76cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00E6
        gbc.setState(0x2837, 0x5c08, 0x6aa0, 0x6079, 0x933c, 0xbb89, 0x0, 0x0);
        gbc.writeMem(0x2837, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5c08, gbc.sp());
        EXPECT(0x2839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00E7
        gbc.setState(0xe984, 0x32f, 0x9100, 0x1635, 0x967d, 0xdd56, 0x1, 0x0);
        gbc.writeMem(0xe984, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x32f, gbc.sp());
        EXPECT(0xe986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe984));
        EXPECT(0x1c, gbc.readMem(0xe985));
        // CB 1C 00E8
        gbc.setState(0x4b77, 0x6893, 0xe160, 0x7629, 0x11c0, 0xa442, 0x1, 0x0);
        gbc.writeMem(0x4b77, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6893, gbc.sp());
        EXPECT(0x4b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00E9
        gbc.setState(0x110c, 0x5748, 0x45c0, 0xa05c, 0x8df, 0x6e5, 0x1, 0x0);
        gbc.writeMem(0x110c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5748, gbc.sp());
        EXPECT(0x110e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00EA
        gbc.setState(0x3edf, 0x7685, 0xc740, 0xf790, 0x343f, 0x75f1, 0x1, 0x1);
        gbc.writeMem(0x3edf, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0x3ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00EB
        gbc.setState(0xcb2b, 0xde46, 0x33e0, 0x472, 0xff3a, 0x1f73, 0x0, 0x1);
        gbc.writeMem(0xcb2b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xde46, gbc.sp());
        EXPECT(0xcb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2b));
        EXPECT(0x1c, gbc.readMem(0xcb2c));
        // CB 1C 00EC
        gbc.setState(0x75de, 0xf1ee, 0x71e0, 0x1965, 0xa97c, 0xeae7, 0x1, 0x0);
        gbc.writeMem(0x75de, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf1ee, gbc.sp());
        EXPECT(0x75e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00ED
        gbc.setState(0x4c67, 0x5342, 0x7070, 0x8245, 0xe48a, 0xb58b, 0x1, 0x1);
        gbc.writeMem(0x4c67, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5342, gbc.sp());
        EXPECT(0x4c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00EE
        gbc.setState(0xad14, 0x618b, 0x1e0, 0xdd0d, 0x4b04, 0x4eaa, 0x1, 0x1);
        gbc.writeMem(0xad14, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x618b, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad14));
        EXPECT(0x1c, gbc.readMem(0xad15));
        // CB 1C 00EF
        gbc.setState(0xe57e, 0xbbdc, 0x7630, 0xdadd, 0x7faa, 0xadfa, 0x1, 0x1);
        gbc.writeMem(0xe57e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbbdc, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57e));
        EXPECT(0x1c, gbc.readMem(0xe57f));
        // CB 1C 00F0
        gbc.setState(0x4e76, 0x7ed8, 0xb6b0, 0x3756, 0x3c16, 0x1c6f, 0x0, 0x1);
        gbc.writeMem(0x4e76, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7ed8, gbc.sp());
        EXPECT(0x4e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00F1
        gbc.setState(0x884f, 0x96a6, 0x9810, 0xdd91, 0x2644, 0x255a, 0x0, 0x0);
        gbc.writeMem(0x884f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x96a6, gbc.sp());
        EXPECT(0x8851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884f));
        EXPECT(0x1c, gbc.readMem(0x8850));
        // CB 1C 00F2
        gbc.setState(0x8a76, 0x44b4, 0xa510, 0x767c, 0xfc05, 0x8a87, 0x1, 0x0);
        gbc.writeMem(0x8a76, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x44b4, gbc.sp());
        EXPECT(0x8a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a76));
        EXPECT(0x1c, gbc.readMem(0x8a77));
        // CB 1C 00F3
        gbc.setState(0x1d0a, 0x897a, 0x5330, 0x90d8, 0xb5bc, 0x4119, 0x0, 0x0);
        gbc.writeMem(0x1d0a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x897a, gbc.sp());
        EXPECT(0x1d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00F4
        gbc.setState(0x96b6, 0xc17, 0xb6b0, 0x5386, 0x43bb, 0x5457, 0x1, 0x0);
        gbc.writeMem(0x96b6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc17, gbc.sp());
        EXPECT(0x96b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b6));
        EXPECT(0x1c, gbc.readMem(0x96b7));
        // CB 1C 00F5
        gbc.setState(0xda66, 0x3ab4, 0x5610, 0x50ff, 0xd3d4, 0xcb4, 0x1, 0x1);
        gbc.writeMem(0xda66, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3ab4, gbc.sp());
        EXPECT(0xda68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda66));
        EXPECT(0x1c, gbc.readMem(0xda67));
        // CB 1C 00F6
        gbc.setState(0xec1, 0x771c, 0x4690, 0x4027, 0x60a1, 0x236e, 0x0, 0x0);
        gbc.writeMem(0xec1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x771c, gbc.sp());
        EXPECT(0xec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00F7
        gbc.setState(0xe5b, 0x8fe5, 0x4d40, 0x3dd5, 0xba0a, 0x4cd9, 0x1, 0x0);
        gbc.writeMem(0xe5b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8fe5, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00F8
        gbc.setState(0xc651, 0x4b6d, 0x2500, 0x20e1, 0x6462, 0x8c42, 0x0, 0x1);
        gbc.writeMem(0xc651, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4b6d, gbc.sp());
        EXPECT(0xc653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc651));
        EXPECT(0x1c, gbc.readMem(0xc652));
        // CB 1C 00F9
        gbc.setState(0x8388, 0x24c9, 0x3340, 0x12af, 0x940d, 0x8829, 0x1, 0x1);
        gbc.writeMem(0x8388, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x24c9, gbc.sp());
        EXPECT(0x838a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8388));
        EXPECT(0x1c, gbc.readMem(0x8389));
        // CB 1C 00FA
        gbc.setState(0x14c3, 0x9cb8, 0x6950, 0x4bc0, 0x6d26, 0xde5, 0x0, 0x0);
        gbc.writeMem(0x14c3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0x14c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00FB
        gbc.setState(0x84af, 0x1342, 0x3650, 0xcd34, 0xa577, 0x5f94, 0x1, 0x0);
        gbc.writeMem(0x84af, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1342, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84af));
        EXPECT(0x1c, gbc.readMem(0x84b0));
        // CB 1C 00FC
        gbc.setState(0x75e7, 0x3fdd, 0xdc10, 0x2456, 0x4a0d, 0xdef, 0x1, 0x0);
        gbc.writeMem(0x75e7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3fdd, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00FD
        gbc.setState(0x249d, 0x1e02, 0x5610, 0xe98d, 0x40d1, 0x831d, 0x0, 0x1);
        gbc.writeMem(0x249d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1e02, gbc.sp());
        EXPECT(0x249f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 00FE
        gbc.setState(0xd73, 0xa308, 0x6d20, 0x740e, 0xc38b, 0x6c98, 0x1, 0x0);
        gbc.writeMem(0xd73, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa308, gbc.sp());
        EXPECT(0xd75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 00FF
        gbc.setState(0xa6ca, 0x427a, 0x2880, 0x4df1, 0xdb16, 0x933e, 0x0, 0x0);
        gbc.writeMem(0xa6ca, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x427a, gbc.sp());
        EXPECT(0xa6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ca));
        EXPECT(0x1c, gbc.readMem(0xa6cb));
        // CB 1C 0100
        gbc.setState(0x3fc5, 0xe19c, 0xb750, 0xcdd9, 0x2eb9, 0x72ad, 0x1, 0x1);
        gbc.writeMem(0x3fc5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe19c, gbc.sp());
        EXPECT(0x3fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0101
        gbc.setState(0x3664, 0xc0e4, 0x9540, 0x2c, 0xbf4e, 0x8ce4, 0x1, 0x0);
        gbc.writeMem(0x3664, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc0e4, gbc.sp());
        EXPECT(0x3666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0102
        gbc.setState(0xbaed, 0x797a, 0xf510, 0xc610, 0xb41b, 0x299d, 0x0, 0x0);
        gbc.writeMem(0xbaed, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x797a, gbc.sp());
        EXPECT(0xbaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaed));
        EXPECT(0x1c, gbc.readMem(0xbaee));
        // CB 1C 0103
        gbc.setState(0xef89, 0xb28e, 0x1ca0, 0x76c1, 0x2d9b, 0x97c6, 0x1, 0x0);
        gbc.writeMem(0xef89, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb28e, gbc.sp());
        EXPECT(0xef8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef89));
        EXPECT(0x1c, gbc.readMem(0xef8a));
        // CB 1C 0104
        gbc.setState(0xb690, 0x411e, 0xb020, 0x703f, 0x825f, 0x91d5, 0x0, 0x0);
        gbc.writeMem(0xb690, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x411e, gbc.sp());
        EXPECT(0xb692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb690));
        EXPECT(0x1c, gbc.readMem(0xb691));
        // CB 1C 0105
        gbc.setState(0xb8d7, 0x54fa, 0xb160, 0x579e, 0x6b6, 0xc556, 0x0, 0x1);
        gbc.writeMem(0xb8d7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x54fa, gbc.sp());
        EXPECT(0xb8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d7));
        EXPECT(0x1c, gbc.readMem(0xb8d8));
        // CB 1C 0106
        gbc.setState(0xaec4, 0xcdf8, 0xc3f0, 0xb6ec, 0xbfa1, 0xc341, 0x0, 0x0);
        gbc.writeMem(0xaec4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcdf8, gbc.sp());
        EXPECT(0xaec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec4));
        EXPECT(0x1c, gbc.readMem(0xaec5));
        // CB 1C 0107
        gbc.setState(0x1fc, 0x2ac9, 0xa620, 0xac1e, 0xa4fb, 0x30f8, 0x1, 0x0);
        gbc.writeMem(0x1fc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2ac9, gbc.sp());
        EXPECT(0x1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0108
        gbc.setState(0xe204, 0xd105, 0xa680, 0x510c, 0xe5e2, 0x2807, 0x0, 0x0);
        gbc.writeMem(0xe204, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd105, gbc.sp());
        EXPECT(0xe206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe204));
        EXPECT(0x1c, gbc.readMem(0xe205));
        // CB 1C 0109
        gbc.setState(0x2289, 0xd33d, 0xaa30, 0x3dde, 0xda, 0x92d9, 0x1, 0x0);
        gbc.writeMem(0x2289, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0x228b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 010A
        gbc.setState(0x4747, 0x73ed, 0x1940, 0x6cb7, 0x2149, 0xab1c, 0x0, 0x0);
        gbc.writeMem(0x4747, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x73ed, gbc.sp());
        EXPECT(0x4749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 010B
        gbc.setState(0xd026, 0x77c1, 0x6c80, 0xbb3e, 0xc81f, 0x2d8c, 0x0, 0x1);
        gbc.writeMem(0xd026, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x77c1, gbc.sp());
        EXPECT(0xd028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd026));
        EXPECT(0x1c, gbc.readMem(0xd027));
        // CB 1C 010C
        gbc.setState(0x6ef5, 0x7f05, 0xade0, 0x249a, 0xb6ae, 0x3955, 0x0, 0x0);
        gbc.writeMem(0x6ef5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7f05, gbc.sp());
        EXPECT(0x6ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 010D
        gbc.setState(0x2c72, 0x43de, 0xa430, 0x8a16, 0x8ef7, 0x77ad, 0x1, 0x1);
        gbc.writeMem(0x2c72, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x43de, gbc.sp());
        EXPECT(0x2c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 010E
        gbc.setState(0xd8a8, 0x6bb6, 0xdd70, 0x66c1, 0xb4dc, 0x209f, 0x1, 0x1);
        gbc.writeMem(0xd8a8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6bb6, gbc.sp());
        EXPECT(0xd8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a8));
        EXPECT(0x1c, gbc.readMem(0xd8a9));
        // CB 1C 010F
        gbc.setState(0xbd2b, 0x714, 0xb540, 0xf5d5, 0x11a4, 0xd19a, 0x0, 0x1);
        gbc.writeMem(0xbd2b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x714, gbc.sp());
        EXPECT(0xbd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2b));
        EXPECT(0x1c, gbc.readMem(0xbd2c));
        // CB 1C 0110
        gbc.setState(0x3e0f, 0xf77d, 0x1210, 0x6cfe, 0x4a81, 0x1e34, 0x0, 0x0);
        gbc.writeMem(0x3e0f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf77d, gbc.sp());
        EXPECT(0x3e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0111
        gbc.setState(0xc5c3, 0x5a42, 0xbdb0, 0x4cd, 0xe510, 0xb86a, 0x0, 0x1);
        gbc.writeMem(0xc5c3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5a42, gbc.sp());
        EXPECT(0xc5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c3));
        EXPECT(0x1c, gbc.readMem(0xc5c4));
        // CB 1C 0112
        gbc.setState(0x28d4, 0x9ad9, 0xc120, 0x58c7, 0xa60, 0xf2b7, 0x1, 0x0);
        gbc.writeMem(0x28d4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9ad9, gbc.sp());
        EXPECT(0x28d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0113
        gbc.setState(0xeabd, 0x1bac, 0x4420, 0xb4de, 0xc16d, 0xb046, 0x1, 0x1);
        gbc.writeMem(0xeabd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1bac, gbc.sp());
        EXPECT(0xeabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabd));
        EXPECT(0x1c, gbc.readMem(0xeabe));
        // CB 1C 0114
        gbc.setState(0x4fad, 0xe38f, 0x68a0, 0x466b, 0x47e3, 0x3868, 0x0, 0x1);
        gbc.writeMem(0x4fad, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe38f, gbc.sp());
        EXPECT(0x4faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0115
        gbc.setState(0xa666, 0xef0f, 0x8110, 0xf426, 0x993f, 0x90b2, 0x0, 0x1);
        gbc.writeMem(0xa666, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xef0f, gbc.sp());
        EXPECT(0xa668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa666));
        EXPECT(0x1c, gbc.readMem(0xa667));
        // CB 1C 0116
        gbc.setState(0x4127, 0x5419, 0x3ac0, 0x10d3, 0x192f, 0xc602, 0x1, 0x0);
        gbc.writeMem(0x4127, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5419, gbc.sp());
        EXPECT(0x4129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0117
        gbc.setState(0xbd13, 0x7e40, 0xa440, 0xdbff, 0xf8e3, 0xbb15, 0x0, 0x0);
        gbc.writeMem(0xbd13, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7e40, gbc.sp());
        EXPECT(0xbd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd13));
        EXPECT(0x1c, gbc.readMem(0xbd14));
        // CB 1C 0118
        gbc.setState(0x308b, 0x8de4, 0x650, 0xdf60, 0xf53f, 0xbca9, 0x1, 0x1);
        gbc.writeMem(0x308b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8de4, gbc.sp());
        EXPECT(0x308d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0119
        gbc.setState(0x8c35, 0xed10, 0xc160, 0x43af, 0x7d5a, 0x5239, 0x1, 0x1);
        gbc.writeMem(0x8c35, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xed10, gbc.sp());
        EXPECT(0x8c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c35));
        EXPECT(0x1c, gbc.readMem(0x8c36));
        // CB 1C 011A
        gbc.setState(0x592a, 0x89fb, 0x3380, 0x172a, 0xec6b, 0x82a8, 0x0, 0x1);
        gbc.writeMem(0x592a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x89fb, gbc.sp());
        EXPECT(0x592c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 011B
        gbc.setState(0xdc05, 0x3857, 0x60f0, 0x90ec, 0xeb16, 0x9266, 0x1, 0x1);
        gbc.writeMem(0xdc05, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3857, gbc.sp());
        EXPECT(0xdc07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc05));
        EXPECT(0x1c, gbc.readMem(0xdc06));
        // CB 1C 011C
        gbc.setState(0x9b8e, 0x963d, 0x68b0, 0xe3eb, 0xfbf5, 0x6b, 0x1, 0x1);
        gbc.writeMem(0x9b8e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x963d, gbc.sp());
        EXPECT(0x9b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8e));
        EXPECT(0x1c, gbc.readMem(0x9b8f));
        // CB 1C 011D
        gbc.setState(0xb21c, 0xeb8a, 0x4b50, 0xce70, 0xc0ab, 0xb0eb, 0x0, 0x0);
        gbc.writeMem(0xb21c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeb8a, gbc.sp());
        EXPECT(0xb21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21c));
        EXPECT(0x1c, gbc.readMem(0xb21d));
        // CB 1C 011E
        gbc.setState(0xcc86, 0xa2cd, 0x9110, 0x9cca, 0x1f41, 0x49e2, 0x0, 0x1);
        gbc.writeMem(0xcc86, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa2cd, gbc.sp());
        EXPECT(0xcc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc86));
        EXPECT(0x1c, gbc.readMem(0xcc87));
        // CB 1C 011F
        gbc.setState(0x5e7a, 0x7f8c, 0xa7a0, 0xa81c, 0x87f6, 0x90a6, 0x1, 0x1);
        gbc.writeMem(0x5e7a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7f8c, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0120
        gbc.setState(0x4a7d, 0x85b4, 0x35c0, 0x44c4, 0x4ccd, 0xd1dc, 0x0, 0x1);
        gbc.writeMem(0x4a7d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x85b4, gbc.sp());
        EXPECT(0x4a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0121
        gbc.setState(0x8315, 0xcdad, 0x3f30, 0x9e08, 0x82c7, 0xc6f5, 0x0, 0x0);
        gbc.writeMem(0x8315, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcdad, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8315));
        EXPECT(0x1c, gbc.readMem(0x8316));
        // CB 1C 0122
        gbc.setState(0x92ec, 0x2d50, 0x5300, 0x560e, 0x9f53, 0x8f49, 0x1, 0x1);
        gbc.writeMem(0x92ec, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2d50, gbc.sp());
        EXPECT(0x92ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ec));
        EXPECT(0x1c, gbc.readMem(0x92ed));
        // CB 1C 0123
        gbc.setState(0x89c5, 0xda66, 0x2390, 0x1616, 0x484c, 0x6917, 0x0, 0x0);
        gbc.writeMem(0x89c5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xda66, gbc.sp());
        EXPECT(0x89c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c5));
        EXPECT(0x1c, gbc.readMem(0x89c6));
        // CB 1C 0124
        gbc.setState(0xbbd8, 0x35d7, 0xbae0, 0x8f90, 0xbd20, 0xd076, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x35d7, gbc.sp());
        EXPECT(0xbbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd8));
        EXPECT(0x1c, gbc.readMem(0xbbd9));
        // CB 1C 0125
        gbc.setState(0x5b09, 0x7f41, 0x7a10, 0x893d, 0xc630, 0x61e5, 0x1, 0x0);
        gbc.writeMem(0x5b09, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7f41, gbc.sp());
        EXPECT(0x5b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0126
        gbc.setState(0x8f93, 0x9a9c, 0x96a0, 0x9bf6, 0xf917, 0x5f44, 0x1, 0x0);
        gbc.writeMem(0x8f93, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9a9c, gbc.sp());
        EXPECT(0x8f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f93));
        EXPECT(0x1c, gbc.readMem(0x8f94));
        // CB 1C 0127
        gbc.setState(0xb171, 0x65df, 0x8e0, 0x7169, 0xa536, 0xfc27, 0x0, 0x1);
        gbc.writeMem(0xb171, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x65df, gbc.sp());
        EXPECT(0xb173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb171));
        EXPECT(0x1c, gbc.readMem(0xb172));
        // CB 1C 0128
        gbc.setState(0xa34e, 0x2217, 0x92c0, 0x51d2, 0xd99b, 0x482a, 0x1, 0x0);
        gbc.writeMem(0xa34e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2217, gbc.sp());
        EXPECT(0xa350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34e));
        EXPECT(0x1c, gbc.readMem(0xa34f));
        // CB 1C 0129
        gbc.setState(0x3187, 0x47b9, 0x42a0, 0x3b97, 0x4f88, 0xeade, 0x1, 0x0);
        gbc.writeMem(0x3187, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x47b9, gbc.sp());
        EXPECT(0x3189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 012A
        gbc.setState(0x918c, 0x9dd8, 0x5c0, 0x71a0, 0x2d76, 0x99fc, 0x0, 0x1);
        gbc.writeMem(0x918c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9dd8, gbc.sp());
        EXPECT(0x918e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918c));
        EXPECT(0x1c, gbc.readMem(0x918d));
        // CB 1C 012B
        gbc.setState(0x4313, 0xccb2, 0xa930, 0xe662, 0xc0c3, 0xbe7f, 0x1, 0x0);
        gbc.writeMem(0x4313, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xccb2, gbc.sp());
        EXPECT(0x4315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 012C
        gbc.setState(0x8e2a, 0x1a76, 0xbfe0, 0x1e60, 0x5349, 0xb827, 0x1, 0x0);
        gbc.writeMem(0x8e2a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1a76, gbc.sp());
        EXPECT(0x8e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2a));
        EXPECT(0x1c, gbc.readMem(0x8e2b));
        // CB 1C 012D
        gbc.setState(0xb6dd, 0x34c2, 0x4d80, 0xd872, 0xbfce, 0x6ca3, 0x1, 0x1);
        gbc.writeMem(0xb6dd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x34c2, gbc.sp());
        EXPECT(0xb6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dd));
        EXPECT(0x1c, gbc.readMem(0xb6de));
        // CB 1C 012E
        gbc.setState(0xa200, 0x1c8d, 0x1040, 0x183f, 0x24e7, 0x74b0, 0x1, 0x1);
        gbc.writeMem(0xa200, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1c8d, gbc.sp());
        EXPECT(0xa202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa200));
        EXPECT(0x1c, gbc.readMem(0xa201));
        // CB 1C 012F
        gbc.setState(0x2584, 0xfb3c, 0x6f30, 0x1644, 0xe90f, 0xb03b, 0x1, 0x1);
        gbc.writeMem(0x2584, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfb3c, gbc.sp());
        EXPECT(0x2586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0130
        gbc.setState(0xbd5a, 0x83be, 0x940, 0x82cb, 0x63d5, 0xf9ff, 0x0, 0x0);
        gbc.writeMem(0xbd5a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x83be, gbc.sp());
        EXPECT(0xbd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5a));
        EXPECT(0x1c, gbc.readMem(0xbd5b));
        // CB 1C 0131
        gbc.setState(0x9052, 0xba00, 0x3420, 0x9da5, 0x3e3, 0xc9eb, 0x1, 0x0);
        gbc.writeMem(0x9052, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xba00, gbc.sp());
        EXPECT(0x9054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9052));
        EXPECT(0x1c, gbc.readMem(0x9053));
        // CB 1C 0132
        gbc.setState(0x22b5, 0x8b88, 0x6070, 0x69aa, 0x8e8b, 0x69e5, 0x1, 0x1);
        gbc.writeMem(0x22b5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8b88, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0133
        gbc.setState(0x6822, 0x298c, 0x4eb0, 0x4b7b, 0x3be0, 0xc6d4, 0x0, 0x0);
        gbc.writeMem(0x6822, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x298c, gbc.sp());
        EXPECT(0x6824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0134
        gbc.setState(0xbb7c, 0x9c27, 0x6950, 0xb36a, 0x6c6, 0xbd0, 0x1, 0x0);
        gbc.writeMem(0xbb7c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9c27, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7c));
        EXPECT(0x1c, gbc.readMem(0xbb7d));
        // CB 1C 0135
        gbc.setState(0xd08f, 0xd151, 0x8d30, 0xb495, 0xda8b, 0x95d5, 0x0, 0x1);
        gbc.writeMem(0xd08f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd151, gbc.sp());
        EXPECT(0xd091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08f));
        EXPECT(0x1c, gbc.readMem(0xd090));
        // CB 1C 0136
        gbc.setState(0x615d, 0xe433, 0x1420, 0xc8aa, 0x3625, 0x8d38, 0x1, 0x1);
        gbc.writeMem(0x615d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe433, gbc.sp());
        EXPECT(0x615f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0137
        gbc.setState(0xe6d4, 0xfbc, 0xcdf0, 0xf104, 0x3c3e, 0xec37, 0x0, 0x1);
        gbc.writeMem(0xe6d4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfbc, gbc.sp());
        EXPECT(0xe6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d4));
        EXPECT(0x1c, gbc.readMem(0xe6d5));
        // CB 1C 0138
        gbc.setState(0x9f34, 0xf546, 0xc8f0, 0x56ab, 0xc540, 0xce, 0x1, 0x1);
        gbc.writeMem(0x9f34, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf546, gbc.sp());
        EXPECT(0x9f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f34));
        EXPECT(0x1c, gbc.readMem(0x9f35));
        // CB 1C 0139
        gbc.setState(0x8cd8, 0xbd60, 0x330, 0x36d, 0x241a, 0x93b2, 0x0, 0x0);
        gbc.writeMem(0x8cd8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbd60, gbc.sp());
        EXPECT(0x8cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd8));
        EXPECT(0x1c, gbc.readMem(0x8cd9));
        // CB 1C 013A
        gbc.setState(0xe4a8, 0x33e, 0x4da0, 0xe715, 0xab62, 0x10f9, 0x0, 0x1);
        gbc.writeMem(0xe4a8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x33e, gbc.sp());
        EXPECT(0xe4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a8));
        EXPECT(0x1c, gbc.readMem(0xe4a9));
        // CB 1C 013B
        gbc.setState(0xe30, 0xd108, 0x31a0, 0x2712, 0x8e32, 0x57de, 0x0, 0x1);
        gbc.writeMem(0xe30, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd108, gbc.sp());
        EXPECT(0xe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 013C
        gbc.setState(0xb674, 0x9673, 0x7b30, 0xc79d, 0x2dc, 0x159, 0x1, 0x0);
        gbc.writeMem(0xb674, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9673, gbc.sp());
        EXPECT(0xb676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb674));
        EXPECT(0x1c, gbc.readMem(0xb675));
        // CB 1C 013D
        gbc.setState(0xa392, 0x9447, 0x27c0, 0xfbfc, 0xe702, 0x4faa, 0x1, 0x1);
        gbc.writeMem(0xa392, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9447, gbc.sp());
        EXPECT(0xa394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa392));
        EXPECT(0x1c, gbc.readMem(0xa393));
        // CB 1C 013E
        gbc.setState(0x30ae, 0xefab, 0x4d50, 0x606, 0x40a1, 0x113b, 0x0, 0x1);
        gbc.writeMem(0x30ae, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xefab, gbc.sp());
        EXPECT(0x30b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 013F
        gbc.setState(0xe015, 0x49cf, 0x20e0, 0x19f6, 0x920e, 0xfe89, 0x1, 0x1);
        gbc.writeMem(0xe015, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x49cf, gbc.sp());
        EXPECT(0xe017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe015));
        EXPECT(0x1c, gbc.readMem(0xe016));
        // CB 1C 0140
        gbc.setState(0x2448, 0x6b3b, 0x3b10, 0xe939, 0x36d5, 0x9df2, 0x0, 0x1);
        gbc.writeMem(0x2448, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6b3b, gbc.sp());
        EXPECT(0x244a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0141
        gbc.setState(0x87bb, 0x6a4, 0xee60, 0x10aa, 0x1890, 0x3c6e, 0x1, 0x1);
        gbc.writeMem(0x87bb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6a4, gbc.sp());
        EXPECT(0x87bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87bb));
        EXPECT(0x1c, gbc.readMem(0x87bc));
        // CB 1C 0142
        gbc.setState(0xb0fd, 0xdd41, 0xadc0, 0x4fb2, 0x8b00, 0x73f5, 0x1, 0x1);
        gbc.writeMem(0xb0fd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdd41, gbc.sp());
        EXPECT(0xb0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fd));
        EXPECT(0x1c, gbc.readMem(0xb0fe));
        // CB 1C 0143
        gbc.setState(0xcd13, 0x99d7, 0xd3c0, 0x38ea, 0x8cbe, 0xe60d, 0x1, 0x0);
        gbc.writeMem(0xcd13, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x99d7, gbc.sp());
        EXPECT(0xcd15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd13));
        EXPECT(0x1c, gbc.readMem(0xcd14));
        // CB 1C 0144
        gbc.setState(0x676a, 0xefa1, 0x7ca0, 0x7f62, 0xa3b4, 0x5f1e, 0x1, 0x0);
        gbc.writeMem(0x676a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xefa1, gbc.sp());
        EXPECT(0x676c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0145
        gbc.setState(0x3bb5, 0xf288, 0xac40, 0x8587, 0x76b2, 0x6db4, 0x0, 0x1);
        gbc.writeMem(0x3bb5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf288, gbc.sp());
        EXPECT(0x3bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0146
        gbc.setState(0x9c49, 0xbb24, 0x21b0, 0x2f00, 0xf02d, 0xc9a0, 0x0, 0x1);
        gbc.writeMem(0x9c49, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbb24, gbc.sp());
        EXPECT(0x9c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c49));
        EXPECT(0x1c, gbc.readMem(0x9c4a));
        // CB 1C 0147
        gbc.setState(0x71cb, 0xf712, 0x3aa0, 0x62ec, 0x4ca9, 0x64da, 0x1, 0x1);
        gbc.writeMem(0x71cb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0x71cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0148
        gbc.setState(0x582f, 0xf351, 0x8d80, 0x2ab2, 0x37ca, 0xcfec, 0x1, 0x0);
        gbc.writeMem(0x582f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf351, gbc.sp());
        EXPECT(0x5831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0149
        gbc.setState(0xdd51, 0x7f72, 0x84b0, 0x549e, 0xb602, 0xa056, 0x1, 0x1);
        gbc.writeMem(0xdd51, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7f72, gbc.sp());
        EXPECT(0xdd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd51));
        EXPECT(0x1c, gbc.readMem(0xdd52));
        // CB 1C 014A
        gbc.setState(0xbca7, 0x8acc, 0xc0f0, 0xdfb7, 0xbb94, 0x24e9, 0x0, 0x1);
        gbc.writeMem(0xbca7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8acc, gbc.sp());
        EXPECT(0xbca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca7));
        EXPECT(0x1c, gbc.readMem(0xbca8));
        // CB 1C 014B
        gbc.setState(0xacfb, 0xa9c5, 0xe170, 0x32f, 0x4711, 0xd2b7, 0x0, 0x1);
        gbc.writeMem(0xacfb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa9c5, gbc.sp());
        EXPECT(0xacfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfb));
        EXPECT(0x1c, gbc.readMem(0xacfc));
        // CB 1C 014C
        gbc.setState(0xe25d, 0xfffa, 0x79f0, 0xc4c3, 0xc1c1, 0x1348, 0x0, 0x0);
        gbc.writeMem(0xe25d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfffa, gbc.sp());
        EXPECT(0xe25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25d));
        EXPECT(0x1c, gbc.readMem(0xe25e));
        // CB 1C 014D
        gbc.setState(0x8d55, 0x373f, 0x9a0, 0x22b3, 0x8ec3, 0xd730, 0x0, 0x1);
        gbc.writeMem(0x8d55, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x373f, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d55));
        EXPECT(0x1c, gbc.readMem(0x8d56));
        // CB 1C 014E
        gbc.setState(0x3adc, 0x74ad, 0x9160, 0xc32c, 0x82ef, 0xf9dd, 0x1, 0x0);
        gbc.writeMem(0x3adc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x74ad, gbc.sp());
        EXPECT(0x3ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 014F
        gbc.setState(0x427b, 0xacba, 0xb830, 0xf9e8, 0xec71, 0xba9, 0x0, 0x0);
        gbc.writeMem(0x427b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xacba, gbc.sp());
        EXPECT(0x427d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0150
        gbc.setState(0x67fe, 0x5f89, 0x5940, 0x8fac, 0x3d39, 0xb08e, 0x1, 0x1);
        gbc.writeMem(0x67fe, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5f89, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0151
        gbc.setState(0x52dd, 0xd99c, 0x4350, 0xcdf4, 0x1d49, 0x88cc, 0x1, 0x1);
        gbc.writeMem(0x52dd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd99c, gbc.sp());
        EXPECT(0x52df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0152
        gbc.setState(0x50bf, 0xe902, 0x80c0, 0xca1f, 0xd3fe, 0xe62b, 0x0, 0x0);
        gbc.writeMem(0x50bf, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0x50c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0153
        gbc.setState(0xe4a1, 0x9885, 0xbcb0, 0x66a8, 0xa27, 0x4996, 0x0, 0x0);
        gbc.writeMem(0xe4a1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9885, gbc.sp());
        EXPECT(0xe4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a1));
        EXPECT(0x1c, gbc.readMem(0xe4a2));
        // CB 1C 0154
        gbc.setState(0x21f0, 0x23b8, 0x8610, 0x2ae1, 0x1737, 0x30ae, 0x1, 0x0);
        gbc.writeMem(0x21f0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x23b8, gbc.sp());
        EXPECT(0x21f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0155
        gbc.setState(0x564e, 0x7541, 0x10b0, 0xcf37, 0x5026, 0x924, 0x0, 0x0);
        gbc.writeMem(0x564e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7541, gbc.sp());
        EXPECT(0x5650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0156
        gbc.setState(0x7b9e, 0xb747, 0x7790, 0xb726, 0x7ce9, 0xf253, 0x0, 0x0);
        gbc.writeMem(0x7b9e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb747, gbc.sp());
        EXPECT(0x7ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0157
        gbc.setState(0x2c08, 0x1987, 0xf640, 0xd301, 0x7fe5, 0x7b47, 0x0, 0x0);
        gbc.writeMem(0x2c08, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1987, gbc.sp());
        EXPECT(0x2c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0158
        gbc.setState(0x139f, 0xd842, 0x9d10, 0xa63d, 0x1668, 0x34ca, 0x1, 0x1);
        gbc.writeMem(0x139f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd842, gbc.sp());
        EXPECT(0x13a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0159
        gbc.setState(0xaf4d, 0xad75, 0xc3e0, 0xb55d, 0xfb65, 0x9243, 0x1, 0x1);
        gbc.writeMem(0xaf4d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xad75, gbc.sp());
        EXPECT(0xaf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4d));
        EXPECT(0x1c, gbc.readMem(0xaf4e));
        // CB 1C 015A
        gbc.setState(0xdb3a, 0x696c, 0x5330, 0x70a8, 0xb785, 0x46f3, 0x0, 0x1);
        gbc.writeMem(0xdb3a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x696c, gbc.sp());
        EXPECT(0xdb3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3a));
        EXPECT(0x1c, gbc.readMem(0xdb3b));
        // CB 1C 015B
        gbc.setState(0x3034, 0x6def, 0x2020, 0x59c3, 0x68f9, 0xf8bd, 0x0, 0x1);
        gbc.writeMem(0x3034, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6def, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 015C
        gbc.setState(0x20cc, 0x4166, 0xa470, 0xedf8, 0x4a6, 0x853e, 0x0, 0x1);
        gbc.writeMem(0x20cc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4166, gbc.sp());
        EXPECT(0x20ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 015D
        gbc.setState(0x9f74, 0xbeb5, 0x6210, 0x6725, 0xfccc, 0x5b62, 0x1, 0x1);
        gbc.writeMem(0x9f74, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbeb5, gbc.sp());
        EXPECT(0x9f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f74));
        EXPECT(0x1c, gbc.readMem(0x9f75));
        // CB 1C 015F
        gbc.setState(0xedf9, 0xfa32, 0x92f0, 0xb26b, 0xd291, 0x87f9, 0x0, 0x0);
        gbc.writeMem(0xedf9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfa32, gbc.sp());
        EXPECT(0xedfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf9));
        EXPECT(0x1c, gbc.readMem(0xedfa));
        // CB 1C 0160
        gbc.setState(0xc29f, 0xea3e, 0x8390, 0xb627, 0x57a8, 0xcc4, 0x1, 0x0);
        gbc.writeMem(0xc29f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xea3e, gbc.sp());
        EXPECT(0xc2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29f));
        EXPECT(0x1c, gbc.readMem(0xc2a0));
        // CB 1C 0161
        gbc.setState(0x7982, 0x6f12, 0x69c0, 0x49d3, 0x3d90, 0xe501, 0x0, 0x0);
        gbc.writeMem(0x7982, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6f12, gbc.sp());
        EXPECT(0x7984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0163
        gbc.setState(0xd229, 0xe6a7, 0xd360, 0x2c44, 0xa314, 0x955, 0x0, 0x0);
        gbc.writeMem(0xd229, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe6a7, gbc.sp());
        EXPECT(0xd22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd229));
        EXPECT(0x1c, gbc.readMem(0xd22a));
        // CB 1C 0164
        gbc.setState(0xc15f, 0x2e8c, 0x2cb0, 0x79d1, 0xea99, 0xda51, 0x0, 0x0);
        gbc.writeMem(0xc15f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2e8c, gbc.sp());
        EXPECT(0xc161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15f));
        EXPECT(0x1c, gbc.readMem(0xc160));
        // CB 1C 0165
        gbc.setState(0x8ac3, 0xcdf2, 0x1a70, 0xd108, 0xdac1, 0x1c, 0x1, 0x0);
        gbc.writeMem(0x8ac3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcdf2, gbc.sp());
        EXPECT(0x8ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac3));
        EXPECT(0x1c, gbc.readMem(0x8ac4));
        // CB 1C 0166
        gbc.setState(0x7ab4, 0xc0ad, 0xf600, 0x1faa, 0x11cd, 0x114, 0x0, 0x0);
        gbc.writeMem(0x7ab4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc0ad, gbc.sp());
        EXPECT(0x7ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0167
        gbc.setState(0x2466, 0x2c6f, 0x8800, 0x5046, 0x36e, 0x53a9, 0x0, 0x0);
        gbc.writeMem(0x2466, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2c6f, gbc.sp());
        EXPECT(0x2468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0168
        gbc.setState(0xe452, 0x79e3, 0x1c50, 0x5827, 0x4d77, 0xb5d4, 0x0, 0x0);
        gbc.writeMem(0xe452, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x79e3, gbc.sp());
        EXPECT(0xe454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe452));
        EXPECT(0x1c, gbc.readMem(0xe453));
        // CB 1C 0169
        gbc.setState(0x49d1, 0x2603, 0xf040, 0x8326, 0x33c1, 0xfebe, 0x0, 0x1);
        gbc.writeMem(0x49d1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2603, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 016A
        gbc.setState(0x8cbc, 0x9a6d, 0x780, 0x501a, 0x8d55, 0x1c1a, 0x1, 0x0);
        gbc.writeMem(0x8cbc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9a6d, gbc.sp());
        EXPECT(0x8cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbc));
        EXPECT(0x1c, gbc.readMem(0x8cbd));
        // CB 1C 016B
        gbc.setState(0x2846, 0x9b87, 0x8fd0, 0xaa6c, 0x9ac0, 0x601d, 0x1, 0x1);
        gbc.writeMem(0x2846, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9b87, gbc.sp());
        EXPECT(0x2848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 016C
        gbc.setState(0x1495, 0x6131, 0x1ea0, 0x4bd9, 0xad40, 0x18e3, 0x1, 0x0);
        gbc.writeMem(0x1495, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6131, gbc.sp());
        EXPECT(0x1497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 016D
        gbc.setState(0xc68, 0x8cc3, 0x4b10, 0x511, 0x2034, 0x438b, 0x0, 0x1);
        gbc.writeMem(0xc68, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8cc3, gbc.sp());
        EXPECT(0xc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 016E
        gbc.setState(0xc76e, 0xccd, 0x6df0, 0x5985, 0x7a6, 0xc8df, 0x0, 0x1);
        gbc.writeMem(0xc76e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xccd, gbc.sp());
        EXPECT(0xc770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76e));
        EXPECT(0x1c, gbc.readMem(0xc76f));
        // CB 1C 016F
        gbc.setState(0x79be, 0xec6a, 0x21b0, 0x6a5f, 0x49d7, 0x402d, 0x1, 0x0);
        gbc.writeMem(0x79be, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xec6a, gbc.sp());
        EXPECT(0x79c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0170
        gbc.setState(0x987b, 0xdfe9, 0x4610, 0x371a, 0x81f2, 0x5e8c, 0x0, 0x1);
        gbc.writeMem(0x987b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdfe9, gbc.sp());
        EXPECT(0x987d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987b));
        EXPECT(0x1c, gbc.readMem(0x987c));
        // CB 1C 0171
        gbc.setState(0x8fe6, 0x29b7, 0xa130, 0xa541, 0x55ed, 0xe840, 0x0, 0x0);
        gbc.writeMem(0x8fe6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x29b7, gbc.sp());
        EXPECT(0x8fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe6));
        EXPECT(0x1c, gbc.readMem(0x8fe7));
        // CB 1C 0172
        gbc.setState(0x42d8, 0x6414, 0x9200, 0x45de, 0x36fc, 0xefad, 0x0, 0x1);
        gbc.writeMem(0x42d8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6414, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0174
        gbc.setState(0xdd98, 0xf6a5, 0x44a0, 0x6311, 0xc020, 0x1f00, 0x1, 0x0);
        gbc.writeMem(0xdd98, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf6a5, gbc.sp());
        EXPECT(0xdd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd98));
        EXPECT(0x1c, gbc.readMem(0xdd99));
        // CB 1C 0175
        gbc.setState(0x9a69, 0x6b, 0xced0, 0x2bca, 0x2e56, 0xb99f, 0x1, 0x0);
        gbc.writeMem(0x9a69, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6b, gbc.sp());
        EXPECT(0x9a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a69));
        EXPECT(0x1c, gbc.readMem(0x9a6a));
        // CB 1C 0176
        gbc.setState(0xbc0b, 0x717c, 0x1a70, 0xb4f4, 0x1004, 0x9736, 0x0, 0x0);
        gbc.writeMem(0xbc0b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x717c, gbc.sp());
        EXPECT(0xbc0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0b));
        EXPECT(0x1c, gbc.readMem(0xbc0c));
        // CB 1C 0178
        gbc.setState(0x1f46, 0x866d, 0xc250, 0x9b16, 0xad01, 0x2d03, 0x1, 0x0);
        gbc.writeMem(0x1f46, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x866d, gbc.sp());
        EXPECT(0x1f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0179
        gbc.setState(0xd327, 0xa03e, 0x3e60, 0x1d3b, 0x5489, 0x6801, 0x0, 0x0);
        gbc.writeMem(0xd327, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa03e, gbc.sp());
        EXPECT(0xd329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd327));
        EXPECT(0x1c, gbc.readMem(0xd328));
        // CB 1C 017A
        gbc.setState(0x7c02, 0xf8c2, 0xd140, 0x6d76, 0xc502, 0x26cc, 0x1, 0x0);
        gbc.writeMem(0x7c02, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf8c2, gbc.sp());
        EXPECT(0x7c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 017B
        gbc.setState(0x3217, 0x7877, 0x60, 0x61d9, 0x9d34, 0xe855, 0x0, 0x1);
        gbc.writeMem(0x3217, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0x3219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 017C
        gbc.setState(0x6295, 0x7170, 0xf1a0, 0x3113, 0x9417, 0x1f2e, 0x1, 0x1);
        gbc.writeMem(0x6295, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7170, gbc.sp());
        EXPECT(0x6297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 017D
        gbc.setState(0xd701, 0xd677, 0xbe30, 0x39e5, 0x6cf2, 0x6f2f, 0x0, 0x0);
        gbc.writeMem(0xd701, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd677, gbc.sp());
        EXPECT(0xd703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd701));
        EXPECT(0x1c, gbc.readMem(0xd702));
        // CB 1C 017E
        gbc.setState(0x5481, 0xfac4, 0xc690, 0xd08e, 0x8ae6, 0xe7d5, 0x0, 0x0);
        gbc.writeMem(0x5481, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfac4, gbc.sp());
        EXPECT(0x5483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 017F
        gbc.setState(0x54cb, 0xf415, 0xed50, 0x9b9f, 0x3fd4, 0xe76c, 0x1, 0x1);
        gbc.writeMem(0x54cb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf415, gbc.sp());
        EXPECT(0x54cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0180
        gbc.setState(0x279c, 0xcfb7, 0xee70, 0x3ea4, 0x3e93, 0x9126, 0x1, 0x1);
        gbc.writeMem(0x279c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcfb7, gbc.sp());
        EXPECT(0x279e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0181
        gbc.setState(0x49d4, 0xdd1c, 0x8a50, 0xdf4e, 0x2362, 0x2180, 0x0, 0x1);
        gbc.writeMem(0x49d4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdd1c, gbc.sp());
        EXPECT(0x49d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0182
        gbc.setState(0xd9c0, 0x1606, 0x3c70, 0x4df0, 0x8fde, 0x7508, 0x1, 0x1);
        gbc.writeMem(0xd9c0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1606, gbc.sp());
        EXPECT(0xd9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c0));
        EXPECT(0x1c, gbc.readMem(0xd9c1));
        // CB 1C 0183
        gbc.setState(0xa170, 0x2439, 0xe180, 0x4b00, 0xdddc, 0x1e14, 0x1, 0x1);
        gbc.writeMem(0xa170, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2439, gbc.sp());
        EXPECT(0xa172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa170));
        EXPECT(0x1c, gbc.readMem(0xa171));
        // CB 1C 0184
        gbc.setState(0x9e76, 0xf01f, 0xaf60, 0xbcbb, 0x2823, 0x97fb, 0x1, 0x1);
        gbc.writeMem(0x9e76, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x9e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e76));
        EXPECT(0x1c, gbc.readMem(0x9e77));
        // CB 1C 0185
        gbc.setState(0x5497, 0xcbb2, 0xe540, 0x531a, 0x462f, 0x826c, 0x0, 0x0);
        gbc.writeMem(0x5497, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcbb2, gbc.sp());
        EXPECT(0x5499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0186
        gbc.setState(0x52a, 0x5b27, 0x8130, 0x9c82, 0x6db8, 0xe22, 0x0, 0x0);
        gbc.writeMem(0x52a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5b27, gbc.sp());
        EXPECT(0x52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0187
        gbc.setState(0x410c, 0x3c1c, 0xed40, 0x3674, 0xc6ad, 0xd774, 0x0, 0x1);
        gbc.writeMem(0x410c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3c1c, gbc.sp());
        EXPECT(0x410e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0188
        gbc.setState(0x1d6e, 0xf6f0, 0x8c90, 0x76ba, 0x2b03, 0x845b, 0x1, 0x1);
        gbc.writeMem(0x1d6e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf6f0, gbc.sp());
        EXPECT(0x1d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0189
        gbc.setState(0xd851, 0x3403, 0x8fb0, 0xb9ea, 0x3552, 0xac5e, 0x1, 0x1);
        gbc.writeMem(0xd851, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3403, gbc.sp());
        EXPECT(0xd853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd851));
        EXPECT(0x1c, gbc.readMem(0xd852));
        // CB 1C 018A
        gbc.setState(0x9cd1, 0x178e, 0x35d0, 0x51b4, 0x3063, 0x1e55, 0x0, 0x0);
        gbc.writeMem(0x9cd1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x178e, gbc.sp());
        EXPECT(0x9cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd1));
        EXPECT(0x1c, gbc.readMem(0x9cd2));
        // CB 1C 018B
        gbc.setState(0xd3fc, 0x76b5, 0x7df0, 0x8249, 0xce0f, 0x5c91, 0x0, 0x1);
        gbc.writeMem(0xd3fc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x76b5, gbc.sp());
        EXPECT(0xd3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fc));
        EXPECT(0x1c, gbc.readMem(0xd3fd));
        // CB 1C 018C
        gbc.setState(0xd593, 0xe103, 0xbc0, 0x4b6, 0xdf56, 0xc6f8, 0x0, 0x0);
        gbc.writeMem(0xd593, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe103, gbc.sp());
        EXPECT(0xd595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd593));
        EXPECT(0x1c, gbc.readMem(0xd594));
        // CB 1C 018E
        gbc.setState(0x38b5, 0xa250, 0x75b0, 0x73d9, 0x2ef, 0x544c, 0x1, 0x0);
        gbc.writeMem(0x38b5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa250, gbc.sp());
        EXPECT(0x38b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 018F
        gbc.setState(0x2c25, 0xd3d7, 0xbae0, 0xfe3c, 0xc4f2, 0xd921, 0x1, 0x1);
        gbc.writeMem(0x2c25, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd3d7, gbc.sp());
        EXPECT(0x2c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0190
        gbc.setState(0x3f9e, 0xd3f4, 0x2b50, 0xe1c2, 0x1364, 0xaaab, 0x0, 0x1);
        gbc.writeMem(0x3f9e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd3f4, gbc.sp());
        EXPECT(0x3fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0191
        gbc.setState(0x7092, 0xa424, 0x69d0, 0x317e, 0x424, 0x6782, 0x0, 0x1);
        gbc.writeMem(0x7092, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa424, gbc.sp());
        EXPECT(0x7094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0192
        gbc.setState(0x4ffd, 0x93f6, 0x6990, 0x6435, 0xbf17, 0x3b8, 0x0, 0x1);
        gbc.writeMem(0x4ffd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x93f6, gbc.sp());
        EXPECT(0x4fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0193
        gbc.setState(0xae87, 0xad2c, 0x66a0, 0x3dec, 0x2b40, 0xc87d, 0x0, 0x0);
        gbc.writeMem(0xae87, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xad2c, gbc.sp());
        EXPECT(0xae89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae87));
        EXPECT(0x1c, gbc.readMem(0xae88));
        // CB 1C 0194
        gbc.setState(0x5333, 0x72ad, 0x24b0, 0x435a, 0xc6b6, 0xcdd4, 0x0, 0x0);
        gbc.writeMem(0x5333, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x72ad, gbc.sp());
        EXPECT(0x5335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0195
        gbc.setState(0xacdb, 0x6ae0, 0x30c0, 0xfb9f, 0x4b2c, 0xeae8, 0x0, 0x1);
        gbc.writeMem(0xacdb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6ae0, gbc.sp());
        EXPECT(0xacdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdb));
        EXPECT(0x1c, gbc.readMem(0xacdc));
        // CB 1C 0196
        gbc.setState(0x7cb3, 0xccc1, 0x95f0, 0x743f, 0x1544, 0xece8, 0x1, 0x1);
        gbc.writeMem(0x7cb3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xccc1, gbc.sp());
        EXPECT(0x7cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0198
        gbc.setState(0xe956, 0x84be, 0x4880, 0x7593, 0x8cd8, 0xa7b6, 0x0, 0x0);
        gbc.writeMem(0xe956, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x84be, gbc.sp());
        EXPECT(0xe958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe956));
        EXPECT(0x1c, gbc.readMem(0xe957));
        // CB 1C 0199
        gbc.setState(0x4c34, 0x2649, 0x9d10, 0x8c79, 0x71c8, 0xa59b, 0x1, 0x0);
        gbc.writeMem(0x4c34, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2649, gbc.sp());
        EXPECT(0x4c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 019B
        gbc.setState(0xe089, 0x4db, 0xb450, 0xc68b, 0xe962, 0x80d7, 0x0, 0x1);
        gbc.writeMem(0xe089, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4db, gbc.sp());
        EXPECT(0xe08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe089));
        EXPECT(0x1c, gbc.readMem(0xe08a));
        // CB 1C 019C
        gbc.setState(0xc63c, 0x6185, 0xe9c0, 0xa268, 0x1b0b, 0xcc68, 0x0, 0x1);
        gbc.writeMem(0xc63c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6185, gbc.sp());
        EXPECT(0xc63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63c));
        EXPECT(0x1c, gbc.readMem(0xc63d));
        // CB 1C 019D
        gbc.setState(0xd827, 0x290d, 0xad50, 0xd555, 0x9e23, 0x7f34, 0x0, 0x0);
        gbc.writeMem(0xd827, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x290d, gbc.sp());
        EXPECT(0xd829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd827));
        EXPECT(0x1c, gbc.readMem(0xd828));
        // CB 1C 019E
        gbc.setState(0xe786, 0x6912, 0x3c00, 0xcdb2, 0x213b, 0xf7e7, 0x1, 0x0);
        gbc.writeMem(0xe786, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6912, gbc.sp());
        EXPECT(0xe788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe786));
        EXPECT(0x1c, gbc.readMem(0xe787));
        // CB 1C 019F
        gbc.setState(0xcabd, 0xec0, 0xf5f0, 0x7ff0, 0xa962, 0x5cff, 0x0, 0x0);
        gbc.writeMem(0xcabd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xec0, gbc.sp());
        EXPECT(0xcabf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabd));
        EXPECT(0x1c, gbc.readMem(0xcabe));
        // CB 1C 01A0
        gbc.setState(0xdc9c, 0xbbda, 0xcf20, 0x207d, 0x4264, 0x97de, 0x0, 0x1);
        gbc.writeMem(0xdc9c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbbda, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9c));
        EXPECT(0x1c, gbc.readMem(0xdc9d));
        // CB 1C 01A1
        gbc.setState(0x6b0c, 0xfde4, 0x1820, 0x116e, 0x967c, 0x769, 0x0, 0x0);
        gbc.writeMem(0x6b0c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0x6b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01A2
        gbc.setState(0x35e1, 0xcaac, 0xd4a0, 0x5ed, 0xb9f4, 0xa6ec, 0x1, 0x0);
        gbc.writeMem(0x35e1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcaac, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01A3
        gbc.setState(0x956f, 0x3f9c, 0xc040, 0x897c, 0x88eb, 0x6c68, 0x1, 0x1);
        gbc.writeMem(0x956f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3f9c, gbc.sp());
        EXPECT(0x9571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956f));
        EXPECT(0x1c, gbc.readMem(0x9570));
        // CB 1C 01A4
        gbc.setState(0x51d2, 0xb1b5, 0xe540, 0x1ce6, 0x6e22, 0x8f58, 0x0, 0x1);
        gbc.writeMem(0x51d2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb1b5, gbc.sp());
        EXPECT(0x51d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01A5
        gbc.setState(0x96fd, 0x786f, 0x1510, 0x3ea9, 0xf3f, 0xa20d, 0x0, 0x0);
        gbc.writeMem(0x96fd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x786f, gbc.sp());
        EXPECT(0x96ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fd));
        EXPECT(0x1c, gbc.readMem(0x96fe));
        // CB 1C 01A7
        gbc.setState(0x92a7, 0x933a, 0x2bd0, 0x718d, 0xbefb, 0xadce, 0x0, 0x1);
        gbc.writeMem(0x92a7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x933a, gbc.sp());
        EXPECT(0x92a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a7));
        EXPECT(0x1c, gbc.readMem(0x92a8));
        // CB 1C 01A8
        gbc.setState(0x5581, 0x5203, 0x93a0, 0xe5dc, 0x6b45, 0xfbeb, 0x1, 0x0);
        gbc.writeMem(0x5581, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5203, gbc.sp());
        EXPECT(0x5583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01A9
        gbc.setState(0xbcc2, 0xaa1d, 0x16a0, 0xe1bc, 0x4ab3, 0x118c, 0x1, 0x0);
        gbc.writeMem(0xbcc2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xaa1d, gbc.sp());
        EXPECT(0xbcc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc2));
        EXPECT(0x1c, gbc.readMem(0xbcc3));
        // CB 1C 01AA
        gbc.setState(0xdea6, 0x6446, 0x9650, 0x12f4, 0x5c37, 0x8d90, 0x1, 0x0);
        gbc.writeMem(0xdea6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6446, gbc.sp());
        EXPECT(0xdea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea6));
        EXPECT(0x1c, gbc.readMem(0xdea7));
        // CB 1C 01AB
        gbc.setState(0xe0b9, 0xa74f, 0x3860, 0xfd1d, 0xfc8, 0x12da, 0x0, 0x1);
        gbc.writeMem(0xe0b9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa74f, gbc.sp());
        EXPECT(0xe0bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b9));
        EXPECT(0x1c, gbc.readMem(0xe0ba));
        // CB 1C 01AC
        gbc.setState(0xe2ea, 0x73a0, 0x1260, 0xa362, 0x707d, 0xa2b4, 0x0, 0x0);
        gbc.writeMem(0xe2ea, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x73a0, gbc.sp());
        EXPECT(0xe2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ea));
        EXPECT(0x1c, gbc.readMem(0xe2eb));
        // CB 1C 01AD
        gbc.setState(0xd046, 0xe0a1, 0xc940, 0x4364, 0x261f, 0xc370, 0x0, 0x1);
        gbc.writeMem(0xd046, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe0a1, gbc.sp());
        EXPECT(0xd048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd046));
        EXPECT(0x1c, gbc.readMem(0xd047));
        // CB 1C 01AE
        gbc.setState(0x12fc, 0xfd0b, 0xbaf0, 0xd98d, 0xf83d, 0x76ed, 0x0, 0x1);
        gbc.writeMem(0x12fc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfd0b, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01AF
        gbc.setState(0x8133, 0xf4a9, 0xe610, 0x6660, 0xc44c, 0x44b6, 0x1, 0x1);
        gbc.writeMem(0x8133, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf4a9, gbc.sp());
        EXPECT(0x8135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8133));
        EXPECT(0x1c, gbc.readMem(0x8134));
        // CB 1C 01B0
        gbc.setState(0x71c8, 0x9e98, 0x4110, 0xa97a, 0x8cc8, 0xfb2d, 0x1, 0x0);
        gbc.writeMem(0x71c8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9e98, gbc.sp());
        EXPECT(0x71ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01B1
        gbc.setState(0x56b1, 0x81a7, 0xb10, 0x8a28, 0xbfa6, 0x604, 0x0, 0x0);
        gbc.writeMem(0x56b1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x81a7, gbc.sp());
        EXPECT(0x56b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01B2
        gbc.setState(0xb3bb, 0x5719, 0xdba0, 0x37f3, 0xa397, 0x36d1, 0x1, 0x1);
        gbc.writeMem(0xb3bb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5719, gbc.sp());
        EXPECT(0xb3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bb));
        EXPECT(0x1c, gbc.readMem(0xb3bc));
        // CB 1C 01B3
        gbc.setState(0x7e3a, 0x76b, 0x37f0, 0x877b, 0x986d, 0xb8e4, 0x1, 0x1);
        gbc.writeMem(0x7e3a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x76b, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01B5
        gbc.setState(0x6ea6, 0x848a, 0xc4d0, 0xc79b, 0x5be1, 0x7cb8, 0x1, 0x0);
        gbc.writeMem(0x6ea6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x848a, gbc.sp());
        EXPECT(0x6ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01B6
        gbc.setState(0x1c0b, 0xdf29, 0x6730, 0xf046, 0xb72f, 0x24f1, 0x1, 0x1);
        gbc.writeMem(0x1c0b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdf29, gbc.sp());
        EXPECT(0x1c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01B8
        gbc.setState(0xbc18, 0x2bf8, 0x3950, 0x9fd4, 0x2618, 0xb718, 0x1, 0x1);
        gbc.writeMem(0xbc18, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2bf8, gbc.sp());
        EXPECT(0xbc1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc18));
        EXPECT(0x1c, gbc.readMem(0xbc19));
        // CB 1C 01B9
        gbc.setState(0xdac9, 0x55a6, 0x5b0, 0xffe1, 0xf0d5, 0xf870, 0x0, 0x1);
        gbc.writeMem(0xdac9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x55a6, gbc.sp());
        EXPECT(0xdacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac9));
        EXPECT(0x1c, gbc.readMem(0xdaca));
        // CB 1C 01BA
        gbc.setState(0x6b80, 0xa266, 0x3fd0, 0xc369, 0x8d6a, 0x75e8, 0x1, 0x0);
        gbc.writeMem(0x6b80, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa266, gbc.sp());
        EXPECT(0x6b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01BB
        gbc.setState(0x4c7, 0xa86d, 0x5bb0, 0x8d71, 0x21fa, 0xe644, 0x1, 0x0);
        gbc.writeMem(0x4c7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa86d, gbc.sp());
        EXPECT(0x4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01BC
        gbc.setState(0xd126, 0xefa5, 0x6080, 0xb550, 0xd73a, 0x8ad5, 0x1, 0x0);
        gbc.writeMem(0xd126, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xefa5, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd126));
        EXPECT(0x1c, gbc.readMem(0xd127));
        // CB 1C 01BD
        gbc.setState(0xa8da, 0x7cb7, 0x6530, 0x294f, 0x9f7b, 0xc74e, 0x1, 0x1);
        gbc.writeMem(0xa8da, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7cb7, gbc.sp());
        EXPECT(0xa8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8da));
        EXPECT(0x1c, gbc.readMem(0xa8db));
        // CB 1C 01BE
        gbc.setState(0xddf0, 0xdd39, 0x3690, 0x651, 0x9f60, 0x8a93, 0x1, 0x0);
        gbc.writeMem(0xddf0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdd39, gbc.sp());
        EXPECT(0xddf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf0));
        EXPECT(0x1c, gbc.readMem(0xddf1));
        // CB 1C 01BF
        gbc.setState(0x415b, 0xd29, 0xbe40, 0xfc0, 0x6730, 0x4a84, 0x0, 0x0);
        gbc.writeMem(0x415b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd29, gbc.sp());
        EXPECT(0x415d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01C0
        gbc.setState(0x65a8, 0x53ab, 0xf980, 0xb4f, 0x5965, 0x9caa, 0x0, 0x1);
        gbc.writeMem(0x65a8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x53ab, gbc.sp());
        EXPECT(0x65aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01C1
        gbc.setState(0x4cf1, 0xc03c, 0x3800, 0xba03, 0xf89f, 0xa02b, 0x1, 0x0);
        gbc.writeMem(0x4cf1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc03c, gbc.sp());
        EXPECT(0x4cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01C2
        gbc.setState(0x999d, 0x53c3, 0x4550, 0x8086, 0x5c2f, 0xeb75, 0x0, 0x0);
        gbc.writeMem(0x999d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x53c3, gbc.sp());
        EXPECT(0x999f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999d));
        EXPECT(0x1c, gbc.readMem(0x999e));
        // CB 1C 01C3
        gbc.setState(0xb811, 0x982, 0xc920, 0x6e9d, 0xcddb, 0x81bf, 0x1, 0x1);
        gbc.writeMem(0xb811, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x982, gbc.sp());
        EXPECT(0xb813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb811));
        EXPECT(0x1c, gbc.readMem(0xb812));
        // CB 1C 01C4
        gbc.setState(0x9e7, 0x946f, 0x8400, 0x1e5c, 0x12a1, 0xa88f, 0x1, 0x0);
        gbc.writeMem(0x9e7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x946f, gbc.sp());
        EXPECT(0x9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01C5
        gbc.setState(0x48b5, 0x8ee5, 0x8ff0, 0x14cb, 0x9585, 0x518e, 0x1, 0x0);
        gbc.writeMem(0x48b5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8ee5, gbc.sp());
        EXPECT(0x48b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01C7
        gbc.setState(0x28a, 0x855a, 0x4e40, 0x6b10, 0xc42c, 0x723a, 0x1, 0x0);
        gbc.writeMem(0x28a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x855a, gbc.sp());
        EXPECT(0x28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01C8
        gbc.setState(0x86b9, 0xe591, 0x4e90, 0x7de5, 0x37ce, 0xad35, 0x0, 0x0);
        gbc.writeMem(0x86b9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe591, gbc.sp());
        EXPECT(0x86bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b9));
        EXPECT(0x1c, gbc.readMem(0x86ba));
        // CB 1C 01C9
        gbc.setState(0xb250, 0x4612, 0x11b0, 0xfdcd, 0x557f, 0xf6c, 0x0, 0x1);
        gbc.writeMem(0xb250, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4612, gbc.sp());
        EXPECT(0xb252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb250));
        EXPECT(0x1c, gbc.readMem(0xb251));
        // CB 1C 01CA
        gbc.setState(0xb2ea, 0x7b03, 0xd0f0, 0xa899, 0x8b86, 0xd1df, 0x1, 0x1);
        gbc.writeMem(0xb2ea, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7b03, gbc.sp());
        EXPECT(0xb2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ea));
        EXPECT(0x1c, gbc.readMem(0xb2eb));
        // CB 1C 01CB
        gbc.setState(0x8262, 0xe2f8, 0x6100, 0x1acc, 0x61a5, 0x719d, 0x0, 0x1);
        gbc.writeMem(0x8262, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe2f8, gbc.sp());
        EXPECT(0x8264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8262));
        EXPECT(0x1c, gbc.readMem(0x8263));
        // CB 1C 01CC
        gbc.setState(0x938, 0x282d, 0xb2c0, 0x7cca, 0xe06e, 0xd163, 0x0, 0x1);
        gbc.writeMem(0x938, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x282d, gbc.sp());
        EXPECT(0x93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01CE
        gbc.setState(0xcf6e, 0xa36, 0x4340, 0x993e, 0x1271, 0x132b, 0x0, 0x1);
        gbc.writeMem(0xcf6e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0xcf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6e));
        EXPECT(0x1c, gbc.readMem(0xcf6f));
        // CB 1C 01CF
        gbc.setState(0xd4fa, 0xffdd, 0xf840, 0x619, 0x47c1, 0x98b3, 0x1, 0x0);
        gbc.writeMem(0xd4fa, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0xd4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4fa));
        EXPECT(0x1c, gbc.readMem(0xd4fb));
        // CB 1C 01D0
        gbc.setState(0x28e, 0x4760, 0x7690, 0x5fc0, 0x270, 0x404d, 0x0, 0x0);
        gbc.writeMem(0x28e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4760, gbc.sp());
        EXPECT(0x290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01D1
        gbc.setState(0xf74, 0xc9fd, 0xc9b0, 0xeaa0, 0x329, 0xd62d, 0x1, 0x0);
        gbc.writeMem(0xf74, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc9fd, gbc.sp());
        EXPECT(0xf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01D3
        gbc.setState(0x6650, 0x808d, 0xcbd0, 0x7d17, 0x99f6, 0xb707, 0x1, 0x1);
        gbc.writeMem(0x6650, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x808d, gbc.sp());
        EXPECT(0x6652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01D4
        gbc.setState(0x2116, 0xf996, 0x78d0, 0xe2db, 0x8df3, 0x4398, 0x0, 0x1);
        gbc.writeMem(0x2116, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf996, gbc.sp());
        EXPECT(0x2118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01D5
        gbc.setState(0x7a30, 0x3c55, 0x80c0, 0x1b01, 0xb479, 0x884f, 0x1, 0x0);
        gbc.writeMem(0x7a30, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3c55, gbc.sp());
        EXPECT(0x7a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01D6
        gbc.setState(0xeda1, 0x2a88, 0xcfe0, 0x9b1a, 0x11f0, 0x9b55, 0x1, 0x1);
        gbc.writeMem(0xeda1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2a88, gbc.sp());
        EXPECT(0xeda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda1));
        EXPECT(0x1c, gbc.readMem(0xeda2));
        // CB 1C 01D7
        gbc.setState(0x556e, 0xc637, 0xc390, 0x2f49, 0xf5cc, 0x590f, 0x0, 0x1);
        gbc.writeMem(0x556e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc637, gbc.sp());
        EXPECT(0x5570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01D8
        gbc.setState(0xbc59, 0xdb2e, 0xabd0, 0xcdfe, 0xfcd6, 0xe99, 0x0, 0x1);
        gbc.writeMem(0xbc59, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdb2e, gbc.sp());
        EXPECT(0xbc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc59));
        EXPECT(0x1c, gbc.readMem(0xbc5a));
        // CB 1C 01D9
        gbc.setState(0x3dad, 0xa50b, 0x1f90, 0x4eff, 0xa366, 0x5440, 0x1, 0x1);
        gbc.writeMem(0x3dad, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa50b, gbc.sp());
        EXPECT(0x3daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01DA
        gbc.setState(0xe8c7, 0x4057, 0x5cc0, 0x3e09, 0xc709, 0x54f2, 0x1, 0x0);
        gbc.writeMem(0xe8c7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4057, gbc.sp());
        EXPECT(0xe8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c7));
        EXPECT(0x1c, gbc.readMem(0xe8c8));
        // CB 1C 01DB
        gbc.setState(0x4e0, 0xc970, 0x2840, 0xe478, 0xe3d9, 0x3798, 0x0, 0x0);
        gbc.writeMem(0x4e0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc970, gbc.sp());
        EXPECT(0x4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01DC
        gbc.setState(0x4fff, 0x655d, 0xbf10, 0xa6b0, 0xbeda, 0x5f84, 0x0, 0x1);
        gbc.writeMem(0x4fff, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x655d, gbc.sp());
        EXPECT(0x5001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01DD
        gbc.setState(0x743c, 0x107c, 0xc70, 0xc0d5, 0xee34, 0x19d9, 0x1, 0x1);
        gbc.writeMem(0x743c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x107c, gbc.sp());
        EXPECT(0x743e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01DE
        gbc.setState(0xbad4, 0xfd15, 0x3740, 0x89b, 0x1d36, 0x51ce, 0x1, 0x1);
        gbc.writeMem(0xbad4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfd15, gbc.sp());
        EXPECT(0xbad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad4));
        EXPECT(0x1c, gbc.readMem(0xbad5));
        // CB 1C 01DF
        gbc.setState(0x1304, 0x5d12, 0xe3a0, 0xe5af, 0x22da, 0x9295, 0x1, 0x1);
        gbc.writeMem(0x1304, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5d12, gbc.sp());
        EXPECT(0x1306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01E0
        gbc.setState(0xbbc, 0xa93c, 0xcec0, 0x83b4, 0x7427, 0xeb2, 0x0, 0x0);
        gbc.writeMem(0xbbc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa93c, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01E1
        gbc.setState(0xb7e9, 0x70d1, 0xec90, 0xd442, 0x1a6a, 0x81fe, 0x1, 0x1);
        gbc.writeMem(0xb7e9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x70d1, gbc.sp());
        EXPECT(0xb7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e9));
        EXPECT(0x1c, gbc.readMem(0xb7ea));
        // CB 1C 01E2
        gbc.setState(0x1116, 0xce88, 0x2cf0, 0xc1b4, 0xa0e9, 0x90c8, 0x0, 0x0);
        gbc.writeMem(0x1116, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xce88, gbc.sp());
        EXPECT(0x1118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01E3
        gbc.setState(0x936c, 0xeb87, 0xd830, 0x818, 0xaaae, 0x3bf9, 0x1, 0x1);
        gbc.writeMem(0x936c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeb87, gbc.sp());
        EXPECT(0x936e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x936c));
        EXPECT(0x1c, gbc.readMem(0x936d));
        // CB 1C 01E4
        gbc.setState(0x74b3, 0x3021, 0x8a50, 0x841b, 0xea9a, 0x7f82, 0x1, 0x0);
        gbc.writeMem(0x74b3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3021, gbc.sp());
        EXPECT(0x74b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01E5
        gbc.setState(0x5e17, 0xbe10, 0x220, 0x365f, 0x90e9, 0xcc51, 0x1, 0x0);
        gbc.writeMem(0x5e17, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbe10, gbc.sp());
        EXPECT(0x5e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01E6
        gbc.setState(0xeb62, 0x5551, 0x2f50, 0x727f, 0x14c6, 0xa353, 0x1, 0x0);
        gbc.writeMem(0xeb62, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5551, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb62));
        EXPECT(0x1c, gbc.readMem(0xeb63));
        // CB 1C 01E7
        gbc.setState(0xef5e, 0xb59b, 0xe7e0, 0xb975, 0x67ce, 0x41a4, 0x1, 0x0);
        gbc.writeMem(0xef5e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb59b, gbc.sp());
        EXPECT(0xef60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5e));
        EXPECT(0x1c, gbc.readMem(0xef5f));
        // CB 1C 01E8
        gbc.setState(0x7104, 0xff1f, 0xcae0, 0xa6c7, 0xfe46, 0x3b31, 0x0, 0x1);
        gbc.writeMem(0x7104, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xff1f, gbc.sp());
        EXPECT(0x7106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01E9
        gbc.setState(0x81c3, 0x872f, 0xc950, 0x1854, 0x7d44, 0x7d32, 0x0, 0x1);
        gbc.writeMem(0x81c3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x872f, gbc.sp());
        EXPECT(0x81c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c3));
        EXPECT(0x1c, gbc.readMem(0x81c4));
        // CB 1C 01EA
        gbc.setState(0xb7e1, 0x860, 0x8ed0, 0x425c, 0x189d, 0xb814, 0x0, 0x1);
        gbc.writeMem(0xb7e1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x860, gbc.sp());
        EXPECT(0xb7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e1));
        EXPECT(0x1c, gbc.readMem(0xb7e2));
        // CB 1C 01EB
        gbc.setState(0x84ee, 0x3e61, 0xa810, 0x6361, 0x8b93, 0xc039, 0x0, 0x1);
        gbc.writeMem(0x84ee, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3e61, gbc.sp());
        EXPECT(0x84f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ee));
        EXPECT(0x1c, gbc.readMem(0x84ef));
        // CB 1C 01EC
        gbc.setState(0x7de8, 0x2281, 0x3160, 0xb350, 0x5d39, 0x2ae5, 0x0, 0x0);
        gbc.writeMem(0x7de8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2281, gbc.sp());
        EXPECT(0x7dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01ED
        gbc.setState(0x5c74, 0x29b9, 0xb810, 0x2c14, 0xef2, 0x6ac5, 0x0, 0x1);
        gbc.writeMem(0x5c74, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x29b9, gbc.sp());
        EXPECT(0x5c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01EE
        gbc.setState(0xb1f9, 0x432c, 0x6480, 0x9d26, 0xa117, 0xe806, 0x0, 0x1);
        gbc.writeMem(0xb1f9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x432c, gbc.sp());
        EXPECT(0xb1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f9));
        EXPECT(0x1c, gbc.readMem(0xb1fa));
        // CB 1C 01EF
        gbc.setState(0xa88, 0xd5f0, 0xd970, 0x5582, 0xa122, 0xc2f3, 0x0, 0x1);
        gbc.writeMem(0xa88, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd5f0, gbc.sp());
        EXPECT(0xa8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01F0
        gbc.setState(0xc7c9, 0x52b2, 0xa7c0, 0x535a, 0x152d, 0x18b0, 0x0, 0x1);
        gbc.writeMem(0xc7c9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x52b2, gbc.sp());
        EXPECT(0xc7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c9));
        EXPECT(0x1c, gbc.readMem(0xc7ca));
        // CB 1C 01F1
        gbc.setState(0x2ce4, 0x1d2b, 0x9420, 0x91b6, 0xfeba, 0xf996, 0x1, 0x1);
        gbc.writeMem(0x2ce4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1d2b, gbc.sp());
        EXPECT(0x2ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01F2
        gbc.setState(0x6e86, 0x3d55, 0x4ef0, 0xb662, 0x391, 0xd152, 0x0, 0x0);
        gbc.writeMem(0x6e86, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3d55, gbc.sp());
        EXPECT(0x6e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01F3
        gbc.setState(0x1a1c, 0x9521, 0xc070, 0x246f, 0xd14f, 0xf81b, 0x0, 0x0);
        gbc.writeMem(0x1a1c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9521, gbc.sp());
        EXPECT(0x1a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01F4
        gbc.setState(0x5901, 0x9071, 0x2ec0, 0x1eb6, 0x2c19, 0x2a16, 0x0, 0x0);
        gbc.writeMem(0x5901, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9071, gbc.sp());
        EXPECT(0x5903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01F6
        gbc.setState(0x331a, 0xbe80, 0x3bc0, 0xe245, 0xa454, 0x7572, 0x1, 0x1);
        gbc.writeMem(0x331a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbe80, gbc.sp());
        EXPECT(0x331c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01F7
        gbc.setState(0x3d67, 0x2163, 0x1ff0, 0x7b11, 0x25d6, 0x61ba, 0x0, 0x0);
        gbc.writeMem(0x3d67, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2163, gbc.sp());
        EXPECT(0x3d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01F8
        gbc.setState(0xecee, 0xed5c, 0x9ff0, 0x5a49, 0x2205, 0x58da, 0x0, 0x1);
        gbc.writeMem(0xecee, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xed5c, gbc.sp());
        EXPECT(0xecf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecee));
        EXPECT(0x1c, gbc.readMem(0xecef));
        // CB 1C 01F9
        gbc.setState(0x81df, 0x54c8, 0xea50, 0x8d39, 0x1143, 0xba49, 0x0, 0x0);
        gbc.writeMem(0x81df, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x54c8, gbc.sp());
        EXPECT(0x81e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81df));
        EXPECT(0x1c, gbc.readMem(0x81e0));
        // CB 1C 01FA
        gbc.setState(0xdcc9, 0xcdbe, 0x2e60, 0xa6e3, 0x11e, 0xdce9, 0x0, 0x0);
        gbc.writeMem(0xdcc9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0xdccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc9));
        EXPECT(0x1c, gbc.readMem(0xdcca));
        // CB 1C 01FB
        gbc.setState(0x7084, 0x365d, 0x5390, 0x3fee, 0x224a, 0x35e5, 0x1, 0x1);
        gbc.writeMem(0x7084, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x365d, gbc.sp());
        EXPECT(0x7086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 01FC
        gbc.setState(0x7aef, 0xb57e, 0x2ba0, 0xddc7, 0x1838, 0xacaa, 0x0, 0x0);
        gbc.writeMem(0x7aef, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb57e, gbc.sp());
        EXPECT(0x7af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 01FD
        gbc.setState(0xe957, 0x7ef1, 0x6040, 0xa63d, 0x3e2d, 0xc672, 0x1, 0x1);
        gbc.writeMem(0xe957, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7ef1, gbc.sp());
        EXPECT(0xe959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe957));
        EXPECT(0x1c, gbc.readMem(0xe958));
        // CB 1C 01FF
        gbc.setState(0x8c95, 0xaf1f, 0xe040, 0xe7aa, 0xbfef, 0x2449, 0x1, 0x1);
        gbc.writeMem(0x8c95, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xaf1f, gbc.sp());
        EXPECT(0x8c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c95));
        EXPECT(0x1c, gbc.readMem(0x8c96));
        // CB 1C 0200
        gbc.setState(0xe17e, 0x30fd, 0x35f0, 0x3721, 0x7af5, 0x7417, 0x0, 0x1);
        gbc.writeMem(0xe17e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x30fd, gbc.sp());
        EXPECT(0xe180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17e));
        EXPECT(0x1c, gbc.readMem(0xe17f));
        // CB 1C 0201
        gbc.setState(0x3468, 0x9122, 0x6e00, 0x49bd, 0x767d, 0x5298, 0x0, 0x1);
        gbc.writeMem(0x3468, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9122, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0202
        gbc.setState(0x9426, 0x526f, 0xbad0, 0xc6aa, 0x3ee8, 0x3626, 0x0, 0x0);
        gbc.writeMem(0x9426, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x526f, gbc.sp());
        EXPECT(0x9428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9426));
        EXPECT(0x1c, gbc.readMem(0x9427));
        // CB 1C 0204
        gbc.setState(0x7f9e, 0xff4d, 0xc4b0, 0xb15f, 0x306f, 0x2921, 0x1, 0x1);
        gbc.writeMem(0x7f9e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xff4d, gbc.sp());
        EXPECT(0x7fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0205
        gbc.setState(0xa49b, 0x394b, 0x21e0, 0x90b6, 0x7e9b, 0xde66, 0x0, 0x1);
        gbc.writeMem(0xa49b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x394b, gbc.sp());
        EXPECT(0xa49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49b));
        EXPECT(0x1c, gbc.readMem(0xa49c));
        // CB 1C 0206
        gbc.setState(0x5496, 0xb9ce, 0x3600, 0x2464, 0x4587, 0x23af, 0x1, 0x0);
        gbc.writeMem(0x5496, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb9ce, gbc.sp());
        EXPECT(0x5498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0207
        gbc.setState(0x395b, 0x6c8d, 0x7040, 0x55ba, 0x8681, 0x5083, 0x1, 0x0);
        gbc.writeMem(0x395b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6c8d, gbc.sp());
        EXPECT(0x395d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0208
        gbc.setState(0x698b, 0xbf99, 0x9e80, 0x26d, 0xa31a, 0xae33, 0x1, 0x1);
        gbc.writeMem(0x698b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbf99, gbc.sp());
        EXPECT(0x698d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0209
        gbc.setState(0x9fd8, 0xecf2, 0x5ef0, 0xc93f, 0x9853, 0x25f8, 0x1, 0x1);
        gbc.writeMem(0x9fd8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xecf2, gbc.sp());
        EXPECT(0x9fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd8));
        EXPECT(0x1c, gbc.readMem(0x9fd9));
        // CB 1C 020A
        gbc.setState(0x3685, 0xdf84, 0xd7e0, 0xfdee, 0xf8b4, 0x2e67, 0x0, 0x1);
        gbc.writeMem(0x3685, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdf84, gbc.sp());
        EXPECT(0x3687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 020B
        gbc.setState(0x5d8b, 0x5662, 0x3f10, 0x128e, 0x5966, 0x5f1e, 0x1, 0x0);
        gbc.writeMem(0x5d8b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5662, gbc.sp());
        EXPECT(0x5d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 020C
        gbc.setState(0x4275, 0xf37, 0x7d0, 0x25b7, 0x9b4c, 0x96d0, 0x1, 0x1);
        gbc.writeMem(0x4275, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf37, gbc.sp());
        EXPECT(0x4277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 020D
        gbc.setState(0xd719, 0x4979, 0x6700, 0x748b, 0x43c6, 0x1585, 0x0, 0x1);
        gbc.writeMem(0xd719, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4979, gbc.sp());
        EXPECT(0xd71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd719));
        EXPECT(0x1c, gbc.readMem(0xd71a));
        // CB 1C 020E
        gbc.setState(0x8b7c, 0x7256, 0xe680, 0x17c4, 0x7cdd, 0x32c1, 0x0, 0x0);
        gbc.writeMem(0x8b7c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7256, gbc.sp());
        EXPECT(0x8b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7c));
        EXPECT(0x1c, gbc.readMem(0x8b7d));
        // CB 1C 020F
        gbc.setState(0x2f9d, 0xd837, 0x27b0, 0x551e, 0xa3b2, 0xf19d, 0x1, 0x1);
        gbc.writeMem(0x2f9d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd837, gbc.sp());
        EXPECT(0x2f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0210
        gbc.setState(0xe383, 0x26ac, 0x9120, 0x7632, 0x2f11, 0x7c6d, 0x1, 0x0);
        gbc.writeMem(0xe383, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x26ac, gbc.sp());
        EXPECT(0xe385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe383));
        EXPECT(0x1c, gbc.readMem(0xe384));
        // CB 1C 0211
        gbc.setState(0x5b1, 0xe533, 0x5b50, 0x16e9, 0x412a, 0x7a8d, 0x1, 0x0);
        gbc.writeMem(0x5b1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe533, gbc.sp());
        EXPECT(0x5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0213
        gbc.setState(0x8245, 0xb5de, 0xa8c0, 0xc324, 0x20cf, 0x1f9c, 0x0, 0x1);
        gbc.writeMem(0x8245, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb5de, gbc.sp());
        EXPECT(0x8247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8245));
        EXPECT(0x1c, gbc.readMem(0x8246));
        // CB 1C 0214
        gbc.setState(0xef05, 0x1d30, 0x1580, 0x92f5, 0xe0ce, 0xe752, 0x1, 0x1);
        gbc.writeMem(0xef05, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1d30, gbc.sp());
        EXPECT(0xef07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef05));
        EXPECT(0x1c, gbc.readMem(0xef06));
        // CB 1C 0215
        gbc.setState(0x2b3b, 0xcdb7, 0x5d40, 0x1865, 0x40d8, 0x299, 0x1, 0x1);
        gbc.writeMem(0x2b3b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcdb7, gbc.sp());
        EXPECT(0x2b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0216
        gbc.setState(0x92da, 0x63a4, 0x12e0, 0x668d, 0x88b9, 0x64fd, 0x0, 0x0);
        gbc.writeMem(0x92da, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x63a4, gbc.sp());
        EXPECT(0x92dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92da));
        EXPECT(0x1c, gbc.readMem(0x92db));
        // CB 1C 0217
        gbc.setState(0xab13, 0x1f8b, 0xfec0, 0x62af, 0xbf06, 0x1a86, 0x0, 0x1);
        gbc.writeMem(0xab13, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1f8b, gbc.sp());
        EXPECT(0xab15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab13));
        EXPECT(0x1c, gbc.readMem(0xab14));
        // CB 1C 0219
        gbc.setState(0xadbb, 0x214d, 0x3c0, 0x4ae6, 0xaa62, 0xf13c, 0x0, 0x0);
        gbc.writeMem(0xadbb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x214d, gbc.sp());
        EXPECT(0xadbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbb));
        EXPECT(0x1c, gbc.readMem(0xadbc));
        // CB 1C 021A
        gbc.setState(0xeaf0, 0x195a, 0xf1d0, 0x496c, 0x3ec4, 0x49c8, 0x1, 0x1);
        gbc.writeMem(0xeaf0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x195a, gbc.sp());
        EXPECT(0xeaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf0));
        EXPECT(0x1c, gbc.readMem(0xeaf1));
        // CB 1C 021B
        gbc.setState(0x2c3e, 0xf8f2, 0xe4e0, 0xef5b, 0x8030, 0x764a, 0x1, 0x0);
        gbc.writeMem(0x2c3e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf8f2, gbc.sp());
        EXPECT(0x2c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 021D
        gbc.setState(0xddf5, 0xcb30, 0x94a0, 0xc2d4, 0x972f, 0xc8b6, 0x1, 0x0);
        gbc.writeMem(0xddf5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcb30, gbc.sp());
        EXPECT(0xddf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf5));
        EXPECT(0x1c, gbc.readMem(0xddf6));
        // CB 1C 021E
        gbc.setState(0xbc36, 0x63d, 0xe480, 0x516a, 0xfe73, 0x332, 0x0, 0x1);
        gbc.writeMem(0xbc36, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0xbc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc36));
        EXPECT(0x1c, gbc.readMem(0xbc37));
        // CB 1C 021F
        gbc.setState(0x2a1a, 0x9695, 0x9b30, 0x9c0e, 0x642, 0x2e9d, 0x0, 0x0);
        gbc.writeMem(0x2a1a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9695, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0220
        gbc.setState(0x233d, 0xb513, 0x2ba0, 0x6254, 0x2ceb, 0x6b16, 0x0, 0x1);
        gbc.writeMem(0x233d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb513, gbc.sp());
        EXPECT(0x233f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0221
        gbc.setState(0x699f, 0x2dfe, 0xb010, 0x94de, 0xe71d, 0xed75, 0x1, 0x0);
        gbc.writeMem(0x699f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2dfe, gbc.sp());
        EXPECT(0x69a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0222
        gbc.setState(0x222a, 0x53, 0xf580, 0xdffb, 0x9fe2, 0xe3f1, 0x0, 0x1);
        gbc.writeMem(0x222a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x53, gbc.sp());
        EXPECT(0x222c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0223
        gbc.setState(0x6eb4, 0xa1c7, 0x9c80, 0xcd38, 0xb4a5, 0x500d, 0x0, 0x0);
        gbc.writeMem(0x6eb4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa1c7, gbc.sp());
        EXPECT(0x6eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0224
        gbc.setState(0xe803, 0x1608, 0xeba0, 0x6b35, 0xd2a7, 0x711, 0x1, 0x1);
        gbc.writeMem(0xe803, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1608, gbc.sp());
        EXPECT(0xe805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe803));
        EXPECT(0x1c, gbc.readMem(0xe804));
        // CB 1C 0225
        gbc.setState(0x97bc, 0x9dcc, 0xe800, 0x4bfb, 0x627a, 0xcd8f, 0x0, 0x0);
        gbc.writeMem(0x97bc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9dcc, gbc.sp());
        EXPECT(0x97be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bc));
        EXPECT(0x1c, gbc.readMem(0x97bd));
        // CB 1C 0226
        gbc.setState(0x81f1, 0xdc92, 0xa9a0, 0x170e, 0x2683, 0xc2d4, 0x0, 0x0);
        gbc.writeMem(0x81f1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdc92, gbc.sp());
        EXPECT(0x81f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f1));
        EXPECT(0x1c, gbc.readMem(0x81f2));
        // CB 1C 0227
        gbc.setState(0x4a64, 0x8d49, 0xec50, 0xe2c3, 0x4f5e, 0x3f80, 0x0, 0x1);
        gbc.writeMem(0x4a64, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8d49, gbc.sp());
        EXPECT(0x4a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0228
        gbc.setState(0x3db3, 0x793, 0xafa0, 0x6c00, 0x2723, 0x4b8a, 0x0, 0x0);
        gbc.writeMem(0x3db3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x793, gbc.sp());
        EXPECT(0x3db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0229
        gbc.setState(0xbb5, 0x9f07, 0x84a0, 0xab08, 0xa66a, 0xde10, 0x0, 0x0);
        gbc.writeMem(0xbb5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9f07, gbc.sp());
        EXPECT(0xbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 022A
        gbc.setState(0x88e8, 0x103d, 0x13a0, 0xab82, 0x57a9, 0xa954, 0x1, 0x0);
        gbc.writeMem(0x88e8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x103d, gbc.sp());
        EXPECT(0x88ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e8));
        EXPECT(0x1c, gbc.readMem(0x88e9));
        // CB 1C 022B
        gbc.setState(0x8f40, 0xf483, 0x9610, 0xe91a, 0x4ce8, 0xd078, 0x0, 0x1);
        gbc.writeMem(0x8f40, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf483, gbc.sp());
        EXPECT(0x8f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f40));
        EXPECT(0x1c, gbc.readMem(0x8f41));
        // CB 1C 022D
        gbc.setState(0xc7c5, 0x1d42, 0x22c0, 0x2432, 0x780f, 0x1af7, 0x0, 0x1);
        gbc.writeMem(0xc7c5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1d42, gbc.sp());
        EXPECT(0xc7c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c5));
        EXPECT(0x1c, gbc.readMem(0xc7c6));
        // CB 1C 022E
        gbc.setState(0x5b92, 0xb52d, 0x2660, 0x97db, 0x6334, 0x825c, 0x1, 0x0);
        gbc.writeMem(0x5b92, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb52d, gbc.sp());
        EXPECT(0x5b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 022F
        gbc.setState(0x9489, 0x394e, 0xd390, 0xc559, 0xf276, 0x7141, 0x0, 0x1);
        gbc.writeMem(0x9489, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x394e, gbc.sp());
        EXPECT(0x948b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9489));
        EXPECT(0x1c, gbc.readMem(0x948a));
        // CB 1C 0230
        gbc.setState(0x65c3, 0xb1a0, 0xd9e0, 0x93c6, 0xd248, 0x975d, 0x1, 0x0);
        gbc.writeMem(0x65c3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb1a0, gbc.sp());
        EXPECT(0x65c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0231
        gbc.setState(0xbafa, 0xf879, 0x8c0, 0xe7f1, 0x7b6f, 0x9703, 0x1, 0x0);
        gbc.writeMem(0xbafa, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0xbafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafa));
        EXPECT(0x1c, gbc.readMem(0xbafb));
        // CB 1C 0232
        gbc.setState(0xc43b, 0xbf8e, 0xf080, 0x8ad7, 0xb460, 0xa396, 0x0, 0x1);
        gbc.writeMem(0xc43b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbf8e, gbc.sp());
        EXPECT(0xc43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43b));
        EXPECT(0x1c, gbc.readMem(0xc43c));
        // CB 1C 0233
        gbc.setState(0x865c, 0xce3a, 0x2610, 0x9379, 0x212c, 0x667e, 0x0, 0x1);
        gbc.writeMem(0x865c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xce3a, gbc.sp());
        EXPECT(0x865e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865c));
        EXPECT(0x1c, gbc.readMem(0x865d));
        // CB 1C 0234
        gbc.setState(0xb111, 0x4241, 0xf710, 0xef64, 0xa12, 0x3b0b, 0x0, 0x0);
        gbc.writeMem(0xb111, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4241, gbc.sp());
        EXPECT(0xb113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb111));
        EXPECT(0x1c, gbc.readMem(0xb112));
        // CB 1C 0235
        gbc.setState(0xcf1, 0x1e65, 0x32d0, 0xd0c1, 0xb3dd, 0x98f1, 0x0, 0x0);
        gbc.writeMem(0xcf1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1e65, gbc.sp());
        EXPECT(0xcf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0236
        gbc.setState(0xe8b9, 0x1929, 0xfc40, 0x863b, 0x2914, 0x274f, 0x0, 0x1);
        gbc.writeMem(0xe8b9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1929, gbc.sp());
        EXPECT(0xe8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b9));
        EXPECT(0x1c, gbc.readMem(0xe8ba));
        // CB 1C 0237
        gbc.setState(0xe852, 0xdaa0, 0xdc20, 0x9989, 0xb319, 0x7a60, 0x0, 0x0);
        gbc.writeMem(0xe852, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdaa0, gbc.sp());
        EXPECT(0xe854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe852));
        EXPECT(0x1c, gbc.readMem(0xe853));
        // CB 1C 0238
        gbc.setState(0x6d82, 0xd622, 0x4840, 0x2102, 0x4133, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0x6d82, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd622, gbc.sp());
        EXPECT(0x6d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0239
        gbc.setState(0xd754, 0x1257, 0x9270, 0xb66e, 0xa365, 0x7497, 0x1, 0x0);
        gbc.writeMem(0xd754, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1257, gbc.sp());
        EXPECT(0xd756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd754));
        EXPECT(0x1c, gbc.readMem(0xd755));
        // CB 1C 023A
        gbc.setState(0x82d4, 0xa1b8, 0xc9c0, 0x6962, 0x7589, 0xfee5, 0x1, 0x0);
        gbc.writeMem(0x82d4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa1b8, gbc.sp());
        EXPECT(0x82d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d4));
        EXPECT(0x1c, gbc.readMem(0x82d5));
        // CB 1C 023B
        gbc.setState(0xb6f9, 0x25f7, 0x7940, 0x51b4, 0xce22, 0xafaf, 0x1, 0x0);
        gbc.writeMem(0xb6f9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x25f7, gbc.sp());
        EXPECT(0xb6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f9));
        EXPECT(0x1c, gbc.readMem(0xb6fa));
        // CB 1C 023C
        gbc.setState(0x7d9d, 0x3d56, 0x34a0, 0x26cd, 0xf835, 0x68c2, 0x1, 0x1);
        gbc.writeMem(0x7d9d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0x7d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 023D
        gbc.setState(0x80f7, 0x81, 0xe760, 0xd94f, 0x57f9, 0x8caf, 0x1, 0x0);
        gbc.writeMem(0x80f7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x81, gbc.sp());
        EXPECT(0x80f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f7));
        EXPECT(0x1c, gbc.readMem(0x80f8));
        // CB 1C 023F
        gbc.setState(0xb51b, 0xb2e9, 0x9c00, 0x3a2e, 0x9151, 0x40c2, 0x1, 0x0);
        gbc.writeMem(0xb51b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb2e9, gbc.sp());
        EXPECT(0xb51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51b));
        EXPECT(0x1c, gbc.readMem(0xb51c));
        // CB 1C 0240
        gbc.setState(0x1916, 0xc0c0, 0x5140, 0xcefa, 0x2866, 0xcefc, 0x1, 0x1);
        gbc.writeMem(0x1916, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc0c0, gbc.sp());
        EXPECT(0x1918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0241
        gbc.setState(0x188, 0xfc92, 0x5320, 0x874e, 0x710, 0xf0f4, 0x0, 0x0);
        gbc.writeMem(0x188, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfc92, gbc.sp());
        EXPECT(0x18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0242
        gbc.setState(0x868d, 0xc9f7, 0xfbc0, 0x80d9, 0x8d4a, 0xb4db, 0x0, 0x0);
        gbc.writeMem(0x868d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc9f7, gbc.sp());
        EXPECT(0x868f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868d));
        EXPECT(0x1c, gbc.readMem(0x868e));
        // CB 1C 0243
        gbc.setState(0xc75f, 0x1f85, 0x1020, 0xcc9f, 0x2ab4, 0x920a, 0x1, 0x0);
        gbc.writeMem(0xc75f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1f85, gbc.sp());
        EXPECT(0xc761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75f));
        EXPECT(0x1c, gbc.readMem(0xc760));
        // CB 1C 0244
        gbc.setState(0x1bd4, 0xa489, 0xc760, 0xd0ff, 0x4a9d, 0x7d66, 0x0, 0x1);
        gbc.writeMem(0x1bd4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa489, gbc.sp());
        EXPECT(0x1bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0245
        gbc.setState(0xa4ee, 0xb56e, 0x9740, 0x1f2d, 0x4857, 0x5cde, 0x1, 0x0);
        gbc.writeMem(0xa4ee, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb56e, gbc.sp());
        EXPECT(0xa4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ee));
        EXPECT(0x1c, gbc.readMem(0xa4ef));
        // CB 1C 0246
        gbc.setState(0xcab4, 0x24d1, 0x93a0, 0x7a05, 0x5969, 0x1650, 0x1, 0x0);
        gbc.writeMem(0xcab4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x24d1, gbc.sp());
        EXPECT(0xcab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab4));
        EXPECT(0x1c, gbc.readMem(0xcab5));
        // CB 1C 0247
        gbc.setState(0xd43b, 0x9665, 0x17a0, 0x2f51, 0xfe57, 0x891f, 0x1, 0x1);
        gbc.writeMem(0xd43b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9665, gbc.sp());
        EXPECT(0xd43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43b));
        EXPECT(0x1c, gbc.readMem(0xd43c));
        // CB 1C 0248
        gbc.setState(0xc11f, 0x5e6a, 0x8a30, 0x1725, 0xb6b7, 0x51e4, 0x0, 0x1);
        gbc.writeMem(0xc11f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5e6a, gbc.sp());
        EXPECT(0xc121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11f));
        EXPECT(0x1c, gbc.readMem(0xc120));
        // CB 1C 0249
        gbc.setState(0xd268, 0x27a, 0xdfb0, 0x5016, 0xd35d, 0xc2d8, 0x1, 0x0);
        gbc.writeMem(0xd268, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x27a, gbc.sp());
        EXPECT(0xd26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd268));
        EXPECT(0x1c, gbc.readMem(0xd269));
        // CB 1C 024A
        gbc.setState(0x4452, 0xdd44, 0xb580, 0xebbe, 0xfca3, 0xa3a4, 0x0, 0x1);
        gbc.writeMem(0x4452, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdd44, gbc.sp());
        EXPECT(0x4454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 024B
        gbc.setState(0x2725, 0xc000, 0x40e0, 0x634c, 0x6565, 0xa890, 0x0, 0x1);
        gbc.writeMem(0x2725, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc000, gbc.sp());
        EXPECT(0x2727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 024C
        gbc.setState(0x47ba, 0xf32d, 0x1720, 0xa477, 0x7fd0, 0xab31, 0x0, 0x0);
        gbc.writeMem(0x47ba, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf32d, gbc.sp());
        EXPECT(0x47bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 024D
        gbc.setState(0xa7ef, 0xe75c, 0xde90, 0x507d, 0x7a8b, 0x53e4, 0x0, 0x1);
        gbc.writeMem(0xa7ef, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe75c, gbc.sp());
        EXPECT(0xa7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ef));
        EXPECT(0x1c, gbc.readMem(0xa7f0));
        // CB 1C 024E
        gbc.setState(0x5565, 0xb639, 0x5b10, 0xac91, 0x3235, 0xa40f, 0x0, 0x0);
        gbc.writeMem(0x5565, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb639, gbc.sp());
        EXPECT(0x5567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 024F
        gbc.setState(0x342b, 0x1c94, 0xe600, 0x881d, 0x4d3a, 0x9ddf, 0x1, 0x0);
        gbc.writeMem(0x342b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1c94, gbc.sp());
        EXPECT(0x342d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0250
        gbc.setState(0xbe59, 0x8ef8, 0x3020, 0x1f24, 0x84d5, 0xec96, 0x0, 0x1);
        gbc.writeMem(0xbe59, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8ef8, gbc.sp());
        EXPECT(0xbe5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe59));
        EXPECT(0x1c, gbc.readMem(0xbe5a));
        // CB 1C 0251
        gbc.setState(0x6aeb, 0xc4a5, 0x5f50, 0x5c2b, 0x5ed5, 0xc2cb, 0x0, 0x1);
        gbc.writeMem(0x6aeb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc4a5, gbc.sp());
        EXPECT(0x6aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0252
        gbc.setState(0x4d78, 0xf58b, 0xfc60, 0x3948, 0xac31, 0x3032, 0x0, 0x0);
        gbc.writeMem(0x4d78, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf58b, gbc.sp());
        EXPECT(0x4d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0253
        gbc.setState(0x7eec, 0x9054, 0xe300, 0xea19, 0x7c4f, 0x15c9, 0x0, 0x1);
        gbc.writeMem(0x7eec, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9054, gbc.sp());
        EXPECT(0x7eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0254
        gbc.setState(0xcd28, 0x4897, 0x8c70, 0x9ab4, 0x81ef, 0x6206, 0x0, 0x0);
        gbc.writeMem(0xcd28, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4897, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd28));
        EXPECT(0x1c, gbc.readMem(0xcd29));
        // CB 1C 0256
        gbc.setState(0x7d1, 0x480, 0x6ee0, 0xf85f, 0xf867, 0xd003, 0x0, 0x1);
        gbc.writeMem(0x7d1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x480, gbc.sp());
        EXPECT(0x7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0257
        gbc.setState(0xe345, 0x55b, 0x2d50, 0x4cd5, 0x1050, 0x8766, 0x1, 0x1);
        gbc.writeMem(0xe345, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x55b, gbc.sp());
        EXPECT(0xe347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe345));
        EXPECT(0x1c, gbc.readMem(0xe346));
        // CB 1C 0258
        gbc.setState(0x6324, 0x1d5c, 0x12e0, 0xaeb3, 0x85cf, 0x5ddb, 0x0, 0x0);
        gbc.writeMem(0x6324, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1d5c, gbc.sp());
        EXPECT(0x6326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0259
        gbc.setState(0x1aba, 0xdca9, 0x770, 0x3bdb, 0xdeb4, 0x2c5d, 0x0, 0x1);
        gbc.writeMem(0x1aba, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdca9, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 025A
        gbc.setState(0x6100, 0x2ed0, 0xd980, 0x13c1, 0x335f, 0x68c4, 0x0, 0x0);
        gbc.writeMem(0x6100, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2ed0, gbc.sp());
        EXPECT(0x6102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 025B
        gbc.setState(0x9c3a, 0x2238, 0x24d0, 0x48c8, 0x88d, 0xf58d, 0x1, 0x1);
        gbc.writeMem(0x9c3a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2238, gbc.sp());
        EXPECT(0x9c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3a));
        EXPECT(0x1c, gbc.readMem(0x9c3b));
        // CB 1C 025C
        gbc.setState(0xa747, 0x937, 0x2070, 0xd43c, 0xd828, 0xc984, 0x0, 0x1);
        gbc.writeMem(0xa747, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x937, gbc.sp());
        EXPECT(0xa749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa747));
        EXPECT(0x1c, gbc.readMem(0xa748));
        // CB 1C 025D
        gbc.setState(0xbb1c, 0xc037, 0x7450, 0x349c, 0x73d9, 0x1dea, 0x0, 0x0);
        gbc.writeMem(0xbb1c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc037, gbc.sp());
        EXPECT(0xbb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1c));
        EXPECT(0x1c, gbc.readMem(0xbb1d));
        // CB 1C 025E
        gbc.setState(0xd6a1, 0xf1ba, 0x5700, 0x910b, 0xe0d9, 0x5122, 0x1, 0x0);
        gbc.writeMem(0xd6a1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf1ba, gbc.sp());
        EXPECT(0xd6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a1));
        EXPECT(0x1c, gbc.readMem(0xd6a2));
        // CB 1C 025F
        gbc.setState(0x6446, 0x7cd6, 0x71e0, 0x8867, 0x8576, 0x27b3, 0x0, 0x0);
        gbc.writeMem(0x6446, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7cd6, gbc.sp());
        EXPECT(0x6448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0260
        gbc.setState(0x6c14, 0xb1de, 0xd740, 0x30d5, 0xd32c, 0x6845, 0x0, 0x0);
        gbc.writeMem(0x6c14, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb1de, gbc.sp());
        EXPECT(0x6c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0261
        gbc.setState(0xa732, 0x9b0e, 0xf750, 0x8fbc, 0xa24d, 0x7223, 0x0, 0x0);
        gbc.writeMem(0xa732, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9b0e, gbc.sp());
        EXPECT(0xa734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa732));
        EXPECT(0x1c, gbc.readMem(0xa733));
        // CB 1C 0262
        gbc.setState(0x8a0f, 0x51a3, 0x2880, 0x8f3d, 0x4427, 0x1a44, 0x1, 0x0);
        gbc.writeMem(0x8a0f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x51a3, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0f));
        EXPECT(0x1c, gbc.readMem(0x8a10));
        // CB 1C 0263
        gbc.setState(0xe333, 0x507e, 0xbbf0, 0xcf36, 0xb248, 0xb487, 0x1, 0x1);
        gbc.writeMem(0xe333, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x507e, gbc.sp());
        EXPECT(0xe335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe333));
        EXPECT(0x1c, gbc.readMem(0xe334));
        // CB 1C 0264
        gbc.setState(0x462f, 0x7553, 0xf4e0, 0x8445, 0x2d75, 0x9db9, 0x0, 0x0);
        gbc.writeMem(0x462f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7553, gbc.sp());
        EXPECT(0x4631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0265
        gbc.setState(0x806a, 0xc4c3, 0x6200, 0x3836, 0xb88e, 0xe601, 0x0, 0x1);
        gbc.writeMem(0x806a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc4c3, gbc.sp());
        EXPECT(0x806c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806a));
        EXPECT(0x1c, gbc.readMem(0x806b));
        // CB 1C 0266
        gbc.setState(0x3ed4, 0x9556, 0xc4a0, 0x2560, 0xf646, 0x3a7c, 0x1, 0x0);
        gbc.writeMem(0x3ed4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9556, gbc.sp());
        EXPECT(0x3ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0267
        gbc.setState(0xaa56, 0x79b6, 0xad80, 0x834b, 0x4101, 0xca8, 0x0, 0x1);
        gbc.writeMem(0xaa56, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x79b6, gbc.sp());
        EXPECT(0xaa58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa56));
        EXPECT(0x1c, gbc.readMem(0xaa57));
        // CB 1C 0268
        gbc.setState(0x7cc5, 0x88cc, 0x91f0, 0x65c8, 0x5063, 0xd1c, 0x0, 0x1);
        gbc.writeMem(0x7cc5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x88cc, gbc.sp());
        EXPECT(0x7cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 026A
        gbc.setState(0xef7b, 0x601a, 0xa5c0, 0x9bb4, 0x28d1, 0x4122, 0x0, 0x1);
        gbc.writeMem(0xef7b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x601a, gbc.sp());
        EXPECT(0xef7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7b));
        EXPECT(0x1c, gbc.readMem(0xef7c));
        // CB 1C 026B
        gbc.setState(0x804a, 0x7fe, 0xf900, 0x5938, 0xf293, 0x867c, 0x1, 0x1);
        gbc.writeMem(0x804a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7fe, gbc.sp());
        EXPECT(0x804c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804a));
        EXPECT(0x1c, gbc.readMem(0x804b));
        // CB 1C 026C
        gbc.setState(0x829e, 0x4f3c, 0xbc50, 0xbad1, 0xe34c, 0x3dd9, 0x0, 0x1);
        gbc.writeMem(0x829e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4f3c, gbc.sp());
        EXPECT(0x82a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829e));
        EXPECT(0x1c, gbc.readMem(0x829f));
        // CB 1C 026D
        gbc.setState(0xde7e, 0x6e8d, 0x55f0, 0xa8b4, 0x5b48, 0x8092, 0x0, 0x1);
        gbc.writeMem(0xde7e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6e8d, gbc.sp());
        EXPECT(0xde80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7e));
        EXPECT(0x1c, gbc.readMem(0xde7f));
        // CB 1C 026E
        gbc.setState(0x8b5c, 0x47fd, 0xe540, 0xfc5c, 0xd9ae, 0x767a, 0x0, 0x0);
        gbc.writeMem(0x8b5c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x47fd, gbc.sp());
        EXPECT(0x8b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5c));
        EXPECT(0x1c, gbc.readMem(0x8b5d));
        // CB 1C 026F
        gbc.setState(0x66bb, 0x3ba2, 0x1570, 0xc4c2, 0xc42c, 0xf73b, 0x1, 0x0);
        gbc.writeMem(0x66bb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3ba2, gbc.sp());
        EXPECT(0x66bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0270
        gbc.setState(0xb17b, 0x186d, 0x8740, 0xba55, 0x46b, 0x86cc, 0x1, 0x0);
        gbc.writeMem(0xb17b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x186d, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17b));
        EXPECT(0x1c, gbc.readMem(0xb17c));
        // CB 1C 0271
        gbc.setState(0x8a82, 0x52c7, 0xb360, 0x8ed2, 0x996a, 0x2dd3, 0x0, 0x0);
        gbc.writeMem(0x8a82, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x52c7, gbc.sp());
        EXPECT(0x8a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a82));
        EXPECT(0x1c, gbc.readMem(0x8a83));
        // CB 1C 0272
        gbc.setState(0x85d4, 0xbd1, 0x6040, 0x52b, 0x851d, 0x77c6, 0x1, 0x1);
        gbc.writeMem(0x85d4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbd1, gbc.sp());
        EXPECT(0x85d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d4));
        EXPECT(0x1c, gbc.readMem(0x85d5));
        // CB 1C 0274
        gbc.setState(0x66bb, 0x12ea, 0x8b00, 0x8f43, 0x1cd1, 0x3afb, 0x0, 0x0);
        gbc.writeMem(0x66bb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0x66bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0276
        gbc.setState(0x420f, 0xde69, 0xf9f0, 0x712, 0x5c75, 0x75d3, 0x1, 0x1);
        gbc.writeMem(0x420f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xde69, gbc.sp());
        EXPECT(0x4211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0277
        gbc.setState(0x8252, 0x47b3, 0xe020, 0xd733, 0xf6a9, 0x795a, 0x1, 0x0);
        gbc.writeMem(0x8252, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x47b3, gbc.sp());
        EXPECT(0x8254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8252));
        EXPECT(0x1c, gbc.readMem(0x8253));
        // CB 1C 0278
        gbc.setState(0x30ff, 0x7317, 0x1460, 0x26e9, 0xa715, 0x880b, 0x1, 0x1);
        gbc.writeMem(0x30ff, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7317, gbc.sp());
        EXPECT(0x3101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0279
        gbc.setState(0x5d46, 0x42b9, 0x6400, 0x899a, 0x4706, 0xa3d4, 0x1, 0x0);
        gbc.writeMem(0x5d46, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x42b9, gbc.sp());
        EXPECT(0x5d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 027A
        gbc.setState(0x4bc8, 0xfbe5, 0x49c0, 0xbc67, 0xf6e6, 0x5138, 0x1, 0x0);
        gbc.writeMem(0x4bc8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfbe5, gbc.sp());
        EXPECT(0x4bca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 027B
        gbc.setState(0x7f1a, 0x5f83, 0x2090, 0xcf1b, 0x62c3, 0xd129, 0x1, 0x1);
        gbc.writeMem(0x7f1a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5f83, gbc.sp());
        EXPECT(0x7f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 027C
        gbc.setState(0x8939, 0x702d, 0x4d90, 0x357a, 0x2d73, 0xb294, 0x1, 0x1);
        gbc.writeMem(0x8939, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x702d, gbc.sp());
        EXPECT(0x893b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8939));
        EXPECT(0x1c, gbc.readMem(0x893a));
        // CB 1C 027D
        gbc.setState(0x37a8, 0xb35f, 0xf400, 0x1ea6, 0xeb08, 0x5d99, 0x1, 0x1);
        gbc.writeMem(0x37a8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb35f, gbc.sp());
        EXPECT(0x37aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 027E
        gbc.setState(0xe47e, 0xfdf1, 0x5100, 0x2af0, 0x7a0b, 0xf55a, 0x0, 0x1);
        gbc.writeMem(0xe47e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfdf1, gbc.sp());
        EXPECT(0xe480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47e));
        EXPECT(0x1c, gbc.readMem(0xe47f));
        // CB 1C 027F
        gbc.setState(0x1f93, 0xe390, 0xc930, 0x3011, 0x133a, 0xb1e6, 0x1, 0x1);
        gbc.writeMem(0x1f93, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe390, gbc.sp());
        EXPECT(0x1f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0280
        gbc.setState(0x55c7, 0x161a, 0xe050, 0x70df, 0xc7b5, 0x604e, 0x0, 0x1);
        gbc.writeMem(0x55c7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x161a, gbc.sp());
        EXPECT(0x55c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0281
        gbc.setState(0xaf94, 0x5164, 0xe480, 0x396e, 0x231c, 0xd0eb, 0x1, 0x0);
        gbc.writeMem(0xaf94, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5164, gbc.sp());
        EXPECT(0xaf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf94));
        EXPECT(0x1c, gbc.readMem(0xaf95));
        // CB 1C 0282
        gbc.setState(0x278b, 0xc59f, 0x38b0, 0x94cd, 0xe729, 0x1131, 0x0, 0x1);
        gbc.writeMem(0x278b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc59f, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0283
        gbc.setState(0x9f10, 0x51f3, 0xdf90, 0x3d75, 0xdb6, 0x4cae, 0x0, 0x1);
        gbc.writeMem(0x9f10, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x51f3, gbc.sp());
        EXPECT(0x9f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f10));
        EXPECT(0x1c, gbc.readMem(0x9f11));
        // CB 1C 0284
        gbc.setState(0xbe6c, 0xb610, 0xdee0, 0xf8c0, 0x5202, 0xa882, 0x0, 0x1);
        gbc.writeMem(0xbe6c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb610, gbc.sp());
        EXPECT(0xbe6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6c));
        EXPECT(0x1c, gbc.readMem(0xbe6d));
        // CB 1C 0285
        gbc.setState(0xbfc4, 0x4e8c, 0xcfd0, 0x2bc, 0x18c1, 0xa6eb, 0x1, 0x1);
        gbc.writeMem(0xbfc4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4e8c, gbc.sp());
        EXPECT(0xbfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc4));
        EXPECT(0x1c, gbc.readMem(0xbfc5));
        // CB 1C 0286
        gbc.setState(0x9741, 0xd052, 0xc8c0, 0x1cab, 0xe8e4, 0x4e47, 0x0, 0x0);
        gbc.writeMem(0x9741, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd052, gbc.sp());
        EXPECT(0x9743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9741));
        EXPECT(0x1c, gbc.readMem(0x9742));
        // CB 1C 0287
        gbc.setState(0x4850, 0x1269, 0x9980, 0x1bc5, 0x280e, 0x2c1a, 0x1, 0x1);
        gbc.writeMem(0x4850, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1269, gbc.sp());
        EXPECT(0x4852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0288
        gbc.setState(0x495e, 0x2c3d, 0x5aa0, 0xad38, 0xcc60, 0xc03, 0x0, 0x1);
        gbc.writeMem(0x495e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2c3d, gbc.sp());
        EXPECT(0x4960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0289
        gbc.setState(0x8913, 0xdf11, 0x5170, 0x266c, 0x9b06, 0xe71b, 0x0, 0x0);
        gbc.writeMem(0x8913, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdf11, gbc.sp());
        EXPECT(0x8915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8913));
        EXPECT(0x1c, gbc.readMem(0x8914));
        // CB 1C 028A
        gbc.setState(0x4379, 0x43d9, 0xb290, 0x54bb, 0xbd41, 0x7a7c, 0x1, 0x1);
        gbc.writeMem(0x4379, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x43d9, gbc.sp());
        EXPECT(0x437b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 028B
        gbc.setState(0x6d33, 0x1b01, 0xd700, 0x9c67, 0xcbe4, 0xb6e9, 0x0, 0x0);
        gbc.writeMem(0x6d33, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1b01, gbc.sp());
        EXPECT(0x6d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 028C
        gbc.setState(0xa32, 0x32f7, 0x2290, 0x4316, 0x4381, 0x50ba, 0x0, 0x0);
        gbc.writeMem(0xa32, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x32f7, gbc.sp());
        EXPECT(0xa34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 028D
        gbc.setState(0x7e17, 0x33a2, 0x49b0, 0x3a1e, 0x84f0, 0xeeb9, 0x1, 0x0);
        gbc.writeMem(0x7e17, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x33a2, gbc.sp());
        EXPECT(0x7e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 028E
        gbc.setState(0xdbeb, 0x4b00, 0x5e60, 0xf69, 0xbf7b, 0x35b3, 0x1, 0x1);
        gbc.writeMem(0xdbeb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4b00, gbc.sp());
        EXPECT(0xdbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbeb));
        EXPECT(0x1c, gbc.readMem(0xdbec));
        // CB 1C 028F
        gbc.setState(0xe2b9, 0x4d56, 0x79d0, 0xe594, 0x7b9c, 0xdca, 0x1, 0x1);
        gbc.writeMem(0xe2b9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4d56, gbc.sp());
        EXPECT(0xe2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b9));
        EXPECT(0x1c, gbc.readMem(0xe2ba));
        // CB 1C 0290
        gbc.setState(0xd0dd, 0xc2e4, 0xca80, 0xf137, 0x10d2, 0x55b3, 0x1, 0x1);
        gbc.writeMem(0xd0dd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc2e4, gbc.sp());
        EXPECT(0xd0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0dd));
        EXPECT(0x1c, gbc.readMem(0xd0de));
        // CB 1C 0291
        gbc.setState(0xd225, 0xa64f, 0x6060, 0x5c27, 0xc030, 0x62f7, 0x1, 0x0);
        gbc.writeMem(0xd225, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa64f, gbc.sp());
        EXPECT(0xd227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd225));
        EXPECT(0x1c, gbc.readMem(0xd226));
        // CB 1C 0292
        gbc.setState(0x1925, 0x9080, 0x1910, 0xab98, 0x4444, 0xb5e4, 0x0, 0x0);
        gbc.writeMem(0x1925, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9080, gbc.sp());
        EXPECT(0x1927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0293
        gbc.setState(0xd9f6, 0x4500, 0x9cb0, 0x31b, 0x4427, 0xa7ce, 0x0, 0x0);
        gbc.writeMem(0xd9f6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4500, gbc.sp());
        EXPECT(0xd9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f6));
        EXPECT(0x1c, gbc.readMem(0xd9f7));
        // CB 1C 0294
        gbc.setState(0x6eab, 0x9723, 0x62b0, 0x7578, 0x832d, 0x3db9, 0x0, 0x0);
        gbc.writeMem(0x6eab, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9723, gbc.sp());
        EXPECT(0x6ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0295
        gbc.setState(0xc32e, 0x35b9, 0x8ca0, 0x6d4b, 0xc5bd, 0x7af8, 0x1, 0x1);
        gbc.writeMem(0xc32e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x35b9, gbc.sp());
        EXPECT(0xc330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32e));
        EXPECT(0x1c, gbc.readMem(0xc32f));
        // CB 1C 0296
        gbc.setState(0x696f, 0xfd97, 0xb560, 0x6e6c, 0xdcef, 0xac70, 0x0, 0x1);
        gbc.writeMem(0x696f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfd97, gbc.sp());
        EXPECT(0x6971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0297
        gbc.setState(0x86d6, 0xa132, 0xd200, 0x52a3, 0x51b9, 0xe7b7, 0x0, 0x0);
        gbc.writeMem(0x86d6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa132, gbc.sp());
        EXPECT(0x86d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d6));
        EXPECT(0x1c, gbc.readMem(0x86d7));
        // CB 1C 0298
        gbc.setState(0xd2d9, 0xecb, 0x57a0, 0x6c5b, 0xd2ae, 0x1ae0, 0x1, 0x1);
        gbc.writeMem(0xd2d9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xecb, gbc.sp());
        EXPECT(0xd2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d9));
        EXPECT(0x1c, gbc.readMem(0xd2da));
        // CB 1C 0299
        gbc.setState(0x4d4d, 0xabb7, 0x3de0, 0x8e4e, 0x3338, 0xa6ee, 0x1, 0x1);
        gbc.writeMem(0x4d4d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xabb7, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 029A
        gbc.setState(0x4ce3, 0xe714, 0x1a80, 0xf19f, 0x42e7, 0xbc26, 0x0, 0x0);
        gbc.writeMem(0x4ce3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe714, gbc.sp());
        EXPECT(0x4ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 029B
        gbc.setState(0xda5f, 0xf4e6, 0x7750, 0xafb2, 0x9f7f, 0xe57e, 0x1, 0x0);
        gbc.writeMem(0xda5f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf4e6, gbc.sp());
        EXPECT(0xda61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5f));
        EXPECT(0x1c, gbc.readMem(0xda60));
        // CB 1C 029D
        gbc.setState(0xd727, 0xba31, 0xfe50, 0xc8f, 0xe0cb, 0xa24b, 0x0, 0x1);
        gbc.writeMem(0xd727, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xba31, gbc.sp());
        EXPECT(0xd729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd727));
        EXPECT(0x1c, gbc.readMem(0xd728));
        // CB 1C 029E
        gbc.setState(0x61ee, 0x40cd, 0x4760, 0x313, 0x302, 0xfabc, 0x1, 0x1);
        gbc.writeMem(0x61ee, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x40cd, gbc.sp());
        EXPECT(0x61f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 029F
        gbc.setState(0xdaf3, 0x5add, 0xa8b0, 0x6412, 0x1e00, 0x71a2, 0x0, 0x0);
        gbc.writeMem(0xdaf3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5add, gbc.sp());
        EXPECT(0xdaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf3));
        EXPECT(0x1c, gbc.readMem(0xdaf4));
        // CB 1C 02A1
        gbc.setState(0xa023, 0x4670, 0x1730, 0xf670, 0xffca, 0xcc08, 0x0, 0x0);
        gbc.writeMem(0xa023, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4670, gbc.sp());
        EXPECT(0xa025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa023));
        EXPECT(0x1c, gbc.readMem(0xa024));
        // CB 1C 02A2
        gbc.setState(0x829b, 0x51dd, 0x2ed0, 0xca40, 0x4010, 0x9f7e, 0x0, 0x0);
        gbc.writeMem(0x829b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x51dd, gbc.sp());
        EXPECT(0x829d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829b));
        EXPECT(0x1c, gbc.readMem(0x829c));
        // CB 1C 02A3
        gbc.setState(0xddfe, 0x7b96, 0x9820, 0x84c8, 0xda72, 0x69e9, 0x1, 0x1);
        gbc.writeMem(0xddfe, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7b96, gbc.sp());
        EXPECT(0xde00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfe));
        EXPECT(0x1c, gbc.readMem(0xddff));
        // CB 1C 02A4
        gbc.setState(0x6150, 0x3af6, 0xfec0, 0x50c5, 0x41d6, 0x4b41, 0x1, 0x0);
        gbc.writeMem(0x6150, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3af6, gbc.sp());
        EXPECT(0x6152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02A5
        gbc.setState(0xcf7b, 0x5d57, 0xaf50, 0x2f22, 0x3b71, 0x11b4, 0x1, 0x0);
        gbc.writeMem(0xcf7b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5d57, gbc.sp());
        EXPECT(0xcf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7b));
        EXPECT(0x1c, gbc.readMem(0xcf7c));
        // CB 1C 02A6
        gbc.setState(0xa5ec, 0x9ea3, 0xaa40, 0x8e8d, 0x26a9, 0x2dd2, 0x1, 0x0);
        gbc.writeMem(0xa5ec, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9ea3, gbc.sp());
        EXPECT(0xa5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ec));
        EXPECT(0x1c, gbc.readMem(0xa5ed));
        // CB 1C 02A7
        gbc.setState(0x3ac0, 0xa56a, 0x5160, 0xd39e, 0x53f8, 0x440, 0x1, 0x1);
        gbc.writeMem(0x3ac0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa56a, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02A8
        gbc.setState(0xd955, 0x5194, 0xf8e0, 0xf0ad, 0xe594, 0x204, 0x0, 0x1);
        gbc.writeMem(0xd955, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5194, gbc.sp());
        EXPECT(0xd957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd955));
        EXPECT(0x1c, gbc.readMem(0xd956));
        // CB 1C 02A9
        gbc.setState(0xac06, 0xb260, 0x58b0, 0x9d2e, 0xb69e, 0x24fa, 0x0, 0x0);
        gbc.writeMem(0xac06, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0xac08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac06));
        EXPECT(0x1c, gbc.readMem(0xac07));
        // CB 1C 02AA
        gbc.setState(0xc7e3, 0x1606, 0x2520, 0x7633, 0xfe7f, 0x2741, 0x0, 0x0);
        gbc.writeMem(0xc7e3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1606, gbc.sp());
        EXPECT(0xc7e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e3));
        EXPECT(0x1c, gbc.readMem(0xc7e4));
        // CB 1C 02AB
        gbc.setState(0x179d, 0xcfb0, 0xc280, 0x57e9, 0x9d11, 0xcac9, 0x0, 0x1);
        gbc.writeMem(0x179d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcfb0, gbc.sp());
        EXPECT(0x179f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02AC
        gbc.setState(0xa922, 0x2c02, 0x5b0, 0xb1d3, 0xae1c, 0xfbf4, 0x1, 0x0);
        gbc.writeMem(0xa922, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2c02, gbc.sp());
        EXPECT(0xa924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa922));
        EXPECT(0x1c, gbc.readMem(0xa923));
        // CB 1C 02AD
        gbc.setState(0x35ab, 0xb8fb, 0xbf0, 0x197e, 0xa2ea, 0x1b90, 0x0, 0x0);
        gbc.writeMem(0x35ab, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb8fb, gbc.sp());
        EXPECT(0x35ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02AE
        gbc.setState(0xda73, 0x167d, 0xa960, 0xed9d, 0xc935, 0x4772, 0x1, 0x1);
        gbc.writeMem(0xda73, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x167d, gbc.sp());
        EXPECT(0xda75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda73));
        EXPECT(0x1c, gbc.readMem(0xda74));
        // CB 1C 02AF
        gbc.setState(0x98ee, 0x1f69, 0x1190, 0xf164, 0x5dc6, 0x21c6, 0x0, 0x1);
        gbc.writeMem(0x98ee, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1f69, gbc.sp());
        EXPECT(0x98f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ee));
        EXPECT(0x1c, gbc.readMem(0x98ef));
        // CB 1C 02B0
        gbc.setState(0xea33, 0x8467, 0xfa30, 0x85, 0x73aa, 0x4ee8, 0x1, 0x1);
        gbc.writeMem(0xea33, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8467, gbc.sp());
        EXPECT(0xea35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea33));
        EXPECT(0x1c, gbc.readMem(0xea34));
        // CB 1C 02B1
        gbc.setState(0x1acc, 0xe0c6, 0x7f50, 0x237d, 0x6474, 0xe1ce, 0x1, 0x1);
        gbc.writeMem(0x1acc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe0c6, gbc.sp());
        EXPECT(0x1ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02B3
        gbc.setState(0xd1d, 0x130f, 0x9e90, 0x91c, 0xa324, 0x67e5, 0x0, 0x0);
        gbc.writeMem(0xd1d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x130f, gbc.sp());
        EXPECT(0xd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02B4
        gbc.setState(0x1826, 0x2b32, 0x1a40, 0x520b, 0x2a46, 0x6191, 0x0, 0x0);
        gbc.writeMem(0x1826, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2b32, gbc.sp());
        EXPECT(0x1828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02B5
        gbc.setState(0x722b, 0x333a, 0xb430, 0x2b06, 0xdcee, 0x93f9, 0x0, 0x1);
        gbc.writeMem(0x722b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x333a, gbc.sp());
        EXPECT(0x722d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02B6
        gbc.setState(0xa8ba, 0x7eb, 0xdd90, 0x58a2, 0x28cf, 0x1136, 0x0, 0x1);
        gbc.writeMem(0xa8ba, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7eb, gbc.sp());
        EXPECT(0xa8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ba));
        EXPECT(0x1c, gbc.readMem(0xa8bb));
        // CB 1C 02B7
        gbc.setState(0x653e, 0xaa39, 0x7800, 0xc56c, 0x891d, 0xf726, 0x0, 0x1);
        gbc.writeMem(0x653e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaa39, gbc.sp());
        EXPECT(0x6540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02B8
        gbc.setState(0x29e7, 0x59bd, 0xe400, 0x270b, 0x76cd, 0x4358, 0x0, 0x0);
        gbc.writeMem(0x29e7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x59bd, gbc.sp());
        EXPECT(0x29e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02B9
        gbc.setState(0x73e2, 0xcb5e, 0x74f0, 0xa23, 0xde2e, 0xa6b5, 0x1, 0x1);
        gbc.writeMem(0x73e2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcb5e, gbc.sp());
        EXPECT(0x73e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02BA
        gbc.setState(0xda1a, 0x8d33, 0x7390, 0x9f9f, 0x6aa7, 0x5d90, 0x0, 0x1);
        gbc.writeMem(0xda1a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8d33, gbc.sp());
        EXPECT(0xda1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1a));
        EXPECT(0x1c, gbc.readMem(0xda1b));
        // CB 1C 02BB
        gbc.setState(0x3025, 0x1294, 0x8a20, 0x502d, 0x14f3, 0xc498, 0x0, 0x1);
        gbc.writeMem(0x3025, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1294, gbc.sp());
        EXPECT(0x3027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02BC
        gbc.setState(0xbbdc, 0xedb3, 0x97f0, 0x615, 0x367d, 0xc047, 0x1, 0x0);
        gbc.writeMem(0xbbdc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xedb3, gbc.sp());
        EXPECT(0xbbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdc));
        EXPECT(0x1c, gbc.readMem(0xbbdd));
        // CB 1C 02BD
        gbc.setState(0x462a, 0xfac5, 0x72a0, 0x3b89, 0x9dc5, 0x72f5, 0x1, 0x0);
        gbc.writeMem(0x462a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfac5, gbc.sp());
        EXPECT(0x462c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02BE
        gbc.setState(0x7ca4, 0xaee5, 0x4f20, 0x6be5, 0xa48a, 0x1bef, 0x0, 0x1);
        gbc.writeMem(0x7ca4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0x7ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02BF
        gbc.setState(0x8da7, 0xe80c, 0x92d0, 0x10cb, 0xd488, 0x69d8, 0x1, 0x0);
        gbc.writeMem(0x8da7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe80c, gbc.sp());
        EXPECT(0x8da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da7));
        EXPECT(0x1c, gbc.readMem(0x8da8));
        // CB 1C 02C0
        gbc.setState(0xa445, 0xf9bc, 0x4eb0, 0x1263, 0x4b18, 0x56bc, 0x1, 0x0);
        gbc.writeMem(0xa445, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf9bc, gbc.sp());
        EXPECT(0xa447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa445));
        EXPECT(0x1c, gbc.readMem(0xa446));
        // CB 1C 02C1
        gbc.setState(0x4897, 0x3045, 0x8e20, 0x6af2, 0x4464, 0xd7ef, 0x1, 0x0);
        gbc.writeMem(0x4897, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3045, gbc.sp());
        EXPECT(0x4899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02C2
        gbc.setState(0x140, 0xfbb2, 0xb320, 0x9857, 0x257f, 0x5c69, 0x1, 0x0);
        gbc.writeMem(0x140, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfbb2, gbc.sp());
        EXPECT(0x142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02C3
        gbc.setState(0x4499, 0x6e0a, 0x8cc0, 0xbfde, 0x8471, 0x1cfd, 0x1, 0x1);
        gbc.writeMem(0x4499, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6e0a, gbc.sp());
        EXPECT(0x449b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02C4
        gbc.setState(0x1086, 0x372a, 0x4e50, 0x8e44, 0x5ace, 0x92f3, 0x1, 0x1);
        gbc.writeMem(0x1086, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x372a, gbc.sp());
        EXPECT(0x1088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02C7
        gbc.setState(0x2af, 0x8187, 0x1fd0, 0xb38d, 0x2269, 0xb0ed, 0x1, 0x0);
        gbc.writeMem(0x2af, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8187, gbc.sp());
        EXPECT(0x2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02C8
        gbc.setState(0x66b9, 0x61dd, 0x5a50, 0x531c, 0x8b8a, 0x9eb6, 0x0, 0x1);
        gbc.writeMem(0x66b9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x61dd, gbc.sp());
        EXPECT(0x66bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02C9
        gbc.setState(0xa6a3, 0x78a7, 0xbc80, 0x1bde, 0x1e8, 0x99d3, 0x0, 0x0);
        gbc.writeMem(0xa6a3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x78a7, gbc.sp());
        EXPECT(0xa6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a3));
        EXPECT(0x1c, gbc.readMem(0xa6a4));
        // CB 1C 02CB
        gbc.setState(0x470e, 0xd9d0, 0x99b0, 0x6229, 0x29c, 0x387f, 0x1, 0x1);
        gbc.writeMem(0x470e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd9d0, gbc.sp());
        EXPECT(0x4710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02CC
        gbc.setState(0x2aa0, 0x7c97, 0x9d90, 0x3c06, 0xa8b7, 0xa72c, 0x0, 0x1);
        gbc.writeMem(0x2aa0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7c97, gbc.sp());
        EXPECT(0x2aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02CD
        gbc.setState(0x9267, 0xb221, 0x6b50, 0x9393, 0x9a81, 0x53c3, 0x1, 0x1);
        gbc.writeMem(0x9267, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb221, gbc.sp());
        EXPECT(0x9269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9267));
        EXPECT(0x1c, gbc.readMem(0x9268));
        // CB 1C 02CE
        gbc.setState(0x2d2f, 0x1b5e, 0x62c0, 0x9906, 0x98d7, 0xacfc, 0x1, 0x1);
        gbc.writeMem(0x2d2f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1b5e, gbc.sp());
        EXPECT(0x2d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02CF
        gbc.setState(0xd718, 0x62bb, 0x4c0, 0xdcc6, 0x334d, 0x97e, 0x0, 0x0);
        gbc.writeMem(0xd718, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x62bb, gbc.sp());
        EXPECT(0xd71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd718));
        EXPECT(0x1c, gbc.readMem(0xd719));
        // CB 1C 02D0
        gbc.setState(0xd6f, 0xd36e, 0xc00, 0xfbfc, 0xcee5, 0x6b96, 0x0, 0x0);
        gbc.writeMem(0xd6f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd36e, gbc.sp());
        EXPECT(0xd71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02D1
        gbc.setState(0x5629, 0x87fa, 0xec90, 0x2eec, 0x1501, 0x4daf, 0x1, 0x0);
        gbc.writeMem(0x5629, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x87fa, gbc.sp());
        EXPECT(0x562b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02D2
        gbc.setState(0xa03b, 0x2c3b, 0xc990, 0xe005, 0x455, 0x562, 0x0, 0x1);
        gbc.writeMem(0xa03b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2c3b, gbc.sp());
        EXPECT(0xa03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03b));
        EXPECT(0x1c, gbc.readMem(0xa03c));
        // CB 1C 02D3
        gbc.setState(0x42ab, 0xd0e1, 0x1510, 0x8ff5, 0x2b1a, 0xfe2, 0x1, 0x1);
        gbc.writeMem(0x42ab, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd0e1, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02D4
        gbc.setState(0x153d, 0x8a52, 0xe600, 0x502b, 0xdb99, 0xe4ee, 0x0, 0x1);
        gbc.writeMem(0x153d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8a52, gbc.sp());
        EXPECT(0x153f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02D5
        gbc.setState(0x4204, 0x176f, 0xbc80, 0x6ca5, 0x247a, 0x8dfa, 0x1, 0x0);
        gbc.writeMem(0x4204, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x176f, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02D6
        gbc.setState(0x357a, 0xff57, 0x9af0, 0xfc48, 0xc571, 0x22c6, 0x0, 0x1);
        gbc.writeMem(0x357a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xff57, gbc.sp());
        EXPECT(0x357c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02D7
        gbc.setState(0x97a3, 0xbc4f, 0x5a30, 0x1076, 0x8da3, 0x14b8, 0x0, 0x0);
        gbc.writeMem(0x97a3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbc4f, gbc.sp());
        EXPECT(0x97a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a3));
        EXPECT(0x1c, gbc.readMem(0x97a4));
        // CB 1C 02D8
        gbc.setState(0x1465, 0x4548, 0xde40, 0xf6b1, 0x89f8, 0x7222, 0x0, 0x0);
        gbc.writeMem(0x1465, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4548, gbc.sp());
        EXPECT(0x1467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02DA
        gbc.setState(0x89a9, 0xf747, 0x2d80, 0xd0d3, 0x54c8, 0x9bd3, 0x0, 0x0);
        gbc.writeMem(0x89a9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf747, gbc.sp());
        EXPECT(0x89ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a9));
        EXPECT(0x1c, gbc.readMem(0x89aa));
        // CB 1C 02DC
        gbc.setState(0xad53, 0xbf55, 0xa440, 0x7c29, 0x9963, 0x7c95, 0x1, 0x1);
        gbc.writeMem(0xad53, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbf55, gbc.sp());
        EXPECT(0xad55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad53));
        EXPECT(0x1c, gbc.readMem(0xad54));
        // CB 1C 02DD
        gbc.setState(0x95a8, 0x8cda, 0xe0, 0xec3a, 0xedff, 0x107d, 0x0, 0x0);
        gbc.writeMem(0x95a8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8cda, gbc.sp());
        EXPECT(0x95aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a8));
        EXPECT(0x1c, gbc.readMem(0x95a9));
        // CB 1C 02DE
        gbc.setState(0x925e, 0xec74, 0xe640, 0x79a7, 0x32c9, 0x4d57, 0x1, 0x1);
        gbc.writeMem(0x925e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0x9260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925e));
        EXPECT(0x1c, gbc.readMem(0x925f));
        // CB 1C 02DF
        gbc.setState(0xd97e, 0x8c2d, 0x870, 0xfe8e, 0x18ee, 0xdfea, 0x0, 0x1);
        gbc.writeMem(0xd97e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8c2d, gbc.sp());
        EXPECT(0xd980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97e));
        EXPECT(0x1c, gbc.readMem(0xd97f));
        // CB 1C 02E0
        gbc.setState(0x4c7, 0x3bd5, 0x7d10, 0x8cbe, 0x7f00, 0xdc31, 0x0, 0x0);
        gbc.writeMem(0x4c7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3bd5, gbc.sp());
        EXPECT(0x4c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02E1
        gbc.setState(0x3944, 0xc0af, 0xa50, 0x209a, 0xe904, 0x613d, 0x1, 0x1);
        gbc.writeMem(0x3944, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc0af, gbc.sp());
        EXPECT(0x3946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02E2
        gbc.setState(0xd40, 0x2c08, 0x7070, 0x6570, 0xd1ee, 0x96bd, 0x0, 0x1);
        gbc.writeMem(0xd40, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2c08, gbc.sp());
        EXPECT(0xd42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02E3
        gbc.setState(0x8950, 0xf0a6, 0xe500, 0x9c38, 0x6abc, 0x388d, 0x0, 0x1);
        gbc.writeMem(0x8950, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf0a6, gbc.sp());
        EXPECT(0x8952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8950));
        EXPECT(0x1c, gbc.readMem(0x8951));
        // CB 1C 02E4
        gbc.setState(0x281, 0xc5f5, 0xd1d0, 0x432c, 0x7c84, 0x5135, 0x1, 0x1);
        gbc.writeMem(0x281, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc5f5, gbc.sp());
        EXPECT(0x283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02E5
        gbc.setState(0xe699, 0xb627, 0x5a30, 0x4b12, 0x94a8, 0x247c, 0x0, 0x1);
        gbc.writeMem(0xe699, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb627, gbc.sp());
        EXPECT(0xe69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe699));
        EXPECT(0x1c, gbc.readMem(0xe69a));
        // CB 1C 02E6
        gbc.setState(0x88fd, 0x83d, 0xf050, 0x5d9d, 0xe6e4, 0x5813, 0x1, 0x0);
        gbc.writeMem(0x88fd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x83d, gbc.sp());
        EXPECT(0x88ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fd));
        EXPECT(0x1c, gbc.readMem(0x88fe));
        // CB 1C 02E7
        gbc.setState(0x86ac, 0xf205, 0x64c0, 0x4f96, 0xa9f8, 0x1219, 0x0, 0x0);
        gbc.writeMem(0x86ac, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf205, gbc.sp());
        EXPECT(0x86ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ac));
        EXPECT(0x1c, gbc.readMem(0x86ad));
        // CB 1C 02E8
        gbc.setState(0x7938, 0x479b, 0x580, 0x8aae, 0x2257, 0xa15b, 0x1, 0x1);
        gbc.writeMem(0x7938, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x479b, gbc.sp());
        EXPECT(0x793a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02E9
        gbc.setState(0x8111, 0xca74, 0x9ef0, 0x8abc, 0x43d2, 0x9549, 0x0, 0x1);
        gbc.writeMem(0x8111, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xca74, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8111));
        EXPECT(0x1c, gbc.readMem(0x8112));
        // CB 1C 02EB
        gbc.setState(0x6a55, 0x3f4c, 0x7f30, 0xd27e, 0x88e3, 0xf0a5, 0x1, 0x0);
        gbc.writeMem(0x6a55, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3f4c, gbc.sp());
        EXPECT(0x6a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02EC
        gbc.setState(0x5466, 0xc2fa, 0x2710, 0xa6db, 0xe89b, 0x88f2, 0x1, 0x1);
        gbc.writeMem(0x5466, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc2fa, gbc.sp());
        EXPECT(0x5468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02ED
        gbc.setState(0xb55f, 0x423, 0x4e00, 0xac16, 0xde47, 0x7e94, 0x0, 0x0);
        gbc.writeMem(0xb55f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x423, gbc.sp());
        EXPECT(0xb561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55f));
        EXPECT(0x1c, gbc.readMem(0xb560));
        // CB 1C 02EE
        gbc.setState(0x9d6a, 0x5c9f, 0x7920, 0xf958, 0xf20e, 0x6dbf, 0x0, 0x0);
        gbc.writeMem(0x9d6a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5c9f, gbc.sp());
        EXPECT(0x9d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6a));
        EXPECT(0x1c, gbc.readMem(0x9d6b));
        // CB 1C 02EF
        gbc.setState(0xd954, 0x61fe, 0x4600, 0x4ba7, 0xb91e, 0x16db, 0x0, 0x1);
        gbc.writeMem(0xd954, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x61fe, gbc.sp());
        EXPECT(0xd956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd954));
        EXPECT(0x1c, gbc.readMem(0xd955));
        // CB 1C 02F0
        gbc.setState(0xa81b, 0x13b2, 0x5320, 0x3850, 0xb1fd, 0x5d4c, 0x0, 0x0);
        gbc.writeMem(0xa81b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x13b2, gbc.sp());
        EXPECT(0xa81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81b));
        EXPECT(0x1c, gbc.readMem(0xa81c));
        // CB 1C 02F1
        gbc.setState(0x6cc9, 0xd57f, 0x390, 0xc2c9, 0xc59e, 0x5d48, 0x0, 0x0);
        gbc.writeMem(0x6cc9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd57f, gbc.sp());
        EXPECT(0x6ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02F2
        gbc.setState(0x553, 0xb0a3, 0x3570, 0x701a, 0x4901, 0x867b, 0x0, 0x0);
        gbc.writeMem(0x553, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb0a3, gbc.sp());
        EXPECT(0x555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02F3
        gbc.setState(0xe0b4, 0xbec1, 0xee90, 0xc2c4, 0xa4f8, 0xa57c, 0x0, 0x0);
        gbc.writeMem(0xe0b4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbec1, gbc.sp());
        EXPECT(0xe0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b4));
        EXPECT(0x1c, gbc.readMem(0xe0b5));
        // CB 1C 02F6
        gbc.setState(0x6a77, 0x4092, 0x1920, 0x1e09, 0x938e, 0x4e49, 0x1, 0x0);
        gbc.writeMem(0x6a77, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4092, gbc.sp());
        EXPECT(0x6a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02F8
        gbc.setState(0x508d, 0x260c, 0xb60, 0x9c8e, 0x2f62, 0x286f, 0x0, 0x0);
        gbc.writeMem(0x508d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x260c, gbc.sp());
        EXPECT(0x508f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02F9
        gbc.setState(0xd299, 0xe6a9, 0x4e0, 0x16ca, 0xfda2, 0xf4de, 0x1, 0x0);
        gbc.writeMem(0xd299, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe6a9, gbc.sp());
        EXPECT(0xd29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd299));
        EXPECT(0x1c, gbc.readMem(0xd29a));
        // CB 1C 02FA
        gbc.setState(0x94a7, 0xaa96, 0x2250, 0x28d3, 0xaae1, 0xe37e, 0x1, 0x1);
        gbc.writeMem(0x94a7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaa96, gbc.sp());
        EXPECT(0x94a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a7));
        EXPECT(0x1c, gbc.readMem(0x94a8));
        // CB 1C 02FB
        gbc.setState(0x14b0, 0x91bc, 0xda50, 0x51b0, 0xdc1a, 0x31aa, 0x1, 0x1);
        gbc.writeMem(0x14b0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x91bc, gbc.sp());
        EXPECT(0x14b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02FC
        gbc.setState(0x420d, 0xe77e, 0xff80, 0x81c, 0x48d6, 0x801c, 0x0, 0x0);
        gbc.writeMem(0x420d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe77e, gbc.sp());
        EXPECT(0x420f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 02FD
        gbc.setState(0xc9c, 0xfaef, 0x11e0, 0x1d71, 0x5ac5, 0xd7de, 0x1, 0x0);
        gbc.writeMem(0xc9c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfaef, gbc.sp());
        EXPECT(0xc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 02FE
        gbc.setState(0x8199, 0xa252, 0xe8e0, 0x5c27, 0x892e, 0x1631, 0x1, 0x0);
        gbc.writeMem(0x8199, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa252, gbc.sp());
        EXPECT(0x819b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8199));
        EXPECT(0x1c, gbc.readMem(0x819a));
        // CB 1C 02FF
        gbc.setState(0xd89e, 0x742f, 0x3050, 0x864b, 0x7dd5, 0xf22a, 0x0, 0x0);
        gbc.writeMem(0xd89e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x742f, gbc.sp());
        EXPECT(0xd8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89e));
        EXPECT(0x1c, gbc.readMem(0xd89f));
        // CB 1C 0300
        gbc.setState(0x6cff, 0x37, 0xab70, 0x5e6f, 0x9bb3, 0x87d4, 0x1, 0x0);
        gbc.writeMem(0x6cff, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x37, gbc.sp());
        EXPECT(0x6d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0302
        gbc.setState(0x6f70, 0x9e16, 0x68e0, 0xee56, 0x4c49, 0xa036, 0x0, 0x0);
        gbc.writeMem(0x6f70, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9e16, gbc.sp());
        EXPECT(0x6f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0303
        gbc.setState(0xe2ef, 0x4891, 0xb870, 0x28c, 0xf263, 0x8099, 0x0, 0x1);
        gbc.writeMem(0xe2ef, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4891, gbc.sp());
        EXPECT(0xe2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ef));
        EXPECT(0x1c, gbc.readMem(0xe2f0));
        // CB 1C 0304
        gbc.setState(0x6644, 0xb587, 0x83b0, 0x71a1, 0x9941, 0x9949, 0x0, 0x0);
        gbc.writeMem(0x6644, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0x6646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0305
        gbc.setState(0x1074, 0xf386, 0xe9f0, 0xd01c, 0x39c4, 0xf395, 0x0, 0x1);
        gbc.writeMem(0x1074, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf386, gbc.sp());
        EXPECT(0x1076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0306
        gbc.setState(0x5a93, 0x36f, 0x9000, 0xcaaf, 0xd945, 0x5f13, 0x0, 0x1);
        gbc.writeMem(0x5a93, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x36f, gbc.sp());
        EXPECT(0x5a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0307
        gbc.setState(0x256a, 0xd5a2, 0x8910, 0x9dea, 0xa794, 0x2a48, 0x1, 0x1);
        gbc.writeMem(0x256a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd5a2, gbc.sp());
        EXPECT(0x256c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0308
        gbc.setState(0xa673, 0xeaf9, 0x4c50, 0xd1d6, 0x2bdb, 0x4d4d, 0x0, 0x1);
        gbc.writeMem(0xa673, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xeaf9, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa673));
        EXPECT(0x1c, gbc.readMem(0xa674));
        // CB 1C 0309
        gbc.setState(0xacf, 0xb4c8, 0x5730, 0x9542, 0x9dda, 0x7e5f, 0x1, 0x0);
        gbc.writeMem(0xacf, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb4c8, gbc.sp());
        EXPECT(0xad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 030A
        gbc.setState(0x3e01, 0x534, 0xa950, 0x9e72, 0x91cf, 0x5708, 0x0, 0x0);
        gbc.writeMem(0x3e01, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x534, gbc.sp());
        EXPECT(0x3e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 030B
        gbc.setState(0xa89f, 0xdc07, 0x7620, 0xbbd0, 0x4bbb, 0xc3dd, 0x0, 0x0);
        gbc.writeMem(0xa89f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdc07, gbc.sp());
        EXPECT(0xa8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89f));
        EXPECT(0x1c, gbc.readMem(0xa8a0));
        // CB 1C 030C
        gbc.setState(0x56f0, 0x9da4, 0xbab0, 0x4510, 0x149a, 0x3e94, 0x0, 0x1);
        gbc.writeMem(0x56f0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9da4, gbc.sp());
        EXPECT(0x56f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 030D
        gbc.setState(0xcd75, 0xf902, 0x41d0, 0x70fd, 0xfb2c, 0xaa7, 0x0, 0x0);
        gbc.writeMem(0xcd75, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf902, gbc.sp());
        EXPECT(0xcd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd75));
        EXPECT(0x1c, gbc.readMem(0xcd76));
        // CB 1C 030E
        gbc.setState(0xd0da, 0x7760, 0x60a0, 0x5cff, 0x375e, 0x25fe, 0x0, 0x1);
        gbc.writeMem(0xd0da, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7760, gbc.sp());
        EXPECT(0xd0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0da));
        EXPECT(0x1c, gbc.readMem(0xd0db));
        // CB 1C 030F
        gbc.setState(0xafb, 0x80d4, 0x630, 0x8e71, 0x78cb, 0x9642, 0x0, 0x0);
        gbc.writeMem(0xafb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x80d4, gbc.sp());
        EXPECT(0xafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0310
        gbc.setState(0x9fe1, 0x1316, 0x2a80, 0x991, 0x6371, 0xb1ed, 0x0, 0x1);
        gbc.writeMem(0x9fe1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1316, gbc.sp());
        EXPECT(0x9fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe1));
        EXPECT(0x1c, gbc.readMem(0x9fe2));
        // CB 1C 0311
        gbc.setState(0x51b7, 0xe2d9, 0xe010, 0xc35f, 0x814a, 0x5b38, 0x0, 0x0);
        gbc.writeMem(0x51b7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe2d9, gbc.sp());
        EXPECT(0x51b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0312
        gbc.setState(0x245c, 0xc5ed, 0x9330, 0xf352, 0x944a, 0xa279, 0x0, 0x0);
        gbc.writeMem(0x245c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc5ed, gbc.sp());
        EXPECT(0x245e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0313
        gbc.setState(0x3005, 0x9803, 0x62d0, 0xb9a6, 0x22da, 0x5625, 0x1, 0x1);
        gbc.writeMem(0x3005, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9803, gbc.sp());
        EXPECT(0x3007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0314
        gbc.setState(0x5285, 0x4c6a, 0x4370, 0xf260, 0x5312, 0x5a63, 0x0, 0x1);
        gbc.writeMem(0x5285, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4c6a, gbc.sp());
        EXPECT(0x5287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0315
        gbc.setState(0x7e1d, 0xff99, 0xcaf0, 0xa7d5, 0x1a88, 0x5653, 0x1, 0x1);
        gbc.writeMem(0x7e1d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xff99, gbc.sp());
        EXPECT(0x7e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0316
        gbc.setState(0x6459, 0x91ed, 0xc7a0, 0x750f, 0x8629, 0x86ab, 0x0, 0x0);
        gbc.writeMem(0x6459, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x91ed, gbc.sp());
        EXPECT(0x645b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0317
        gbc.setState(0x834c, 0x8a6b, 0x8690, 0xc309, 0x2e1, 0xd484, 0x0, 0x0);
        gbc.writeMem(0x834c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8a6b, gbc.sp());
        EXPECT(0x834e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834c));
        EXPECT(0x1c, gbc.readMem(0x834d));
        // CB 1C 0318
        gbc.setState(0x63a0, 0xd5c6, 0x7960, 0x6e2c, 0x5c21, 0x88f7, 0x0, 0x0);
        gbc.writeMem(0x63a0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd5c6, gbc.sp());
        EXPECT(0x63a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0319
        gbc.setState(0x136d, 0x1d05, 0x5320, 0x482d, 0xec82, 0xbb82, 0x0, 0x1);
        gbc.writeMem(0x136d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1d05, gbc.sp());
        EXPECT(0x136f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 031A
        gbc.setState(0x7c6e, 0xf79, 0x51c0, 0x81e3, 0x115a, 0xc805, 0x1, 0x0);
        gbc.writeMem(0x7c6e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf79, gbc.sp());
        EXPECT(0x7c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 031B
        gbc.setState(0x68cb, 0x5128, 0xca80, 0xec8e, 0xff50, 0x563e, 0x0, 0x1);
        gbc.writeMem(0x68cb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5128, gbc.sp());
        EXPECT(0x68cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 031C
        gbc.setState(0xefca, 0x571f, 0x16f0, 0x4b30, 0x2da1, 0x9e50, 0x0, 0x0);
        gbc.writeMem(0xefca, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x571f, gbc.sp());
        EXPECT(0xefcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefca));
        EXPECT(0x1c, gbc.readMem(0xefcb));
        // CB 1C 031D
        gbc.setState(0x5dbb, 0x8d3b, 0xd890, 0x77f9, 0xbabd, 0xb628, 0x1, 0x0);
        gbc.writeMem(0x5dbb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8d3b, gbc.sp());
        EXPECT(0x5dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 031E
        gbc.setState(0xeb3c, 0x180e, 0x3aa0, 0xf42b, 0xbbc6, 0x655b, 0x1, 0x1);
        gbc.writeMem(0xeb3c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x180e, gbc.sp());
        EXPECT(0xeb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3c));
        EXPECT(0x1c, gbc.readMem(0xeb3d));
        // CB 1C 031F
        gbc.setState(0x7ef7, 0xa183, 0xca60, 0xfd6d, 0xadbd, 0x3431, 0x0, 0x1);
        gbc.writeMem(0x7ef7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa183, gbc.sp());
        EXPECT(0x7ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0320
        gbc.setState(0xe1de, 0xb014, 0x41f0, 0x83f6, 0xee33, 0x653b, 0x1, 0x0);
        gbc.writeMem(0xe1de, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb014, gbc.sp());
        EXPECT(0xe1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1de));
        EXPECT(0x1c, gbc.readMem(0xe1df));
        // CB 1C 0321
        gbc.setState(0x8887, 0xa635, 0x900, 0x9ff0, 0x714a, 0xdca6, 0x1, 0x0);
        gbc.writeMem(0x8887, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa635, gbc.sp());
        EXPECT(0x8889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8887));
        EXPECT(0x1c, gbc.readMem(0x8888));
        // CB 1C 0322
        gbc.setState(0xddbf, 0xd84e, 0x1170, 0xb35c, 0x9bfe, 0xb1bb, 0x0, 0x1);
        gbc.writeMem(0xddbf, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd84e, gbc.sp());
        EXPECT(0xddc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbf));
        EXPECT(0x1c, gbc.readMem(0xddc0));
        // CB 1C 0323
        gbc.setState(0x2506, 0x9042, 0x8e0, 0x15f5, 0x8c6e, 0x1284, 0x0, 0x1);
        gbc.writeMem(0x2506, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9042, gbc.sp());
        EXPECT(0x2508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0325
        gbc.setState(0x59ea, 0x1487, 0x52d0, 0x79fd, 0xbf76, 0x4d41, 0x0, 0x0);
        gbc.writeMem(0x59ea, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1487, gbc.sp());
        EXPECT(0x59ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0326
        gbc.setState(0x63b4, 0x288b, 0x46f0, 0x2567, 0x5984, 0xc63b, 0x1, 0x0);
        gbc.writeMem(0x63b4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x288b, gbc.sp());
        EXPECT(0x63b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0327
        gbc.setState(0xb5ee, 0x4782, 0xbc0, 0x722b, 0xf5e8, 0x8431, 0x0, 0x0);
        gbc.writeMem(0xb5ee, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4782, gbc.sp());
        EXPECT(0xb5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ee));
        EXPECT(0x1c, gbc.readMem(0xb5ef));
        // CB 1C 0328
        gbc.setState(0x86a0, 0x779c, 0x24c0, 0x4043, 0x86be, 0x8d20, 0x1, 0x0);
        gbc.writeMem(0x86a0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x779c, gbc.sp());
        EXPECT(0x86a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a0));
        EXPECT(0x1c, gbc.readMem(0x86a1));
        // CB 1C 0329
        gbc.setState(0xd30f, 0xd919, 0x67d0, 0x7f6f, 0xeed2, 0xbb5, 0x0, 0x0);
        gbc.writeMem(0xd30f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd919, gbc.sp());
        EXPECT(0xd311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30f));
        EXPECT(0x1c, gbc.readMem(0xd310));
        // CB 1C 032B
        gbc.setState(0xbfb3, 0x3b7a, 0xb100, 0x627c, 0x5226, 0x1beb, 0x1, 0x1);
        gbc.writeMem(0xbfb3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3b7a, gbc.sp());
        EXPECT(0xbfb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb3));
        EXPECT(0x1c, gbc.readMem(0xbfb4));
        // CB 1C 032C
        gbc.setState(0xb24, 0xe10a, 0x3640, 0xb329, 0x81b7, 0xef86, 0x0, 0x0);
        gbc.writeMem(0xb24, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe10a, gbc.sp());
        EXPECT(0xb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 032E
        gbc.setState(0x408a, 0x1eb0, 0x2050, 0xb0e3, 0x5b3, 0xd628, 0x0, 0x1);
        gbc.writeMem(0x408a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1eb0, gbc.sp());
        EXPECT(0x408c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 032F
        gbc.setState(0xd8d8, 0x4b2b, 0x9c50, 0xafe3, 0xe532, 0x291e, 0x1, 0x1);
        gbc.writeMem(0xd8d8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4b2b, gbc.sp());
        EXPECT(0xd8da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d8));
        EXPECT(0x1c, gbc.readMem(0xd8d9));
        // CB 1C 0330
        gbc.setState(0xa172, 0x5c2a, 0xbad0, 0xccd3, 0x2ecb, 0xa7c3, 0x0, 0x1);
        gbc.writeMem(0xa172, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0xa174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa172));
        EXPECT(0x1c, gbc.readMem(0xa173));
        // CB 1C 0331
        gbc.setState(0xd246, 0xc98f, 0x6a40, 0x1dae, 0xd151, 0x6f6b, 0x1, 0x0);
        gbc.writeMem(0xd246, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc98f, gbc.sp());
        EXPECT(0xd248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd246));
        EXPECT(0x1c, gbc.readMem(0xd247));
        // CB 1C 0332
        gbc.setState(0x5f14, 0x6d88, 0xd840, 0x8a42, 0x82d7, 0xf89b, 0x1, 0x0);
        gbc.writeMem(0x5f14, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6d88, gbc.sp());
        EXPECT(0x5f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0333
        gbc.setState(0x5dd8, 0x7e9d, 0x7b0, 0xcb0d, 0x4ead, 0x559a, 0x0, 0x1);
        gbc.writeMem(0x5dd8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7e9d, gbc.sp());
        EXPECT(0x5dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0334
        gbc.setState(0xb4d4, 0x7ff, 0x41e0, 0x1f55, 0x28f8, 0x41d3, 0x1, 0x1);
        gbc.writeMem(0xb4d4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7ff, gbc.sp());
        EXPECT(0xb4d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d4));
        EXPECT(0x1c, gbc.readMem(0xb4d5));
        // CB 1C 0335
        gbc.setState(0x1d9b, 0xd789, 0xe8a0, 0xf162, 0x4d00, 0x3874, 0x1, 0x1);
        gbc.writeMem(0x1d9b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd789, gbc.sp());
        EXPECT(0x1d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0336
        gbc.setState(0x718b, 0x7e59, 0xffb0, 0x3976, 0x4e7d, 0x3d5f, 0x1, 0x1);
        gbc.writeMem(0x718b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7e59, gbc.sp());
        EXPECT(0x718d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0337
        gbc.setState(0x9d87, 0xfe54, 0xff70, 0x3077, 0x6b57, 0x5844, 0x0, 0x0);
        gbc.writeMem(0x9d87, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfe54, gbc.sp());
        EXPECT(0x9d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d87));
        EXPECT(0x1c, gbc.readMem(0x9d88));
        // CB 1C 0338
        gbc.setState(0xb4bd, 0xa942, 0xd400, 0xa0c9, 0xbb3b, 0x5237, 0x0, 0x1);
        gbc.writeMem(0xb4bd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa942, gbc.sp());
        EXPECT(0xb4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bd));
        EXPECT(0x1c, gbc.readMem(0xb4be));
        // CB 1C 0339
        gbc.setState(0xe8bd, 0x230e, 0x59b0, 0x61da, 0xc6c1, 0x4b77, 0x1, 0x1);
        gbc.writeMem(0xe8bd, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x230e, gbc.sp());
        EXPECT(0xe8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bd));
        EXPECT(0x1c, gbc.readMem(0xe8be));
        // CB 1C 033A
        gbc.setState(0x54ee, 0x336e, 0x8b10, 0x3aeb, 0xe092, 0x1d3, 0x0, 0x0);
        gbc.writeMem(0x54ee, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x336e, gbc.sp());
        EXPECT(0x54f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 033B
        gbc.setState(0xb1b6, 0x4017, 0xa300, 0xe085, 0xccdb, 0x5d8c, 0x1, 0x1);
        gbc.writeMem(0xb1b6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4017, gbc.sp());
        EXPECT(0xb1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b6));
        EXPECT(0x1c, gbc.readMem(0xb1b7));
        // CB 1C 033C
        gbc.setState(0x6257, 0xd113, 0x4450, 0x578e, 0xb343, 0x7461, 0x1, 0x1);
        gbc.writeMem(0x6257, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd113, gbc.sp());
        EXPECT(0x6259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 033D
        gbc.setState(0xedb7, 0xa01f, 0x2aa0, 0x1b95, 0xd117, 0xf58d, 0x1, 0x0);
        gbc.writeMem(0xedb7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa01f, gbc.sp());
        EXPECT(0xedb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb7));
        EXPECT(0x1c, gbc.readMem(0xedb8));
        // CB 1C 033E
        gbc.setState(0x78a4, 0xb7ac, 0xdcf0, 0xf3b0, 0xc65f, 0x9419, 0x0, 0x0);
        gbc.writeMem(0x78a4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb7ac, gbc.sp());
        EXPECT(0x78a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 033F
        gbc.setState(0xe5ed, 0x6ad3, 0x72c0, 0x7ca2, 0x4162, 0x6f23, 0x0, 0x0);
        gbc.writeMem(0xe5ed, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6ad3, gbc.sp());
        EXPECT(0xe5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ed));
        EXPECT(0x1c, gbc.readMem(0xe5ee));
        // CB 1C 0340
        gbc.setState(0xa6f0, 0x4d38, 0x52d0, 0x2e5b, 0x56de, 0x4d45, 0x0, 0x0);
        gbc.writeMem(0xa6f0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4d38, gbc.sp());
        EXPECT(0xa6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f0));
        EXPECT(0x1c, gbc.readMem(0xa6f1));
        // CB 1C 0341
        gbc.setState(0xafe8, 0x446a, 0xafd0, 0xc538, 0xf52a, 0x9aca, 0x0, 0x1);
        gbc.writeMem(0xafe8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x446a, gbc.sp());
        EXPECT(0xafea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe8));
        EXPECT(0x1c, gbc.readMem(0xafe9));
        // CB 1C 0342
        gbc.setState(0x9617, 0x3bef, 0x3a90, 0xe0fa, 0x8cf2, 0xe097, 0x1, 0x1);
        gbc.writeMem(0x9617, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3bef, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9617));
        EXPECT(0x1c, gbc.readMem(0x9618));
        // CB 1C 0343
        gbc.setState(0x12c9, 0xcca0, 0x7180, 0x5db1, 0xcdc7, 0xe67b, 0x0, 0x0);
        gbc.writeMem(0x12c9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcca0, gbc.sp());
        EXPECT(0x12cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0344
        gbc.setState(0x52a9, 0x691b, 0xb50, 0xbe4f, 0xaf02, 0xc1ac, 0x0, 0x0);
        gbc.writeMem(0x52a9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x691b, gbc.sp());
        EXPECT(0x52ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0345
        gbc.setState(0x9787, 0xf5c6, 0x5ba0, 0x32ba, 0xe7e3, 0x7402, 0x1, 0x1);
        gbc.writeMem(0x9787, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf5c6, gbc.sp());
        EXPECT(0x9789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9787));
        EXPECT(0x1c, gbc.readMem(0x9788));
        // CB 1C 0346
        gbc.setState(0x6c61, 0xdb0a, 0x2c90, 0xbac0, 0x60bf, 0x9b2a, 0x0, 0x0);
        gbc.writeMem(0x6c61, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdb0a, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0347
        gbc.setState(0x89a1, 0x3b5a, 0x9ea0, 0xb50b, 0xca27, 0x2c1e, 0x0, 0x0);
        gbc.writeMem(0x89a1, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3b5a, gbc.sp());
        EXPECT(0x89a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a1));
        EXPECT(0x1c, gbc.readMem(0x89a2));
        // CB 1C 0348
        gbc.setState(0x1e4b, 0x494f, 0x8630, 0x3d3b, 0xd95e, 0x3306, 0x1, 0x0);
        gbc.writeMem(0x1e4b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x494f, gbc.sp());
        EXPECT(0x1e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0349
        gbc.setState(0x4fdf, 0xc524, 0xbe70, 0xd3a9, 0x345d, 0x1ef0, 0x1, 0x0);
        gbc.writeMem(0x4fdf, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc524, gbc.sp());
        EXPECT(0x4fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 034A
        gbc.setState(0xc92, 0xd1f3, 0xe1b0, 0xfb02, 0x2914, 0x7f4f, 0x1, 0x0);
        gbc.writeMem(0xc92, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd1f3, gbc.sp());
        EXPECT(0xc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 034B
        gbc.setState(0xe3fe, 0xeacf, 0x22a0, 0xc71d, 0x9ffe, 0x65f6, 0x0, 0x0);
        gbc.writeMem(0xe3fe, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xeacf, gbc.sp());
        EXPECT(0xe400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fe));
        EXPECT(0x1c, gbc.readMem(0xe3ff));
        // CB 1C 034C
        gbc.setState(0xdfb5, 0x1b66, 0x1880, 0x9a6e, 0x553d, 0x32d6, 0x0, 0x1);
        gbc.writeMem(0xdfb5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1b66, gbc.sp());
        EXPECT(0xdfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb5));
        EXPECT(0x1c, gbc.readMem(0xdfb6));
        // CB 1C 034D
        gbc.setState(0xa402, 0x6100, 0xd5f0, 0x312b, 0xc90d, 0xfcf0, 0x1, 0x0);
        gbc.writeMem(0xa402, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6100, gbc.sp());
        EXPECT(0xa404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa402));
        EXPECT(0x1c, gbc.readMem(0xa403));
        // CB 1C 034E
        gbc.setState(0x5027, 0x8e11, 0xaf30, 0x9367, 0xd84, 0xb613, 0x1, 0x1);
        gbc.writeMem(0x5027, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8e11, gbc.sp());
        EXPECT(0x5029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 034F
        gbc.setState(0x6ac6, 0xd3fd, 0x6aa0, 0x7a24, 0x5306, 0xc16e, 0x1, 0x1);
        gbc.writeMem(0x6ac6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd3fd, gbc.sp());
        EXPECT(0x6ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0350
        gbc.setState(0x6f02, 0x839f, 0xb350, 0xf8a1, 0xcfc3, 0xeb99, 0x0, 0x0);
        gbc.writeMem(0x6f02, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x839f, gbc.sp());
        EXPECT(0x6f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0351
        gbc.setState(0xb27d, 0xbcc6, 0x16b0, 0xf01f, 0xa3a6, 0x3359, 0x1, 0x0);
        gbc.writeMem(0xb27d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbcc6, gbc.sp());
        EXPECT(0xb27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27d));
        EXPECT(0x1c, gbc.readMem(0xb27e));
        // CB 1C 0352
        gbc.setState(0x3177, 0x18e1, 0x2310, 0x6dc3, 0x93ae, 0x4ece, 0x1, 0x0);
        gbc.writeMem(0x3177, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x18e1, gbc.sp());
        EXPECT(0x3179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0353
        gbc.setState(0x80, 0xc6c, 0xb900, 0xe6a, 0xbf8a, 0x82a0, 0x1, 0x1);
        gbc.writeMem(0x80, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc6c, gbc.sp());
        EXPECT(0x82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0354
        gbc.setState(0x3c18, 0xeca8, 0x2af0, 0x8c30, 0x1799, 0x5911, 0x0, 0x1);
        gbc.writeMem(0x3c18, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xeca8, gbc.sp());
        EXPECT(0x3c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0355
        gbc.setState(0x90da, 0x648a, 0xca20, 0x5fa, 0x4495, 0xd6d7, 0x0, 0x0);
        gbc.writeMem(0x90da, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x648a, gbc.sp());
        EXPECT(0x90dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90da));
        EXPECT(0x1c, gbc.readMem(0x90db));
        // CB 1C 0356
        gbc.setState(0xc04e, 0x6366, 0xa0, 0x5159, 0xbd8c, 0x6b30, 0x0, 0x1);
        gbc.writeMem(0xc04e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6366, gbc.sp());
        EXPECT(0xc050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04e));
        EXPECT(0x1c, gbc.readMem(0xc04f));
        // CB 1C 0357
        gbc.setState(0xcb1a, 0xd0c6, 0x4cf0, 0xd453, 0x91cb, 0xc076, 0x0, 0x0);
        gbc.writeMem(0xcb1a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd0c6, gbc.sp());
        EXPECT(0xcb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1a));
        EXPECT(0x1c, gbc.readMem(0xcb1b));
        // CB 1C 0358
        gbc.setState(0x1306, 0xe303, 0x6d70, 0x919b, 0x5618, 0x1612, 0x0, 0x0);
        gbc.writeMem(0x1306, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe303, gbc.sp());
        EXPECT(0x1308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0359
        gbc.setState(0xc1d6, 0xb202, 0xf440, 0x392a, 0xbaf7, 0xcde9, 0x0, 0x1);
        gbc.writeMem(0xc1d6, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb202, gbc.sp());
        EXPECT(0xc1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d6));
        EXPECT(0x1c, gbc.readMem(0xc1d7));
        // CB 1C 035B
        gbc.setState(0x6633, 0x9bf7, 0xfb60, 0xec3f, 0xffd1, 0x1e24, 0x1, 0x0);
        gbc.writeMem(0x6633, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9bf7, gbc.sp());
        EXPECT(0x6635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 035C
        gbc.setState(0xba0a, 0xf52f, 0x8400, 0x9eb5, 0x73bc, 0xb235, 0x1, 0x1);
        gbc.writeMem(0xba0a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf52f, gbc.sp());
        EXPECT(0xba0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0a));
        EXPECT(0x1c, gbc.readMem(0xba0b));
        // CB 1C 035D
        gbc.setState(0x6644, 0x8f9b, 0xb790, 0xf7c3, 0xc237, 0x93e4, 0x1, 0x0);
        gbc.writeMem(0x6644, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0x6646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 035E
        gbc.setState(0x3e9e, 0x8fbf, 0xc40, 0x1d93, 0xf8b6, 0x91ce, 0x1, 0x1);
        gbc.writeMem(0x3e9e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8fbf, gbc.sp());
        EXPECT(0x3ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 035F
        gbc.setState(0x2b3e, 0xa1ce, 0x73c0, 0x551, 0xf3ff, 0xebb8, 0x1, 0x1);
        gbc.writeMem(0x2b3e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa1ce, gbc.sp());
        EXPECT(0x2b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0360
        gbc.setState(0x1aa7, 0x6f3f, 0xd630, 0x1486, 0x9b1a, 0x615b, 0x0, 0x0);
        gbc.writeMem(0x1aa7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6f3f, gbc.sp());
        EXPECT(0x1aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0361
        gbc.setState(0x3ce9, 0x4b0d, 0x7d0, 0xe2fb, 0x3edb, 0xd47b, 0x1, 0x1);
        gbc.writeMem(0x3ce9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4b0d, gbc.sp());
        EXPECT(0x3ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0362
        gbc.setState(0xc0a5, 0x1155, 0x3830, 0xa6d8, 0x9e39, 0xdc6, 0x0, 0x1);
        gbc.writeMem(0xc0a5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1155, gbc.sp());
        EXPECT(0xc0a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a5));
        EXPECT(0x1c, gbc.readMem(0xc0a6));
        // CB 1C 0363
        gbc.setState(0x888, 0x3fce, 0x8d80, 0x40c7, 0x307b, 0xac24, 0x1, 0x0);
        gbc.writeMem(0x888, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3fce, gbc.sp());
        EXPECT(0x88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0364
        gbc.setState(0xaa55, 0x5100, 0x68c0, 0x89ff, 0xa827, 0xa40a, 0x0, 0x1);
        gbc.writeMem(0xaa55, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5100, gbc.sp());
        EXPECT(0xaa57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa55));
        EXPECT(0x1c, gbc.readMem(0xaa56));
        // CB 1C 0365
        gbc.setState(0xc702, 0x88b4, 0x3c90, 0xc4dc, 0x48e6, 0xf4e2, 0x0, 0x1);
        gbc.writeMem(0xc702, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x88b4, gbc.sp());
        EXPECT(0xc704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc702));
        EXPECT(0x1c, gbc.readMem(0xc703));
        // CB 1C 0366
        gbc.setState(0xb6d7, 0x1342, 0x9b50, 0x17d1, 0xae81, 0xf2f5, 0x0, 0x1);
        gbc.writeMem(0xb6d7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1342, gbc.sp());
        EXPECT(0xb6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d7));
        EXPECT(0x1c, gbc.readMem(0xb6d8));
        // CB 1C 0367
        gbc.setState(0xaca, 0x600a, 0x7790, 0xa893, 0x5400, 0xc103, 0x1, 0x0);
        gbc.writeMem(0xaca, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x600a, gbc.sp());
        EXPECT(0xacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0368
        gbc.setState(0xd9fc, 0x319b, 0x2830, 0xc3c5, 0x8a25, 0x24de, 0x1, 0x1);
        gbc.writeMem(0xd9fc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x319b, gbc.sp());
        EXPECT(0xd9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fc));
        EXPECT(0x1c, gbc.readMem(0xd9fd));
        // CB 1C 0369
        gbc.setState(0x8a0a, 0x540b, 0x7cf0, 0x1107, 0x176c, 0xe196, 0x1, 0x1);
        gbc.writeMem(0x8a0a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x540b, gbc.sp());
        EXPECT(0x8a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0a));
        EXPECT(0x1c, gbc.readMem(0x8a0b));
        // CB 1C 036A
        gbc.setState(0x5dcf, 0xd454, 0x4690, 0x3271, 0xafc6, 0xcc92, 0x0, 0x0);
        gbc.writeMem(0x5dcf, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0x5dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 036B
        gbc.setState(0xdc5d, 0xb4a7, 0xef20, 0x60f0, 0xb80f, 0x688f, 0x0, 0x0);
        gbc.writeMem(0xdc5d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb4a7, gbc.sp());
        EXPECT(0xdc5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5d));
        EXPECT(0x1c, gbc.readMem(0xdc5e));
        // CB 1C 036C
        gbc.setState(0x55d, 0x565b, 0xba10, 0x340e, 0x2b69, 0xad34, 0x0, 0x1);
        gbc.writeMem(0x55d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x565b, gbc.sp());
        EXPECT(0x55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 036D
        gbc.setState(0x1b28, 0x9b46, 0x38e0, 0xa8c9, 0x960c, 0x9763, 0x1, 0x1);
        gbc.writeMem(0x1b28, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9b46, gbc.sp());
        EXPECT(0x1b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 036E
        gbc.setState(0x9ab3, 0x280f, 0xd4e0, 0xcc26, 0xeb4e, 0x49d4, 0x1, 0x0);
        gbc.writeMem(0x9ab3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x280f, gbc.sp());
        EXPECT(0x9ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab3));
        EXPECT(0x1c, gbc.readMem(0x9ab4));
        // CB 1C 036F
        gbc.setState(0x353f, 0x9dcd, 0x5b80, 0xc5c2, 0xecbd, 0x55be, 0x0, 0x1);
        gbc.writeMem(0x353f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9dcd, gbc.sp());
        EXPECT(0x3541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0370
        gbc.setState(0x5140, 0x1331, 0x2170, 0x842e, 0x116e, 0x9c05, 0x0, 0x0);
        gbc.writeMem(0x5140, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1331, gbc.sp());
        EXPECT(0x5142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0371
        gbc.setState(0x7904, 0x6c2e, 0xa490, 0xc0e2, 0x3d62, 0x3f41, 0x0, 0x1);
        gbc.writeMem(0x7904, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6c2e, gbc.sp());
        EXPECT(0x7906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0372
        gbc.setState(0x63df, 0x714c, 0x62e0, 0xe97d, 0xbdad, 0x5f0d, 0x1, 0x1);
        gbc.writeMem(0x63df, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x714c, gbc.sp());
        EXPECT(0x63e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0373
        gbc.setState(0xbae7, 0x743d, 0x2510, 0x20a1, 0x4c49, 0xbfbd, 0x1, 0x1);
        gbc.writeMem(0xbae7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x743d, gbc.sp());
        EXPECT(0xbae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae7));
        EXPECT(0x1c, gbc.readMem(0xbae8));
        // CB 1C 0374
        gbc.setState(0x32b5, 0x2776, 0xf040, 0x5627, 0xfd8, 0x97fd, 0x1, 0x0);
        gbc.writeMem(0x32b5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2776, gbc.sp());
        EXPECT(0x32b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0375
        gbc.setState(0xddb5, 0x7617, 0x9af0, 0x42d8, 0xf539, 0x216e, 0x0, 0x1);
        gbc.writeMem(0xddb5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7617, gbc.sp());
        EXPECT(0xddb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb5));
        EXPECT(0x1c, gbc.readMem(0xddb6));
        // CB 1C 0376
        gbc.setState(0x37a5, 0xa44f, 0xbb0, 0x9990, 0xccf7, 0xe27e, 0x0, 0x1);
        gbc.writeMem(0x37a5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa44f, gbc.sp());
        EXPECT(0x37a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0377
        gbc.setState(0xe9, 0x5ed9, 0xb8b0, 0xc82a, 0xd15d, 0xf02c, 0x0, 0x1);
        gbc.writeMem(0xe9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5ed9, gbc.sp());
        EXPECT(0xeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0378
        gbc.setState(0x8eb, 0x5d8e, 0x4ec0, 0x4650, 0x4083, 0xe623, 0x0, 0x0);
        gbc.writeMem(0x8eb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5d8e, gbc.sp());
        EXPECT(0x8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0379
        gbc.setState(0x48f7, 0x52b0, 0xacf0, 0x70d8, 0x8e21, 0x726a, 0x1, 0x0);
        gbc.writeMem(0x48f7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x52b0, gbc.sp());
        EXPECT(0x48f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 037A
        gbc.setState(0x77a8, 0xe3d9, 0x1750, 0xb909, 0xf4d7, 0x1cf6, 0x0, 0x0);
        gbc.writeMem(0x77a8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe3d9, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 037B
        gbc.setState(0xd154, 0xa4cd, 0xe8a0, 0x5ffb, 0x347f, 0x8c84, 0x1, 0x1);
        gbc.writeMem(0xd154, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa4cd, gbc.sp());
        EXPECT(0xd156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd154));
        EXPECT(0x1c, gbc.readMem(0xd155));
        // CB 1C 037C
        gbc.setState(0x367, 0xb8e8, 0xa640, 0xfe4c, 0x967a, 0xa747, 0x0, 0x1);
        gbc.writeMem(0x367, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb8e8, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 037D
        gbc.setState(0x108f, 0x9692, 0x6ec0, 0x4d2f, 0x7574, 0x2516, 0x0, 0x0);
        gbc.writeMem(0x108f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9692, gbc.sp());
        EXPECT(0x1091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 037E
        gbc.setState(0x6e73, 0xddb0, 0x26a0, 0x4f09, 0xcf15, 0xbafd, 0x0, 0x0);
        gbc.writeMem(0x6e73, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xddb0, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 037F
        gbc.setState(0x6829, 0x67e5, 0xef80, 0xf381, 0xa190, 0x549e, 0x0, 0x0);
        gbc.writeMem(0x6829, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x67e5, gbc.sp());
        EXPECT(0x682b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0380
        gbc.setState(0x595d, 0x97d1, 0xe180, 0xc748, 0xa59e, 0xcfb2, 0x1, 0x0);
        gbc.writeMem(0x595d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x97d1, gbc.sp());
        EXPECT(0x595f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0382
        gbc.setState(0xab47, 0x95eb, 0xe430, 0xd991, 0x9f0c, 0x919b, 0x0, 0x1);
        gbc.writeMem(0xab47, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x95eb, gbc.sp());
        EXPECT(0xab49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab47));
        EXPECT(0x1c, gbc.readMem(0xab48));
        // CB 1C 0383
        gbc.setState(0x7f28, 0x2a71, 0x7540, 0x2ece, 0x9f26, 0xf0a1, 0x0, 0x0);
        gbc.writeMem(0x7f28, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2a71, gbc.sp());
        EXPECT(0x7f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0384
        gbc.setState(0xc8b5, 0x80cc, 0x8b0, 0x52cc, 0xe687, 0x1fe1, 0x0, 0x1);
        gbc.writeMem(0xc8b5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x80cc, gbc.sp());
        EXPECT(0xc8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b5));
        EXPECT(0x1c, gbc.readMem(0xc8b6));
        // CB 1C 0385
        gbc.setState(0xeb1d, 0x4d2d, 0x7df0, 0x40ca, 0x7652, 0x32bf, 0x0, 0x0);
        gbc.writeMem(0xeb1d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4d2d, gbc.sp());
        EXPECT(0xeb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1d));
        EXPECT(0x1c, gbc.readMem(0xeb1e));
        // CB 1C 0386
        gbc.setState(0xcf87, 0x4840, 0xd2b0, 0x9db4, 0xb9d6, 0xb5ef, 0x0, 0x0);
        gbc.writeMem(0xcf87, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4840, gbc.sp());
        EXPECT(0xcf89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf87));
        EXPECT(0x1c, gbc.readMem(0xcf88));
        // CB 1C 0387
        gbc.setState(0xddb4, 0x2af8, 0x2e70, 0xbc26, 0xf454, 0x18ca, 0x1, 0x1);
        gbc.writeMem(0xddb4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2af8, gbc.sp());
        EXPECT(0xddb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb4));
        EXPECT(0x1c, gbc.readMem(0xddb5));
        // CB 1C 0388
        gbc.setState(0xe5a4, 0x5508, 0x1720, 0xf16d, 0xf57f, 0x7a49, 0x0, 0x1);
        gbc.writeMem(0xe5a4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5508, gbc.sp());
        EXPECT(0xe5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a4));
        EXPECT(0x1c, gbc.readMem(0xe5a5));
        // CB 1C 0389
        gbc.setState(0xcd0, 0x45a, 0x5410, 0x3634, 0x2f68, 0x69a0, 0x1, 0x0);
        gbc.writeMem(0xcd0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x45a, gbc.sp());
        EXPECT(0xcd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 038A
        gbc.setState(0x88f9, 0x46f0, 0xe1c0, 0xbd60, 0xe885, 0x5387, 0x1, 0x1);
        gbc.writeMem(0x88f9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x46f0, gbc.sp());
        EXPECT(0x88fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f9));
        EXPECT(0x1c, gbc.readMem(0x88fa));
        // CB 1C 038B
        gbc.setState(0xc80b, 0x276b, 0x2a90, 0x8756, 0x6bb6, 0x6ab7, 0x1, 0x1);
        gbc.writeMem(0xc80b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x276b, gbc.sp());
        EXPECT(0xc80d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80b));
        EXPECT(0x1c, gbc.readMem(0xc80c));
        // CB 1C 038C
        gbc.setState(0x9431, 0x9271, 0x2c00, 0x3980, 0x4dd0, 0xb308, 0x1, 0x0);
        gbc.writeMem(0x9431, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9271, gbc.sp());
        EXPECT(0x9433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9431));
        EXPECT(0x1c, gbc.readMem(0x9432));
        // CB 1C 038D
        gbc.setState(0xd578, 0xb990, 0x65a0, 0x52bf, 0xbc7d, 0x17f, 0x0, 0x1);
        gbc.writeMem(0xd578, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0xd57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd578));
        EXPECT(0x1c, gbc.readMem(0xd579));
        // CB 1C 038E
        gbc.setState(0xeeae, 0xda51, 0x98b0, 0x432, 0x5b02, 0x916a, 0x0, 0x1);
        gbc.writeMem(0xeeae, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xda51, gbc.sp());
        EXPECT(0xeeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeae));
        EXPECT(0x1c, gbc.readMem(0xeeaf));
        // CB 1C 038F
        gbc.setState(0x2329, 0x4c9, 0xe260, 0xb84d, 0x680b, 0x2713, 0x1, 0x1);
        gbc.writeMem(0x2329, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4c9, gbc.sp());
        EXPECT(0x232b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0390
        gbc.setState(0xe84d, 0x8181, 0x80b0, 0x40ca, 0xca8b, 0xaf4c, 0x0, 0x1);
        gbc.writeMem(0xe84d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8181, gbc.sp());
        EXPECT(0xe84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe84d));
        EXPECT(0x1c, gbc.readMem(0xe84e));
        // CB 1C 0391
        gbc.setState(0xb339, 0xe76e, 0x43b0, 0x2c34, 0xc33c, 0x1773, 0x1, 0x1);
        gbc.writeMem(0xb339, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe76e, gbc.sp());
        EXPECT(0xb33b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb339));
        EXPECT(0x1c, gbc.readMem(0xb33a));
        // CB 1C 0392
        gbc.setState(0x719b, 0xf943, 0x5c50, 0x54a9, 0xeb43, 0x5f17, 0x1, 0x1);
        gbc.writeMem(0x719b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf943, gbc.sp());
        EXPECT(0x719d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0393
        gbc.setState(0xe0a2, 0xd1d2, 0xd8b0, 0xd2f9, 0xf01e, 0x16c9, 0x0, 0x0);
        gbc.writeMem(0xe0a2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd1d2, gbc.sp());
        EXPECT(0xe0a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a2));
        EXPECT(0x1c, gbc.readMem(0xe0a3));
        // CB 1C 0394
        gbc.setState(0x1b79, 0x7696, 0x1490, 0xf54c, 0x8bbe, 0xb2e6, 0x0, 0x0);
        gbc.writeMem(0x1b79, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7696, gbc.sp());
        EXPECT(0x1b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0395
        gbc.setState(0x6b2f, 0x248b, 0x9c20, 0x5e82, 0xca49, 0xffa5, 0x1, 0x0);
        gbc.writeMem(0x6b2f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0x6b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 0396
        gbc.setState(0xb846, 0xe068, 0x5f80, 0x5cae, 0xcc35, 0xa452, 0x0, 0x0);
        gbc.writeMem(0xb846, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe068, gbc.sp());
        EXPECT(0xb848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb846));
        EXPECT(0x1c, gbc.readMem(0xb847));
        // CB 1C 0397
        gbc.setState(0x77d0, 0x49d2, 0x4470, 0xcde7, 0xdc71, 0xeae7, 0x0, 0x1);
        gbc.writeMem(0x77d0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x49d2, gbc.sp());
        EXPECT(0x77d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0398
        gbc.setState(0x5035, 0xaa37, 0x86c0, 0x1bff, 0x5766, 0x3ca3, 0x1, 0x0);
        gbc.writeMem(0x5035, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaa37, gbc.sp());
        EXPECT(0x5037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 0399
        gbc.setState(0x396b, 0x847f, 0x8890, 0x1b08, 0x4b66, 0xc98c, 0x0, 0x0);
        gbc.writeMem(0x396b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x847f, gbc.sp());
        EXPECT(0x396d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 039A
        gbc.setState(0x6ec4, 0x3374, 0xab70, 0x7539, 0x4675, 0xa0ad, 0x0, 0x0);
        gbc.writeMem(0x6ec4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3374, gbc.sp());
        EXPECT(0x6ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 039B
        gbc.setState(0xaad7, 0x960a, 0xe560, 0xf7e2, 0xe68b, 0xf3ef, 0x1, 0x0);
        gbc.writeMem(0xaad7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x960a, gbc.sp());
        EXPECT(0xaad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad7));
        EXPECT(0x1c, gbc.readMem(0xaad8));
        // CB 1C 039C
        gbc.setState(0x5d04, 0xce83, 0x4150, 0x587d, 0x1bf7, 0x14ed, 0x1, 0x1);
        gbc.writeMem(0x5d04, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xce83, gbc.sp());
        EXPECT(0x5d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 039D
        gbc.setState(0xc553, 0x9835, 0xa790, 0x463, 0xb081, 0xf272, 0x1, 0x0);
        gbc.writeMem(0xc553, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9835, gbc.sp());
        EXPECT(0xc555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc553));
        EXPECT(0x1c, gbc.readMem(0xc554));
        // CB 1C 039E
        gbc.setState(0x3ec4, 0x4e9c, 0xc2f0, 0xc9bb, 0x5b01, 0x2cad, 0x0, 0x0);
        gbc.writeMem(0x3ec4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4e9c, gbc.sp());
        EXPECT(0x3ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 039F
        gbc.setState(0x7ad2, 0x2380, 0x3620, 0xb3b3, 0x1f9f, 0x17e2, 0x1, 0x1);
        gbc.writeMem(0x7ad2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2380, gbc.sp());
        EXPECT(0x7ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03A0
        gbc.setState(0x1325, 0xf19b, 0x9360, 0xa07b, 0x3d54, 0xce2, 0x0, 0x0);
        gbc.writeMem(0x1325, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf19b, gbc.sp());
        EXPECT(0x1327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03A2
        gbc.setState(0x9322, 0x3707, 0xc250, 0xb863, 0x6cba, 0x3a33, 0x0, 0x0);
        gbc.writeMem(0x9322, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3707, gbc.sp());
        EXPECT(0x9324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9322));
        EXPECT(0x1c, gbc.readMem(0x9323));
        // CB 1C 03A3
        gbc.setState(0x4a2b, 0x48bb, 0x7a50, 0x7405, 0xeee2, 0x967b, 0x0, 0x0);
        gbc.writeMem(0x4a2b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x48bb, gbc.sp());
        EXPECT(0x4a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03A4
        gbc.setState(0xdd03, 0x4e7b, 0x4530, 0x4729, 0x53bb, 0x3692, 0x0, 0x1);
        gbc.writeMem(0xdd03, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4e7b, gbc.sp());
        EXPECT(0xdd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd03));
        EXPECT(0x1c, gbc.readMem(0xdd04));
        // CB 1C 03A5
        gbc.setState(0x5259, 0x1bfb, 0x2f00, 0xb89b, 0x230b, 0xbca6, 0x0, 0x0);
        gbc.writeMem(0x5259, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1bfb, gbc.sp());
        EXPECT(0x525b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03A6
        gbc.setState(0x97f2, 0x2d29, 0xeba0, 0xcea, 0x68b6, 0xed04, 0x0, 0x1);
        gbc.writeMem(0x97f2, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2d29, gbc.sp());
        EXPECT(0x97f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f2));
        EXPECT(0x1c, gbc.readMem(0x97f3));
        // CB 1C 03A7
        gbc.setState(0x788c, 0x9f8, 0xe60, 0x3302, 0x8587, 0xa17, 0x0, 0x1);
        gbc.writeMem(0x788c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9f8, gbc.sp());
        EXPECT(0x788e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03A8
        gbc.setState(0x4b0b, 0x4c67, 0x8890, 0xa69e, 0xfeea, 0xba9b, 0x0, 0x1);
        gbc.writeMem(0x4b0b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4c67, gbc.sp());
        EXPECT(0x4b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03AA
        gbc.setState(0xb050, 0x3e36, 0x6aa0, 0x432a, 0x984f, 0x3cc2, 0x0, 0x1);
        gbc.writeMem(0xb050, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3e36, gbc.sp());
        EXPECT(0xb052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb050));
        EXPECT(0x1c, gbc.readMem(0xb051));
        // CB 1C 03AB
        gbc.setState(0xbb95, 0x59bd, 0xb6a0, 0x4f8f, 0x699a, 0x6701, 0x1, 0x0);
        gbc.writeMem(0xbb95, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x59bd, gbc.sp());
        EXPECT(0xbb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb95));
        EXPECT(0x1c, gbc.readMem(0xbb96));
        // CB 1C 03AC
        gbc.setState(0x2842, 0x1019, 0x69d0, 0x4cf0, 0x8484, 0x44f5, 0x0, 0x0);
        gbc.writeMem(0x2842, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1019, gbc.sp());
        EXPECT(0x2844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03AD
        gbc.setState(0x5f47, 0xc8e3, 0x8d50, 0x363f, 0x67c0, 0x437d, 0x1, 0x1);
        gbc.writeMem(0x5f47, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc8e3, gbc.sp());
        EXPECT(0x5f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03AE
        gbc.setState(0x1bae, 0x8b1c, 0x3cb0, 0xaea6, 0xb887, 0xb8ae, 0x1, 0x1);
        gbc.writeMem(0x1bae, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8b1c, gbc.sp());
        EXPECT(0x1bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03AF
        gbc.setState(0x99c, 0x51ca, 0xdc20, 0x471c, 0x6d54, 0x3d0f, 0x1, 0x0);
        gbc.writeMem(0x99c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x51ca, gbc.sp());
        EXPECT(0x99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03B0
        gbc.setState(0x8b60, 0x454e, 0xa5a0, 0x38ed, 0x7a2e, 0xbee5, 0x1, 0x1);
        gbc.writeMem(0x8b60, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x454e, gbc.sp());
        EXPECT(0x8b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b60));
        EXPECT(0x1c, gbc.readMem(0x8b61));
        // CB 1C 03B1
        gbc.setState(0x1ab0, 0xb22a, 0x6370, 0x8abf, 0xaf0, 0x8106, 0x1, 0x0);
        gbc.writeMem(0x1ab0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb22a, gbc.sp());
        EXPECT(0x1ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03B2
        gbc.setState(0xc93, 0xf39f, 0xff30, 0x7f5a, 0xa9af, 0x8afe, 0x0, 0x1);
        gbc.writeMem(0xc93, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf39f, gbc.sp());
        EXPECT(0xc95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03B3
        gbc.setState(0x586b, 0xc46d, 0x6410, 0xa4b9, 0xe046, 0x4d31, 0x0, 0x0);
        gbc.writeMem(0x586b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc46d, gbc.sp());
        EXPECT(0x586d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03B4
        gbc.setState(0x8bc0, 0x429a, 0xeb10, 0xe9cf, 0xfb19, 0x33ca, 0x1, 0x0);
        gbc.writeMem(0x8bc0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x429a, gbc.sp());
        EXPECT(0x8bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc0));
        EXPECT(0x1c, gbc.readMem(0x8bc1));
        // CB 1C 03B5
        gbc.setState(0x4d28, 0xcdf2, 0x6130, 0xed08, 0xb15a, 0xe3f7, 0x1, 0x0);
        gbc.writeMem(0x4d28, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcdf2, gbc.sp());
        EXPECT(0x4d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03B6
        gbc.setState(0x536d, 0xf234, 0xb6d0, 0xaf88, 0xb10d, 0x65a6, 0x0, 0x1);
        gbc.writeMem(0x536d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf234, gbc.sp());
        EXPECT(0x536f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03B7
        gbc.setState(0x67eb, 0xdf81, 0xa8b0, 0xf570, 0x859a, 0xf764, 0x0, 0x0);
        gbc.writeMem(0x67eb, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdf81, gbc.sp());
        EXPECT(0x67ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03B8
        gbc.setState(0x4109, 0x3fd6, 0xddd0, 0xfc10, 0x9c35, 0xf03b, 0x0, 0x0);
        gbc.writeMem(0x4109, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3fd6, gbc.sp());
        EXPECT(0x410b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03B9
        gbc.setState(0x6485, 0x7d7b, 0x180, 0xe0fd, 0x9adc, 0x9f5d, 0x1, 0x1);
        gbc.writeMem(0x6485, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7d7b, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03BA
        gbc.setState(0x984f, 0xe819, 0x99e0, 0xa95e, 0xff9b, 0x8f7c, 0x1, 0x1);
        gbc.writeMem(0x984f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe819, gbc.sp());
        EXPECT(0x9851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984f));
        EXPECT(0x1c, gbc.readMem(0x9850));
        // CB 1C 03BB
        gbc.setState(0xd44c, 0x5201, 0xc5b0, 0x1668, 0xf52a, 0x6050, 0x0, 0x1);
        gbc.writeMem(0xd44c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5201, gbc.sp());
        EXPECT(0xd44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd44c));
        EXPECT(0x1c, gbc.readMem(0xd44d));
        // CB 1C 03BC
        gbc.setState(0x3139, 0x4e64, 0xa1f0, 0x596e, 0x594d, 0x71a0, 0x0, 0x0);
        gbc.writeMem(0x3139, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4e64, gbc.sp());
        EXPECT(0x313b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03BD
        gbc.setState(0x2a48, 0xd121, 0x44c0, 0xa683, 0x77b4, 0xb139, 0x1, 0x1);
        gbc.writeMem(0x2a48, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd121, gbc.sp());
        EXPECT(0x2a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03BE
        gbc.setState(0x5a97, 0x332c, 0xd770, 0x8f1f, 0xab64, 0x4471, 0x0, 0x1);
        gbc.writeMem(0x5a97, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x332c, gbc.sp());
        EXPECT(0x5a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03BF
        gbc.setState(0x17e0, 0x1fcb, 0x52d0, 0xda89, 0x3315, 0x8f45, 0x0, 0x0);
        gbc.writeMem(0x17e0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1fcb, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03C0
        gbc.setState(0x8ed7, 0x7a8f, 0x9fb0, 0x4859, 0x5936, 0x463d, 0x0, 0x1);
        gbc.writeMem(0x8ed7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7a8f, gbc.sp());
        EXPECT(0x8ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed7));
        EXPECT(0x1c, gbc.readMem(0x8ed8));
        // CB 1C 03C1
        gbc.setState(0x1289, 0x881b, 0x900, 0x4a14, 0x7f25, 0x199e, 0x0, 0x0);
        gbc.writeMem(0x1289, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x881b, gbc.sp());
        EXPECT(0x128b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03C2
        gbc.setState(0x7a5e, 0xe4dd, 0xe970, 0x2883, 0x2eab, 0x4770, 0x1, 0x0);
        gbc.writeMem(0x7a5e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe4dd, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03C3
        gbc.setState(0x6e00, 0x9ce3, 0xad60, 0xcad1, 0xdba9, 0x76aa, 0x0, 0x1);
        gbc.writeMem(0x6e00, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9ce3, gbc.sp());
        EXPECT(0x6e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03C4
        gbc.setState(0x6289, 0x1e62, 0xc720, 0x4c9e, 0xb5f4, 0xe5de, 0x1, 0x1);
        gbc.writeMem(0x6289, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1e62, gbc.sp());
        EXPECT(0x628b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03C5
        gbc.setState(0xc47a, 0xcc24, 0xecb0, 0x8c14, 0x9d53, 0xd420, 0x1, 0x0);
        gbc.writeMem(0xc47a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcc24, gbc.sp());
        EXPECT(0xc47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47a));
        EXPECT(0x1c, gbc.readMem(0xc47b));
        // CB 1C 03C6
        gbc.setState(0x452d, 0xa7a3, 0x38e0, 0xf508, 0xbd0e, 0x340, 0x0, 0x0);
        gbc.writeMem(0x452d, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa7a3, gbc.sp());
        EXPECT(0x452f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03C7
        gbc.setState(0x81, 0x5585, 0x1750, 0xe8b0, 0x60cc, 0x8e94, 0x1, 0x1);
        gbc.writeMem(0x81, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5585, gbc.sp());
        EXPECT(0x83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03C8
        gbc.setState(0x371c, 0xdf4f, 0xc730, 0xdfbf, 0xd87e, 0xa6e8, 0x1, 0x0);
        gbc.writeMem(0x371c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdf4f, gbc.sp());
        EXPECT(0x371e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03C9
        gbc.setState(0x8d51, 0xc1cc, 0x1920, 0x8e4a, 0x8d9f, 0x276c, 0x1, 0x0);
        gbc.writeMem(0x8d51, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc1cc, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d51));
        EXPECT(0x1c, gbc.readMem(0x8d52));
        // CB 1C 03CA
        gbc.setState(0xa9a9, 0x1fe6, 0x7000, 0x8c2a, 0x1dce, 0x7c64, 0x0, 0x0);
        gbc.writeMem(0xa9a9, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1fe6, gbc.sp());
        EXPECT(0xa9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a9));
        EXPECT(0x1c, gbc.readMem(0xa9aa));
        // CB 1C 03CB
        gbc.setState(0x9aa8, 0x13af, 0x3720, 0x72c3, 0xde21, 0xa0f0, 0x1, 0x0);
        gbc.writeMem(0x9aa8, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x13af, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa8));
        EXPECT(0x1c, gbc.readMem(0x9aa9));
        // CB 1C 03CC
        gbc.setState(0xe5bc, 0x2b59, 0xcef0, 0xabae, 0xd7e0, 0xb019, 0x1, 0x1);
        gbc.writeMem(0xe5bc, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2b59, gbc.sp());
        EXPECT(0xe5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bc));
        EXPECT(0x1c, gbc.readMem(0xe5bd));
        // CB 1C 03CD
        gbc.setState(0x28e4, 0x2d7d, 0xe1d0, 0xc37b, 0x5ff, 0xaabe, 0x0, 0x1);
        gbc.writeMem(0x28e4, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2d7d, gbc.sp());
        EXPECT(0x28e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03CE
        gbc.setState(0x226f, 0xc310, 0xdf0, 0x7719, 0xf9f0, 0xe8a1, 0x0, 0x1);
        gbc.writeMem(0x226f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc310, gbc.sp());
        EXPECT(0x2271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03CF
        gbc.setState(0x538c, 0x166b, 0x69d0, 0x6233, 0xd7a9, 0x3453, 0x0, 0x1);
        gbc.writeMem(0x538c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x166b, gbc.sp());
        EXPECT(0x538e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03D0
        gbc.setState(0xb3e3, 0x8fe7, 0x9110, 0xaae6, 0x78e1, 0x5379, 0x0, 0x0);
        gbc.writeMem(0xb3e3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8fe7, gbc.sp());
        EXPECT(0xb3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e3));
        EXPECT(0x1c, gbc.readMem(0xb3e4));
        // CB 1C 03D1
        gbc.setState(0x6eef, 0xaf61, 0x17d0, 0x2704, 0x54c9, 0x826d, 0x0, 0x1);
        gbc.writeMem(0x6eef, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaf61, gbc.sp());
        EXPECT(0x6ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03D2
        gbc.setState(0x8b30, 0xd896, 0x1a80, 0xfc0b, 0x3eff, 0xfaed, 0x0, 0x1);
        gbc.writeMem(0x8b30, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd896, gbc.sp());
        EXPECT(0x8b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b30));
        EXPECT(0x1c, gbc.readMem(0x8b31));
        // CB 1C 03D3
        gbc.setState(0x8a74, 0x7917, 0x9b10, 0xebc2, 0x1a87, 0x2a58, 0x1, 0x0);
        gbc.writeMem(0x8a74, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7917, gbc.sp());
        EXPECT(0x8a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a74));
        EXPECT(0x1c, gbc.readMem(0x8a75));
        // CB 1C 03D4
        gbc.setState(0x5340, 0xb4b6, 0x9aa0, 0x5122, 0xf4d1, 0xd1e5, 0x0, 0x0);
        gbc.writeMem(0x5340, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb4b6, gbc.sp());
        EXPECT(0x5342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 1C 03D5
        gbc.setState(0xe09a, 0x6169, 0x48b0, 0xebf8, 0xcb0d, 0xfd92, 0x1, 0x0);
        gbc.writeMem(0xe09a, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6169, gbc.sp());
        EXPECT(0xe09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09a));
        EXPECT(0x1c, gbc.readMem(0xe09b));
        // CB 1C 03D6
        gbc.setState(0xdc19, 0xf9f, 0xac50, 0x31d8, 0x5211, 0xb7ff, 0x0, 0x0);
        gbc.writeMem(0xdc19, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf9f, gbc.sp());
        EXPECT(0xdc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc19));
        EXPECT(0x1c, gbc.readMem(0xdc1a));
        // CB 1C 03D7
        gbc.setState(0x3d9e, 0x93b3, 0xe720, 0x7a7a, 0x62e5, 0xce3a, 0x1, 0x1);
        gbc.writeMem(0x3d9e, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x93b3, gbc.sp());
        EXPECT(0x3da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03D8
        gbc.setState(0x3a86, 0x9956, 0xd570, 0x8b79, 0x5b12, 0xb6c0, 0x1, 0x0);
        gbc.writeMem(0x3a86, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9956, gbc.sp());
        EXPECT(0x3a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03D9
        gbc.setState(0xa5b3, 0x1420, 0xc510, 0xd0e0, 0x2b21, 0xce73, 0x1, 0x0);
        gbc.writeMem(0xa5b3, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1420, gbc.sp());
        EXPECT(0xa5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b3));
        EXPECT(0x1c, gbc.readMem(0xa5b4));
        // CB 1C 03DA
        gbc.setState(0x6d48, 0x4719, 0x38e0, 0xe0f2, 0x6c3, 0xa436, 0x1, 0x0);
        gbc.writeMem(0x6d48, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4719, gbc.sp());
        EXPECT(0x6d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 1C 03DC
        gbc.setState(0x83d0, 0x2e47, 0x66c0, 0xe1f2, 0xeca5, 0x1cc4, 0x1, 0x0);
        gbc.writeMem(0x83d0, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2e47, gbc.sp());
        EXPECT(0x83d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d0));
        EXPECT(0x1c, gbc.readMem(0x83d1));
        // CB 1C 03DD
        gbc.setState(0xac9f, 0xcfaf, 0x9e50, 0x302b, 0x477f, 0x16b9, 0x1, 0x0);
        gbc.writeMem(0xac9f, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcfaf, gbc.sp());
        EXPECT(0xaca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9f));
        EXPECT(0x1c, gbc.readMem(0xaca0));
        // CB 1C 03DE
        gbc.setState(0xe88c, 0xe47a, 0xcc60, 0x87d7, 0x2d84, 0x253c, 0x0, 0x0);
        gbc.writeMem(0xe88c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe47a, gbc.sp());
        EXPECT(0xe88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88c));
        EXPECT(0x1c, gbc.readMem(0xe88d));
        // CB 1C 03DF
        gbc.setState(0x892c, 0x98f9, 0x2e50, 0xa643, 0x62c5, 0x853, 0x1, 0x1);
        gbc.writeMem(0x892c, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x98f9, gbc.sp());
        EXPECT(0x892e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892c));
        EXPECT(0x1c, gbc.readMem(0x892d));
        // CB 1C 03E0
        gbc.setState(0xc150, 0x83ee, 0x55e0, 0xab18, 0x72f5, 0xc8c9, 0x0, 0x0);
        gbc.writeMem(0xc150, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x83ee, gbc.sp());
        EXPECT(0xc152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc150));
        EXPECT(0x1c, gbc.readMem(0xc151));
        // CB 1C 03E1
        gbc.setState(0x93a5, 0x1bd6, 0xd8f0, 0xf447, 0x287f, 0x7f37, 0x0, 0x0);
        gbc.writeMem(0x93a5, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1bd6, gbc.sp());
        EXPECT(0x93a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a5));
        EXPECT(0x1c, gbc.readMem(0x93a6));
        // CB 1C 03E2
        gbc.setState(0x8097, 0x568c, 0xa990, 0x7fa3, 0x3800, 0x636d, 0x0, 0x1);
        gbc.writeMem(0x8097, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x568c, gbc.sp());
        EXPECT(0x8099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8097));
        EXPECT(0x1c, gbc.readMem(0x8098));
        // CB 1C 03E3
        gbc.setState(0xb513, 0xc147, 0xe3f0, 0x8323, 0xaef9, 0xf732, 0x1, 0x0);
        gbc.writeMem(0xb513, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc147, gbc.sp());
        EXPECT(0xb515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb513));
        EXPECT(0x1c, gbc.readMem(0xb514));
        // CB 1C 03E4
        gbc.setState(0xa064, 0x5573, 0x4c0, 0xdd2, 0x83c5, 0x313c, 0x0, 0x0);
        gbc.writeMem(0xa064, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5573, gbc.sp());
        EXPECT(0xa066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa064));
        EXPECT(0x1c, gbc.readMem(0xa065));
        // CB 1C 03E5
        gbc.setState(0xa58b, 0x976c, 0xdbb0, 0xfb25, 0x9b19, 0xe254, 0x0, 0x0);
        gbc.writeMem(0xa58b, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x976c, gbc.sp());
        EXPECT(0xa58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58b));
        EXPECT(0x1c, gbc.readMem(0xa58c));
        // CB 1C 03E6
        gbc.setState(0xb6c7, 0x547e, 0xdf0, 0x2e72, 0x74da, 0x65ed, 0x0, 0x0);
        gbc.writeMem(0xb6c7, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x547e, gbc.sp());
        EXPECT(0xb6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c7));
        EXPECT(0x1c, gbc.readMem(0xb6c8));
        // CB 1C 03E7
        gbc.setState(0x8f87, 0x917b, 0x21c0, 0xc820, 0x48ee, 0xcb67, 0x1, 0x1);
        gbc.writeMem(0x8f87, { 0xcb, 0x1c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x917b, gbc.sp());
        EXPECT(0x8f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f87));
        EXPECT(0x1c, gbc.readMem(0x8f88));
    }
