#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_30)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_30) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 30 0000
        gbc.setState(0x50d1, 0xcdc7, 0x1200, 0xef1d, 0x17c7, 0x80b3, 0x0, 0x0);
        gbc.writeMem(0x50d1, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcdc7);
        EXPECT(gbc.pc(), 0x5079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0001
        gbc.setState(0x9548, 0xc36, 0x9cd0, 0x5f39, 0xd71b, 0x96b5, 0x0, 0x1);
        gbc.writeMem(0x9548, { 0x30, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc36);
        EXPECT(gbc.pc(), 0x954a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9548), 0x30);
        EXPECT(gbc.readMem(0x9549), 0xe3);
        // 30 0002
        gbc.setState(0x6667, 0xc7ea, 0xc2b0, 0xf3f6, 0xf8dd, 0x9312, 0x0, 0x1);
        gbc.writeMem(0x6667, { 0x30, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc7ea);
        EXPECT(gbc.pc(), 0x6669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0003
        gbc.setState(0x63ae, 0xb687, 0x6a60, 0xc748, 0xe3df, 0xb3f2, 0x1, 0x1);
        gbc.writeMem(0x63ae, { 0x30, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb687);
        EXPECT(gbc.pc(), 0x6392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0004
        gbc.setState(0xd3a, 0x391e, 0x8ed0, 0xfada, 0x516d, 0x6195, 0x0, 0x1);
        gbc.writeMem(0xd3a, { 0x30, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x391e);
        EXPECT(gbc.pc(), 0xd3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0005
        gbc.setState(0x3f30, 0x2ff6, 0x65e0, 0xf413, 0x392b, 0x1b20, 0x1, 0x1);
        gbc.writeMem(0x3f30, { 0x30, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2ff6);
        EXPECT(gbc.pc(), 0x3efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0006
        gbc.setState(0x4faf, 0x6b6c, 0xe710, 0x9c95, 0x9a9d, 0xf188, 0x0, 0x0);
        gbc.writeMem(0x4faf, { 0x30, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6b6c);
        EXPECT(gbc.pc(), 0x4fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0007
        gbc.setState(0xd4c8, 0xe6f4, 0x73d0, 0xc90d, 0x3915, 0x27aa, 0x1, 0x1);
        gbc.writeMem(0xd4c8, { 0x30, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe6f4);
        EXPECT(gbc.pc(), 0xd4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4c8), 0x30);
        EXPECT(gbc.readMem(0xd4c9), 0x66);
        // 30 0008
        gbc.setState(0x880e, 0x149, 0x1a20, 0x93fe, 0xc716, 0x2db9, 0x0, 0x1);
        gbc.writeMem(0x880e, { 0x30, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x149);
        EXPECT(gbc.pc(), 0x887b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880e), 0x30);
        EXPECT(gbc.readMem(0x880f), 0x6b);
        // 30 0009
        gbc.setState(0x378e, 0x4430, 0x74f0, 0xf1f3, 0x57ab, 0xbc54, 0x1, 0x0);
        gbc.writeMem(0x378e, { 0x30, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4430);
        EXPECT(gbc.pc(), 0x3790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 000A
        gbc.setState(0x662a, 0x9159, 0xc280, 0xf953, 0xb01a, 0xa69a, 0x1, 0x1);
        gbc.writeMem(0x662a, { 0x30, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9159);
        EXPECT(gbc.pc(), 0x66a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 000B
        gbc.setState(0x4ac8, 0x9368, 0x3c50, 0x4bf7, 0xbbe1, 0x1fb0, 0x1, 0x0);
        gbc.writeMem(0x4ac8, { 0x30, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9368);
        EXPECT(gbc.pc(), 0x4aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 000C
        gbc.setState(0xa122, 0x4f17, 0x1110, 0xcecb, 0xd3eb, 0xb258, 0x1, 0x0);
        gbc.writeMem(0xa122, { 0x30, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4f17);
        EXPECT(gbc.pc(), 0xa124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa122), 0x30);
        EXPECT(gbc.readMem(0xa123), 0x56);
        // 30 000D
        gbc.setState(0x845b, 0x166a, 0xe9c0, 0x29a2, 0x7eba, 0xe152, 0x1, 0x0);
        gbc.writeMem(0x845b, { 0x30, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x166a);
        EXPECT(gbc.pc(), 0x8464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845b), 0x30);
        EXPECT(gbc.readMem(0x845c), 0x7);
        // 30 000E
        gbc.setState(0x587f, 0xc651, 0x1810, 0x1432, 0x45ae, 0x8ddc, 0x0, 0x0);
        gbc.writeMem(0x587f, { 0x30, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc651);
        EXPECT(gbc.pc(), 0x5881);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 000F
        gbc.setState(0xc7af, 0x6db4, 0x28d0, 0x180e, 0xd02b, 0x1e5d, 0x1, 0x0);
        gbc.writeMem(0xc7af, { 0x30, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6db4);
        EXPECT(gbc.pc(), 0xc7b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7af), 0x30);
        EXPECT(gbc.readMem(0xc7b0), 0x40);
        // 30 0010
        gbc.setState(0xda05, 0x4c31, 0x9f80, 0x3296, 0xde30, 0xee60, 0x1, 0x1);
        gbc.writeMem(0xda05, { 0x30, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4c31);
        EXPECT(gbc.pc(), 0xda3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda05), 0x30);
        EXPECT(gbc.readMem(0xda06), 0x36);
        // 30 0011
        gbc.setState(0xd0de, 0x73aa, 0x34f0, 0x6de8, 0xf34b, 0x5172, 0x0, 0x1);
        gbc.writeMem(0xd0de, { 0x30, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x73aa);
        EXPECT(gbc.pc(), 0xd0e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0de), 0x30);
        EXPECT(gbc.readMem(0xd0df), 0xfc);
        // 30 0012
        gbc.setState(0xe2a9, 0x1b8c, 0xf370, 0xbb41, 0xf771, 0x9ba7, 0x0, 0x0);
        gbc.writeMem(0xe2a9, { 0x30, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1b8c);
        EXPECT(gbc.pc(), 0xe2ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a9), 0x30);
        EXPECT(gbc.readMem(0xe2aa), 0xcd);
        // 30 0013
        gbc.setState(0x1d8a, 0x4c03, 0x6460, 0x46c1, 0xa4fa, 0x79b, 0x0, 0x0);
        gbc.writeMem(0x1d8a, { 0x30, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4c03);
        EXPECT(gbc.pc(), 0x1d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0014
        gbc.setState(0x6de0, 0xec4, 0x3fb0, 0xe726, 0xaf82, 0x19b2, 0x1, 0x1);
        gbc.writeMem(0x6de0, { 0x30, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xec4);
        EXPECT(gbc.pc(), 0x6de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0015
        gbc.setState(0x285, 0xd6fc, 0xbd10, 0x3a8d, 0x7c13, 0x7d64, 0x0, 0x0);
        gbc.writeMem(0x285, { 0x30, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd6fc);
        EXPECT(gbc.pc(), 0x287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0016
        gbc.setState(0xe736, 0xf620, 0x4460, 0x50e7, 0x10a7, 0xeb9f, 0x1, 0x1);
        gbc.writeMem(0xe736, { 0x30, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf620);
        EXPECT(gbc.pc(), 0xe77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe736), 0x30);
        EXPECT(gbc.readMem(0xe737), 0x44);
        // 30 0017
        gbc.setState(0x733f, 0x2e67, 0x7250, 0xd06b, 0xb5b1, 0x6778, 0x0, 0x1);
        gbc.writeMem(0x733f, { 0x30, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2e67);
        EXPECT(gbc.pc(), 0x7341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0018
        gbc.setState(0x3d3e, 0x43bd, 0xe440, 0x4019, 0xf6c0, 0x30de, 0x1, 0x1);
        gbc.writeMem(0x3d3e, { 0x30, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x43bd);
        EXPECT(gbc.pc(), 0x3d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0019
        gbc.setState(0xd931, 0x8349, 0xada0, 0x32d2, 0x3e88, 0xeabd, 0x1, 0x1);
        gbc.writeMem(0xd931, { 0x30, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8349);
        EXPECT(gbc.pc(), 0xd97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd931), 0x30);
        EXPECT(gbc.readMem(0xd932), 0x4b);
        // 30 001A
        gbc.setState(0x8969, 0x5e29, 0xf8e0, 0xc706, 0x4ae7, 0x8039, 0x0, 0x1);
        gbc.writeMem(0x8969, { 0x30, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5e29);
        EXPECT(gbc.pc(), 0x8999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8969), 0x30);
        EXPECT(gbc.readMem(0x896a), 0x2e);
        // 30 001B
        gbc.setState(0xac97, 0xc4bb, 0x5d0, 0x777, 0xa3e7, 0x4ce7, 0x1, 0x0);
        gbc.writeMem(0xac97, { 0x30, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc4bb);
        EXPECT(gbc.pc(), 0xac99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac97), 0x30);
        EXPECT(gbc.readMem(0xac98), 0xb2);
        // 30 001C
        gbc.setState(0x88dc, 0x9b55, 0x8280, 0x6c82, 0xa878, 0xa367, 0x1, 0x0);
        gbc.writeMem(0x88dc, { 0x30, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9b55);
        EXPECT(gbc.pc(), 0x88e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88dc), 0x30);
        EXPECT(gbc.readMem(0x88dd), 0x9);
        // 30 001E
        gbc.setState(0x1d9d, 0xe56d, 0xc10, 0x7d39, 0x5cda, 0xa64c, 0x0, 0x0);
        gbc.writeMem(0x1d9d, { 0x30, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe56d);
        EXPECT(gbc.pc(), 0x1d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 001F
        gbc.setState(0x47cd, 0x9fbe, 0xd610, 0x1e36, 0x3dac, 0x5065, 0x1, 0x1);
        gbc.writeMem(0x47cd, { 0x30, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9fbe);
        EXPECT(gbc.pc(), 0x47cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0020
        gbc.setState(0x368b, 0xa759, 0x4310, 0x8dcf, 0x4787, 0xc0be, 0x0, 0x0);
        gbc.writeMem(0x368b, { 0x30, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa759);
        EXPECT(gbc.pc(), 0x368d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0021
        gbc.setState(0x542b, 0x4d74, 0xb410, 0x4d1f, 0xbb29, 0xc0af, 0x0, 0x1);
        gbc.writeMem(0x542b, { 0x30, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4d74);
        EXPECT(gbc.pc(), 0x542d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0022
        gbc.setState(0x8564, 0xaa60, 0x4230, 0x8ead, 0xa219, 0xe71f, 0x1, 0x0);
        gbc.writeMem(0x8564, { 0x30, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xaa60);
        EXPECT(gbc.pc(), 0x8566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8564), 0x30);
        EXPECT(gbc.readMem(0x8565), 0xe);
        // 30 0023
        gbc.setState(0x69e4, 0x5459, 0x4280, 0x7d29, 0x28f, 0x666, 0x1, 0x1);
        gbc.writeMem(0x69e4, { 0x30, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5459);
        EXPECT(gbc.pc(), 0x6a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0024
        gbc.setState(0xb17a, 0x9b5d, 0x4440, 0x419a, 0xc8b4, 0x2aa4, 0x0, 0x0);
        gbc.writeMem(0xb17a, { 0x30, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9b5d);
        EXPECT(gbc.pc(), 0xb153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17a), 0x30);
        EXPECT(gbc.readMem(0xb17b), 0xd7);
        // 30 0025
        gbc.setState(0xba50, 0x3812, 0xfa10, 0xdc03, 0x2e42, 0x40c, 0x0, 0x1);
        gbc.writeMem(0xba50, { 0x30, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3812);
        EXPECT(gbc.pc(), 0xba52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba50), 0x30);
        EXPECT(gbc.readMem(0xba51), 0x87);
        // 30 0027
        gbc.setState(0x6684, 0x5bf1, 0xb980, 0xd6f5, 0x6795, 0x70ff, 0x1, 0x1);
        gbc.writeMem(0x6684, { 0x30, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5bf1);
        EXPECT(gbc.pc(), 0x66a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0028
        gbc.setState(0xdf83, 0xbf2b, 0xe080, 0x6c3b, 0xa90f, 0x3d0d, 0x1, 0x1);
        gbc.writeMem(0xdf83, { 0x30, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbf2b);
        EXPECT(gbc.pc(), 0xdf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf83), 0x30);
        EXPECT(gbc.readMem(0xdf84), 0xbe);
        // 30 0029
        gbc.setState(0xadcf, 0x324a, 0x5b90, 0x8c61, 0xf8a5, 0xd3c8, 0x1, 0x1);
        gbc.writeMem(0xadcf, { 0x30, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x324a);
        EXPECT(gbc.pc(), 0xadd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadcf), 0x30);
        EXPECT(gbc.readMem(0xadd0), 0x36);
        // 30 002B
        gbc.setState(0x426e, 0xf6bb, 0xf220, 0xd984, 0x8ff3, 0x26c5, 0x0, 0x0);
        gbc.writeMem(0x426e, { 0x30, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf6bb);
        EXPECT(gbc.pc(), 0x4241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 002C
        gbc.setState(0xd751, 0xb91c, 0x2de0, 0x9d1e, 0x666f, 0xd38b, 0x1, 0x1);
        gbc.writeMem(0xd751, { 0x30, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb91c);
        EXPECT(gbc.pc(), 0xd6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd751), 0x30);
        EXPECT(gbc.readMem(0xd752), 0x9e);
        // 30 002D
        gbc.setState(0x1ae8, 0x7d89, 0xc000, 0x8fb1, 0x4ada, 0x6270, 0x0, 0x0);
        gbc.writeMem(0x1ae8, { 0x30, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7d89);
        EXPECT(gbc.pc(), 0x1b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 002E
        gbc.setState(0xe67b, 0xb50d, 0xed0, 0x1c71, 0xeb8c, 0x8cfe, 0x1, 0x0);
        gbc.writeMem(0xe67b, { 0x30, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb50d);
        EXPECT(gbc.pc(), 0xe67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe67b), 0x30);
        EXPECT(gbc.readMem(0xe67c), 0xbc);
        // 30 002F
        gbc.setState(0xcc34, 0xa166, 0x66e0, 0x49dd, 0x3199, 0x47fb, 0x0, 0x0);
        gbc.writeMem(0xcc34, { 0x30, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa166);
        EXPECT(gbc.pc(), 0xcc1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc34), 0x30);
        EXPECT(gbc.readMem(0xcc35), 0xe4);
        // 30 0030
        gbc.setState(0x21bf, 0x22d0, 0xe800, 0xfa18, 0x7444, 0xfb26, 0x0, 0x1);
        gbc.writeMem(0x21bf, { 0x30, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x22d0);
        EXPECT(gbc.pc(), 0x221f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0031
        gbc.setState(0x8f2c, 0x4987, 0x41e0, 0x53da, 0x8a3c, 0xd3e3, 0x1, 0x0);
        gbc.writeMem(0x8f2c, { 0x30, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4987);
        EXPECT(gbc.pc(), 0x8f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2c), 0x30);
        EXPECT(gbc.readMem(0x8f2d), 0x43);
        // 30 0032
        gbc.setState(0x25c4, 0xf82c, 0xe00, 0xce18, 0xdaf2, 0x4bd9, 0x1, 0x0);
        gbc.writeMem(0x25c4, { 0x30, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf82c);
        EXPECT(gbc.pc(), 0x25b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0033
        gbc.setState(0x895d, 0xc41c, 0xa410, 0x626f, 0x3ed, 0x4c2e, 0x1, 0x0);
        gbc.writeMem(0x895d, { 0x30, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc41c);
        EXPECT(gbc.pc(), 0x895f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895d), 0x30);
        EXPECT(gbc.readMem(0x895e), 0xd2);
        // 30 0034
        gbc.setState(0xc102, 0xbdd9, 0x7bc0, 0x5b17, 0xe74, 0xd4e7, 0x1, 0x0);
        gbc.writeMem(0xc102, { 0x30, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbdd9);
        EXPECT(gbc.pc(), 0xc0c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc102), 0x30);
        EXPECT(gbc.readMem(0xc103), 0xc1);
        // 30 0035
        gbc.setState(0xea00, 0x68df, 0x7000, 0xf3c6, 0x1aa5, 0xf3a2, 0x1, 0x0);
        gbc.writeMem(0xea00, { 0x30, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x68df);
        EXPECT(gbc.pc(), 0xea6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea00), 0x30);
        EXPECT(gbc.readMem(0xea01), 0x6c);
        // 30 0036
        gbc.setState(0x1a51, 0x8dfd, 0xa2a0, 0x3db2, 0xdd84, 0x1840, 0x0, 0x0);
        gbc.writeMem(0x1a51, { 0x30, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8dfd);
        EXPECT(gbc.pc(), 0x19e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0037
        gbc.setState(0x2358, 0x7ae1, 0xeb20, 0x42cb, 0x363a, 0x1947, 0x1, 0x0);
        gbc.writeMem(0x2358, { 0x30, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7ae1);
        EXPECT(gbc.pc(), 0x23b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0038
        gbc.setState(0x9a61, 0x40e, 0x4b0, 0x9b1f, 0x88a8, 0x287a, 0x1, 0x1);
        gbc.writeMem(0x9a61, { 0x30, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x40e);
        EXPECT(gbc.pc(), 0x9a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a61), 0x30);
        EXPECT(gbc.readMem(0x9a62), 0x10);
        // 30 0039
        gbc.setState(0x2d06, 0x3ebb, 0x1620, 0x534c, 0xb7f9, 0xaf51, 0x0, 0x0);
        gbc.writeMem(0x2d06, { 0x30, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3ebb);
        EXPECT(gbc.pc(), 0x2c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 003A
        gbc.setState(0xb9b5, 0xb42a, 0xcc80, 0xe3d, 0x4868, 0xd826, 0x0, 0x1);
        gbc.writeMem(0xb9b5, { 0x30, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb42a);
        EXPECT(gbc.pc(), 0xba19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b5), 0x30);
        EXPECT(gbc.readMem(0xb9b6), 0x62);
        // 30 003B
        gbc.setState(0x2265, 0x50cb, 0x5a00, 0xc6ac, 0xdeed, 0xf730, 0x0, 0x0);
        gbc.writeMem(0x2265, { 0x30, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x50cb);
        EXPECT(gbc.pc(), 0x2211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 003C
        gbc.setState(0x309f, 0x81a6, 0xa220, 0xc173, 0xaa2f, 0x77ba, 0x0, 0x0);
        gbc.writeMem(0x309f, { 0x30, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x81a6);
        EXPECT(gbc.pc(), 0x3086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 003D
        gbc.setState(0xe617, 0xa04d, 0x6800, 0x1beb, 0x4559, 0x3212, 0x1, 0x1);
        gbc.writeMem(0xe617, { 0x30, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa04d);
        EXPECT(gbc.pc(), 0xe663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe617), 0x30);
        EXPECT(gbc.readMem(0xe618), 0x4a);
        // 30 003E
        gbc.setState(0x3c0, 0xbf5f, 0x3b60, 0x477d, 0x3ad0, 0xb2e6, 0x1, 0x1);
        gbc.writeMem(0x3c0, { 0x30, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbf5f);
        EXPECT(gbc.pc(), 0x3b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 003F
        gbc.setState(0xbda5, 0x9929, 0xbdf0, 0xdd21, 0x4e74, 0x4264, 0x0, 0x0);
        gbc.writeMem(0xbda5, { 0x30, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9929);
        EXPECT(gbc.pc(), 0xbda7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda5), 0x30);
        EXPECT(gbc.readMem(0xbda6), 0x24);
        // 30 0040
        gbc.setState(0x96c0, 0xc6e8, 0x680, 0x894a, 0x36b4, 0x1800, 0x0, 0x1);
        gbc.writeMem(0x96c0, { 0x30, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc6e8);
        EXPECT(gbc.pc(), 0x965f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c0), 0x30);
        EXPECT(gbc.readMem(0x96c1), 0x9d);
        // 30 0041
        gbc.setState(0x4bca, 0x5d94, 0x3fb0, 0xb450, 0x53bf, 0x5d47, 0x0, 0x0);
        gbc.writeMem(0x4bca, { 0x30, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5d94);
        EXPECT(gbc.pc(), 0x4bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0042
        gbc.setState(0xb30, 0x72d0, 0xa890, 0xdc11, 0xaca7, 0x2a4f, 0x0, 0x0);
        gbc.writeMem(0xb30, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x72d0);
        EXPECT(gbc.pc(), 0xb32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0044
        gbc.setState(0xc887, 0xaabc, 0x5cc0, 0x7399, 0x9a90, 0xbc04, 0x1, 0x1);
        gbc.writeMem(0xc887, { 0x30, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xaabc);
        EXPECT(gbc.pc(), 0xc8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc887), 0x30);
        EXPECT(gbc.readMem(0xc888), 0x56);
        // 30 0045
        gbc.setState(0x7ff5, 0x3e84, 0x5990, 0x450c, 0x87cd, 0xca60, 0x0, 0x1);
        gbc.writeMem(0x7ff5, { 0x30, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3e84);
        EXPECT(gbc.pc(), 0x7ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0046
        gbc.setState(0xaa2a, 0x8e9a, 0x600, 0x47b0, 0xe8d4, 0xebaa, 0x1, 0x1);
        gbc.writeMem(0xaa2a, { 0x30, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8e9a);
        EXPECT(gbc.pc(), 0xaa84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2a), 0x30);
        EXPECT(gbc.readMem(0xaa2b), 0x58);
        // 30 0047
        gbc.setState(0x71d4, 0xf2d0, 0xa2d0, 0x25e4, 0xfea4, 0x2a67, 0x1, 0x1);
        gbc.writeMem(0x71d4, { 0x30, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf2d0);
        EXPECT(gbc.pc(), 0x71d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0048
        gbc.setState(0x567a, 0xbd04, 0x3730, 0x9c81, 0x6ae6, 0x9624, 0x1, 0x0);
        gbc.writeMem(0x567a, { 0x30, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbd04);
        EXPECT(gbc.pc(), 0x567c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0049
        gbc.setState(0x58e, 0xd69f, 0x3020, 0x866c, 0xe0ba, 0x7f4b, 0x0, 0x1);
        gbc.writeMem(0x58e, { 0x30, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd69f);
        EXPECT(gbc.pc(), 0x53c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 004B
        gbc.setState(0xae91, 0x79f3, 0x9270, 0x906e, 0x534e, 0xcee8, 0x1, 0x0);
        gbc.writeMem(0xae91, { 0x30, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x79f3);
        EXPECT(gbc.pc(), 0xae93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae91), 0x30);
        EXPECT(gbc.readMem(0xae92), 0x7);
        // 30 004C
        gbc.setState(0xd3df, 0x5403, 0x7eb0, 0xca71, 0xf538, 0xc9ef, 0x1, 0x1);
        gbc.writeMem(0xd3df, { 0x30, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5403);
        EXPECT(gbc.pc(), 0xd3e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3df), 0x30);
        EXPECT(gbc.readMem(0xd3e0), 0x1);
        // 30 004D
        gbc.setState(0xbfb4, 0x2a6e, 0xfda0, 0x9783, 0x52ca, 0xf670, 0x1, 0x1);
        gbc.writeMem(0xbfb4, { 0x30, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2a6e);
        EXPECT(gbc.pc(), 0xbf55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb4), 0x30);
        EXPECT(gbc.readMem(0xbfb5), 0x9f);
        // 30 004E
        gbc.setState(0x6b40, 0xaab, 0x33e0, 0xf8c, 0x6d72, 0x9088, 0x0, 0x1);
        gbc.writeMem(0x6b40, { 0x30, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xaab);
        EXPECT(gbc.pc(), 0x6b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 004F
        gbc.setState(0x68b4, 0x7a98, 0xf3d0, 0xe1e, 0xe251, 0x1207, 0x1, 0x0);
        gbc.writeMem(0x68b4, { 0x30, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7a98);
        EXPECT(gbc.pc(), 0x68b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0050
        gbc.setState(0x7e4a, 0x5fe0, 0x1d80, 0x8f82, 0xa132, 0xde7c, 0x1, 0x0);
        gbc.writeMem(0x7e4a, { 0x30, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5fe0);
        EXPECT(gbc.pc(), 0x7e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0051
        gbc.setState(0xe96e, 0x65ff, 0xa3c0, 0x4112, 0x7377, 0x8d3b, 0x0, 0x1);
        gbc.writeMem(0xe96e, { 0x30, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x65ff);
        EXPECT(gbc.pc(), 0xe998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96e), 0x30);
        EXPECT(gbc.readMem(0xe96f), 0x28);
        // 30 0052
        gbc.setState(0x57a, 0xc7d4, 0xc2d0, 0x1f84, 0x3b0, 0xc3d1, 0x1, 0x0);
        gbc.writeMem(0x57a, { 0x30, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc7d4);
        EXPECT(gbc.pc(), 0x57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0053
        gbc.setState(0x3f46, 0x2811, 0xd300, 0x8a8e, 0xfb48, 0x801a, 0x1, 0x0);
        gbc.writeMem(0x3f46, { 0x30, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2811);
        EXPECT(gbc.pc(), 0x3ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0054
        gbc.setState(0x4c3b, 0x850, 0xf7e0, 0xd7de, 0x5050, 0x936c, 0x0, 0x0);
        gbc.writeMem(0x4c3b, { 0x30, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x850);
        EXPECT(gbc.pc(), 0x4c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0056
        gbc.setState(0xd617, 0xfee2, 0x300, 0xb2da, 0xe44b, 0xdff9, 0x1, 0x1);
        gbc.writeMem(0xd617, { 0x30, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfee2);
        EXPECT(gbc.pc(), 0xd5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd617), 0x30);
        EXPECT(gbc.readMem(0xd618), 0x9c);
        // 30 0057
        gbc.setState(0x53fe, 0x9d7a, 0x8070, 0x9e7e, 0x233f, 0x7c28, 0x0, 0x1);
        gbc.writeMem(0x53fe, { 0x30, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9d7a);
        EXPECT(gbc.pc(), 0x5400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0058
        gbc.setState(0xb03d, 0xa4a8, 0xd930, 0xeb0b, 0x14a8, 0xb9ff, 0x0, 0x1);
        gbc.writeMem(0xb03d, { 0x30, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa4a8);
        EXPECT(gbc.pc(), 0xb03f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03d), 0x30);
        EXPECT(gbc.readMem(0xb03e), 0xed);
        // 30 0059
        gbc.setState(0xdaff, 0xecfb, 0xd020, 0x7768, 0xc53, 0xc935, 0x1, 0x0);
        gbc.writeMem(0xdaff, { 0x30, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xecfb);
        EXPECT(gbc.pc(), 0xdb76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaff), 0x30);
        EXPECT(gbc.readMem(0xdb00), 0x75);
        // 30 005A
        gbc.setState(0xad90, 0x913, 0x2b10, 0x1664, 0x5c7c, 0xb377, 0x0, 0x0);
        gbc.writeMem(0xad90, { 0x30, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x913);
        EXPECT(gbc.pc(), 0xad92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad90), 0x30);
        EXPECT(gbc.readMem(0xad91), 0x58);
        // 30 005B
        gbc.setState(0xacea, 0x22f0, 0xaac0, 0xb8f0, 0x92a3, 0x6b16, 0x1, 0x0);
        gbc.writeMem(0xacea, { 0x30, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x22f0);
        EXPECT(gbc.pc(), 0xace1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacea), 0x30);
        EXPECT(gbc.readMem(0xaceb), 0xf5);
        // 30 005C
        gbc.setState(0xbdb3, 0x4866, 0xf910, 0x8b5, 0x9864, 0x47f6, 0x1, 0x0);
        gbc.writeMem(0xbdb3, { 0x30, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4866);
        EXPECT(gbc.pc(), 0xbdb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb3), 0x30);
        EXPECT(gbc.readMem(0xbdb4), 0xe8);
        // 30 005E
        gbc.setState(0x42bc, 0xe99b, 0x2790, 0x2c97, 0xc4e1, 0x8a1a, 0x1, 0x1);
        gbc.writeMem(0x42bc, { 0x30, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe99b);
        EXPECT(gbc.pc(), 0x42be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 005F
        gbc.setState(0xaa12, 0x93d7, 0x9a40, 0x4c4c, 0xf782, 0xecd2, 0x1, 0x0);
        gbc.writeMem(0xaa12, { 0x30, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x93d7);
        EXPECT(gbc.pc(), 0xa9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa12), 0x30);
        EXPECT(gbc.readMem(0xaa13), 0xc1);
        // 30 0060
        gbc.setState(0x5247, 0x483c, 0x8a0, 0x77fe, 0x126d, 0xff73, 0x1, 0x1);
        gbc.writeMem(0x5247, { 0x30, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x483c);
        EXPECT(gbc.pc(), 0x525d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0061
        gbc.setState(0x18d0, 0xcdb6, 0x19d0, 0xa37d, 0xa768, 0x2078, 0x1, 0x0);
        gbc.writeMem(0x18d0, { 0x30, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcdb6);
        EXPECT(gbc.pc(), 0x18d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0062
        gbc.setState(0x70b1, 0xf8b1, 0xa7d0, 0xb2, 0xc1f5, 0x1765, 0x1, 0x1);
        gbc.writeMem(0x70b1, { 0x30, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf8b1);
        EXPECT(gbc.pc(), 0x70b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0063
        gbc.setState(0x95c8, 0x30e, 0x6f90, 0x463f, 0x6179, 0x688b, 0x0, 0x1);
        gbc.writeMem(0x95c8, { 0x30, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x30e);
        EXPECT(gbc.pc(), 0x95ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c8), 0x30);
        EXPECT(gbc.readMem(0x95c9), 0xcd);
        // 30 0064
        gbc.setState(0xe055, 0xbcf9, 0x8830, 0xe9d2, 0x2e72, 0x8157, 0x0, 0x1);
        gbc.writeMem(0xe055, { 0x30, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbcf9);
        EXPECT(gbc.pc(), 0xe057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe055), 0x30);
        EXPECT(gbc.readMem(0xe056), 0xb3);
        // 30 0065
        gbc.setState(0x917, 0x9cec, 0xc1a0, 0x8ff8, 0x1cd9, 0x15b7, 0x1, 0x1);
        gbc.writeMem(0x917, { 0x30, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9cec);
        EXPECT(gbc.pc(), 0x963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0066
        gbc.setState(0xb1c9, 0x5755, 0xfba0, 0x61d5, 0x952, 0xcb59, 0x0, 0x0);
        gbc.writeMem(0xb1c9, { 0x30, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5755);
        EXPECT(gbc.pc(), 0xb174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c9), 0x30);
        EXPECT(gbc.readMem(0xb1ca), 0xa9);
        // 30 0067
        gbc.setState(0xd959, 0x323, 0x4620, 0x9d17, 0x726, 0xc8b1, 0x0, 0x1);
        gbc.writeMem(0xd959, { 0x30, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x323);
        EXPECT(gbc.pc(), 0xd9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd959), 0x30);
        EXPECT(gbc.readMem(0xd95a), 0x6f);
        // 30 0068
        gbc.setState(0xdf20, 0xbb8a, 0x1ec0, 0xeda1, 0x738, 0x6abc, 0x0, 0x1);
        gbc.writeMem(0xdf20, { 0x30, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbb8a);
        EXPECT(gbc.pc(), 0xdf80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf20), 0x30);
        EXPECT(gbc.readMem(0xdf21), 0x5e);
        // 30 0069
        gbc.setState(0xee4e, 0x941d, 0xe2e0, 0xda5d, 0xa511, 0x43b0, 0x1, 0x1);
        gbc.writeMem(0xee4e, { 0x30, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x941d);
        EXPECT(gbc.pc(), 0xee29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4e), 0x30);
        EXPECT(gbc.readMem(0xee4f), 0xd9);
        // 30 006A
        gbc.setState(0x6eb2, 0xdaf4, 0x6e20, 0x2c0a, 0x1f1d, 0x6511, 0x1, 0x0);
        gbc.writeMem(0x6eb2, { 0x30, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xdaf4);
        EXPECT(gbc.pc(), 0x6e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 006B
        gbc.setState(0x926a, 0x40bc, 0x7ca0, 0xa3a8, 0xa14f, 0xdd68, 0x0, 0x1);
        gbc.writeMem(0x926a, { 0x30, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x40bc);
        EXPECT(gbc.pc(), 0x9258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926a), 0x30);
        EXPECT(gbc.readMem(0x926b), 0xec);
        // 30 006C
        gbc.setState(0x31b0, 0x749c, 0x6170, 0xad2f, 0x56e9, 0x57e7, 0x1, 0x1);
        gbc.writeMem(0x31b0, { 0x30, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x749c);
        EXPECT(gbc.pc(), 0x31b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 006D
        gbc.setState(0x3e6, 0x52c1, 0x830, 0x2072, 0xaf00, 0xf2b7, 0x0, 0x1);
        gbc.writeMem(0x3e6, { 0x30, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x52c1);
        EXPECT(gbc.pc(), 0x3e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 006E
        gbc.setState(0xb493, 0xf83, 0x9340, 0x6d59, 0xe2af, 0x1696, 0x0, 0x0);
        gbc.writeMem(0xb493, { 0x30, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf83);
        EXPECT(gbc.pc(), 0xb420);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb493), 0x30);
        EXPECT(gbc.readMem(0xb494), 0x8b);
        // 30 0070
        gbc.setState(0x912b, 0x623d, 0xd990, 0x9517, 0xecc0, 0x698, 0x1, 0x0);
        gbc.writeMem(0x912b, { 0x30, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x623d);
        EXPECT(gbc.pc(), 0x912d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912b), 0x30);
        EXPECT(gbc.readMem(0x912c), 0xc7);
        // 30 0071
        gbc.setState(0x69e7, 0xcd4d, 0xd480, 0x6f83, 0x90ca, 0x64e0, 0x0, 0x1);
        gbc.writeMem(0x69e7, { 0x30, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcd4d);
        EXPECT(gbc.pc(), 0x6a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0072
        gbc.setState(0x58c5, 0x1b33, 0x4090, 0xbac5, 0x6332, 0x4180, 0x0, 0x1);
        gbc.writeMem(0x58c5, { 0x30, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1b33);
        EXPECT(gbc.pc(), 0x58c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0073
        gbc.setState(0xc8ff, 0x603a, 0x2eb0, 0x118b, 0x8841, 0xa102, 0x0, 0x1);
        gbc.writeMem(0xc8ff, { 0x30, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x603a);
        EXPECT(gbc.pc(), 0xc901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ff), 0x30);
        EXPECT(gbc.readMem(0xc900), 0x95);
        // 30 0074
        gbc.setState(0x7192, 0x7866, 0x4660, 0x2a9b, 0xf2c6, 0x8fa, 0x0, 0x0);
        gbc.writeMem(0x7192, { 0x30, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7866);
        EXPECT(gbc.pc(), 0x7182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0075
        gbc.setState(0x9f28, 0x2b77, 0x2f60, 0x61cb, 0xbc85, 0x1a81, 0x0, 0x0);
        gbc.writeMem(0x9f28, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2b77);
        EXPECT(gbc.pc(), 0x9ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f28), 0x30);
        EXPECT(gbc.readMem(0x9f29), 0xa6);
        // 30 0076
        gbc.setState(0xe8b0, 0x7f85, 0x9750, 0x5b4c, 0x7d57, 0x3b3a, 0x0, 0x0);
        gbc.writeMem(0xe8b0, { 0x30, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7f85);
        EXPECT(gbc.pc(), 0xe8b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b0), 0x30);
        EXPECT(gbc.readMem(0xe8b1), 0xd1);
        // 30 0077
        gbc.setState(0xad44, 0x3089, 0xf780, 0x7087, 0x70ad, 0x2c52, 0x0, 0x0);
        gbc.writeMem(0xad44, { 0x30, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3089);
        EXPECT(gbc.pc(), 0xad4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad44), 0x30);
        EXPECT(gbc.readMem(0xad45), 0x6);
        // 30 0079
        gbc.setState(0x1de9, 0xb1ea, 0x660, 0x2464, 0x3c39, 0xa290, 0x0, 0x1);
        gbc.writeMem(0x1de9, { 0x30, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb1ea);
        EXPECT(gbc.pc(), 0x1e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 007A
        gbc.setState(0xbac8, 0xd105, 0x3d20, 0x38de, 0x2a54, 0x9f27, 0x1, 0x0);
        gbc.writeMem(0xbac8, { 0x30, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd105);
        EXPECT(gbc.pc(), 0xba9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac8), 0x30);
        EXPECT(gbc.readMem(0xbac9), 0xd0);
        // 30 007B
        gbc.setState(0xb8eb, 0xcf59, 0xc80, 0xf963, 0x761f, 0x2278, 0x0, 0x1);
        gbc.writeMem(0xb8eb, { 0x30, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcf59);
        EXPECT(gbc.pc(), 0xb96c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8eb), 0x30);
        EXPECT(gbc.readMem(0xb8ec), 0x7f);
        // 30 007C
        gbc.setState(0x112a, 0xb286, 0x1e0, 0x1eb1, 0x82b9, 0x7c9d, 0x0, 0x1);
        gbc.writeMem(0x112a, { 0x30, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb286);
        EXPECT(gbc.pc(), 0x10d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 007D
        gbc.setState(0x3215, 0x4784, 0x2250, 0x91b7, 0x9af0, 0xad5f, 0x0, 0x1);
        gbc.writeMem(0x3215, { 0x30, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4784);
        EXPECT(gbc.pc(), 0x3217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 007E
        gbc.setState(0x5fa9, 0x6884, 0xa2d0, 0x56b, 0xe54c, 0xf70e, 0x1, 0x1);
        gbc.writeMem(0x5fa9, { 0x30, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6884);
        EXPECT(gbc.pc(), 0x5fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 007F
        gbc.setState(0x84d0, 0x7d8f, 0xee50, 0x3d2a, 0xd092, 0x9e54, 0x0, 0x0);
        gbc.writeMem(0x84d0, { 0x30, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7d8f);
        EXPECT(gbc.pc(), 0x84d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d0), 0x30);
        EXPECT(gbc.readMem(0x84d1), 0x43);
        // 30 0080
        gbc.setState(0x3c91, 0x5826, 0x4270, 0x2915, 0x577b, 0x2c88, 0x0, 0x0);
        gbc.writeMem(0x3c91, { 0x30, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5826);
        EXPECT(gbc.pc(), 0x3c93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0081
        gbc.setState(0xaaa4, 0x9d65, 0x1320, 0x1851, 0xb94e, 0xe47d, 0x1, 0x0);
        gbc.writeMem(0xaaa4, { 0x30, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9d65);
        EXPECT(gbc.pc(), 0xaa8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa4), 0x30);
        EXPECT(gbc.readMem(0xaaa5), 0xe5);
        // 30 0082
        gbc.setState(0x95ab, 0x2ec5, 0x8b0, 0xaf9a, 0x7acd, 0xe201, 0x1, 0x1);
        gbc.writeMem(0x95ab, { 0x30, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2ec5);
        EXPECT(gbc.pc(), 0x95ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ab), 0x30);
        EXPECT(gbc.readMem(0x95ac), 0x3d);
        // 30 0084
        gbc.setState(0x1520, 0x81e, 0x3ba0, 0xd5bd, 0x6d21, 0x7e77, 0x0, 0x1);
        gbc.writeMem(0x1520, { 0x30, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x81e);
        EXPECT(gbc.pc(), 0x1528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0085
        gbc.setState(0x3249, 0xbd59, 0x1450, 0x75d4, 0x7f8, 0xee62, 0x1, 0x1);
        gbc.writeMem(0x3249, { 0x30, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbd59);
        EXPECT(gbc.pc(), 0x324b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0086
        gbc.setState(0xec2e, 0x7c3e, 0x38b0, 0xcd53, 0xd09a, 0x7eae, 0x1, 0x1);
        gbc.writeMem(0xec2e, { 0x30, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7c3e);
        EXPECT(gbc.pc(), 0xec30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2e), 0x30);
        EXPECT(gbc.readMem(0xec2f), 0x28);
        // 30 0087
        gbc.setState(0x259d, 0x933a, 0x7a00, 0x4c40, 0x9bfd, 0x5685, 0x1, 0x0);
        gbc.writeMem(0x259d, { 0x30, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x933a);
        EXPECT(gbc.pc(), 0x2576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0088
        gbc.setState(0x77cc, 0x971b, 0xdae0, 0x933b, 0x804d, 0x7fcc, 0x1, 0x1);
        gbc.writeMem(0x77cc, { 0x30, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x971b);
        EXPECT(gbc.pc(), 0x7782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0089
        gbc.setState(0xd039, 0x7a0c, 0x5630, 0xdd51, 0x64a7, 0xf901, 0x1, 0x0);
        gbc.writeMem(0xd039, { 0x30, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7a0c);
        EXPECT(gbc.pc(), 0xd03b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd039), 0x30);
        EXPECT(gbc.readMem(0xd03a), 0xc9);
        // 30 008A
        gbc.setState(0xa933, 0x4442, 0xad40, 0x230b, 0x8cde, 0x5bee, 0x0, 0x1);
        gbc.writeMem(0xa933, { 0x30, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4442);
        EXPECT(gbc.pc(), 0xa8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa933), 0x30);
        EXPECT(gbc.readMem(0xa934), 0xb1);
        // 30 008B
        gbc.setState(0x524e, 0xf0b5, 0x2a50, 0x2c71, 0xe6f3, 0x1b37, 0x1, 0x0);
        gbc.writeMem(0x524e, { 0x30, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf0b5);
        EXPECT(gbc.pc(), 0x5250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 008D
        gbc.setState(0x67c2, 0xc329, 0x8050, 0x831b, 0x4ba2, 0x11da, 0x0, 0x0);
        gbc.writeMem(0x67c2, { 0x30, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc329);
        EXPECT(gbc.pc(), 0x67c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 008E
        gbc.setState(0x43af, 0x2f60, 0x8e00, 0x7495, 0x9399, 0xfb, 0x1, 0x1);
        gbc.writeMem(0x43af, { 0x30, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2f60);
        EXPECT(gbc.pc(), 0x43a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 008F
        gbc.setState(0x1cdc, 0x5c05, 0xaf30, 0x9019, 0x95cb, 0xa82d, 0x1, 0x1);
        gbc.writeMem(0x1cdc, { 0x30, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5c05);
        EXPECT(gbc.pc(), 0x1cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0090
        gbc.setState(0x2f32, 0x56bf, 0x99f0, 0x8068, 0x638b, 0xd7bd, 0x1, 0x1);
        gbc.writeMem(0x2f32, { 0x30, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x56bf);
        EXPECT(gbc.pc(), 0x2f34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0091
        gbc.setState(0xc7ec, 0x901c, 0xae20, 0xf553, 0x67fc, 0x48e4, 0x0, 0x0);
        gbc.writeMem(0xc7ec, { 0x30, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x901c);
        EXPECT(gbc.pc(), 0xc78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ec), 0x30);
        EXPECT(gbc.readMem(0xc7ed), 0x9d);
        // 30 0092
        gbc.setState(0xb2e7, 0xdde8, 0x4140, 0x7183, 0x44de, 0xf7d8, 0x1, 0x1);
        gbc.writeMem(0xb2e7, { 0x30, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xdde8);
        EXPECT(gbc.pc(), 0xb30f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e7), 0x30);
        EXPECT(gbc.readMem(0xb2e8), 0x26);
        // 30 0093
        gbc.setState(0x8ed4, 0x55f9, 0xd230, 0x1656, 0x9284, 0x4e11, 0x1, 0x1);
        gbc.writeMem(0x8ed4, { 0x30, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x55f9);
        EXPECT(gbc.pc(), 0x8ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed4), 0x30);
        EXPECT(gbc.readMem(0x8ed5), 0xe5);
        // 30 0094
        gbc.setState(0x56b8, 0x9d8e, 0x7160, 0x254e, 0x58bd, 0x59de, 0x0, 0x0);
        gbc.writeMem(0x56b8, { 0x30, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9d8e);
        EXPECT(gbc.pc(), 0x56b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0095
        gbc.setState(0xbd05, 0x311d, 0x74e0, 0xd502, 0xd2c, 0x7639, 0x0, 0x0);
        gbc.writeMem(0xbd05, { 0x30, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x311d);
        EXPECT(gbc.pc(), 0xbd3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd05), 0x30);
        EXPECT(gbc.readMem(0xbd06), 0x35);
        // 30 0096
        gbc.setState(0xda73, 0x5139, 0x6c50, 0xd516, 0xd03, 0x2bac, 0x1, 0x0);
        gbc.writeMem(0xda73, { 0x30, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5139);
        EXPECT(gbc.pc(), 0xda75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda73), 0x30);
        EXPECT(gbc.readMem(0xda74), 0x2);
        // 30 0097
        gbc.setState(0x39f, 0x31ec, 0x5790, 0x8680, 0xd4c8, 0x36c2, 0x0, 0x1);
        gbc.writeMem(0x39f, { 0x30, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x31ec);
        EXPECT(gbc.pc(), 0x3a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0098
        gbc.setState(0x9a55, 0xf47c, 0x8bc0, 0x79f2, 0xaa82, 0x6c93, 0x1, 0x0);
        gbc.writeMem(0x9a55, { 0x30, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf47c);
        EXPECT(gbc.pc(), 0x9a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a55), 0x30);
        EXPECT(gbc.readMem(0x9a56), 0xb5);
        // 30 0099
        gbc.setState(0xc389, 0x4b33, 0xbbf0, 0x5d8c, 0x7353, 0xfcc9, 0x1, 0x1);
        gbc.writeMem(0xc389, { 0x30, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4b33);
        EXPECT(gbc.pc(), 0xc38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc389), 0x30);
        EXPECT(gbc.readMem(0xc38a), 0xd8);
        // 30 009A
        gbc.setState(0x6d5c, 0xf429, 0x9c40, 0x2224, 0xb553, 0xfcad, 0x1, 0x0);
        gbc.writeMem(0x6d5c, { 0x30, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf429);
        EXPECT(gbc.pc(), 0x6d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 009B
        gbc.setState(0x7d6b, 0x5f95, 0x7550, 0xb9c1, 0x18e6, 0xfacf, 0x1, 0x1);
        gbc.writeMem(0x7d6b, { 0x30, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5f95);
        EXPECT(gbc.pc(), 0x7d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 009C
        gbc.setState(0x5644, 0xe5f9, 0x5690, 0x9e39, 0x3b42, 0xd60e, 0x0, 0x1);
        gbc.writeMem(0x5644, { 0x30, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe5f9);
        EXPECT(gbc.pc(), 0x5646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 009D
        gbc.setState(0xa096, 0x78ec, 0x29f0, 0xc3bd, 0x8762, 0x49e4, 0x0, 0x1);
        gbc.writeMem(0xa096, { 0x30, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x78ec);
        EXPECT(gbc.pc(), 0xa098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa096), 0x30);
        EXPECT(gbc.readMem(0xa097), 0x43);
        // 30 009E
        gbc.setState(0x49e1, 0x1b74, 0x9b10, 0xf05b, 0x4d61, 0x7d, 0x1, 0x1);
        gbc.writeMem(0x49e1, { 0x30, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1b74);
        EXPECT(gbc.pc(), 0x49e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 009F
        gbc.setState(0x45aa, 0x6a94, 0x4130, 0xbf8d, 0x82b4, 0x1236, 0x1, 0x0);
        gbc.writeMem(0x45aa, { 0x30, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6a94);
        EXPECT(gbc.pc(), 0x45ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00A1
        gbc.setState(0x472d, 0x7ee1, 0xce80, 0x7f2, 0x9c43, 0xac6b, 0x1, 0x0);
        gbc.writeMem(0x472d, { 0x30, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7ee1);
        EXPECT(gbc.pc(), 0x471b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00A2
        gbc.setState(0xb7b6, 0x73f9, 0x6fd0, 0x72e3, 0xf735, 0x49d5, 0x0, 0x0);
        gbc.writeMem(0xb7b6, { 0x30, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x73f9);
        EXPECT(gbc.pc(), 0xb7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b6), 0x30);
        EXPECT(gbc.readMem(0xb7b7), 0x76);
        // 30 00A3
        gbc.setState(0x4bc3, 0xa5e1, 0x5680, 0xf67, 0x646f, 0x13ff, 0x0, 0x0);
        gbc.writeMem(0x4bc3, { 0x30, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa5e1);
        EXPECT(gbc.pc(), 0x4bd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00A4
        gbc.setState(0x7942, 0xd552, 0xd3a0, 0xf23e, 0xdf35, 0xc217, 0x1, 0x1);
        gbc.writeMem(0x7942, { 0x30, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd552);
        EXPECT(gbc.pc(), 0x7956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00A5
        gbc.setState(0x7040, 0x7bff, 0xd730, 0xc4a9, 0x7133, 0x6933, 0x1, 0x1);
        gbc.writeMem(0x7040, { 0x30, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7bff);
        EXPECT(gbc.pc(), 0x7042);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00A6
        gbc.setState(0xbb86, 0xdb2d, 0xd810, 0x18b7, 0x9db8, 0xa3ad, 0x0, 0x1);
        gbc.writeMem(0xbb86, { 0x30, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdb2d);
        EXPECT(gbc.pc(), 0xbb88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb86), 0x30);
        EXPECT(gbc.readMem(0xbb87), 0xe1);
        // 30 00A7
        gbc.setState(0xa05c, 0x90b9, 0xedb0, 0xb605, 0x37aa, 0xb429, 0x1, 0x0);
        gbc.writeMem(0xa05c, { 0x30, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x90b9);
        EXPECT(gbc.pc(), 0xa05e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa05c), 0x30);
        EXPECT(gbc.readMem(0xa05d), 0x8e);
        // 30 00A8
        gbc.setState(0x1fda, 0x4d2b, 0x7460, 0xcbbc, 0x9852, 0x6ea9, 0x0, 0x1);
        gbc.writeMem(0x1fda, { 0x30, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4d2b);
        EXPECT(gbc.pc(), 0x1fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00A9
        gbc.setState(0x3883, 0x6fec, 0xf470, 0xba33, 0x287d, 0xb95b, 0x1, 0x0);
        gbc.writeMem(0x3883, { 0x30, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6fec);
        EXPECT(gbc.pc(), 0x3885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00AA
        gbc.setState(0x7b62, 0x98c0, 0x8490, 0x38e5, 0xc095, 0xe44c, 0x1, 0x1);
        gbc.writeMem(0x7b62, { 0x30, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x98c0);
        EXPECT(gbc.pc(), 0x7b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00AB
        gbc.setState(0x10c0, 0x631c, 0xbc50, 0x787, 0xb593, 0xf54, 0x1, 0x1);
        gbc.writeMem(0x10c0, { 0x30, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x631c);
        EXPECT(gbc.pc(), 0x10c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00AC
        gbc.setState(0xcafe, 0xe11a, 0xdcd0, 0xc5f3, 0x6670, 0xf8d0, 0x0, 0x1);
        gbc.writeMem(0xcafe, { 0x30, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe11a);
        EXPECT(gbc.pc(), 0xcb00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcafe), 0x30);
        EXPECT(gbc.readMem(0xcaff), 0xaa);
        // 30 00AD
        gbc.setState(0xa905, 0x8c8f, 0xe5c0, 0xbfca, 0xe7bc, 0x41c6, 0x0, 0x0);
        gbc.writeMem(0xa905, { 0x30, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8c8f);
        EXPECT(gbc.pc(), 0xa979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa905), 0x30);
        EXPECT(gbc.readMem(0xa906), 0x72);
        // 30 00AE
        gbc.setState(0x5059, 0xe6ee, 0x3770, 0x8f77, 0x2ccf, 0x4107, 0x1, 0x0);
        gbc.writeMem(0x5059, { 0x30, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe6ee);
        EXPECT(gbc.pc(), 0x505b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00AF
        gbc.setState(0x6ee, 0x5e0, 0xa800, 0xad65, 0xe390, 0x885a, 0x0, 0x0);
        gbc.writeMem(0x6ee, { 0x30, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5e0);
        EXPECT(gbc.pc(), 0x6ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00B0
        gbc.setState(0x1b69, 0x517b, 0xcd20, 0xdd70, 0x65d6, 0x4964, 0x1, 0x1);
        gbc.writeMem(0x1b69, { 0x30, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x517b);
        EXPECT(gbc.pc(), 0x1bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00B1
        gbc.setState(0x9313, 0xd18d, 0xaa40, 0xfcdf, 0x39f7, 0xa508, 0x1, 0x0);
        gbc.writeMem(0x9313, { 0x30, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd18d);
        EXPECT(gbc.pc(), 0x9350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9313), 0x30);
        EXPECT(gbc.readMem(0x9314), 0x3b);
        // 30 00B2
        gbc.setState(0x7ed5, 0x3c41, 0xe1e0, 0x25fa, 0x56d2, 0x3dda, 0x0, 0x1);
        gbc.writeMem(0x7ed5, { 0x30, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3c41);
        EXPECT(gbc.pc(), 0x7ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00B3
        gbc.setState(0x458c, 0x9d3, 0x2fe0, 0x9582, 0x9a9e, 0xf226, 0x0, 0x1);
        gbc.writeMem(0x458c, { 0x30, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9d3);
        EXPECT(gbc.pc(), 0x453b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00B4
        gbc.setState(0xeb1d, 0x1bd3, 0xaaf0, 0x9228, 0xd8de, 0xb49c, 0x0, 0x1);
        gbc.writeMem(0xeb1d, { 0x30, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1bd3);
        EXPECT(gbc.pc(), 0xeb1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1d), 0x30);
        EXPECT(gbc.readMem(0xeb1e), 0x17);
        // 30 00B5
        gbc.setState(0x2213, 0xa32c, 0xd8c0, 0x123e, 0x499b, 0x8e65, 0x1, 0x0);
        gbc.writeMem(0x2213, { 0x30, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa32c);
        EXPECT(gbc.pc(), 0x227a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00B6
        gbc.setState(0x7ce2, 0x883f, 0x7cb0, 0x6406, 0xa591, 0xf30a, 0x0, 0x1);
        gbc.writeMem(0x7ce2, { 0x30, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x883f);
        EXPECT(gbc.pc(), 0x7ce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00B7
        gbc.setState(0x36de, 0xce53, 0x9990, 0xa6d8, 0xf02a, 0x478a, 0x0, 0x1);
        gbc.writeMem(0x36de, { 0x30, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xce53);
        EXPECT(gbc.pc(), 0x36e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00B8
        gbc.setState(0x302e, 0xd64f, 0x7a70, 0xe522, 0xaec2, 0x6383, 0x1, 0x1);
        gbc.writeMem(0x302e, { 0x30, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd64f);
        EXPECT(gbc.pc(), 0x3030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00B9
        gbc.setState(0x6511, 0x77e9, 0x94d0, 0xb253, 0xaf3c, 0xd8b3, 0x1, 0x1);
        gbc.writeMem(0x6511, { 0x30, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x77e9);
        EXPECT(gbc.pc(), 0x6513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00BB
        gbc.setState(0x5105, 0x80cd, 0xc120, 0xb4df, 0x217e, 0xfee4, 0x1, 0x0);
        gbc.writeMem(0x5105, { 0x30, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x80cd);
        EXPECT(gbc.pc(), 0x50bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00BC
        gbc.setState(0x75e5, 0x76dd, 0xa670, 0x1f40, 0x5892, 0x14b5, 0x0, 0x1);
        gbc.writeMem(0x75e5, { 0x30, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x76dd);
        EXPECT(gbc.pc(), 0x75e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00BD
        gbc.setState(0x7b73, 0x5588, 0xe5a0, 0x12fe, 0x2380, 0x820f, 0x1, 0x0);
        gbc.writeMem(0x7b73, { 0x30, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5588);
        EXPECT(gbc.pc(), 0x7b44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00BE
        gbc.setState(0xe676, 0x8cea, 0x68a0, 0x53c9, 0x16fa, 0x59c7, 0x1, 0x0);
        gbc.writeMem(0xe676, { 0x30, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8cea);
        EXPECT(gbc.pc(), 0xe6d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe676), 0x30);
        EXPECT(gbc.readMem(0xe677), 0x59);
        // 30 00BF
        gbc.setState(0x6f3e, 0xa7af, 0xf820, 0xd32f, 0x67bf, 0x561a, 0x1, 0x0);
        gbc.writeMem(0x6f3e, { 0x30, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa7af);
        EXPECT(gbc.pc(), 0x6f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00C0
        gbc.setState(0x5f47, 0x5354, 0xef80, 0xf28f, 0x347e, 0x2b09, 0x1, 0x1);
        gbc.writeMem(0x5f47, { 0x30, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5354);
        EXPECT(gbc.pc(), 0x5f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00C1
        gbc.setState(0x3729, 0xfdcd, 0x6a90, 0xd527, 0xe083, 0x73ed, 0x0, 0x1);
        gbc.writeMem(0x3729, { 0x30, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfdcd);
        EXPECT(gbc.pc(), 0x372b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00C2
        gbc.setState(0x9b56, 0x565d, 0xcbe0, 0xbe4c, 0x7499, 0x7f21, 0x0, 0x0);
        gbc.writeMem(0x9b56, { 0x30, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x565d);
        EXPECT(gbc.pc(), 0x9af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b56), 0x30);
        EXPECT(gbc.readMem(0x9b57), 0x9e);
        // 30 00C3
        gbc.setState(0x1246, 0x90c6, 0x3a0, 0xb635, 0x7404, 0x5769, 0x0, 0x1);
        gbc.writeMem(0x1246, { 0x30, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x90c6);
        EXPECT(gbc.pc(), 0x1209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00C4
        gbc.setState(0xd1e3, 0x478e, 0x7820, 0xb5a1, 0x617, 0xd2f2, 0x1, 0x0);
        gbc.writeMem(0xd1e3, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x478e);
        EXPECT(gbc.pc(), 0xd18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e3), 0x30);
        EXPECT(gbc.readMem(0xd1e4), 0xa6);
        // 30 00C5
        gbc.setState(0x7bc8, 0xc8d5, 0xc470, 0x2842, 0xfa8b, 0x1950, 0x0, 0x0);
        gbc.writeMem(0x7bc8, { 0x30, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc8d5);
        EXPECT(gbc.pc(), 0x7bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00C6
        gbc.setState(0x8cc, 0x4d63, 0x86e0, 0x4d4, 0xece5, 0x238a, 0x1, 0x1);
        gbc.writeMem(0x8cc, { 0x30, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4d63);
        EXPECT(gbc.pc(), 0x89c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00C7
        gbc.setState(0x20d4, 0xbd7b, 0xb970, 0x26ac, 0x9fa1, 0x8cb8, 0x1, 0x0);
        gbc.writeMem(0x20d4, { 0x30, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbd7b);
        EXPECT(gbc.pc(), 0x20d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00C8
        gbc.setState(0xbc31, 0x1e8e, 0x2e10, 0x1a05, 0xdf2d, 0x2af5, 0x0, 0x1);
        gbc.writeMem(0xbc31, { 0x30, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1e8e);
        EXPECT(gbc.pc(), 0xbc33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc31), 0x30);
        EXPECT(gbc.readMem(0xbc32), 0xec);
        // 30 00C9
        gbc.setState(0x5c5, 0x1b6d, 0xf270, 0x1dae, 0x251c, 0xb819, 0x0, 0x1);
        gbc.writeMem(0x5c5, { 0x30, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1b6d);
        EXPECT(gbc.pc(), 0x5c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00CA
        gbc.setState(0x4cc5, 0xae87, 0x47a0, 0x9850, 0xc6cf, 0xf76, 0x0, 0x0);
        gbc.writeMem(0x4cc5, { 0x30, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xae87);
        EXPECT(gbc.pc(), 0x4d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00CB
        gbc.setState(0x93d9, 0xbca1, 0x7b20, 0x6b55, 0xf28d, 0x8253, 0x0, 0x0);
        gbc.writeMem(0x93d9, { 0x30, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbca1);
        EXPECT(gbc.pc(), 0x9418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d9), 0x30);
        EXPECT(gbc.readMem(0x93da), 0x3d);
        // 30 00CC
        gbc.setState(0x93f8, 0x8a08, 0xa2c0, 0x1a62, 0xdc69, 0x89dd, 0x1, 0x1);
        gbc.writeMem(0x93f8, { 0x30, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8a08);
        EXPECT(gbc.pc(), 0x93d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f8), 0x30);
        EXPECT(gbc.readMem(0x93f9), 0xdf);
        // 30 00CD
        gbc.setState(0xd3ed, 0xd996, 0xdc90, 0x7b01, 0x2dd5, 0xfb6, 0x1, 0x0);
        gbc.writeMem(0xd3ed, { 0x30, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd996);
        EXPECT(gbc.pc(), 0xd3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ed), 0x30);
        EXPECT(gbc.readMem(0xd3ee), 0xe0);
        // 30 00CE
        gbc.setState(0x39fa, 0x1135, 0x7ba0, 0x60c4, 0x8b89, 0x7582, 0x0, 0x0);
        gbc.writeMem(0x39fa, { 0x30, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1135);
        EXPECT(gbc.pc(), 0x3a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00CF
        gbc.setState(0x319a, 0x32e8, 0x9c70, 0x61bc, 0x3702, 0xf6ca, 0x0, 0x0);
        gbc.writeMem(0x319a, { 0x30, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x32e8);
        EXPECT(gbc.pc(), 0x319c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00D0
        gbc.setState(0xb64b, 0x4de5, 0x1b30, 0x831d, 0x4f49, 0xf365, 0x0, 0x0);
        gbc.writeMem(0xb64b, { 0x30, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4de5);
        EXPECT(gbc.pc(), 0xb64d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb64b), 0x30);
        EXPECT(gbc.readMem(0xb64c), 0x13);
        // 30 00D1
        gbc.setState(0x3d5a, 0x2e3e, 0x9330, 0xb5e4, 0xcb09, 0x705c, 0x1, 0x0);
        gbc.writeMem(0x3d5a, { 0x30, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2e3e);
        EXPECT(gbc.pc(), 0x3d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00D3
        gbc.setState(0x7d77, 0x7eb5, 0x5ff0, 0xb00f, 0x1fe8, 0xeb86, 0x0, 0x1);
        gbc.writeMem(0x7d77, { 0x30, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7eb5);
        EXPECT(gbc.pc(), 0x7d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00D4
        gbc.setState(0xb985, 0x5d6d, 0x4140, 0xa636, 0xc366, 0xb4c2, 0x1, 0x0);
        gbc.writeMem(0xb985, { 0x30, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5d6d);
        EXPECT(gbc.pc(), 0xb91d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb985), 0x30);
        EXPECT(gbc.readMem(0xb986), 0x96);
        // 30 00D5
        gbc.setState(0x69aa, 0xb8a4, 0xb40, 0x1c81, 0x2efe, 0xf279, 0x1, 0x1);
        gbc.writeMem(0x69aa, { 0x30, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb8a4);
        EXPECT(gbc.pc(), 0x6a03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00D6
        gbc.setState(0xa42c, 0x2c92, 0xec20, 0xb40, 0x37bb, 0x930a, 0x0, 0x1);
        gbc.writeMem(0xa42c, { 0x30, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2c92);
        EXPECT(gbc.pc(), 0xa3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa42c), 0x30);
        EXPECT(gbc.readMem(0xa42d), 0xbf);
        // 30 00D7
        gbc.setState(0x51ee, 0xcb81, 0x7280, 0x6abe, 0xae4c, 0xc6e6, 0x0, 0x0);
        gbc.writeMem(0x51ee, { 0x30, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcb81);
        EXPECT(gbc.pc(), 0x519c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00D9
        gbc.setState(0x6cac, 0x4b7c, 0x1a70, 0x4a, 0x15c9, 0xa19b, 0x0, 0x0);
        gbc.writeMem(0x6cac, { 0x30, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4b7c);
        EXPECT(gbc.pc(), 0x6cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00DA
        gbc.setState(0x8c32, 0x28a8, 0x9d0, 0x5cae, 0xc1e5, 0x76e7, 0x1, 0x1);
        gbc.writeMem(0x8c32, { 0x30, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x28a8);
        EXPECT(gbc.pc(), 0x8c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c32), 0x30);
        EXPECT(gbc.readMem(0x8c33), 0xca);
        // 30 00DD
        gbc.setState(0xd4d1, 0xafbe, 0xe0f0, 0x4a4, 0xd0b9, 0xaad2, 0x1, 0x0);
        gbc.writeMem(0xd4d1, { 0x30, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xafbe);
        EXPECT(gbc.pc(), 0xd4d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d1), 0x30);
        EXPECT(gbc.readMem(0xd4d2), 0xc1);
        // 30 00DE
        gbc.setState(0x8ba4, 0xdff0, 0x3ce0, 0xf57e, 0xf12d, 0x2b29, 0x1, 0x0);
        gbc.writeMem(0x8ba4, { 0x30, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdff0);
        EXPECT(gbc.pc(), 0x8b8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba4), 0x30);
        EXPECT(gbc.readMem(0x8ba5), 0xe5);
        // 30 00DF
        gbc.setState(0xe1c, 0xb7f9, 0xf50, 0xd144, 0x4051, 0xdd3d, 0x1, 0x0);
        gbc.writeMem(0xe1c, { 0x30, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb7f9);
        EXPECT(gbc.pc(), 0xe1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00E0
        gbc.setState(0x6c2b, 0x3f5, 0x2e70, 0xa49b, 0x941f, 0x866d, 0x0, 0x1);
        gbc.writeMem(0x6c2b, { 0x30, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3f5);
        EXPECT(gbc.pc(), 0x6c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00E1
        gbc.setState(0x3a6f, 0xcc9b, 0x1880, 0xac7c, 0xfe42, 0xc628, 0x0, 0x0);
        gbc.writeMem(0x3a6f, { 0x30, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcc9b);
        EXPECT(gbc.pc(), 0x3a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00E2
        gbc.setState(0x4c88, 0x1423, 0xd0, 0x434d, 0xb071, 0x336b, 0x0, 0x1);
        gbc.writeMem(0x4c88, { 0x30, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1423);
        EXPECT(gbc.pc(), 0x4c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00E3
        gbc.setState(0x6a43, 0x9a5, 0x40e0, 0x9e0e, 0xfa56, 0x3c86, 0x1, 0x1);
        gbc.writeMem(0x6a43, { 0x30, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9a5);
        EXPECT(gbc.pc(), 0x69d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00E4
        gbc.setState(0xba8c, 0x9eda, 0x6ef0, 0x50b0, 0x68ac, 0xb9b2, 0x0, 0x0);
        gbc.writeMem(0xba8c, { 0x30, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9eda);
        EXPECT(gbc.pc(), 0xba8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8c), 0x30);
        EXPECT(gbc.readMem(0xba8d), 0x83);
        // 30 00E5
        gbc.setState(0x9e2a, 0xfb6a, 0xaf80, 0x9e55, 0xf973, 0x11fa, 0x1, 0x1);
        gbc.writeMem(0x9e2a, { 0x30, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfb6a);
        EXPECT(gbc.pc(), 0x9e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e2a), 0x30);
        EXPECT(gbc.readMem(0x9e2b), 0x3d);
        // 30 00E6
        gbc.setState(0x2940, 0x965e, 0x4790, 0x11ea, 0x3bc1, 0x562f, 0x1, 0x1);
        gbc.writeMem(0x2940, { 0x30, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x965e);
        EXPECT(gbc.pc(), 0x2942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00E7
        gbc.setState(0x6676, 0xabd0, 0xc8f0, 0xb47a, 0x6da, 0x456e, 0x0, 0x1);
        gbc.writeMem(0x6676, { 0x30, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xabd0);
        EXPECT(gbc.pc(), 0x6678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00E8
        gbc.setState(0x9365, 0x3fd5, 0xe3c0, 0xb2aa, 0x882c, 0x8dc1, 0x1, 0x0);
        gbc.writeMem(0x9365, { 0x30, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3fd5);
        EXPECT(gbc.pc(), 0x93d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9365), 0x30);
        EXPECT(gbc.readMem(0x9366), 0x71);
        // 30 00E9
        gbc.setState(0xd855, 0xba9b, 0x2a40, 0x5a70, 0x7bb8, 0x5f75, 0x1, 0x1);
        gbc.writeMem(0xd855, { 0x30, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xba9b);
        EXPECT(gbc.pc(), 0xd882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd855), 0x30);
        EXPECT(gbc.readMem(0xd856), 0x2b);
        // 30 00EA
        gbc.setState(0x2222, 0xa16a, 0x26a0, 0x6d1d, 0x61d3, 0x44d0, 0x1, 0x1);
        gbc.writeMem(0x2222, { 0x30, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa16a);
        EXPECT(gbc.pc(), 0x2214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00EB
        gbc.setState(0x6e38, 0xd855, 0x80, 0x27a3, 0x6bbb, 0x5e4a, 0x0, 0x0);
        gbc.writeMem(0x6e38, { 0x30, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd855);
        EXPECT(gbc.pc(), 0x6dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00EC
        gbc.setState(0xd47c, 0xae14, 0xa750, 0x4d6c, 0x5d65, 0xf2f5, 0x0, 0x0);
        gbc.writeMem(0xd47c, { 0x30, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xae14);
        EXPECT(gbc.pc(), 0xd47e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47c), 0x30);
        EXPECT(gbc.readMem(0xd47d), 0xe0);
        // 30 00ED
        gbc.setState(0x83b3, 0xbde4, 0xa5a0, 0x6b79, 0x3974, 0x25d6, 0x0, 0x1);
        gbc.writeMem(0x83b3, { 0x30, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbde4);
        EXPECT(gbc.pc(), 0x8415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b3), 0x30);
        EXPECT(gbc.readMem(0x83b4), 0x60);
        // 30 00EE
        gbc.setState(0x7eaf, 0x8c77, 0x91c0, 0xaf8e, 0xff81, 0x3126, 0x1, 0x0);
        gbc.writeMem(0x7eaf, { 0x30, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8c77);
        EXPECT(gbc.pc(), 0x7ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00EF
        gbc.setState(0xe097, 0xb59e, 0x6e60, 0x8f76, 0x6187, 0x1317, 0x1, 0x1);
        gbc.writeMem(0xe097, { 0x30, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb59e);
        EXPECT(gbc.pc(), 0xe0ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe097), 0x30);
        EXPECT(gbc.readMem(0xe098), 0x31);
        // 30 00F0
        gbc.setState(0x2da3, 0x963d, 0xa090, 0xaa68, 0x5f9b, 0x971f, 0x1, 0x1);
        gbc.writeMem(0x2da3, { 0x30, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x963d);
        EXPECT(gbc.pc(), 0x2da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00F1
        gbc.setState(0x1d7, 0xcb60, 0x75b0, 0x7431, 0x987d, 0x8225, 0x0, 0x1);
        gbc.writeMem(0x1d7, { 0x30, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcb60);
        EXPECT(gbc.pc(), 0x1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00F2
        gbc.setState(0x8fc7, 0x3a8, 0x4b90, 0xbd0b, 0x212, 0x8a0a, 0x0, 0x1);
        gbc.writeMem(0x8fc7, { 0x30, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3a8);
        EXPECT(gbc.pc(), 0x8fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc7), 0x30);
        EXPECT(gbc.readMem(0x8fc8), 0xfe);
        // 30 00F3
        gbc.setState(0x8f13, 0xcd2b, 0x49c0, 0xe754, 0x5414, 0x8d38, 0x1, 0x0);
        gbc.writeMem(0x8f13, { 0x30, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcd2b);
        EXPECT(gbc.pc(), 0x8f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f13), 0x30);
        EXPECT(gbc.readMem(0x8f14), 0xf1);
        // 30 00F4
        gbc.setState(0x92a, 0x6737, 0xd250, 0x590a, 0x7669, 0x7b83, 0x1, 0x0);
        gbc.writeMem(0x92a, { 0x30, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6737);
        EXPECT(gbc.pc(), 0x92c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00F5
        gbc.setState(0x7593, 0x3881, 0x4ee0, 0xbec1, 0x9222, 0xbdb3, 0x0, 0x1);
        gbc.writeMem(0x7593, { 0x30, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3881);
        EXPECT(gbc.pc(), 0x75b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00F6
        gbc.setState(0x2eba, 0x1504, 0xf890, 0x6793, 0xca07, 0xdcc5, 0x0, 0x0);
        gbc.writeMem(0x2eba, { 0x30, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1504);
        EXPECT(gbc.pc(), 0x2ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00F7
        gbc.setState(0x9d6, 0x6b18, 0x4d30, 0xc25f, 0x2923, 0x9df7, 0x1, 0x0);
        gbc.writeMem(0x9d6, { 0x30, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6b18);
        EXPECT(gbc.pc(), 0x9d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 00F8
        gbc.setState(0x35c9, 0x3439, 0xefd0, 0x4e23, 0xc189, 0x160b, 0x0, 0x0);
        gbc.writeMem(0x35c9, { 0x30, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3439);
        EXPECT(gbc.pc(), 0x35cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00F9
        gbc.setState(0x6122, 0x81c1, 0x18d0, 0x3236, 0x716b, 0x3164, 0x0, 0x1);
        gbc.writeMem(0x6122, { 0x30, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x81c1);
        EXPECT(gbc.pc(), 0x6124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 00FA
        gbc.setState(0x42c6, 0x7f7f, 0x9a40, 0x9f38, 0x1dd2, 0x6441, 0x1, 0x0);
        gbc.writeMem(0x42c6, { 0x30, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7f7f);
        EXPECT(gbc.pc(), 0x4317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 00FC
        gbc.setState(0xad47, 0xe0a, 0xfd10, 0x55fb, 0xfb40, 0x2190, 0x0, 0x1);
        gbc.writeMem(0xad47, { 0x30, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe0a);
        EXPECT(gbc.pc(), 0xad49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad47), 0x30);
        EXPECT(gbc.readMem(0xad48), 0x16);
        // 30 00FD
        gbc.setState(0x8ca2, 0xbf7, 0xd820, 0x709c, 0x3a85, 0x84c8, 0x0, 0x1);
        gbc.writeMem(0x8ca2, { 0x30, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbf7);
        EXPECT(gbc.pc(), 0x8cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca2), 0x30);
        EXPECT(gbc.readMem(0x8ca3), 0x10);
        // 30 00FE
        gbc.setState(0x710f, 0x771b, 0xe2a0, 0xe425, 0x6de2, 0x6245, 0x0, 0x1);
        gbc.writeMem(0x710f, { 0x30, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x771b);
        EXPECT(gbc.pc(), 0x70e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 00FF
        gbc.setState(0xe92f, 0x39da, 0xbe20, 0x8b11, 0x3267, 0xe647, 0x0, 0x0);
        gbc.writeMem(0xe92f, { 0x30, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x39da);
        EXPECT(gbc.pc(), 0xe980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe92f), 0x30);
        EXPECT(gbc.readMem(0xe930), 0x4f);
        // 30 0101
        gbc.setState(0xb991, 0x5692, 0xe150, 0x2b1e, 0x304a, 0x57f2, 0x0, 0x1);
        gbc.writeMem(0xb991, { 0x30, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5692);
        EXPECT(gbc.pc(), 0xb993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb991), 0x30);
        EXPECT(gbc.readMem(0xb992), 0x22);
        // 30 0102
        gbc.setState(0x9d8, 0xc5cf, 0x5400, 0x8cdd, 0x6330, 0x4846, 0x0, 0x0);
        gbc.writeMem(0x9d8, { 0x30, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc5cf);
        EXPECT(gbc.pc(), 0x987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0103
        gbc.setState(0x5fc8, 0xa402, 0x3200, 0xa671, 0x8cbe, 0x6bf6, 0x1, 0x0);
        gbc.writeMem(0x5fc8, { 0x30, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa402);
        EXPECT(gbc.pc(), 0x5fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0104
        gbc.setState(0x2636, 0x5af0, 0xd0b0, 0xe9da, 0x5d55, 0x9a95, 0x0, 0x0);
        gbc.writeMem(0x2636, { 0x30, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5af0);
        EXPECT(gbc.pc(), 0x2638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0105
        gbc.setState(0x8de9, 0xd222, 0x6750, 0xa7f, 0x66c2, 0xdc00, 0x1, 0x1);
        gbc.writeMem(0x8de9, { 0x30, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd222);
        EXPECT(gbc.pc(), 0x8deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de9), 0x30);
        EXPECT(gbc.readMem(0x8dea), 0x22);
        // 30 0106
        gbc.setState(0x6440, 0x4aef, 0x2510, 0xfab0, 0x6d1e, 0x1728, 0x1, 0x0);
        gbc.writeMem(0x6440, { 0x30, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4aef);
        EXPECT(gbc.pc(), 0x6442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0107
        gbc.setState(0xd231, 0x1b56, 0x8b50, 0x3b86, 0x6019, 0x3a20, 0x0, 0x0);
        gbc.writeMem(0xd231, { 0x30, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1b56);
        EXPECT(gbc.pc(), 0xd233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd231), 0x30);
        EXPECT(gbc.readMem(0xd232), 0xb1);
        // 30 0108
        gbc.setState(0x159e, 0x91c6, 0x9570, 0x44a6, 0xedd5, 0x639f, 0x1, 0x1);
        gbc.writeMem(0x159e, { 0x30, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x91c6);
        EXPECT(gbc.pc(), 0x15a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0109
        gbc.setState(0x6559, 0x9d88, 0xe560, 0x34a9, 0x355f, 0x8418, 0x0, 0x0);
        gbc.writeMem(0x6559, { 0x30, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9d88);
        EXPECT(gbc.pc(), 0x6550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 010A
        gbc.setState(0xbe8e, 0x6c74, 0x8f20, 0xdc09, 0x4fd3, 0x9a27, 0x0, 0x0);
        gbc.writeMem(0xbe8e, { 0x30, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6c74);
        EXPECT(gbc.pc(), 0xbea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8e), 0x30);
        EXPECT(gbc.readMem(0xbe8f), 0x19);
        // 30 010B
        gbc.setState(0xd5c3, 0xe07e, 0xed80, 0x7244, 0x4b81, 0xeba5, 0x1, 0x0);
        gbc.writeMem(0xd5c3, { 0x30, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe07e);
        EXPECT(gbc.pc(), 0xd631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c3), 0x30);
        EXPECT(gbc.readMem(0xd5c4), 0x6c);
        // 30 010C
        gbc.setState(0xaf63, 0xe92f, 0x3240, 0x4932, 0x965f, 0x82e3, 0x1, 0x0);
        gbc.writeMem(0xaf63, { 0x30, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe92f);
        EXPECT(gbc.pc(), 0xaee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf63), 0x30);
        EXPECT(gbc.readMem(0xaf64), 0x81);
        // 30 010D
        gbc.setState(0x8b66, 0x3c6e, 0x20c0, 0xf25d, 0x6c2d, 0xe0c, 0x0, 0x1);
        gbc.writeMem(0x8b66, { 0x30, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3c6e);
        EXPECT(gbc.pc(), 0x8b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b66), 0x30);
        EXPECT(gbc.readMem(0x8b67), 0xb);
        // 30 010E
        gbc.setState(0x2e30, 0x8a3e, 0xc340, 0x3b8a, 0x595e, 0xce66, 0x1, 0x1);
        gbc.writeMem(0x2e30, { 0x30, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8a3e);
        EXPECT(gbc.pc(), 0x2e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 010F
        gbc.setState(0x9bdd, 0x3074, 0xdcb0, 0x7bf6, 0x5c64, 0xbd29, 0x0, 0x0);
        gbc.writeMem(0x9bdd, { 0x30, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3074);
        EXPECT(gbc.pc(), 0x9bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bdd), 0x30);
        EXPECT(gbc.readMem(0x9bde), 0xba);
        // 30 0110
        gbc.setState(0x9cd8, 0xf424, 0x800, 0xe82c, 0xf142, 0x3902, 0x1, 0x1);
        gbc.writeMem(0x9cd8, { 0x30, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf424);
        EXPECT(gbc.pc(), 0x9cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd8), 0x30);
        EXPECT(gbc.readMem(0x9cd9), 0x24);
        // 30 0111
        gbc.setState(0x73f1, 0x7cc1, 0x1d70, 0xec4a, 0x3c08, 0x3f3a, 0x1, 0x0);
        gbc.writeMem(0x73f1, { 0x30, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7cc1);
        EXPECT(gbc.pc(), 0x73f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0112
        gbc.setState(0xcbaa, 0x15aa, 0x6350, 0x6913, 0xdb2d, 0x4d22, 0x1, 0x0);
        gbc.writeMem(0xcbaa, { 0x30, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x15aa);
        EXPECT(gbc.pc(), 0xcbac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbaa), 0x30);
        EXPECT(gbc.readMem(0xcbab), 0xf1);
        // 30 0113
        gbc.setState(0x5414, 0x576e, 0x6b90, 0x1775, 0x2729, 0x38e3, 0x0, 0x0);
        gbc.writeMem(0x5414, { 0x30, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x576e);
        EXPECT(gbc.pc(), 0x5416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0114
        gbc.setState(0xc2e1, 0x3350, 0x4e80, 0xd11, 0x6dba, 0xe27a, 0x1, 0x0);
        gbc.writeMem(0xc2e1, { 0x30, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3350);
        EXPECT(gbc.pc(), 0xc288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e1), 0x30);
        EXPECT(gbc.readMem(0xc2e2), 0xa5);
        // 30 0115
        gbc.setState(0x3e4a, 0x4564, 0x3760, 0x75fc, 0xfacf, 0x6e75, 0x1, 0x0);
        gbc.writeMem(0x3e4a, { 0x30, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4564);
        EXPECT(gbc.pc(), 0x3eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0116
        gbc.setState(0xf3c, 0x53d5, 0x19e0, 0xa922, 0xb0de, 0xe9ca, 0x1, 0x0);
        gbc.writeMem(0xf3c, { 0x30, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x53d5);
        EXPECT(gbc.pc(), 0xf3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0117
        gbc.setState(0xc957, 0x3cc1, 0x3820, 0x6383, 0x8956, 0x2080, 0x1, 0x1);
        gbc.writeMem(0xc957, { 0x30, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3cc1);
        EXPECT(gbc.pc(), 0xc9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc957), 0x30);
        EXPECT(gbc.readMem(0xc958), 0x59);
        // 30 0118
        gbc.setState(0xa97, 0xad5f, 0xa3e0, 0x266e, 0x8b54, 0x1b8b, 0x0, 0x0);
        gbc.writeMem(0xa97, { 0x30, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xad5f);
        EXPECT(gbc.pc(), 0xab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0119
        gbc.setState(0x59ed, 0x483e, 0x82f0, 0x534b, 0xd37c, 0x49c3, 0x1, 0x1);
        gbc.writeMem(0x59ed, { 0x30, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x483e);
        EXPECT(gbc.pc(), 0x59ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 011A
        gbc.setState(0x3f4, 0xe940, 0xcb0, 0xbb76, 0xca59, 0xe803, 0x1, 0x0);
        gbc.writeMem(0x3f4, { 0x30, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe940);
        EXPECT(gbc.pc(), 0x3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 011C
        gbc.setState(0x204d, 0xdef, 0xde0, 0x3a2d, 0xbafe, 0x25a2, 0x0, 0x1);
        gbc.writeMem(0x204d, { 0x30, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xdef);
        EXPECT(gbc.pc(), 0x2013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 011D
        gbc.setState(0x86c3, 0xecc6, 0xde70, 0x19a4, 0x236b, 0x519d, 0x0, 0x1);
        gbc.writeMem(0x86c3, { 0x30, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xecc6);
        EXPECT(gbc.pc(), 0x86c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c3), 0x30);
        EXPECT(gbc.readMem(0x86c4), 0xb);
        // 30 011E
        gbc.setState(0xc27b, 0x58fb, 0x4eb0, 0x1271, 0x7b7d, 0x8d9a, 0x0, 0x1);
        gbc.writeMem(0xc27b, { 0x30, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x58fb);
        EXPECT(gbc.pc(), 0xc27d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc27b), 0x30);
        EXPECT(gbc.readMem(0xc27c), 0x7f);
        // 30 011F
        gbc.setState(0x85be, 0xf7b0, 0x6a60, 0xe3e, 0x4615, 0x7dc0, 0x0, 0x1);
        gbc.writeMem(0x85be, { 0x30, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf7b0);
        EXPECT(gbc.pc(), 0x85c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85be), 0x30);
        EXPECT(gbc.readMem(0x85bf), 0x2);
        // 30 0120
        gbc.setState(0xfaf, 0xeba4, 0x9890, 0x399b, 0xbb3a, 0xb918, 0x0, 0x0);
        gbc.writeMem(0xfaf, { 0x30, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xeba4);
        EXPECT(gbc.pc(), 0xfb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0121
        gbc.setState(0x336e, 0x12b8, 0xbf0, 0x6b32, 0x70aa, 0x2141, 0x0, 0x1);
        gbc.writeMem(0x336e, { 0x30, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x12b8);
        EXPECT(gbc.pc(), 0x3370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0122
        gbc.setState(0xba0d, 0xb903, 0x7d10, 0xba4b, 0x566d, 0xbd7b, 0x0, 0x1);
        gbc.writeMem(0xba0d, { 0x30, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb903);
        EXPECT(gbc.pc(), 0xba0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0d), 0x30);
        EXPECT(gbc.readMem(0xba0e), 0xe);
        // 30 0123
        gbc.setState(0xbf73, 0x2905, 0x5560, 0xaef4, 0xee87, 0xc836, 0x0, 0x1);
        gbc.writeMem(0xbf73, { 0x30, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2905);
        EXPECT(gbc.pc(), 0xbf35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf73), 0x30);
        EXPECT(gbc.readMem(0xbf74), 0xc0);
        // 30 0124
        gbc.setState(0xa0f0, 0xcaef, 0x37b0, 0x622c, 0x5e54, 0xb116, 0x0, 0x1);
        gbc.writeMem(0xa0f0, { 0x30, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xcaef);
        EXPECT(gbc.pc(), 0xa0f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f0), 0x30);
        EXPECT(gbc.readMem(0xa0f1), 0x40);
        // 30 0125
        gbc.setState(0xd832, 0x1f38, 0xc60, 0xcf0d, 0x1bdd, 0x81bb, 0x1, 0x0);
        gbc.writeMem(0xd832, { 0x30, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1f38);
        EXPECT(gbc.pc(), 0xd80e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd832), 0x30);
        EXPECT(gbc.readMem(0xd833), 0xda);
        // 30 0126
        gbc.setState(0x20aa, 0x8312, 0xa170, 0x1f61, 0x68d8, 0x8be6, 0x1, 0x0);
        gbc.writeMem(0x20aa, { 0x30, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8312);
        EXPECT(gbc.pc(), 0x20ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0127
        gbc.setState(0xa2f2, 0x11f4, 0x8fe0, 0x11ef, 0x1428, 0x908a, 0x0, 0x1);
        gbc.writeMem(0xa2f2, { 0x30, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x11f4);
        EXPECT(gbc.pc(), 0xa2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f2), 0x30);
        EXPECT(gbc.readMem(0xa2f3), 0xeb);
        // 30 0128
        gbc.setState(0xab71, 0x63f1, 0xc7e0, 0x8bbc, 0xa31, 0xd3fd, 0x1, 0x1);
        gbc.writeMem(0xab71, { 0x30, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x63f1);
        EXPECT(gbc.pc(), 0xaba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab71), 0x30);
        EXPECT(gbc.readMem(0xab72), 0x36);
        // 30 0129
        gbc.setState(0x9be0, 0x974e, 0x4d0, 0x325a, 0xa903, 0x72a5, 0x1, 0x1);
        gbc.writeMem(0x9be0, { 0x30, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x974e);
        EXPECT(gbc.pc(), 0x9be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9be0), 0x30);
        EXPECT(gbc.readMem(0x9be1), 0xf0);
        // 30 012A
        gbc.setState(0x245b, 0xc145, 0x35e0, 0xecf, 0xd3ac, 0x294b, 0x0, 0x0);
        gbc.writeMem(0x245b, { 0x30, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc145);
        EXPECT(gbc.pc(), 0x2411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 012B
        gbc.setState(0xb586, 0x37f8, 0x35e0, 0xaa04, 0x6e39, 0x4364, 0x0, 0x1);
        gbc.writeMem(0xb586, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x37f8);
        EXPECT(gbc.pc(), 0xb52e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb586), 0x30);
        EXPECT(gbc.readMem(0xb587), 0xa6);
        // 30 012C
        gbc.setState(0xa656, 0x4bae, 0x4420, 0x2ab4, 0xd53, 0xf3a2, 0x1, 0x1);
        gbc.writeMem(0xa656, { 0x30, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4bae);
        EXPECT(gbc.pc(), 0xa66f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa656), 0x30);
        EXPECT(gbc.readMem(0xa657), 0x17);
        // 30 012D
        gbc.setState(0x7e87, 0x727f, 0xab10, 0xf1a5, 0xf4a, 0xbb8f, 0x0, 0x1);
        gbc.writeMem(0x7e87, { 0x30, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x727f);
        EXPECT(gbc.pc(), 0x7e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 012E
        gbc.setState(0xcc59, 0x63f, 0xbb60, 0xc179, 0x7d38, 0x2fb8, 0x0, 0x0);
        gbc.writeMem(0xcc59, { 0x30, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x63f);
        EXPECT(gbc.pc(), 0xcc00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc59), 0x30);
        EXPECT(gbc.readMem(0xcc5a), 0xa5);
        // 30 012F
        gbc.setState(0x30a1, 0xbaa0, 0x7280, 0x373d, 0xf33d, 0xcc23, 0x1, 0x1);
        gbc.writeMem(0x30a1, { 0x30, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbaa0);
        EXPECT(gbc.pc(), 0x3024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0130
        gbc.setState(0x9efe, 0xebaa, 0xbce0, 0x2caf, 0x283b, 0x800c, 0x0, 0x0);
        gbc.writeMem(0x9efe, { 0x30, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xebaa);
        EXPECT(gbc.pc(), 0x9f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9efe), 0x30);
        EXPECT(gbc.readMem(0x9eff), 0x4c);
        // 30 0131
        gbc.setState(0x2b02, 0xe7bc, 0x9db0, 0xce4d, 0x5507, 0xe370, 0x0, 0x1);
        gbc.writeMem(0x2b02, { 0x30, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe7bc);
        EXPECT(gbc.pc(), 0x2b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0132
        gbc.setState(0x80dd, 0x9737, 0x96b0, 0x28b2, 0x52e, 0x43fc, 0x1, 0x1);
        gbc.writeMem(0x80dd, { 0x30, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9737);
        EXPECT(gbc.pc(), 0x80df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80dd), 0x30);
        EXPECT(gbc.readMem(0x80de), 0xe2);
        // 30 0133
        gbc.setState(0xeaac, 0x7ea, 0x3e10, 0xdf31, 0x542, 0x7d6b, 0x1, 0x1);
        gbc.writeMem(0xeaac, { 0x30, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7ea);
        EXPECT(gbc.pc(), 0xeaae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaac), 0x30);
        EXPECT(gbc.readMem(0xeaad), 0xbf);
        // 30 0134
        gbc.setState(0x6c02, 0x7543, 0xc750, 0x5da1, 0xb8af, 0x2852, 0x0, 0x0);
        gbc.writeMem(0x6c02, { 0x30, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7543);
        EXPECT(gbc.pc(), 0x6c04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0135
        gbc.setState(0xc2f4, 0x130b, 0xd4b0, 0x884d, 0x895e, 0x201d, 0x0, 0x1);
        gbc.writeMem(0xc2f4, { 0x30, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x130b);
        EXPECT(gbc.pc(), 0xc2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2f4), 0x30);
        EXPECT(gbc.readMem(0xc2f5), 0xf);
        // 30 0136
        gbc.setState(0xac69, 0x8284, 0x9ec0, 0x6b17, 0xb25e, 0x5f6c, 0x0, 0x1);
        gbc.writeMem(0xac69, { 0x30, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8284);
        EXPECT(gbc.pc(), 0xaca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac69), 0x30);
        EXPECT(gbc.readMem(0xac6a), 0x38);
        // 30 0137
        gbc.setState(0x657d, 0x4ff6, 0xd9c0, 0xf51c, 0x2469, 0x8542, 0x1, 0x1);
        gbc.writeMem(0x657d, { 0x30, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4ff6);
        EXPECT(gbc.pc(), 0x6557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0138
        gbc.setState(0x71d3, 0x4890, 0x81c0, 0xc2b7, 0xbfb2, 0x839d, 0x1, 0x1);
        gbc.writeMem(0x71d3, { 0x30, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4890);
        EXPECT(gbc.pc(), 0x71e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0139
        gbc.setState(0xe972, 0x8204, 0xb8c0, 0xe10a, 0x62f2, 0xdac8, 0x0, 0x1);
        gbc.writeMem(0xe972, { 0x30, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8204);
        EXPECT(gbc.pc(), 0xe9e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe972), 0x30);
        EXPECT(gbc.readMem(0xe973), 0x6c);
        // 30 013A
        gbc.setState(0xd69, 0xddcd, 0x8cc0, 0x33ce, 0x662d, 0x7617, 0x0, 0x0);
        gbc.writeMem(0xd69, { 0x30, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xddcd);
        EXPECT(gbc.pc(), 0xd1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 013B
        gbc.setState(0xe4c6, 0x92f8, 0x1230, 0xf165, 0x5796, 0xbe16, 0x1, 0x1);
        gbc.writeMem(0xe4c6, { 0x30, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x92f8);
        EXPECT(gbc.pc(), 0xe4c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c6), 0x30);
        EXPECT(gbc.readMem(0xe4c7), 0x61);
        // 30 013C
        gbc.setState(0x48dc, 0xfd96, 0x1690, 0xd271, 0x851a, 0x1a1f, 0x1, 0x0);
        gbc.writeMem(0x48dc, { 0x30, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfd96);
        EXPECT(gbc.pc(), 0x48de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 013D
        gbc.setState(0x13f5, 0x1b0c, 0x7bf0, 0xf378, 0xf0c2, 0x5e11, 0x1, 0x1);
        gbc.writeMem(0x13f5, { 0x30, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1b0c);
        EXPECT(gbc.pc(), 0x13f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 013E
        gbc.setState(0xd0ed, 0xe28d, 0x9100, 0x5bbe, 0xc695, 0x624d, 0x1, 0x0);
        gbc.writeMem(0xd0ed, { 0x30, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe28d);
        EXPECT(gbc.pc(), 0xd079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ed), 0x30);
        EXPECT(gbc.readMem(0xd0ee), 0x8a);
        // 30 013F
        gbc.setState(0xe059, 0x39d6, 0xe480, 0x5f6f, 0x43aa, 0x3f52, 0x1, 0x0);
        gbc.writeMem(0xe059, { 0x30, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x39d6);
        EXPECT(gbc.pc(), 0xe05e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe059), 0x30);
        EXPECT(gbc.readMem(0xe05a), 0x3);
        // 30 0140
        gbc.setState(0xb6b, 0x4d3d, 0xc020, 0xb935, 0x6b0d, 0x71b1, 0x0, 0x1);
        gbc.writeMem(0xb6b, { 0x30, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4d3d);
        EXPECT(gbc.pc(), 0xb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0143
        gbc.setState(0x1631, 0xfa45, 0xc740, 0x6a21, 0xadca, 0x4575, 0x0, 0x1);
        gbc.writeMem(0x1631, { 0x30, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfa45);
        EXPECT(gbc.pc(), 0x165a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0144
        gbc.setState(0xd46e, 0xfff5, 0xb970, 0xc9a1, 0xdd1e, 0xb2a5, 0x1, 0x1);
        gbc.writeMem(0xd46e, { 0x30, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfff5);
        EXPECT(gbc.pc(), 0xd470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd46e), 0x30);
        EXPECT(gbc.readMem(0xd46f), 0x6e);
        // 30 0145
        gbc.setState(0x7b6c, 0x7021, 0x3e20, 0x6455, 0x80, 0x4b1f, 0x1, 0x1);
        gbc.writeMem(0x7b6c, { 0x30, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7021);
        EXPECT(gbc.pc(), 0x7be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0146
        gbc.setState(0x2ab9, 0x532a, 0x3c90, 0xe2c4, 0xc8a, 0x14e0, 0x0, 0x1);
        gbc.writeMem(0x2ab9, { 0x30, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x532a);
        EXPECT(gbc.pc(), 0x2abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0147
        gbc.setState(0x5c00, 0x7438, 0xd930, 0xb5dc, 0x2718, 0x5129, 0x1, 0x0);
        gbc.writeMem(0x5c00, { 0x30, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7438);
        EXPECT(gbc.pc(), 0x5c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0148
        gbc.setState(0x7815, 0xcfdd, 0xc5d0, 0xf6af, 0x83d7, 0x8006, 0x0, 0x1);
        gbc.writeMem(0x7815, { 0x30, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xcfdd);
        EXPECT(gbc.pc(), 0x7817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0149
        gbc.setState(0x9878, 0xf2c1, 0x38b0, 0x408d, 0x726a, 0x8549, 0x1, 0x1);
        gbc.writeMem(0x9878, { 0x30, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf2c1);
        EXPECT(gbc.pc(), 0x987a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9878), 0x30);
        EXPECT(gbc.readMem(0x9879), 0x2e);
        // 30 014A
        gbc.setState(0x14eb, 0x1095, 0x9220, 0x7228, 0x487c, 0x65c2, 0x1, 0x1);
        gbc.writeMem(0x14eb, { 0x30, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1095);
        EXPECT(gbc.pc(), 0x1547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 014B
        gbc.setState(0xc0ed, 0x8c8a, 0xcfd0, 0xdf88, 0x7849, 0x65fc, 0x0, 0x0);
        gbc.writeMem(0xc0ed, { 0x30, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8c8a);
        EXPECT(gbc.pc(), 0xc0ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ed), 0x30);
        EXPECT(gbc.readMem(0xc0ee), 0xb0);
        // 30 014C
        gbc.setState(0x52a4, 0x1110, 0xcbf0, 0x9a74, 0x51f4, 0x66dc, 0x1, 0x0);
        gbc.writeMem(0x52a4, { 0x30, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1110);
        EXPECT(gbc.pc(), 0x52a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 014D
        gbc.setState(0x1d18, 0xf5a3, 0x6590, 0x7131, 0xe47e, 0xae36, 0x0, 0x0);
        gbc.writeMem(0x1d18, { 0x30, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf5a3);
        EXPECT(gbc.pc(), 0x1d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 014E
        gbc.setState(0xabed, 0x4aef, 0x7fc0, 0x38c6, 0x4fa1, 0x77d3, 0x0, 0x0);
        gbc.writeMem(0xabed, { 0x30, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4aef);
        EXPECT(gbc.pc(), 0xabc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabed), 0x30);
        EXPECT(gbc.readMem(0xabee), 0xd1);
        // 30 014F
        gbc.setState(0x6b1a, 0x19c5, 0xca00, 0xe0f7, 0x36a6, 0xe6a6, 0x0, 0x1);
        gbc.writeMem(0x6b1a, { 0x30, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x19c5);
        EXPECT(gbc.pc(), 0x6aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0150
        gbc.setState(0x9515, 0x9c33, 0x7020, 0xbe1b, 0x683e, 0x9bb, 0x1, 0x1);
        gbc.writeMem(0x9515, { 0x30, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9c33);
        EXPECT(gbc.pc(), 0x94a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9515), 0x30);
        EXPECT(gbc.readMem(0x9516), 0x8d);
        // 30 0152
        gbc.setState(0xc54f, 0x713d, 0x16e0, 0x3ecc, 0xdb5c, 0x6bbf, 0x0, 0x0);
        gbc.writeMem(0xc54f, { 0x30, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x713d);
        EXPECT(gbc.pc(), 0xc5aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54f), 0x30);
        EXPECT(gbc.readMem(0xc550), 0x59);
        // 30 0153
        gbc.setState(0x88aa, 0x45cd, 0xec80, 0x2e4b, 0x9645, 0xb5b9, 0x1, 0x0);
        gbc.writeMem(0x88aa, { 0x30, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x45cd);
        EXPECT(gbc.pc(), 0x8907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88aa), 0x30);
        EXPECT(gbc.readMem(0x88ab), 0x5b);
        // 30 0154
        gbc.setState(0x40fd, 0xc48f, 0x70d0, 0xd3fc, 0x1579, 0x7df4, 0x1, 0x0);
        gbc.writeMem(0x40fd, { 0x30, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc48f);
        EXPECT(gbc.pc(), 0x40ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0155
        gbc.setState(0x12dc, 0x6a99, 0xda60, 0xb21d, 0xd7f8, 0x61cf, 0x1, 0x0);
        gbc.writeMem(0x12dc, { 0x30, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6a99);
        EXPECT(gbc.pc(), 0x126d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0156
        gbc.setState(0xc1f2, 0xd493, 0x84e0, 0x7846, 0xc88c, 0xa428, 0x1, 0x1);
        gbc.writeMem(0xc1f2, { 0x30, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd493);
        EXPECT(gbc.pc(), 0xc22d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f2), 0x30);
        EXPECT(gbc.readMem(0xc1f3), 0x39);
        // 30 0157
        gbc.setState(0xbbf9, 0x900d, 0xbd80, 0xa542, 0xf245, 0xf3e4, 0x1, 0x0);
        gbc.writeMem(0xbbf9, { 0x30, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x900d);
        EXPECT(gbc.pc(), 0xbc0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf9), 0x30);
        EXPECT(gbc.readMem(0xbbfa), 0x14);
        // 30 0158
        gbc.setState(0xa3c6, 0x27d4, 0x6360, 0x1ca7, 0x364c, 0x5d2, 0x0, 0x0);
        gbc.writeMem(0xa3c6, { 0x30, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x27d4);
        EXPECT(gbc.pc(), 0xa40b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c6), 0x30);
        EXPECT(gbc.readMem(0xa3c7), 0x43);
        // 30 0159
        gbc.setState(0xb790, 0x9089, 0x1490, 0xa420, 0x5e6e, 0x811f, 0x1, 0x0);
        gbc.writeMem(0xb790, { 0x30, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9089);
        EXPECT(gbc.pc(), 0xb792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb790), 0x30);
        EXPECT(gbc.readMem(0xb791), 0x7a);
        // 30 015A
        gbc.setState(0xbe5e, 0x5351, 0x9190, 0xf6a9, 0x3bbf, 0x201c, 0x1, 0x0);
        gbc.writeMem(0xbe5e, { 0x30, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5351);
        EXPECT(gbc.pc(), 0xbe60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5e), 0x30);
        EXPECT(gbc.readMem(0xbe5f), 0xe1);
        // 30 015B
        gbc.setState(0x97d4, 0xed68, 0xfb60, 0x253b, 0xa6fc, 0xabfd, 0x0, 0x0);
        gbc.writeMem(0x97d4, { 0x30, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xed68);
        EXPECT(gbc.pc(), 0x97a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d4), 0x30);
        EXPECT(gbc.readMem(0x97d5), 0xcf);
        // 30 015C
        gbc.setState(0x954, 0x814f, 0x5d60, 0x2ddc, 0x8fe4, 0x3f54, 0x0, 0x1);
        gbc.writeMem(0x954, { 0x30, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x814f);
        EXPECT(gbc.pc(), 0x99d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 015D
        gbc.setState(0x5cb3, 0xdc2e, 0x3780, 0xf32d, 0xf4d8, 0x993, 0x0, 0x0);
        gbc.writeMem(0x5cb3, { 0x30, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdc2e);
        EXPECT(gbc.pc(), 0x5c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 015E
        gbc.setState(0x27f9, 0x630e, 0xc4b0, 0xcb52, 0x8a97, 0xc4d3, 0x0, 0x1);
        gbc.writeMem(0x27f9, { 0x30, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x630e);
        EXPECT(gbc.pc(), 0x27fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 015F
        gbc.setState(0x1462, 0xbd6b, 0xce50, 0xec27, 0xf38b, 0x610a, 0x0, 0x0);
        gbc.writeMem(0x1462, { 0x30, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbd6b);
        EXPECT(gbc.pc(), 0x1464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0160
        gbc.setState(0x7f5a, 0x6ab9, 0x1b80, 0x9d44, 0x93ba, 0x1263, 0x1, 0x1);
        gbc.writeMem(0x7f5a, { 0x30, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6ab9);
        EXPECT(gbc.pc(), 0x7f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0161
        gbc.setState(0x245b, 0x16a7, 0x6dd0, 0xbcfc, 0x3e, 0x1a0c, 0x1, 0x1);
        gbc.writeMem(0x245b, { 0x30, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x16a7);
        EXPECT(gbc.pc(), 0x245d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0162
        gbc.setState(0x52ec, 0x6a2b, 0xacf0, 0xc03, 0x826e, 0x40c4, 0x1, 0x0);
        gbc.writeMem(0x52ec, { 0x30, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6a2b);
        EXPECT(gbc.pc(), 0x52ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0163
        gbc.setState(0x7fc, 0x3a7b, 0x1f20, 0x4cfa, 0xbbfc, 0xe2f7, 0x1, 0x0);
        gbc.writeMem(0x7fc, { 0x30, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3a7b);
        EXPECT(gbc.pc(), 0x815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0164
        gbc.setState(0x84a3, 0x11c6, 0x4ef0, 0xaeb, 0x2562, 0x26e4, 0x1, 0x0);
        gbc.writeMem(0x84a3, { 0x30, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x11c6);
        EXPECT(gbc.pc(), 0x84a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a3), 0x30);
        EXPECT(gbc.readMem(0x84a4), 0x75);
        // 30 0165
        gbc.setState(0x88f2, 0xa690, 0xe930, 0x1497, 0x2ba7, 0xc9bc, 0x1, 0x0);
        gbc.writeMem(0x88f2, { 0x30, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa690);
        EXPECT(gbc.pc(), 0x88f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f2), 0x30);
        EXPECT(gbc.readMem(0x88f3), 0x6d);
        // 30 0166
        gbc.setState(0x611e, 0xb158, 0xb620, 0xf260, 0x21a, 0xc61a, 0x0, 0x1);
        gbc.writeMem(0x611e, { 0x30, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb158);
        EXPECT(gbc.pc(), 0x6188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0167
        gbc.setState(0xe66d, 0xf958, 0xf6a0, 0xd024, 0xf514, 0x2c8f, 0x0, 0x0);
        gbc.writeMem(0xe66d, { 0x30, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf958);
        EXPECT(gbc.pc(), 0xe6af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe66d), 0x30);
        EXPECT(gbc.readMem(0xe66e), 0x40);
        // 30 0168
        gbc.setState(0xa85f, 0x6006, 0xeaa0, 0x352f, 0x9474, 0xf0b7, 0x0, 0x0);
        gbc.writeMem(0xa85f, { 0x30, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6006);
        EXPECT(gbc.pc(), 0xa857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85f), 0x30);
        EXPECT(gbc.readMem(0xa860), 0xf6);
        // 30 0169
        gbc.setState(0x3883, 0x46f1, 0x1b90, 0x282, 0xfcc0, 0x16b9, 0x0, 0x1);
        gbc.writeMem(0x3883, { 0x30, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x46f1);
        EXPECT(gbc.pc(), 0x3885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 016A
        gbc.setState(0xb98, 0x5049, 0x8270, 0xa3ed, 0xfc0f, 0xbf27, 0x1, 0x0);
        gbc.writeMem(0xb98, { 0x30, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5049);
        EXPECT(gbc.pc(), 0xb9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 016B
        gbc.setState(0xe624, 0x9e51, 0x4160, 0x5d79, 0xfb72, 0xd6f2, 0x0, 0x1);
        gbc.writeMem(0xe624, { 0x30, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9e51);
        EXPECT(gbc.pc(), 0xe647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe624), 0x30);
        EXPECT(gbc.readMem(0xe625), 0x21);
        // 30 016C
        gbc.setState(0x6bb3, 0x9a52, 0xcdb0, 0x58f2, 0x82e8, 0xaa75, 0x0, 0x1);
        gbc.writeMem(0x6bb3, { 0x30, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9a52);
        EXPECT(gbc.pc(), 0x6bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 016D
        gbc.setState(0x7d39, 0xb7a3, 0xc990, 0xba15, 0xfdc, 0xd3b6, 0x1, 0x0);
        gbc.writeMem(0x7d39, { 0x30, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb7a3);
        EXPECT(gbc.pc(), 0x7d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 016E
        gbc.setState(0xaa38, 0x98ee, 0x1030, 0x2cd6, 0xed9a, 0x65cb, 0x0, 0x0);
        gbc.writeMem(0xaa38, { 0x30, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x98ee);
        EXPECT(gbc.pc(), 0xaa3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa38), 0x30);
        EXPECT(gbc.readMem(0xaa39), 0xf6);
        // 30 016F
        gbc.setState(0x5470, 0x6f44, 0xba10, 0x2f9c, 0xf8a9, 0xe820, 0x1, 0x1);
        gbc.writeMem(0x5470, { 0x30, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6f44);
        EXPECT(gbc.pc(), 0x5472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0170
        gbc.setState(0x4cd, 0xa141, 0x9ce0, 0xf26d, 0x2828, 0x6b8f, 0x0, 0x1);
        gbc.writeMem(0x4cd, { 0x30, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa141);
        EXPECT(gbc.pc(), 0x48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0171
        gbc.setState(0x1a82, 0x9ed3, 0x6460, 0xbf43, 0x47f3, 0x3ce0, 0x0, 0x0);
        gbc.writeMem(0x1a82, { 0x30, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9ed3);
        EXPECT(gbc.pc(), 0x1abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0172
        gbc.setState(0x7e18, 0x984f, 0x2b60, 0x95a5, 0xfd3c, 0x940a, 0x0, 0x0);
        gbc.writeMem(0x7e18, { 0x30, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x984f);
        EXPECT(gbc.pc(), 0x7e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0173
        gbc.setState(0xdd99, 0x7cc, 0x7c40, 0x8f52, 0xcc71, 0x54e4, 0x0, 0x0);
        gbc.writeMem(0xdd99, { 0x30, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7cc);
        EXPECT(gbc.pc(), 0xdd37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd99), 0x30);
        EXPECT(gbc.readMem(0xdd9a), 0x9c);
        // 30 0174
        gbc.setState(0xd8b6, 0x9d6f, 0xc320, 0x2652, 0x349b, 0xc572, 0x1, 0x0);
        gbc.writeMem(0xd8b6, { 0x30, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9d6f);
        EXPECT(gbc.pc(), 0xd88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b6), 0x30);
        EXPECT(gbc.readMem(0xd8b7), 0xd2);
        // 30 0175
        gbc.setState(0x15e8, 0x6c53, 0xec90, 0x956, 0x2c78, 0x6344, 0x0, 0x1);
        gbc.writeMem(0x15e8, { 0x30, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6c53);
        EXPECT(gbc.pc(), 0x15ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0176
        gbc.setState(0x317c, 0x9f98, 0xf140, 0x88bd, 0x41b3, 0x70f0, 0x1, 0x1);
        gbc.writeMem(0x317c, { 0x30, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9f98);
        EXPECT(gbc.pc(), 0x31c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0177
        gbc.setState(0x786c, 0x54dc, 0xe190, 0x6f7d, 0xc3a4, 0x7339, 0x1, 0x0);
        gbc.writeMem(0x786c, { 0x30, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x54dc);
        EXPECT(gbc.pc(), 0x786e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0178
        gbc.setState(0x1a28, 0x6129, 0xc7b0, 0x7d57, 0x5beb, 0x22cf, 0x0, 0x1);
        gbc.writeMem(0x1a28, { 0x30, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6129);
        EXPECT(gbc.pc(), 0x1a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0179
        gbc.setState(0x1db0, 0x5950, 0xd300, 0x99bc, 0xa530, 0xbef8, 0x1, 0x1);
        gbc.writeMem(0x1db0, { 0x30, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5950);
        EXPECT(gbc.pc(), 0x1e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 017A
        gbc.setState(0x32b4, 0xd9ba, 0x2ac0, 0x669e, 0x8ee1, 0xffc9, 0x1, 0x0);
        gbc.writeMem(0x32b4, { 0x30, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd9ba);
        EXPECT(gbc.pc(), 0x328e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 017C
        gbc.setState(0x1948, 0xc1b5, 0x6070, 0xc104, 0x9499, 0xb4be, 0x1, 0x1);
        gbc.writeMem(0x1948, { 0x30, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc1b5);
        EXPECT(gbc.pc(), 0x194a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 017D
        gbc.setState(0xe9f1, 0x3d86, 0xc390, 0xc8ce, 0xf7ef, 0x8171, 0x0, 0x1);
        gbc.writeMem(0xe9f1, { 0x30, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3d86);
        EXPECT(gbc.pc(), 0xe9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f1), 0x30);
        EXPECT(gbc.readMem(0xe9f2), 0x97);
        // 30 017E
        gbc.setState(0x4eb7, 0x9d82, 0x3a30, 0x5888, 0x5733, 0x8cf7, 0x0, 0x0);
        gbc.writeMem(0x4eb7, { 0x30, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9d82);
        EXPECT(gbc.pc(), 0x4eb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 017F
        gbc.setState(0x9f, 0x38c, 0xd5d0, 0xc23c, 0x6d24, 0x319f, 0x0, 0x0);
        gbc.writeMem(0x9f, { 0x30, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x38c);
        EXPECT(gbc.pc(), 0xa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0180
        gbc.setState(0xcfe7, 0xa0cf, 0xf4a0, 0x13d4, 0x7d58, 0xad, 0x1, 0x1);
        gbc.writeMem(0xcfe7, { 0x30, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa0cf);
        EXPECT(gbc.pc(), 0xcfd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe7), 0x30);
        EXPECT(gbc.readMem(0xcfe8), 0xee);
        // 30 0181
        gbc.setState(0x95e9, 0x87d3, 0xb350, 0x1d49, 0x1320, 0xaf3e, 0x0, 0x1);
        gbc.writeMem(0x95e9, { 0x30, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x87d3);
        EXPECT(gbc.pc(), 0x95eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e9), 0x30);
        EXPECT(gbc.readMem(0x95ea), 0xd5);
        // 30 0182
        gbc.setState(0x8776, 0xe5fc, 0x4e20, 0xb030, 0xc0e8, 0x5802, 0x1, 0x1);
        gbc.writeMem(0x8776, { 0x30, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe5fc);
        EXPECT(gbc.pc(), 0x8787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8776), 0x30);
        EXPECT(gbc.readMem(0x8777), 0xf);
        // 30 0183
        gbc.setState(0x9f14, 0x853e, 0xc500, 0x73cd, 0x4e91, 0xbf05, 0x0, 0x1);
        gbc.writeMem(0x9f14, { 0x30, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x853e);
        EXPECT(gbc.pc(), 0x9f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f14), 0x30);
        EXPECT(gbc.readMem(0x9f15), 0x40);
        // 30 0184
        gbc.setState(0xe8fd, 0x1883, 0x5030, 0x5f6a, 0x39ab, 0x3803, 0x1, 0x1);
        gbc.writeMem(0xe8fd, { 0x30, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1883);
        EXPECT(gbc.pc(), 0xe8ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8fd), 0x30);
        EXPECT(gbc.readMem(0xe8fe), 0x45);
        // 30 0186
        gbc.setState(0xb350, 0xbf3d, 0xf8a0, 0x926a, 0xa801, 0xd1a7, 0x1, 0x1);
        gbc.writeMem(0xb350, { 0x30, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbf3d);
        EXPECT(gbc.pc(), 0xb3ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb350), 0x30);
        EXPECT(gbc.readMem(0xb351), 0x5a);
        // 30 0187
        gbc.setState(0xd70c, 0x421, 0x1140, 0x7f36, 0x2faf, 0x9f25, 0x0, 0x0);
        gbc.writeMem(0xd70c, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x421);
        EXPECT(gbc.pc(), 0xd6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70c), 0x30);
        EXPECT(gbc.readMem(0xd70d), 0xa6);
        // 30 0188
        gbc.setState(0x5c2, 0x8d4c, 0x3290, 0x28d3, 0x7167, 0xc5d2, 0x1, 0x1);
        gbc.writeMem(0x5c2, { 0x30, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8d4c);
        EXPECT(gbc.pc(), 0x5c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0189
        gbc.setState(0xa8c2, 0x50f7, 0xd8b0, 0x6505, 0x4ac3, 0xc007, 0x0, 0x0);
        gbc.writeMem(0xa8c2, { 0x30, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x50f7);
        EXPECT(gbc.pc(), 0xa8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c2), 0x30);
        EXPECT(gbc.readMem(0xa8c3), 0xe8);
        // 30 018A
        gbc.setState(0xcd02, 0xfc91, 0x5c10, 0x6272, 0x6a90, 0x3bf7, 0x0, 0x0);
        gbc.writeMem(0xcd02, { 0x30, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfc91);
        EXPECT(gbc.pc(), 0xcd04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd02), 0x30);
        EXPECT(gbc.readMem(0xcd03), 0x51);
        // 30 018B
        gbc.setState(0x3c1a, 0x94a0, 0x8b70, 0xb2a0, 0x1832, 0xe9a1, 0x1, 0x0);
        gbc.writeMem(0x3c1a, { 0x30, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x94a0);
        EXPECT(gbc.pc(), 0x3c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 018C
        gbc.setState(0x1cb2, 0x972d, 0x37c0, 0x152, 0x36bd, 0x2427, 0x0, 0x0);
        gbc.writeMem(0x1cb2, { 0x30, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x972d);
        EXPECT(gbc.pc(), 0x1c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 018D
        gbc.setState(0xe79d, 0xcaa3, 0x8ee0, 0x6e49, 0xead1, 0xfbac, 0x0, 0x0);
        gbc.writeMem(0xe79d, { 0x30, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcaa3);
        EXPECT(gbc.pc(), 0xe80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe79d), 0x30);
        EXPECT(gbc.readMem(0xe79e), 0x6c);
        // 30 018E
        gbc.setState(0xb040, 0x8090, 0xcb60, 0x995d, 0x402b, 0x8a0d, 0x0, 0x1);
        gbc.writeMem(0xb040, { 0x30, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8090);
        EXPECT(gbc.pc(), 0xafee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb040), 0x30);
        EXPECT(gbc.readMem(0xb041), 0xac);
        // 30 018F
        gbc.setState(0x1b6b, 0x5d4, 0x4460, 0x961b, 0x8ce1, 0xa617, 0x0, 0x0);
        gbc.writeMem(0x1b6b, { 0x30, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5d4);
        EXPECT(gbc.pc(), 0x1bd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0190
        gbc.setState(0x86fe, 0x1f24, 0xddd0, 0x7f76, 0xbe95, 0x6d94, 0x0, 0x1);
        gbc.writeMem(0x86fe, { 0x30, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1f24);
        EXPECT(gbc.pc(), 0x8700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fe), 0x30);
        EXPECT(gbc.readMem(0x86ff), 0x4);
        // 30 0191
        gbc.setState(0x3bd8, 0x804f, 0x2860, 0x2466, 0x866e, 0x39f4, 0x0, 0x0);
        gbc.writeMem(0x3bd8, { 0x30, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x804f);
        EXPECT(gbc.pc(), 0x3bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0192
        gbc.setState(0x8efa, 0x8b7f, 0x8e90, 0xc85f, 0x449b, 0xea1c, 0x1, 0x1);
        gbc.writeMem(0x8efa, { 0x30, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8b7f);
        EXPECT(gbc.pc(), 0x8efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8efa), 0x30);
        EXPECT(gbc.readMem(0x8efb), 0x7e);
        // 30 0193
        gbc.setState(0xd5dc, 0x9b1b, 0x1e00, 0x667b, 0x61be, 0xc204, 0x0, 0x0);
        gbc.writeMem(0xd5dc, { 0x30, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9b1b);
        EXPECT(gbc.pc(), 0xd57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5dc), 0x30);
        EXPECT(gbc.readMem(0xd5dd), 0x9c);
        // 30 0194
        gbc.setState(0x2bac, 0x50a7, 0x7d90, 0xe3c0, 0x38cb, 0xbf88, 0x0, 0x1);
        gbc.writeMem(0x2bac, { 0x30, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x50a7);
        EXPECT(gbc.pc(), 0x2bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0195
        gbc.setState(0x1293, 0x8196, 0x6280, 0x3600, 0x6487, 0x70a, 0x1, 0x0);
        gbc.writeMem(0x1293, { 0x30, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8196);
        EXPECT(gbc.pc(), 0x12a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0196
        gbc.setState(0x5997, 0x6b0, 0x6de0, 0xb8eb, 0xb164, 0x426e, 0x0, 0x0);
        gbc.writeMem(0x5997, { 0x30, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6b0);
        EXPECT(gbc.pc(), 0x594a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0197
        gbc.setState(0x4bae, 0xb7a1, 0xe080, 0xf36f, 0x4766, 0xb51b, 0x0, 0x1);
        gbc.writeMem(0x4bae, { 0x30, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb7a1);
        EXPECT(gbc.pc(), 0x4c25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0198
        gbc.setState(0xe4c, 0xe97a, 0x50, 0x1169, 0x90a2, 0x77c1, 0x0, 0x1);
        gbc.writeMem(0xe4c, { 0x30, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe97a);
        EXPECT(gbc.pc(), 0xe4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0199
        gbc.setState(0xde24, 0x6ae6, 0x99b0, 0xd76a, 0xffbf, 0xf4a1, 0x0, 0x1);
        gbc.writeMem(0xde24, { 0x30, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6ae6);
        EXPECT(gbc.pc(), 0xde26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde24), 0x30);
        EXPECT(gbc.readMem(0xde25), 0xe1);
        // 30 019A
        gbc.setState(0x1442, 0xa9f0, 0x3b70, 0xb3e2, 0x5c00, 0x3a56, 0x1, 0x0);
        gbc.writeMem(0x1442, { 0x30, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa9f0);
        EXPECT(gbc.pc(), 0x1444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 019B
        gbc.setState(0xe4bd, 0xa16c, 0xa410, 0xc178, 0xbfd2, 0xed2f, 0x1, 0x0);
        gbc.writeMem(0xe4bd, { 0x30, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa16c);
        EXPECT(gbc.pc(), 0xe4bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4bd), 0x30);
        EXPECT(gbc.readMem(0xe4be), 0xd5);
        // 30 019C
        gbc.setState(0x341f, 0x549e, 0x8810, 0xccae, 0xf928, 0xd264, 0x0, 0x0);
        gbc.writeMem(0x341f, { 0x30, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x549e);
        EXPECT(gbc.pc(), 0x3421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 019D
        gbc.setState(0xea96, 0x72a6, 0xdc20, 0x476b, 0xabfd, 0xc81, 0x1, 0x0);
        gbc.writeMem(0xea96, { 0x30, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x72a6);
        EXPECT(gbc.pc(), 0xead3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea96), 0x30);
        EXPECT(gbc.readMem(0xea97), 0x3b);
        // 30 019E
        gbc.setState(0x6281, 0xdb67, 0xb630, 0xd35c, 0xcfb, 0x5a6e, 0x0, 0x0);
        gbc.writeMem(0x6281, { 0x30, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdb67);
        EXPECT(gbc.pc(), 0x6283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 019F
        gbc.setState(0xa4e6, 0x7d15, 0x820, 0xf144, 0xdb93, 0x58e1, 0x0, 0x0);
        gbc.writeMem(0xa4e6, { 0x30, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7d15);
        EXPECT(gbc.pc(), 0xa53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e6), 0x30);
        EXPECT(gbc.readMem(0xa4e7), 0x53);
        // 30 01A0
        gbc.setState(0x2edb, 0x796, 0xa940, 0x1891, 0xa4a2, 0xa05b, 0x1, 0x1);
        gbc.writeMem(0x2edb, { 0x30, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x796);
        EXPECT(gbc.pc(), 0x2e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01A1
        gbc.setState(0x372e, 0x809d, 0x1d20, 0xea99, 0x40db, 0xfe13, 0x1, 0x0);
        gbc.writeMem(0x372e, { 0x30, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x809d);
        EXPECT(gbc.pc(), 0x36cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01A2
        gbc.setState(0x8d67, 0x9da1, 0x9fe0, 0xca37, 0xcc0a, 0xea9, 0x0, 0x0);
        gbc.writeMem(0x8d67, { 0x30, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9da1);
        EXPECT(gbc.pc(), 0x8d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d67), 0x30);
        EXPECT(gbc.readMem(0x8d68), 0x98);
        // 30 01A4
        gbc.setState(0x9de6, 0x3f51, 0xd9d0, 0x3ce8, 0xf738, 0x5cc6, 0x0, 0x1);
        gbc.writeMem(0x9de6, { 0x30, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3f51);
        EXPECT(gbc.pc(), 0x9de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de6), 0x30);
        EXPECT(gbc.readMem(0x9de7), 0x41);
        // 30 01A6
        gbc.setState(0xcbbd, 0x9026, 0x40c0, 0x3935, 0xf4b9, 0x3927, 0x0, 0x1);
        gbc.writeMem(0xcbbd, { 0x30, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9026);
        EXPECT(gbc.pc(), 0xcb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbbd), 0x30);
        EXPECT(gbc.readMem(0xcbbe), 0xa7);
        // 30 01A7
        gbc.setState(0x2515, 0x7a11, 0x6f60, 0x3a21, 0xe22a, 0x343b, 0x1, 0x1);
        gbc.writeMem(0x2515, { 0x30, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7a11);
        EXPECT(gbc.pc(), 0x252e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01A9
        gbc.setState(0x24ab, 0xb03d, 0xfe40, 0x4b72, 0xdabc, 0xec1e, 0x0, 0x0);
        gbc.writeMem(0x24ab, { 0x30, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb03d);
        EXPECT(gbc.pc(), 0x24ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01AA
        gbc.setState(0x8239, 0x5668, 0x99a0, 0xd894, 0x190e, 0xddcc, 0x1, 0x0);
        gbc.writeMem(0x8239, { 0x30, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5668);
        EXPECT(gbc.pc(), 0x8255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8239), 0x30);
        EXPECT(gbc.readMem(0x823a), 0x1a);
        // 30 01AB
        gbc.setState(0x4fce, 0xc1ca, 0x58b0, 0x17ca, 0x9cac, 0x80ad, 0x1, 0x1);
        gbc.writeMem(0x4fce, { 0x30, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc1ca);
        EXPECT(gbc.pc(), 0x4fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01AC
        gbc.setState(0x5b85, 0xca6f, 0x3ff0, 0xab2a, 0x52ba, 0xc3c5, 0x0, 0x0);
        gbc.writeMem(0x5b85, { 0x30, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xca6f);
        EXPECT(gbc.pc(), 0x5b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01AD
        gbc.setState(0x5126, 0x2591, 0xf430, 0x9a2a, 0xdb6d, 0x15d6, 0x0, 0x1);
        gbc.writeMem(0x5126, { 0x30, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2591);
        EXPECT(gbc.pc(), 0x5128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01AE
        gbc.setState(0x88e7, 0x956f, 0x2510, 0xd6f7, 0x6918, 0x248a, 0x1, 0x0);
        gbc.writeMem(0x88e7, { 0x30, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x956f);
        EXPECT(gbc.pc(), 0x88e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e7), 0x30);
        EXPECT(gbc.readMem(0x88e8), 0xd7);
        // 30 01AF
        gbc.setState(0xc964, 0x8107, 0xe10, 0x2cfa, 0x3a1, 0x4641, 0x0, 0x0);
        gbc.writeMem(0xc964, { 0x30, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8107);
        EXPECT(gbc.pc(), 0xc966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc964), 0x30);
        EXPECT(gbc.readMem(0xc965), 0x80);
        // 30 01B0
        gbc.setState(0x11e4, 0x2f8, 0x3100, 0xd655, 0x93bc, 0xbb57, 0x1, 0x1);
        gbc.writeMem(0x11e4, { 0x30, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2f8);
        EXPECT(gbc.pc(), 0x125f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01B1
        gbc.setState(0xdb8e, 0xa2c2, 0x1fd0, 0xbe8c, 0xf81d, 0xeffd, 0x0, 0x0);
        gbc.writeMem(0xdb8e, { 0x30, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa2c2);
        EXPECT(gbc.pc(), 0xdb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb8e), 0x30);
        EXPECT(gbc.readMem(0xdb8f), 0xca);
        // 30 01B2
        gbc.setState(0x8cf3, 0x666e, 0x64c0, 0xb189, 0x67a6, 0x99, 0x1, 0x1);
        gbc.writeMem(0x8cf3, { 0x30, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x666e);
        EXPECT(gbc.pc(), 0x8d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf3), 0x30);
        EXPECT(gbc.readMem(0x8cf4), 0x19);
        // 30 01B4
        gbc.setState(0x6532, 0xe3f, 0xd0e0, 0x972e, 0x1396, 0x176e, 0x1, 0x0);
        gbc.writeMem(0x6532, { 0x30, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe3f);
        EXPECT(gbc.pc(), 0x64ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01B5
        gbc.setState(0x59fa, 0x9f3, 0xaf50, 0x19e1, 0xecc7, 0x75d5, 0x1, 0x1);
        gbc.writeMem(0x59fa, { 0x30, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9f3);
        EXPECT(gbc.pc(), 0x59fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01B6
        gbc.setState(0x15c0, 0x5484, 0x3c10, 0xc874, 0xeede, 0x354a, 0x0, 0x1);
        gbc.writeMem(0x15c0, { 0x30, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5484);
        EXPECT(gbc.pc(), 0x15c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01B7
        gbc.setState(0x43ee, 0x8923, 0xd6c0, 0x2b2, 0x196, 0x6f24, 0x0, 0x1);
        gbc.writeMem(0x43ee, { 0x30, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8923);
        EXPECT(gbc.pc(), 0x438c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01B8
        gbc.setState(0x7d01, 0xb428, 0x3310, 0xc52, 0x1177, 0x321e, 0x1, 0x0);
        gbc.writeMem(0x7d01, { 0x30, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb428);
        EXPECT(gbc.pc(), 0x7d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01B9
        gbc.setState(0xd4b4, 0x3dff, 0x3d80, 0x4ac8, 0x50d6, 0x3d07, 0x0, 0x0);
        gbc.writeMem(0xd4b4, { 0x30, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3dff);
        EXPECT(gbc.pc(), 0xd50d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b4), 0x30);
        EXPECT(gbc.readMem(0xd4b5), 0x57);
        // 30 01BA
        gbc.setState(0xa4a9, 0xae31, 0xd590, 0x12be, 0xda2, 0x185b, 0x0, 0x1);
        gbc.writeMem(0xa4a9, { 0x30, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xae31);
        EXPECT(gbc.pc(), 0xa4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a9), 0x30);
        EXPECT(gbc.readMem(0xa4aa), 0xa5);
        // 30 01BB
        gbc.setState(0x133d, 0xae, 0x1600, 0xede6, 0xdaa1, 0x4789, 0x0, 0x1);
        gbc.writeMem(0x133d, { 0x30, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xae);
        EXPECT(gbc.pc(), 0x13ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01BC
        gbc.setState(0xc9bb, 0x9eb9, 0x8860, 0xc45a, 0xd2b5, 0xa392, 0x0, 0x0);
        gbc.writeMem(0xc9bb, { 0x30, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9eb9);
        EXPECT(gbc.pc(), 0xc9a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9bb), 0x30);
        EXPECT(gbc.readMem(0xc9bc), 0xe6);
        // 30 01BD
        gbc.setState(0x1655, 0x54d3, 0x9cf0, 0x18c8, 0xea24, 0x38b5, 0x0, 0x1);
        gbc.writeMem(0x1655, { 0x30, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x54d3);
        EXPECT(gbc.pc(), 0x1657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01BE
        gbc.setState(0xaead, 0xc544, 0x73d0, 0xf644, 0x5ab3, 0x6281, 0x0, 0x0);
        gbc.writeMem(0xaead, { 0x30, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc544);
        EXPECT(gbc.pc(), 0xaeaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaead), 0x30);
        EXPECT(gbc.readMem(0xaeae), 0x45);
        // 30 01BF
        gbc.setState(0x3ba5, 0x7825, 0x330, 0xfbc5, 0xe6b0, 0x78b2, 0x1, 0x0);
        gbc.writeMem(0x3ba5, { 0x30, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7825);
        EXPECT(gbc.pc(), 0x3ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01C0
        gbc.setState(0x627d, 0xb8d0, 0x4010, 0xf12b, 0xd850, 0x6fcc, 0x0, 0x0);
        gbc.writeMem(0x627d, { 0x30, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb8d0);
        EXPECT(gbc.pc(), 0x627f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01C1
        gbc.setState(0xdd61, 0x8aa3, 0x2f00, 0x2598, 0xd4c1, 0x2096, 0x0, 0x0);
        gbc.writeMem(0xdd61, { 0x30, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8aa3);
        EXPECT(gbc.pc(), 0xdd8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd61), 0x30);
        EXPECT(gbc.readMem(0xdd62), 0x2b);
        // 30 01C2
        gbc.setState(0x6b0d, 0x19d6, 0xbb00, 0x7ed6, 0x3f31, 0x9b6b, 0x0, 0x1);
        gbc.writeMem(0x6b0d, { 0x30, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x19d6);
        EXPECT(gbc.pc(), 0x6abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01C3
        gbc.setState(0xde3f, 0xca64, 0xbdf0, 0x914, 0xea02, 0xb385, 0x1, 0x1);
        gbc.writeMem(0xde3f, { 0x30, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xca64);
        EXPECT(gbc.pc(), 0xde41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde3f), 0x30);
        EXPECT(gbc.readMem(0xde40), 0xad);
        // 30 01C4
        gbc.setState(0xdc33, 0xac84, 0x3c20, 0x6f53, 0xf4f3, 0xd09c, 0x0, 0x1);
        gbc.writeMem(0xdc33, { 0x30, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xac84);
        EXPECT(gbc.pc(), 0xdc28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc33), 0x30);
        EXPECT(gbc.readMem(0xdc34), 0xf3);
        // 30 01C5
        gbc.setState(0xe5d2, 0x1e9, 0x5130, 0x131, 0xf490, 0xa806, 0x1, 0x0);
        gbc.writeMem(0xe5d2, { 0x30, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1e9);
        EXPECT(gbc.pc(), 0xe5d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d2), 0x30);
        EXPECT(gbc.readMem(0xe5d3), 0x75);
        // 30 01C6
        gbc.setState(0x35f9, 0x379a, 0x96a0, 0x6396, 0xa268, 0xcbf5, 0x1, 0x0);
        gbc.writeMem(0x35f9, { 0x30, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x379a);
        EXPECT(gbc.pc(), 0x3626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01C7
        gbc.setState(0xc626, 0x2d49, 0x8990, 0xa2ad, 0x8b38, 0x42bb, 0x0, 0x1);
        gbc.writeMem(0xc626, { 0x30, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2d49);
        EXPECT(gbc.pc(), 0xc628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc626), 0x30);
        EXPECT(gbc.readMem(0xc627), 0x82);
        // 30 01C8
        gbc.setState(0x84d0, 0x677f, 0xf970, 0x63bd, 0x5856, 0x4de3, 0x0, 0x0);
        gbc.writeMem(0x84d0, { 0x30, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x677f);
        EXPECT(gbc.pc(), 0x84d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d0), 0x30);
        EXPECT(gbc.readMem(0x84d1), 0x43);
        // 30 01C9
        gbc.setState(0x5666, 0xa0bc, 0x3cd0, 0x2376, 0x274, 0x24fe, 0x0, 0x0);
        gbc.writeMem(0x5666, { 0x30, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa0bc);
        EXPECT(gbc.pc(), 0x5668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01CA
        gbc.setState(0x7b36, 0xf67c, 0x3cb0, 0xba72, 0x592d, 0x4324, 0x0, 0x0);
        gbc.writeMem(0x7b36, { 0x30, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf67c);
        EXPECT(gbc.pc(), 0x7b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01CB
        gbc.setState(0x20dd, 0x7fcc, 0x5590, 0xd94c, 0x57a2, 0xaec9, 0x0, 0x0);
        gbc.writeMem(0x20dd, { 0x30, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7fcc);
        EXPECT(gbc.pc(), 0x20df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01CC
        gbc.setState(0xc67a, 0x698d, 0x9bc0, 0xb39, 0xe0e0, 0x4f30, 0x1, 0x1);
        gbc.writeMem(0xc67a, { 0x30, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x698d);
        EXPECT(gbc.pc(), 0xc62c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67a), 0x30);
        EXPECT(gbc.readMem(0xc67b), 0xb0);
        // 30 01CD
        gbc.setState(0x1d23, 0x3c4b, 0xb7f0, 0x2e36, 0x2863, 0x4fdc, 0x1, 0x0);
        gbc.writeMem(0x1d23, { 0x30, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3c4b);
        EXPECT(gbc.pc(), 0x1d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01CE
        gbc.setState(0x31ce, 0x3246, 0x9ac0, 0x9f63, 0x9cff, 0x8326, 0x1, 0x0);
        gbc.writeMem(0x31ce, { 0x30, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3246);
        EXPECT(gbc.pc(), 0x31ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01CF
        gbc.setState(0x1090, 0xc362, 0xa180, 0xc8ab, 0xd469, 0x7571, 0x1, 0x0);
        gbc.writeMem(0x1090, { 0x30, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc362);
        EXPECT(gbc.pc(), 0x10fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01D0
        gbc.setState(0xa74a, 0x1a38, 0x5700, 0x5433, 0x9a0e, 0x1312, 0x0, 0x1);
        gbc.writeMem(0xa74a, { 0x30, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1a38);
        EXPECT(gbc.pc(), 0xa75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa74a), 0x30);
        EXPECT(gbc.readMem(0xa74b), 0x12);
        // 30 01D1
        gbc.setState(0x3aeb, 0x39b8, 0x4eb0, 0x9e7c, 0x7e4, 0x199e, 0x1, 0x1);
        gbc.writeMem(0x3aeb, { 0x30, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x39b8);
        EXPECT(gbc.pc(), 0x3aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01D2
        gbc.setState(0x57f, 0xfce9, 0x430, 0xa0d2, 0xa6fe, 0x9e67, 0x1, 0x0);
        gbc.writeMem(0x57f, { 0x30, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfce9);
        EXPECT(gbc.pc(), 0x581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01D3
        gbc.setState(0x4962, 0xdf5, 0xa000, 0xcb0f, 0xeed6, 0xea74, 0x0, 0x1);
        gbc.writeMem(0x4962, { 0x30, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xdf5);
        EXPECT(gbc.pc(), 0x49a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01D4
        gbc.setState(0x517b, 0x25a0, 0x8370, 0x6156, 0x63a3, 0x529c, 0x0, 0x1);
        gbc.writeMem(0x517b, { 0x30, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x25a0);
        EXPECT(gbc.pc(), 0x517d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01D5
        gbc.setState(0xdf4a, 0x1af8, 0xe320, 0x4d63, 0xf8da, 0x1710, 0x0, 0x1);
        gbc.writeMem(0xdf4a, { 0x30, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1af8);
        EXPECT(gbc.pc(), 0xdfad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf4a), 0x30);
        EXPECT(gbc.readMem(0xdf4b), 0x61);
        // 30 01D6
        gbc.setState(0xc62, 0xb753, 0x4960, 0xe03e, 0x5b38, 0x3feb, 0x0, 0x1);
        gbc.writeMem(0xc62, { 0x30, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb753);
        EXPECT(gbc.pc(), 0xc9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01D7
        gbc.setState(0x995, 0xfe62, 0x87a0, 0x4d4, 0x787e, 0x87c8, 0x0, 0x0);
        gbc.writeMem(0x995, { 0x30, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfe62);
        EXPECT(gbc.pc(), 0x9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01D8
        gbc.setState(0xac66, 0x1ad4, 0xa980, 0xd34b, 0x2908, 0xd7e8, 0x0, 0x1);
        gbc.writeMem(0xac66, { 0x30, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1ad4);
        EXPECT(gbc.pc(), 0xacce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac66), 0x30);
        EXPECT(gbc.readMem(0xac67), 0x66);
        // 30 01D9
        gbc.setState(0x3037, 0x6c87, 0x6b20, 0x2fdb, 0xfa86, 0x988c, 0x1, 0x1);
        gbc.writeMem(0x3037, { 0x30, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6c87);
        EXPECT(gbc.pc(), 0x3008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01DA
        gbc.setState(0x152, 0x7519, 0x12f0, 0x7778, 0x1ef2, 0x3731, 0x1, 0x0);
        gbc.writeMem(0x152, { 0x30, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7519);
        EXPECT(gbc.pc(), 0x154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01DB
        gbc.setState(0xbfc7, 0xdbbe, 0xc2e0, 0xa90, 0xc393, 0xd8e, 0x0, 0x0);
        gbc.writeMem(0xbfc7, { 0x30, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdbbe);
        EXPECT(gbc.pc(), 0xc043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc7), 0x30);
        EXPECT(gbc.readMem(0xbfc8), 0x7a);
        // 30 01DC
        gbc.setState(0xd261, 0x36b4, 0xdbb0, 0x42, 0xa723, 0x739b, 0x1, 0x1);
        gbc.writeMem(0xd261, { 0x30, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x36b4);
        EXPECT(gbc.pc(), 0xd263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd261), 0x30);
        EXPECT(gbc.readMem(0xd262), 0x28);
        // 30 01DD
        gbc.setState(0x9f76, 0xa96, 0x3100, 0x7f84, 0x8b94, 0xfe82, 0x0, 0x0);
        gbc.writeMem(0x9f76, { 0x30, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa96);
        EXPECT(gbc.pc(), 0x9f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f76), 0x30);
        EXPECT(gbc.readMem(0x9f77), 0x1a);
        // 30 01DE
        gbc.setState(0x670e, 0x5b7b, 0xd310, 0x5ed8, 0xe8b1, 0x92f5, 0x1, 0x1);
        gbc.writeMem(0x670e, { 0x30, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5b7b);
        EXPECT(gbc.pc(), 0x6710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01DF
        gbc.setState(0x6f32, 0x332a, 0xac90, 0xf129, 0xe2f1, 0x1012, 0x1, 0x0);
        gbc.writeMem(0x6f32, { 0x30, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x332a);
        EXPECT(gbc.pc(), 0x6f34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01E0
        gbc.setState(0x30a1, 0xee48, 0x2c50, 0x8f0b, 0xb23c, 0x2cd1, 0x0, 0x1);
        gbc.writeMem(0x30a1, { 0x30, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xee48);
        EXPECT(gbc.pc(), 0x30a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01E1
        gbc.setState(0x7e78, 0x4dc8, 0x6f40, 0x1b63, 0xde91, 0xb434, 0x0, 0x1);
        gbc.writeMem(0x7e78, { 0x30, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4dc8);
        EXPECT(gbc.pc(), 0x7dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01E2
        gbc.setState(0xc841, 0x64d0, 0x5e10, 0x98fa, 0x759f, 0x5b31, 0x1, 0x0);
        gbc.writeMem(0xc841, { 0x30, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x64d0);
        EXPECT(gbc.pc(), 0xc843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc841), 0x30);
        EXPECT(gbc.readMem(0xc842), 0x4);
        // 30 01E3
        gbc.setState(0x2053, 0xa410, 0x8d30, 0x3731, 0x360b, 0x5035, 0x1, 0x0);
        gbc.writeMem(0x2053, { 0x30, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa410);
        EXPECT(gbc.pc(), 0x2055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01E4
        gbc.setState(0x965, 0x2065, 0x500, 0xfb74, 0xec04, 0x29d6, 0x1, 0x1);
        gbc.writeMem(0x965, { 0x30, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2065);
        EXPECT(gbc.pc(), 0x95e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01E5
        gbc.setState(0xa091, 0x2192, 0x7110, 0x7548, 0xa17e, 0x6418, 0x0, 0x0);
        gbc.writeMem(0xa091, { 0x30, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2192);
        EXPECT(gbc.pc(), 0xa093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa091), 0x30);
        EXPECT(gbc.readMem(0xa092), 0x38);
        // 30 01E6
        gbc.setState(0x801e, 0x2124, 0xabe0, 0x3d9f, 0x6903, 0x2fff, 0x1, 0x1);
        gbc.writeMem(0x801e, { 0x30, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2124);
        EXPECT(gbc.pc(), 0x8064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x801e), 0x30);
        EXPECT(gbc.readMem(0x801f), 0x44);
        // 30 01E7
        gbc.setState(0x1d9e, 0x9a87, 0x4390, 0x27a2, 0x1d25, 0xdbcb, 0x0, 0x0);
        gbc.writeMem(0x1d9e, { 0x30, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9a87);
        EXPECT(gbc.pc(), 0x1da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01E8
        gbc.setState(0x9a94, 0xe301, 0xe330, 0x6f0a, 0x9519, 0xf9ab, 0x0, 0x1);
        gbc.writeMem(0x9a94, { 0x30, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe301);
        EXPECT(gbc.pc(), 0x9a96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a94), 0x30);
        EXPECT(gbc.readMem(0x9a95), 0x96);
        // 30 01E9
        gbc.setState(0xe197, 0xad8b, 0xef20, 0x6f84, 0x81a3, 0x6f57, 0x1, 0x0);
        gbc.writeMem(0xe197, { 0x30, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xad8b);
        EXPECT(gbc.pc(), 0xe193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe197), 0x30);
        EXPECT(gbc.readMem(0xe198), 0xfa);
        // 30 01EA
        gbc.setState(0xa8e5, 0x8a13, 0x3320, 0x6a4d, 0xdd63, 0x97aa, 0x0, 0x0);
        gbc.writeMem(0xa8e5, { 0x30, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8a13);
        EXPECT(gbc.pc(), 0xa86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e5), 0x30);
        EXPECT(gbc.readMem(0xa8e6), 0x83);
        // 30 01EB
        gbc.setState(0x4823, 0xb885, 0x19a0, 0x75a7, 0x2930, 0xfa3c, 0x1, 0x0);
        gbc.writeMem(0x4823, { 0x30, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb885);
        EXPECT(gbc.pc(), 0x486c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01EC
        gbc.setState(0xc3d3, 0x987a, 0x1cb0, 0x733, 0x98dd, 0x53f6, 0x0, 0x1);
        gbc.writeMem(0xc3d3, { 0x30, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x987a);
        EXPECT(gbc.pc(), 0xc3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d3), 0x30);
        EXPECT(gbc.readMem(0xc3d4), 0x32);
        // 30 01ED
        gbc.setState(0x6a6a, 0x32a5, 0x84f0, 0x3280, 0xa90d, 0x2982, 0x1, 0x1);
        gbc.writeMem(0x6a6a, { 0x30, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x32a5);
        EXPECT(gbc.pc(), 0x6a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 01EE
        gbc.setState(0x3a1e, 0x3a10, 0x37a0, 0x2a, 0xe4d7, 0xacc2, 0x1, 0x1);
        gbc.writeMem(0x3a1e, { 0x30, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3a10);
        EXPECT(gbc.pc(), 0x3a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01EF
        gbc.setState(0x5957, 0x5d28, 0xd3e0, 0x311a, 0x7258, 0x1f42, 0x0, 0x1);
        gbc.writeMem(0x5957, { 0x30, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5d28);
        EXPECT(gbc.pc(), 0x592d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01F0
        gbc.setState(0x96fd, 0x4fd8, 0xf840, 0x6a8e, 0xa864, 0x2c00, 0x1, 0x1);
        gbc.writeMem(0x96fd, { 0x30, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4fd8);
        EXPECT(gbc.pc(), 0x96d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96fd), 0x30);
        EXPECT(gbc.readMem(0x96fe), 0xd7);
        // 30 01F1
        gbc.setState(0x5660, 0xdf4c, 0x81a0, 0x37f5, 0xd650, 0x4d23, 0x0, 0x1);
        gbc.writeMem(0x5660, { 0x30, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdf4c);
        EXPECT(gbc.pc(), 0x56e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01F2
        gbc.setState(0x55f4, 0x4279, 0x2d10, 0xebf6, 0x9842, 0xa984, 0x1, 0x0);
        gbc.writeMem(0x55f4, { 0x30, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4279);
        EXPECT(gbc.pc(), 0x55f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01F3
        gbc.setState(0x349a, 0x171a, 0x9740, 0xf882, 0x7ba0, 0x9332, 0x0, 0x0);
        gbc.writeMem(0x349a, { 0x30, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x171a);
        EXPECT(gbc.pc(), 0x3439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01F4
        gbc.setState(0xed8c, 0x7188, 0x8e90, 0x12e8, 0xd422, 0x513a, 0x1, 0x0);
        gbc.writeMem(0xed8c, { 0x30, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7188);
        EXPECT(gbc.pc(), 0xed8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed8c), 0x30);
        EXPECT(gbc.readMem(0xed8d), 0x1);
        // 30 01F5
        gbc.setState(0xe329, 0x4771, 0xe9e0, 0xefe5, 0x16c9, 0x82c0, 0x0, 0x1);
        gbc.writeMem(0xe329, { 0x30, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4771);
        EXPECT(gbc.pc(), 0xe32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe329), 0x30);
        EXPECT(gbc.readMem(0xe32a), 0x4);
        // 30 01F6
        gbc.setState(0xe68f, 0xb4e7, 0x9f00, 0x98e5, 0x5ea5, 0x7429, 0x0, 0x1);
        gbc.writeMem(0xe68f, { 0x30, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb4e7);
        EXPECT(gbc.pc(), 0xe6f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68f), 0x30);
        EXPECT(gbc.readMem(0xe690), 0x62);
        // 30 01F7
        gbc.setState(0xe654, 0x475b, 0x8510, 0xf27a, 0x1bd8, 0x70f6, 0x0, 0x1);
        gbc.writeMem(0xe654, { 0x30, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x475b);
        EXPECT(gbc.pc(), 0xe656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe654), 0x30);
        EXPECT(gbc.readMem(0xe655), 0x4b);
        // 30 01F8
        gbc.setState(0xad65, 0x466f, 0xf670, 0xf026, 0xb981, 0x1b4d, 0x0, 0x0);
        gbc.writeMem(0xad65, { 0x30, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x466f);
        EXPECT(gbc.pc(), 0xad67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad65), 0x30);
        EXPECT(gbc.readMem(0xad66), 0x25);
        // 30 01F9
        gbc.setState(0xaed3, 0x944d, 0x44d0, 0x3cea, 0x86de, 0x7a0d, 0x1, 0x0);
        gbc.writeMem(0xaed3, { 0x30, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x944d);
        EXPECT(gbc.pc(), 0xaed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed3), 0x30);
        EXPECT(gbc.readMem(0xaed4), 0xb2);
        // 30 01FA
        gbc.setState(0x96d9, 0x6848, 0x3710, 0x1f65, 0x3eb0, 0x18e1, 0x0, 0x1);
        gbc.writeMem(0x96d9, { 0x30, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6848);
        EXPECT(gbc.pc(), 0x96db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d9), 0x30);
        EXPECT(gbc.readMem(0x96da), 0xf1);
        // 30 01FB
        gbc.setState(0xc1f, 0x621c, 0xd7e0, 0x68be, 0x10fa, 0xdeb7, 0x1, 0x1);
        gbc.writeMem(0xc1f, { 0x30, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x621c);
        EXPECT(gbc.pc(), 0xc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01FC
        gbc.setState(0x1a62, 0x8fcc, 0x6940, 0x7216, 0x61d1, 0x4382, 0x0, 0x1);
        gbc.writeMem(0x1a62, { 0x30, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8fcc);
        EXPECT(gbc.pc(), 0x1a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 01FD
        gbc.setState(0x743a, 0x6d6a, 0xe0d0, 0x8760, 0x8f64, 0x4aba, 0x0, 0x1);
        gbc.writeMem(0x743a, { 0x30, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6d6a);
        EXPECT(gbc.pc(), 0x743c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 01FE
        gbc.setState(0x810, 0x6684, 0x8ea0, 0x111, 0xba40, 0x4b97, 0x0, 0x1);
        gbc.writeMem(0x810, { 0x30, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6684);
        EXPECT(gbc.pc(), 0x7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 01FF
        gbc.setState(0xa43d, 0x80ba, 0x84d0, 0x4f3f, 0x64da, 0xec40, 0x1, 0x1);
        gbc.writeMem(0xa43d, { 0x30, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x80ba);
        EXPECT(gbc.pc(), 0xa43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa43d), 0x30);
        EXPECT(gbc.readMem(0xa43e), 0xa4);
        // 30 0200
        gbc.setState(0x167e, 0x40f4, 0x5ad0, 0xae00, 0x8294, 0xb07, 0x1, 0x1);
        gbc.writeMem(0x167e, { 0x30, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x40f4);
        EXPECT(gbc.pc(), 0x1680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0201
        gbc.setState(0xb981, 0x7deb, 0x70, 0xdfff, 0xdf5f, 0xa454, 0x1, 0x1);
        gbc.writeMem(0xb981, { 0x30, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7deb);
        EXPECT(gbc.pc(), 0xb983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb981), 0x30);
        EXPECT(gbc.readMem(0xb982), 0x6c);
        // 30 0202
        gbc.setState(0xec50, 0x5737, 0xd4a0, 0xae69, 0xb6a7, 0xc4f6, 0x0, 0x0);
        gbc.writeMem(0xec50, { 0x30, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5737);
        EXPECT(gbc.pc(), 0xec24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec50), 0x30);
        EXPECT(gbc.readMem(0xec51), 0xd2);
        // 30 0203
        gbc.setState(0x778b, 0x30a, 0x2f00, 0x22f6, 0xe34e, 0xd467, 0x1, 0x0);
        gbc.writeMem(0x778b, { 0x30, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x30a);
        EXPECT(gbc.pc(), 0x77c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0204
        gbc.setState(0x3aa, 0x5e5c, 0xd080, 0x8529, 0xec62, 0x965c, 0x1, 0x1);
        gbc.writeMem(0x3aa, { 0x30, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5e5c);
        EXPECT(gbc.pc(), 0x3ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0205
        gbc.setState(0xbb58, 0xc63a, 0x9240, 0xc1cc, 0xcb3c, 0xb055, 0x0, 0x0);
        gbc.writeMem(0xbb58, { 0x30, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc63a);
        EXPECT(gbc.pc(), 0xbaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb58), 0x30);
        EXPECT(gbc.readMem(0xbb59), 0x9f);
        // 30 0206
        gbc.setState(0x6e8e, 0x920a, 0x30f0, 0xf245, 0x6156, 0xca4, 0x1, 0x1);
        gbc.writeMem(0x6e8e, { 0x30, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x920a);
        EXPECT(gbc.pc(), 0x6e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0208
        gbc.setState(0xd59c, 0xa744, 0xe450, 0x15c5, 0xa5ab, 0xb311, 0x0, 0x0);
        gbc.writeMem(0xd59c, { 0x30, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa744);
        EXPECT(gbc.pc(), 0xd59e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd59c), 0x30);
        EXPECT(gbc.readMem(0xd59d), 0xa);
        // 30 0209
        gbc.setState(0x3012, 0x4c6a, 0x4b00, 0xd3ba, 0x5f93, 0xa6aa, 0x0, 0x0);
        gbc.writeMem(0x3012, { 0x30, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4c6a);
        EXPECT(gbc.pc(), 0x2fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 020A
        gbc.setState(0x2c71, 0x2794, 0x26c0, 0xca55, 0x5bd8, 0x571c, 0x1, 0x1);
        gbc.writeMem(0x2c71, { 0x30, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2794);
        EXPECT(gbc.pc(), 0x2ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 020B
        gbc.setState(0x8672, 0x4be, 0x5b20, 0xbb3e, 0x6545, 0x2580, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0x30, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4be);
        EXPECT(gbc.pc(), 0x8619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8672), 0x30);
        EXPECT(gbc.readMem(0x8673), 0xa5);
        // 30 020C
        gbc.setState(0xe20e, 0x2cf0, 0xbb80, 0x2bf6, 0x4f09, 0xe9f2, 0x1, 0x1);
        gbc.writeMem(0xe20e, { 0x30, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2cf0);
        EXPECT(gbc.pc(), 0xe23a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe20e), 0x30);
        EXPECT(gbc.readMem(0xe20f), 0x2a);
        // 30 020D
        gbc.setState(0x624e, 0x4ad5, 0x1350, 0x9853, 0x6f74, 0x84d5, 0x1, 0x1);
        gbc.writeMem(0x624e, { 0x30, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4ad5);
        EXPECT(gbc.pc(), 0x6250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 020E
        gbc.setState(0x9931, 0xeef2, 0x33f0, 0x1c42, 0xd917, 0xe8cd, 0x0, 0x1);
        gbc.writeMem(0x9931, { 0x30, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xeef2);
        EXPECT(gbc.pc(), 0x9933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9931), 0x30);
        EXPECT(gbc.readMem(0x9932), 0x3c);
        // 30 020F
        gbc.setState(0xced9, 0xd3b1, 0xb030, 0xdd2e, 0x9180, 0x145c, 0x0, 0x1);
        gbc.writeMem(0xced9, { 0x30, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd3b1);
        EXPECT(gbc.pc(), 0xcedb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced9), 0x30);
        EXPECT(gbc.readMem(0xceda), 0xb7);
        // 30 0210
        gbc.setState(0x229f, 0x21ab, 0x600, 0xc52, 0xe167, 0x3e46, 0x0, 0x0);
        gbc.writeMem(0x229f, { 0x30, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x21ab);
        EXPECT(gbc.pc(), 0x225f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0212
        gbc.setState(0x9096, 0xb66c, 0xa690, 0x6add, 0xd894, 0xb38e, 0x1, 0x0);
        gbc.writeMem(0x9096, { 0x30, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb66c);
        EXPECT(gbc.pc(), 0x9098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9096), 0x30);
        EXPECT(gbc.readMem(0x9097), 0x63);
        // 30 0213
        gbc.setState(0x9ed5, 0xf7d6, 0x8190, 0x6625, 0xa819, 0xc247, 0x0, 0x1);
        gbc.writeMem(0x9ed5, { 0x30, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf7d6);
        EXPECT(gbc.pc(), 0x9ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed5), 0x30);
        EXPECT(gbc.readMem(0x9ed6), 0x18);
        // 30 0214
        gbc.setState(0x2319, 0x301a, 0xa710, 0xeb56, 0x80e3, 0x9c60, 0x1, 0x1);
        gbc.writeMem(0x2319, { 0x30, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x301a);
        EXPECT(gbc.pc(), 0x231b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0215
        gbc.setState(0xa77a, 0xd0ed, 0x35d0, 0xeb1c, 0x7b69, 0x37bb, 0x1, 0x1);
        gbc.writeMem(0xa77a, { 0x30, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd0ed);
        EXPECT(gbc.pc(), 0xa77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa77a), 0x30);
        EXPECT(gbc.readMem(0xa77b), 0x2e);
        // 30 0216
        gbc.setState(0xdfa0, 0xaefa, 0xb8d0, 0x82a, 0xc8f7, 0x53e4, 0x1, 0x1);
        gbc.writeMem(0xdfa0, { 0x30, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xaefa);
        EXPECT(gbc.pc(), 0xdfa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa0), 0x30);
        EXPECT(gbc.readMem(0xdfa1), 0x21);
        // 30 0217
        gbc.setState(0x2129, 0x1f2, 0x60c0, 0x6880, 0x7ce1, 0x2324, 0x1, 0x1);
        gbc.writeMem(0x2129, { 0x30, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1f2);
        EXPECT(gbc.pc(), 0x214e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0218
        gbc.setState(0x8d8e, 0xee5b, 0xab60, 0xf2d4, 0x2b38, 0xab6b, 0x1, 0x1);
        gbc.writeMem(0x8d8e, { 0x30, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xee5b);
        EXPECT(gbc.pc(), 0x8e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8e), 0x30);
        EXPECT(gbc.readMem(0x8d8f), 0x7b);
        // 30 021A
        gbc.setState(0xda56, 0x9005, 0xbe50, 0xb3ed, 0x94c8, 0x4f9f, 0x1, 0x1);
        gbc.writeMem(0xda56, { 0x30, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9005);
        EXPECT(gbc.pc(), 0xda58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda56), 0x30);
        EXPECT(gbc.readMem(0xda57), 0xc2);
        // 30 021B
        gbc.setState(0xa6b3, 0xc2df, 0x3b90, 0xea8c, 0xeba, 0x628f, 0x1, 0x1);
        gbc.writeMem(0xa6b3, { 0x30, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc2df);
        EXPECT(gbc.pc(), 0xa6b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b3), 0x30);
        EXPECT(gbc.readMem(0xa6b4), 0x3d);
        // 30 021C
        gbc.setState(0x687a, 0xdff2, 0x32e0, 0x4bf1, 0x8a9, 0x6f03, 0x0, 0x1);
        gbc.writeMem(0x687a, { 0x30, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdff2);
        EXPECT(gbc.pc(), 0x68ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 021D
        gbc.setState(0x9397, 0xa2df, 0x1270, 0x6028, 0xc28, 0x91f5, 0x0, 0x0);
        gbc.writeMem(0x9397, { 0x30, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa2df);
        EXPECT(gbc.pc(), 0x9399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9397), 0x30);
        EXPECT(gbc.readMem(0x9398), 0x13);
        // 30 021E
        gbc.setState(0x64cd, 0x104e, 0x7d10, 0x4246, 0xe424, 0x4ca4, 0x0, 0x1);
        gbc.writeMem(0x64cd, { 0x30, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x104e);
        EXPECT(gbc.pc(), 0x64cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 021F
        gbc.setState(0xe7b0, 0xd808, 0xdeb0, 0xe813, 0x86d0, 0x94ec, 0x0, 0x1);
        gbc.writeMem(0xe7b0, { 0x30, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd808);
        EXPECT(gbc.pc(), 0xe7b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b0), 0x30);
        EXPECT(gbc.readMem(0xe7b1), 0x19);
        // 30 0220
        gbc.setState(0xcfa9, 0x8070, 0x89f0, 0xced3, 0x57f5, 0x3dd0, 0x1, 0x0);
        gbc.writeMem(0xcfa9, { 0x30, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8070);
        EXPECT(gbc.pc(), 0xcfab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa9), 0x30);
        EXPECT(gbc.readMem(0xcfaa), 0xe);
        // 30 0221
        gbc.setState(0x1e3f, 0xc5b0, 0x4b90, 0xd24f, 0xac7b, 0x233, 0x1, 0x1);
        gbc.writeMem(0x1e3f, { 0x30, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc5b0);
        EXPECT(gbc.pc(), 0x1e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0223
        gbc.setState(0x2d46, 0x9225, 0x48a0, 0x2f70, 0x39c7, 0x5b62, 0x1, 0x0);
        gbc.writeMem(0x2d46, { 0x30, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9225);
        EXPECT(gbc.pc(), 0x2d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0224
        gbc.setState(0xdded, 0xbe34, 0x3f50, 0x778, 0x9e15, 0x7929, 0x0, 0x1);
        gbc.writeMem(0xdded, { 0x30, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbe34);
        EXPECT(gbc.pc(), 0xddef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdded), 0x30);
        EXPECT(gbc.readMem(0xddee), 0x80);
        // 30 0225
        gbc.setState(0xc2b7, 0xc922, 0x3260, 0x168, 0x6bf3, 0x4c96, 0x0, 0x1);
        gbc.writeMem(0xc2b7, { 0x30, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc922);
        EXPECT(gbc.pc(), 0xc290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b7), 0x30);
        EXPECT(gbc.readMem(0xc2b8), 0xd7);
        // 30 0226
        gbc.setState(0x546a, 0x7333, 0x9f30, 0x2267, 0xccb2, 0x7496, 0x0, 0x1);
        gbc.writeMem(0x546a, { 0x30, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7333);
        EXPECT(gbc.pc(), 0x546c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0227
        gbc.setState(0x5536, 0x5610, 0xa530, 0x6737, 0xdab9, 0xdf6c, 0x1, 0x1);
        gbc.writeMem(0x5536, { 0x30, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5610);
        EXPECT(gbc.pc(), 0x5538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0228
        gbc.setState(0x4ef4, 0x4828, 0x8b00, 0x1a3a, 0xca10, 0x4007, 0x1, 0x0);
        gbc.writeMem(0x4ef4, { 0x30, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4828);
        EXPECT(gbc.pc(), 0x4ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0229
        gbc.setState(0xab2c, 0x43ef, 0x2490, 0x25d4, 0x8db3, 0xd803, 0x0, 0x0);
        gbc.writeMem(0xab2c, { 0x30, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x43ef);
        EXPECT(gbc.pc(), 0xab2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2c), 0x30);
        EXPECT(gbc.readMem(0xab2d), 0xff);
        // 30 022A
        gbc.setState(0x61b5, 0x1a2b, 0x72a0, 0x9125, 0x5f4b, 0x1aea, 0x1, 0x1);
        gbc.writeMem(0x61b5, { 0x30, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1a2b);
        EXPECT(gbc.pc(), 0x61b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 022B
        gbc.setState(0x5ccc, 0xd274, 0xbc20, 0x8154, 0x901c, 0xd096, 0x0, 0x0);
        gbc.writeMem(0x5ccc, { 0x30, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd274);
        EXPECT(gbc.pc(), 0x5d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 022C
        gbc.setState(0x5c8, 0x4668, 0xd110, 0x5833, 0xc066, 0x3808, 0x1, 0x1);
        gbc.writeMem(0x5c8, { 0x30, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4668);
        EXPECT(gbc.pc(), 0x5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 022D
        gbc.setState(0x3ac6, 0x305e, 0x9750, 0x8522, 0xeea3, 0xc8f5, 0x0, 0x1);
        gbc.writeMem(0x3ac6, { 0x30, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x305e);
        EXPECT(gbc.pc(), 0x3ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 022E
        gbc.setState(0x5220, 0x3523, 0xc5d0, 0xc5ce, 0x4d06, 0xbb9, 0x1, 0x1);
        gbc.writeMem(0x5220, { 0x30, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3523);
        EXPECT(gbc.pc(), 0x5222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 022F
        gbc.setState(0xc02b, 0xfde8, 0x82d0, 0xd293, 0xf856, 0xa7b9, 0x1, 0x0);
        gbc.writeMem(0xc02b, { 0x30, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfde8);
        EXPECT(gbc.pc(), 0xc02d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc02b), 0x30);
        EXPECT(gbc.readMem(0xc02c), 0xbe);
        // 30 0230
        gbc.setState(0x9760, 0x7f03, 0x830, 0xaa81, 0xd157, 0xb4ad, 0x0, 0x1);
        gbc.writeMem(0x9760, { 0x30, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7f03);
        EXPECT(gbc.pc(), 0x9762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9760), 0x30);
        EXPECT(gbc.readMem(0x9761), 0x3);
        // 30 0231
        gbc.setState(0x89a4, 0xd3ff, 0x6ef0, 0x647b, 0x68c5, 0xb28a, 0x0, 0x0);
        gbc.writeMem(0x89a4, { 0x30, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd3ff);
        EXPECT(gbc.pc(), 0x89a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a4), 0x30);
        EXPECT(gbc.readMem(0x89a5), 0x39);
        // 30 0232
        gbc.setState(0x1a36, 0xfacb, 0x2280, 0x6b56, 0xb5ee, 0xc3c6, 0x0, 0x0);
        gbc.writeMem(0x1a36, { 0x30, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfacb);
        EXPECT(gbc.pc(), 0x1ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0233
        gbc.setState(0xc726, 0xe95b, 0xd20, 0xb03b, 0x9389, 0x62d5, 0x1, 0x1);
        gbc.writeMem(0xc726, { 0x30, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe95b);
        EXPECT(gbc.pc(), 0xc6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc726), 0x30);
        EXPECT(gbc.readMem(0xc727), 0x8b);
        // 30 0234
        gbc.setState(0xc63e, 0x2f91, 0xce10, 0xdc80, 0x3fe2, 0xac4, 0x1, 0x1);
        gbc.writeMem(0xc63e, { 0x30, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2f91);
        EXPECT(gbc.pc(), 0xc640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc63e), 0x30);
        EXPECT(gbc.readMem(0xc63f), 0xde);
        // 30 0235
        gbc.setState(0x4160, 0xa4e0, 0x1e30, 0xf57d, 0xe6ea, 0x25b3, 0x0, 0x0);
        gbc.writeMem(0x4160, { 0x30, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa4e0);
        EXPECT(gbc.pc(), 0x4162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0236
        gbc.setState(0x45f0, 0x98e1, 0x37f0, 0x6e8c, 0xe203, 0x9584, 0x0, 0x1);
        gbc.writeMem(0x45f0, { 0x30, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x98e1);
        EXPECT(gbc.pc(), 0x45f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0237
        gbc.setState(0x3726, 0x8446, 0x3250, 0x5f62, 0x2283, 0x1a06, 0x0, 0x1);
        gbc.writeMem(0x3726, { 0x30, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8446);
        EXPECT(gbc.pc(), 0x3728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0238
        gbc.setState(0x7649, 0xd72b, 0xea10, 0xc9c8, 0x23c6, 0x3c75, 0x0, 0x0);
        gbc.writeMem(0x7649, { 0x30, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd72b);
        EXPECT(gbc.pc(), 0x764b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0239
        gbc.setState(0x7412, 0x1c28, 0x5140, 0xbcb, 0xf5b, 0x1950, 0x1, 0x0);
        gbc.writeMem(0x7412, { 0x30, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1c28);
        EXPECT(gbc.pc(), 0x73f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 023B
        gbc.setState(0x9023, 0x3046, 0x1010, 0x19f9, 0x2f33, 0xf98d, 0x0, 0x0);
        gbc.writeMem(0x9023, { 0x30, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3046);
        EXPECT(gbc.pc(), 0x9025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9023), 0x30);
        EXPECT(gbc.readMem(0x9024), 0x1e);
        // 30 023C
        gbc.setState(0x3dfa, 0xf2c2, 0xce20, 0x4ee1, 0xe1e6, 0x7018, 0x1, 0x1);
        gbc.writeMem(0x3dfa, { 0x30, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf2c2);
        EXPECT(gbc.pc(), 0x3df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 023D
        gbc.setState(0x7bc7, 0xeb4b, 0x2970, 0xa78c, 0x3097, 0x7d50, 0x1, 0x0);
        gbc.writeMem(0x7bc7, { 0x30, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xeb4b);
        EXPECT(gbc.pc(), 0x7bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 023E
        gbc.setState(0x32c4, 0xae5, 0xa110, 0x8429, 0xd4ee, 0xf197, 0x1, 0x0);
        gbc.writeMem(0x32c4, { 0x30, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xae5);
        EXPECT(gbc.pc(), 0x32c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 023F
        gbc.setState(0xaddc, 0x1fe1, 0x35e0, 0x9c69, 0x978, 0x4057, 0x0, 0x1);
        gbc.writeMem(0xaddc, { 0x30, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1fe1);
        EXPECT(gbc.pc(), 0xad78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaddc), 0x30);
        EXPECT(gbc.readMem(0xaddd), 0x9a);
        // 30 0240
        gbc.setState(0x1cbb, 0xa6e, 0xb760, 0x23f7, 0xa7a6, 0x474b, 0x0, 0x0);
        gbc.writeMem(0x1cbb, { 0x30, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa6e);
        EXPECT(gbc.pc(), 0x1c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0241
        gbc.setState(0xbaa5, 0xf525, 0x8880, 0x9821, 0xf99a, 0x169b, 0x0, 0x1);
        gbc.writeMem(0xbaa5, { 0x30, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf525);
        EXPECT(gbc.pc(), 0xba5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa5), 0x30);
        EXPECT(gbc.readMem(0xbaa6), 0xb6);
        // 30 0242
        gbc.setState(0x356d, 0x15e9, 0xc480, 0x8ea9, 0xe0f2, 0x8858, 0x0, 0x0);
        gbc.writeMem(0x356d, { 0x30, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x15e9);
        EXPECT(gbc.pc(), 0x3525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0243
        gbc.setState(0xd709, 0x718b, 0x9700, 0xb71f, 0xd2c2, 0xe4a4, 0x1, 0x1);
        gbc.writeMem(0xd709, { 0x30, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x718b);
        EXPECT(gbc.pc(), 0xd708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd709), 0x30);
        EXPECT(gbc.readMem(0xd70a), 0xfd);
        // 30 0244
        gbc.setState(0x43ab, 0xfece, 0xfd0, 0x1a9b, 0xb3c3, 0xbee1, 0x0, 0x0);
        gbc.writeMem(0x43ab, { 0x30, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfece);
        EXPECT(gbc.pc(), 0x43ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0245
        gbc.setState(0xb22b, 0x65ed, 0xa920, 0xb6d5, 0xd662, 0x488e, 0x0, 0x1);
        gbc.writeMem(0xb22b, { 0x30, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x65ed);
        EXPECT(gbc.pc(), 0xb21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb22b), 0x30);
        EXPECT(gbc.readMem(0xb22c), 0xf1);
        // 30 0246
        gbc.setState(0x405e, 0x91f3, 0x8770, 0xaf09, 0xdaee, 0x8eec, 0x1, 0x1);
        gbc.writeMem(0x405e, { 0x30, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x91f3);
        EXPECT(gbc.pc(), 0x4060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0247
        gbc.setState(0x7c59, 0x50a, 0xf0, 0x4dcb, 0xf8f4, 0x3655, 0x0, 0x1);
        gbc.writeMem(0x7c59, { 0x30, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x50a);
        EXPECT(gbc.pc(), 0x7c5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0248
        gbc.setState(0x4da9, 0x9750, 0xaa70, 0x964d, 0x7875, 0x531d, 0x0, 0x0);
        gbc.writeMem(0x4da9, { 0x30, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9750);
        EXPECT(gbc.pc(), 0x4dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0249
        gbc.setState(0x20c1, 0xbdb4, 0x1a0, 0x6153, 0xdcb, 0x13c0, 0x1, 0x0);
        gbc.writeMem(0x20c1, { 0x30, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbdb4);
        EXPECT(gbc.pc(), 0x20c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 024A
        gbc.setState(0x6176, 0x1ee5, 0xc3b0, 0xda, 0xafb, 0x4e97, 0x0, 0x1);
        gbc.writeMem(0x6176, { 0x30, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1ee5);
        EXPECT(gbc.pc(), 0x6178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 024B
        gbc.setState(0xc117, 0x944, 0x8c90, 0x1123, 0x3e9a, 0xc980, 0x1, 0x1);
        gbc.writeMem(0xc117, { 0x30, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x944);
        EXPECT(gbc.pc(), 0xc119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc117), 0x30);
        EXPECT(gbc.readMem(0xc118), 0xbd);
        // 30 024C
        gbc.setState(0x27fa, 0x6de, 0x8ea0, 0x4dd0, 0xa396, 0x72e1, 0x1, 0x0);
        gbc.writeMem(0x27fa, { 0x30, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6de);
        EXPECT(gbc.pc(), 0x27fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 024D
        gbc.setState(0xb623, 0x20cc, 0x1640, 0x455f, 0x2ca6, 0x8e20, 0x1, 0x0);
        gbc.writeMem(0xb623, { 0x30, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x20cc);
        EXPECT(gbc.pc(), 0xb690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb623), 0x30);
        EXPECT(gbc.readMem(0xb624), 0x6b);
        // 30 024E
        gbc.setState(0x39b, 0xcfa6, 0xe660, 0xc10b, 0x5798, 0x85b1, 0x0, 0x0);
        gbc.writeMem(0x39b, { 0x30, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcfa6);
        EXPECT(gbc.pc(), 0x380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 024F
        gbc.setState(0x3bf8, 0x79d1, 0xc390, 0xa08a, 0xb5d7, 0xe153, 0x0, 0x1);
        gbc.writeMem(0x3bf8, { 0x30, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x79d1);
        EXPECT(gbc.pc(), 0x3bfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0250
        gbc.setState(0x1e5, 0xf6f9, 0xafd0, 0x4a5, 0xb69e, 0x9ff1, 0x1, 0x1);
        gbc.writeMem(0x1e5, { 0x30, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf6f9);
        EXPECT(gbc.pc(), 0x1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0251
        gbc.setState(0xdb61, 0x7dcf, 0x5200, 0x6a00, 0xfc58, 0x51e6, 0x0, 0x1);
        gbc.writeMem(0xdb61, { 0x30, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7dcf);
        EXPECT(gbc.pc(), 0xdb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb61), 0x30);
        EXPECT(gbc.readMem(0xdb62), 0x16);
        // 30 0252
        gbc.setState(0x4bd7, 0x93e4, 0x4120, 0x71ca, 0x1198, 0x9159, 0x0, 0x0);
        gbc.writeMem(0x4bd7, { 0x30, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x93e4);
        EXPECT(gbc.pc(), 0x4b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0253
        gbc.setState(0xbbfc, 0xa116, 0xc740, 0xde11, 0xc02d, 0xf18a, 0x0, 0x1);
        gbc.writeMem(0xbbfc, { 0x30, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa116);
        EXPECT(gbc.pc(), 0xbbc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbfc), 0x30);
        EXPECT(gbc.readMem(0xbbfd), 0xca);
        // 30 0255
        gbc.setState(0xdaa4, 0xbc2f, 0x5410, 0xe41a, 0xbcca, 0x5b00, 0x1, 0x1);
        gbc.writeMem(0xdaa4, { 0x30, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xbc2f);
        EXPECT(gbc.pc(), 0xdaa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa4), 0x30);
        EXPECT(gbc.readMem(0xdaa5), 0xc5);
        // 30 0256
        gbc.setState(0xa63c, 0xdfa2, 0x52f0, 0xbded, 0xee3a, 0x4487, 0x0, 0x1);
        gbc.writeMem(0xa63c, { 0x30, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdfa2);
        EXPECT(gbc.pc(), 0xa63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63c), 0x30);
        EXPECT(gbc.readMem(0xa63d), 0xb2);
        // 30 0257
        gbc.setState(0x2b50, 0xdb4f, 0xf350, 0xdb00, 0x8143, 0x2de8, 0x0, 0x1);
        gbc.writeMem(0x2b50, { 0x30, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdb4f);
        EXPECT(gbc.pc(), 0x2b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0258
        gbc.setState(0xc4a8, 0x5c31, 0x2960, 0x6d1d, 0xba97, 0x3a88, 0x1, 0x0);
        gbc.writeMem(0xc4a8, { 0x30, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5c31);
        EXPECT(gbc.pc(), 0xc527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a8), 0x30);
        EXPECT(gbc.readMem(0xc4a9), 0x7d);
        // 30 0259
        gbc.setState(0x22b0, 0xca05, 0x5920, 0x4025, 0x7f5, 0xbfb6, 0x1, 0x0);
        gbc.writeMem(0x22b0, { 0x30, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xca05);
        EXPECT(gbc.pc(), 0x2327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 025A
        gbc.setState(0x4fa7, 0x7b, 0x4200, 0x144f, 0x9d59, 0xa117, 0x0, 0x0);
        gbc.writeMem(0x4fa7, { 0x30, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7b);
        EXPECT(gbc.pc(), 0x4f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 025C
        gbc.setState(0xd2f0, 0x8710, 0x6ee0, 0x32f3, 0xb19e, 0x2abb, 0x0, 0x0);
        gbc.writeMem(0xd2f0, { 0x30, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8710);
        EXPECT(gbc.pc(), 0xd2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2f0), 0x30);
        EXPECT(gbc.readMem(0xd2f1), 0xbc);
        // 30 025D
        gbc.setState(0x7d68, 0x58c2, 0x4920, 0xe5e5, 0x2c78, 0xa0a5, 0x1, 0x1);
        gbc.writeMem(0x7d68, { 0x30, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x58c2);
        EXPECT(gbc.pc(), 0x7d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 025E
        gbc.setState(0xada4, 0x3789, 0x8680, 0xd609, 0x3d45, 0x4aea, 0x1, 0x1);
        gbc.writeMem(0xada4, { 0x30, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3789);
        EXPECT(gbc.pc(), 0xad67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada4), 0x30);
        EXPECT(gbc.readMem(0xada5), 0xc1);
        // 30 025F
        gbc.setState(0x6898, 0xa45c, 0xe2f0, 0xdf70, 0x9da8, 0x6ad9, 0x1, 0x1);
        gbc.writeMem(0x6898, { 0x30, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa45c);
        EXPECT(gbc.pc(), 0x689a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0260
        gbc.setState(0x84fe, 0xee64, 0xdd90, 0xe100, 0x7c10, 0x4120, 0x0, 0x0);
        gbc.writeMem(0x84fe, { 0x30, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xee64);
        EXPECT(gbc.pc(), 0x8500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fe), 0x30);
        EXPECT(gbc.readMem(0x84ff), 0xd3);
        // 30 0261
        gbc.setState(0x257f, 0x9b3d, 0x1060, 0x9fb, 0x32e6, 0xcda3, 0x1, 0x0);
        gbc.writeMem(0x257f, { 0x30, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9b3d);
        EXPECT(gbc.pc(), 0x2528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0262
        gbc.setState(0xe7a2, 0x9623, 0xa760, 0x151e, 0x8495, 0xd96a, 0x0, 0x0);
        gbc.writeMem(0xe7a2, { 0x30, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9623);
        EXPECT(gbc.pc(), 0xe7d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a2), 0x30);
        EXPECT(gbc.readMem(0xe7a3), 0x2f);
        // 30 0263
        gbc.setState(0x255a, 0xad63, 0x6210, 0x2c3d, 0x913, 0x697d, 0x0, 0x0);
        gbc.writeMem(0x255a, { 0x30, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xad63);
        EXPECT(gbc.pc(), 0x255c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0264
        gbc.setState(0x71e2, 0x15db, 0x57c0, 0xc985, 0xe115, 0x47b9, 0x1, 0x0);
        gbc.writeMem(0x71e2, { 0x30, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x15db);
        EXPECT(gbc.pc(), 0x71f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0265
        gbc.setState(0x1323, 0x7265, 0x5a50, 0x8599, 0xb75, 0xda94, 0x1, 0x1);
        gbc.writeMem(0x1323, { 0x30, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7265);
        EXPECT(gbc.pc(), 0x1325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0266
        gbc.setState(0x3b19, 0xf5bc, 0xbbe0, 0x25c2, 0xa460, 0x26c, 0x1, 0x0);
        gbc.writeMem(0x3b19, { 0x30, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf5bc);
        EXPECT(gbc.pc(), 0x3ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0267
        gbc.setState(0x4734, 0x8b58, 0xbf0, 0x97b1, 0x35c6, 0xf0e, 0x0, 0x0);
        gbc.writeMem(0x4734, { 0x30, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8b58);
        EXPECT(gbc.pc(), 0x4736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0268
        gbc.setState(0x3bea, 0x1dc9, 0x64e0, 0xf207, 0x225c, 0x8ceb, 0x0, 0x0);
        gbc.writeMem(0x3bea, { 0x30, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1dc9);
        EXPECT(gbc.pc(), 0x3c29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0269
        gbc.setState(0x2b2c, 0x4b42, 0x81a0, 0x7167, 0xfedd, 0xe3c0, 0x0, 0x0);
        gbc.writeMem(0x2b2c, { 0x30, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4b42);
        EXPECT(gbc.pc(), 0x2ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 026A
        gbc.setState(0xc96e, 0x3c3d, 0x6070, 0xfa67, 0x29e4, 0x6672, 0x1, 0x1);
        gbc.writeMem(0xc96e, { 0x30, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3c3d);
        EXPECT(gbc.pc(), 0xc970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96e), 0x30);
        EXPECT(gbc.readMem(0xc96f), 0x66);
        // 30 026B
        gbc.setState(0xbf83, 0xeb33, 0xbe20, 0x9bbe, 0xce8f, 0x2794, 0x0, 0x0);
        gbc.writeMem(0xbf83, { 0x30, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xeb33);
        EXPECT(gbc.pc(), 0xbfd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf83), 0x30);
        EXPECT(gbc.readMem(0xbf84), 0x52);
        // 30 026C
        gbc.setState(0x9b34, 0x6a7e, 0xec0, 0x4445, 0x3a06, 0x88af, 0x1, 0x1);
        gbc.writeMem(0x9b34, { 0x30, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6a7e);
        EXPECT(gbc.pc(), 0x9b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b34), 0x30);
        EXPECT(gbc.readMem(0x9b35), 0x54);
        // 30 026D
        gbc.setState(0x37d2, 0x906c, 0x1190, 0xb33c, 0x927b, 0x4fbd, 0x0, 0x0);
        gbc.writeMem(0x37d2, { 0x30, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x906c);
        EXPECT(gbc.pc(), 0x37d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 026E
        gbc.setState(0xbbc, 0xce50, 0xd430, 0xdfcd, 0x6b37, 0xd923, 0x0, 0x0);
        gbc.writeMem(0xbbc, { 0x30, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xce50);
        EXPECT(gbc.pc(), 0xbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 026F
        gbc.setState(0x4c7b, 0x7bca, 0xbd90, 0x8a54, 0xdb5d, 0x5703, 0x0, 0x1);
        gbc.writeMem(0x4c7b, { 0x30, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7bca);
        EXPECT(gbc.pc(), 0x4c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0270
        gbc.setState(0x8a7f, 0x7238, 0x6a40, 0xf406, 0xdd56, 0xc71c, 0x0, 0x1);
        gbc.writeMem(0x8a7f, { 0x30, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7238);
        EXPECT(gbc.pc(), 0x8a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a7f), 0x30);
        EXPECT(gbc.readMem(0x8a80), 0x9a);
        // 30 0271
        gbc.setState(0xe8d1, 0xf5c9, 0xfea0, 0x8207, 0x71fb, 0xf086, 0x1, 0x0);
        gbc.writeMem(0xe8d1, { 0x30, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf5c9);
        EXPECT(gbc.pc(), 0xe8e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d1), 0x30);
        EXPECT(gbc.readMem(0xe8d2), 0x12);
        // 30 0273
        gbc.setState(0xbca2, 0xb76b, 0x8ad0, 0xe914, 0xd1a1, 0x165b, 0x1, 0x1);
        gbc.writeMem(0xbca2, { 0x30, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb76b);
        EXPECT(gbc.pc(), 0xbca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca2), 0x30);
        EXPECT(gbc.readMem(0xbca3), 0x4);
        // 30 0275
        gbc.setState(0xc746, 0x95f4, 0xfba0, 0x942a, 0x1838, 0x19ff, 0x1, 0x1);
        gbc.writeMem(0xc746, { 0x30, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x95f4);
        EXPECT(gbc.pc(), 0xc797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc746), 0x30);
        EXPECT(gbc.readMem(0xc747), 0x4f);
        // 30 0276
        gbc.setState(0xfb6, 0x954, 0xe780, 0xe581, 0x661f, 0xba72, 0x1, 0x1);
        gbc.writeMem(0xfb6, { 0x30, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x954);
        EXPECT(gbc.pc(), 0xf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0277
        gbc.setState(0xbe9c, 0x7ee, 0x3ac0, 0xb6b8, 0xd578, 0x9bf2, 0x1, 0x0);
        gbc.writeMem(0xbe9c, { 0x30, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7ee);
        EXPECT(gbc.pc(), 0xbeb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe9c), 0x30);
        EXPECT(gbc.readMem(0xbe9d), 0x1a);
        // 30 0278
        gbc.setState(0xc6aa, 0xc270, 0xc370, 0xf3a6, 0xbb68, 0x685b, 0x0, 0x1);
        gbc.writeMem(0xc6aa, { 0x30, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc270);
        EXPECT(gbc.pc(), 0xc6ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6aa), 0x30);
        EXPECT(gbc.readMem(0xc6ab), 0xd2);
        // 30 0279
        gbc.setState(0xd227, 0x953b, 0x7420, 0xf961, 0x5338, 0xbf55, 0x0, 0x0);
        gbc.writeMem(0xd227, { 0x30, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x953b);
        EXPECT(gbc.pc(), 0xd259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd227), 0x30);
        EXPECT(gbc.readMem(0xd228), 0x30);
        // 30 027A
        gbc.setState(0x8403, 0x967d, 0x8c90, 0x3986, 0xc5a7, 0x3e0, 0x0, 0x1);
        gbc.writeMem(0x8403, { 0x30, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x967d);
        EXPECT(gbc.pc(), 0x8405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8403), 0x30);
        EXPECT(gbc.readMem(0x8404), 0x2);
        // 30 027B
        gbc.setState(0xd7ae, 0x6256, 0x9f60, 0x339f, 0xfd23, 0x6f9e, 0x1, 0x0);
        gbc.writeMem(0xd7ae, { 0x30, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6256);
        EXPECT(gbc.pc(), 0xd771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ae), 0x30);
        EXPECT(gbc.readMem(0xd7af), 0xc1);
        // 30 027C
        gbc.setState(0xb3bb, 0x5e30, 0xe780, 0x8cc6, 0x48a7, 0x538b, 0x0, 0x1);
        gbc.writeMem(0xb3bb, { 0x30, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5e30);
        EXPECT(gbc.pc(), 0xb365);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3bb), 0x30);
        EXPECT(gbc.readMem(0xb3bc), 0xa8);
        // 30 027D
        gbc.setState(0xe458, 0x4cd2, 0xe4a0, 0x51bd, 0x5ef0, 0x3f74, 0x1, 0x1);
        gbc.writeMem(0xe458, { 0x30, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4cd2);
        EXPECT(gbc.pc(), 0xe43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe458), 0x30);
        EXPECT(gbc.readMem(0xe459), 0xe3);
        // 30 027E
        gbc.setState(0x5bbd, 0x857c, 0xcef0, 0xe4b, 0xf174, 0x7e45, 0x1, 0x0);
        gbc.writeMem(0x5bbd, { 0x30, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x857c);
        EXPECT(gbc.pc(), 0x5bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 027F
        gbc.setState(0x5e27, 0xb377, 0x91c0, 0x55fa, 0xf8e4, 0x8c75, 0x0, 0x1);
        gbc.writeMem(0x5e27, { 0x30, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb377);
        EXPECT(gbc.pc(), 0x5e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0280
        gbc.setState(0x374b, 0xfab1, 0x7290, 0xa2c5, 0x3003, 0xf3e9, 0x1, 0x1);
        gbc.writeMem(0x374b, { 0x30, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfab1);
        EXPECT(gbc.pc(), 0x374d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0281
        gbc.setState(0xe60f, 0x73d8, 0xed30, 0xec46, 0xf949, 0x583, 0x1, 0x1);
        gbc.writeMem(0xe60f, { 0x30, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x73d8);
        EXPECT(gbc.pc(), 0xe611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe60f), 0x30);
        EXPECT(gbc.readMem(0xe610), 0xca);
        // 30 0282
        gbc.setState(0xbc73, 0xfc7c, 0xe970, 0x778d, 0x314a, 0x12de, 0x0, 0x1);
        gbc.writeMem(0xbc73, { 0x30, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfc7c);
        EXPECT(gbc.pc(), 0xbc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc73), 0x30);
        EXPECT(gbc.readMem(0xbc74), 0x9d);
        // 30 0284
        gbc.setState(0xa06b, 0x5c91, 0xcd80, 0x7d2e, 0xaa58, 0xb15e, 0x1, 0x0);
        gbc.writeMem(0xa06b, { 0x30, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5c91);
        EXPECT(gbc.pc(), 0x9ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa06b), 0x30);
        EXPECT(gbc.readMem(0xa06c), 0x8a);
        // 30 0285
        gbc.setState(0xe6fe, 0x3486, 0xe910, 0x22aa, 0x3232, 0x6a43, 0x0, 0x0);
        gbc.writeMem(0xe6fe, { 0x30, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3486);
        EXPECT(gbc.pc(), 0xe700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6fe), 0x30);
        EXPECT(gbc.readMem(0xe6ff), 0x28);
        // 30 0286
        gbc.setState(0x1bc5, 0xf5df, 0x7490, 0xe347, 0xdd95, 0x1b66, 0x1, 0x0);
        gbc.writeMem(0x1bc5, { 0x30, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf5df);
        EXPECT(gbc.pc(), 0x1bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0287
        gbc.setState(0x5301, 0xab32, 0xb1e0, 0x3d1, 0x3450, 0xcc97, 0x1, 0x1);
        gbc.writeMem(0x5301, { 0x30, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xab32);
        EXPECT(gbc.pc(), 0x533d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0288
        gbc.setState(0x3841, 0x4d99, 0xf250, 0x52ae, 0xdbfd, 0x24a3, 0x0, 0x0);
        gbc.writeMem(0x3841, { 0x30, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4d99);
        EXPECT(gbc.pc(), 0x3843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0289
        gbc.setState(0xc869, 0x2e5e, 0xc9c0, 0x7787, 0x8b37, 0xdb28, 0x1, 0x0);
        gbc.writeMem(0xc869, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2e5e);
        EXPECT(gbc.pc(), 0xc811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc869), 0x30);
        EXPECT(gbc.readMem(0xc86a), 0xa6);
        // 30 028A
        gbc.setState(0x4e06, 0x3d7f, 0xe590, 0xb69a, 0x41b9, 0x12b0, 0x0, 0x0);
        gbc.writeMem(0x4e06, { 0x30, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3d7f);
        EXPECT(gbc.pc(), 0x4e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 028B
        gbc.setState(0x9d9, 0x78da, 0x4340, 0xd5f0, 0x1c65, 0xa29, 0x0, 0x1);
        gbc.writeMem(0x9d9, { 0x30, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x78da);
        EXPECT(gbc.pc(), 0x9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 028C
        gbc.setState(0xb1a4, 0x7211, 0x2dc0, 0xe2ad, 0x1004, 0xf6cc, 0x1, 0x0);
        gbc.writeMem(0xb1a4, { 0x30, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7211);
        EXPECT(gbc.pc(), 0xb223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a4), 0x30);
        EXPECT(gbc.readMem(0xb1a5), 0x7d);
        // 30 028D
        gbc.setState(0xb1c5, 0xb618, 0xc250, 0xb333, 0x3d9b, 0xd1a9, 0x1, 0x1);
        gbc.writeMem(0xb1c5, { 0x30, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb618);
        EXPECT(gbc.pc(), 0xb1c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c5), 0x30);
        EXPECT(gbc.readMem(0xb1c6), 0x9f);
        // 30 028E
        gbc.setState(0x1fef, 0x4d59, 0x9b00, 0x2422, 0xf0bc, 0x8c03, 0x0, 0x1);
        gbc.writeMem(0x1fef, { 0x30, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4d59);
        EXPECT(gbc.pc(), 0x1f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 028F
        gbc.setState(0xcd30, 0x40e3, 0xe4d0, 0x8dca, 0xbac9, 0xc078, 0x1, 0x1);
        gbc.writeMem(0xcd30, { 0x30, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x40e3);
        EXPECT(gbc.pc(), 0xcd32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd30), 0x30);
        EXPECT(gbc.readMem(0xcd31), 0x32);
        // 30 0290
        gbc.setState(0xe2bc, 0xa7dd, 0x33d0, 0xfa0e, 0xf9d, 0x7324, 0x1, 0x1);
        gbc.writeMem(0xe2bc, { 0x30, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa7dd);
        EXPECT(gbc.pc(), 0xe2be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2bc), 0x30);
        EXPECT(gbc.readMem(0xe2bd), 0xdc);
        // 30 0291
        gbc.setState(0x7fb2, 0xd453, 0x4610, 0xd627, 0xdc44, 0x2184, 0x1, 0x0);
        gbc.writeMem(0x7fb2, { 0x30, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd453);
        EXPECT(gbc.pc(), 0x7fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0292
        gbc.setState(0x60d5, 0xe057, 0x2460, 0xf8aa, 0xfdcc, 0x56d9, 0x1, 0x0);
        gbc.writeMem(0x60d5, { 0x30, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe057);
        EXPECT(gbc.pc(), 0x6095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0293
        gbc.setState(0x82f1, 0xa037, 0x3960, 0x12bb, 0x4c36, 0xb134, 0x1, 0x0);
        gbc.writeMem(0x82f1, { 0x30, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa037);
        EXPECT(gbc.pc(), 0x8315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f1), 0x30);
        EXPECT(gbc.readMem(0x82f2), 0x22);
        // 30 0294
        gbc.setState(0x297e, 0xc5b9, 0xff50, 0xe87, 0x5b68, 0xec7, 0x1, 0x1);
        gbc.writeMem(0x297e, { 0x30, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc5b9);
        EXPECT(gbc.pc(), 0x2980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0295
        gbc.setState(0xda64, 0x1012, 0x66d0, 0x3ff4, 0x1714, 0xf9ff, 0x1, 0x0);
        gbc.writeMem(0xda64, { 0x30, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1012);
        EXPECT(gbc.pc(), 0xda66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda64), 0x30);
        EXPECT(gbc.readMem(0xda65), 0x9b);
        // 30 0296
        gbc.setState(0x6102, 0x8485, 0x8a90, 0x999a, 0x2306, 0xa02d, 0x0, 0x0);
        gbc.writeMem(0x6102, { 0x30, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8485);
        EXPECT(gbc.pc(), 0x6104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0297
        gbc.setState(0x903c, 0x9851, 0x2990, 0xe4e3, 0xf683, 0x660c, 0x1, 0x1);
        gbc.writeMem(0x903c, { 0x30, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9851);
        EXPECT(gbc.pc(), 0x903e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903c), 0x30);
        EXPECT(gbc.readMem(0x903d), 0x8a);
        // 30 0298
        gbc.setState(0x40b6, 0x9134, 0xaca0, 0x28ee, 0xbf9f, 0xd15b, 0x1, 0x1);
        gbc.writeMem(0x40b6, { 0x30, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9134);
        EXPECT(gbc.pc(), 0x407c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0299
        gbc.setState(0xb03b, 0xfa7d, 0x9e60, 0x3b13, 0xb2a3, 0xfb67, 0x1, 0x1);
        gbc.writeMem(0xb03b, { 0x30, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfa7d);
        EXPECT(gbc.pc(), 0xb0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb03b), 0x30);
        EXPECT(gbc.readMem(0xb03c), 0x6e);
        // 30 029A
        gbc.setState(0xae52, 0xa53d, 0x2450, 0x2ed, 0xec14, 0x4580, 0x0, 0x0);
        gbc.writeMem(0xae52, { 0x30, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa53d);
        EXPECT(gbc.pc(), 0xae54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae52), 0x30);
        EXPECT(gbc.readMem(0xae53), 0x4c);
        // 30 029B
        gbc.setState(0x9a68, 0x2b98, 0xca90, 0x76b2, 0x73b5, 0x1d17, 0x0, 0x0);
        gbc.writeMem(0x9a68, { 0x30, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2b98);
        EXPECT(gbc.pc(), 0x9a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a68), 0x30);
        EXPECT(gbc.readMem(0x9a69), 0x66);
        // 30 029C
        gbc.setState(0xdfcb, 0xa502, 0x1110, 0xcda7, 0x56eb, 0xa82b, 0x1, 0x0);
        gbc.writeMem(0xdfcb, { 0x30, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa502);
        EXPECT(gbc.pc(), 0xdfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfcb), 0x30);
        EXPECT(gbc.readMem(0xdfcc), 0xc6);
        // 30 029D
        gbc.setState(0x6749, 0x6f1a, 0x1bb0, 0xf5a2, 0x1b54, 0xd124, 0x1, 0x0);
        gbc.writeMem(0x6749, { 0x30, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6f1a);
        EXPECT(gbc.pc(), 0x674b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 029E
        gbc.setState(0x6641, 0xb5fa, 0x5a00, 0x85f3, 0x1107, 0xddd8, 0x1, 0x1);
        gbc.writeMem(0x6641, { 0x30, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb5fa);
        EXPECT(gbc.pc(), 0x6623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02A0
        gbc.setState(0x7e4c, 0x5c17, 0xb190, 0x198, 0x61d4, 0x3ae2, 0x0, 0x0);
        gbc.writeMem(0x7e4c, { 0x30, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5c17);
        EXPECT(gbc.pc(), 0x7e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02A1
        gbc.setState(0x8f90, 0x9f80, 0xe4e0, 0x8bfa, 0x709a, 0x97dd, 0x0, 0x0);
        gbc.writeMem(0x8f90, { 0x30, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9f80);
        EXPECT(gbc.pc(), 0x8f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f90), 0x30);
        EXPECT(gbc.readMem(0x8f91), 0x9a);
        // 30 02A2
        gbc.setState(0x7711, 0x23a4, 0x6a20, 0x937f, 0x70dc, 0x273c, 0x0, 0x0);
        gbc.writeMem(0x7711, { 0x30, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x23a4);
        EXPECT(gbc.pc(), 0x7693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02A3
        gbc.setState(0x2fce, 0xd194, 0x7270, 0x864e, 0xa6eb, 0xda99, 0x1, 0x1);
        gbc.writeMem(0x2fce, { 0x30, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd194);
        EXPECT(gbc.pc(), 0x2fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02A4
        gbc.setState(0xea7d, 0x1825, 0x9ce0, 0x50a1, 0x8d8, 0xfd3b, 0x1, 0x1);
        gbc.writeMem(0xea7d, { 0x30, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1825);
        EXPECT(gbc.pc(), 0xead0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea7d), 0x30);
        EXPECT(gbc.readMem(0xea7e), 0x51);
        // 30 02A5
        gbc.setState(0xd9d7, 0xc67f, 0xed50, 0x9f8c, 0x86cd, 0xf13d, 0x1, 0x0);
        gbc.writeMem(0xd9d7, { 0x30, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc67f);
        EXPECT(gbc.pc(), 0xd9d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d7), 0x30);
        EXPECT(gbc.readMem(0xd9d8), 0xd7);
        // 30 02A6
        gbc.setState(0x4892, 0x7b8f, 0x66b0, 0x404a, 0x8470, 0xcecd, 0x1, 0x1);
        gbc.writeMem(0x4892, { 0x30, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7b8f);
        EXPECT(gbc.pc(), 0x4894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02A7
        gbc.setState(0x87ea, 0x9067, 0x86b0, 0x4bf6, 0x12c9, 0xda5d, 0x1, 0x1);
        gbc.writeMem(0x87ea, { 0x30, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9067);
        EXPECT(gbc.pc(), 0x87ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ea), 0x30);
        EXPECT(gbc.readMem(0x87eb), 0xba);
        // 30 02A8
        gbc.setState(0xb03, 0x5fab, 0xf980, 0x1dd9, 0x4936, 0x3089, 0x0, 0x1);
        gbc.writeMem(0xb03, { 0x30, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5fab);
        EXPECT(gbc.pc(), 0xb50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02A9
        gbc.setState(0x5b90, 0x9307, 0x9550, 0xea5b, 0x7039, 0xf6a2, 0x1, 0x1);
        gbc.writeMem(0x5b90, { 0x30, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9307);
        EXPECT(gbc.pc(), 0x5b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02AA
        gbc.setState(0xa251, 0x6666, 0x6c30, 0xe70e, 0xfcfd, 0x7fc9, 0x1, 0x1);
        gbc.writeMem(0xa251, { 0x30, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6666);
        EXPECT(gbc.pc(), 0xa253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa251), 0x30);
        EXPECT(gbc.readMem(0xa252), 0x63);
        // 30 02AB
        gbc.setState(0x43f1, 0xa39e, 0xcbf0, 0x5513, 0x5ff, 0x64cb, 0x0, 0x1);
        gbc.writeMem(0x43f1, { 0x30, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa39e);
        EXPECT(gbc.pc(), 0x43f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02AC
        gbc.setState(0xd5ab, 0xee85, 0x15d0, 0x2aa7, 0x9770, 0x8ca6, 0x1, 0x1);
        gbc.writeMem(0xd5ab, { 0x30, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xee85);
        EXPECT(gbc.pc(), 0xd5ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ab), 0x30);
        EXPECT(gbc.readMem(0xd5ac), 0xf1);
        // 30 02AD
        gbc.setState(0x4de4, 0xbed3, 0xcbe0, 0xbb25, 0x1217, 0xae43, 0x0, 0x1);
        gbc.writeMem(0x4de4, { 0x30, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbed3);
        EXPECT(gbc.pc(), 0x4e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02AE
        gbc.setState(0xefbb, 0x419b, 0x6810, 0x2740, 0xda7, 0x23df, 0x0, 0x0);
        gbc.writeMem(0xefbb, { 0x30, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x419b);
        EXPECT(gbc.pc(), 0xefbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefbb), 0x30);
        EXPECT(gbc.readMem(0xefbc), 0xdb);
        // 30 02AF
        gbc.setState(0x57db, 0x7ee1, 0xaa10, 0x543f, 0x908c, 0x4030, 0x1, 0x0);
        gbc.writeMem(0x57db, { 0x30, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7ee1);
        EXPECT(gbc.pc(), 0x57dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02B0
        gbc.setState(0x6260, 0x865a, 0xc390, 0xe7b4, 0x93fe, 0xbdd4, 0x1, 0x0);
        gbc.writeMem(0x6260, { 0x30, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x865a);
        EXPECT(gbc.pc(), 0x6262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02B1
        gbc.setState(0xe4c7, 0x81b2, 0x2c50, 0x4f4c, 0xba29, 0x28f5, 0x1, 0x0);
        gbc.writeMem(0xe4c7, { 0x30, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x81b2);
        EXPECT(gbc.pc(), 0xe4c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c7), 0x30);
        EXPECT(gbc.readMem(0xe4c8), 0xc4);
        // 30 02B2
        gbc.setState(0x4b7c, 0x2463, 0xd070, 0x3e57, 0xa69e, 0xe811, 0x1, 0x0);
        gbc.writeMem(0x4b7c, { 0x30, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2463);
        EXPECT(gbc.pc(), 0x4b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02B3
        gbc.setState(0xd312, 0x49cb, 0x5540, 0xe6cf, 0x5064, 0x5053, 0x0, 0x0);
        gbc.writeMem(0xd312, { 0x30, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x49cb);
        EXPECT(gbc.pc(), 0xd33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd312), 0x30);
        EXPECT(gbc.readMem(0xd313), 0x2a);
        // 30 02B4
        gbc.setState(0xb4e3, 0x234d, 0xc360, 0xfcac, 0x72e7, 0xe3d7, 0x0, 0x0);
        gbc.writeMem(0xb4e3, { 0x30, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x234d);
        EXPECT(gbc.pc(), 0xb4cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e3), 0x30);
        EXPECT(gbc.readMem(0xb4e4), 0xea);
        // 30 02B5
        gbc.setState(0x3ce, 0x1200, 0x0, 0x1ca0, 0x1f51, 0xd296, 0x0, 0x0);
        gbc.writeMem(0x3ce, { 0x30, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1200);
        EXPECT(gbc.pc(), 0x415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02B6
        gbc.setState(0x8612, 0x5890, 0x8b60, 0xadf4, 0x59f5, 0xd98d, 0x1, 0x1);
        gbc.writeMem(0x8612, { 0x30, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5890);
        EXPECT(gbc.pc(), 0x85e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8612), 0x30);
        EXPECT(gbc.readMem(0x8613), 0xd1);
        // 30 02B7
        gbc.setState(0xcbc0, 0x77b9, 0xc40, 0x4f59, 0xe406, 0x494, 0x0, 0x0);
        gbc.writeMem(0xcbc0, { 0x30, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x77b9);
        EXPECT(gbc.pc(), 0xcbb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc0), 0x30);
        EXPECT(gbc.readMem(0xcbc1), 0xf4);
        // 30 02B8
        gbc.setState(0xede1, 0x90c, 0x16b0, 0x74c, 0xf34b, 0xdcad, 0x0, 0x0);
        gbc.writeMem(0xede1, { 0x30, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x90c);
        EXPECT(gbc.pc(), 0xede3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede1), 0x30);
        EXPECT(gbc.readMem(0xede2), 0x33);
        // 30 02B9
        gbc.setState(0x1d6, 0x3287, 0x3ef0, 0xa31b, 0xb6ba, 0x146c, 0x1, 0x1);
        gbc.writeMem(0x1d6, { 0x30, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3287);
        EXPECT(gbc.pc(), 0x1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02BA
        gbc.setState(0xac56, 0x3636, 0x1b80, 0xa216, 0x242f, 0x7e11, 0x0, 0x0);
        gbc.writeMem(0xac56, { 0x30, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3636);
        EXPECT(gbc.pc(), 0xac20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac56), 0x30);
        EXPECT(gbc.readMem(0xac57), 0xc8);
        // 30 02BB
        gbc.setState(0x4c6f, 0xee31, 0xc0d0, 0x98b8, 0x7d6f, 0x6753, 0x1, 0x0);
        gbc.writeMem(0x4c6f, { 0x30, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xee31);
        EXPECT(gbc.pc(), 0x4c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02BC
        gbc.setState(0xd48b, 0x637f, 0xfa70, 0x80f7, 0xa39b, 0x4c75, 0x0, 0x1);
        gbc.writeMem(0xd48b, { 0x30, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x637f);
        EXPECT(gbc.pc(), 0xd48d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48b), 0x30);
        EXPECT(gbc.readMem(0xd48c), 0xe8);
        // 30 02BD
        gbc.setState(0x7d02, 0x170a, 0x970, 0xc8ab, 0x8f33, 0xdaf2, 0x1, 0x1);
        gbc.writeMem(0x7d02, { 0x30, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x170a);
        EXPECT(gbc.pc(), 0x7d04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02BE
        gbc.setState(0x14a9, 0x9970, 0xcf70, 0xedbc, 0x1550, 0x5733, 0x0, 0x1);
        gbc.writeMem(0x14a9, { 0x30, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9970);
        EXPECT(gbc.pc(), 0x14ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02BF
        gbc.setState(0x59e3, 0xae0c, 0x39a0, 0xc93b, 0xe940, 0xc2af, 0x0, 0x0);
        gbc.writeMem(0x59e3, { 0x30, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xae0c);
        EXPECT(gbc.pc(), 0x5a38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02C0
        gbc.setState(0xc3f7, 0x6467, 0xebe0, 0xebd0, 0x97e8, 0xe704, 0x1, 0x0);
        gbc.writeMem(0xc3f7, { 0x30, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6467);
        EXPECT(gbc.pc(), 0xc44b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f7), 0x30);
        EXPECT(gbc.readMem(0xc3f8), 0x52);
        // 30 02C1
        gbc.setState(0x2071, 0x5e83, 0xca40, 0x3c40, 0xdc96, 0xedc, 0x0, 0x0);
        gbc.writeMem(0x2071, { 0x30, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5e83);
        EXPECT(gbc.pc(), 0x20b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02C2
        gbc.setState(0x6ec4, 0xfe0f, 0x34a0, 0x1374, 0x3128, 0x5d23, 0x1, 0x0);
        gbc.writeMem(0x6ec4, { 0x30, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xfe0f);
        EXPECT(gbc.pc(), 0x6f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02C3
        gbc.setState(0x5fb, 0x73b3, 0xce90, 0xff9e, 0x9f0e, 0x5f9d, 0x0, 0x0);
        gbc.writeMem(0x5fb, { 0x30, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x73b3);
        EXPECT(gbc.pc(), 0x5fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02C4
        gbc.setState(0x3562, 0xe7ef, 0xb6c0, 0x6248, 0xc44e, 0x3c18, 0x0, 0x0);
        gbc.writeMem(0x3562, { 0x30, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe7ef);
        EXPECT(gbc.pc(), 0x3548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02C5
        gbc.setState(0x8ad9, 0x37cb, 0xcfd0, 0x11d0, 0x82f, 0x750d, 0x0, 0x1);
        gbc.writeMem(0x8ad9, { 0x30, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x37cb);
        EXPECT(gbc.pc(), 0x8adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad9), 0x30);
        EXPECT(gbc.readMem(0x8ada), 0xe5);
        // 30 02C6
        gbc.setState(0xd157, 0xdb7d, 0xbc10, 0x1d2f, 0x8eeb, 0x960, 0x1, 0x1);
        gbc.writeMem(0xd157, { 0x30, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdb7d);
        EXPECT(gbc.pc(), 0xd159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd157), 0x30);
        EXPECT(gbc.readMem(0xd158), 0xbb);
        // 30 02C7
        gbc.setState(0xccb2, 0x8087, 0x25a0, 0xab79, 0xaad2, 0xc42b, 0x1, 0x1);
        gbc.writeMem(0xccb2, { 0x30, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8087);
        EXPECT(gbc.pc(), 0xcd1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb2), 0x30);
        EXPECT(gbc.readMem(0xccb3), 0x6b);
        // 30 02C8
        gbc.setState(0x3c57, 0x6b14, 0x99e0, 0x98f, 0x7ddf, 0xc292, 0x1, 0x1);
        gbc.writeMem(0x3c57, { 0x30, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6b14);
        EXPECT(gbc.pc(), 0x3c37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02C9
        gbc.setState(0x58a4, 0xbc36, 0xcd80, 0x9043, 0x2d42, 0x81db, 0x0, 0x0);
        gbc.writeMem(0x58a4, { 0x30, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbc36);
        EXPECT(gbc.pc(), 0x5874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02CA
        gbc.setState(0x7efa, 0xc613, 0x2940, 0x1e90, 0xb4ca, 0x1926, 0x1, 0x1);
        gbc.writeMem(0x7efa, { 0x30, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc613);
        EXPECT(gbc.pc(), 0x7f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02CB
        gbc.setState(0x165b, 0xd7f1, 0xcff0, 0xd8b6, 0x65ba, 0xecbd, 0x0, 0x1);
        gbc.writeMem(0x165b, { 0x30, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd7f1);
        EXPECT(gbc.pc(), 0x165d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02CC
        gbc.setState(0x904b, 0xa116, 0x8e30, 0xad40, 0x507e, 0xe1a8, 0x1, 0x1);
        gbc.writeMem(0x904b, { 0x30, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa116);
        EXPECT(gbc.pc(), 0x904d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904b), 0x30);
        EXPECT(gbc.readMem(0x904c), 0x44);
        // 30 02CD
        gbc.setState(0x93a7, 0x8b4d, 0x37b0, 0x10a0, 0x3d01, 0x8776, 0x1, 0x0);
        gbc.writeMem(0x93a7, { 0x30, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8b4d);
        EXPECT(gbc.pc(), 0x93a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a7), 0x30);
        EXPECT(gbc.readMem(0x93a8), 0x7e);
        // 30 02CE
        gbc.setState(0x9bd2, 0x4a6, 0xfc50, 0x2586, 0x3f1e, 0x7c7d, 0x0, 0x1);
        gbc.writeMem(0x9bd2, { 0x30, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4a6);
        EXPECT(gbc.pc(), 0x9bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd2), 0x30);
        EXPECT(gbc.readMem(0x9bd3), 0x15);
        // 30 02D0
        gbc.setState(0xdfdb, 0x173c, 0x1850, 0xace3, 0x5a49, 0x2bec, 0x1, 0x1);
        gbc.writeMem(0xdfdb, { 0x30, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x173c);
        EXPECT(gbc.pc(), 0xdfdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfdb), 0x30);
        EXPECT(gbc.readMem(0xdfdc), 0xbd);
        // 30 02D1
        gbc.setState(0x3305, 0x2074, 0xe690, 0x995e, 0xf873, 0x8d54, 0x1, 0x1);
        gbc.writeMem(0x3305, { 0x30, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2074);
        EXPECT(gbc.pc(), 0x3307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02D3
        gbc.setState(0xccc1, 0x32a6, 0x3b60, 0xe7ca, 0xaa40, 0xfbd9, 0x0, 0x1);
        gbc.writeMem(0xccc1, { 0x30, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x32a6);
        EXPECT(gbc.pc(), 0xcc9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc1), 0x30);
        EXPECT(gbc.readMem(0xccc2), 0xda);
        // 30 02D4
        gbc.setState(0xb163, 0x88a4, 0x1b40, 0xf585, 0x44cc, 0xb3bf, 0x0, 0x1);
        gbc.writeMem(0xb163, { 0x30, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x88a4);
        EXPECT(gbc.pc(), 0xb159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb163), 0x30);
        EXPECT(gbc.readMem(0xb164), 0xf4);
        // 30 02D5
        gbc.setState(0xd0d6, 0x21fe, 0x36b0, 0xf03d, 0xcfd1, 0x2887, 0x1, 0x1);
        gbc.writeMem(0xd0d6, { 0x30, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x21fe);
        EXPECT(gbc.pc(), 0xd0d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d6), 0x30);
        EXPECT(gbc.readMem(0xd0d7), 0xee);
        // 30 02D6
        gbc.setState(0x5830, 0xd4e7, 0xa980, 0xb1e6, 0xb0ba, 0xdd6f, 0x0, 0x0);
        gbc.writeMem(0x5830, { 0x30, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd4e7);
        EXPECT(gbc.pc(), 0x57c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02D7
        gbc.setState(0x484f, 0xcc07, 0x9c20, 0x5ec, 0x711a, 0x3339, 0x1, 0x0);
        gbc.writeMem(0x484f, { 0x30, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcc07);
        EXPECT(gbc.pc(), 0x4875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02D8
        gbc.setState(0xc289, 0x418f, 0x31d0, 0xbfb0, 0xc1de, 0xe81a, 0x0, 0x0);
        gbc.writeMem(0xc289, { 0x30, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x418f);
        EXPECT(gbc.pc(), 0xc28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc289), 0x30);
        EXPECT(gbc.readMem(0xc28a), 0x86);
        // 30 02D9
        gbc.setState(0xef15, 0x9754, 0x70b0, 0x6574, 0x1746, 0x770c, 0x1, 0x1);
        gbc.writeMem(0xef15, { 0x30, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9754);
        EXPECT(gbc.pc(), 0xef17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef15), 0x30);
        EXPECT(gbc.readMem(0xef16), 0x7);
        // 30 02DA
        gbc.setState(0x97cc, 0xc106, 0x30a0, 0x44a3, 0xdfd5, 0x728e, 0x0, 0x1);
        gbc.writeMem(0x97cc, { 0x30, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc106);
        EXPECT(gbc.pc(), 0x97a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97cc), 0x30);
        EXPECT(gbc.readMem(0x97cd), 0xd7);
        // 30 02DC
        gbc.setState(0x8795, 0xe65f, 0x3340, 0x890, 0xb445, 0x4204, 0x1, 0x1);
        gbc.writeMem(0x8795, { 0x30, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe65f);
        EXPECT(gbc.pc(), 0x8760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8795), 0x30);
        EXPECT(gbc.readMem(0x8796), 0xc9);
        // 30 02DD
        gbc.setState(0xe4c0, 0x504a, 0xaf80, 0xe022, 0xf5e0, 0x3eb0, 0x0, 0x1);
        gbc.writeMem(0xe4c0, { 0x30, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x504a);
        EXPECT(gbc.pc(), 0xe4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c0), 0x30);
        EXPECT(gbc.readMem(0xe4c1), 0x2b);
        // 30 02DE
        gbc.setState(0xb14, 0xa207, 0x1130, 0xcc26, 0x3254, 0x33df, 0x0, 0x0);
        gbc.writeMem(0xb14, { 0x30, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa207);
        EXPECT(gbc.pc(), 0xb16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02E0
        gbc.setState(0x4806, 0x1837, 0xe2c0, 0x945a, 0x56e4, 0xce59, 0x0, 0x0);
        gbc.writeMem(0x4806, { 0x30, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1837);
        EXPECT(gbc.pc(), 0x4805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02E1
        gbc.setState(0x2508, 0x6ea4, 0x2050, 0x3690, 0xf9b9, 0xaab8, 0x1, 0x0);
        gbc.writeMem(0x2508, { 0x30, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6ea4);
        EXPECT(gbc.pc(), 0x250a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02E2
        gbc.setState(0x1a6e, 0x826b, 0xc870, 0x9612, 0x2738, 0x6c01, 0x1, 0x0);
        gbc.writeMem(0x1a6e, { 0x30, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x826b);
        EXPECT(gbc.pc(), 0x1a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02E3
        gbc.setState(0xb807, 0x3b04, 0x2c40, 0x16d6, 0xfee1, 0xc005, 0x0, 0x1);
        gbc.writeMem(0xb807, { 0x30, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3b04);
        EXPECT(gbc.pc(), 0xb78a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb807), 0x30);
        EXPECT(gbc.readMem(0xb808), 0x81);
        // 30 02E4
        gbc.setState(0xe040, 0x1a02, 0xaa70, 0x4f38, 0xf0b1, 0x385a, 0x1, 0x1);
        gbc.writeMem(0xe040, { 0x30, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1a02);
        EXPECT(gbc.pc(), 0xe042);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe040), 0x30);
        EXPECT(gbc.readMem(0xe041), 0xd1);
        // 30 02E5
        gbc.setState(0xbfc4, 0x8b6e, 0xc780, 0x10da, 0xfa9c, 0xb302, 0x0, 0x0);
        gbc.writeMem(0xbfc4, { 0x30, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8b6e);
        EXPECT(gbc.pc(), 0xc00c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc4), 0x30);
        EXPECT(gbc.readMem(0xbfc5), 0x46);
        // 30 02E6
        gbc.setState(0x720d, 0xcfa3, 0x8c00, 0x2d28, 0x3688, 0x22e3, 0x0, 0x1);
        gbc.writeMem(0x720d, { 0x30, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcfa3);
        EXPECT(gbc.pc(), 0x71b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02E7
        gbc.setState(0x625f, 0x5d7e, 0xfca0, 0x914, 0xf704, 0x4d4, 0x0, 0x0);
        gbc.writeMem(0x625f, { 0x30, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5d7e);
        EXPECT(gbc.pc(), 0x6240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02E8
        gbc.setState(0x47ed, 0x3e4d, 0x8a50, 0x9f27, 0xfe78, 0x428, 0x0, 0x1);
        gbc.writeMem(0x47ed, { 0x30, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3e4d);
        EXPECT(gbc.pc(), 0x47ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02E9
        gbc.setState(0xa57b, 0x81cc, 0x7590, 0x6eb4, 0xf959, 0x89cd, 0x1, 0x1);
        gbc.writeMem(0xa57b, { 0x30, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x81cc);
        EXPECT(gbc.pc(), 0xa57d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa57b), 0x30);
        EXPECT(gbc.readMem(0xa57c), 0x31);
        // 30 02EA
        gbc.setState(0xbf2a, 0x684d, 0x7f50, 0xb1bf, 0xc0ea, 0x9b0a, 0x1, 0x1);
        gbc.writeMem(0xbf2a, { 0x30, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x684d);
        EXPECT(gbc.pc(), 0xbf2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2a), 0x30);
        EXPECT(gbc.readMem(0xbf2b), 0xe4);
        // 30 02EB
        gbc.setState(0x740, 0xe972, 0xeb10, 0x2117, 0x37e4, 0x50ac, 0x0, 0x1);
        gbc.writeMem(0x740, { 0x30, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe972);
        EXPECT(gbc.pc(), 0x742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 02EC
        gbc.setState(0x6fe8, 0x35c2, 0x2260, 0x9b1d, 0xaae, 0x551a, 0x1, 0x1);
        gbc.writeMem(0x6fe8, { 0x30, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x35c2);
        EXPECT(gbc.pc(), 0x6fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02ED
        gbc.setState(0xdbfa, 0x198b, 0x4be0, 0x15e0, 0xe77f, 0x278b, 0x1, 0x0);
        gbc.writeMem(0xdbfa, { 0x30, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x198b);
        EXPECT(gbc.pc(), 0xdc02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbfa), 0x30);
        EXPECT(gbc.readMem(0xdbfb), 0x6);
        // 30 02F0
        gbc.setState(0x3fd0, 0xf65f, 0x79b0, 0xc124, 0xe7b5, 0xe21d, 0x1, 0x0);
        gbc.writeMem(0x3fd0, { 0x30, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf65f);
        EXPECT(gbc.pc(), 0x3fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 02F2
        gbc.setState(0xaa4, 0xca66, 0xaf80, 0xe021, 0x36fd, 0xf7cc, 0x0, 0x0);
        gbc.writeMem(0xaa4, { 0x30, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xca66);
        EXPECT(gbc.pc(), 0xac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02F3
        gbc.setState(0xe1ff, 0xb3dd, 0x9ed0, 0xdd60, 0x53fc, 0x4a31, 0x1, 0x0);
        gbc.writeMem(0xe1ff, { 0x30, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb3dd);
        EXPECT(gbc.pc(), 0xe201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ff), 0x30);
        EXPECT(gbc.readMem(0xe200), 0x5e);
        // 30 02F4
        gbc.setState(0x44ba, 0x189b, 0x59a0, 0x2549, 0x2a07, 0xd4fe, 0x1, 0x1);
        gbc.writeMem(0x44ba, { 0x30, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x189b);
        EXPECT(gbc.pc(), 0x447a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02F5
        gbc.setState(0x24a9, 0x10a7, 0x7f60, 0x6587, 0xc188, 0xef64, 0x0, 0x0);
        gbc.writeMem(0x24a9, { 0x30, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x10a7);
        EXPECT(gbc.pc(), 0x24cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02F6
        gbc.setState(0xa0d1, 0x56b0, 0xca20, 0x957, 0x672a, 0xcd6c, 0x1, 0x1);
        gbc.writeMem(0xa0d1, { 0x30, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x56b0);
        EXPECT(gbc.pc(), 0xa142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d1), 0x30);
        EXPECT(gbc.readMem(0xa0d2), 0x6f);
        // 30 02F7
        gbc.setState(0x9354, 0xcdb9, 0xa180, 0x5a59, 0xc091, 0xae31, 0x1, 0x0);
        gbc.writeMem(0x9354, { 0x30, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xcdb9);
        EXPECT(gbc.pc(), 0x935c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9354), 0x30);
        EXPECT(gbc.readMem(0x9355), 0x6);
        // 30 02F8
        gbc.setState(0x4253, 0xabeb, 0xb220, 0xbece, 0x2092, 0x11e, 0x1, 0x0);
        gbc.writeMem(0x4253, { 0x30, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xabeb);
        EXPECT(gbc.pc(), 0x42cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02F9
        gbc.setState(0xa5e6, 0xedd8, 0xd730, 0xa43f, 0xfb26, 0x234b, 0x0, 0x1);
        gbc.writeMem(0xa5e6, { 0x30, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xedd8);
        EXPECT(gbc.pc(), 0xa5e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e6), 0x30);
        EXPECT(gbc.readMem(0xa5e7), 0xe6);
        // 30 02FA
        gbc.setState(0xcea7, 0x5a8b, 0xa770, 0xa015, 0xd7b8, 0xeb7f, 0x0, 0x0);
        gbc.writeMem(0xcea7, { 0x30, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5a8b);
        EXPECT(gbc.pc(), 0xcea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea7), 0x30);
        EXPECT(gbc.readMem(0xcea8), 0xb);
        // 30 02FB
        gbc.setState(0x49e9, 0x88b8, 0x14c0, 0x3d89, 0xf620, 0x7906, 0x1, 0x0);
        gbc.writeMem(0x49e9, { 0x30, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x88b8);
        EXPECT(gbc.pc(), 0x49c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 02FC
        gbc.setState(0x209b, 0x3976, 0x4ea0, 0x3332, 0xd8c0, 0x1774, 0x1, 0x0);
        gbc.writeMem(0x209b, { 0x30, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3976);
        EXPECT(gbc.pc(), 0x2111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 02FD
        gbc.setState(0xcbce, 0xf11, 0x17b0, 0x976e, 0xe523, 0x1084, 0x0, 0x1);
        gbc.writeMem(0xcbce, { 0x30, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf11);
        EXPECT(gbc.pc(), 0xcbd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbce), 0x30);
        EXPECT(gbc.readMem(0xcbcf), 0x6a);
        // 30 02FF
        gbc.setState(0xd806, 0xcc4f, 0xcc90, 0x70a3, 0x1acb, 0x9a6d, 0x1, 0x0);
        gbc.writeMem(0xd806, { 0x30, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcc4f);
        EXPECT(gbc.pc(), 0xd808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd806), 0x30);
        EXPECT(gbc.readMem(0xd807), 0x4b);
        // 30 0300
        gbc.setState(0xa3d9, 0x7a94, 0x2be0, 0xf20a, 0xb2c2, 0xaae1, 0x1, 0x1);
        gbc.writeMem(0xa3d9, { 0x30, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7a94);
        EXPECT(gbc.pc(), 0xa3bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d9), 0x30);
        EXPECT(gbc.readMem(0xa3da), 0xe1);
        // 30 0301
        gbc.setState(0xad78, 0xc168, 0xb7f0, 0x3cc0, 0xd750, 0x523b, 0x1, 0x1);
        gbc.writeMem(0xad78, { 0x30, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc168);
        EXPECT(gbc.pc(), 0xad7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad78), 0x30);
        EXPECT(gbc.readMem(0xad79), 0x30);
        // 30 0302
        gbc.setState(0x1086, 0x83c7, 0x7650, 0x55da, 0x829b, 0xc0ad, 0x1, 0x0);
        gbc.writeMem(0x1086, { 0x30, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x83c7);
        EXPECT(gbc.pc(), 0x1088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0303
        gbc.setState(0xaaec, 0x2d74, 0xe180, 0x743c, 0x5f6f, 0x4d84, 0x0, 0x0);
        gbc.writeMem(0xaaec, { 0x30, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2d74);
        EXPECT(gbc.pc(), 0xab36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaec), 0x30);
        EXPECT(gbc.readMem(0xaaed), 0x48);
        // 30 0304
        gbc.setState(0xb325, 0x7254, 0x21a0, 0xe731, 0x26c3, 0xde46, 0x0, 0x1);
        gbc.writeMem(0xb325, { 0x30, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7254);
        EXPECT(gbc.pc(), 0xb340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb325), 0x30);
        EXPECT(gbc.readMem(0xb326), 0x19);
        // 30 0305
        gbc.setState(0x12c4, 0x43a, 0xeca0, 0xa910, 0x6815, 0x95d1, 0x1, 0x0);
        gbc.writeMem(0x12c4, { 0x30, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x43a);
        EXPECT(gbc.pc(), 0x12ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0306
        gbc.setState(0x9b37, 0x2224, 0x3010, 0x7496, 0xad1d, 0x75a8, 0x0, 0x0);
        gbc.writeMem(0x9b37, { 0x30, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2224);
        EXPECT(gbc.pc(), 0x9b39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b37), 0x30);
        EXPECT(gbc.readMem(0x9b38), 0x58);
        // 30 0307
        gbc.setState(0x854a, 0xfa02, 0x3e40, 0x4ca5, 0x2899, 0x5d4a, 0x0, 0x0);
        gbc.writeMem(0x854a, { 0x30, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfa02);
        EXPECT(gbc.pc(), 0x852f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854a), 0x30);
        EXPECT(gbc.readMem(0x854b), 0xe3);
        // 30 0308
        gbc.setState(0x1558, 0x6f5e, 0x89b0, 0xa153, 0xdb38, 0x79a4, 0x1, 0x1);
        gbc.writeMem(0x1558, { 0x30, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6f5e);
        EXPECT(gbc.pc(), 0x155a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0309
        gbc.setState(0xc24f, 0x5997, 0x890, 0x2e38, 0xaf19, 0x573e, 0x0, 0x0);
        gbc.writeMem(0xc24f, { 0x30, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5997);
        EXPECT(gbc.pc(), 0xc251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24f), 0x30);
        EXPECT(gbc.readMem(0xc250), 0x54);
        // 30 030A
        gbc.setState(0x9033, 0xe3bd, 0xcdf0, 0x810d, 0x659f, 0x3cdb, 0x1, 0x0);
        gbc.writeMem(0x9033, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe3bd);
        EXPECT(gbc.pc(), 0x9035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9033), 0x30);
        EXPECT(gbc.readMem(0x9034), 0xa6);
        // 30 030B
        gbc.setState(0x235b, 0x5744, 0x4740, 0x3530, 0xa360, 0xb30, 0x1, 0x1);
        gbc.writeMem(0x235b, { 0x30, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5744);
        EXPECT(gbc.pc(), 0x2357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 030C
        gbc.setState(0xe2b4, 0xf27e, 0x82c0, 0xe31, 0xd2cf, 0x9906, 0x0, 0x0);
        gbc.writeMem(0xe2b4, { 0x30, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf27e);
        EXPECT(gbc.pc(), 0xe2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b4), 0x30);
        EXPECT(gbc.readMem(0xe2b5), 0x1);
        // 30 030D
        gbc.setState(0x6bec, 0x4eb6, 0xb7e0, 0xdf3a, 0x4500, 0x86e7, 0x0, 0x1);
        gbc.writeMem(0x6bec, { 0x30, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4eb6);
        EXPECT(gbc.pc(), 0x6bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 030E
        gbc.setState(0xc93, 0xaf0a, 0x2df0, 0x60b0, 0x5254, 0xc0ea, 0x0, 0x0);
        gbc.writeMem(0xc93, { 0x30, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xaf0a);
        EXPECT(gbc.pc(), 0xc95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 030F
        gbc.setState(0xaaf2, 0x9069, 0x69b0, 0x2c39, 0x7717, 0xb6da, 0x1, 0x0);
        gbc.writeMem(0xaaf2, { 0x30, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9069);
        EXPECT(gbc.pc(), 0xaaf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf2), 0x30);
        EXPECT(gbc.readMem(0xaaf3), 0xbf);
        // 30 0310
        gbc.setState(0x6d2c, 0xfd6e, 0xa1c0, 0x90e7, 0x10a3, 0xb0e5, 0x1, 0x1);
        gbc.writeMem(0x6d2c, { 0x30, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfd6e);
        EXPECT(gbc.pc(), 0x6d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0311
        gbc.setState(0x495e, 0x5ee0, 0x8fa0, 0x55c8, 0x9546, 0x3277, 0x0, 0x1);
        gbc.writeMem(0x495e, { 0x30, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5ee0);
        EXPECT(gbc.pc(), 0x49da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0312
        gbc.setState(0xba4f, 0xe2c, 0xe4c0, 0x6819, 0xe189, 0x6497, 0x1, 0x1);
        gbc.writeMem(0xba4f, { 0x30, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe2c);
        EXPECT(gbc.pc(), 0xba70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba4f), 0x30);
        EXPECT(gbc.readMem(0xba50), 0x1f);
        // 30 0313
        gbc.setState(0x2510, 0x5e0e, 0x3e80, 0x8cf1, 0x35db, 0x9106, 0x0, 0x1);
        gbc.writeMem(0x2510, { 0x30, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5e0e);
        EXPECT(gbc.pc(), 0x24d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0314
        gbc.setState(0xf87, 0x39ba, 0x46d0, 0xe66c, 0x1dca, 0x861b, 0x1, 0x1);
        gbc.writeMem(0xf87, { 0x30, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x39ba);
        EXPECT(gbc.pc(), 0xf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0315
        gbc.setState(0xee6a, 0xfb37, 0xa0e0, 0x65be, 0x6d7b, 0x803e, 0x0, 0x1);
        gbc.writeMem(0xee6a, { 0x30, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfb37);
        EXPECT(gbc.pc(), 0xee2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee6a), 0x30);
        EXPECT(gbc.readMem(0xee6b), 0xc0);
        // 30 0316
        gbc.setState(0xa73a, 0x8aea, 0x340, 0x6052, 0x925a, 0xab96, 0x0, 0x1);
        gbc.writeMem(0xa73a, { 0x30, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8aea);
        EXPECT(gbc.pc(), 0xa744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa73a), 0x30);
        EXPECT(gbc.readMem(0xa73b), 0x8);
        // 30 0317
        gbc.setState(0xb19, 0xffc8, 0x380, 0x5f76, 0xa803, 0x12b4, 0x0, 0x1);
        gbc.writeMem(0xb19, { 0x30, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xffc8);
        EXPECT(gbc.pc(), 0xb75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0318
        gbc.setState(0x895a, 0x12c6, 0x4d30, 0x3a43, 0x759e, 0x39a6, 0x0, 0x1);
        gbc.writeMem(0x895a, { 0x30, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x12c6);
        EXPECT(gbc.pc(), 0x895c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895a), 0x30);
        EXPECT(gbc.readMem(0x895b), 0x2);
        // 30 0319
        gbc.setState(0x84fb, 0xbac3, 0x9650, 0xc06e, 0xf4f5, 0x1565, 0x1, 0x0);
        gbc.writeMem(0x84fb, { 0x30, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbac3);
        EXPECT(gbc.pc(), 0x84fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fb), 0x30);
        EXPECT(gbc.readMem(0x84fc), 0x71);
        // 30 031A
        gbc.setState(0x9fce, 0x3432, 0x1f10, 0xa337, 0xd4a3, 0x3a1a, 0x1, 0x0);
        gbc.writeMem(0x9fce, { 0x30, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3432);
        EXPECT(gbc.pc(), 0x9fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fce), 0x30);
        EXPECT(gbc.readMem(0x9fcf), 0x4e);
        // 30 031B
        gbc.setState(0x72c7, 0xd4f0, 0x7480, 0xa861, 0x9082, 0xaf97, 0x0, 0x0);
        gbc.writeMem(0x72c7, { 0x30, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd4f0);
        EXPECT(gbc.pc(), 0x7258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 031C
        gbc.setState(0xf6c, 0x9fb7, 0x580, 0x300e, 0x9e1a, 0xc1ed, 0x0, 0x1);
        gbc.writeMem(0xf6c, { 0x30, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9fb7);
        EXPECT(gbc.pc(), 0xf2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 031D
        gbc.setState(0x5a91, 0xda22, 0xba40, 0xafc3, 0xe45a, 0x3365, 0x1, 0x0);
        gbc.writeMem(0x5a91, { 0x30, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xda22);
        EXPECT(gbc.pc(), 0x5aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 031E
        gbc.setState(0xccd1, 0xba52, 0x320, 0xb7d3, 0x514c, 0x92d4, 0x0, 0x1);
        gbc.writeMem(0xccd1, { 0x30, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xba52);
        EXPECT(gbc.pc(), 0xcc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd1), 0x30);
        EXPECT(gbc.readMem(0xccd2), 0xc7);
        // 30 031F
        gbc.setState(0xae24, 0x3650, 0x8700, 0x79bd, 0x4567, 0x77a3, 0x0, 0x0);
        gbc.writeMem(0xae24, { 0x30, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3650);
        EXPECT(gbc.pc(), 0xae97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae24), 0x30);
        EXPECT(gbc.readMem(0xae25), 0x71);
        // 30 0320
        gbc.setState(0xd176, 0x7526, 0x1130, 0xeac, 0xfa2f, 0xa4f, 0x1, 0x0);
        gbc.writeMem(0xd176, { 0x30, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7526);
        EXPECT(gbc.pc(), 0xd178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd176), 0x30);
        EXPECT(gbc.readMem(0xd177), 0xe7);
        // 30 0322
        gbc.setState(0xa6d9, 0x5c2b, 0x8be0, 0x2d74, 0x9efe, 0x6542, 0x0, 0x1);
        gbc.writeMem(0xa6d9, { 0x30, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5c2b);
        EXPECT(gbc.pc(), 0xa6e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d9), 0x30);
        EXPECT(gbc.readMem(0xa6da), 0x9);
        // 30 0323
        gbc.setState(0x7643, 0x403f, 0xc790, 0xec98, 0x3760, 0xa9e5, 0x1, 0x0);
        gbc.writeMem(0x7643, { 0x30, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x403f);
        EXPECT(gbc.pc(), 0x7645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0324
        gbc.setState(0xdad1, 0x9c9f, 0x76f0, 0x7967, 0x35d2, 0x7c89, 0x0, 0x1);
        gbc.writeMem(0xdad1, { 0x30, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9c9f);
        EXPECT(gbc.pc(), 0xdad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad1), 0x30);
        EXPECT(gbc.readMem(0xdad2), 0x33);
        // 30 0325
        gbc.setState(0x1333, 0xa1f6, 0xc530, 0x467a, 0x7ec4, 0x33ba, 0x0, 0x0);
        gbc.writeMem(0x1333, { 0x30, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa1f6);
        EXPECT(gbc.pc(), 0x1335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0326
        gbc.setState(0x766, 0x5ba4, 0x9050, 0x93ba, 0x9463, 0xae, 0x1, 0x0);
        gbc.writeMem(0x766, { 0x30, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5ba4);
        EXPECT(gbc.pc(), 0x768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0327
        gbc.setState(0xd99d, 0x5d0a, 0x2b20, 0x6d41, 0x8e36, 0xeedb, 0x1, 0x0);
        gbc.writeMem(0xd99d, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5d0a);
        EXPECT(gbc.pc(), 0xd945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd99d), 0x30);
        EXPECT(gbc.readMem(0xd99e), 0xa6);
        // 30 0328
        gbc.setState(0x41b, 0x21dd, 0x1bd0, 0xad7b, 0x1b28, 0x3472, 0x1, 0x1);
        gbc.writeMem(0x41b, { 0x30, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x21dd);
        EXPECT(gbc.pc(), 0x41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0329
        gbc.setState(0x649b, 0xc921, 0xcf90, 0xfe4a, 0xb4bc, 0x6cc2, 0x1, 0x0);
        gbc.writeMem(0x649b, { 0x30, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc921);
        EXPECT(gbc.pc(), 0x649d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 032A
        gbc.setState(0x669, 0x4322, 0x9f30, 0xea32, 0xebc7, 0x73ab, 0x1, 0x0);
        gbc.writeMem(0x669, { 0x30, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4322);
        EXPECT(gbc.pc(), 0x66b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 032B
        gbc.setState(0xa9ff, 0xf92f, 0x6f0, 0x8759, 0xf163, 0x4fc1, 0x0, 0x0);
        gbc.writeMem(0xa9ff, { 0x30, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf92f);
        EXPECT(gbc.pc(), 0xaa01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ff), 0x30);
        EXPECT(gbc.readMem(0xaa00), 0x50);
        // 30 032C
        gbc.setState(0x1c05, 0xbe7e, 0xc5d0, 0xbf6c, 0x150a, 0x2837, 0x1, 0x1);
        gbc.writeMem(0x1c05, { 0x30, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbe7e);
        EXPECT(gbc.pc(), 0x1c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 032D
        gbc.setState(0xbc51, 0x8d, 0xb760, 0x55d4, 0x47d0, 0x9f37, 0x0, 0x1);
        gbc.writeMem(0xbc51, { 0x30, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8d);
        EXPECT(gbc.pc(), 0xbc64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc51), 0x30);
        EXPECT(gbc.readMem(0xbc52), 0x11);
        // 30 032E
        gbc.setState(0x49b9, 0x7ff2, 0xbf20, 0x156c, 0xee72, 0x1650, 0x0, 0x0);
        gbc.writeMem(0x49b9, { 0x30, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7ff2);
        EXPECT(gbc.pc(), 0x4973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 032F
        gbc.setState(0x8050, 0x1878, 0x39e0, 0x4227, 0x5897, 0x88d7, 0x0, 0x0);
        gbc.writeMem(0x8050, { 0x30, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1878);
        EXPECT(gbc.pc(), 0x80ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8050), 0x30);
        EXPECT(gbc.readMem(0x8051), 0x5b);
        // 30 0330
        gbc.setState(0x72ac, 0x2ff1, 0x7d60, 0xf413, 0x36f1, 0x4e40, 0x1, 0x0);
        gbc.writeMem(0x72ac, { 0x30, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2ff1);
        EXPECT(gbc.pc(), 0x72ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0331
        gbc.setState(0x17de, 0xcde, 0xb860, 0xe7e3, 0xac7, 0x506d, 0x1, 0x1);
        gbc.writeMem(0x17de, { 0x30, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcde);
        EXPECT(gbc.pc(), 0x1832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0332
        gbc.setState(0xd822, 0x87bb, 0x7e50, 0x7095, 0xb6b6, 0x7561, 0x1, 0x1);
        gbc.writeMem(0xd822, { 0x30, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x87bb);
        EXPECT(gbc.pc(), 0xd824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd822), 0x30);
        EXPECT(gbc.readMem(0xd823), 0x80);
        // 30 0333
        gbc.setState(0x96b, 0x11f1, 0x75e0, 0x15bc, 0xa360, 0x4ebf, 0x0, 0x1);
        gbc.writeMem(0x96b, { 0x30, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x11f1);
        EXPECT(gbc.pc(), 0x922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0334
        gbc.setState(0xe6bc, 0x169d, 0xbad0, 0x1209, 0x4b26, 0x1b58, 0x0, 0x0);
        gbc.writeMem(0xe6bc, { 0x30, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x169d);
        EXPECT(gbc.pc(), 0xe6be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6bc), 0x30);
        EXPECT(gbc.readMem(0xe6bd), 0xfd);
        // 30 0335
        gbc.setState(0xc175, 0x4caf, 0xf8e0, 0x73b5, 0x1f1c, 0x1cad, 0x1, 0x0);
        gbc.writeMem(0xc175, { 0x30, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4caf);
        EXPECT(gbc.pc(), 0xc198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc175), 0x30);
        EXPECT(gbc.readMem(0xc176), 0x21);
        // 30 0336
        gbc.setState(0x17f8, 0x70b1, 0x63e0, 0x1e52, 0x3483, 0xec18, 0x0, 0x0);
        gbc.writeMem(0x17f8, { 0x30, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x70b1);
        EXPECT(gbc.pc(), 0x17ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0337
        gbc.setState(0xbae0, 0x797a, 0x5f00, 0x8b08, 0x63e2, 0xa6e4, 0x0, 0x1);
        gbc.writeMem(0xbae0, { 0x30, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x797a);
        EXPECT(gbc.pc(), 0xbace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbae0), 0x30);
        EXPECT(gbc.readMem(0xbae1), 0xec);
        // 30 0338
        gbc.setState(0x2cfc, 0x1c4d, 0x1d70, 0xe0f5, 0x41c6, 0x3598, 0x0, 0x1);
        gbc.writeMem(0x2cfc, { 0x30, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1c4d);
        EXPECT(gbc.pc(), 0x2cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0339
        gbc.setState(0x1765, 0x30b5, 0xc3b0, 0x43cd, 0x7cca, 0x1055, 0x1, 0x0);
        gbc.writeMem(0x1765, { 0x30, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x30b5);
        EXPECT(gbc.pc(), 0x1767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 033A
        gbc.setState(0xe86f, 0x8c58, 0x9980, 0x625c, 0x5644, 0x3eed, 0x1, 0x1);
        gbc.writeMem(0xe86f, { 0x30, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8c58);
        EXPECT(gbc.pc(), 0xe85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86f), 0x30);
        EXPECT(gbc.readMem(0xe870), 0xeb);
        // 30 033B
        gbc.setState(0xa06, 0xb364, 0x14e0, 0x62bc, 0xdac, 0x88df, 0x0, 0x1);
        gbc.writeMem(0xa06, { 0x30, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb364);
        EXPECT(gbc.pc(), 0xa77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 033D
        gbc.setState(0x1325, 0x2b79, 0xbe00, 0x67bc, 0x8383, 0xa68e, 0x0, 0x1);
        gbc.writeMem(0x1325, { 0x30, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2b79);
        EXPECT(gbc.pc(), 0x12c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 033E
        gbc.setState(0xacd7, 0xa3f1, 0x2420, 0x1517, 0xf1d1, 0xa5a9, 0x0, 0x1);
        gbc.writeMem(0xacd7, { 0x30, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa3f1);
        EXPECT(gbc.pc(), 0xad1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacd7), 0x30);
        EXPECT(gbc.readMem(0xacd8), 0x46);
        // 30 033F
        gbc.setState(0x1140, 0x2b20, 0xf1f0, 0x3a18, 0x5a5c, 0x2c80, 0x0, 0x0);
        gbc.writeMem(0x1140, { 0x30, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2b20);
        EXPECT(gbc.pc(), 0x1142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0340
        gbc.setState(0xceb7, 0x4f33, 0x19c0, 0xbb02, 0x45e6, 0xb104, 0x0, 0x1);
        gbc.writeMem(0xceb7, { 0x30, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4f33);
        EXPECT(gbc.pc(), 0xcf06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb7), 0x30);
        EXPECT(gbc.readMem(0xceb8), 0x4d);
        // 30 0341
        gbc.setState(0xadfd, 0x47df, 0x9890, 0x6a9b, 0x85f7, 0xe504, 0x1, 0x0);
        gbc.writeMem(0xadfd, { 0x30, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x47df);
        EXPECT(gbc.pc(), 0xadff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadfd), 0x30);
        EXPECT(gbc.readMem(0xadfe), 0xd1);
        // 30 0342
        gbc.setState(0x2541, 0x19af, 0x40f0, 0x31fb, 0xe432, 0x1bff, 0x1, 0x1);
        gbc.writeMem(0x2541, { 0x30, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x19af);
        EXPECT(gbc.pc(), 0x2543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0343
        gbc.setState(0x3a1b, 0x193e, 0xa4c0, 0xbcd0, 0x50bd, 0xffdc, 0x1, 0x1);
        gbc.writeMem(0x3a1b, { 0x30, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x193e);
        EXPECT(gbc.pc(), 0x39d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0344
        gbc.setState(0xea45, 0xeefe, 0x6840, 0x1497, 0x1ea1, 0x80dc, 0x1, 0x0);
        gbc.writeMem(0xea45, { 0x30, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xeefe);
        EXPECT(gbc.pc(), 0xea65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea45), 0x30);
        EXPECT(gbc.readMem(0xea46), 0x1e);
        // 30 0345
        gbc.setState(0xafc4, 0x4d46, 0xe180, 0xb11a, 0xb4a4, 0x3eff, 0x1, 0x1);
        gbc.writeMem(0xafc4, { 0x30, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4d46);
        EXPECT(gbc.pc(), 0xaf61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc4), 0x30);
        EXPECT(gbc.readMem(0xafc5), 0x9b);
        // 30 0346
        gbc.setState(0x26e5, 0xe795, 0x78b0, 0x4620, 0xa9ec, 0x4df3, 0x0, 0x1);
        gbc.writeMem(0x26e5, { 0x30, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe795);
        EXPECT(gbc.pc(), 0x26e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0347
        gbc.setState(0x3ef9, 0x2cfa, 0xed70, 0x9fa7, 0x6367, 0x299d, 0x0, 0x1);
        gbc.writeMem(0x3ef9, { 0x30, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2cfa);
        EXPECT(gbc.pc(), 0x3efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0348
        gbc.setState(0xb752, 0x60d8, 0x88d0, 0xf028, 0xfa3e, 0xf184, 0x0, 0x0);
        gbc.writeMem(0xb752, { 0x30, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x60d8);
        EXPECT(gbc.pc(), 0xb754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb752), 0x30);
        EXPECT(gbc.readMem(0xb753), 0x97);
        // 30 0349
        gbc.setState(0x4695, 0x466c, 0x10c0, 0x8b9, 0x6a2b, 0x6524, 0x1, 0x0);
        gbc.writeMem(0x4695, { 0x30, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x466c);
        EXPECT(gbc.pc(), 0x4681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 034A
        gbc.setState(0x9729, 0x6422, 0x5b70, 0x80f2, 0xad2d, 0x17c4, 0x1, 0x1);
        gbc.writeMem(0x9729, { 0x30, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6422);
        EXPECT(gbc.pc(), 0x972b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9729), 0x30);
        EXPECT(gbc.readMem(0x972a), 0x2d);
        // 30 034B
        gbc.setState(0x3879, 0xdffa, 0x4690, 0x3ef0, 0xff4d, 0x800a, 0x0, 0x1);
        gbc.writeMem(0x3879, { 0x30, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdffa);
        EXPECT(gbc.pc(), 0x387b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 034C
        gbc.setState(0x96b, 0x5ece, 0x67c0, 0xb4e6, 0x5573, 0x301e, 0x1, 0x0);
        gbc.writeMem(0x96b, { 0x30, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5ece);
        EXPECT(gbc.pc(), 0x922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 034D
        gbc.setState(0xb63a, 0x8936, 0x3dc0, 0x4d9d, 0xbd72, 0xc593, 0x0, 0x1);
        gbc.writeMem(0xb63a, { 0x30, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8936);
        EXPECT(gbc.pc(), 0xb65e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb63a), 0x30);
        EXPECT(gbc.readMem(0xb63b), 0x22);
        // 30 034E
        gbc.setState(0x6147, 0xc16b, 0x5f10, 0xc73c, 0xb9c8, 0x9871, 0x1, 0x1);
        gbc.writeMem(0x6147, { 0x30, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc16b);
        EXPECT(gbc.pc(), 0x6149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 034F
        gbc.setState(0x8295, 0xdc9e, 0xba40, 0x5938, 0xd2b2, 0x55c4, 0x1, 0x0);
        gbc.writeMem(0x8295, { 0x30, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdc9e);
        EXPECT(gbc.pc(), 0x8269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8295), 0x30);
        EXPECT(gbc.readMem(0x8296), 0xd2);
        // 30 0350
        gbc.setState(0xc97b, 0x7644, 0x6bf0, 0xaf71, 0x9ea6, 0x2031, 0x0, 0x1);
        gbc.writeMem(0xc97b, { 0x30, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7644);
        EXPECT(gbc.pc(), 0xc97d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97b), 0x30);
        EXPECT(gbc.readMem(0xc97c), 0x6e);
        // 30 0351
        gbc.setState(0x4b1a, 0x5be3, 0x7180, 0xc6d5, 0xe042, 0xdebf, 0x0, 0x1);
        gbc.writeMem(0x4b1a, { 0x30, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5be3);
        EXPECT(gbc.pc(), 0x4adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0352
        gbc.setState(0xd3f4, 0xc7b7, 0x5460, 0x264b, 0xcde8, 0x77d8, 0x0, 0x0);
        gbc.writeMem(0xd3f4, { 0x30, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc7b7);
        EXPECT(gbc.pc(), 0xd3fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f4), 0x30);
        EXPECT(gbc.readMem(0xd3f5), 0x4);
        // 30 0353
        gbc.setState(0xdbf1, 0x5bdf, 0x6510, 0x102, 0x8ba3, 0xe4bc, 0x0, 0x1);
        gbc.writeMem(0xdbf1, { 0x30, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5bdf);
        EXPECT(gbc.pc(), 0xdbf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf1), 0x30);
        EXPECT(gbc.readMem(0xdbf2), 0xdd);
        // 30 0354
        gbc.setState(0xcac9, 0x4a27, 0xfef0, 0x89f, 0xcc16, 0x6b15, 0x1, 0x1);
        gbc.writeMem(0xcac9, { 0x30, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4a27);
        EXPECT(gbc.pc(), 0xcacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac9), 0x30);
        EXPECT(gbc.readMem(0xcaca), 0x73);
        // 30 0355
        gbc.setState(0x1f87, 0x2892, 0xa260, 0xaca2, 0x5b21, 0x3d8d, 0x0, 0x1);
        gbc.writeMem(0x1f87, { 0x30, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2892);
        EXPECT(gbc.pc(), 0x1fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0356
        gbc.setState(0x95ff, 0x9760, 0x1900, 0x1eb5, 0x564f, 0x6ce, 0x0, 0x0);
        gbc.writeMem(0x95ff, { 0x30, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9760);
        EXPECT(gbc.pc(), 0x965e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ff), 0x30);
        EXPECT(gbc.readMem(0x9600), 0x5d);
        // 30 0357
        gbc.setState(0x1ec1, 0xb4f5, 0x5e80, 0x526a, 0xae62, 0xe508, 0x0, 0x1);
        gbc.writeMem(0x1ec1, { 0x30, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb4f5);
        EXPECT(gbc.pc(), 0x1ea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0358
        gbc.setState(0x420, 0x730d, 0x7480, 0x3500, 0x7bb8, 0xff0e, 0x0, 0x1);
        gbc.writeMem(0x420, { 0x30, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x730d);
        EXPECT(gbc.pc(), 0x47d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 035A
        gbc.setState(0x9ab3, 0x21d3, 0x7a80, 0xcd6e, 0x9816, 0x8b9b, 0x0, 0x1);
        gbc.writeMem(0x9ab3, { 0x30, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x21d3);
        EXPECT(gbc.pc(), 0x9a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab3), 0x30);
        EXPECT(gbc.readMem(0x9ab4), 0x80);
        // 30 035B
        gbc.setState(0x7205, 0xcbd2, 0xc150, 0xa747, 0x4b08, 0x5bfc, 0x1, 0x1);
        gbc.writeMem(0x7205, { 0x30, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcbd2);
        EXPECT(gbc.pc(), 0x7207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 035C
        gbc.setState(0x44f, 0x41b, 0x22a0, 0x2a47, 0x10b0, 0x16a, 0x1, 0x0);
        gbc.writeMem(0x44f, { 0x30, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x41b);
        EXPECT(gbc.pc(), 0x407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 035D
        gbc.setState(0x1d2a, 0xdb57, 0x2660, 0x8086, 0xd2a8, 0xeba3, 0x0, 0x0);
        gbc.writeMem(0x1d2a, { 0x30, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdb57);
        EXPECT(gbc.pc(), 0x1d3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 035E
        gbc.setState(0x5120, 0x754a, 0x9fb0, 0xa2b, 0xac80, 0x2a85, 0x0, 0x1);
        gbc.writeMem(0x5120, { 0x30, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x754a);
        EXPECT(gbc.pc(), 0x5122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 035F
        gbc.setState(0x9c29, 0xc33, 0x2d90, 0xaf42, 0x718b, 0xa3d1, 0x1, 0x0);
        gbc.writeMem(0x9c29, { 0x30, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc33);
        EXPECT(gbc.pc(), 0x9c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c29), 0x30);
        EXPECT(gbc.readMem(0x9c2a), 0x0);
        // 30 0360
        gbc.setState(0xb674, 0xbb3f, 0xbb0, 0xed82, 0x9786, 0x42ad, 0x0, 0x1);
        gbc.writeMem(0xb674, { 0x30, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbb3f);
        EXPECT(gbc.pc(), 0xb676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb674), 0x30);
        EXPECT(gbc.readMem(0xb675), 0x70);
        // 30 0361
        gbc.setState(0x6978, 0xdf19, 0xa620, 0x936e, 0xdf0a, 0x3fc2, 0x0, 0x0);
        gbc.writeMem(0x6978, { 0x30, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdf19);
        EXPECT(gbc.pc(), 0x6929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0362
        gbc.setState(0x8f96, 0x8652, 0xe350, 0x2a6e, 0xab12, 0xbaf0, 0x1, 0x1);
        gbc.writeMem(0x8f96, { 0x30, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8652);
        EXPECT(gbc.pc(), 0x8f98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f96), 0x30);
        EXPECT(gbc.readMem(0x8f97), 0xc5);
        // 30 0363
        gbc.setState(0xd95c, 0xf438, 0x6270, 0x5702, 0x7617, 0xb8e7, 0x1, 0x0);
        gbc.writeMem(0xd95c, { 0x30, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf438);
        EXPECT(gbc.pc(), 0xd95e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95c), 0x30);
        EXPECT(gbc.readMem(0xd95d), 0xeb);
        // 30 0364
        gbc.setState(0x80bb, 0x3540, 0x8540, 0xc82b, 0xd6f4, 0x8e32, 0x1, 0x0);
        gbc.writeMem(0x80bb, { 0x30, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3540);
        EXPECT(gbc.pc(), 0x806a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bb), 0x30);
        EXPECT(gbc.readMem(0x80bc), 0xad);
        // 30 0365
        gbc.setState(0xcae6, 0x971f, 0x6da0, 0xa255, 0xb8d3, 0x9b15, 0x1, 0x0);
        gbc.writeMem(0xcae6, { 0x30, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x971f);
        EXPECT(gbc.pc(), 0xcb00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae6), 0x30);
        EXPECT(gbc.readMem(0xcae7), 0x18);
        // 30 0366
        gbc.setState(0x692e, 0x7fcf, 0x34b0, 0xff5, 0xaed8, 0xa6f3, 0x1, 0x1);
        gbc.writeMem(0x692e, { 0x30, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7fcf);
        EXPECT(gbc.pc(), 0x6930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0367
        gbc.setState(0x1eff, 0xc756, 0x4e80, 0x76eb, 0x3e59, 0x6959, 0x1, 0x1);
        gbc.writeMem(0x1eff, { 0x30, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc756);
        EXPECT(gbc.pc(), 0x1f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0368
        gbc.setState(0x3bb8, 0xc264, 0x3180, 0x3fd1, 0x53f8, 0x206c, 0x0, 0x0);
        gbc.writeMem(0x3bb8, { 0x30, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc264);
        EXPECT(gbc.pc(), 0x3baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0369
        gbc.setState(0x5782, 0x9e43, 0x1980, 0x95d7, 0xff47, 0xe31c, 0x0, 0x1);
        gbc.writeMem(0x5782, { 0x30, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9e43);
        EXPECT(gbc.pc(), 0x5784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 036A
        gbc.setState(0x545e, 0x5a2d, 0xf1d0, 0x24cd, 0x5e31, 0xd9b, 0x1, 0x1);
        gbc.writeMem(0x545e, { 0x30, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5a2d);
        EXPECT(gbc.pc(), 0x5460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 036B
        gbc.setState(0x5cbe, 0xdc96, 0xb9a0, 0x4e19, 0x317, 0x8509, 0x1, 0x0);
        gbc.writeMem(0x5cbe, { 0x30, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdc96);
        EXPECT(gbc.pc(), 0x5cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 036C
        gbc.setState(0xb9a7, 0x5e1f, 0x6130, 0x6a7e, 0x341, 0x9e61, 0x0, 0x1);
        gbc.writeMem(0xb9a7, { 0x30, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5e1f);
        EXPECT(gbc.pc(), 0xb9a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a7), 0x30);
        EXPECT(gbc.readMem(0xb9a8), 0x8e);
        // 30 036D
        gbc.setState(0x38e6, 0x5151, 0xe9e0, 0x83c8, 0x36cd, 0xf05e, 0x1, 0x1);
        gbc.writeMem(0x38e6, { 0x30, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5151);
        EXPECT(gbc.pc(), 0x38c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 036E
        gbc.setState(0x7a9c, 0xfcae, 0x8db0, 0x36f9, 0xd150, 0x28b0, 0x1, 0x1);
        gbc.writeMem(0x7a9c, { 0x30, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfcae);
        EXPECT(gbc.pc(), 0x7a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 036F
        gbc.setState(0xec3b, 0xd1f, 0x9ca0, 0x8ddd, 0x7fdb, 0x22d5, 0x1, 0x1);
        gbc.writeMem(0xec3b, { 0x30, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd1f);
        EXPECT(gbc.pc(), 0xebf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3b), 0x30);
        EXPECT(gbc.readMem(0xec3c), 0xbc);
        // 30 0370
        gbc.setState(0x3d80, 0x1268, 0x2220, 0x7775, 0xa4c1, 0x8dfb, 0x0, 0x0);
        gbc.writeMem(0x3d80, { 0x30, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1268);
        EXPECT(gbc.pc(), 0x3d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0371
        gbc.setState(0xa4ad, 0xdb53, 0x10c0, 0xda43, 0xe5ab, 0x5a68, 0x0, 0x0);
        gbc.writeMem(0xa4ad, { 0x30, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdb53);
        EXPECT(gbc.pc(), 0xa4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ad), 0x30);
        EXPECT(gbc.readMem(0xa4ae), 0xff);
        // 30 0372
        gbc.setState(0xab4, 0xd4e5, 0xba0, 0x506c, 0xceb0, 0x4a6a, 0x1, 0x1);
        gbc.writeMem(0xab4, { 0x30, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd4e5);
        EXPECT(gbc.pc(), 0xa4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0373
        gbc.setState(0xdc5b, 0xa620, 0x3500, 0x2edb, 0x68b, 0x58b3, 0x1, 0x0);
        gbc.writeMem(0xdc5b, { 0x30, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa620);
        EXPECT(gbc.pc(), 0xdca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc5b), 0x30);
        EXPECT(gbc.readMem(0xdc5c), 0x46);
        // 30 0374
        gbc.setState(0x7735, 0xe37, 0x26e0, 0xe85b, 0xa707, 0xde6b, 0x0, 0x0);
        gbc.writeMem(0x7735, { 0x30, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe37);
        EXPECT(gbc.pc(), 0x76c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0375
        gbc.setState(0xd8f3, 0x2e93, 0x60d0, 0xbeb3, 0xaa12, 0xf7f9, 0x0, 0x0);
        gbc.writeMem(0xd8f3, { 0x30, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2e93);
        EXPECT(gbc.pc(), 0xd8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f3), 0x30);
        EXPECT(gbc.readMem(0xd8f4), 0xd9);
        // 30 0376
        gbc.setState(0x7d95, 0x5c14, 0xcc10, 0xd92b, 0xefa, 0x374c, 0x0, 0x0);
        gbc.writeMem(0x7d95, { 0x30, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5c14);
        EXPECT(gbc.pc(), 0x7d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0377
        gbc.setState(0x822c, 0x1d63, 0x83f0, 0xdb0c, 0x56f3, 0x355d, 0x1, 0x0);
        gbc.writeMem(0x822c, { 0x30, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1d63);
        EXPECT(gbc.pc(), 0x822e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822c), 0x30);
        EXPECT(gbc.readMem(0x822d), 0x7f);
        // 30 0378
        gbc.setState(0x462f, 0x3ef9, 0xe8a0, 0xbf6c, 0xc9, 0x99e, 0x1, 0x1);
        gbc.writeMem(0x462f, { 0x30, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3ef9);
        EXPECT(gbc.pc(), 0x45c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0379
        gbc.setState(0x65b2, 0x99b, 0x5400, 0x2fbd, 0x9f34, 0xc929, 0x1, 0x0);
        gbc.writeMem(0x65b2, { 0x30, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x99b);
        EXPECT(gbc.pc(), 0x65a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 037A
        gbc.setState(0x3208, 0xcf98, 0xa890, 0xfa77, 0x6407, 0x90ce, 0x0, 0x1);
        gbc.writeMem(0x3208, { 0x30, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcf98);
        EXPECT(gbc.pc(), 0x320a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 037B
        gbc.setState(0x9c8c, 0x8bf1, 0x3240, 0xe146, 0xd403, 0xe826, 0x0, 0x0);
        gbc.writeMem(0x9c8c, { 0x30, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8bf1);
        EXPECT(gbc.pc(), 0x9c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c8c), 0x30);
        EXPECT(gbc.readMem(0x9c8d), 0xd0);
        // 30 037C
        gbc.setState(0x99a2, 0x8c4d, 0x94f0, 0x1b8, 0x22a9, 0xc8ae, 0x0, 0x0);
        gbc.writeMem(0x99a2, { 0x30, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8c4d);
        EXPECT(gbc.pc(), 0x99a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99a2), 0x30);
        EXPECT(gbc.readMem(0x99a3), 0x54);
        // 30 037D
        gbc.setState(0xbbae, 0xe299, 0xb9f0, 0x9ddd, 0xba41, 0xea89, 0x1, 0x0);
        gbc.writeMem(0xbbae, { 0x30, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe299);
        EXPECT(gbc.pc(), 0xbbb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbae), 0x30);
        EXPECT(gbc.readMem(0xbbaf), 0xa9);
        // 30 037E
        gbc.setState(0x4ce4, 0x231d, 0xe810, 0xd845, 0x7cd0, 0x6b9b, 0x1, 0x1);
        gbc.writeMem(0x4ce4, { 0x30, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x231d);
        EXPECT(gbc.pc(), 0x4ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 037F
        gbc.setState(0x5b96, 0x21d6, 0x9c70, 0x9743, 0x2891, 0xb969, 0x0, 0x1);
        gbc.writeMem(0x5b96, { 0x30, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x21d6);
        EXPECT(gbc.pc(), 0x5b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 0380
        gbc.setState(0xe93b, 0x5173, 0x4020, 0x1dce, 0xfab1, 0x5646, 0x0, 0x1);
        gbc.writeMem(0xe93b, { 0x30, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5173);
        EXPECT(gbc.pc(), 0xe998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93b), 0x30);
        EXPECT(gbc.readMem(0xe93c), 0x5b);
        // 30 0381
        gbc.setState(0xd3da, 0xfd70, 0x1240, 0xb5df, 0x2ab7, 0x838f, 0x0, 0x0);
        gbc.writeMem(0xd3da, { 0x30, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfd70);
        EXPECT(gbc.pc(), 0xd3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3da), 0x30);
        EXPECT(gbc.readMem(0xd3db), 0xd8);
        // 30 0382
        gbc.setState(0x4a31, 0x2c02, 0x3b90, 0xfbad, 0xa5cc, 0x5fb, 0x1, 0x0);
        gbc.writeMem(0x4a31, { 0x30, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2c02);
        EXPECT(gbc.pc(), 0x4a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0384
        gbc.setState(0x9cb5, 0xd5c7, 0x32d0, 0xe0d5, 0x1397, 0x6d1d, 0x0, 0x0);
        gbc.writeMem(0x9cb5, { 0x30, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd5c7);
        EXPECT(gbc.pc(), 0x9cb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb5), 0x30);
        EXPECT(gbc.readMem(0x9cb6), 0x50);
        // 30 0385
        gbc.setState(0xcbde, 0xc270, 0xa090, 0x77a, 0x1f86, 0xd484, 0x0, 0x1);
        gbc.writeMem(0xcbde, { 0x30, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc270);
        EXPECT(gbc.pc(), 0xcbe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbde), 0x30);
        EXPECT(gbc.readMem(0xcbdf), 0xcf);
        // 30 0386
        gbc.setState(0xdf27, 0xb125, 0x16c0, 0xf98, 0x79db, 0x5dde, 0x1, 0x0);
        gbc.writeMem(0xdf27, { 0x30, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb125);
        EXPECT(gbc.pc(), 0xdeb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf27), 0x30);
        EXPECT(gbc.readMem(0xdf28), 0x8c);
        // 30 0387
        gbc.setState(0xc9dc, 0x476d, 0x3730, 0xfeee, 0xe97, 0xecb6, 0x1, 0x1);
        gbc.writeMem(0xc9dc, { 0x30, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x476d);
        EXPECT(gbc.pc(), 0xc9de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9dc), 0x30);
        EXPECT(gbc.readMem(0xc9dd), 0x76);
        // 30 0388
        gbc.setState(0x6426, 0x4552, 0x2d0, 0x3e4f, 0xf314, 0x5c40, 0x0, 0x1);
        gbc.writeMem(0x6426, { 0x30, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4552);
        EXPECT(gbc.pc(), 0x6428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 0389
        gbc.setState(0x3c3f, 0xc3a, 0xe070, 0xf4cb, 0x52c8, 0xf533, 0x0, 0x1);
        gbc.writeMem(0x3c3f, { 0x30, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc3a);
        EXPECT(gbc.pc(), 0x3c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 038A
        gbc.setState(0x8ebf, 0x5ef3, 0x7c70, 0xb2df, 0xd574, 0xd5c9, 0x1, 0x0);
        gbc.writeMem(0x8ebf, { 0x30, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5ef3);
        EXPECT(gbc.pc(), 0x8ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ebf), 0x30);
        EXPECT(gbc.readMem(0x8ec0), 0xda);
        // 30 038B
        gbc.setState(0x7acc, 0xcf7f, 0x2240, 0x4d26, 0x4312, 0x2424, 0x0, 0x0);
        gbc.writeMem(0x7acc, { 0x30, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcf7f);
        EXPECT(gbc.pc(), 0x7a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 038C
        gbc.setState(0xceb6, 0xd40c, 0x8c00, 0x9eba, 0x91f3, 0x6b7e, 0x1, 0x0);
        gbc.writeMem(0xceb6, { 0x30, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd40c);
        EXPECT(gbc.pc(), 0xce87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb6), 0x30);
        EXPECT(gbc.readMem(0xceb7), 0xcf);
        // 30 038E
        gbc.setState(0x9662, 0x68d0, 0xe330, 0x3d45, 0xc9e6, 0x784a, 0x1, 0x1);
        gbc.writeMem(0x9662, { 0x30, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x68d0);
        EXPECT(gbc.pc(), 0x9664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9662), 0x30);
        EXPECT(gbc.readMem(0x9663), 0x26);
        // 30 038F
        gbc.setState(0x2090, 0xf4a9, 0xa1a0, 0xee33, 0x8e3d, 0x4154, 0x1, 0x1);
        gbc.writeMem(0x2090, { 0x30, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf4a9);
        EXPECT(gbc.pc(), 0x20c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0390
        gbc.setState(0x13e9, 0xbd6a, 0x1940, 0x1067, 0x855, 0x61d7, 0x0, 0x0);
        gbc.writeMem(0x13e9, { 0x30, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbd6a);
        EXPECT(gbc.pc(), 0x145e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0393
        gbc.setState(0x2ae2, 0xf45f, 0x23a0, 0x10fb, 0xcdca, 0x468c, 0x1, 0x0);
        gbc.writeMem(0x2ae2, { 0x30, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf45f);
        EXPECT(gbc.pc(), 0x2ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0394
        gbc.setState(0x1ec7, 0x5feb, 0xde20, 0x3031, 0xc4ce, 0xcb87, 0x0, 0x1);
        gbc.writeMem(0x1ec7, { 0x30, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5feb);
        EXPECT(gbc.pc(), 0x1ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0396
        gbc.setState(0x584, 0xabf, 0x56e0, 0x55b2, 0xd661, 0x54df, 0x0, 0x0);
        gbc.writeMem(0x584, { 0x30, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xabf);
        EXPECT(gbc.pc(), 0x601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0397
        gbc.setState(0x2a8f, 0x8a5a, 0x40, 0xa92, 0x5a29, 0xb0be, 0x1, 0x1);
        gbc.writeMem(0x2a8f, { 0x30, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8a5a);
        EXPECT(gbc.pc(), 0x2af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 0398
        gbc.setState(0x5e29, 0x1f63, 0x55e0, 0x7aa7, 0xc636, 0xcfc1, 0x1, 0x0);
        gbc.writeMem(0x5e29, { 0x30, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1f63);
        EXPECT(gbc.pc(), 0x5e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 0399
        gbc.setState(0x994b, 0x359c, 0x5230, 0x28e1, 0x88ca, 0x65b8, 0x1, 0x1);
        gbc.writeMem(0x994b, { 0x30, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x359c);
        EXPECT(gbc.pc(), 0x994d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994b), 0x30);
        EXPECT(gbc.readMem(0x994c), 0x80);
        // 30 039A
        gbc.setState(0xd1, 0x32bd, 0xcdf0, 0xd8fe, 0x4d64, 0x3a76, 0x1, 0x0);
        gbc.writeMem(0xd1, { 0x30, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x32bd);
        EXPECT(gbc.pc(), 0xd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 039B
        gbc.setState(0xa2a6, 0xd1b7, 0x2570, 0x608b, 0xb55a, 0x674a, 0x0, 0x0);
        gbc.writeMem(0xa2a6, { 0x30, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd1b7);
        EXPECT(gbc.pc(), 0xa2a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a6), 0x30);
        EXPECT(gbc.readMem(0xa2a7), 0x92);
        // 30 039C
        gbc.setState(0x2a99, 0x9e3f, 0x760, 0xc2ee, 0xa9d3, 0x219c, 0x0, 0x0);
        gbc.writeMem(0x2a99, { 0x30, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9e3f);
        EXPECT(gbc.pc(), 0x2a1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 039D
        gbc.setState(0x743e, 0xa761, 0x28d0, 0x6c2, 0x9049, 0x5ff2, 0x0, 0x1);
        gbc.writeMem(0x743e, { 0x30, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa761);
        EXPECT(gbc.pc(), 0x7440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 039E
        gbc.setState(0x3c61, 0x7700, 0x7300, 0x9433, 0x3a28, 0xa6f9, 0x1, 0x1);
        gbc.writeMem(0x3c61, { 0x30, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7700);
        EXPECT(gbc.pc(), 0x3c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 039F
        gbc.setState(0x242d, 0xda9, 0xf080, 0x2c7, 0xf01e, 0x6337, 0x0, 0x1);
        gbc.writeMem(0x242d, { 0x30, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xda9);
        EXPECT(gbc.pc(), 0x2422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03A0
        gbc.setState(0x26a2, 0x9a40, 0x3e90, 0x6a81, 0x8beb, 0xabed, 0x1, 0x1);
        gbc.writeMem(0x26a2, { 0x30, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9a40);
        EXPECT(gbc.pc(), 0x26a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03A1
        gbc.setState(0x7464, 0x43e0, 0xaeb0, 0x93c0, 0x430d, 0xf5c1, 0x0, 0x0);
        gbc.writeMem(0x7464, { 0x30, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x43e0);
        EXPECT(gbc.pc(), 0x7466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 03A2
        gbc.setState(0x61ca, 0x9bf4, 0xc400, 0xf3d9, 0x894a, 0xb58a, 0x0, 0x0);
        gbc.writeMem(0x61ca, { 0x30, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9bf4);
        EXPECT(gbc.pc(), 0x61e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03A3
        gbc.setState(0x1684, 0x234f, 0xd750, 0x5ecf, 0xb8b6, 0xee5e, 0x1, 0x1);
        gbc.writeMem(0x1684, { 0x30, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x234f);
        EXPECT(gbc.pc(), 0x1686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03A4
        gbc.setState(0x5012, 0x97e7, 0x3ec0, 0xd66f, 0xc9ac, 0xa948, 0x1, 0x0);
        gbc.writeMem(0x5012, { 0x30, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x97e7);
        EXPECT(gbc.pc(), 0x4ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03A5
        gbc.setState(0xad20, 0xce34, 0x4610, 0x4523, 0x409, 0x8ee0, 0x0, 0x0);
        gbc.writeMem(0xad20, { 0x30, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xce34);
        EXPECT(gbc.pc(), 0xad22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad20), 0x30);
        EXPECT(gbc.readMem(0xad21), 0x41);
        // 30 03A6
        gbc.setState(0xdb54, 0xf61b, 0xd0a0, 0x551a, 0x8f2f, 0x75c3, 0x0, 0x1);
        gbc.writeMem(0xdb54, { 0x30, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf61b);
        EXPECT(gbc.pc(), 0xdb0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb54), 0x30);
        EXPECT(gbc.readMem(0xdb55), 0xb4);
        // 30 03A7
        gbc.setState(0x3cc3, 0xe6d0, 0x9e70, 0x4882, 0x5fde, 0xca05, 0x1, 0x1);
        gbc.writeMem(0x3cc3, { 0x30, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe6d0);
        EXPECT(gbc.pc(), 0x3cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 03A8
        gbc.setState(0x5e14, 0xd630, 0xeb20, 0xfcd1, 0xaa64, 0xefc5, 0x0, 0x0);
        gbc.writeMem(0x5e14, { 0x30, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd630);
        EXPECT(gbc.pc(), 0x5e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 03A9
        gbc.setState(0x8a80, 0xc295, 0xa1d0, 0x970e, 0x5f72, 0x7e41, 0x1, 0x0);
        gbc.writeMem(0x8a80, { 0x30, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc295);
        EXPECT(gbc.pc(), 0x8a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a80), 0x30);
        EXPECT(gbc.readMem(0x8a81), 0x3b);
        // 30 03AB
        gbc.setState(0x4431, 0x1525, 0xe4d0, 0xd2c, 0x48f4, 0x7b8d, 0x1, 0x1);
        gbc.writeMem(0x4431, { 0x30, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1525);
        EXPECT(gbc.pc(), 0x4433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03AC
        gbc.setState(0x4bf4, 0xde8b, 0x5dd0, 0x7b7a, 0x9fd9, 0xa5c4, 0x0, 0x1);
        gbc.writeMem(0x4bf4, { 0x30, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xde8b);
        EXPECT(gbc.pc(), 0x4bf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03AD
        gbc.setState(0xc8b7, 0x69b1, 0xd3b0, 0x2b6c, 0xcb99, 0x5a00, 0x0, 0x1);
        gbc.writeMem(0xc8b7, { 0x30, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x69b1);
        EXPECT(gbc.pc(), 0xc8b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b7), 0x30);
        EXPECT(gbc.readMem(0xc8b8), 0x98);
        // 30 03AE
        gbc.setState(0xce2a, 0xad49, 0xed20, 0x9a67, 0xdf2, 0x4e0d, 0x1, 0x1);
        gbc.writeMem(0xce2a, { 0x30, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xad49);
        EXPECT(gbc.pc(), 0xce57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2a), 0x30);
        EXPECT(gbc.readMem(0xce2b), 0x2b);
        // 30 03AF
        gbc.setState(0x58a7, 0x4da6, 0x8490, 0xb4b1, 0x835f, 0x7b8a, 0x0, 0x0);
        gbc.writeMem(0x58a7, { 0x30, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4da6);
        EXPECT(gbc.pc(), 0x58a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03B0
        gbc.setState(0xcb4e, 0x8f62, 0x8ad0, 0x7349, 0x8dd, 0xc1a5, 0x1, 0x0);
        gbc.writeMem(0xcb4e, { 0x30, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8f62);
        EXPECT(gbc.pc(), 0xcb50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb4e), 0x30);
        EXPECT(gbc.readMem(0xcb4f), 0x33);
        // 30 03B1
        gbc.setState(0xbd8b, 0xa880, 0x4e00, 0xb4f7, 0x244f, 0xca58, 0x0, 0x1);
        gbc.writeMem(0xbd8b, { 0x30, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa880);
        EXPECT(gbc.pc(), 0xbd3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd8b), 0x30);
        EXPECT(gbc.readMem(0xbd8c), 0xb2);
        // 30 03B2
        gbc.setState(0xd6a1, 0xfb50, 0xe630, 0x8bbf, 0x6d2b, 0x7494, 0x1, 0x1);
        gbc.writeMem(0xd6a1, { 0x30, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfb50);
        EXPECT(gbc.pc(), 0xd6a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a1), 0x30);
        EXPECT(gbc.readMem(0xd6a2), 0x9b);
        // 30 03B3
        gbc.setState(0x1ae7, 0x2e7c, 0x9230, 0x6bb9, 0x4446, 0x6d15, 0x1, 0x0);
        gbc.writeMem(0x1ae7, { 0x30, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2e7c);
        EXPECT(gbc.pc(), 0x1ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 03B4
        gbc.setState(0xb649, 0xdabb, 0xf770, 0x2777, 0xd028, 0x89b6, 0x1, 0x0);
        gbc.writeMem(0xb649, { 0x30, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdabb);
        EXPECT(gbc.pc(), 0xb64b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb649), 0x30);
        EXPECT(gbc.readMem(0xb64a), 0x23);
        // 30 03B5
        gbc.setState(0x1a02, 0xd4c0, 0x74a0, 0x156, 0x6dbf, 0xf7f7, 0x1, 0x0);
        gbc.writeMem(0x1a02, { 0x30, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd4c0);
        EXPECT(gbc.pc(), 0x19e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 03B6
        gbc.setState(0x82b6, 0xc7a3, 0xec60, 0x6a56, 0xc30c, 0x3826, 0x1, 0x1);
        gbc.writeMem(0x82b6, { 0x30, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc7a3);
        EXPECT(gbc.pc(), 0x8320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b6), 0x30);
        EXPECT(gbc.readMem(0x82b7), 0x68);
        // 30 03B7
        gbc.setState(0x6fe4, 0xd16d, 0xaa0, 0xdfbe, 0xa2d2, 0x7dc0, 0x0, 0x0);
        gbc.writeMem(0x6fe4, { 0x30, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd16d);
        EXPECT(gbc.pc(), 0x6fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 03B8
        gbc.setState(0x6290, 0xec75, 0x1b10, 0x798c, 0x6707, 0x4ed, 0x0, 0x0);
        gbc.writeMem(0x6290, { 0x30, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xec75);
        EXPECT(gbc.pc(), 0x6292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03B9
        gbc.setState(0xa730, 0x1ade, 0xa2f0, 0xc606, 0xcefd, 0x7fdd, 0x0, 0x0);
        gbc.writeMem(0xa730, { 0x30, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1ade);
        EXPECT(gbc.pc(), 0xa732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa730), 0x30);
        EXPECT(gbc.readMem(0xa731), 0x33);
        // 30 03BA
        gbc.setState(0xabbd, 0xa3f7, 0x84f0, 0x3432, 0x6def, 0xbf51, 0x0, 0x0);
        gbc.writeMem(0xabbd, { 0x30, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa3f7);
        EXPECT(gbc.pc(), 0xabbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabbd), 0x30);
        EXPECT(gbc.readMem(0xabbe), 0xcf);
        // 30 03BB
        gbc.setState(0x7642, 0x8a79, 0x1b40, 0x1ddc, 0x7bed, 0x7c26, 0x1, 0x1);
        gbc.writeMem(0x7642, { 0x30, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8a79);
        EXPECT(gbc.pc(), 0x75d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03BC
        gbc.setState(0x4900, 0x6020, 0xc610, 0x4160, 0x4b55, 0x308a, 0x1, 0x1);
        gbc.writeMem(0x4900, { 0x30, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6020);
        EXPECT(gbc.pc(), 0x4902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03BD
        gbc.setState(0xa78f, 0xffb6, 0x59f0, 0x7325, 0x113b, 0x55ed, 0x1, 0x1);
        gbc.writeMem(0xa78f, { 0x30, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xffb6);
        EXPECT(gbc.pc(), 0xa791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78f), 0x30);
        EXPECT(gbc.readMem(0xa790), 0xfa);
        // 30 03BE
        gbc.setState(0xc5b0, 0xfa8a, 0xb8e0, 0x6c, 0x7f36, 0xaac1, 0x0, 0x1);
        gbc.writeMem(0xc5b0, { 0x30, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfa8a);
        EXPECT(gbc.pc(), 0xc594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b0), 0x30);
        EXPECT(gbc.readMem(0xc5b1), 0xe2);
        // 30 03BF
        gbc.setState(0x8d15, 0x95d2, 0x9980, 0x7183, 0x7508, 0x1748, 0x1, 0x1);
        gbc.writeMem(0x8d15, { 0x30, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x95d2);
        EXPECT(gbc.pc(), 0x8d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d15), 0x30);
        EXPECT(gbc.readMem(0x8d16), 0x3);
        // 30 03C0
        gbc.setState(0x3b1, 0xe765, 0x75a0, 0xea00, 0xd85f, 0x2002, 0x1, 0x0);
        gbc.writeMem(0x3b1, { 0x30, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe765);
        EXPECT(gbc.pc(), 0x359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 03C1
        gbc.setState(0x63e3, 0x3e85, 0x4250, 0x41fd, 0xfd40, 0x30cb, 0x1, 0x0);
        gbc.writeMem(0x63e3, { 0x30, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3e85);
        EXPECT(gbc.pc(), 0x63e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03C2
        gbc.setState(0xc738, 0xcf58, 0x5840, 0xc10d, 0xbd10, 0xb678, 0x0, 0x1);
        gbc.writeMem(0xc738, { 0x30, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcf58);
        EXPECT(gbc.pc(), 0xc6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc738), 0x30);
        EXPECT(gbc.readMem(0xc739), 0xa3);
        // 30 03C3
        gbc.setState(0x45f2, 0xddad, 0xfe10, 0x6335, 0xbd16, 0xa114, 0x1, 0x0);
        gbc.writeMem(0x45f2, { 0x30, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xddad);
        EXPECT(gbc.pc(), 0x45f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03C4
        gbc.setState(0xb77, 0x2e3b, 0x92e0, 0x7294, 0x3284, 0x1a13, 0x0, 0x0);
        gbc.writeMem(0xb77, { 0x30, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2e3b);
        EXPECT(gbc.pc(), 0xb48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 03C5
        gbc.setState(0x2c7c, 0x55d3, 0x4ef0, 0x6123, 0x1650, 0x272f, 0x1, 0x0);
        gbc.writeMem(0x2c7c, { 0x30, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x55d3);
        EXPECT(gbc.pc(), 0x2c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 03C6
        gbc.setState(0xd5b5, 0xdba5, 0xab70, 0x4364, 0xa62, 0xee63, 0x1, 0x0);
        gbc.writeMem(0xd5b5, { 0x30, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xdba5);
        EXPECT(gbc.pc(), 0xd5b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b5), 0x30);
        EXPECT(gbc.readMem(0xd5b6), 0x8f);
        // 30 03C7
        gbc.setState(0x58fe, 0x6a21, 0xeb80, 0x33f3, 0x3291, 0xabbf, 0x0, 0x1);
        gbc.writeMem(0x58fe, { 0x30, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6a21);
        EXPECT(gbc.pc(), 0x597c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03C8
        gbc.setState(0x993a, 0xdb98, 0x8850, 0x271d, 0xf0de, 0x86a0, 0x0, 0x0);
        gbc.writeMem(0x993a, { 0x30, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xdb98);
        EXPECT(gbc.pc(), 0x993c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993a), 0x30);
        EXPECT(gbc.readMem(0x993b), 0x4d);
        // 30 03C9
        gbc.setState(0x521a, 0x9249, 0x72c0, 0x9ddf, 0x4aa, 0x330d, 0x0, 0x0);
        gbc.writeMem(0x521a, { 0x30, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9249);
        EXPECT(gbc.pc(), 0x521a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03CA
        gbc.setState(0xbc41, 0x5092, 0xb0a0, 0xcfc8, 0x57c0, 0x33d, 0x0, 0x0);
        gbc.writeMem(0xbc41, { 0x30, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5092);
        EXPECT(gbc.pc(), 0xbc9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc41), 0x30);
        EXPECT(gbc.readMem(0xbc42), 0x59);
        // 30 03CB
        gbc.setState(0xb37a, 0x6665, 0xce80, 0x5d9f, 0x2636, 0x3762, 0x0, 0x1);
        gbc.writeMem(0xb37a, { 0x30, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6665);
        EXPECT(gbc.pc(), 0xb389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37a), 0x30);
        EXPECT(gbc.readMem(0xb37b), 0xd);
        // 30 03CC
        gbc.setState(0xc0ba, 0x5d56, 0x7e30, 0xa19d, 0xd494, 0xf2eb, 0x0, 0x1);
        gbc.writeMem(0xc0ba, { 0x30, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5d56);
        EXPECT(gbc.pc(), 0xc0bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ba), 0x30);
        EXPECT(gbc.readMem(0xc0bb), 0x8e);
        // 30 03CD
        gbc.setState(0xe241, 0x8130, 0xa430, 0xbb77, 0x55d, 0x8879, 0x0, 0x1);
        gbc.writeMem(0xe241, { 0x30, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8130);
        EXPECT(gbc.pc(), 0xe243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe241), 0x30);
        EXPECT(gbc.readMem(0xe242), 0xc1);
        // 30 03CE
        gbc.setState(0x4ec6, 0x1209, 0x20d0, 0x756f, 0xb055, 0xb3ca, 0x0, 0x0);
        gbc.writeMem(0x4ec6, { 0x30, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1209);
        EXPECT(gbc.pc(), 0x4ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03CF
        gbc.setState(0xca5e, 0x6315, 0x5950, 0xb110, 0x41c3, 0xbdd5, 0x0, 0x0);
        gbc.writeMem(0xca5e, { 0x30, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6315);
        EXPECT(gbc.pc(), 0xca60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca5e), 0x30);
        EXPECT(gbc.readMem(0xca5f), 0xae);
        // 30 03D0
        gbc.setState(0x39c5, 0x3b85, 0xf650, 0xe715, 0xf824, 0xe9c9, 0x1, 0x1);
        gbc.writeMem(0x39c5, { 0x30, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3b85);
        EXPECT(gbc.pc(), 0x39c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03D1
        gbc.setState(0x7e79, 0x6555, 0x1870, 0x7f90, 0x77bb, 0xfa8b, 0x1, 0x1);
        gbc.writeMem(0x7e79, { 0x30, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6555);
        EXPECT(gbc.pc(), 0x7e7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 03D2
        gbc.setState(0x2588, 0xace9, 0xbc50, 0x6950, 0xddd7, 0x5762, 0x1, 0x1);
        gbc.writeMem(0x2588, { 0x30, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xace9);
        EXPECT(gbc.pc(), 0x258a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03D3
        gbc.setState(0xc5e1, 0xf7f2, 0xa0c0, 0xc89a, 0xf6bb, 0xc3d9, 0x0, 0x1);
        gbc.writeMem(0xc5e1, { 0x30, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf7f2);
        EXPECT(gbc.pc(), 0xc65d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e1), 0x30);
        EXPECT(gbc.readMem(0xc5e2), 0x7a);
        // 30 03D4
        gbc.setState(0x3eb1, 0x5062, 0x9940, 0xdab0, 0xd561, 0xb5e6, 0x0, 0x1);
        gbc.writeMem(0x3eb1, { 0x30, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5062);
        EXPECT(gbc.pc(), 0x3e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03D6
        gbc.setState(0x1821, 0xa526, 0x3e0, 0xe75e, 0x4363, 0x54fe, 0x0, 0x1);
        gbc.writeMem(0x1821, { 0x30, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa526);
        EXPECT(gbc.pc(), 0x1883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 30 03D7
        gbc.setState(0xcb69, 0x65a6, 0xda00, 0xbb88, 0x6d90, 0xa61d, 0x1, 0x1);
        gbc.writeMem(0xcb69, { 0x30, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x65a6);
        EXPECT(gbc.pc(), 0xcbc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb69), 0x30);
        EXPECT(gbc.readMem(0xcb6a), 0x5c);
        // 30 03D8
        gbc.setState(0x46cc, 0x5600, 0x2040, 0x6b0c, 0x3238, 0xe9ed, 0x0, 0x1);
        gbc.writeMem(0x46cc, { 0x30, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5600);
        EXPECT(gbc.pc(), 0x465f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03DB
        gbc.setState(0x4566, 0x42d1, 0x11c0, 0xda8d, 0x7a7d, 0x1a6d, 0x1, 0x0);
        gbc.writeMem(0x4566, { 0x30, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x42d1);
        EXPECT(gbc.pc(), 0x4500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03DC
        gbc.setState(0x773, 0xba64, 0x2df0, 0x5688, 0xf5b9, 0x93e3, 0x1, 0x1);
        gbc.writeMem(0x773, { 0x30, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xba64);
        EXPECT(gbc.pc(), 0x775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 30 03DD
        gbc.setState(0xc336, 0x506e, 0x9050, 0xd070, 0x8974, 0x593d, 0x0, 0x0);
        gbc.writeMem(0xc336, { 0x30, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x506e);
        EXPECT(gbc.pc(), 0xc338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc336), 0x30);
        EXPECT(gbc.readMem(0xc337), 0xa);
        // 30 03DE
        gbc.setState(0x1159, 0xe093, 0x4080, 0x6ee6, 0x6595, 0xabfa, 0x1, 0x1);
        gbc.writeMem(0x1159, { 0x30, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe093);
        EXPECT(gbc.pc(), 0x1106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03E0
        gbc.setState(0x6ecb, 0x5899, 0x6b50, 0x4b8a, 0xe973, 0xfa6b, 0x1, 0x0);
        gbc.writeMem(0x6ecb, { 0x30, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5899);
        EXPECT(gbc.pc(), 0x6ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03E1
        gbc.setState(0x3fd0, 0x79eb, 0xb6d0, 0x248b, 0x1285, 0x4145, 0x1, 0x0);
        gbc.writeMem(0x3fd0, { 0x30, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x79eb);
        EXPECT(gbc.pc(), 0x3fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 30 03E2
        gbc.setState(0x8fcf, 0xb587, 0xcfe0, 0x78ee, 0x1cad, 0x4940, 0x1, 0x0);
        gbc.writeMem(0x8fcf, { 0x30, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb587);
        EXPECT(gbc.pc(), 0x8f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fcf), 0x30);
        EXPECT(gbc.readMem(0x8fd0), 0x8c);
        // 30 03E3
        gbc.setState(0x8b91, 0x5cc6, 0xcd90, 0x9d94, 0x59b1, 0x98de, 0x0, 0x1);
        gbc.writeMem(0x8b91, { 0x30, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5cc6);
        EXPECT(gbc.pc(), 0x8b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b91), 0x30);
        EXPECT(gbc.readMem(0x8b92), 0x57);
        // 30 03E4
        gbc.setState(0x9454, 0x401a, 0x7800, 0x704f, 0xf0cc, 0x6d40, 0x0, 0x1);
        gbc.writeMem(0x9454, { 0x30, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x401a);
        EXPECT(gbc.pc(), 0x93f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9454), 0x30);
        EXPECT(gbc.readMem(0x9455), 0xa1);
        // 30 03E5
        gbc.setState(0x881a, 0xc5d8, 0x35c0, 0x131d, 0xa8fa, 0xb635, 0x0, 0x1);
        gbc.writeMem(0x881a, { 0x30, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc5d8);
        EXPECT(gbc.pc(), 0x8852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881a), 0x30);
        EXPECT(gbc.readMem(0x881b), 0x36);
        // 30 03E6
        gbc.setState(0x75c8, 0x3086, 0x8440, 0xc5d9, 0x6d45, 0x2868, 0x0, 0x0);
        gbc.writeMem(0x75c8, { 0x30, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3086);
        EXPECT(gbc.pc(), 0x756c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 30 03E7
        gbc.setState(0x66bc, 0x8e3f, 0x4c60, 0xc03e, 0xfe08, 0x518f, 0x0, 0x1);
        gbc.writeMem(0x66bc, { 0x30, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8e3f);
        EXPECT(gbc.pc(), 0x66d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
